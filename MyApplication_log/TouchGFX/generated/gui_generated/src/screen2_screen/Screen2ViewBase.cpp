/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen2_screen/Screen2ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen2ViewBase::Screen2ViewBase() :
    buttonCallback(this, &Screen2ViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &Screen2ViewBase::flexButtonCallbackHandler),
    customContainerKeyboard1TriggerKeyboardCallback(this, &Screen2ViewBase::customContainerKeyboard1TriggerKeyboardCallbackHandler),
    customContainerKeyboard_Num1TriggerKeyboard_NumCallback(this, &Screen2ViewBase::customContainerKeyboard_Num1TriggerKeyboard_NumCallbackHandler)
{

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    button1.setXY(0, 0);
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    button1.setAction(buttonCallback);

    customContainerKeyboard1.setXY(0, 480);
    customContainerKeyboard1.setTriggerKeyboardCallback(customContainerKeyboard1TriggerKeyboardCallback);

    flexButton_text_out.setBoxWithBorderPosition(0, 0, 384, 50);
    flexButton_text_out.setBorderSize(5);
    flexButton_text_out.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton_text_out.setIconBitmaps(Bitmap(BITMAP_KEYBOARD_ID), Bitmap(BITMAP_KEYBOARD_ID));
    flexButton_text_out.setIconXY(354, 14);
    flexButton_text_out.setWildcardText(TypedText(T_RESOURCEID16));
    flexButton_text_outBuffer[0] = 0;
    flexButton_text_out.setWildcardTextBuffer(flexButton_text_outBuffer);
    flexButton_text_out.setWildcardTextPosition(0, 0, 384, 50);
    flexButton_text_out.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
    flexButton_text_out.setPosition(407, 25, 384, 50);
    flexButton_text_out.setAction(flexButtonCallback);

    customContainerKeyboard_Num1.setXY(-270, 180);
    customContainerKeyboard_Num1.setTriggerKeyboard_NumCallback(customContainerKeyboard_Num1TriggerKeyboard_NumCallback);

    flexButton_text_out_Num.setBoxWithBorderPosition(0, 0, 199, 45);
    flexButton_text_out_Num.setBorderSize(1);
    flexButton_text_out_Num.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton_text_out_Num.setWildcardText(TypedText(T___SINGLEUSE_TZP8));
    Unicode::snprintf(flexButton_text_out_NumBuffer, FLEXBUTTON_TEXT_OUT_NUM_SIZE, "%s", TypedText(T___SINGLEUSE_D72U).getText());
    flexButton_text_out_Num.setWildcardTextBuffer(flexButton_text_out_NumBuffer);
    flexButton_text_out_Num.setWildcardTextPosition(0, 7, 199, 45);
    flexButton_text_out_Num.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
    flexButton_text_out_Num.setPosition(178, 30, 199, 45);
    flexButton_text_out_Num.setAction(flexButtonCallback);

    flexButtonSave.setBoxWithBorderPosition(0, 0, 160, 70);
    flexButtonSave.setBorderSize(5);
    flexButtonSave.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButtonSave.setText(TypedText(T___SINGLEUSE_QKLS));
    flexButtonSave.setTextPosition(0, 10, 160, 70);
    flexButtonSave.setTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
    flexButtonSave.setPosition(631, 368, 160, 70);
    flexButtonSave.setAction(flexButtonCallback);

    modalWindow1.setBackground(touchgfx::BitmapId(BITMAP_DARK_BACKGROUNDS_MAIN_BG_320X240PX_ID), 240, 120);
    modalWindow1.setShadeColor(touchgfx::Color::getColorFromRGB(28, 28, 28));
    modalWindow1.setShadeAlpha(149);
    modalWindow1.hide();

    flexButtonSaveNo.setBoxWithBorderPosition(0, 0, 100, 70);
    flexButtonSaveNo.setBorderSize(5);
    flexButtonSaveNo.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButtonSaveNo.setText(TypedText(T___SINGLEUSE_XFCU));
    flexButtonSaveNo.setTextPosition(0, 20, 100, 70);
    flexButtonSaveNo.setTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
    flexButtonSaveNo.setPosition(196, 120, 100, 70);
    flexButtonSaveNo.setAction(flexButtonCallback);
    modalWindow1.add(flexButtonSaveNo);

    flexButtonSaveYes.setBoxWithBorderPosition(0, 0, 100, 70);
    flexButtonSaveYes.setBorderSize(5);
    flexButtonSaveYes.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButtonSaveYes.setText(TypedText(T___SINGLEUSE_KVEN));
    flexButtonSaveYes.setTextPosition(0, 20, 100, 70);
    flexButtonSaveYes.setTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
    flexButtonSaveYes.setPosition(37, 120, 100, 70);
    flexButtonSaveYes.setAction(flexButtonCallback);
    modalWindow1.add(flexButtonSaveYes);

    textArea1.setXY(50, 60);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5CIK));
    modalWindow1.add(textArea1);

    add(__background);
    add(button1);
    add(customContainerKeyboard1);
    add(flexButton_text_out);
    add(customContainerKeyboard_Num1);
    add(flexButton_text_out_Num);
    add(flexButtonSave);
    add(modalWindow1);
}

void Screen2ViewBase::setupScreen()
{
    customContainerKeyboard1.initialize();
    customContainerKeyboard_Num1.initialize();
}

void Screen2ViewBase::customContainerKeyboard1TriggerKeyboardCallbackHandler()
{
    //Interaction1
    //When customContainerKeyboard1 triggerKeyboard call virtual function
    //Call CallbackcustomContainerKeyboard
    CallbackcustomContainerKeyboard();
}

void Screen2ViewBase::customContainerKeyboard_Num1TriggerKeyboard_NumCallbackHandler()
{
    //Interaction4
    //When customContainerKeyboard_Num1 triggerKeyboard_Num call virtual function
    //Call CallbackcustomContainerKeyboard_Num
    CallbackcustomContainerKeyboard_Num();
}

void Screen2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
    {
        //Interaction8
        //When button1 clicked change screen to Screen1
        //Go to Screen1 with no screen transition
        application().gotoScreen1ScreenNoTransition();
    }
}

void Screen2ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton_text_out)
    {
        //Interaction2
        //When flexButton_text_out clicked call virtual function
        //Call function2
        function2();
    }
    else if (&src == &flexButton_text_out_Num)
    {
        //Interaction3
        //When flexButton_text_out_Num clicked call virtual function
        //Call function3
        function3();
    }
    else if (&src == &flexButtonSave)
    {
        //Interaction5
        //When flexButtonSave clicked call virtual function
        //Call functionSaveSettings
        functionSaveSettings();
    }
    else if (&src == &flexButtonSaveNo)
    {
        //Interaction7
        //When flexButtonSaveNo clicked call virtual function
        //Call functionSaveModalWindow
        functionSaveModalWindow();
    }
    else if (&src == &flexButtonSaveYes)
    {
        //Interaction6
        //When flexButtonSaveYes clicked call virtual function
        //Call functionSaveModalWindow
        functionSaveModalWindow();
    }
}
