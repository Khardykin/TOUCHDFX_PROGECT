/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/CustomContainerKeyboardBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

CustomContainerKeyboardBase::CustomContainerKeyboardBase() :
    flexButtonCallback(this, &CustomContainerKeyboardBase::flexButtonCallbackHandler),
    customContainer1TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer1TriggerButton_keyCallbackHandler),
    customContainer2TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer2TriggerButton_keyCallbackHandler),
    customContainer3TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer3TriggerButton_keyCallbackHandler),
    customContainer4TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer4TriggerButton_keyCallbackHandler),
    customContainer5TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer5TriggerButton_keyCallbackHandler),
    customContainer6TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer6TriggerButton_keyCallbackHandler),
    customContainer7TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer7TriggerButton_keyCallbackHandler),
    customContainer8TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer8TriggerButton_keyCallbackHandler),
    customContainer9TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer9TriggerButton_keyCallbackHandler),
    customContainer10TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer10TriggerButton_keyCallbackHandler),
    customContainer11TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer11TriggerButton_keyCallbackHandler),
    customContainer12TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer12TriggerButton_keyCallbackHandler),
    customContainer1_1TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer1_1TriggerButton_keyCallbackHandler),
    customContainer2_1TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer2_1TriggerButton_keyCallbackHandler),
    customContainer3_1TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer3_1TriggerButton_keyCallbackHandler),
    customContainer4_1TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer4_1TriggerButton_keyCallbackHandler),
    customContainer5_1TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer5_1TriggerButton_keyCallbackHandler),
    customContainer6_1TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer6_1TriggerButton_keyCallbackHandler),
    customContainer7_1TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer7_1TriggerButton_keyCallbackHandler),
    customContainer8_1TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer8_1TriggerButton_keyCallbackHandler),
    customContainer9_1TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer9_1TriggerButton_keyCallbackHandler),
    customContainer10_1TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer10_1TriggerButton_keyCallbackHandler),
    customContainer1_2TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer1_2TriggerButton_keyCallbackHandler),
    customContainer2_2TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer2_2TriggerButton_keyCallbackHandler),
    customContainer3_2TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer3_2TriggerButton_keyCallbackHandler),
    customContainer4_2TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer4_2TriggerButton_keyCallbackHandler),
    customContainer5_2TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer5_2TriggerButton_keyCallbackHandler),
    customContainer6_2TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer6_2TriggerButton_keyCallbackHandler),
    customContainer7_2TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer7_2TriggerButton_keyCallbackHandler),
    customContainer8_2TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer8_2TriggerButton_keyCallbackHandler),
    customContainer9_2TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer9_2TriggerButton_keyCallbackHandler),
    customContainer10_2TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer10_2TriggerButton_keyCallbackHandler),
    customContainer11_1TriggerButton_keyCallback(this, &CustomContainerKeyboardBase::customContainer11_1TriggerButton_keyCallbackHandler),
    triggerKeyboardCallback(0)
{
    setWidth(800);
    setHeight(300);
    boxWithBorder1.setPosition(-5, 0, 800, 300);
    boxWithBorder1.setColor(touchgfx::Color::getColorFromRGB(154, 155, 156));
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFromRGB(98, 99, 99));
    boxWithBorder1.setBorderSize(6);

    customContainer1.setXY(35, 51);
    customContainer1.setTriggerButton_keyCallback(customContainer1TriggerButton_keyCallback);

    customContainer2.setXY(96, 51);
    customContainer2.setTriggerButton_keyCallback(customContainer2TriggerButton_keyCallback);

    customContainer3.setXY(157, 51);
    customContainer3.setTriggerButton_keyCallback(customContainer3TriggerButton_keyCallback);

    customContainer4.setXY(218, 51);
    customContainer4.setTriggerButton_keyCallback(customContainer4TriggerButton_keyCallback);

    customContainer5.setXY(279, 51);
    customContainer5.setTriggerButton_keyCallback(customContainer5TriggerButton_keyCallback);

    customContainer6.setXY(340, 51);
    customContainer6.setTriggerButton_keyCallback(customContainer6TriggerButton_keyCallback);

    customContainer7.setXY(401, 51);
    customContainer7.setTriggerButton_keyCallback(customContainer7TriggerButton_keyCallback);

    customContainer8.setXY(462, 51);
    customContainer8.setTriggerButton_keyCallback(customContainer8TriggerButton_keyCallback);

    customContainer9.setXY(523, 51);
    customContainer9.setTriggerButton_keyCallback(customContainer9TriggerButton_keyCallback);

    customContainer10.setXY(584, 51);
    customContainer10.setTriggerButton_keyCallback(customContainer10TriggerButton_keyCallback);

    customContainer1_1.setXY(35, 112);
    customContainer1_1.setTriggerButton_keyCallback(customContainer1_1TriggerButton_keyCallback);

    customContainer2_1.setXY(96, 112);
    customContainer2_1.setTriggerButton_keyCallback(customContainer2_1TriggerButton_keyCallback);

    customContainer3_1.setXY(157, 112);
    customContainer3_1.setTriggerButton_keyCallback(customContainer3_1TriggerButton_keyCallback);

    customContainer4_1.setXY(218, 112);
    customContainer4_1.setTriggerButton_keyCallback(customContainer4_1TriggerButton_keyCallback);

    customContainer5_1.setXY(279, 112);
    customContainer5_1.setTriggerButton_keyCallback(customContainer5_1TriggerButton_keyCallback);

    customContainer6_1.setXY(340, 112);
    customContainer6_1.setTriggerButton_keyCallback(customContainer6_1TriggerButton_keyCallback);

    customContainer7_1.setXY(401, 112);
    customContainer7_1.setTriggerButton_keyCallback(customContainer7_1TriggerButton_keyCallback);

    customContainer8_1.setXY(462, 112);
    customContainer8_1.setTriggerButton_keyCallback(customContainer8_1TriggerButton_keyCallback);

    customContainer9_1.setXY(523, 112);
    customContainer9_1.setTriggerButton_keyCallback(customContainer9_1TriggerButton_keyCallback);

    customContainer10_1.setXY(584, 112);
    customContainer10_1.setTriggerButton_keyCallback(customContainer10_1TriggerButton_keyCallback);

    customContainer1_2.setXY(96, 173);
    customContainer1_2.setTriggerButton_keyCallback(customContainer1_2TriggerButton_keyCallback);

    customContainer2_2.setXY(157, 173);
    customContainer2_2.setTriggerButton_keyCallback(customContainer2_2TriggerButton_keyCallback);

    customContainer3_2.setXY(218, 173);
    customContainer3_2.setTriggerButton_keyCallback(customContainer3_2TriggerButton_keyCallback);

    customContainer4_2.setXY(279, 173);
    customContainer4_2.setTriggerButton_keyCallback(customContainer4_2TriggerButton_keyCallback);

    customContainer5_2.setXY(340, 173);
    customContainer5_2.setTriggerButton_keyCallback(customContainer5_2TriggerButton_keyCallback);

    customContainer6_2.setXY(401, 173);
    customContainer6_2.setTriggerButton_keyCallback(customContainer6_2TriggerButton_keyCallback);

    customContainer7_2.setXY(462, 173);
    customContainer7_2.setTriggerButton_keyCallback(customContainer7_2TriggerButton_keyCallback);

    customContainer8_2.setXY(523, 173);
    customContainer8_2.setTriggerButton_keyCallback(customContainer8_2TriggerButton_keyCallback);

    customContainer9_2.setXY(584, 173);
    customContainer9_2.setTriggerButton_keyCallback(customContainer9_2TriggerButton_keyCallback);

    customContainer10_2.setXY(645, 173);
    customContainer10_2.setTriggerButton_keyCallback(customContainer10_2TriggerButton_keyCallback);

    textArea1.setPosition(35, 21, 720, 30);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T_RESOURCEID2).getText());
    textArea1.setWildcard(textArea1Buffer);
    textArea1.setTypedText(touchgfx::TypedText(T_RESOURCEID3));

    flexButton_enter.setBoxWithBorderPosition(0, 0, 60, 121);
    flexButton_enter.setBorderSize(1);
    flexButton_enter.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton_enter.setText(TypedText(T___SINGLEUSE_CLAL));
    flexButton_enter.setTextPosition(0, 52, 60, 121);
    flexButton_enter.setTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
    flexButton_enter.setPosition(706, 173, 60, 121);
    flexButton_enter.setAction(flexButtonCallback);

    flexButton_space.setBoxWithBorderPosition(0, 0, 426, 60);
    flexButton_space.setBorderSize(1);
    flexButton_space.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton_space.setWildcardText(TypedText(T_RESOURCEID15));
    flexButton_spaceBuffer[0] = 0;
    flexButton_space.setWildcardTextBuffer(flexButton_spaceBuffer);
    flexButton_space.setWildcardTextPosition(0, 0, 426, 60);
    flexButton_space.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
    flexButton_space.setPosition(218, 234, 426, 60);
    flexButton_space.setAction(flexButtonCallback);

    flexButton_language.setBoxWithBorderPosition(0, 0, 60, 60);
    flexButton_language.setBorderSize(1);
    flexButton_language.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton_language.setWildcardText(TypedText(T_RESOURCEID13));
    Unicode::snprintf(flexButton_languageBuffer, FLEXBUTTON_LANGUAGE_SIZE, "%s", TypedText(T_RESOURCEID4).getText());
    flexButton_language.setWildcardTextBuffer(flexButton_languageBuffer);
    flexButton_language.setWildcardTextPosition(0, 20, 60, 60);
    flexButton_language.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
    flexButton_language.setPosition(157, 234, 60, 60);
    flexButton_language.setAction(flexButtonCallback);

    customContainer11_1.setXY(645, 112);
    customContainer11_1.setTriggerButton_keyCallback(customContainer11_1TriggerButton_keyCallback);

    customContainer11.setXY(645, 51);
    customContainer11.setTriggerButton_keyCallback(customContainer11TriggerButton_keyCallback);

    customContainer12.setXY(706, 51);
    customContainer12.setTriggerButton_keyCallback(customContainer12TriggerButton_keyCallback);

    flexButton_close.setBoxWithBorderPosition(0, 0, 60, 60);
    flexButton_close.setBorderSize(1);
    flexButton_close.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton_close.setWildcardText(TypedText(T_RESOURCEID14));
    Unicode::snprintf(flexButton_closeBuffer, FLEXBUTTON_CLOSE_SIZE, "%s", TypedText(T_RESOURCEID5).getText());
    flexButton_close.setWildcardTextBuffer(flexButton_closeBuffer);
    flexButton_close.setWildcardTextPosition(0, 20, 60, 60);
    flexButton_close.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
    flexButton_close.setPosition(96, 234, 60, 60);
    flexButton_close.setAction(flexButtonCallback);

    flexButton_shift.setBoxWithBorderPosition(0, 0, 60, 121);
    flexButton_shift.setBorderSize(1);
    flexButton_shift.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton_shift.setText(TypedText(T___SINGLEUSE_DBNX));
    flexButton_shift.setTextPosition(0, 20, 60, 60);
    flexButton_shift.setTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
    flexButton_shift.setPosition(35, 173, 60, 60);
    flexButton_shift.setAction(flexButtonCallback);

    flexButton_del_all.setBoxWithBorderPosition(0, 0, 60, 60);
    flexButton_del_all.setBorderSize(1);
    flexButton_del_all.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton_del_all.setText(TypedText(T___SINGLEUSE_HLSL));
    flexButton_del_all.setTextPosition(0, 20, 60, 60);
    flexButton_del_all.setTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
    flexButton_del_all.setPosition(645, 234, 60, 60);
    flexButton_del_all.setAction(flexButtonCallback);

    flexButton_del_pre.setBoxWithBorderPosition(0, 0, 60, 60);
    flexButton_del_pre.setBorderSize(1);
    flexButton_del_pre.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton_del_pre.setText(TypedText(T___SINGLEUSE_K2XR));
    flexButton_del_pre.setTextPosition(0, 20, 60, 60);
    flexButton_del_pre.setTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
    flexButton_del_pre.setPosition(706, 112, 60, 60);
    flexButton_del_pre.setAction(flexButtonCallback);

    flexButton_ABC_123.setBoxWithBorderPosition(0, 0, 60, 60);
    flexButton_ABC_123.setBorderSize(1);
    flexButton_ABC_123.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton_ABC_123.setWildcardText(TypedText(T_RESOURCEID17));
    Unicode::snprintf(flexButton_ABC_123Buffer, FLEXBUTTON_ABC_123_SIZE, "%s", TypedText(T_RESOURCEID7).getText());
    flexButton_ABC_123.setWildcardTextBuffer(flexButton_ABC_123Buffer);
    flexButton_ABC_123.setWildcardTextPosition(0, 20, 60, 60);
    flexButton_ABC_123.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
    flexButton_ABC_123.setPosition(35, 234, 60, 60);
    flexButton_ABC_123.setAction(flexButtonCallback);

    add(boxWithBorder1);
    add(customContainer1);
    add(customContainer2);
    add(customContainer3);
    add(customContainer4);
    add(customContainer5);
    add(customContainer6);
    add(customContainer7);
    add(customContainer8);
    add(customContainer9);
    add(customContainer10);
    add(customContainer1_1);
    add(customContainer2_1);
    add(customContainer3_1);
    add(customContainer4_1);
    add(customContainer5_1);
    add(customContainer6_1);
    add(customContainer7_1);
    add(customContainer8_1);
    add(customContainer9_1);
    add(customContainer10_1);
    add(customContainer1_2);
    add(customContainer2_2);
    add(customContainer3_2);
    add(customContainer4_2);
    add(customContainer5_2);
    add(customContainer6_2);
    add(customContainer7_2);
    add(customContainer8_2);
    add(customContainer9_2);
    add(customContainer10_2);
    add(textArea1);
    add(flexButton_enter);
    add(flexButton_space);
    add(flexButton_language);
    add(customContainer11_1);
    add(customContainer11);
    add(customContainer12);
    add(flexButton_close);
    add(flexButton_shift);
    add(flexButton_del_all);
    add(flexButton_del_pre);
    add(flexButton_ABC_123);
}

void CustomContainerKeyboardBase::initialize()
{
    customContainer1.initialize();
    customContainer2.initialize();
    customContainer3.initialize();
    customContainer4.initialize();
    customContainer5.initialize();
    customContainer6.initialize();
    customContainer7.initialize();
    customContainer8.initialize();
    customContainer9.initialize();
    customContainer10.initialize();
    customContainer1_1.initialize();
    customContainer2_1.initialize();
    customContainer3_1.initialize();
    customContainer4_1.initialize();
    customContainer5_1.initialize();
    customContainer6_1.initialize();
    customContainer7_1.initialize();
    customContainer8_1.initialize();
    customContainer9_1.initialize();
    customContainer10_1.initialize();
    customContainer1_2.initialize();
    customContainer2_2.initialize();
    customContainer3_2.initialize();
    customContainer4_2.initialize();
    customContainer5_2.initialize();
    customContainer6_2.initialize();
    customContainer7_2.initialize();
    customContainer8_2.initialize();
    customContainer9_2.initialize();
    customContainer10_2.initialize();
    customContainer11_1.initialize();
    customContainer11.initialize();
    customContainer12.initialize();
}

void CustomContainerKeyboardBase::customContainer1TriggerButton_keyCallbackHandler()
{
    //Interaction8
    //When customContainer1 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer2TriggerButton_keyCallbackHandler()
{
    //Interaction9
    //When customContainer2 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer3TriggerButton_keyCallbackHandler()
{
    //Interaction10
    //When customContainer3 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer4TriggerButton_keyCallbackHandler()
{
    //Interaction11
    //When customContainer4 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer5TriggerButton_keyCallbackHandler()
{
    //Interaction12
    //When customContainer5 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer6TriggerButton_keyCallbackHandler()
{
    //Interaction13
    //When customContainer6 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer7TriggerButton_keyCallbackHandler()
{
    //Interaction14
    //When customContainer7 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer8TriggerButton_keyCallbackHandler()
{
    //Interaction15
    //When customContainer8 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer9TriggerButton_keyCallbackHandler()
{
    //Interaction16
    //When customContainer9 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer10TriggerButton_keyCallbackHandler()
{
    //Interaction17
    //When customContainer10 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer11TriggerButton_keyCallbackHandler()
{
    //Interaction18
    //When customContainer11 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer12TriggerButton_keyCallbackHandler()
{
    //Interaction19
    //When customContainer12 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer1_1TriggerButton_keyCallbackHandler()
{
    //Interaction20
    //When customContainer1_1 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer2_1TriggerButton_keyCallbackHandler()
{
    //Interaction21
    //When customContainer2_1 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer3_1TriggerButton_keyCallbackHandler()
{
    //Interaction22
    //When customContainer3_1 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer4_1TriggerButton_keyCallbackHandler()
{
    //Interaction23
    //When customContainer4_1 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer5_1TriggerButton_keyCallbackHandler()
{
    //Interaction24
    //When customContainer5_1 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer6_1TriggerButton_keyCallbackHandler()
{
    //Interaction25
    //When customContainer6_1 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer7_1TriggerButton_keyCallbackHandler()
{
    //Interaction26
    //When customContainer7_1 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer8_1TriggerButton_keyCallbackHandler()
{
    //Interaction27
    //When customContainer8_1 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer9_1TriggerButton_keyCallbackHandler()
{
    //Interaction28
    //When customContainer9_1 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer10_1TriggerButton_keyCallbackHandler()
{
    //Interaction29
    //When customContainer10_1 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer1_2TriggerButton_keyCallbackHandler()
{
    //Interaction31
    //When customContainer1_2 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer2_2TriggerButton_keyCallbackHandler()
{
    //Interaction32
    //When customContainer2_2 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer3_2TriggerButton_keyCallbackHandler()
{
    //Interaction33
    //When customContainer3_2 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer4_2TriggerButton_keyCallbackHandler()
{
    //Interaction34
    //When customContainer4_2 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer5_2TriggerButton_keyCallbackHandler()
{
    //Interaction35
    //When customContainer5_2 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer6_2TriggerButton_keyCallbackHandler()
{
    //Interaction36
    //When customContainer6_2 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer7_2TriggerButton_keyCallbackHandler()
{
    //Interaction37
    //When customContainer7_2 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer8_2TriggerButton_keyCallbackHandler()
{
    //Interaction38
    //When customContainer8_2 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer9_2TriggerButton_keyCallbackHandler()
{
    //Interaction39
    //When customContainer9_2 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer10_2TriggerButton_keyCallbackHandler()
{
    //Interaction40
    //When customContainer10_2 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::customContainer11_1TriggerButton_keyCallbackHandler()
{
    //Interaction41
    //When customContainer11_1 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
}

void CustomContainerKeyboardBase::action1()
{

}

void CustomContainerKeyboardBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton_enter)
    {
        //ClickButtonEnter
        //When flexButton_enter clicked call virtual function
        //Call ClickButtonEnter
        ClickButtonEnter();

        //Interaction42
        //When flexButton_enter clicked emit triggerKeyboard callback
        //Emit callback
        emitTriggerKeyboardCallback();
    }
    else if (&src == &flexButton_space)
    {
        //ClickButtonSpace
        //When flexButton_space clicked call virtual function
        //Call ClickButtonSpace
        ClickButtonSpace();
    }
    else if (&src == &flexButton_language)
    {
        //ClickButtonLanguage
        //When flexButton_language clicked call virtual function
        //Call ClickButtonLanguage
        ClickButtonLanguage();
    }
    else if (&src == &flexButton_close)
    {
        //ClickButtonCloseKeyboard
        //When flexButton_close clicked call virtual function
        //Call ClickButtonCloseKeyboard
        ClickButtonCloseKeyboard();
    }
    else if (&src == &flexButton_shift)
    {
        //ClickButtonShift
        //When flexButton_shift clicked call virtual function
        //Call ClickButtonShift
        ClickButtonShift();
    }
    else if (&src == &flexButton_del_all)
    {
        //ClickButtonDelAll
        //When flexButton_del_all clicked call virtual function
        //Call ClickButtonDelAll
        ClickButtonDelAll();
    }
    else if (&src == &flexButton_del_pre)
    {
        //ClickButtonDelPre
        //When flexButton_del_pre clicked call virtual function
        //Call ClickButtonDelPre
        ClickButtonDelPre();
    }
    else if (&src == &flexButton_ABC_123)
    {
        //Interaction43
        //When flexButton_ABC_123 clicked call virtual function
        //Call ClickButtonABC123
        ClickButtonABC123();
    }
}

