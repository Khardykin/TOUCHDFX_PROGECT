/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CUSTOMCONTAINERBUTTON_KEYBASE_HPP
#define CUSTOMCONTAINERBUTTON_KEYBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class CustomContainerButton_keyBase : public touchgfx::Container
{
public:
    CustomContainerButton_keyBase();
    virtual ~CustomContainerButton_keyBase() {}
    virtual void initialize();

    /*
     * Custom Trigger Callback Setters
     */
    void setTriggerButton_keyCallback(touchgfx::GenericCallback<>& callback)
    {
        this->triggerButton_keyCallback = &callback;
    }

    /*
     * Custom Actions
     */
    virtual void action1();

    /*
     * Virtual Action Handlers
     */
    virtual void functionButtonClick()
    {
        // Override and implement this function in CustomContainerButton_key
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitTriggerButton_keyCallback()
    {
        if (triggerButton_keyCallback && triggerButton_keyCallback->isValid())
        {
            this->triggerButton_keyCallback->execute();
        }
    }

    /*
     * Member Declarations
     */
    touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > > flexButton_keyboard;

    /*
     * Wildcard Buffers
     */
    static const uint16_t FLEXBUTTON_KEYBOARD_SIZE = 10;
    touchgfx::Unicode::UnicodeChar flexButton_keyboardBuffer[FLEXBUTTON_KEYBOARD_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<CustomContainerButton_keyBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Custom Trigger Callback Declarations
     */
    touchgfx::GenericCallback<>* triggerButton_keyCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // CUSTOMCONTAINERBUTTON_KEYBASE_HPP
