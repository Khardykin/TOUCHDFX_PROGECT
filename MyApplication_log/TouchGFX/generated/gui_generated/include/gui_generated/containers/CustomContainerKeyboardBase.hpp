/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CUSTOMCONTAINERKEYBOARDBASE_HPP
#define CUSTOMCONTAINERKEYBOARDBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <gui/containers/CustomContainerButton_key.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class CustomContainerKeyboardBase : public touchgfx::Container
{
public:
    CustomContainerKeyboardBase();
    virtual ~CustomContainerKeyboardBase() {}
    virtual void initialize();

    /*
     * Custom Trigger Callback Setters
     */
    void setTriggerKeyboardCallback(touchgfx::GenericCallback<>& callback)
    {
        this->triggerKeyboardCallback = &callback;
    }

    /*
     * Custom Actions
     */
    virtual void action1();

    /*
     * Virtual Action Handlers
     */
    virtual void ClickButtonDelPre()
    {
        // Override and implement this function in CustomContainerKeyboard
    }

    virtual void ClickButtonDelAll()
    {
        // Override and implement this function in CustomContainerKeyboard
    }

    virtual void ClickButtonShift()
    {
        // Override and implement this function in CustomContainerKeyboard
    }

    virtual void ClickButtonCloseKeyboard()
    {
        // Override and implement this function in CustomContainerKeyboard
    }

    virtual void ClickButtonLanguage()
    {
        // Override and implement this function in CustomContainerKeyboard
    }

    virtual void ClickButtonSpace()
    {
        // Override and implement this function in CustomContainerKeyboard
    }

    virtual void ClickButtonEnter()
    {
        // Override and implement this function in CustomContainerKeyboard
    }

    virtual void ClickButtonABC123()
    {
        // Override and implement this function in CustomContainerKeyboard
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitTriggerKeyboardCallback()
    {
        if (triggerKeyboardCallback && triggerKeyboardCallback->isValid())
        {
            this->triggerKeyboardCallback->execute();
        }
    }

    /*
     * Member Declarations
     */
    touchgfx::BoxWithBorder boxWithBorder1;
    CustomContainerButton_key customContainer1;
    CustomContainerButton_key customContainer2;
    CustomContainerButton_key customContainer3;
    CustomContainerButton_key customContainer4;
    CustomContainerButton_key customContainer5;
    CustomContainerButton_key customContainer6;
    CustomContainerButton_key customContainer7;
    CustomContainerButton_key customContainer8;
    CustomContainerButton_key customContainer9;
    CustomContainerButton_key customContainer10;
    CustomContainerButton_key customContainer1_1;
    CustomContainerButton_key customContainer2_1;
    CustomContainerButton_key customContainer3_1;
    CustomContainerButton_key customContainer4_1;
    CustomContainerButton_key customContainer5_1;
    CustomContainerButton_key customContainer6_1;
    CustomContainerButton_key customContainer7_1;
    CustomContainerButton_key customContainer8_1;
    CustomContainerButton_key customContainer9_1;
    CustomContainerButton_key customContainer10_1;
    CustomContainerButton_key customContainer1_2;
    CustomContainerButton_key customContainer2_2;
    CustomContainerButton_key customContainer3_2;
    CustomContainerButton_key customContainer4_2;
    CustomContainerButton_key customContainer5_2;
    CustomContainerButton_key customContainer6_2;
    CustomContainerButton_key customContainer7_2;
    CustomContainerButton_key customContainer8_2;
    CustomContainerButton_key customContainer9_2;
    CustomContainerButton_key customContainer10_2;
    touchgfx::TextAreaWithOneWildcard textArea1;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > > flexButton_enter;
    touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > > flexButton_space;
    touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > > flexButton_language;
    CustomContainerButton_key customContainer11_1;
    CustomContainerButton_key customContainer11;
    CustomContainerButton_key customContainer12;
    touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > > flexButton_close;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > > flexButton_shift;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > > flexButton_del_all;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > > flexButton_del_pre;
    touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > > flexButton_ABC_123;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA1_SIZE = 40;
    touchgfx::Unicode::UnicodeChar textArea1Buffer[TEXTAREA1_SIZE];
    static const uint16_t FLEXBUTTON_SPACE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar flexButton_spaceBuffer[FLEXBUTTON_SPACE_SIZE];
    static const uint16_t FLEXBUTTON_LANGUAGE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar flexButton_languageBuffer[FLEXBUTTON_LANGUAGE_SIZE];
    static const uint16_t FLEXBUTTON_CLOSE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar flexButton_closeBuffer[FLEXBUTTON_CLOSE_SIZE];
    static const uint16_t FLEXBUTTON_ABC_123_SIZE = 10;
    touchgfx::Unicode::UnicodeChar flexButton_ABC_123Buffer[FLEXBUTTON_ABC_123_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<CustomContainerKeyboardBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer1TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer2TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer3TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer4TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer5TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer6TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer7TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer8TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer9TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer10TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer11TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer12TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer1_1TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer2_1TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer3_1TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer4_1TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer5_1TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer6_1TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer7_1TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer8_1TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer9_1TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer10_1TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer1_2TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer2_2TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer3_2TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer4_2TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer5_2TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer6_2TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer7_2TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer8_2TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer9_2TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer10_2TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboardBase> customContainer11_1TriggerButton_keyCallback;

    /*
     * Custom Trigger Callback Declarations
     */
    touchgfx::GenericCallback<>* triggerKeyboardCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);
    void customContainer1TriggerButton_keyCallbackHandler();
    void customContainer2TriggerButton_keyCallbackHandler();
    void customContainer3TriggerButton_keyCallbackHandler();
    void customContainer4TriggerButton_keyCallbackHandler();
    void customContainer5TriggerButton_keyCallbackHandler();
    void customContainer6TriggerButton_keyCallbackHandler();
    void customContainer7TriggerButton_keyCallbackHandler();
    void customContainer8TriggerButton_keyCallbackHandler();
    void customContainer9TriggerButton_keyCallbackHandler();
    void customContainer10TriggerButton_keyCallbackHandler();
    void customContainer11TriggerButton_keyCallbackHandler();
    void customContainer12TriggerButton_keyCallbackHandler();
    void customContainer1_1TriggerButton_keyCallbackHandler();
    void customContainer2_1TriggerButton_keyCallbackHandler();
    void customContainer3_1TriggerButton_keyCallbackHandler();
    void customContainer4_1TriggerButton_keyCallbackHandler();
    void customContainer5_1TriggerButton_keyCallbackHandler();
    void customContainer6_1TriggerButton_keyCallbackHandler();
    void customContainer7_1TriggerButton_keyCallbackHandler();
    void customContainer8_1TriggerButton_keyCallbackHandler();
    void customContainer9_1TriggerButton_keyCallbackHandler();
    void customContainer10_1TriggerButton_keyCallbackHandler();
    void customContainer1_2TriggerButton_keyCallbackHandler();
    void customContainer2_2TriggerButton_keyCallbackHandler();
    void customContainer3_2TriggerButton_keyCallbackHandler();
    void customContainer4_2TriggerButton_keyCallbackHandler();
    void customContainer5_2TriggerButton_keyCallbackHandler();
    void customContainer6_2TriggerButton_keyCallbackHandler();
    void customContainer7_2TriggerButton_keyCallbackHandler();
    void customContainer8_2TriggerButton_keyCallbackHandler();
    void customContainer9_2TriggerButton_keyCallbackHandler();
    void customContainer10_2TriggerButton_keyCallbackHandler();
    void customContainer11_1TriggerButton_keyCallbackHandler();

};

#endif // CUSTOMCONTAINERKEYBOARDBASE_HPP
