/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CONFIGLISTFILTERLOGBASE_HPP
#define CONFIGLISTFILTERLOGBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/containers/scrollers/ScrollList.hpp>
#include <gui/containers/ListTile.hpp>

class ConfigListFilterLogBase : public touchgfx::Container
{
public:
    ConfigListFilterLogBase();
    virtual ~ConfigListFilterLogBase() {}
    virtual void initialize();

    /*
     * Custom Trigger Callback Setters
     */
    void setTrigger1Callback(touchgfx::GenericCallback<>& callback)
    {
        this->trigger1Callback = &callback;
    }

    virtual void scrollListUpdateItem(ListTile& item, int16_t itemIndex)
    {
        // Override and implement this function in ConfigListFilterLog
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitTrigger1Callback()
    {
        if (trigger1Callback && trigger1Callback->isValid())
        {
            this->trigger1Callback->execute();
        }
    }

    /*
     * Member Declarations
     */
    touchgfx::BoxWithBorder boxBg;
    touchgfx::ScrollList scrollList;
    touchgfx::DrawableListItems<ListTile, 16> scrollListListItems;

private:
    touchgfx::Callback<ConfigListFilterLogBase, touchgfx::DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;

    /*
     * Custom Trigger Callback Declarations
     */
    touchgfx::GenericCallback<>* trigger1Callback;
    void updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);

};

#endif // CONFIGLISTFILTERLOGBASE_HPP
