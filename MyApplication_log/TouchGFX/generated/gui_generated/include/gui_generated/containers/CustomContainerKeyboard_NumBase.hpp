/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CUSTOMCONTAINERKEYBOARD_NUMBASE_HPP
#define CUSTOMCONTAINERKEYBOARD_NUMBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <gui/containers/CustomContainerButton_key.hpp>

class CustomContainerKeyboard_NumBase : public touchgfx::Container
{
public:
    CustomContainerKeyboard_NumBase();
    virtual ~CustomContainerKeyboard_NumBase() {}
    virtual void initialize();

    /*
     * Custom Trigger Callback Setters
     */
    void setTriggerKeyboard_NumCallback(touchgfx::GenericCallback<>& callback)
    {
        this->triggerKeyboard_NumCallback = &callback;
    }

    /*
     * Custom Actions
     */
    virtual void action1();

    /*
     * Virtual Action Handlers
     */
    virtual void ClickButtonEnter()
    {
        // Override and implement this function in CustomContainerKeyboard_Num
    }

    virtual void ClickButtonCloseKeyboard()
    {
        // Override and implement this function in CustomContainerKeyboard_Num
    }

    virtual void ClickButtonDelPre()
    {
        // Override and implement this function in CustomContainerKeyboard_Num
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitTriggerKeyboard_NumCallback()
    {
        if (triggerKeyboard_NumCallback && triggerKeyboard_NumCallback->isValid())
        {
            this->triggerKeyboard_NumCallback->execute();
        }
    }

    /*
     * Member Declarations
     */
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > > flexButtonEnter;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > > flexButtonClose;
    touchgfx::TextAreaWithOneWildcard textArea1;
    CustomContainerButton_key customContainerButton_key1;
    CustomContainerButton_key customContainerButton_key2;
    CustomContainerButton_key customContainerButton_key3;
    CustomContainerButton_key customContainerButton_key4;
    CustomContainerButton_key customContainerButton_key5;
    CustomContainerButton_key customContainerButton_key6;
    CustomContainerButton_key customContainerButton_key7;
    CustomContainerButton_key customContainerButton_key8;
    CustomContainerButton_key customContainerButton_key9;
    CustomContainerButton_key customContainerButton_key10;
    CustomContainerButton_key customContainerButton_key11;
    CustomContainerButton_key customContainerButton_key12;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > > flexButton_del_pre;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea1Buffer[TEXTAREA1_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<CustomContainerKeyboard_NumBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;
    touchgfx::Callback<CustomContainerKeyboard_NumBase> customContainerButton_key1TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboard_NumBase> customContainerButton_key2TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboard_NumBase> customContainerButton_key3TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboard_NumBase> customContainerButton_key4TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboard_NumBase> customContainerButton_key5TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboard_NumBase> customContainerButton_key6TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboard_NumBase> customContainerButton_key7TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboard_NumBase> customContainerButton_key8TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboard_NumBase> customContainerButton_key9TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboard_NumBase> customContainerButton_key10TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboard_NumBase> customContainerButton_key11TriggerButton_keyCallback;
    touchgfx::Callback<CustomContainerKeyboard_NumBase> customContainerButton_key12TriggerButton_keyCallback;

    /*
     * Custom Trigger Callback Declarations
     */
    touchgfx::GenericCallback<>* triggerKeyboard_NumCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);
    void customContainerButton_key1TriggerButton_keyCallbackHandler();
    void customContainerButton_key2TriggerButton_keyCallbackHandler();
    void customContainerButton_key3TriggerButton_keyCallbackHandler();
    void customContainerButton_key4TriggerButton_keyCallbackHandler();
    void customContainerButton_key5TriggerButton_keyCallbackHandler();
    void customContainerButton_key6TriggerButton_keyCallbackHandler();
    void customContainerButton_key7TriggerButton_keyCallbackHandler();
    void customContainerButton_key8TriggerButton_keyCallbackHandler();
    void customContainerButton_key9TriggerButton_keyCallbackHandler();
    void customContainerButton_key10TriggerButton_keyCallbackHandler();
    void customContainerButton_key11TriggerButton_keyCallbackHandler();
    void customContainerButton_key12TriggerButton_keyCallbackHandler();

};

#endif // CUSTOMCONTAINERKEYBOARD_NUMBASE_HPP
