/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN2VIEWBASE_HPP
#define SCREEN2VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen2_screen/Screen2Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <gui/containers/CustomContainerKeyboard.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <gui/containers/CustomContainerKeyboard_Num.hpp>
#include <touchgfx/containers/ModalWindow.hpp>
#include <touchgfx/Color.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class Screen2ViewBase : public touchgfx::View<Screen2Presenter>
{
public:
    Screen2ViewBase();
    virtual ~Screen2ViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void CallbackcustomContainerKeyboard()
    {
        // Override and implement this function in Screen2
    }

    virtual void function2()
    {
        // Override and implement this function in Screen2
    }

    virtual void function3()
    {
        // Override and implement this function in Screen2
    }

    virtual void CallbackcustomContainerKeyboard_Num()
    {
        // Override and implement this function in Screen2
    }

    virtual void functionSaveSettings()
    {
        // Override and implement this function in Screen2
    }

    virtual void functionSaveModalWindow()
    {
        // Override and implement this function in Screen2
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Button button1;
    CustomContainerKeyboard customContainerKeyboard1;
    touchgfx::WildcardTextButtonStyle< touchgfx::IconButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > > > flexButton_text_out;
    CustomContainerKeyboard_Num customContainerKeyboard_Num1;
    touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > > flexButton_text_out_Num;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > > flexButtonSave;
    touchgfx::ModalWindow modalWindow1;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > > flexButtonSaveNo;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > > flexButtonSaveYes;
    touchgfx::TextArea textArea1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t FLEXBUTTON_TEXT_OUT_SIZE = 40;
    touchgfx::Unicode::UnicodeChar flexButton_text_outBuffer[FLEXBUTTON_TEXT_OUT_SIZE];
    static const uint16_t FLEXBUTTON_TEXT_OUT_NUM_SIZE = 10;
    touchgfx::Unicode::UnicodeChar flexButton_text_out_NumBuffer[FLEXBUTTON_TEXT_OUT_NUM_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen2ViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<Screen2ViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;
    touchgfx::Callback<Screen2ViewBase> customContainerKeyboard1TriggerKeyboardCallback;
    touchgfx::Callback<Screen2ViewBase> customContainerKeyboard_Num1TriggerKeyboard_NumCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);
    void customContainerKeyboard1TriggerKeyboardCallbackHandler();
    void customContainerKeyboard_Num1TriggerKeyboard_NumCallbackHandler();

};

#endif // SCREEN2VIEWBASE_HPP
