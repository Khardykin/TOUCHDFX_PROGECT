
STM32F469I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001b4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00028800  080001c0  080001c0  000101c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000053dc  080289c0  080289c0  000389c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 000003fc  0802dd9c  0802dd9c  0003dd9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  0802e198  0802e198  00176630  2**0
                  CONTENTS
  5 .ARM          00000008  0802e198  0802e198  0003e198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  0802e1a0  0802e1a0  00176630  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  0802e1a0  0802e1a0  0003e1a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  0802e1b8  0802e1b8  0003e1b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000140  20000000  0802e1c0  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          0002c174  20000140  0802e300  00040140  2**2
                  ALLOC
 11 ._user_heap_stack 00002004  2002c2b4  0802e300  0004c2b4  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00176630  2**0
                  CONTENTS, READONLY
 13 ExtFlashSection 00115700  90000000  90000000  00050000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 FontFlashSection 000104bc  90115700  90115700  00165700  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 00000a74  90125bbc  90125bbc  00175bbc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .debug_line   00095f80  00000000  00000000  00176660  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_info   00220d03  00000000  00000000  0020c5e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 00024af0  00000000  00000000  0042d2e3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 000044b0  00000000  00000000  00451dd8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    00140138  00000000  00000000  00456288  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_ranges 0000d1e8  00000000  00000000  005963c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loc    000b7f95  00000000  00000000  005a35a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  0004058d  00000000  00000000  0065b53d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000d2  00000000  00000000  0069baca  2**0
                  CONTENTS, READONLY
 25 .debug_frame  0000c478  00000000  00000000  0069bb9c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	20000140 	.word	0x20000140
 80001dc:	00000000 	.word	0x00000000
 80001e0:	080289a8 	.word	0x080289a8

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	20000144 	.word	0x20000144
 80001fc:	080289a8 	.word	0x080289a8

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295
 80002b4:	f000 b96e 	b.w	8000594 <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9d08      	ldr	r5, [sp, #32]
 80002d6:	4604      	mov	r4, r0
 80002d8:	468c      	mov	ip, r1
 80002da:	2b00      	cmp	r3, #0
 80002dc:	f040 8083 	bne.w	80003e6 <__udivmoddi4+0x116>
 80002e0:	428a      	cmp	r2, r1
 80002e2:	4617      	mov	r7, r2
 80002e4:	d947      	bls.n	8000376 <__udivmoddi4+0xa6>
 80002e6:	fab2 f282 	clz	r2, r2
 80002ea:	b142      	cbz	r2, 80002fe <__udivmoddi4+0x2e>
 80002ec:	f1c2 0020 	rsb	r0, r2, #32
 80002f0:	fa24 f000 	lsr.w	r0, r4, r0
 80002f4:	4091      	lsls	r1, r2
 80002f6:	4097      	lsls	r7, r2
 80002f8:	ea40 0c01 	orr.w	ip, r0, r1
 80002fc:	4094      	lsls	r4, r2
 80002fe:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000302:	0c23      	lsrs	r3, r4, #16
 8000304:	fbbc f6f8 	udiv	r6, ip, r8
 8000308:	fa1f fe87 	uxth.w	lr, r7
 800030c:	fb08 c116 	mls	r1, r8, r6, ip
 8000310:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000314:	fb06 f10e 	mul.w	r1, r6, lr
 8000318:	4299      	cmp	r1, r3
 800031a:	d909      	bls.n	8000330 <__udivmoddi4+0x60>
 800031c:	18fb      	adds	r3, r7, r3
 800031e:	f106 30ff 	add.w	r0, r6, #4294967295
 8000322:	f080 8119 	bcs.w	8000558 <__udivmoddi4+0x288>
 8000326:	4299      	cmp	r1, r3
 8000328:	f240 8116 	bls.w	8000558 <__udivmoddi4+0x288>
 800032c:	3e02      	subs	r6, #2
 800032e:	443b      	add	r3, r7
 8000330:	1a5b      	subs	r3, r3, r1
 8000332:	b2a4      	uxth	r4, r4
 8000334:	fbb3 f0f8 	udiv	r0, r3, r8
 8000338:	fb08 3310 	mls	r3, r8, r0, r3
 800033c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000340:	fb00 fe0e 	mul.w	lr, r0, lr
 8000344:	45a6      	cmp	lr, r4
 8000346:	d909      	bls.n	800035c <__udivmoddi4+0x8c>
 8000348:	193c      	adds	r4, r7, r4
 800034a:	f100 33ff 	add.w	r3, r0, #4294967295
 800034e:	f080 8105 	bcs.w	800055c <__udivmoddi4+0x28c>
 8000352:	45a6      	cmp	lr, r4
 8000354:	f240 8102 	bls.w	800055c <__udivmoddi4+0x28c>
 8000358:	3802      	subs	r0, #2
 800035a:	443c      	add	r4, r7
 800035c:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000360:	eba4 040e 	sub.w	r4, r4, lr
 8000364:	2600      	movs	r6, #0
 8000366:	b11d      	cbz	r5, 8000370 <__udivmoddi4+0xa0>
 8000368:	40d4      	lsrs	r4, r2
 800036a:	2300      	movs	r3, #0
 800036c:	e9c5 4300 	strd	r4, r3, [r5]
 8000370:	4631      	mov	r1, r6
 8000372:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000376:	b902      	cbnz	r2, 800037a <__udivmoddi4+0xaa>
 8000378:	deff      	udf	#255	; 0xff
 800037a:	fab2 f282 	clz	r2, r2
 800037e:	2a00      	cmp	r2, #0
 8000380:	d150      	bne.n	8000424 <__udivmoddi4+0x154>
 8000382:	1bcb      	subs	r3, r1, r7
 8000384:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000388:	fa1f f887 	uxth.w	r8, r7
 800038c:	2601      	movs	r6, #1
 800038e:	fbb3 fcfe 	udiv	ip, r3, lr
 8000392:	0c21      	lsrs	r1, r4, #16
 8000394:	fb0e 331c 	mls	r3, lr, ip, r3
 8000398:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800039c:	fb08 f30c 	mul.w	r3, r8, ip
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d907      	bls.n	80003b4 <__udivmoddi4+0xe4>
 80003a4:	1879      	adds	r1, r7, r1
 80003a6:	f10c 30ff 	add.w	r0, ip, #4294967295
 80003aa:	d202      	bcs.n	80003b2 <__udivmoddi4+0xe2>
 80003ac:	428b      	cmp	r3, r1
 80003ae:	f200 80e9 	bhi.w	8000584 <__udivmoddi4+0x2b4>
 80003b2:	4684      	mov	ip, r0
 80003b4:	1ac9      	subs	r1, r1, r3
 80003b6:	b2a3      	uxth	r3, r4
 80003b8:	fbb1 f0fe 	udiv	r0, r1, lr
 80003bc:	fb0e 1110 	mls	r1, lr, r0, r1
 80003c0:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 80003c4:	fb08 f800 	mul.w	r8, r8, r0
 80003c8:	45a0      	cmp	r8, r4
 80003ca:	d907      	bls.n	80003dc <__udivmoddi4+0x10c>
 80003cc:	193c      	adds	r4, r7, r4
 80003ce:	f100 33ff 	add.w	r3, r0, #4294967295
 80003d2:	d202      	bcs.n	80003da <__udivmoddi4+0x10a>
 80003d4:	45a0      	cmp	r8, r4
 80003d6:	f200 80d9 	bhi.w	800058c <__udivmoddi4+0x2bc>
 80003da:	4618      	mov	r0, r3
 80003dc:	eba4 0408 	sub.w	r4, r4, r8
 80003e0:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 80003e4:	e7bf      	b.n	8000366 <__udivmoddi4+0x96>
 80003e6:	428b      	cmp	r3, r1
 80003e8:	d909      	bls.n	80003fe <__udivmoddi4+0x12e>
 80003ea:	2d00      	cmp	r5, #0
 80003ec:	f000 80b1 	beq.w	8000552 <__udivmoddi4+0x282>
 80003f0:	2600      	movs	r6, #0
 80003f2:	e9c5 0100 	strd	r0, r1, [r5]
 80003f6:	4630      	mov	r0, r6
 80003f8:	4631      	mov	r1, r6
 80003fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003fe:	fab3 f683 	clz	r6, r3
 8000402:	2e00      	cmp	r6, #0
 8000404:	d14a      	bne.n	800049c <__udivmoddi4+0x1cc>
 8000406:	428b      	cmp	r3, r1
 8000408:	d302      	bcc.n	8000410 <__udivmoddi4+0x140>
 800040a:	4282      	cmp	r2, r0
 800040c:	f200 80b8 	bhi.w	8000580 <__udivmoddi4+0x2b0>
 8000410:	1a84      	subs	r4, r0, r2
 8000412:	eb61 0103 	sbc.w	r1, r1, r3
 8000416:	2001      	movs	r0, #1
 8000418:	468c      	mov	ip, r1
 800041a:	2d00      	cmp	r5, #0
 800041c:	d0a8      	beq.n	8000370 <__udivmoddi4+0xa0>
 800041e:	e9c5 4c00 	strd	r4, ip, [r5]
 8000422:	e7a5      	b.n	8000370 <__udivmoddi4+0xa0>
 8000424:	f1c2 0320 	rsb	r3, r2, #32
 8000428:	fa20 f603 	lsr.w	r6, r0, r3
 800042c:	4097      	lsls	r7, r2
 800042e:	fa01 f002 	lsl.w	r0, r1, r2
 8000432:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000436:	40d9      	lsrs	r1, r3
 8000438:	4330      	orrs	r0, r6
 800043a:	0c03      	lsrs	r3, r0, #16
 800043c:	fbb1 f6fe 	udiv	r6, r1, lr
 8000440:	fa1f f887 	uxth.w	r8, r7
 8000444:	fb0e 1116 	mls	r1, lr, r6, r1
 8000448:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800044c:	fb06 f108 	mul.w	r1, r6, r8
 8000450:	4299      	cmp	r1, r3
 8000452:	fa04 f402 	lsl.w	r4, r4, r2
 8000456:	d909      	bls.n	800046c <__udivmoddi4+0x19c>
 8000458:	18fb      	adds	r3, r7, r3
 800045a:	f106 3cff 	add.w	ip, r6, #4294967295
 800045e:	f080 808d 	bcs.w	800057c <__udivmoddi4+0x2ac>
 8000462:	4299      	cmp	r1, r3
 8000464:	f240 808a 	bls.w	800057c <__udivmoddi4+0x2ac>
 8000468:	3e02      	subs	r6, #2
 800046a:	443b      	add	r3, r7
 800046c:	1a5b      	subs	r3, r3, r1
 800046e:	b281      	uxth	r1, r0
 8000470:	fbb3 f0fe 	udiv	r0, r3, lr
 8000474:	fb0e 3310 	mls	r3, lr, r0, r3
 8000478:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800047c:	fb00 f308 	mul.w	r3, r0, r8
 8000480:	428b      	cmp	r3, r1
 8000482:	d907      	bls.n	8000494 <__udivmoddi4+0x1c4>
 8000484:	1879      	adds	r1, r7, r1
 8000486:	f100 3cff 	add.w	ip, r0, #4294967295
 800048a:	d273      	bcs.n	8000574 <__udivmoddi4+0x2a4>
 800048c:	428b      	cmp	r3, r1
 800048e:	d971      	bls.n	8000574 <__udivmoddi4+0x2a4>
 8000490:	3802      	subs	r0, #2
 8000492:	4439      	add	r1, r7
 8000494:	1acb      	subs	r3, r1, r3
 8000496:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 800049a:	e778      	b.n	800038e <__udivmoddi4+0xbe>
 800049c:	f1c6 0c20 	rsb	ip, r6, #32
 80004a0:	fa03 f406 	lsl.w	r4, r3, r6
 80004a4:	fa22 f30c 	lsr.w	r3, r2, ip
 80004a8:	431c      	orrs	r4, r3
 80004aa:	fa20 f70c 	lsr.w	r7, r0, ip
 80004ae:	fa01 f306 	lsl.w	r3, r1, r6
 80004b2:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 80004b6:	fa21 f10c 	lsr.w	r1, r1, ip
 80004ba:	431f      	orrs	r7, r3
 80004bc:	0c3b      	lsrs	r3, r7, #16
 80004be:	fbb1 f9fe 	udiv	r9, r1, lr
 80004c2:	fa1f f884 	uxth.w	r8, r4
 80004c6:	fb0e 1119 	mls	r1, lr, r9, r1
 80004ca:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 80004ce:	fb09 fa08 	mul.w	sl, r9, r8
 80004d2:	458a      	cmp	sl, r1
 80004d4:	fa02 f206 	lsl.w	r2, r2, r6
 80004d8:	fa00 f306 	lsl.w	r3, r0, r6
 80004dc:	d908      	bls.n	80004f0 <__udivmoddi4+0x220>
 80004de:	1861      	adds	r1, r4, r1
 80004e0:	f109 30ff 	add.w	r0, r9, #4294967295
 80004e4:	d248      	bcs.n	8000578 <__udivmoddi4+0x2a8>
 80004e6:	458a      	cmp	sl, r1
 80004e8:	d946      	bls.n	8000578 <__udivmoddi4+0x2a8>
 80004ea:	f1a9 0902 	sub.w	r9, r9, #2
 80004ee:	4421      	add	r1, r4
 80004f0:	eba1 010a 	sub.w	r1, r1, sl
 80004f4:	b2bf      	uxth	r7, r7
 80004f6:	fbb1 f0fe 	udiv	r0, r1, lr
 80004fa:	fb0e 1110 	mls	r1, lr, r0, r1
 80004fe:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8000502:	fb00 f808 	mul.w	r8, r0, r8
 8000506:	45b8      	cmp	r8, r7
 8000508:	d907      	bls.n	800051a <__udivmoddi4+0x24a>
 800050a:	19e7      	adds	r7, r4, r7
 800050c:	f100 31ff 	add.w	r1, r0, #4294967295
 8000510:	d22e      	bcs.n	8000570 <__udivmoddi4+0x2a0>
 8000512:	45b8      	cmp	r8, r7
 8000514:	d92c      	bls.n	8000570 <__udivmoddi4+0x2a0>
 8000516:	3802      	subs	r0, #2
 8000518:	4427      	add	r7, r4
 800051a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 800051e:	eba7 0708 	sub.w	r7, r7, r8
 8000522:	fba0 8902 	umull	r8, r9, r0, r2
 8000526:	454f      	cmp	r7, r9
 8000528:	46c6      	mov	lr, r8
 800052a:	4649      	mov	r1, r9
 800052c:	d31a      	bcc.n	8000564 <__udivmoddi4+0x294>
 800052e:	d017      	beq.n	8000560 <__udivmoddi4+0x290>
 8000530:	b15d      	cbz	r5, 800054a <__udivmoddi4+0x27a>
 8000532:	ebb3 020e 	subs.w	r2, r3, lr
 8000536:	eb67 0701 	sbc.w	r7, r7, r1
 800053a:	fa07 fc0c 	lsl.w	ip, r7, ip
 800053e:	40f2      	lsrs	r2, r6
 8000540:	ea4c 0202 	orr.w	r2, ip, r2
 8000544:	40f7      	lsrs	r7, r6
 8000546:	e9c5 2700 	strd	r2, r7, [r5]
 800054a:	2600      	movs	r6, #0
 800054c:	4631      	mov	r1, r6
 800054e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e70b      	b.n	8000370 <__udivmoddi4+0xa0>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e9      	b.n	8000330 <__udivmoddi4+0x60>
 800055c:	4618      	mov	r0, r3
 800055e:	e6fd      	b.n	800035c <__udivmoddi4+0x8c>
 8000560:	4543      	cmp	r3, r8
 8000562:	d2e5      	bcs.n	8000530 <__udivmoddi4+0x260>
 8000564:	ebb8 0e02 	subs.w	lr, r8, r2
 8000568:	eb69 0104 	sbc.w	r1, r9, r4
 800056c:	3801      	subs	r0, #1
 800056e:	e7df      	b.n	8000530 <__udivmoddi4+0x260>
 8000570:	4608      	mov	r0, r1
 8000572:	e7d2      	b.n	800051a <__udivmoddi4+0x24a>
 8000574:	4660      	mov	r0, ip
 8000576:	e78d      	b.n	8000494 <__udivmoddi4+0x1c4>
 8000578:	4681      	mov	r9, r0
 800057a:	e7b9      	b.n	80004f0 <__udivmoddi4+0x220>
 800057c:	4666      	mov	r6, ip
 800057e:	e775      	b.n	800046c <__udivmoddi4+0x19c>
 8000580:	4630      	mov	r0, r6
 8000582:	e74a      	b.n	800041a <__udivmoddi4+0x14a>
 8000584:	f1ac 0c02 	sub.w	ip, ip, #2
 8000588:	4439      	add	r1, r7
 800058a:	e713      	b.n	80003b4 <__udivmoddi4+0xe4>
 800058c:	3802      	subs	r0, #2
 800058e:	443c      	add	r4, r7
 8000590:	e724      	b.n	80003dc <__udivmoddi4+0x10c>
 8000592:	bf00      	nop

08000594 <__aeabi_idiv0>:
 8000594:	4770      	bx	lr
 8000596:	bf00      	nop

08000598 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8000598:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005d0 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 800059c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059e:	e003      	b.n	80005a8 <LoopCopyDataInit>

080005a0 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80005a0:	4b0c      	ldr	r3, [pc, #48]	; (80005d4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80005a2:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a4:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a6:	3104      	adds	r1, #4

080005a8 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a8:	480b      	ldr	r0, [pc, #44]	; (80005d8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005aa:	4b0c      	ldr	r3, [pc, #48]	; (80005dc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005ac:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005ae:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005b0:	d3f6      	bcc.n	80005a0 <CopyDataInit>
  ldr  r2, =_sbss
 80005b2:	4a0b      	ldr	r2, [pc, #44]	; (80005e0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b4:	e002      	b.n	80005bc <LoopFillZerobss>

080005b6 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b6:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b8:	f842 3b04 	str.w	r3, [r2], #4

080005bc <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005bc:	4b09      	ldr	r3, [pc, #36]	; (80005e4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005be:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005c0:	d3f9      	bcc.n	80005b6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005c2:	f00c fd87 	bl	800d0d4 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c6:	f027 fa2f 	bl	8027a28 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005ca:	f000 ff6f 	bl	80014ac <main>
  bx  lr    
 80005ce:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 80005d0:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 80005d4:	0802e1c0 	.word	0x0802e1c0
  ldr  r0, =_sdata
 80005d8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005dc:	20000140 	.word	0x20000140
  ldr  r2, =_sbss
 80005e0:	20000140 	.word	0x20000140
  ldr  r3, = _ebss
 80005e4:	2002c2b4 	.word	0x2002c2b4

080005e8 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e8:	e7fe      	b.n	80005e8 <ADC_IRQHandler>

080005ea <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80005ea:	f000 bde7 	b.w	80011bc <touchgfx_init>

080005ee <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005ee:	f000 be57 	b.w	80012a0 <touchgfx_taskEntry>

080005f2 <_ZN8touchgfx7Buttons4initEv>:
extern "C" void             BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode);
extern "C" uint32_t         BSP_PB_GetState(Button_TypeDef Button);

void Buttons::init()
{
    BSP_PB_Init(BUTTON_WAKEUP, BUTTON_MODE_GPIO);
 80005f2:	2100      	movs	r1, #0
 80005f4:	4608      	mov	r0, r1
 80005f6:	f00c b8d5 	b.w	800c7a4 <BSP_PB_Init>

080005fa <_ZN8touchgfx7Buttons6sampleEv>:

unsigned int Buttons::sample()
{
    uint32_t result = 0;

    result = BSP_PB_GetState(BUTTON_WAKEUP);
 80005fa:	2000      	movs	r0, #0
 80005fc:	f00c b90c 	b.w	800c818 <BSP_PB_GetState>

08000600 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 8000600:	6840      	ldr	r0, [r0, #4]
    }
 8000602:	4770      	bx	lr

08000604 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000604:	6041      	str	r1, [r0, #4]
    }
 8000606:	4770      	bx	lr

08000608 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Instrumentation Trace Macrocell (ITM)
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8000608:	4a05      	ldr	r2, [pc, #20]	; (8000620 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x18>)
 800060a:	6813      	ldr	r3, [r2, #0]
 800060c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000610:	6013      	str	r3, [r2, #0]
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000612:	4a04      	ldr	r2, [pc, #16]	; (8000624 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x1c>)
 8000614:	6813      	ldr	r3, [r2, #0]
 8000616:	f043 0301 	orr.w	r3, r3, #1
 800061a:	6013      	str	r3, [r2, #0]
}
 800061c:	4770      	bx	lr
 800061e:	bf00      	nop
 8000620:	e000edfc 	.word	0xe000edfc
 8000624:	e0001000 	.word	0xe0001000

08000628 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000628:	1a51      	subs	r1, r2, r1
 800062a:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 800062e:	fbb1 f0f3 	udiv	r0, r1, r3
 8000632:	4770      	bx	lr

08000634 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8000634:	4b01      	ldr	r3, [pc, #4]	; (800063c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8000636:	6818      	ldr	r0, [r3, #0]
}
 8000638:	4770      	bx	lr
 800063a:	bf00      	nop
 800063c:	e0001004 	.word	0xe0001004

08000640 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 8000640:	4770      	bx	lr

08000642 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 8000642:	b510      	push	{r4, lr}
 8000644:	210c      	movs	r1, #12
 8000646:	4604      	mov	r4, r0
 8000648:	f027 f86c 	bl	8027724 <_ZdlPvj>
 800064c:	4620      	mov	r0, r4
 800064e:	bd10      	pop	{r4, pc}

08000650 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
 8000650:	6803      	ldr	r3, [r0, #0]
{
 8000652:	b510      	push	{r4, lr}
 8000654:	691b      	ldr	r3, [r3, #16]
 8000656:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8000658:	b131      	cbz	r1, 8000668 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800065a:	4798      	blx	r3
 800065c:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 800065e:	6863      	ldr	r3, [r4, #4]
 8000660:	1a9b      	subs	r3, r3, r2
 8000662:	4418      	add	r0, r3
 8000664:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8000666:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8000668:	4798      	blx	r3
 800066a:	60a0      	str	r0, [r4, #8]
}
 800066c:	e7fb      	b.n	8000666 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

0800066e <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 800066e:	4770      	bx	lr

08000670 <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 8000670:	4770      	bx	lr
	...

08000674 <_ZN8touchgfx10KeySampler4initEv>:
using namespace touchgfx;

static uint8_t btnstatus[4];

void KeySampler::init()
{
 8000674:	b508      	push	{r3, lr}
    Buttons::init();
 8000676:	f7ff ffbc 	bl	80005f2 <_ZN8touchgfx7Buttons4initEv>

    memset(btnstatus, 0x00, sizeof(uint8_t) * 4);
 800067a:	4b02      	ldr	r3, [pc, #8]	; (8000684 <_ZN8touchgfx10KeySampler4initEv+0x10>)
 800067c:	2200      	movs	r2, #0
 800067e:	601a      	str	r2, [r3, #0]
}
 8000680:	bd08      	pop	{r3, pc}
 8000682:	bf00      	nop
 8000684:	2000015c 	.word	0x2000015c

08000688 <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8000688:	b570      	push	{r4, r5, r6, lr}
 800068a:	460d      	mov	r5, r1
    unsigned int buttonValue = Buttons::sample();
 800068c:	f7ff ffb5 	bl	80005fa <_ZN8touchgfx7Buttons6sampleEv>

    //Propergate values through buffer
    btnstatus[3] = btnstatus[2];
 8000690:	4a0b      	ldr	r2, [pc, #44]	; (80006c0 <_ZN8touchgfx10KeySampler6sampleERh+0x38>)
 8000692:	7893      	ldrb	r3, [r2, #2]
    btnstatus[2] = btnstatus[1];
 8000694:	7856      	ldrb	r6, [r2, #1]
    btnstatus[1] = btnstatus[0];
 8000696:	7811      	ldrb	r1, [r2, #0]
    btnstatus[3] = btnstatus[2];
 8000698:	70d3      	strb	r3, [r2, #3]
    btnstatus[0] = buttonValue;
 800069a:	b2c4      	uxtb	r4, r0

    //User key
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 800069c:	f013 0001 	ands.w	r0, r3, #1
    btnstatus[2] = btnstatus[1];
 80006a0:	7096      	strb	r6, [r2, #2]
    btnstatus[1] = btnstatus[0];
 80006a2:	7051      	strb	r1, [r2, #1]
    btnstatus[0] = buttonValue;
 80006a4:	7014      	strb	r4, [r2, #0]
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006a6:	d00a      	beq.n	80006be <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006a8:	f016 0001 	ands.w	r0, r6, #1
 80006ac:	d007      	beq.n	80006be <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006ae:	f011 0001 	ands.w	r0, r1, #1
 80006b2:	d004      	beq.n	80006be <_ZN8touchgfx10KeySampler6sampleERh+0x36>
            ((btnstatus[1] & Key1) == 1) && ((btnstatus[0] & Key1) == 0))
 80006b4:	07e3      	lsls	r3, r4, #31
    {
        key = 1;
 80006b6:	bf5a      	itte	pl
 80006b8:	2001      	movpl	r0, #1
 80006ba:	7028      	strbpl	r0, [r5, #0]
        return true;
    }

    return false;
 80006bc:	2000      	movmi	r0, #0
}
 80006be:	bd70      	pop	{r4, r5, r6, pc}
 80006c0:	2000015c 	.word	0x2000015c

080006c4 <_ZN8touchgfx10KeySamplerD0Ev>:
 80006c4:	b510      	push	{r4, lr}
 80006c6:	2104      	movs	r1, #4
 80006c8:	4604      	mov	r4, r0
 80006ca:	f027 f82b 	bl	8027724 <_ZdlPvj>
 80006ce:	4620      	mov	r0, r4
 80006d0:	bd10      	pop	{r4, pc}

080006d2 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006d2:	4770      	bx	lr

080006d4 <_ZN20STM32TouchControllerD0Ev>:
 80006d4:	b510      	push	{r4, lr}
 80006d6:	2104      	movs	r1, #4
 80006d8:	4604      	mov	r4, r0
 80006da:	f027 f823 	bl	8027724 <_ZdlPvj>
 80006de:	4620      	mov	r0, r4
 80006e0:	bd10      	pop	{r4, pc}
	...

080006e4 <_ZN20STM32TouchController4initEv>:
#include "stm32469i_discovery_ts.h"

static bool bsp_ts_initialized = false;

void STM32TouchController::init()
{
 80006e4:	b508      	push	{r3, lr}
    /**
     * Initialize touch controller and driver
     *
     */
    if (BSP_TS_Init(800, 480) == TS_OK)
 80006e6:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 80006ea:	f44f 7048 	mov.w	r0, #800	; 0x320
 80006ee:	f00c fc3d 	bl	800cf6c <BSP_TS_Init>
 80006f2:	4b07      	ldr	r3, [pc, #28]	; (8000710 <_ZN20STM32TouchController4initEv+0x2c>)
 80006f4:	b910      	cbnz	r0, 80006fc <_ZN20STM32TouchController4initEv+0x18>
    {
        bsp_ts_initialized = true;
 80006f6:	2201      	movs	r2, #1
 80006f8:	701a      	strb	r2, [r3, #0]
    }

    assert(bsp_ts_initialized);
}
 80006fa:	bd08      	pop	{r3, pc}
    assert(bsp_ts_initialized);
 80006fc:	781b      	ldrb	r3, [r3, #0]
 80006fe:	2b00      	cmp	r3, #0
 8000700:	d1fb      	bne.n	80006fa <_ZN20STM32TouchController4initEv+0x16>
 8000702:	4b04      	ldr	r3, [pc, #16]	; (8000714 <_ZN20STM32TouchController4initEv+0x30>)
 8000704:	4a04      	ldr	r2, [pc, #16]	; (8000718 <_ZN20STM32TouchController4initEv+0x34>)
 8000706:	4805      	ldr	r0, [pc, #20]	; (800071c <_ZN20STM32TouchController4initEv+0x38>)
 8000708:	2126      	movs	r1, #38	; 0x26
 800070a:	f027 f839 	bl	8027780 <__assert_func>
 800070e:	bf00      	nop
 8000710:	20000160 	.word	0x20000160
 8000714:	08028a50 	.word	0x08028a50
 8000718:	08028a63 	.word	0x08028a63
 800071c:	08028a8d 	.word	0x08028a8d

08000720 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8000720:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (bsp_ts_initialized)
 8000722:	4b0b      	ldr	r3, [pc, #44]	; (8000750 <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>)
 8000724:	781c      	ldrb	r4, [r3, #0]
{
 8000726:	460e      	mov	r6, r1
 8000728:	4615      	mov	r5, r2
    if (bsp_ts_initialized)
 800072a:	b15c      	cbz	r4, 8000744 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        TS_StateTypeDef state;
        BSP_TS_GetState(&state);
 800072c:	a801      	add	r0, sp, #4
 800072e:	f00c fc5b 	bl	800cfe8 <BSP_TS_GetState>
        if (state.touchDetected)
 8000732:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000736:	b143      	cbz	r3, 800074a <_ZN20STM32TouchController11sampleTouchERlS0_+0x2a>
        {
            x = state.touchX[0];
 8000738:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800073c:	6033      	str	r3, [r6, #0]
            y = state.touchY[0];
 800073e:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8000742:	602b      	str	r3, [r5, #0]
            return true;
        }
    }
    return false;
}
 8000744:	4620      	mov	r0, r4
 8000746:	b004      	add	sp, #16
 8000748:	bd70      	pop	{r4, r5, r6, pc}
    return false;
 800074a:	461c      	mov	r4, r3
 800074c:	e7fa      	b.n	8000744 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
 800074e:	bf00      	nop
 8000750:	20000160 	.word	0x20000160

08000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000754:	b110      	cbz	r0, 800075c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8000756:	2801      	cmp	r0, #1
 8000758:	d009      	beq.n	800076e <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 800075a:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 800075c:	4b08      	ldr	r3, [pc, #32]	; (8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 800075e:	4809      	ldr	r0, [pc, #36]	; (8000784 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x30>)
 8000760:	681a      	ldr	r2, [r3, #0]
 8000762:	fab2 f282 	clz	r2, r2
 8000766:	0952      	lsrs	r2, r2, #5
 8000768:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 800076a:	f00d bcd5 	b.w	800e118 <HAL_GPIO_WritePin>
 800076e:	4b04      	ldr	r3, [pc, #16]	; (8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000770:	4805      	ldr	r0, [pc, #20]	; (8000788 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x34>)
 8000772:	685a      	ldr	r2, [r3, #4]
 8000774:	fab2 f282 	clz	r2, r2
 8000778:	0952      	lsrs	r2, r2, #5
 800077a:	2110      	movs	r1, #16
 800077c:	e7f5      	b.n	800076a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x16>
 800077e:	bf00      	nop
 8000780:	20000164 	.word	0x20000164
 8000784:	40021800 	.word	0x40021800
 8000788:	40020c00 	.word	0x40020c00

0800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800078c:	b110      	cbz	r0, 8000794 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800078e:	2801      	cmp	r0, #1
 8000790:	d009      	beq.n	80007a6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8000792:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000794:	4b08      	ldr	r3, [pc, #32]	; (80007b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8000796:	4809      	ldr	r0, [pc, #36]	; (80007bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x30>)
 8000798:	681a      	ldr	r2, [r3, #0]
 800079a:	3a00      	subs	r2, #0
 800079c:	bf18      	it	ne
 800079e:	2201      	movne	r2, #1
 80007a0:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007a2:	f00d bcb9 	b.w	800e118 <HAL_GPIO_WritePin>
 80007a6:	4b04      	ldr	r3, [pc, #16]	; (80007b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80007a8:	4805      	ldr	r0, [pc, #20]	; (80007c0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x34>)
 80007aa:	685a      	ldr	r2, [r3, #4]
 80007ac:	3a00      	subs	r2, #0
 80007ae:	bf18      	it	ne
 80007b0:	2201      	movne	r2, #1
 80007b2:	2110      	movs	r1, #16
 80007b4:	e7f5      	b.n	80007a2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x16>
 80007b6:	bf00      	nop
 80007b8:	20000164 	.word	0x20000164
 80007bc:	40021800 	.word	0x40021800
 80007c0:	40020c00 	.word	0x40020c00

080007c4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007c4:	b110      	cbz	r0, 80007cc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 80007c6:	2801      	cmp	r0, #1
 80007c8:	d004      	beq.n	80007d4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80007ca:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007cc:	4803      	ldr	r0, [pc, #12]	; (80007dc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 80007ce:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80007d0:	f00d bca7 	b.w	800e122 <HAL_GPIO_TogglePin>
 80007d4:	4802      	ldr	r0, [pc, #8]	; (80007e0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1c>)
 80007d6:	2110      	movs	r1, #16
 80007d8:	e7fa      	b.n	80007d0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xc>
 80007da:	bf00      	nop
 80007dc:	40021800 	.word	0x40021800
 80007e0:	40020c00 	.word	0x40020c00

080007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80007e4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80007e6:	b130      	cbz	r0, 80007f6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80007e8:	2801      	cmp	r0, #1
 80007ea:	d009      	beq.n	8000800 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80007ec:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80007ee:	1e43      	subs	r3, r0, #1
 80007f0:	4258      	negs	r0, r3
 80007f2:	4158      	adcs	r0, r3
 80007f4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007f6:	4804      	ldr	r0, [pc, #16]	; (8000808 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x24>)
 80007f8:	2140      	movs	r1, #64	; 0x40
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80007fa:	f00d fc87 	bl	800e10c <HAL_GPIO_ReadPin>
        break;
 80007fe:	e7f6      	b.n	80007ee <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000800:	4802      	ldr	r0, [pc, #8]	; (800080c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x28>)
 8000802:	2110      	movs	r1, #16
 8000804:	e7f9      	b.n	80007fa <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000806:	bf00      	nop
 8000808:	40021800 	.word	0x40021800
 800080c:	40020c00 	.word	0x40020c00

08000810 <_ZN8touchgfx4GPIO4initEv>:
{
 8000810:	b570      	push	{r4, r5, r6, lr}
 8000812:	4d08      	ldr	r5, [pc, #32]	; (8000834 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000814:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000816:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000818:	b2e0      	uxtb	r0, r4
 800081a:	f7ff ffe3 	bl	80007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800081e:	b118      	cbz	r0, 8000828 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000820:	682b      	ldr	r3, [r5, #0]
 8000822:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000824:	bf18      	it	ne
 8000826:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000828:	3401      	adds	r4, #1
 800082a:	2c05      	cmp	r4, #5
 800082c:	f105 0504 	add.w	r5, r5, #4
 8000830:	d1f2      	bne.n	8000818 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000832:	bd70      	pop	{r4, r5, r6, pc}
 8000834:	20000164 	.word	0x20000164

08000838 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000838:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800083a:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800083e:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000842:	4770      	bx	lr

08000844 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 8000844:	2000      	movs	r0, #0
 8000846:	4770      	bx	lr

08000848 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000848:	2000      	movs	r0, #0
 800084a:	4770      	bx	lr

0800084c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 800084c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800084e:	b10b      	cbz	r3, 8000854 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000850:	4608      	mov	r0, r1
 8000852:	4718      	bx	r3
        }
    }
 8000854:	4770      	bx	lr

08000856 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000856:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800085a:	4770      	bx	lr

0800085c <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 800085c:	6840      	ldr	r0, [r0, #4]
 800085e:	6803      	ldr	r3, [r0, #0]
 8000860:	699b      	ldr	r3, [r3, #24]
 8000862:	4718      	bx	r3

08000864 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000864:	4770      	bx	lr

08000866 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000866:	4770      	bx	lr

08000868 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return currFbBase;
}
 8000868:	4b01      	ldr	r3, [pc, #4]	; (8000870 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 800086a:	6818      	ldr	r0, [r3, #0]
 800086c:	4770      	bx	lr
 800086e:	bf00      	nop
 8000870:	20000174 	.word	0x20000174

08000874 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000874:	4770      	bx	lr
	...

08000878 <_ZN11TouchGFXHAL10initializeEv>:
{
 8000878:	b538      	push	{r3, r4, r5, lr}
 800087a:	4604      	mov	r4, r0
    mcuInstr.init();
 800087c:	4d09      	ldr	r5, [pc, #36]	; (80008a4 <_ZN11TouchGFXHAL10initializeEv+0x2c>)
    GPIO::init();
 800087e:	f7ff ffc7 	bl	8000810 <_ZN8touchgfx4GPIO4initEv>
    TouchGFXGeneratedHAL::initialize();
 8000882:	4620      	mov	r0, r4
 8000884:	f000 fd8e 	bl	80013a4 <_ZN20TouchGFXGeneratedHAL10initializeEv>
        lockDMAToPorch = enableLock;
 8000888:	2300      	movs	r3, #0
 800088a:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
    mcuInstr.init();
 800088e:	4628      	mov	r0, r5
 8000890:	f7ff feba 	bl	8000608 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 8000894:	2301      	movs	r3, #1
 8000896:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
        buttonController = btnCtrl;
 800089a:	4b03      	ldr	r3, [pc, #12]	; (80008a8 <_ZN11TouchGFXHAL10initializeEv+0x30>)
        mcuInstrumentation = mcuInstr;
 800089c:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 800089e:	6163      	str	r3, [r4, #20]
}
 80008a0:	bd38      	pop	{r3, r4, r5, pc}
 80008a2:	bf00      	nop
 80008a4:	20000180 	.word	0x20000180
 80008a8:	2000017c 	.word	0x2000017c

080008ac <_ZN11TouchGFXHAL9taskEntryEv>:
    enableLCDControllerInterrupt();
 80008ac:	6803      	ldr	r3, [r0, #0]
{
 80008ae:	4604      	mov	r4, r0
 80008b0:	b507      	push	{r0, r1, r2, lr}
    enableLCDControllerInterrupt();
 80008b2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80008b4:	4798      	blx	r3
    enableInterrupts();
 80008b6:	6823      	ldr	r3, [r4, #0]
 80008b8:	4620      	mov	r0, r4
 80008ba:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80008bc:	4798      	blx	r3
    OSWrappers::waitForVSync();
 80008be:	f000 fa2d 	bl	8000d1c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80008c2:	6823      	ldr	r3, [r4, #0]
 80008c4:	4620      	mov	r0, r4
 80008c6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80008c8:	4798      	blx	r3
    HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPON, 0x00);
 80008ca:	2100      	movs	r1, #0
 80008cc:	4806      	ldr	r0, [pc, #24]	; (80008e8 <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 80008ce:	9100      	str	r1, [sp, #0]
 80008d0:	2329      	movs	r3, #41	; 0x29
 80008d2:	2215      	movs	r2, #21
 80008d4:	f00d fa09 	bl	800dcea <HAL_DSI_ShortWrite>
        OSWrappers::waitForVSync();
 80008d8:	f000 fa20 	bl	8000d1c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80008dc:	6823      	ldr	r3, [r4, #0]
 80008de:	4620      	mov	r0, r4
 80008e0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80008e2:	4798      	blx	r3
    for (;;)
 80008e4:	e7f8      	b.n	80008d8 <_ZN11TouchGFXHAL9taskEntryEv+0x2c>
 80008e6:	bf00      	nop
 80008e8:	2002c030 	.word	0x2002c030

080008ec <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80008ec:	b510      	push	{r4, lr}
 80008ee:	4604      	mov	r4, r0
        swapFrameBuffers();
 80008f0:	f014 f852 	bl	8014998 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80008f4:	6823      	ldr	r3, [r4, #0]
 80008f6:	4620      	mov	r0, r4
 80008f8:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
    }
 80008fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000900:	4718      	bx	r3

08000902 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000902:	f000 bd4e 	b.w	80013a2 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000906 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000906:	f000 bd65 	b.w	80013d4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

0800090a <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800090a:	f000 bd65 	b.w	80013d8 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

0800090e <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800090e:	f000 bd37 	b.w	8001380 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000912 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000912:	f000 bd3d 	b.w	8001390 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000916 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000916:	f000 bd61 	b.w	80013dc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
	...

0800091c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 800091c:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800091e:	4b09      	ldr	r3, [pc, #36]	; (8000944 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000920:	881b      	ldrh	r3, [r3, #0]
 8000922:	428b      	cmp	r3, r1
 8000924:	d803      	bhi.n	800092e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000926:	4b08      	ldr	r3, [pc, #32]	; (8000948 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000928:	881b      	ldrh	r3, [r3, #0]
 800092a:	4293      	cmp	r3, r2
 800092c:	d905      	bls.n	800093a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 800092e:	4b07      	ldr	r3, [pc, #28]	; (800094c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000930:	4a07      	ldr	r2, [pc, #28]	; (8000950 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000932:	4808      	ldr	r0, [pc, #32]	; (8000954 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000934:	219e      	movs	r1, #158	; 0x9e
 8000936:	f026 ff23 	bl	8027780 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800093a:	4b07      	ldr	r3, [pc, #28]	; (8000958 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 800093c:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 800093e:	4b07      	ldr	r3, [pc, #28]	; (800095c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000940:	801a      	strh	r2, [r3, #0]
    }
 8000942:	bd08      	pop	{r3, pc}
 8000944:	2002bd28 	.word	0x2002bd28
 8000948:	2002bd2a 	.word	0x2002bd2a
 800094c:	08028b08 	.word	0x08028b08
 8000950:	08028b6b 	.word	0x08028b6b
 8000954:	08028bae 	.word	0x08028bae
 8000958:	2002bd2e 	.word	0x2002bd2e
 800095c:	2002bd30 	.word	0x2002bd30

08000960 <_ZN11TouchGFXHAL10beginFrameEv>:
    HAL::setFrameBufferStartAddresses(frameBuffer, doubleBuffer, animationStorage);
}

bool TouchGFXHAL::beginFrame()
{
    refreshRequested = false;
 8000960:	4b02      	ldr	r3, [pc, #8]	; (800096c <_ZN11TouchGFXHAL10beginFrameEv+0xc>)
 8000962:	2200      	movs	r2, #0
 8000964:	701a      	strb	r2, [r3, #0]
    return HAL::beginFrame();
 8000966:	f013 b9f1 	b.w	8013d4c <_ZN8touchgfx3HAL10beginFrameEv>
 800096a:	bf00      	nop
 800096c:	20000014 	.word	0x20000014

08000970 <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
 8000970:	b510      	push	{r4, lr}
 8000972:	4604      	mov	r4, r0
    HAL::endFrame();
 8000974:	f013 f9f6 	bl	8013d64 <_ZN8touchgfx3HAL8endFrameEv>
    if (frameBufferUpdatedThisFrame)
 8000978:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 800097c:	b113      	cbz	r3, 8000984 <_ZN11TouchGFXHAL8endFrameEv+0x14>
    {
        refreshRequested = true;
 800097e:	4b02      	ldr	r3, [pc, #8]	; (8000988 <_ZN11TouchGFXHAL8endFrameEv+0x18>)
 8000980:	2201      	movs	r2, #1
 8000982:	701a      	strb	r2, [r3, #0]
    }
}
 8000984:	bd10      	pop	{r4, pc}
 8000986:	bf00      	nop
 8000988:	20000014 	.word	0x20000014

0800098c <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 800098c:	f013 b9a1 	b.w	8013cd2 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000990 <_ZN11TouchGFXHALD0Ev>:
 8000990:	b510      	push	{r4, lr}
 8000992:	217c      	movs	r1, #124	; 0x7c
 8000994:	4604      	mov	r4, r0
 8000996:	f026 fec5 	bl	8027724 <_ZdlPvj>
 800099a:	4620      	mov	r0, r4
 800099c:	bd10      	pop	{r4, pc}

0800099e <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800099e:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 80009a2:	b11b      	cbz	r3, 80009ac <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80009a4:	6840      	ldr	r0, [r0, #4]
 80009a6:	6803      	ldr	r3, [r0, #0]
 80009a8:	681b      	ldr	r3, [r3, #0]
 80009aa:	4718      	bx	r3
    }
 80009ac:	4618      	mov	r0, r3
 80009ae:	4770      	bx	lr

080009b0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80009b0:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80009b2:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80009b6:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
 80009ba:	4b0c      	ldr	r3, [pc, #48]	; (80009ec <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
 80009bc:	428c      	cmp	r4, r1
 80009be:	781a      	ldrb	r2, [r3, #0]
 80009c0:	d009      	beq.n	80009d6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80009c2:	b93a      	cbnz	r2, 80009d4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009c4:	4a0a      	ldr	r2, [pc, #40]	; (80009f0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009c6:	490b      	ldr	r1, [pc, #44]	; (80009f4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009c8:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009ca:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 80009cc:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009ce:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 80009d0:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 80009d2:	701a      	strb	r2, [r3, #0]
    }
 80009d4:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80009d6:	2a00      	cmp	r2, #0
 80009d8:	d0fc      	beq.n	80009d4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009da:	4a05      	ldr	r2, [pc, #20]	; (80009f0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 80009dc:	4905      	ldr	r1, [pc, #20]	; (80009f4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009de:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80009e0:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80009e2:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009e4:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 80009e6:	2200      	movs	r2, #0
 80009e8:	e7f3      	b.n	80009d2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 80009ea:	bf00      	nop
 80009ec:	2002bd2c 	.word	0x2002bd2c
 80009f0:	2002bd28 	.word	0x2002bd28
 80009f4:	2002bd2a 	.word	0x2002bd2a

080009f8 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 80009f8:	b510      	push	{r4, lr}
    currFbBase = (uint16_t*)frameBuffer;
 80009fa:	4c0c      	ldr	r4, [pc, #48]	; (8000a2c <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x34>)
 80009fc:	6021      	str	r1, [r4, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80009fe:	b931      	cbnz	r1, 8000a0e <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x16>
 8000a00:	4b0b      	ldr	r3, [pc, #44]	; (8000a30 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x38>)
 8000a02:	4a0c      	ldr	r2, [pc, #48]	; (8000a34 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x3c>)
 8000a04:	480c      	ldr	r0, [pc, #48]	; (8000a38 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x40>)
 8000a06:	f44f 712b 	mov.w	r1, #684	; 0x2ac
 8000a0a:	f026 feb9 	bl	8027780 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000a0e:	e9c0 120f 	strd	r1, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000a12:	3a00      	subs	r2, #0
 8000a14:	4909      	ldr	r1, [pc, #36]	; (8000a3c <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x44>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000a16:	6443      	str	r3, [r0, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000a18:	bf18      	it	ne
 8000a1a:	2201      	movne	r2, #1
 8000a1c:	700a      	strb	r2, [r1, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000a1e:	3b00      	subs	r3, #0
 8000a20:	4a07      	ldr	r2, [pc, #28]	; (8000a40 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x48>)
 8000a22:	bf18      	it	ne
 8000a24:	2301      	movne	r3, #1
 8000a26:	7013      	strb	r3, [r2, #0]
}
 8000a28:	bd10      	pop	{r4, pc}
 8000a2a:	bf00      	nop
 8000a2c:	20000174 	.word	0x20000174
 8000a30:	08028bf3 	.word	0x08028bf3
 8000a34:	08028c2b 	.word	0x08028c2b
 8000a38:	08028bae 	.word	0x08028bae
 8000a3c:	2002bd32 	.word	0x2002bd32
 8000a40:	2002bd33 	.word	0x2002bd33

08000a44 <DSI_IO_WriteCmd>:
     * @param  pParams: Pointer to parameter values table.
     * @retval HAL status
     */
    void DSI_IO_WriteCmd(uint32_t NbrParams, uint8_t* pParams)
    {
        if (NbrParams <= 1)
 8000a44:	2801      	cmp	r0, #1
    {
 8000a46:	b507      	push	{r0, r1, r2, lr}
        if (NbrParams <= 1)
 8000a48:	d80a      	bhi.n	8000a60 <DSI_IO_WriteCmd+0x1c>
        {
            HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, pParams[0], pParams[1]);
 8000a4a:	784b      	ldrb	r3, [r1, #1]
 8000a4c:	9300      	str	r3, [sp, #0]
 8000a4e:	780b      	ldrb	r3, [r1, #0]
 8000a50:	4808      	ldr	r0, [pc, #32]	; (8000a74 <DSI_IO_WriteCmd+0x30>)
 8000a52:	2215      	movs	r2, #21
 8000a54:	2100      	movs	r1, #0
 8000a56:	f00d f948 	bl	800dcea <HAL_DSI_ShortWrite>
        }
        else
        {
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
        }
    }
 8000a5a:	b003      	add	sp, #12
 8000a5c:	f85d fb04 	ldr.w	pc, [sp], #4
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
 8000a60:	9101      	str	r1, [sp, #4]
 8000a62:	5c0b      	ldrb	r3, [r1, r0]
 8000a64:	9300      	str	r3, [sp, #0]
 8000a66:	2239      	movs	r2, #57	; 0x39
 8000a68:	4603      	mov	r3, r0
 8000a6a:	2100      	movs	r1, #0
 8000a6c:	4801      	ldr	r0, [pc, #4]	; (8000a74 <DSI_IO_WriteCmd+0x30>)
 8000a6e:	f00d f94d 	bl	800dd0c <HAL_DSI_LongWrite>
    }
 8000a72:	e7f2      	b.n	8000a5a <DSI_IO_WriteCmd+0x16>
 8000a74:	2002c030 	.word	0x2002c030

08000a78 <LCD_ReqTear>:

    /**
     * Request TE at scanline.
     */
    void LCD_ReqTear(void)
    {
 8000a78:	b537      	push	{r0, r1, r2, r4, r5, lr}
        static uint8_t ScanLineParams[2];

        uint16_t scanline = 533;
        ScanLineParams[0] = scanline >> 8;
 8000a7a:	4a0b      	ldr	r2, [pc, #44]	; (8000aa8 <LCD_ReqTear+0x30>)
        ScanLineParams[1] = scanline & 0x00FF;

        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000a7c:	4c0b      	ldr	r4, [pc, #44]	; (8000aac <LCD_ReqTear+0x34>)
        ScanLineParams[0] = scanline >> 8;
 8000a7e:	2302      	movs	r3, #2
        ScanLineParams[1] = scanline & 0x00FF;
 8000a80:	2515      	movs	r5, #21
        ScanLineParams[0] = scanline >> 8;
 8000a82:	7013      	strb	r3, [r2, #0]
        ScanLineParams[1] = scanline & 0x00FF;
 8000a84:	7055      	strb	r5, [r2, #1]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000a86:	9201      	str	r2, [sp, #4]
 8000a88:	2244      	movs	r2, #68	; 0x44
 8000a8a:	9200      	str	r2, [sp, #0]
 8000a8c:	2100      	movs	r1, #0
 8000a8e:	2239      	movs	r2, #57	; 0x39
 8000a90:	4620      	mov	r0, r4
 8000a92:	f00d f93b 	bl	800dd0c <HAL_DSI_LongWrite>
        // set_tear_on
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0x35, 0x00);
 8000a96:	2100      	movs	r1, #0
 8000a98:	9100      	str	r1, [sp, #0]
 8000a9a:	2335      	movs	r3, #53	; 0x35
 8000a9c:	462a      	mov	r2, r5
 8000a9e:	4620      	mov	r0, r4
 8000aa0:	f00d f923 	bl	800dcea <HAL_DSI_ShortWrite>
    }
 8000aa4:	b003      	add	sp, #12
 8000aa6:	bd30      	pop	{r4, r5, pc}
 8000aa8:	2000018c 	.word	0x2000018c
 8000aac:	2002c030 	.word	0x2002c030

08000ab0 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 8000ab0:	b507      	push	{r0, r1, r2, lr}
 8000ab2:	9001      	str	r0, [sp, #4]
    LCD_ReqTear();
 8000ab4:	f7ff ffe0 	bl	8000a78 <LCD_ReqTear>
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000ab8:	9801      	ldr	r0, [sp, #4]
}
 8000aba:	b003      	add	sp, #12
 8000abc:	f85d eb04 	ldr.w	lr, [sp], #4
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000ac0:	f000 bc6e 	b.w	80013a0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000ac4 <LCD_SetUpdateRegion>:

    void LCD_SetUpdateRegion(int idx)
    {
 8000ac4:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pCols[idx]);
 8000ac6:	4b07      	ldr	r3, [pc, #28]	; (8000ae4 <LCD_SetUpdateRegion+0x20>)
 8000ac8:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8000acc:	232a      	movs	r3, #42	; 0x2a
 8000ace:	9001      	str	r0, [sp, #4]
 8000ad0:	9300      	str	r3, [sp, #0]
 8000ad2:	2239      	movs	r2, #57	; 0x39
 8000ad4:	2304      	movs	r3, #4
 8000ad6:	2100      	movs	r1, #0
 8000ad8:	4803      	ldr	r0, [pc, #12]	; (8000ae8 <LCD_SetUpdateRegion+0x24>)
 8000ada:	f00d f917 	bl	800dd0c <HAL_DSI_LongWrite>
    }
 8000ade:	b003      	add	sp, #12
 8000ae0:	f85d fb04 	ldr.w	pc, [sp], #4
 8000ae4:	20000004 	.word	0x20000004
 8000ae8:	2002c030 	.word	0x2002c030

08000aec <HAL_DSI_TearingEffectCallback>:
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColRight);
    }

    void HAL_DSI_TearingEffectCallback(DSI_HandleTypeDef* hdsi)
    {
 8000aec:	b570      	push	{r4, r5, r6, lr}
        return instance;
 8000aee:	4d15      	ldr	r5, [pc, #84]	; (8000b44 <HAL_DSI_TearingEffectCallback+0x58>)
 8000af0:	4604      	mov	r4, r0
        GPIO::set(GPIO::VSYNC_FREQ);
 8000af2:	2000      	movs	r0, #0
 8000af4:	f7ff fe2e 	bl	8000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8000af8:	682a      	ldr	r2, [r5, #0]
        vSyncCnt++;
 8000afa:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8000afe:	3301      	adds	r3, #1
 8000b00:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
        HAL::getInstance()->vSync();
        OSWrappers::signalVSync();
 8000b04:	f000 f8fe 	bl	8000d04 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

        // In single buffering, only require that the system waits for display update to be finished if we
        // actually intend to update the display in this frame.
        HAL::getInstance()->lockDMAToFrontPorch(refreshRequested);
 8000b08:	4b0f      	ldr	r3, [pc, #60]	; (8000b48 <HAL_DSI_TearingEffectCallback+0x5c>)
        return instance;
 8000b0a:	6828      	ldr	r0, [r5, #0]
 8000b0c:	781a      	ldrb	r2, [r3, #0]

        if (refreshRequested && !displayRefreshing)
 8000b0e:	781b      	ldrb	r3, [r3, #0]
        lockDMAToPorch = enableLock;
 8000b10:	f880 204a 	strb.w	r2, [r0, #74]	; 0x4a
 8000b14:	b123      	cbz	r3, 8000b20 <HAL_DSI_TearingEffectCallback+0x34>
 8000b16:	4d0d      	ldr	r5, [pc, #52]	; (8000b4c <HAL_DSI_TearingEffectCallback+0x60>)
 8000b18:	782b      	ldrb	r3, [r5, #0]
 8000b1a:	f003 06ff 	and.w	r6, r3, #255	; 0xff
 8000b1e:	b123      	cbz	r3, 8000b2a <HAL_DSI_TearingEffectCallback+0x3e>
        }
        else
        {
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8000b20:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000b24:	2000      	movs	r0, #0
 8000b26:	f7ff be31 	b.w	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
                HAL::getInstance()->swapFrameBuffers();
 8000b2a:	f013 ff35 	bl	8014998 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            updateRegion = 0;
 8000b2e:	4b08      	ldr	r3, [pc, #32]	; (8000b50 <HAL_DSI_TearingEffectCallback+0x64>)
            LCD_SetUpdateRegion(updateRegion);
 8000b30:	4630      	mov	r0, r6
            updateRegion = 0;
 8000b32:	601e      	str	r6, [r3, #0]
            LCD_SetUpdateRegion(updateRegion);
 8000b34:	f7ff ffc6 	bl	8000ac4 <LCD_SetUpdateRegion>
            HAL_DSI_Refresh(hdsi);
 8000b38:	4620      	mov	r0, r4
 8000b3a:	f00d f8c6 	bl	800dcca <HAL_DSI_Refresh>
            displayRefreshing = true;
 8000b3e:	2301      	movs	r3, #1
 8000b40:	702b      	strb	r3, [r5, #0]
    }
 8000b42:	bd70      	pop	{r4, r5, r6, pc}
 8000b44:	2002bd34 	.word	0x2002bd34
 8000b48:	20000014 	.word	0x20000014
 8000b4c:	2000018e 	.word	0x2000018e
 8000b50:	20000178 	.word	0x20000178

08000b54 <HAL_DSI_EndOfRefreshCallback>:

    void HAL_DSI_EndOfRefreshCallback(DSI_HandleTypeDef* hdsi)
    {
        updateRegion++;
 8000b54:	4b30      	ldr	r3, [pc, #192]	; (8000c18 <HAL_DSI_EndOfRefreshCallback+0xc4>)
 8000b56:	4a31      	ldr	r2, [pc, #196]	; (8000c1c <HAL_DSI_EndOfRefreshCallback+0xc8>)
    {
 8000b58:	b570      	push	{r4, r5, r6, lr}
 8000b5a:	4605      	mov	r5, r0
        updateRegion++;
 8000b5c:	6818      	ldr	r0, [r3, #0]
 8000b5e:	4c30      	ldr	r4, [pc, #192]	; (8000c20 <HAL_DSI_EndOfRefreshCallback+0xcc>)
 8000b60:	3001      	adds	r0, #1
 8000b62:	6018      	str	r0, [r3, #0]
        if (updateRegion < 4)
 8000b64:	4b2f      	ldr	r3, [pc, #188]	; (8000c24 <HAL_DSI_EndOfRefreshCallback+0xd0>)
 8000b66:	2803      	cmp	r0, #3
 8000b68:	681e      	ldr	r6, [r3, #0]
 8000b6a:	dc2a      	bgt.n	8000bc2 <HAL_DSI_EndOfRefreshCallback+0x6e>
        {
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b6c:	f8d4 1404 	ldr.w	r1, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000b70:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8000b74:	fb03 6300 	mla	r3, r3, r0, r6
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b78:	f021 0108 	bic.w	r1, r1, #8
 8000b7c:	f8c4 1404 	str.w	r1, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000b80:	6293      	str	r3, [r2, #40]	; 0x28

            uint16_t REAL_WIDTH = 200;
            uint16_t ADJUSTED_WIDTH = 200;
            if (updateRegion == 3)
            {
                ADJUSTED_WIDTH += 32;
 8000b82:	bf0c      	ite	eq
 8000b84:	23e8      	moveq	r3, #232	; 0xe8
            uint16_t ADJUSTED_WIDTH = 200;
 8000b86:	23c8      	movne	r3, #200	; 0xc8
            }

            LTDC->AWCR = ((ADJUSTED_WIDTH + 2) << 16) | 0x1E2; //adj
 8000b88:	3302      	adds	r3, #2
 8000b8a:	4927      	ldr	r1, [pc, #156]	; (8000c28 <HAL_DSI_EndOfRefreshCallback+0xd4>)
 8000b8c:	041b      	lsls	r3, r3, #16
 8000b8e:	f443 73f1 	orr.w	r3, r3, #482	; 0x1e2
 8000b92:	610b      	str	r3, [r1, #16]
            LTDC->TWCR = ((REAL_WIDTH + 2 + 1 - 1) << 16) | 0x1E3;
 8000b94:	4b25      	ldr	r3, [pc, #148]	; (8000c2c <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8000b96:	614b      	str	r3, [r1, #20]
            LTDC_Layer1->WHPCR = ((REAL_WIDTH + 2) << 16) | 3;
 8000b98:	f5a3 73f0 	sub.w	r3, r3, #480	; 0x1e0
 8000b9c:	6053      	str	r3, [r2, #4]
            LTDC_Layer1->CFBLR = ((832 * 2) << 16) | ((REAL_WIDTH) * 2 + 3);
 8000b9e:	4b24      	ldr	r3, [pc, #144]	; (8000c30 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000ba0:	62d3      	str	r3, [r2, #44]	; 0x2c

            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000ba2:	2301      	movs	r3, #1
 8000ba4:	624b      	str	r3, [r1, #36]	; 0x24
            LCD_SetUpdateRegion(updateRegion);
 8000ba6:	f7ff ff8d 	bl	8000ac4 <LCD_SetUpdateRegion>

            DSI->WCR |= DSI_WCR_DSIEN;
 8000baa:	4a1d      	ldr	r2, [pc, #116]	; (8000c20 <HAL_DSI_EndOfRefreshCallback+0xcc>)
 8000bac:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 8000bb0:	f043 0308 	orr.w	r3, r3, #8
            HAL_DSI_Refresh(hdsi);
 8000bb4:	4628      	mov	r0, r5
            DSI->WCR |= DSI_WCR_DSIEN;
 8000bb6:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
            {
                // Signal to the framework that display update has finished.
                HAL::getInstance()->frontPorchEntered();
            }
        }
    }
 8000bba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            HAL_DSI_Refresh(hdsi);
 8000bbe:	f00d b884 	b.w	800dcca <HAL_DSI_Refresh>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000bc2:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000bc6:	491b      	ldr	r1, [pc, #108]	; (8000c34 <HAL_DSI_EndOfRefreshCallback+0xe0>)
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000bc8:	f023 0308 	bic.w	r3, r3, #8
 8000bcc:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000bd0:	4b15      	ldr	r3, [pc, #84]	; (8000c28 <HAL_DSI_EndOfRefreshCallback+0xd4>)
            LTDC_Layer1->CFBAR = (uint32_t)currFbBase;
 8000bd2:	6296      	str	r6, [r2, #40]	; 0x28
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000bd4:	6119      	str	r1, [r3, #16]
            LTDC->TWCR = ((WIDTH + 2 + 1) << 16) | 0x1E3;
 8000bd6:	f101 1101 	add.w	r1, r1, #65537	; 0x10001
 8000bda:	6159      	str	r1, [r3, #20]
            LTDC_Layer1->WHPCR = ((WIDTH + 2) << 16) | 3;
 8000bdc:	4916      	ldr	r1, [pc, #88]	; (8000c38 <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8000bde:	6051      	str	r1, [r2, #4]
            LTDC_Layer1->CFBLR = (((832 * 2) << 16) | ((WIDTH * 2) + 3));
 8000be0:	4913      	ldr	r1, [pc, #76]	; (8000c30 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000be2:	62d1      	str	r1, [r2, #44]	; 0x2c
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000be4:	2201      	movs	r2, #1
 8000be6:	625a      	str	r2, [r3, #36]	; 0x24
            LCD_SetUpdateRegion(0);
 8000be8:	2000      	movs	r0, #0
 8000bea:	f7ff ff6b 	bl	8000ac4 <LCD_SetUpdateRegion>
            DSI->WCR |= DSI_WCR_DSIEN;
 8000bee:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
 8000bf2:	f043 0308 	orr.w	r3, r3, #8
 8000bf6:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000bfa:	2000      	movs	r0, #0
 8000bfc:	f7ff fdc6 	bl	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            displayRefreshing = false;
 8000c00:	4b0e      	ldr	r3, [pc, #56]	; (8000c3c <HAL_DSI_EndOfRefreshCallback+0xe8>)
 8000c02:	2200      	movs	r2, #0
 8000c04:	701a      	strb	r2, [r3, #0]
        return instance;
 8000c06:	4b0e      	ldr	r3, [pc, #56]	; (8000c40 <HAL_DSI_EndOfRefreshCallback+0xec>)
 8000c08:	6818      	ldr	r0, [r3, #0]
            if (HAL::getInstance())
 8000c0a:	b120      	cbz	r0, 8000c16 <HAL_DSI_EndOfRefreshCallback+0xc2>
        allowDMATransfers();
 8000c0c:	6803      	ldr	r3, [r0, #0]
    }
 8000c0e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000c12:	6a1b      	ldr	r3, [r3, #32]
 8000c14:	4718      	bx	r3
 8000c16:	bd70      	pop	{r4, r5, r6, pc}
 8000c18:	20000178 	.word	0x20000178
 8000c1c:	40016884 	.word	0x40016884
 8000c20:	40016c00 	.word	0x40016c00
 8000c24:	20000174 	.word	0x20000174
 8000c28:	40016800 	.word	0x40016800
 8000c2c:	00ca01e3 	.word	0x00ca01e3
 8000c30:	06800193 	.word	0x06800193
 8000c34:	00ca01e2 	.word	0x00ca01e2
 8000c38:	00ca0003 	.word	0x00ca0003
 8000c3c:	2000018e 	.word	0x2000018e
 8000c40:	2002bd34 	.word	0x2002bd34

08000c44 <IdleTaskHook>:

    portBASE_TYPE IdleTaskHook(void* p)
    {
 8000c44:	b508      	push	{r3, lr}
 8000c46:	4b04      	ldr	r3, [pc, #16]	; (8000c58 <IdleTaskHook+0x14>)
 8000c48:	4601      	mov	r1, r0
 8000c4a:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8000c4c:	b101      	cbz	r1, 8000c50 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 8000c4e:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8000c50:	f013 febc 	bl	80149cc <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8000c54:	2001      	movs	r0, #1
 8000c56:	bd08      	pop	{r3, pc}
 8000c58:	2002bd34 	.word	0x2002bd34

08000c5c <_GLOBAL__sub_I_displayRefreshing>:
          cc_in(0)
 8000c5c:	4b05      	ldr	r3, [pc, #20]	; (8000c74 <_GLOBAL__sub_I_displayRefreshing+0x18>)
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 8000c5e:	4806      	ldr	r0, [pc, #24]	; (8000c78 <_GLOBAL__sub_I_displayRefreshing+0x1c>)
 8000c60:	2200      	movs	r2, #0
 8000c62:	605a      	str	r2, [r3, #4]
 8000c64:	609a      	str	r2, [r3, #8]
 8000c66:	4a05      	ldr	r2, [pc, #20]	; (8000c7c <_GLOBAL__sub_I_displayRefreshing+0x20>)
 8000c68:	601a      	str	r2, [r3, #0]
 8000c6a:	4b05      	ldr	r3, [pc, #20]	; (8000c80 <_GLOBAL__sub_I_displayRefreshing+0x24>)
 8000c6c:	6003      	str	r3, [r0, #0]
        init();
 8000c6e:	f7ff bd01 	b.w	8000674 <_ZN8touchgfx10KeySampler4initEv>
 8000c72:	bf00      	nop
 8000c74:	20000180 	.word	0x20000180
 8000c78:	2000017c 	.word	0x2000017c
 8000c7c:	08028a14 	.word	0x08028a14
 8000c80:	08028a3c 	.word	0x08028a3c

08000c84 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000c84:	2101      	movs	r1, #1
{
 8000c86:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000c88:	2200      	movs	r2, #0
 8000c8a:	4608      	mov	r0, r1
 8000c8c:	f00f fab5 	bl	80101fa <osSemaphoreNew>
 8000c90:	4b0a      	ldr	r3, [pc, #40]	; (8000cbc <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000c92:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000c94:	b928      	cbnz	r0, 8000ca2 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000c96:	4b0a      	ldr	r3, [pc, #40]	; (8000cc0 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000c98:	4a0a      	ldr	r2, [pc, #40]	; (8000cc4 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000c9a:	2129      	movs	r1, #41	; 0x29

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000c9c:	480a      	ldr	r0, [pc, #40]	; (8000cc8 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000c9e:	f026 fd6f 	bl	8027780 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000ca2:	2200      	movs	r2, #0
 8000ca4:	2104      	movs	r1, #4
 8000ca6:	2001      	movs	r0, #1
 8000ca8:	f00f fb46 	bl	8010338 <osMessageQueueNew>
 8000cac:	4b07      	ldr	r3, [pc, #28]	; (8000ccc <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000cae:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000cb0:	b918      	cbnz	r0, 8000cba <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000cb2:	4b07      	ldr	r3, [pc, #28]	; (8000cd0 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000cb4:	4a03      	ldr	r2, [pc, #12]	; (8000cc4 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000cb6:	212d      	movs	r1, #45	; 0x2d
 8000cb8:	e7f0      	b.n	8000c9c <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000cba:	bd08      	pop	{r3, pc}
 8000cbc:	20000194 	.word	0x20000194
 8000cc0:	08028d4c 	.word	0x08028d4c
 8000cc4:	08028d95 	.word	0x08028d95
 8000cc8:	08028dc4 	.word	0x08028dc4
 8000ccc:	20000190 	.word	0x20000190
 8000cd0:	08028e24 	.word	0x08028e24

08000cd4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000cd4:	4b02      	ldr	r3, [pc, #8]	; (8000ce0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000cd6:	f04f 31ff 	mov.w	r1, #4294967295
 8000cda:	6818      	ldr	r0, [r3, #0]
 8000cdc:	f00f bad8 	b.w	8010290 <osSemaphoreAcquire>
 8000ce0:	20000194 	.word	0x20000194

08000ce4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000ce4:	4b01      	ldr	r3, [pc, #4]	; (8000cec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000ce6:	6818      	ldr	r0, [r3, #0]
 8000ce8:	f00f bafe 	b.w	80102e8 <osSemaphoreRelease>
 8000cec:	20000194 	.word	0x20000194

08000cf0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000cf0:	4b02      	ldr	r3, [pc, #8]	; (8000cfc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000cf2:	2100      	movs	r1, #0
 8000cf4:	6818      	ldr	r0, [r3, #0]
 8000cf6:	f00f bacb 	b.w	8010290 <osSemaphoreAcquire>
 8000cfa:	bf00      	nop
 8000cfc:	20000194 	.word	0x20000194

08000d00 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000d00:	f7ff bff0 	b.w	8000ce4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000d04 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000d04:	4803      	ldr	r0, [pc, #12]	; (8000d14 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000d06:	4904      	ldr	r1, [pc, #16]	; (8000d18 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000d08:	6800      	ldr	r0, [r0, #0]
 8000d0a:	2300      	movs	r3, #0
 8000d0c:	461a      	mov	r2, r3
 8000d0e:	f00f bb4f 	b.w	80103b0 <osMessageQueuePut>
 8000d12:	bf00      	nop
 8000d14:	20000190 	.word	0x20000190
 8000d18:	20000018 	.word	0x20000018

08000d1c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000d1c:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000d1e:	4c08      	ldr	r4, [pc, #32]	; (8000d40 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000d20:	2300      	movs	r3, #0
 8000d22:	461a      	mov	r2, r3
 8000d24:	a901      	add	r1, sp, #4
 8000d26:	6820      	ldr	r0, [r4, #0]
 8000d28:	f00f fb72 	bl	8010410 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000d2c:	6820      	ldr	r0, [r4, #0]
 8000d2e:	f04f 33ff 	mov.w	r3, #4294967295
 8000d32:	2200      	movs	r2, #0
 8000d34:	a901      	add	r1, sp, #4
 8000d36:	f00f fb6b 	bl	8010410 <osMessageQueueGet>
}
 8000d3a:	b002      	add	sp, #8
 8000d3c:	bd10      	pop	{r4, pc}
 8000d3e:	bf00      	nop
 8000d40:	20000190 	.word	0x20000190

08000d44 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000d44:	6803      	ldr	r3, [r0, #0]
 8000d46:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000d48:	4718      	bx	r3

08000d4a <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000d4a:	2001      	movs	r0, #1
 8000d4c:	4770      	bx	lr

08000d4e <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000d4e:	6803      	ldr	r3, [r0, #0]
 8000d50:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000d52:	4718      	bx	r3

08000d54 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8000d54:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000d56:	2300      	movs	r3, #0
 8000d58:	9301      	str	r3, [sp, #4]
 8000d5a:	4b0d      	ldr	r3, [pc, #52]	; (8000d90 <_ZN8STM32DMA10initializeEv+0x3c>)
 8000d5c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000d5e:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000d62:	631a      	str	r2, [r3, #48]	; 0x30
 8000d64:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000d66:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8000d6a:	9201      	str	r2, [sp, #4]
 8000d6c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000d6e:	691a      	ldr	r2, [r3, #16]
 8000d70:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000d74:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000d76:	691a      	ldr	r2, [r3, #16]
 8000d78:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000d7c:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000d7e:	4b05      	ldr	r3, [pc, #20]	; (8000d94 <_ZN8STM32DMA10initializeEv+0x40>)
 8000d80:	4a05      	ldr	r2, [pc, #20]	; (8000d98 <_ZN8STM32DMA10initializeEv+0x44>)
 8000d82:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000d84:	4b05      	ldr	r3, [pc, #20]	; (8000d9c <_ZN8STM32DMA10initializeEv+0x48>)
 8000d86:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000d8a:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000d8c:	b002      	add	sp, #8
 8000d8e:	4770      	bx	lr
 8000d90:	40023800 	.word	0x40023800
 8000d94:	2002c0f8 	.word	0x2002c0f8
 8000d98:	08000da9 	.word	0x08000da9
 8000d9c:	e000e100 	.word	0xe000e100

08000da0 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000da0:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000da4:	4770      	bx	lr
	...

08000da8 <DMA2D_XferCpltCallback>:
        HAL::getInstance()->signalDMAInterrupt();
 8000da8:	4b02      	ldr	r3, [pc, #8]	; (8000db4 <DMA2D_XferCpltCallback+0xc>)
 8000daa:	681b      	ldr	r3, [r3, #0]
 8000dac:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000dae:	6803      	ldr	r3, [r0, #0]
 8000db0:	695b      	ldr	r3, [r3, #20]
 8000db2:	4718      	bx	r3
 8000db4:	2002bd34 	.word	0x2002bd34

08000db8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8000db8:	b508      	push	{r3, lr}
 8000dba:	280b      	cmp	r0, #11
 8000dbc:	d80b      	bhi.n	8000dd6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8000dbe:	e8df f000 	tbb	[pc, r0]
 8000dc2:	0612      	.short	0x0612
 8000dc4:	0a0a0a10 	.word	0x0a0a0a10
 8000dc8:	0808080a 	.word	0x0808080a
 8000dcc:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000dce:	2001      	movs	r0, #1
}
 8000dd0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000dd2:	2005      	movs	r0, #5
        break;
 8000dd4:	e7fc      	b.n	8000dd0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8000dd6:	4b05      	ldr	r3, [pc, #20]	; (8000dec <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000dd8:	4a05      	ldr	r2, [pc, #20]	; (8000df0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000dda:	4806      	ldr	r0, [pc, #24]	; (8000df4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8000ddc:	2167      	movs	r1, #103	; 0x67
 8000dde:	f026 fccf 	bl	8027780 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000de2:	2000      	movs	r0, #0
 8000de4:	e7f4      	b.n	8000dd0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000de6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000de8:	e7f2      	b.n	8000dd0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000dea:	bf00      	nop
 8000dec:	08028e66 	.word	0x08028e66
 8000df0:	08028e81 	.word	0x08028e81
 8000df4:	08028ecb 	.word	0x08028ecb

08000df8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8000df8:	b508      	push	{r3, lr}
 8000dfa:	280a      	cmp	r0, #10
 8000dfc:	d809      	bhi.n	8000e12 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8000dfe:	e8df f000 	tbb	[pc, r0]
 8000e02:	0610      	.short	0x0610
 8000e04:	0808080e 	.word	0x0808080e
 8000e08:	06060608 	.word	0x06060608
 8000e0c:	06          	.byte	0x06
 8000e0d:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000e0e:	2001      	movs	r0, #1
}
 8000e10:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000e12:	4b05      	ldr	r3, [pc, #20]	; (8000e28 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8000e14:	4a05      	ldr	r2, [pc, #20]	; (8000e2c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000e16:	4806      	ldr	r0, [pc, #24]	; (8000e30 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000e18:	2188      	movs	r1, #136	; 0x88
 8000e1a:	f026 fcb1 	bl	8027780 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000e1e:	2000      	movs	r0, #0
 8000e20:	e7f6      	b.n	8000e10 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000e22:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000e24:	e7f4      	b.n	8000e10 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000e26:	bf00      	nop
 8000e28:	08028e66 	.word	0x08028e66
 8000e2c:	08028f29 	.word	0x08028f29
 8000e30:	08028ecb 	.word	0x08028ecb

08000e34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000e34:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e38:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000e3c:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e3e:	4640      	mov	r0, r8
 8000e40:	f7ff ffba 	bl	8000db8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e44:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e46:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e48:	4638      	mov	r0, r7
 8000e4a:	f7ff ffb5 	bl	8000db8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8000e4e:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e50:	4638      	mov	r0, r7
 8000e52:	f7ff ffd1 	bl	8000df8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000e56:	8aa1      	ldrh	r1, [r4, #20]
 8000e58:	8b62      	ldrh	r2, [r4, #26]
 8000e5a:	4b4b      	ldr	r3, [pc, #300]	; (8000f88 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000e5c:	1a52      	subs	r2, r2, r1
 8000e5e:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000e60:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000e62:	8b22      	ldrh	r2, [r4, #24]
 8000e64:	1a52      	subs	r2, r2, r1
 8000e66:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000e68:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000e6a:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000e6c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000e70:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e72:	6921      	ldr	r1, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000e74:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e76:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000e78:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000e7a:	f8d4 c000 	ldr.w	ip, [r4]
 8000e7e:	f894 901c 	ldrb.w	r9, [r4, #28]
 8000e82:	f1bc 0f80 	cmp.w	ip, #128	; 0x80
 8000e86:	ea4f 6209 	mov.w	r2, r9, lsl #24
 8000e8a:	469e      	mov	lr, r3
 8000e8c:	d030      	beq.n	8000ef0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbc>
 8000e8e:	d814      	bhi.n	8000eba <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x86>
 8000e90:	f1bc 0f20 	cmp.w	ip, #32
 8000e94:	ea45 0002 	orr.w	r0, r5, r2
 8000e98:	d068      	beq.n	8000f6c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>
 8000e9a:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 8000e9e:	d065      	beq.n	8000f6c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>
 8000ea0:	f1bc 0f04 	cmp.w	ip, #4
 8000ea4:	d020      	beq.n	8000ee8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb4>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ea6:	4b38      	ldr	r3, [pc, #224]	; (8000f88 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000ea8:	432a      	orrs	r2, r5
 8000eaa:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000eae:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000eb0:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000eb2:	d148      	bne.n	8000f46 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x112>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000eb4:	f240 2201 	movw	r2, #513	; 0x201
 8000eb8:	e014      	b.n	8000ee4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
    switch (blitOp.operation)
 8000eba:	f5bc 7f80 	cmp.w	ip, #256	; 0x100
 8000ebe:	d007      	beq.n	8000ed0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
 8000ec0:	f5bc 7f00 	cmp.w	ip, #512	; 0x200
 8000ec4:	d1ef      	bne.n	8000ea6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x72>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ec6:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000eca:	f042 0209 	orr.w	r2, r2, #9
 8000ece:	e003      	b.n	8000ed8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa4>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ed0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000ed4:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ed8:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000eda:	68e2      	ldr	r2, [r4, #12]
 8000edc:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ede:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ee0:	6159      	str	r1, [r3, #20]
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000ee2:	4a2a      	ldr	r2, [pc, #168]	; (8000f8c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x158>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000ee4:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000ee6:	e04c      	b.n	8000f82 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14e>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ee8:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8000eec:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000eee:	e7f6      	b.n	8000ede <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xaa>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000ef0:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ef2:	432a      	orrs	r2, r5
 8000ef4:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000ef8:	1d04      	adds	r4, r0, #4
 8000efa:	62dc      	str	r4, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000efc:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000efe:	7802      	ldrb	r2, [r0, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f00:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f02:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000f04:	b142      	cbz	r2, 8000f18 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe4>
 8000f06:	2a01      	cmp	r2, #1
 8000f08:	d01f      	beq.n	8000f4a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x116>
                assert(0 && "Unsupported format");
 8000f0a:	4b21      	ldr	r3, [pc, #132]	; (8000f90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15c>)
 8000f0c:	4a21      	ldr	r2, [pc, #132]	; (8000f94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x160>)
 8000f0e:	4822      	ldr	r0, [pc, #136]	; (8000f98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x164>)
 8000f10:	f44f 7189 	mov.w	r1, #274	; 0x112
 8000f14:	f026 fc34 	bl	8027780 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f18:	8842      	ldrh	r2, [r0, #2]
 8000f1a:	69d9      	ldr	r1, [r3, #28]
 8000f1c:	1e50      	subs	r0, r2, #1
 8000f1e:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000f22:	f022 0210 	bic.w	r2, r2, #16
 8000f26:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000f2a:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000f2c:	2401      	movs	r4, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000f2e:	4b16      	ldr	r3, [pc, #88]	; (8000f88 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000f30:	69da      	ldr	r2, [r3, #28]
 8000f32:	f042 0220 	orr.w	r2, r2, #32
 8000f36:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000f38:	69da      	ldr	r2, [r3, #28]
 8000f3a:	0692      	lsls	r2, r2, #26
 8000f3c:	d4fc      	bmi.n	8000f38 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x104>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000f3e:	2210      	movs	r2, #16
 8000f40:	609a      	str	r2, [r3, #8]
            if(blend)
 8000f42:	2c00      	cmp	r4, #0
 8000f44:	d1cd      	bne.n	8000ee2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xae>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000f46:	4a15      	ldr	r2, [pc, #84]	; (8000f9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>)
 8000f48:	e7cc      	b.n	8000ee4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f4a:	8842      	ldrh	r2, [r0, #2]
 8000f4c:	69d9      	ldr	r1, [r3, #28]
 8000f4e:	1e50      	subs	r0, r2, #1
 8000f50:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000f54:	f022 0210 	bic.w	r2, r2, #16
 8000f58:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
                if(blitOp.alpha == 255)
 8000f5c:	f1b9 04ff 	subs.w	r4, r9, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f60:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000f64:	bf18      	it	ne
 8000f66:	2401      	movne	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f68:	61da      	str	r2, [r3, #28]
                break;
 8000f6a:	e7e0      	b.n	8000f2e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000f6c:	4b07      	ldr	r3, [pc, #28]	; (8000f8c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x158>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f6e:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8000f72:	f8ce 001c 	str.w	r0, [lr, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f76:	f8ce 6024 	str.w	r6, [lr, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f7a:	f8ce 1014 	str.w	r1, [lr, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000f7e:	f8ce 3000 	str.w	r3, [lr]
}
 8000f82:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000f86:	bf00      	nop
 8000f88:	4002b000 	.word	0x4002b000
 8000f8c:	00020201 	.word	0x00020201
 8000f90:	08028f74 	.word	0x08028f74
 8000f94:	08028f8e 	.word	0x08028f8e
 8000f98:	08028ecb 	.word	0x08028ecb
 8000f9c:	00010201 	.word	0x00010201

08000fa0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000fa0:	b538      	push	{r3, r4, r5, lr}
 8000fa2:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000fa4:	7f88      	ldrb	r0, [r1, #30]
 8000fa6:	f7ff ff27 	bl	8000df8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000faa:	8aa5      	ldrh	r5, [r4, #20]
 8000fac:	8ae1      	ldrh	r1, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000fae:	4b16      	ldr	r3, [pc, #88]	; (8001008 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fb0:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000fb2:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000fb4:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000fb8:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fba:	1b52      	subs	r2, r2, r5
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fbc:	6921      	ldr	r1, [r4, #16]
 8000fbe:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fc0:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000fc2:	6825      	ldr	r5, [r4, #0]
 8000fc4:	2d08      	cmp	r5, #8
 8000fc6:	d10e      	bne.n	8000fe6 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fc8:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fca:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000fcc:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, CM_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
 8000fce:	7f20      	ldrb	r0, [r4, #28]
 8000fd0:	4a0e      	ldr	r2, [pc, #56]	; (800100c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000fd2:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000fd6:	61da      	str	r2, [r3, #28]

        /* DMA2D FGCOLR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000fd8:	68e2      	ldr	r2, [r4, #12]
 8000fda:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000fdc:	4a0c      	ldr	r2, [pc, #48]	; (8001010 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fde:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fe0:	60d9      	str	r1, [r3, #12]

        // set color
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000fe2:	601a      	str	r2, [r3, #0]
    }
}
 8000fe4:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000fe6:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000fe8:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000fea:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000fec:	68e1      	ldr	r1, [r4, #12]
 8000fee:	0a0a      	lsrs	r2, r1, #8
 8000ff0:	0948      	lsrs	r0, r1, #5
 8000ff2:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000ff6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000ffa:	4302      	orrs	r2, r0
 8000ffc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8001000:	430a      	orrs	r2, r1
 8001002:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001004:	4a03      	ldr	r2, [pc, #12]	; (8001014 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8001006:	e7ec      	b.n	8000fe2 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8001008:	4002b000 	.word	0x4002b000
 800100c:	00010009 	.word	0x00010009
 8001010:	00020201 	.word	0x00020201
 8001014:	00030201 	.word	0x00030201

08001018 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8001018:	4b05      	ldr	r3, [pc, #20]	; (8001030 <_ZN8STM32DMAD1Ev+0x18>)
 800101a:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800101c:	4b05      	ldr	r3, [pc, #20]	; (8001034 <_ZN8STM32DMAD1Ev+0x1c>)
 800101e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001022:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001026:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800102a:	f3bf 8f6f 	isb	sy
}
 800102e:	4770      	bx	lr
 8001030:	08028fd4 	.word	0x08028fd4
 8001034:	e000e100 	.word	0xe000e100

08001038 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8001038:	b510      	push	{r4, lr}
 800103a:	4604      	mov	r4, r0
}
 800103c:	f7ff ffec 	bl	8001018 <_ZN8STM32DMAD1Ev>
 8001040:	4620      	mov	r0, r4
 8001042:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 8001046:	f026 fb6d 	bl	8027724 <_ZdlPvj>
 800104a:	4620      	mov	r0, r4
 800104c:	bd10      	pop	{r4, pc}
	...

08001050 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8001050:	b570      	push	{r4, r5, r6, lr}
 8001052:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001054:	4625      	mov	r5, r4
 8001056:	4b0a      	ldr	r3, [pc, #40]	; (8001080 <_ZN8STM32DMAC1Ev+0x30>)
 8001058:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800105a:	2600      	movs	r6, #0
 800105c:	6060      	str	r0, [r4, #4]
 800105e:	7226      	strb	r6, [r4, #8]
 8001060:	7266      	strb	r6, [r4, #9]
 8001062:	f845 3b20 	str.w	r3, [r5], #32
 8001066:	2260      	movs	r2, #96	; 0x60
 8001068:	4629      	mov	r1, r5
 800106a:	f013 fde3 	bl	8014c34 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800106e:	f504 6342 	add.w	r3, r4, #3104	; 0xc20
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8001072:	60ee      	str	r6, [r5, #12]
 8001074:	3520      	adds	r5, #32
 8001076:	42ab      	cmp	r3, r5
 8001078:	d1fb      	bne.n	8001072 <_ZN8STM32DMAC1Ev+0x22>
}
 800107a:	4620      	mov	r0, r4
 800107c:	bd70      	pop	{r4, r5, r6, pc}
 800107e:	bf00      	nop
 8001080:	08028fd4 	.word	0x08028fd4

08001084 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001084:	2001      	movs	r0, #1
 8001086:	4770      	bx	lr

08001088 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8001088:	200c      	movs	r0, #12
 800108a:	4770      	bx	lr

0800108c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 800108c:	230c      	movs	r3, #12
 800108e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001092:	3008      	adds	r0, #8
 8001094:	4770      	bx	lr

08001096 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8001096:	230c      	movs	r3, #12
 8001098:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800109c:	3008      	adds	r0, #8
 800109e:	4770      	bx	lr

080010a0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010a0:	2001      	movs	r0, #1
 80010a2:	4770      	bx	lr

080010a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010a4:	4800      	ldr	r0, [pc, #0]	; (80010a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv+0x4>)
 80010a6:	4770      	bx	lr
 80010a8:	00019c08 	.word	0x00019c08

080010ac <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010ac:	4b02      	ldr	r3, [pc, #8]	; (80010b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt+0xc>)
 80010ae:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010b2:	3008      	adds	r0, #8
 80010b4:	4770      	bx	lr
 80010b6:	bf00      	nop
 80010b8:	00019c08 	.word	0x00019c08

080010bc <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010bc:	4b02      	ldr	r3, [pc, #8]	; (80010c8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt+0xc>)
 80010be:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010c2:	3008      	adds	r0, #8
 80010c4:	4770      	bx	lr
 80010c6:	bf00      	nop
 80010c8:	00019c08 	.word	0x00019c08

080010cc <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010cc:	2001      	movs	r0, #1
 80010ce:	4770      	bx	lr

080010d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010d0:	2010      	movs	r0, #16
 80010d2:	4770      	bx	lr

080010d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010d4:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80010d8:	3008      	adds	r0, #8
 80010da:	4770      	bx	lr

080010dc <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010dc:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80010e0:	3008      	adds	r0, #8
 80010e2:	4770      	bx	lr

080010e4 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 80010e4:	4608      	mov	r0, r1
 80010e6:	f004 b9b5 	b.w	8005454 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
	...

080010ec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 80010ec:	b510      	push	{r4, lr}
 80010ee:	4b03      	ldr	r3, [pc, #12]	; (80010fc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80010f0:	6003      	str	r3, [r0, #0]
 80010f2:	4604      	mov	r4, r0
 80010f4:	f011 f9de 	bl	80124b4 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80010f8:	4620      	mov	r0, r4
 80010fa:	bd10      	pop	{r4, pc}
 80010fc:	0802908c 	.word	0x0802908c

08001100 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001100:	b510      	push	{r4, lr}
 8001102:	4604      	mov	r4, r0
 8001104:	f7ff fff2 	bl	80010ec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001108:	4620      	mov	r0, r4
 800110a:	2114      	movs	r1, #20
 800110c:	f026 fb0a 	bl	8027724 <_ZdlPvj>
 8001110:	4620      	mov	r0, r4
 8001112:	bd10      	pop	{r4, pc}

08001114 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001114:	b510      	push	{r4, lr}
 8001116:	4b03      	ldr	r3, [pc, #12]	; (8001124 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001118:	6003      	str	r3, [r0, #0]
 800111a:	4604      	mov	r4, r0
 800111c:	f011 f9ca 	bl	80124b4 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001120:	4620      	mov	r0, r4
 8001122:	bd10      	pop	{r4, pc}
 8001124:	08029058 	.word	0x08029058

08001128 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001128:	b510      	push	{r4, lr}
 800112a:	4604      	mov	r4, r0
 800112c:	f7ff fff2 	bl	8001114 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001130:	4620      	mov	r0, r4
 8001132:	4902      	ldr	r1, [pc, #8]	; (800113c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x14>)
 8001134:	f026 faf6 	bl	8027724 <_ZdlPvj>
 8001138:	4620      	mov	r0, r4
 800113a:	bd10      	pop	{r4, pc}
 800113c:	00019c10 	.word	0x00019c10

08001140 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001140:	b510      	push	{r4, lr}
 8001142:	4b03      	ldr	r3, [pc, #12]	; (8001150 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001144:	6003      	str	r3, [r0, #0]
 8001146:	4604      	mov	r4, r0
 8001148:	f011 f9b4 	bl	80124b4 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800114c:	4620      	mov	r0, r4
 800114e:	bd10      	pop	{r4, pc}
 8001150:	08029024 	.word	0x08029024

08001154 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001154:	b510      	push	{r4, lr}
 8001156:	4604      	mov	r4, r0
 8001158:	f7ff fff2 	bl	8001140 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800115c:	4620      	mov	r0, r4
 800115e:	2118      	movs	r1, #24
 8001160:	f026 fae0 	bl	8027724 <_ZdlPvj>
 8001164:	4620      	mov	r0, r4
 8001166:	bd10      	pop	{r4, pc}

08001168 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001168:	b510      	push	{r4, lr}
 800116a:	4b09      	ldr	r3, [pc, #36]	; (8001190 <_ZN12FrontendHeapD1Ev+0x28>)
 800116c:	6003      	str	r3, [r0, #0]
 800116e:	4604      	mov	r4, r0
 8001170:	f500 30ce 	add.w	r0, r0, #105472	; 0x19c00
 8001174:	303c      	adds	r0, #60	; 0x3c
 8001176:	f7ff ffb9 	bl	80010ec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800117a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 800117e:	f7ff ffc9 	bl	8001114 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001182:	f104 0014 	add.w	r0, r4, #20
 8001186:	f7ff ffdb 	bl	8001140 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800118a:	4620      	mov	r0, r4
 800118c:	bd10      	pop	{r4, pc}
 800118e:	bf00      	nop
 8001190:	080290c0 	.word	0x080290c0

08001194 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001194:	b508      	push	{r3, lr}
 8001196:	4802      	ldr	r0, [pc, #8]	; (80011a0 <__tcf_0+0xc>)
 8001198:	f7ff ffe6 	bl	8001168 <_ZN12FrontendHeapD1Ev>
 800119c:	bd08      	pop	{r3, pc}
 800119e:	bf00      	nop
 80011a0:	2000019c 	.word	0x2000019c

080011a4 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80011a4:	b510      	push	{r4, lr}
 80011a6:	4604      	mov	r4, r0
 80011a8:	f7ff ffde 	bl	8001168 <_ZN12FrontendHeapD1Ev>
 80011ac:	4620      	mov	r0, r4
 80011ae:	4902      	ldr	r1, [pc, #8]	; (80011b8 <_ZN12FrontendHeapD0Ev+0x14>)
 80011b0:	f026 fab8 	bl	8027724 <_ZdlPvj>
 80011b4:	4620      	mov	r0, r4
 80011b6:	bd10      	pop	{r4, pc}
 80011b8:	00019dac 	.word	0x00019dac

080011bc <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 80011bc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80011c0:	f000 ff0c 	bl	8001fdc <_ZN14BitmapDatabase11getInstanceEv>
 80011c4:	4605      	mov	r5, r0
 80011c6:	f000 ff0d 	bl	8001fe4 <_ZN14BitmapDatabase15getInstanceSizeEv>
 80011ca:	2400      	movs	r4, #0
 80011cc:	4601      	mov	r1, r0
 80011ce:	4623      	mov	r3, r4
 80011d0:	4628      	mov	r0, r5
 80011d2:	4622      	mov	r2, r4
 80011d4:	9400      	str	r4, [sp, #0]
 80011d6:	f01a fa35 	bl	801b644 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80011da:	4b25      	ldr	r3, [pc, #148]	; (8001270 <touchgfx_init+0xb4>)
 80011dc:	4a25      	ldr	r2, [pc, #148]	; (8001274 <touchgfx_init+0xb8>)
        static FrontendHeap instance;
 80011de:	4d26      	ldr	r5, [pc, #152]	; (8001278 <touchgfx_init+0xbc>)
 80011e0:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 80011e2:	4620      	mov	r0, r4
 80011e4:	f007 fcd4 	bl	8008b90 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 80011e8:	4824      	ldr	r0, [pc, #144]	; (800127c <touchgfx_init+0xc0>)
 80011ea:	f01a f96d 	bl	801b4c8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 80011ee:	782b      	ldrb	r3, [r5, #0]
 80011f0:	f3bf 8f5b 	dmb	ish
 80011f4:	07db      	lsls	r3, r3, #31
 80011f6:	d435      	bmi.n	8001264 <touchgfx_init+0xa8>
 80011f8:	4628      	mov	r0, r5
 80011fa:	f026 fa95 	bl	8027728 <__cxa_guard_acquire>
 80011fe:	b388      	cbz	r0, 8001264 <touchgfx_init+0xa8>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001200:	4c1f      	ldr	r4, [pc, #124]	; (8001280 <touchgfx_init+0xc4>)
 8001202:	4f20      	ldr	r7, [pc, #128]	; (8001284 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001204:	4b20      	ldr	r3, [pc, #128]	; (8001288 <touchgfx_init+0xcc>)
 8001206:	6023      	str	r3, [r4, #0]
 8001208:	f107 0618 	add.w	r6, r7, #24
 800120c:	f104 0014 	add.w	r0, r4, #20
 8001210:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8001214:	6060      	str	r0, [r4, #4]
 8001216:	f8c4 8008 	str.w	r8, [r4, #8]
 800121a:	60e7      	str	r7, [r4, #12]
 800121c:	6126      	str	r6, [r4, #16]
 800121e:	f011 f94b 	bl	80124b8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001222:	4b1a      	ldr	r3, [pc, #104]	; (800128c <touchgfx_init+0xd0>)
 8001224:	6163      	str	r3, [r4, #20]
 8001226:	4640      	mov	r0, r8
 8001228:	f011 f946 	bl	80124b8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800122c:	4b18      	ldr	r3, [pc, #96]	; (8001290 <touchgfx_init+0xd4>)
 800122e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001230:	4638      	mov	r0, r7
 8001232:	f011 f941 	bl	80124b8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001236:	f504 33ce 	add.w	r3, r4, #105472	; 0x19c00
 800123a:	4a16      	ldr	r2, [pc, #88]	; (8001294 <touchgfx_init+0xd8>)
 800123c:	63da      	str	r2, [r3, #60]	; 0x3c
 800123e:	f103 0050 	add.w	r0, r3, #80	; 0x50
 8001242:	f008 fdfa 	bl	8009e3a <_ZN5ModelC1Ev>
 8001246:	4622      	mov	r2, r4
 8001248:	f107 0114 	add.w	r1, r7, #20
 800124c:	4630      	mov	r0, r6
 800124e:	f008 fda7 	bl	8009da0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001252:	4630      	mov	r0, r6
 8001254:	f004 f8fe 	bl	8005454 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8001258:	4628      	mov	r0, r5
 800125a:	f026 fa71 	bl	8027740 <__cxa_guard_release>
 800125e:	480e      	ldr	r0, [pc, #56]	; (8001298 <touchgfx_init+0xdc>)
 8001260:	f026 faac 	bl	80277bc <atexit>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001264:	480d      	ldr	r0, [pc, #52]	; (800129c <touchgfx_init+0xe0>)
}
 8001266:	b002      	add	sp, #8
 8001268:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 800126c:	f7ff bb04 	b.w	8000878 <_ZN11TouchGFXHAL10initializeEv>
 8001270:	2002bd90 	.word	0x2002bd90
 8001274:	2001abe8 	.word	0x2001abe8
 8001278:	20000198 	.word	0x20000198
 800127c:	2000001c 	.word	0x2000001c
 8001280:	2000019c 	.word	0x2000019c
 8001284:	20019dd8 	.word	0x20019dd8
 8001288:	080290c0 	.word	0x080290c0
 800128c:	08029024 	.word	0x08029024
 8001290:	08029058 	.word	0x08029058
 8001294:	0802908c 	.word	0x0802908c
 8001298:	08001195 	.word	0x08001195
 800129c:	2001ab6c 	.word	0x2001ab6c

080012a0 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80012a0:	4801      	ldr	r0, [pc, #4]	; (80012a8 <touchgfx_taskEntry+0x8>)
 80012a2:	f7ff bb03 	b.w	80008ac <_ZN11TouchGFXHAL9taskEntryEv>
 80012a6:	bf00      	nop
 80012a8:	2001ab6c 	.word	0x2001ab6c

080012ac <_GLOBAL__sub_I_touchgfx_init>:
}
 80012ac:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 80012ae:	4e24      	ldr	r6, [pc, #144]	; (8001340 <_GLOBAL__sub_I_touchgfx_init+0x94>)
{
public:

    STM32TouchController() {}
 80012b0:	4c24      	ldr	r4, [pc, #144]	; (8001344 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 80012b2:	4d25      	ldr	r5, [pc, #148]	; (8001348 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 80012b4:	4b25      	ldr	r3, [pc, #148]	; (800134c <_GLOBAL__sub_I_touchgfx_init+0xa0>)
 80012b6:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 80012b8:	4630      	mov	r0, r6
 80012ba:	f7ff fec9 	bl	8001050 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 80012be:	4628      	mov	r0, r5
 80012c0:	f01d fa90 	bl	801e7e4 <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 80012c4:	4b22      	ldr	r3, [pc, #136]	; (8001350 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80012c6:	4823      	ldr	r0, [pc, #140]	; (8001354 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
          lastRenderMethod(HARDWARE)
 80012c8:	60dc      	str	r4, [r3, #12]
 80012ca:	2200      	movs	r2, #0
 80012cc:	f44f 7180 	mov.w	r1, #256	; 0x100
 80012d0:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
 80012d4:	4920      	ldr	r1, [pc, #128]	; (8001358 <_GLOBAL__sub_I_touchgfx_init+0xac>)
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
 80012d6:	851a      	strh	r2, [r3, #40]	; 0x28
 80012d8:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
 80012dc:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 80012e0:	6759      	str	r1, [r3, #116]	; 0x74
 80012e2:	2101      	movs	r1, #1
 80012e4:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        instance = this;
 80012e8:	491c      	ldr	r1, [pc, #112]	; (800135c <_GLOBAL__sub_I_touchgfx_init+0xb0>)
 80012ea:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 80012ee:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80012f0:	f44f 7150 	mov.w	r1, #832	; 0x340
 80012f4:	8001      	strh	r1, [r0, #0]
 80012f6:	481a      	ldr	r0, [pc, #104]	; (8001360 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 80012f8:	62da      	str	r2, [r3, #44]	; 0x2c
          lastRenderMethod(HARDWARE)
 80012fa:	e9c3 2204 	strd	r2, r2, [r3, #16]
              inProgress(false)
 80012fe:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001302:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001306:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 800130a:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 800130e:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8001312:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
        : drag(), listener(0), dragThresholdValue(0)
 8001316:	861a      	strh	r2, [r3, #48]	; 0x30
 8001318:	661a      	str	r2, [r3, #96]	; 0x60
 800131a:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 800131e:	671a      	str	r2, [r3, #112]	; 0x70
 8001320:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001324:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001326:	480f      	ldr	r0, [pc, #60]	; (8001364 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001328:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800132c:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8001330:	8001      	strh	r1, [r0, #0]
 8001332:	480d      	ldr	r0, [pc, #52]	; (8001368 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001334:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8001336:	490d      	ldr	r1, [pc, #52]	; (800136c <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001338:	700a      	strb	r2, [r1, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width + 32, height) /* Align to match 832 pixel for optimal DSI transfer */
 800133a:	4a0d      	ldr	r2, [pc, #52]	; (8001370 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
 800133c:	601a      	str	r2, [r3, #0]
}
 800133e:	bd70      	pop	{r4, r5, r6, pc}
 8001340:	20019f4c 	.word	0x20019f4c
 8001344:	20019f48 	.word	0x20019f48
 8001348:	2001abec 	.word	0x2001abec
 800134c:	08028af8 	.word	0x08028af8
 8001350:	2001ab6c 	.word	0x2001ab6c
 8001354:	2002bd28 	.word	0x2002bd28
 8001358:	01000001 	.word	0x01000001
 800135c:	2002bd34 	.word	0x2002bd34
 8001360:	2002bd2e 	.word	0x2002bd2e
 8001364:	2002bd2a 	.word	0x2002bd2a
 8001368:	2002bd30 	.word	0x2002bd30
 800136c:	2002bd2c 	.word	0x2002bd2c
 8001370:	08028c84 	.word	0x08028c84

08001374 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001374:	4801      	ldr	r0, [pc, #4]	; (800137c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001376:	f7ff be4f 	b.w	8001018 <_ZN8STM32DMAD1Ev>
 800137a:	bf00      	nop
 800137c:	20019f4c 	.word	0x20019f4c

08001380 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001380:	4b02      	ldr	r3, [pc, #8]	; (800138c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8001382:	2290      	movs	r2, #144	; 0x90
 8001384:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
}
 8001388:	4770      	bx	lr
 800138a:	bf00      	nop
 800138c:	e000e100 	.word	0xe000e100

08001390 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001390:	4b02      	ldr	r3, [pc, #8]	; (800139c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 8001392:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001396:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8001398:	4770      	bx	lr
 800139a:	bf00      	nop
 800139c:	e000e100 	.word	0xe000e100

080013a0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
}
 80013a0:	4770      	bx	lr

080013a2 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
}

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 80013a2:	4770      	bx	lr

080013a4 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80013a4:	b538      	push	{r3, r4, r5, lr}
 80013a6:	4604      	mov	r4, r0
    HAL::initialize();
 80013a8:	f012 fce9 	bl	8013d7e <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80013ac:	6823      	ldr	r3, [r4, #0]
 80013ae:	6e1d      	ldr	r5, [r3, #96]	; 0x60
 80013b0:	f016 f9e4 	bl	801777c <_ZN8touchgfx11Application11getInstanceEv>
 80013b4:	4601      	mov	r1, r0
 80013b6:	4620      	mov	r0, r4
 80013b8:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 80013ba:	6823      	ldr	r3, [r4, #0]
 80013bc:	f8d3 5084 	ldr.w	r5, [r3, #132]	; 0x84
 80013c0:	2300      	movs	r3, #0
 80013c2:	461a      	mov	r2, r3
 80013c4:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 80013c8:	4620      	mov	r0, r4
 80013ca:	47a8      	blx	r5
        lockDMAToPorch = enableLock;
 80013cc:	2301      	movs	r3, #1
 80013ce:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
}
 80013d2:	bd38      	pop	{r3, r4, r5, pc}

080013d4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80013d4:	f012 bc83 	b.w	8013cde <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080013d8 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80013d8:	f012 bddf 	b.w	8013f9a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080013dc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013dc:	4b04      	ldr	r3, [pc, #16]	; (80013f0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 80013de:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80013e2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80013e6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80013ea:	f3bf 8f6f 	isb	sy
}
 80013ee:	4770      	bx	lr
 80013f0:	e000e100 	.word	0xe000e100

080013f4 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 80013f4:	4901      	ldr	r1, [pc, #4]	; (80013fc <vApplicationIdleHook+0x8>)
 80013f6:	2000      	movs	r0, #0
 80013f8:	f010 bb64 	b.w	8011ac4 <vTaskSetApplicationTaskTag>
 80013fc:	08000c45 	.word	0x08000c45

08001400 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001400:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8001402:	2064      	movs	r0, #100	; 0x64
 8001404:	f00e feed 	bl	80101e2 <osDelay>
  for(;;)
 8001408:	e7fb      	b.n	8001402 <StartDefaultTask+0x2>
	...

0800140c <SystemClock_Config>:
{
 800140c:	b530      	push	{r4, r5, lr}
 800140e:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001410:	2210      	movs	r2, #16
 8001412:	2100      	movs	r1, #0
 8001414:	a809      	add	r0, sp, #36	; 0x24
 8001416:	f026 fb61 	bl	8027adc <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800141a:	2214      	movs	r2, #20
 800141c:	2100      	movs	r1, #0
 800141e:	a802      	add	r0, sp, #8
 8001420:	f026 fb5c 	bl	8027adc <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001424:	2400      	movs	r4, #0
 8001426:	4b1f      	ldr	r3, [pc, #124]	; (80014a4 <SystemClock_Config+0x98>)
 8001428:	9400      	str	r4, [sp, #0]
 800142a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800142c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001430:	641a      	str	r2, [r3, #64]	; 0x40
 8001432:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001434:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001438:	9300      	str	r3, [sp, #0]
 800143a:	9b00      	ldr	r3, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800143c:	4b1a      	ldr	r3, [pc, #104]	; (80014a8 <SystemClock_Config+0x9c>)
 800143e:	9401      	str	r4, [sp, #4]
 8001440:	681a      	ldr	r2, [r3, #0]
 8001442:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001446:	601a      	str	r2, [r3, #0]
 8001448:	681b      	ldr	r3, [r3, #0]
 800144a:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800144e:	9301      	str	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001450:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001452:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001454:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001458:	e9cd 2307 	strd	r2, r3, [sp, #28]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800145c:	2502      	movs	r5, #2
 800145e:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001462:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001464:	e9cd 530d 	strd	r5, r3, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001468:	f44f 73b4 	mov.w	r3, #360	; 0x168
 800146c:	e9cd 130f 	strd	r1, r3, [sp, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLR = 6;
 8001470:	2004      	movs	r0, #4
 8001472:	2306      	movs	r3, #6
 8001474:	e9cd 0312 	strd	r0, r3, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001478:	a807      	add	r0, sp, #28
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800147a:	9511      	str	r5, [sp, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800147c:	f00e f9fe 	bl	800f87c <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8001480:	f00d fc4e 	bl	800ed20 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001484:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001486:	e9cd 3502 	strd	r3, r5, [sp, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800148a:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800148c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001490:	f44f 54a0 	mov.w	r4, #5120	; 0x1400
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001494:	2105      	movs	r1, #5
 8001496:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001498:	e9cd 4305 	strd	r4, r3, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800149c:	f00d ffc2 	bl	800f424 <HAL_RCC_ClockConfig>
}
 80014a0:	b015      	add	sp, #84	; 0x54
 80014a2:	bd30      	pop	{r4, r5, pc}
 80014a4:	40023800 	.word	0x40023800
 80014a8:	40007000 	.word	0x40007000

080014ac <main>:
{
 80014ac:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80014b0:	b0b9      	sub	sp, #228	; 0xe4
  HAL_Init();
 80014b2:	f00b fe1d 	bl	800d0f0 <HAL_Init>
  SystemClock_Config();
 80014b6:	f7ff ffa9 	bl	800140c <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014ba:	2214      	movs	r2, #20
 80014bc:	2100      	movs	r1, #0
 80014be:	a82b      	add	r0, sp, #172	; 0xac
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014c0:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014c2:	f026 fb0b 	bl	8027adc <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014c6:	4bc9      	ldr	r3, [pc, #804]	; (80017ec <main+0x340>)
 80014c8:	9402      	str	r4, [sp, #8]
 80014ca:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80014cc:	48c8      	ldr	r0, [pc, #800]	; (80017f0 <main+0x344>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014ce:	f042 0210 	orr.w	r2, r2, #16
 80014d2:	631a      	str	r2, [r3, #48]	; 0x30
 80014d4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014d6:	f002 0210 	and.w	r2, r2, #16
 80014da:	9202      	str	r2, [sp, #8]
 80014dc:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80014de:	9403      	str	r4, [sp, #12]
 80014e0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014e2:	f042 0202 	orr.w	r2, r2, #2
 80014e6:	631a      	str	r2, [r3, #48]	; 0x30
 80014e8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014ea:	f002 0202 	and.w	r2, r2, #2
 80014ee:	9203      	str	r2, [sp, #12]
 80014f0:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80014f2:	9404      	str	r4, [sp, #16]
 80014f4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014f6:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80014fa:	631a      	str	r2, [r3, #48]	; 0x30
 80014fc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014fe:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001502:	9204      	str	r2, [sp, #16]
 8001504:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001506:	9405      	str	r4, [sp, #20]
 8001508:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800150a:	f042 0208 	orr.w	r2, r2, #8
 800150e:	631a      	str	r2, [r3, #48]	; 0x30
 8001510:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001512:	f002 0208 	and.w	r2, r2, #8
 8001516:	9205      	str	r2, [sp, #20]
 8001518:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 800151a:	9406      	str	r4, [sp, #24]
 800151c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800151e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001522:	631a      	str	r2, [r3, #48]	; 0x30
 8001524:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001526:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800152a:	9206      	str	r2, [sp, #24]
 800152c:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800152e:	9407      	str	r4, [sp, #28]
 8001530:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001532:	f042 0220 	orr.w	r2, r2, #32
 8001536:	631a      	str	r2, [r3, #48]	; 0x30
 8001538:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800153a:	f002 0220 	and.w	r2, r2, #32
 800153e:	9207      	str	r2, [sp, #28]
 8001540:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8001542:	9408      	str	r4, [sp, #32]
 8001544:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001546:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800154a:	631a      	str	r2, [r3, #48]	; 0x30
 800154c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800154e:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8001552:	9208      	str	r2, [sp, #32]
 8001554:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001556:	9409      	str	r4, [sp, #36]	; 0x24
 8001558:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800155a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800155e:	631a      	str	r2, [r3, #48]	; 0x30
 8001560:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001562:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001566:	9209      	str	r2, [sp, #36]	; 0x24
 8001568:	9a09      	ldr	r2, [sp, #36]	; 0x24
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800156a:	940a      	str	r4, [sp, #40]	; 0x28
 800156c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800156e:	f042 0204 	orr.w	r2, r2, #4
 8001572:	631a      	str	r2, [r3, #48]	; 0x30
 8001574:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001576:	f002 0204 	and.w	r2, r2, #4
 800157a:	920a      	str	r2, [sp, #40]	; 0x28
 800157c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 800157e:	940b      	str	r4, [sp, #44]	; 0x2c
 8001580:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001582:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001586:	631a      	str	r2, [r3, #48]	; 0x30
 8001588:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800158a:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800158e:	930b      	str	r3, [sp, #44]	; 0x2c
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 8001590:	2201      	movs	r2, #1
 8001592:	2108      	movs	r1, #8
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001594:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 8001596:	f00c fdbf 	bl	800e118 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_RESET);
 800159a:	4896      	ldr	r0, [pc, #600]	; (80017f4 <main+0x348>)
 800159c:	4622      	mov	r2, r4
 800159e:	2110      	movs	r1, #16
 80015a0:	f00c fdba 	bl	800e118 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 80015a4:	4894      	ldr	r0, [pc, #592]	; (80017f8 <main+0x34c>)
 80015a6:	4622      	mov	r2, r4
 80015a8:	2140      	movs	r1, #64	; 0x40
 80015aa:	f00c fdb5 	bl	800e118 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 80015ae:	4622      	mov	r2, r4
 80015b0:	4892      	ldr	r0, [pc, #584]	; (80017fc <main+0x350>)
 80015b2:	2180      	movs	r1, #128	; 0x80
 80015b4:	f00c fdb0 	bl	800e118 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015b8:	2611      	movs	r6, #17
 80015ba:	2308      	movs	r3, #8
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 80015bc:	488c      	ldr	r0, [pc, #560]	; (80017f0 <main+0x344>)
 80015be:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015c0:	2701      	movs	r7, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015c2:	f04f 0802 	mov.w	r8, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015c6:	e9cd 362b 	strd	r3, r6, [sp, #172]	; 0xac
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015ca:	f04f 0b10 	mov.w	fp, #16
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015ce:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 80015d2:	f00c fc13 	bl	800ddfc <HAL_GPIO_Init>
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 80015d6:	4887      	ldr	r0, [pc, #540]	; (80017f4 <main+0x348>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015d8:	942d      	str	r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 80015da:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015dc:	e9cd b72b 	strd	fp, r7, [sp, #172]	; 0xac
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015e0:	f8cd 80b8 	str.w	r8, [sp, #184]	; 0xb8
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 80015e4:	f00c fc0a 	bl	800ddfc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
 80015e8:	2340      	movs	r3, #64	; 0x40
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 80015ea:	4883      	ldr	r0, [pc, #524]	; (80017f8 <main+0x34c>)
 80015ec:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 80015ee:	2580      	movs	r5, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015f0:	e9cd 372b 	strd	r3, r7, [sp, #172]	; 0xac
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015f4:	e9cd 482d 	strd	r4, r8, [sp, #180]	; 0xb4
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 80015f8:	f00c fc00 	bl	800ddfc <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80015fc:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80015fe:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001600:	487e      	ldr	r0, [pc, #504]	; (80017fc <main+0x350>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001602:	932e      	str	r3, [sp, #184]	; 0xb8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001604:	e9cd 562b 	strd	r5, r6, [sp, #172]	; 0xac
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001608:	942d      	str	r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800160a:	f00c fbf7 	bl	800ddfc <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 800160e:	487c      	ldr	r0, [pc, #496]	; (8001800 <main+0x354>)
  hdma2d.Instance = DMA2D;
 8001610:	4e7c      	ldr	r6, [pc, #496]	; (8001804 <main+0x358>)
  hcrc.Instance = CRC;
 8001612:	4b7d      	ldr	r3, [pc, #500]	; (8001808 <main+0x35c>)
 8001614:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001616:	f00b fe11 	bl	800d23c <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 800161a:	4b7c      	ldr	r3, [pc, #496]	; (800180c <main+0x360>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 800161c:	e9c6 440a 	strd	r4, r4, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001620:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001624:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 8001626:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 800162a:	e9c6 4402 	strd	r4, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800162e:	f00b ff19 	bl	800d464 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001632:	4639      	mov	r1, r7
 8001634:	4630      	mov	r0, r6
 8001636:	f00b ffcd 	bl	800d5d4 <HAL_DMA2D_ConfigLayer>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 800163a:	4629      	mov	r1, r5
 800163c:	4622      	mov	r2, r4
 800163e:	486f      	ldr	r0, [pc, #444]	; (80017fc <main+0x350>)
  hdsi.Instance = DSI;
 8001640:	4e73      	ldr	r6, [pc, #460]	; (8001810 <main+0x364>)
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001642:	f00c fd69 	bl	800e118 <HAL_GPIO_WritePin>
  HAL_Delay(20); /* wait 20 ms */
 8001646:	2014      	movs	r0, #20
 8001648:	f00b fd7e 	bl	800d148 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_SET);
 800164c:	4629      	mov	r1, r5
 800164e:	463a      	mov	r2, r7
 8001650:	486a      	ldr	r0, [pc, #424]	; (80017fc <main+0x350>)
 8001652:	f00c fd61 	bl	800e118 <HAL_GPIO_WritePin>
  HAL_Delay(10);
 8001656:	200a      	movs	r0, #10
 8001658:	f00b fd76 	bl	800d148 <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 800165c:	2224      	movs	r2, #36	; 0x24
 800165e:	4621      	mov	r1, r4
 8001660:	a815      	add	r0, sp, #84	; 0x54
 8001662:	f026 fa3b 	bl	8027adc <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 8001666:	2218      	movs	r2, #24
 8001668:	4621      	mov	r1, r4
 800166a:	a80f      	add	r0, sp, #60	; 0x3c
 800166c:	f026 fa36 	bl	8027adc <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 8001670:	2234      	movs	r2, #52	; 0x34
 8001672:	4621      	mov	r1, r4
 8001674:	a82b      	add	r0, sp, #172	; 0xac
 8001676:	f026 fa31 	bl	8027adc <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 800167a:	222c      	movs	r2, #44	; 0x2c
 800167c:	4621      	mov	r1, r4
 800167e:	a81e      	add	r0, sp, #120	; 0x78
 8001680:	f026 fa2c 	bl	8027adc <memset>
  hdsi.Instance = DSI;
 8001684:	4b63      	ldr	r3, [pc, #396]	; (8001814 <main+0x368>)
  PLLInit.PLLODF = DSI_PLL_OUT_DIV1;
 8001686:	940e      	str	r4, [sp, #56]	; 0x38
  hdsi.Init.TXEscapeCkdiv = 4;
 8001688:	2504      	movs	r5, #4
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 800168a:	e9c6 3400 	strd	r3, r4, [r6]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 800168e:	a90c      	add	r1, sp, #48	; 0x30
  PLLInit.PLLNDIV = 125;
 8001690:	237d      	movs	r3, #125	; 0x7d
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 8001692:	4630      	mov	r0, r6
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 8001694:	e9c6 5702 	strd	r5, r7, [r6, #8]
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 8001698:	e9cd 380c 	strd	r3, r8, [sp, #48]	; 0x30
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 800169c:	f00c f862 	bl	800d764 <HAL_DSI_Init>
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80016a0:	a915      	add	r1, sp, #84	; 0x54
 80016a2:	4630      	mov	r0, r6
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 80016a4:	e9cd 7415 	strd	r7, r4, [sp, #84]	; 0x54
  HostTimeouts.HighSpeedReadTimeout = 0;
 80016a8:	e9cd 4417 	strd	r4, r4, [sp, #92]	; 0x5c
  HostTimeouts.HighSpeedWriteTimeout = 0;
 80016ac:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  HostTimeouts.LowPowerWriteTimeout = 0;
 80016b0:	e9cd 441b 	strd	r4, r4, [sp, #108]	; 0x6c
  HostTimeouts.BTATimeout = 0;
 80016b4:	941d      	str	r4, [sp, #116]	; 0x74
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80016b6:	f00c fa7f 	bl	800dbb8 <HAL_DSI_ConfigHostTimeouts>
  PhyTimings.ClockLaneLP2HSTime = 33;
 80016ba:	221c      	movs	r2, #28
 80016bc:	2321      	movs	r3, #33	; 0x21
 80016be:	e9cd 230f 	strd	r2, r3, [sp, #60]	; 0x3c
  PhyTimings.DataLaneLP2HSTime = 25;
 80016c2:	210f      	movs	r1, #15
 80016c4:	2319      	movs	r3, #25
 80016c6:	e9cd 1311 	strd	r1, r3, [sp, #68]	; 0x44
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 80016ca:	4630      	mov	r0, r6
 80016cc:	a90f      	add	r1, sp, #60	; 0x3c
  PhyTimings.StopWaitTime = 0;
 80016ce:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 80016d2:	f00c fa34 	bl	800db3e <HAL_DSI_ConfigPhyTimer>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 80016d6:	4629      	mov	r1, r5
 80016d8:	4630      	mov	r0, r6
 80016da:	f00c fa1f 	bl	800db1c <HAL_DSI_ConfigFlowControl>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 80016de:	f242 7110 	movw	r1, #10000	; 0x2710
 80016e2:	4630      	mov	r0, r6
 80016e4:	f00c fb73 	bl	800ddce <HAL_DSI_SetLowPowerRXFilter>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 80016e8:	4621      	mov	r1, r4
 80016ea:	4630      	mov	r0, r6
 80016ec:	f00b ffd7 	bl	800d69e <HAL_DSI_ConfigErrorMonitor>
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 80016f0:	f44f 7080 	mov.w	r0, #256	; 0x100
 80016f4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80016f8:	e9cd 032b 	strd	r0, r3, [sp, #172]	; 0xac
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 80016fc:	f44f 6a80 	mov.w	sl, #1024	; 0x400
 8001700:	f44f 6300 	mov.w	r3, #2048	; 0x800
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8001704:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8001708:	e9cd a32d 	strd	sl, r3, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 800170c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001710:	e9cd 232f 	strd	r2, r3, [sp, #188]	; 0xbc
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8001714:	f44f 4980 	mov.w	r9, #16384	; 0x4000
 8001718:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 800171c:	f44f 3c00 	mov.w	ip, #131072	; 0x20000
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8001720:	e9cd 9331 	strd	r9, r3, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001724:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 8001728:	e9cd c333 	strd	ip, r3, [sp, #204]	; 0xcc
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 800172c:	f44f 2e00 	mov.w	lr, #524288	; 0x80000
 8001730:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001734:	a92b      	add	r1, sp, #172	; 0xac
 8001736:	4630      	mov	r0, r6
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8001738:	e9cd e335 	strd	lr, r3, [sp, #212]	; 0xd4
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 800173c:	f8cd 80dc 	str.w	r8, [sp, #220]	; 0xdc
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001740:	f00c f9b8 	bl	800dab4 <HAL_DSI_ConfigCommand>
  CmdCfg.CommandSize = 200;
 8001744:	23c8      	movs	r3, #200	; 0xc8
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8001746:	a91e      	add	r1, sp, #120	; 0x78
 8001748:	4630      	mov	r0, r6
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 800174a:	e9cd 3b20 	strd	r3, fp, [sp, #128]	; 0x80
  CmdCfg.HSPolarity = DSI_HSYNC_ACTIVE_LOW;
 800174e:	e9cd 4522 	strd	r4, r5, [sp, #136]	; 0x88
  CmdCfg.ColorCoding = DSI_RGB565;
 8001752:	e9cd 441e 	strd	r4, r4, [sp, #120]	; 0x78
  CmdCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 8001756:	e9cd 8424 	strd	r8, r4, [sp, #144]	; 0x90
  CmdCfg.AutomaticRefresh = DSI_AR_DISABLE;
 800175a:	e9cd 4426 	strd	r4, r4, [sp, #152]	; 0x98
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 800175e:	9728      	str	r7, [sp, #160]	; 0xa0
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8001760:	f00c f936 	bl	800d9d0 <HAL_DSI_ConfigAdaptedCommandMode>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 8001764:	4621      	mov	r1, r4
 8001766:	4630      	mov	r0, r6
 8001768:	f00c f921 	bl	800d9ae <HAL_DSI_SetGenericVCID>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800176c:	482a      	ldr	r0, [pc, #168]	; (8001818 <main+0x36c>)
 800176e:	492b      	ldr	r1, [pc, #172]	; (800181c <main+0x370>)
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 8001770:	6204      	str	r4, [r0, #32]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 8001772:	e9c0 1400 	strd	r1, r4, [r0]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001776:	2340      	movs	r3, #64	; 0x40
 8001778:	2120      	movs	r1, #32
 800177a:	e9c0 1304 	strd	r1, r3, [r0, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800177e:	f44f 71c0 	mov.w	r1, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001782:	e9c0 1406 	strd	r1, r4, [r0, #24]
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001786:	2107      	movs	r1, #7
  SdramTiming.WriteRecoveryTime = 3;
 8001788:	2303      	movs	r3, #3
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 800178a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  SdramTiming.SelfRefreshTime = 4;
 800178e:	e9cd 152c 	strd	r1, r5, [sp, #176]	; 0xb0
  SdramTiming.RowCycleDelay = 7;
 8001792:	912e      	str	r1, [sp, #184]	; 0xb8
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001794:	a92b      	add	r1, sp, #172	; 0xac
  SdramTiming.RPDelay = 2;
 8001796:	e9cd 382f 	strd	r3, r8, [sp, #188]	; 0xbc
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 800179a:	e9c0 2909 	strd	r2, r9, [r0, #36]	; 0x24
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 800179e:	e9c0 4502 	strd	r4, r5, [r0, #8]
  SdramTiming.LoadToActiveDelay = 2;
 80017a2:	f8cd 80ac 	str.w	r8, [sp, #172]	; 0xac
  SdramTiming.RCDDelay = 2;
 80017a6:	f8cd 80c4 	str.w	r8, [sp, #196]	; 0xc4
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017aa:	f00e fa1d 	bl	800fbe8 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit();
 80017ae:	f00b fbc7 	bl	800cf40 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init() != SDRAM_OK)
 80017b2:	f00b fb77 	bl	800cea4 <BSP_SDRAM_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80017b6:	2234      	movs	r2, #52	; 0x34
 80017b8:	4621      	mov	r1, r4
 80017ba:	a81e      	add	r0, sp, #120	; 0x78
  hltdc.Instance = LTDC;
 80017bc:	4d18      	ldr	r5, [pc, #96]	; (8001820 <main+0x374>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80017be:	f026 f98d 	bl	8027adc <memset>
  hltdc.Instance = LTDC;
 80017c2:	4a18      	ldr	r2, [pc, #96]	; (8001824 <main+0x378>)
  hltdc.Init.Backcolor.Blue = 0;
 80017c4:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80017c6:	e9c5 2400 	strd	r2, r4, [r5]
  hltdc.Init.AccumulatedActiveH = 482;
 80017ca:	23ca      	movs	r3, #202	; 0xca
 80017cc:	f44f 72f1 	mov.w	r2, #482	; 0x1e2
 80017d0:	e9c5 3209 	strd	r3, r2, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 483;
 80017d4:	21cb      	movs	r1, #203	; 0xcb
 80017d6:	f240 12e3 	movw	r2, #483	; 0x1e3
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80017da:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 483;
 80017dc:	e9c5 120b 	strd	r1, r2, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80017e0:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.HorizontalSync = 1;
 80017e4:	e9c5 4704 	strd	r4, r7, [r5, #16]
 80017e8:	e01e      	b.n	8001828 <main+0x37c>
 80017ea:	bf00      	nop
 80017ec:	40023800 	.word	0x40023800
 80017f0:	40022800 	.word	0x40022800
 80017f4:	40020c00 	.word	0x40020c00
 80017f8:	40021800 	.word	0x40021800
 80017fc:	40021c00 	.word	0x40021c00
 8001800:	2002c028 	.word	0x2002c028
 8001804:	2002c0f8 	.word	0x2002c0f8
 8001808:	40023000 	.word	0x40023000
 800180c:	4002b000 	.word	0x4002b000
 8001810:	2002c030 	.word	0x2002c030
 8001814:	40016c00 	.word	0x40016c00
 8001818:	2002c138 	.word	0x2002c138
 800181c:	a0000140 	.word	0xa0000140
 8001820:	2002c04c 	.word	0x2002c04c
 8001824:	40016800 	.word	0x40016800
  hltdc.Init.AccumulatedHBP = 2;
 8001828:	e9c5 7806 	strd	r7, r8, [r5, #24]
  hltdc.Init.AccumulatedVBP = 2;
 800182c:	f8c5 8020 	str.w	r8, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 8001830:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001834:	f00d f93e 	bl	800eab4 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001838:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 200;
 800183a:	23c8      	movs	r3, #200	; 0xc8
  pLayerCfg.WindowY1 = 480;
 800183c:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  pLayerCfg.Alpha0 = 0;
 8001840:	e9cd 1423 	strd	r1, r4, [sp, #140]	; 0x8c
  pLayerCfg.FBStartAdress = 0xC0000000;
 8001844:	2005      	movs	r0, #5
 8001846:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 800184a:	e9cd 0126 	strd	r0, r1, [sp, #152]	; 0x98
  pLayerCfg.ImageHeight = 480;
 800184e:	e9cd 3228 	strd	r3, r2, [sp, #160]	; 0xa0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001852:	a91e      	add	r1, sp, #120	; 0x78
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001854:	e9cd 2821 	strd	r2, r8, [sp, #132]	; 0x84
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001858:	4628      	mov	r0, r5
 800185a:	4622      	mov	r2, r4
  pLayerCfg.WindowY0 = 0;
 800185c:	e9cd 341f 	strd	r3, r4, [sp, #124]	; 0x7c
  pLayerCfg.WindowX0 = 0;
 8001860:	941e      	str	r4, [sp, #120]	; 0x78
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8001862:	f8cd a094 	str.w	sl, [sp, #148]	; 0x94
  pLayerCfg.Backcolor.Blue = 0;
 8001866:	f8ad 40a8 	strh.w	r4, [sp, #168]	; 0xa8
  pLayerCfg.Backcolor.Red = 0;
 800186a:	f88d 40aa 	strb.w	r4, [sp, #170]	; 0xaa
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800186e:	f00d f9ed 	bl	800ec4c <HAL_LTDC_ConfigLayer>
  __HAL_LTDC_DISABLE(&hltdc);
 8001872:	682a      	ldr	r2, [r5, #0]
 8001874:	6993      	ldr	r3, [r2, #24]
 8001876:	f023 0301 	bic.w	r3, r3, #1
 800187a:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 800187c:	4630      	mov	r0, r6
 800187e:	f00c fa01 	bl	800dc84 <HAL_DSI_Start>
  OTM8009A_Init(OTM8009A_FORMAT_RBG565, LCD_ORIENTATION_LANDSCAPE);
 8001882:	4639      	mov	r1, r7
 8001884:	4640      	mov	r0, r8
 8001886:	f00a fccf 	bl	800c228 <OTM8009A_Init>
  HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPOFF, 0x00);
 800188a:	2328      	movs	r3, #40	; 0x28
 800188c:	2215      	movs	r2, #21
 800188e:	4621      	mov	r1, r4
 8001890:	4630      	mov	r0, r6
 8001892:	9400      	str	r4, [sp, #0]
 8001894:	f00c fa29 	bl	800dcea <HAL_DSI_ShortWrite>
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8001898:	a92b      	add	r1, sp, #172	; 0xac
 800189a:	4630      	mov	r0, r6
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 800189c:	e9cd 442b 	strd	r4, r4, [sp, #172]	; 0xac
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 80018a0:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 80018a4:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 80018a8:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 80018ac:	e9cd 4433 	strd	r4, r4, [sp, #204]	; 0xcc
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 80018b0:	9435      	str	r4, [sp, #212]	; 0xd4
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 80018b2:	f00c f8ff 	bl	800dab4 <HAL_DSI_ConfigCommand>
  HAL_LTDC_SetPitch(&hltdc, 800, 0);
 80018b6:	f44f 7148 	mov.w	r1, #800	; 0x320
 80018ba:	4622      	mov	r2, r4
 80018bc:	4628      	mov	r0, r5
 80018be:	f00d f9f3 	bl	800eca8 <HAL_LTDC_SetPitch>
  __HAL_LTDC_ENABLE(&hltdc);
 80018c2:	682a      	ldr	r2, [r5, #0]
  hqspi.Instance = QUADSPI;
 80018c4:	481e      	ldr	r0, [pc, #120]	; (8001940 <main+0x494>)
  __HAL_LTDC_ENABLE(&hltdc);
 80018c6:	6993      	ldr	r3, [r2, #24]
  hi2c1.Instance = I2C1;
 80018c8:	4d1e      	ldr	r5, [pc, #120]	; (8001944 <main+0x498>)
  hi2c1.Init.ClockSpeed = 400000;
 80018ca:	4e1f      	ldr	r6, [pc, #124]	; (8001948 <main+0x49c>)
  __HAL_LTDC_ENABLE(&hltdc);
 80018cc:	433b      	orrs	r3, r7
 80018ce:	6193      	str	r3, [r2, #24]
  hqspi.Instance = QUADSPI;
 80018d0:	4b1e      	ldr	r3, [pc, #120]	; (800194c <main+0x4a0>)
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 80018d2:	6204      	str	r4, [r0, #32]
  hqspi.Init.ClockPrescaler = 1;
 80018d4:	e9c0 3700 	strd	r3, r7, [r0]
  hqspi.Init.FlashSize = 27;
 80018d8:	231b      	movs	r3, #27
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 80018da:	e9c0 3a04 	strd	r3, sl, [r0, #16]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 80018de:	e9c0 7b02 	strd	r7, fp, [r0, #8]
  hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 80018e2:	e9c0 4406 	strd	r4, r4, [r0, #24]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 80018e6:	f00d fb33 	bl	800ef50 <HAL_QSPI_Init>
  BSP_QSPI_DeInit();
 80018ea:	f00b f9a1 	bl	800cc30 <BSP_QSPI_DeInit>
  if(BSP_QSPI_Init() != QSPI_OK)
 80018ee:	f00b f8d5 	bl	800ca9c <BSP_QSPI_Init>
  if(BSP_QSPI_EnableMemoryMappedMode() != QSPI_OK)
 80018f2:	f00b f84b 	bl	800c98c <BSP_QSPI_EnableMemoryMappedMode>
  hi2c1.Init.ClockSpeed = 400000;
 80018f6:	4b16      	ldr	r3, [pc, #88]	; (8001950 <main+0x4a4>)
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80018f8:	622c      	str	r4, [r5, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80018fa:	4628      	mov	r0, r5
  hi2c1.Init.ClockSpeed = 400000;
 80018fc:	e9c5 6300 	strd	r6, r3, [r5]
  hi2c1.Init.OwnAddress1 = 0;
 8001900:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001904:	e9c5 9404 	strd	r9, r4, [r5, #16]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001908:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800190c:	f00c fdee 	bl	800e4ec <HAL_I2C_Init>
  HAL_I2C_DeInit(&hi2c1);
 8001910:	4628      	mov	r0, r5
 8001912:	f00c fe93 	bl	800e63c <HAL_I2C_DeInit>
  MX_TouchGFX_Init();
 8001916:	f7fe fe68 	bl	80005ea <MX_TouchGFX_Init>
  osKernelInitialize();
 800191a:	f00e fbed 	bl	80100f8 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800191e:	4a0d      	ldr	r2, [pc, #52]	; (8001954 <main+0x4a8>)
 8001920:	480d      	ldr	r0, [pc, #52]	; (8001958 <main+0x4ac>)
 8001922:	4621      	mov	r1, r4
 8001924:	f00e fc14 	bl	8010150 <osThreadNew>
 8001928:	4b0c      	ldr	r3, [pc, #48]	; (800195c <main+0x4b0>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 800192a:	4a0d      	ldr	r2, [pc, #52]	; (8001960 <main+0x4b4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800192c:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 800192e:	4621      	mov	r1, r4
 8001930:	480c      	ldr	r0, [pc, #48]	; (8001964 <main+0x4b8>)
 8001932:	f00e fc0d 	bl	8010150 <osThreadNew>
 8001936:	4b0c      	ldr	r3, [pc, #48]	; (8001968 <main+0x4bc>)
 8001938:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800193a:	f00e fbef 	bl	801011c <osKernelStart>
  while (1)
 800193e:	e7fe      	b.n	800193e <main+0x492>
 8001940:	2002c16c 	.word	0x2002c16c
 8001944:	2002bfd4 	.word	0x2002bfd4
 8001948:	40005400 	.word	0x40005400
 800194c:	a0001000 	.word	0xa0001000
 8001950:	00061a80 	.word	0x00061a80
 8001954:	0802910c 	.word	0x0802910c
 8001958:	08001401 	.word	0x08001401
 800195c:	2002bfd0 	.word	0x2002bfd0
 8001960:	080290e8 	.word	0x080290e8
 8001964:	080005ef 	.word	0x080005ef
 8001968:	2002c0f4 	.word	0x2002c0f4

0800196c <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 800196c:	6802      	ldr	r2, [r0, #0]
 800196e:	4b03      	ldr	r3, [pc, #12]	; (800197c <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001970:	429a      	cmp	r2, r3
 8001972:	d101      	bne.n	8001978 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8001974:	f00b bbd6 	b.w	800d124 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001978:	4770      	bx	lr
 800197a:	bf00      	nop
 800197c:	40001000 	.word	0x40001000

08001980 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001980:	4770      	bx	lr

08001982 <parce_found_logs>:
	f_mount(NULL, "", 0);
	return state_read;
#else
	return 1;
#endif
}
 8001982:	2001      	movs	r0, #1
 8001984:	4770      	bx	lr

08001986 <read_start_stop_state_archiv>:

//========================================================================================
// Чтение и начала и конца архива, содержащие время
void read_start_stop_state_archiv(uint32_t *time_start, uint32_t *time_stop)
{
	*time_start = open_read_state_file_archiv(TYPE_STATE_FILE_START);
 8001986:	2300      	movs	r3, #0
 8001988:	6003      	str	r3, [r0, #0]
	*time_stop = open_read_state_file_archiv(TYPE_STATE_FILE_STOP) + 1;
 800198a:	2301      	movs	r3, #1
 800198c:	600b      	str	r3, [r1, #0]
}
 800198e:	4770      	bx	lr

08001990 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001990:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001992:	4b0e      	ldr	r3, [pc, #56]	; (80019cc <HAL_MspInit+0x3c>)
 8001994:	2200      	movs	r2, #0
 8001996:	9200      	str	r2, [sp, #0]
 8001998:	6c59      	ldr	r1, [r3, #68]	; 0x44
 800199a:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800199e:	6459      	str	r1, [r3, #68]	; 0x44
 80019a0:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019a2:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80019a6:	9100      	str	r1, [sp, #0]
 80019a8:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80019aa:	9201      	str	r2, [sp, #4]
 80019ac:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80019ae:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80019b2:	6419      	str	r1, [r3, #64]	; 0x40
 80019b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019b6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80019ba:	9301      	str	r3, [sp, #4]
 80019bc:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80019be:	210f      	movs	r1, #15
 80019c0:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80019c4:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80019c6:	f00b bbe5 	b.w	800d194 <HAL_NVIC_SetPriority>
 80019ca:	bf00      	nop
 80019cc:	40023800 	.word	0x40023800

080019d0 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80019d0:	6802      	ldr	r2, [r0, #0]
 80019d2:	4b09      	ldr	r3, [pc, #36]	; (80019f8 <HAL_CRC_MspInit+0x28>)
 80019d4:	429a      	cmp	r2, r3
{
 80019d6:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 80019d8:	d10b      	bne.n	80019f2 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80019da:	2300      	movs	r3, #0
 80019dc:	9301      	str	r3, [sp, #4]
 80019de:	4b07      	ldr	r3, [pc, #28]	; (80019fc <HAL_CRC_MspInit+0x2c>)
 80019e0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019e2:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80019e6:	631a      	str	r2, [r3, #48]	; 0x30
 80019e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019ea:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80019ee:	9301      	str	r3, [sp, #4]
 80019f0:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80019f2:	b002      	add	sp, #8
 80019f4:	4770      	bx	lr
 80019f6:	bf00      	nop
 80019f8:	40023000 	.word	0x40023000
 80019fc:	40023800 	.word	0x40023800

08001a00 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001a00:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001a02:	4b0f      	ldr	r3, [pc, #60]	; (8001a40 <HAL_DMA2D_MspInit+0x40>)
 8001a04:	6802      	ldr	r2, [r0, #0]
 8001a06:	429a      	cmp	r2, r3
 8001a08:	d116      	bne.n	8001a38 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a0a:	2200      	movs	r2, #0
 8001a0c:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001a10:	9201      	str	r2, [sp, #4]
 8001a12:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001a14:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001a18:	6319      	str	r1, [r3, #48]	; 0x30
 8001a1a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a1c:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001a20:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a22:	2105      	movs	r1, #5
 8001a24:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a26:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a28:	f00b fbb4 	bl	800d194 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a2c:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001a2e:	b003      	add	sp, #12
 8001a30:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a34:	f00b bbe0 	b.w	800d1f8 <HAL_NVIC_EnableIRQ>
}
 8001a38:	b003      	add	sp, #12
 8001a3a:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a3e:	bf00      	nop
 8001a40:	4002b000 	.word	0x4002b000

08001a44 <HAL_DSI_MspInit>:
* This function configures the hardware resources used in this example
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 8001a44:	b510      	push	{r4, lr}
 8001a46:	4604      	mov	r4, r0
 8001a48:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a4a:	2214      	movs	r2, #20
 8001a4c:	2100      	movs	r1, #0
 8001a4e:	a803      	add	r0, sp, #12
 8001a50:	f026 f844 	bl	8027adc <memset>
  if(hdsi->Instance==DSI)
 8001a54:	6822      	ldr	r2, [r4, #0]
 8001a56:	4b18      	ldr	r3, [pc, #96]	; (8001ab8 <HAL_DSI_MspInit+0x74>)
 8001a58:	429a      	cmp	r2, r3
 8001a5a:	d12a      	bne.n	8001ab2 <HAL_DSI_MspInit+0x6e>
  {
  /* USER CODE BEGIN DSI_MspInit 0 */

  /* USER CODE END DSI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 8001a5c:	f503 434c 	add.w	r3, r3, #52224	; 0xcc00
 8001a60:	2400      	movs	r4, #0
 8001a62:	9401      	str	r4, [sp, #4]
 8001a64:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001a66:	4815      	ldr	r0, [pc, #84]	; (8001abc <HAL_DSI_MspInit+0x78>)
    __HAL_RCC_DSI_CLK_ENABLE();
 8001a68:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8001a6c:	645a      	str	r2, [r3, #68]	; 0x44
 8001a6e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001a70:	f002 6200 	and.w	r2, r2, #134217728	; 0x8000000
 8001a74:	9201      	str	r2, [sp, #4]
 8001a76:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001a78:	9402      	str	r4, [sp, #8]
 8001a7a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a7c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001a80:	631a      	str	r2, [r3, #48]	; 0x30
 8001a82:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a84:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001a88:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a8a:	2204      	movs	r2, #4
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001a8c:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a8e:	2302      	movs	r3, #2
 8001a90:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001a94:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 8001a96:	230d      	movs	r3, #13
 8001a98:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001a9a:	e9cd 4405 	strd	r4, r4, [sp, #20]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001a9e:	f00c f9ad 	bl	800ddfc <HAL_GPIO_Init>

    /* DSI interrupt Init */
    HAL_NVIC_SetPriority(DSI_IRQn, 5, 0);
 8001aa2:	205c      	movs	r0, #92	; 0x5c
 8001aa4:	4622      	mov	r2, r4
 8001aa6:	2105      	movs	r1, #5
 8001aa8:	f00b fb74 	bl	800d194 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 8001aac:	205c      	movs	r0, #92	; 0x5c
 8001aae:	f00b fba3 	bl	800d1f8 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 8001ab2:	b008      	add	sp, #32
 8001ab4:	bd10      	pop	{r4, pc}
 8001ab6:	bf00      	nop
 8001ab8:	40016c00 	.word	0x40016c00
 8001abc:	40022400 	.word	0x40022400

08001ac0 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001ac0:	b530      	push	{r4, r5, lr}
 8001ac2:	4604      	mov	r4, r0
 8001ac4:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ac6:	2214      	movs	r2, #20
 8001ac8:	2100      	movs	r1, #0
 8001aca:	a803      	add	r0, sp, #12
 8001acc:	f026 f806 	bl	8027adc <memset>
  if(hi2c->Instance==I2C1)
 8001ad0:	6822      	ldr	r2, [r4, #0]
 8001ad2:	4b1a      	ldr	r3, [pc, #104]	; (8001b3c <HAL_I2C_MspInit+0x7c>)
 8001ad4:	429a      	cmp	r2, r3
 8001ad6:	d12f      	bne.n	8001b38 <HAL_I2C_MspInit+0x78>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */
//
  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001ad8:	4c19      	ldr	r4, [pc, #100]	; (8001b40 <HAL_I2C_MspInit+0x80>)
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ada:	481a      	ldr	r0, [pc, #104]	; (8001b44 <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001adc:	2500      	movs	r5, #0
 8001ade:	9501      	str	r5, [sp, #4]
 8001ae0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001ae2:	f043 0302 	orr.w	r3, r3, #2
 8001ae6:	6323      	str	r3, [r4, #48]	; 0x30
 8001ae8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001aea:	f003 0302 	and.w	r3, r3, #2
 8001aee:	9301      	str	r3, [sp, #4]
 8001af0:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001af2:	f44f 7240 	mov.w	r2, #768	; 0x300
 8001af6:	2312      	movs	r3, #18
 8001af8:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001afc:	2101      	movs	r1, #1
 8001afe:	2303      	movs	r3, #3
 8001b00:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001b04:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b06:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001b08:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b0a:	f00c f977 	bl	800ddfc <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001b0e:	9502      	str	r5, [sp, #8]
 8001b10:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b12:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001b16:	6423      	str	r3, [r4, #64]	; 0x40
 8001b18:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b1a:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001b1e:	9302      	str	r3, [sp, #8]
 8001b20:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */
    /* Force the I2C peripheral clock reset */
    __HAL_RCC_I2C1_FORCE_RESET();
 8001b22:	6a23      	ldr	r3, [r4, #32]
 8001b24:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001b28:	6223      	str	r3, [r4, #32]

    /* Release the I2C peripheral clock reset */
    __HAL_RCC_I2C1_RELEASE_RESET();
 8001b2a:	6a23      	ldr	r3, [r4, #32]
 8001b2c:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001b30:	6223      	str	r3, [r4, #32]

    /* Wait for 100 ms */
    HAL_Delay(100);
 8001b32:	2064      	movs	r0, #100	; 0x64
 8001b34:	f00b fb08 	bl	800d148 <HAL_Delay>
  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8001b38:	b009      	add	sp, #36	; 0x24
 8001b3a:	bd30      	pop	{r4, r5, pc}
 8001b3c:	40005400 	.word	0x40005400
 8001b40:	40023800 	.word	0x40023800
 8001b44:	40020400 	.word	0x40020400

08001b48 <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 8001b48:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C1)
 8001b4a:	6802      	ldr	r2, [r0, #0]
 8001b4c:	4b0a      	ldr	r3, [pc, #40]	; (8001b78 <HAL_I2C_MspDeInit+0x30>)
 8001b4e:	429a      	cmp	r2, r3
 8001b50:	d110      	bne.n	8001b74 <HAL_I2C_MspDeInit+0x2c>
  {
  /* USER CODE BEGIN I2C1_MspDeInit 0 */

  /* USER CODE END I2C1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001b52:	4a0a      	ldr	r2, [pc, #40]	; (8001b7c <HAL_I2C_MspDeInit+0x34>)

    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001b54:	480a      	ldr	r0, [pc, #40]	; (8001b80 <HAL_I2C_MspDeInit+0x38>)
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001b56:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001b58:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001b5c:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001b5e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001b62:	f00c fa31 	bl	800dfc8 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C1_MspDeInit 1 */

  /* USER CODE END I2C1_MspDeInit 1 */
  }

}
 8001b66:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_9);
 8001b6a:	4805      	ldr	r0, [pc, #20]	; (8001b80 <HAL_I2C_MspDeInit+0x38>)
 8001b6c:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001b70:	f00c ba2a 	b.w	800dfc8 <HAL_GPIO_DeInit>
}
 8001b74:	bd08      	pop	{r3, pc}
 8001b76:	bf00      	nop
 8001b78:	40005400 	.word	0x40005400
 8001b7c:	40023800 	.word	0x40023800
 8001b80:	40020400 	.word	0x40020400

08001b84 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001b84:	b510      	push	{r4, lr}
 8001b86:	4604      	mov	r4, r0
 8001b88:	b090      	sub	sp, #64	; 0x40
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001b8a:	223c      	movs	r2, #60	; 0x3c
 8001b8c:	2100      	movs	r1, #0
 8001b8e:	a801      	add	r0, sp, #4
 8001b90:	f025 ffa4 	bl	8027adc <memset>
  if(hltdc->Instance==LTDC)
 8001b94:	6822      	ldr	r2, [r4, #0]
 8001b96:	4b13      	ldr	r3, [pc, #76]	; (8001be4 <HAL_LTDC_MspInit+0x60>)
 8001b98:	429a      	cmp	r2, r3
 8001b9a:	d121      	bne.n	8001be0 <HAL_LTDC_MspInit+0x5c>
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001b9c:	2308      	movs	r3, #8
 8001b9e:	9301      	str	r3, [sp, #4]
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
 8001ba0:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001ba4:	9305      	str	r3, [sp, #20]
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 8001ba6:	2400      	movs	r4, #0
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 8001ba8:	2306      	movs	r3, #6
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001baa:	a801      	add	r0, sp, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 8001bac:	9308      	str	r3, [sp, #32]
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 8001bae:	940b      	str	r4, [sp, #44]	; 0x2c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001bb0:	f00d fd02 	bl	800f5b8 <HAL_RCCEx_PeriphCLKConfig>
 8001bb4:	b108      	cbz	r0, 8001bba <HAL_LTDC_MspInit+0x36>
    {
      Error_Handler();
 8001bb6:	f7ff fee3 	bl	8001980 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001bba:	4b0b      	ldr	r3, [pc, #44]	; (8001be8 <HAL_LTDC_MspInit+0x64>)
 8001bbc:	9400      	str	r4, [sp, #0]
 8001bbe:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001bc0:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001bc4:	645a      	str	r2, [r3, #68]	; 0x44
 8001bc6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001bc8:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8001bcc:	9300      	str	r3, [sp, #0]
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001bce:	2058      	movs	r0, #88	; 0x58
 8001bd0:	2200      	movs	r2, #0
 8001bd2:	2105      	movs	r1, #5
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001bd4:	9b00      	ldr	r3, [sp, #0]
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001bd6:	f00b fadd 	bl	800d194 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001bda:	2058      	movs	r0, #88	; 0x58
 8001bdc:	f00b fb0c 	bl	800d1f8 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001be0:	b010      	add	sp, #64	; 0x40
 8001be2:	bd10      	pop	{r4, pc}
 8001be4:	40016800 	.word	0x40016800
 8001be8:	40023800 	.word	0x40023800

08001bec <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 8001bec:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001bee:	4604      	mov	r4, r0
 8001bf0:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001bf2:	2214      	movs	r2, #20
 8001bf4:	2100      	movs	r1, #0
 8001bf6:	a803      	add	r0, sp, #12
 8001bf8:	f025 ff70 	bl	8027adc <memset>
  if(hqspi->Instance==QUADSPI)
 8001bfc:	6822      	ldr	r2, [r4, #0]
 8001bfe:	4b24      	ldr	r3, [pc, #144]	; (8001c90 <HAL_QSPI_MspInit+0xa4>)
 8001c00:	429a      	cmp	r2, r3
 8001c02:	d143      	bne.n	8001c8c <HAL_QSPI_MspInit+0xa0>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001c04:	4b23      	ldr	r3, [pc, #140]	; (8001c94 <HAL_QSPI_MspInit+0xa8>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c06:	4824      	ldr	r0, [pc, #144]	; (8001c98 <HAL_QSPI_MspInit+0xac>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001c08:	2400      	movs	r4, #0
 8001c0a:	9400      	str	r4, [sp, #0]
 8001c0c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001c0e:	f042 0202 	orr.w	r2, r2, #2
 8001c12:	639a      	str	r2, [r3, #56]	; 0x38
 8001c14:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001c16:	f002 0202 	and.w	r2, r2, #2
 8001c1a:	9200      	str	r2, [sp, #0]
 8001c1c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c1e:	9401      	str	r4, [sp, #4]
 8001c20:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c22:	f042 0202 	orr.w	r2, r2, #2
 8001c26:	631a      	str	r2, [r3, #48]	; 0x30
 8001c28:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c2a:	f002 0202 	and.w	r2, r2, #2
 8001c2e:	9201      	str	r2, [sp, #4]
 8001c30:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c32:	9402      	str	r4, [sp, #8]
 8001c34:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c36:	f042 0220 	orr.w	r2, r2, #32
 8001c3a:	631a      	str	r2, [r3, #48]	; 0x30
 8001c3c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c3e:	9405      	str	r4, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c40:	f003 0320 	and.w	r3, r3, #32
 8001c44:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c46:	2602      	movs	r6, #2
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c48:	2503      	movs	r5, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c4a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c4c:	270a      	movs	r7, #10
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c4e:	2340      	movs	r3, #64	; 0x40
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c50:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c52:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c56:	e9cd 5706 	strd	r5, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c5a:	f00c f8cf 	bl	800ddfc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10;
 8001c5e:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c62:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c66:	480d      	ldr	r0, [pc, #52]	; (8001c9c <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001c68:	2309      	movs	r3, #9
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c6a:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001c6c:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c6e:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c72:	f00c f8c3 	bl	800ddfc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_8;
 8001c76:	f44f 7340 	mov.w	r3, #768	; 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c7a:	4808      	ldr	r0, [pc, #32]	; (8001c9c <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c7c:	9707      	str	r7, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c7e:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c80:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c84:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c88:	f00c f8b8 	bl	800ddfc <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8001c8c:	b009      	add	sp, #36	; 0x24
 8001c8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001c90:	a0001000 	.word	0xa0001000
 8001c94:	40023800 	.word	0x40023800
 8001c98:	40020400 	.word	0x40020400
 8001c9c:	40021400 	.word	0x40021400

08001ca0 <HAL_QSPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
 8001ca0:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 8001ca2:	6802      	ldr	r2, [r0, #0]
 8001ca4:	4b09      	ldr	r3, [pc, #36]	; (8001ccc <HAL_QSPI_MspDeInit+0x2c>)
 8001ca6:	429a      	cmp	r2, r3
 8001ca8:	d10f      	bne.n	8001cca <HAL_QSPI_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001caa:	4a09      	ldr	r2, [pc, #36]	; (8001cd0 <HAL_QSPI_MspDeInit+0x30>)
    PF6     ------> QUADSPI_BK1_IO3
    PF10     ------> QUADSPI_CLK
    PF9     ------> QUADSPI_BK1_IO1
    PF8     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001cac:	4809      	ldr	r0, [pc, #36]	; (8001cd4 <HAL_QSPI_MspDeInit+0x34>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001cae:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001cb0:	f023 0302 	bic.w	r3, r3, #2
 8001cb4:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001cb6:	2140      	movs	r1, #64	; 0x40
 8001cb8:	f00c f986 	bl	800dfc8 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 8001cbc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10|GPIO_PIN_9
 8001cc0:	4805      	ldr	r0, [pc, #20]	; (8001cd8 <HAL_QSPI_MspDeInit+0x38>)
 8001cc2:	f44f 61f8 	mov.w	r1, #1984	; 0x7c0
 8001cc6:	f00c b97f 	b.w	800dfc8 <HAL_GPIO_DeInit>
}
 8001cca:	bd08      	pop	{r3, pc}
 8001ccc:	a0001000 	.word	0xa0001000
 8001cd0:	40023800 	.word	0x40023800
 8001cd4:	40020400 	.word	0x40020400
 8001cd8:	40021400 	.word	0x40021400

08001cdc <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001cdc:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8001cde:	4b31      	ldr	r3, [pc, #196]	; (8001da4 <HAL_SDRAM_MspInit+0xc8>)
 8001ce0:	681c      	ldr	r4, [r3, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001ce2:	b087      	sub	sp, #28
  if (FMC_Initialized) {
 8001ce4:	2c00      	cmp	r4, #0
 8001ce6:	d15b      	bne.n	8001da0 <HAL_SDRAM_MspInit+0xc4>
  FMC_Initialized = 1;
 8001ce8:	2201      	movs	r2, #1
 8001cea:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001cec:	4b2e      	ldr	r3, [pc, #184]	; (8001da8 <HAL_SDRAM_MspInit+0xcc>)
 8001cee:	9400      	str	r4, [sp, #0]
 8001cf0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001cf2:	482e      	ldr	r0, [pc, #184]	; (8001dac <HAL_SDRAM_MspInit+0xd0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001cf4:	f042 0201 	orr.w	r2, r2, #1
 8001cf8:	639a      	str	r2, [r3, #56]	; 0x38
 8001cfa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001cfc:	9403      	str	r4, [sp, #12]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001cfe:	f003 0301 	and.w	r3, r3, #1
 8001d02:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d04:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d06:	2603      	movs	r6, #3
 8001d08:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d0a:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d0c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d0e:	f64f 7383 	movw	r3, #65411	; 0xff83
 8001d12:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d16:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d1a:	f00c f86f 	bl	800ddfc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001d1e:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d22:	4823      	ldr	r0, [pc, #140]	; (8001db0 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d24:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d26:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d28:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d2c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d30:	f00c f864 	bl	800ddfc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001d34:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d38:	481e      	ldr	r0, [pc, #120]	; (8001db4 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d3a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d3c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d3e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d42:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d46:	f00c f859 	bl	800ddfc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001d4a:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d4e:	481a      	ldr	r0, [pc, #104]	; (8001db8 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d50:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d52:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d54:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d58:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d5c:	f00c f84e 	bl	800ddfc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001d60:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d64:	4815      	ldr	r0, [pc, #84]	; (8001dbc <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d66:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d68:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d6a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d6e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d72:	f00c f843 	bl	800ddfc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001d76:	f44f 437f 	mov.w	r3, #65280	; 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001d7a:	4811      	ldr	r0, [pc, #68]	; (8001dc0 <HAL_SDRAM_MspInit+0xe4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d7c:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001d7e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d80:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d84:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001d88:	f00c f838 	bl	800ddfc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2;
 8001d8c:	230d      	movs	r3, #13
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d8e:	480d      	ldr	r0, [pc, #52]	; (8001dc4 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d90:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d92:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d94:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d98:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d9c:	f00c f82e 	bl	800ddfc <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001da0:	b007      	add	sp, #28
 8001da2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001da4:	2001ac68 	.word	0x2001ac68
 8001da8:	40023800 	.word	0x40023800
 8001dac:	40021000 	.word	0x40021000
 8001db0:	40021800 	.word	0x40021800
 8001db4:	40020c00 	.word	0x40020c00
 8001db8:	40022000 	.word	0x40022000
 8001dbc:	40021400 	.word	0x40021400
 8001dc0:	40021c00 	.word	0x40021c00
 8001dc4:	40020800 	.word	0x40020800

08001dc8 <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 8001dc8:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
 8001dca:	4b17      	ldr	r3, [pc, #92]	; (8001e28 <HAL_SDRAM_MspDeInit+0x60>)
 8001dcc:	681a      	ldr	r2, [r3, #0]
 8001dce:	bb52      	cbnz	r2, 8001e26 <HAL_SDRAM_MspDeInit+0x5e>
  FMC_DeInitialized = 1;
 8001dd0:	2201      	movs	r2, #1
 8001dd2:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 8001dd4:	4a15      	ldr	r2, [pc, #84]	; (8001e2c <HAL_SDRAM_MspDeInit+0x64>)
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001dd6:	4816      	ldr	r0, [pc, #88]	; (8001e30 <HAL_SDRAM_MspDeInit+0x68>)
  __HAL_RCC_FMC_CLK_DISABLE();
 8001dd8:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001dda:	f023 0301 	bic.w	r3, r3, #1
 8001dde:	6393      	str	r3, [r2, #56]	; 0x38
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001de0:	f64f 7183 	movw	r1, #65411	; 0xff83
 8001de4:	f00c f8f0 	bl	800dfc8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001de8:	4812      	ldr	r0, [pc, #72]	; (8001e34 <HAL_SDRAM_MspDeInit+0x6c>)
 8001dea:	f248 1133 	movw	r1, #33075	; 0x8133
 8001dee:	f00c f8eb 	bl	800dfc8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001df2:	4811      	ldr	r0, [pc, #68]	; (8001e38 <HAL_SDRAM_MspDeInit+0x70>)
 8001df4:	f24c 7103 	movw	r1, #50947	; 0xc703
 8001df8:	f00c f8e6 	bl	800dfc8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001dfc:	480f      	ldr	r0, [pc, #60]	; (8001e3c <HAL_SDRAM_MspDeInit+0x74>)
 8001dfe:	f240 61ff 	movw	r1, #1791	; 0x6ff
 8001e02:	f00c f8e1 	bl	800dfc8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001e06:	480e      	ldr	r0, [pc, #56]	; (8001e40 <HAL_SDRAM_MspDeInit+0x78>)
 8001e08:	f64f 013f 	movw	r1, #63551	; 0xf83f
 8001e0c:	f00c f8dc 	bl	800dfc8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001e10:	480c      	ldr	r0, [pc, #48]	; (8001e44 <HAL_SDRAM_MspDeInit+0x7c>)
 8001e12:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 8001e16:	f00c f8d7 	bl	800dfc8 <HAL_GPIO_DeInit>
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 8001e1a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2);
 8001e1e:	480a      	ldr	r0, [pc, #40]	; (8001e48 <HAL_SDRAM_MspDeInit+0x80>)
 8001e20:	210d      	movs	r1, #13
 8001e22:	f00c b8d1 	b.w	800dfc8 <HAL_GPIO_DeInit>
}
 8001e26:	bd08      	pop	{r3, pc}
 8001e28:	2001ac64 	.word	0x2001ac64
 8001e2c:	40023800 	.word	0x40023800
 8001e30:	40021000 	.word	0x40021000
 8001e34:	40021800 	.word	0x40021800
 8001e38:	40020c00 	.word	0x40020c00
 8001e3c:	40022000 	.word	0x40022000
 8001e40:	40021400 	.word	0x40021400
 8001e44:	40021c00 	.word	0x40021c00
 8001e48:	40020800 	.word	0x40020800

08001e4c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001e4c:	b530      	push	{r4, r5, lr}
 8001e4e:	4601      	mov	r1, r0
 8001e50:	b089      	sub	sp, #36	; 0x24
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001e52:	2200      	movs	r2, #0
 8001e54:	2036      	movs	r0, #54	; 0x36
 8001e56:	f00b f99d 	bl	800d194 <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001e5a:	2036      	movs	r0, #54	; 0x36
 8001e5c:	f00b f9cc 	bl	800d1f8 <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e60:	2500      	movs	r5, #0
 8001e62:	4b15      	ldr	r3, [pc, #84]	; (8001eb8 <HAL_InitTick+0x6c>)
 8001e64:	9502      	str	r5, [sp, #8]
 8001e66:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001e68:	4c14      	ldr	r4, [pc, #80]	; (8001ebc <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e6a:	f042 0210 	orr.w	r2, r2, #16
 8001e6e:	641a      	str	r2, [r3, #64]	; 0x40
 8001e70:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e72:	f003 0310 	and.w	r3, r3, #16
 8001e76:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001e78:	a901      	add	r1, sp, #4
 8001e7a:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e7c:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001e7e:	f00d fb7d 	bl	800f57c <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001e82:	f00d fb6b 	bl	800f55c <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001e86:	4b0e      	ldr	r3, [pc, #56]	; (8001ec0 <HAL_InitTick+0x74>)
 8001e88:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001e8a:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001e8e:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001e90:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001e92:	4b0c      	ldr	r3, [pc, #48]	; (8001ec4 <HAL_InitTick+0x78>)
 8001e94:	fbb0 f0f3 	udiv	r0, r0, r3
 8001e98:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001e9a:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;

  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001e9c:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001e9e:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001ea0:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001ea2:	f00e f83f 	bl	800ff24 <HAL_TIM_Base_Init>
 8001ea6:	b920      	cbnz	r0, 8001eb2 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001ea8:	4620      	mov	r0, r4
 8001eaa:	f00d fef5 	bl	800fc98 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001eae:	b009      	add	sp, #36	; 0x24
 8001eb0:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001eb2:	2001      	movs	r0, #1
 8001eb4:	e7fb      	b.n	8001eae <HAL_InitTick+0x62>
 8001eb6:	bf00      	nop
 8001eb8:	40023800 	.word	0x40023800
 8001ebc:	2002c1b8 	.word	0x2002c1b8
 8001ec0:	40001000 	.word	0x40001000
 8001ec4:	000f4240 	.word	0x000f4240

08001ec8 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001ec8:	4770      	bx	lr

08001eca <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001eca:	e7fe      	b.n	8001eca <HardFault_Handler>

08001ecc <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001ecc:	e7fe      	b.n	8001ecc <MemManage_Handler>

08001ece <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001ece:	e7fe      	b.n	8001ece <BusFault_Handler>

08001ed0 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001ed0:	e7fe      	b.n	8001ed0 <UsageFault_Handler>

08001ed2 <DebugMon_Handler>:
 8001ed2:	4770      	bx	lr

08001ed4 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001ed4:	4801      	ldr	r0, [pc, #4]	; (8001edc <TIM6_DAC_IRQHandler+0x8>)
 8001ed6:	f00d bf1d 	b.w	800fd14 <HAL_TIM_IRQHandler>
 8001eda:	bf00      	nop
 8001edc:	2002c1b8 	.word	0x2002c1b8

08001ee0 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001ee0:	4801      	ldr	r0, [pc, #4]	; (8001ee8 <LTDC_IRQHandler+0x8>)
 8001ee2:	f00c be56 	b.w	800eb92 <HAL_LTDC_IRQHandler>
 8001ee6:	bf00      	nop
 8001ee8:	2002c04c 	.word	0x2002c04c

08001eec <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001eec:	4801      	ldr	r0, [pc, #4]	; (8001ef4 <DMA2D_IRQHandler+0x8>)
 8001eee:	f00b bae7 	b.w	800d4c0 <HAL_DMA2D_IRQHandler>
 8001ef2:	bf00      	nop
 8001ef4:	2002c0f8 	.word	0x2002c0f8

08001ef8 <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 8001ef8:	4801      	ldr	r0, [pc, #4]	; (8001f00 <DSI_IRQHandler+0x8>)
 8001efa:	f00b bce6 	b.w	800d8ca <HAL_DSI_IRQHandler>
 8001efe:	bf00      	nop
 8001f00:	2002c030 	.word	0x2002c030

08001f04 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001f04:	2001      	movs	r0, #1
 8001f06:	4770      	bx	lr

08001f08 <_kill>:

int _kill(int pid, int sig)
{
 8001f08:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f0a:	f025 fc7f 	bl	802780c <__errno>
 8001f0e:	2316      	movs	r3, #22
 8001f10:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001f12:	f04f 30ff 	mov.w	r0, #4294967295
 8001f16:	bd08      	pop	{r3, pc}

08001f18 <_exit>:

void _exit (int status)
{
 8001f18:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f1a:	f025 fc77 	bl	802780c <__errno>
 8001f1e:	2316      	movs	r3, #22
 8001f20:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001f22:	e7fe      	b.n	8001f22 <_exit+0xa>

08001f24 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001f24:	b570      	push	{r4, r5, r6, lr}
 8001f26:	460e      	mov	r6, r1
 8001f28:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f2a:	2500      	movs	r5, #0
 8001f2c:	42a5      	cmp	r5, r4
 8001f2e:	db01      	blt.n	8001f34 <_read+0x10>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001f30:	4620      	mov	r0, r4
 8001f32:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001f34:	f3af 8000 	nop.w
 8001f38:	5570      	strb	r0, [r6, r5]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f3a:	3501      	adds	r5, #1
 8001f3c:	e7f6      	b.n	8001f2c <_read+0x8>

08001f3e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001f3e:	b570      	push	{r4, r5, r6, lr}
 8001f40:	460e      	mov	r6, r1
 8001f42:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f44:	2500      	movs	r5, #0
 8001f46:	42a5      	cmp	r5, r4
 8001f48:	db01      	blt.n	8001f4e <_write+0x10>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001f4a:	4620      	mov	r0, r4
 8001f4c:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001f4e:	5d70      	ldrb	r0, [r6, r5]
 8001f50:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f54:	3501      	adds	r5, #1
 8001f56:	e7f6      	b.n	8001f46 <_write+0x8>

08001f58 <_close>:

int _close(int file)
{
	return -1;
}
 8001f58:	f04f 30ff 	mov.w	r0, #4294967295
 8001f5c:	4770      	bx	lr

08001f5e <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001f5e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001f62:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001f64:	2000      	movs	r0, #0
 8001f66:	4770      	bx	lr

08001f68 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001f68:	2001      	movs	r0, #1
 8001f6a:	4770      	bx	lr

08001f6c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001f6c:	2000      	movs	r0, #0
 8001f6e:	4770      	bx	lr

08001f70 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8001f70:	b508      	push	{r3, lr}
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001f72:	4b0a      	ldr	r3, [pc, #40]	; (8001f9c <_sbrk+0x2c>)
 8001f74:	6819      	ldr	r1, [r3, #0]
{
 8001f76:	4602      	mov	r2, r0
	if (heap_end == 0)
 8001f78:	b909      	cbnz	r1, 8001f7e <_sbrk+0xe>
		heap_end = &end;
 8001f7a:	4909      	ldr	r1, [pc, #36]	; (8001fa0 <_sbrk+0x30>)
 8001f7c:	6019      	str	r1, [r3, #0]

	prev_heap_end = heap_end;
 8001f7e:	6818      	ldr	r0, [r3, #0]
	if (heap_end + incr > stack_ptr)
 8001f80:	4669      	mov	r1, sp
 8001f82:	4402      	add	r2, r0
 8001f84:	428a      	cmp	r2, r1
 8001f86:	d906      	bls.n	8001f96 <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001f88:	f025 fc40 	bl	802780c <__errno>
 8001f8c:	230c      	movs	r3, #12
 8001f8e:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001f90:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001f94:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001f96:	601a      	str	r2, [r3, #0]
	return (caddr_t) prev_heap_end;
 8001f98:	e7fc      	b.n	8001f94 <_sbrk+0x24>
 8001f9a:	bf00      	nop
 8001f9c:	2001ac6c 	.word	0x2001ac6c
 8001fa0:	2002c2b8 	.word	0x2002c2b8

08001fa4 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8001fa4:	4770      	bx	lr

08001fa6 <_ZN23ApplicationFontProviderD0Ev>:
 8001fa6:	b510      	push	{r4, lr}
 8001fa8:	2104      	movs	r1, #4
 8001faa:	4604      	mov	r4, r0
 8001fac:	f025 fbba 	bl	8027724 <_ZdlPvj>
 8001fb0:	4620      	mov	r0, r4
 8001fb2:	bd10      	pop	{r4, pc}

08001fb4 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8001fb4:	2901      	cmp	r1, #1
{
 8001fb6:	b508      	push	{r3, lr}
    switch (typography)
 8001fb8:	d006      	beq.n	8001fc8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8001fba:	2902      	cmp	r1, #2
 8001fbc:	d008      	beq.n	8001fd0 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8001fbe:	b959      	cbnz	r1, 8001fd8 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8001fc0:	f006 fe34 	bl	8008c2c <_ZN17TypedTextDatabase8getFontsEv>
 8001fc4:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8001fc6:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8001fc8:	f006 fe30 	bl	8008c2c <_ZN17TypedTextDatabase8getFontsEv>
 8001fcc:	6840      	ldr	r0, [r0, #4]
 8001fce:	e7fa      	b.n	8001fc6 <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8001fd0:	f006 fe2c 	bl	8008c2c <_ZN17TypedTextDatabase8getFontsEv>
 8001fd4:	6880      	ldr	r0, [r0, #8]
 8001fd6:	e7f6      	b.n	8001fc6 <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8001fd8:	2000      	movs	r0, #0
 8001fda:	e7f4      	b.n	8001fc6 <_ZN23ApplicationFontProvider7getFontEt+0x12>

08001fdc <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8001fdc:	4800      	ldr	r0, [pc, #0]	; (8001fe0 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8001fde:	4770      	bx	lr
 8001fe0:	080291f4 	.word	0x080291f4

08001fe4 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8001fe4:	2009      	movs	r0, #9
 8001fe6:	4770      	bx	lr

08001fe8 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8001fe8:	b513      	push	{r0, r1, r4, lr}
 8001fea:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8001fec:	b151      	cbz	r1, 8002004 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001fee:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8001ff0:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8001ff2:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001ff6:	aa01      	add	r2, sp, #4
 8001ff8:	689c      	ldr	r4, [r3, #8]
 8001ffa:	f10d 0303 	add.w	r3, sp, #3
 8001ffe:	47a0      	blx	r4
        return glyph;
    }
 8002000:	b002      	add	sp, #8
 8002002:	bd10      	pop	{r4, pc}
            return 0;
 8002004:	4608      	mov	r0, r1
 8002006:	e7fb      	b.n	8002000 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002008 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002008:	8940      	ldrh	r0, [r0, #10]
 800200a:	4770      	bx	lr

0800200c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 800200c:	8980      	ldrh	r0, [r0, #12]
 800200e:	4770      	bx	lr

08002010 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8002010:	8880      	ldrh	r0, [r0, #4]
 8002012:	4770      	bx	lr

08002014 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002014:	7983      	ldrb	r3, [r0, #6]
 8002016:	8880      	ldrh	r0, [r0, #4]
 8002018:	4418      	add	r0, r3
    }
 800201a:	b280      	uxth	r0, r0
 800201c:	4770      	bx	lr

0800201e <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 800201e:	79c0      	ldrb	r0, [r0, #7]
    }
 8002020:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002024:	4770      	bx	lr

08002026 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002026:	79c0      	ldrb	r0, [r0, #7]
    }
 8002028:	09c0      	lsrs	r0, r0, #7
 800202a:	4770      	bx	lr

0800202c <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 800202c:	2000      	movs	r0, #0
 800202e:	4770      	bx	lr

08002030 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002030:	8081      	strh	r1, [r0, #4]
    }
 8002032:	4770      	bx	lr

08002034 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002034:	80c1      	strh	r1, [r0, #6]
    }
 8002036:	4770      	bx	lr

08002038 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002038:	8101      	strh	r1, [r0, #8]
    }
 800203a:	4770      	bx	lr

0800203c <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 800203c:	8141      	strh	r1, [r0, #10]
    }
 800203e:	4770      	bx	lr

08002040 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002040:	4770      	bx	lr

08002042 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
    }
 8002042:	4770      	bx	lr

08002044 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
    }
 8002044:	4770      	bx	lr

08002046 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
    }
 8002046:	4770      	bx	lr

08002048 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002048:	4770      	bx	lr

0800204a <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800204a:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 800204c:	88c4      	ldrh	r4, [r0, #6]
 800204e:	6803      	ldr	r3, [r0, #0]
 8002050:	1b12      	subs	r2, r2, r4
 8002052:	8884      	ldrh	r4, [r0, #4]
 8002054:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8002056:	1b09      	subs	r1, r1, r4
 8002058:	b212      	sxth	r2, r2
    }
 800205a:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800205e:	b209      	sxth	r1, r1
 8002060:	4718      	bx	r3

08002062 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002062:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002066:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002068:	f04f 33ff 	mov.w	r3, #4294967295
 800206c:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800206e:	6813      	ldr	r3, [r2, #0]
 8002070:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002072:	6010      	str	r0, [r2, #0]
    }
 8002074:	4770      	bx	lr

08002076 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8002076:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8002078:	4770      	bx	lr

0800207a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 800207a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800207e:	b11a      	cbz	r2, 8002088 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002080:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002084:	b102      	cbz	r2, 8002088 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002086:	6018      	str	r0, [r3, #0]
        }
    }
 8002088:	4770      	bx	lr

0800208a <_ZN23ConfigListFilterLogBase20scrollListUpdateItemER8ListTiles>:
    }

    virtual void scrollListUpdateItem(ListTile& item, int16_t itemIndex)
    {
        // Override and implement this function in ConfigListFilterLog
    }
 800208a:	4770      	bx	lr

0800208c <_ZN23ConfigListFilterLogBase20emitTrigger1CallbackEv>:
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitTrigger1Callback()
 800208c:	b510      	push	{r4, lr}
 800208e:	4604      	mov	r4, r0
    {
        if (trigger1Callback && trigger1Callback->isValid())
 8002090:	f8d0 0ff8 	ldr.w	r0, [r0, #4088]	; 0xff8
 8002094:	b150      	cbz	r0, 80020ac <_ZN23ConfigListFilterLogBase20emitTrigger1CallbackEv+0x20>
 8002096:	6803      	ldr	r3, [r0, #0]
 8002098:	68db      	ldr	r3, [r3, #12]
 800209a:	4798      	blx	r3
 800209c:	b130      	cbz	r0, 80020ac <_ZN23ConfigListFilterLogBase20emitTrigger1CallbackEv+0x20>
        {
            this->trigger1Callback->execute();
 800209e:	f8d4 0ff8 	ldr.w	r0, [r4, #4088]	; 0xff8
 80020a2:	6803      	ldr	r3, [r0, #0]
        }
    }
 80020a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            this->trigger1Callback->execute();
 80020a8:	689b      	ldr	r3, [r3, #8]
 80020aa:	4718      	bx	r3
    }
 80020ac:	bd10      	pop	{r4, pc}

080020ae <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EE20getNumberOfDrawablesEv>:
    }

    virtual int16_t getNumberOfDrawables()
    {
        return SIZE;
    }
 80020ae:	2010      	movs	r0, #16
 80020b0:	4770      	bx	lr

080020b2 <_ZN8touchgfx8CallbackI23ConfigListFilterLogBasePNS_26DrawableListItemsInterfaceEssED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1 = void, typename T2 = void, typename T3 = void>
struct Callback : public GenericCallback<T1, T2, T3>
 80020b2:	4770      	bx	lr

080020b4 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EED1Ev>:
class DrawableListItems : public DrawableListItemsInterface
 80020b4:	b538      	push	{r3, r4, r5, lr}
 80020b6:	4b07      	ldr	r3, [pc, #28]	; (80020d4 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EED1Ev+0x20>)
 80020b8:	6003      	str	r3, [r0, #0]
 80020ba:	4604      	mov	r4, r0
 80020bc:	f640 55d8 	movw	r5, #3544	; 0xdd8
 80020c0:	5963      	ldr	r3, [r4, r5]
 80020c2:	1960      	adds	r0, r4, r5
 80020c4:	681b      	ldr	r3, [r3, #0]
 80020c6:	3dec      	subs	r5, #236	; 0xec
 80020c8:	4798      	blx	r3
 80020ca:	f115 0fe8 	cmn.w	r5, #232	; 0xe8
 80020ce:	d1f7      	bne.n	80020c0 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EED1Ev+0xc>
 80020d0:	4620      	mov	r0, r4
 80020d2:	bd38      	pop	{r3, r4, r5, pc}
 80020d4:	080293b8 	.word	0x080293b8

080020d8 <_ZN23ConfigListFilterLogBaseD1Ev>:
    virtual ~ConfigListFilterLogBase() {}
 80020d8:	b510      	push	{r4, lr}
 80020da:	4b04      	ldr	r3, [pc, #16]	; (80020ec <_ZN23ConfigListFilterLogBaseD1Ev+0x14>)
 80020dc:	6003      	str	r3, [r0, #0]
 80020de:	4604      	mov	r4, r0
 80020e0:	f500 7092 	add.w	r0, r0, #292	; 0x124
 80020e4:	f7ff ffe6 	bl	80020b4 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EED1Ev>
 80020e8:	4620      	mov	r0, r4
 80020ea:	bd10      	pop	{r4, pc}
 80020ec:	080293e8 	.word	0x080293e8

080020f0 <_ZN8touchgfx8CallbackI23ConfigListFilterLogBasePNS_26DrawableListItemsInterfaceEssE7executeES3_ss>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     * @param  t2 This value will be passed as the second argument in the function call.
     * @param  t3 This value will be passed as the third argument in the function call.
     */
    virtual void execute(T1 t1, T2 t2, T3 t3)
 80020f0:	b4f0      	push	{r4, r5, r6, r7}
    {
        (pobject->*pmemfun_3)(t1, t2, t3);
 80020f2:	68c5      	ldr	r5, [r0, #12]
 80020f4:	6846      	ldr	r6, [r0, #4]
 80020f6:	106f      	asrs	r7, r5, #1
    virtual void execute(T1 t1, T2 t2, T3 t3)
 80020f8:	4604      	mov	r4, r0
        (pobject->*pmemfun_3)(t1, t2, t3);
 80020fa:	eb06 0065 	add.w	r0, r6, r5, asr #1
 80020fe:	07ed      	lsls	r5, r5, #31
 8002100:	68a4      	ldr	r4, [r4, #8]
 8002102:	bf44      	itt	mi
 8002104:	59f5      	ldrmi	r5, [r6, r7]
 8002106:	592c      	ldrmi	r4, [r5, r4]
 8002108:	46a4      	mov	ip, r4
    }
 800210a:	bcf0      	pop	{r4, r5, r6, r7}
        (pobject->*pmemfun_3)(t1, t2, t3);
 800210c:	4760      	bx	ip

0800210e <_ZNK8touchgfx8CallbackI23ConfigListFilterLogBasePNS_26DrawableListItemsInterfaceEssE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_3 != 0);
 800210e:	6843      	ldr	r3, [r0, #4]
 8002110:	b12b      	cbz	r3, 800211e <_ZNK8touchgfx8CallbackI23ConfigListFilterLogBasePNS_26DrawableListItemsInterfaceEssE7isValidEv+0x10>
 8002112:	6883      	ldr	r3, [r0, #8]
 8002114:	b92b      	cbnz	r3, 8002122 <_ZNK8touchgfx8CallbackI23ConfigListFilterLogBasePNS_26DrawableListItemsInterfaceEssE7isValidEv+0x14>
 8002116:	68c0      	ldr	r0, [r0, #12]
 8002118:	f000 0001 	and.w	r0, r0, #1
 800211c:	4770      	bx	lr
 800211e:	4618      	mov	r0, r3
 8002120:	4770      	bx	lr
 8002122:	2001      	movs	r0, #1
    }
 8002124:	4770      	bx	lr

08002126 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EED0Ev>:
 8002126:	b510      	push	{r4, lr}
 8002128:	4604      	mov	r4, r0
 800212a:	f7ff ffc3 	bl	80020b4 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EED1Ev>
 800212e:	4620      	mov	r0, r4
 8002130:	f640 61c4 	movw	r1, #3780	; 0xec4
 8002134:	f025 faf6 	bl	8027724 <_ZdlPvj>
 8002138:	4620      	mov	r0, r4
 800213a:	bd10      	pop	{r4, pc}

0800213c <_ZN8touchgfx8CallbackI23ConfigListFilterLogBasePNS_26DrawableListItemsInterfaceEssED0Ev>:
struct Callback : public GenericCallback<T1, T2, T3>
 800213c:	b510      	push	{r4, lr}
 800213e:	2110      	movs	r1, #16
 8002140:	4604      	mov	r4, r0
 8002142:	f025 faef 	bl	8027724 <_ZdlPvj>
 8002146:	4620      	mov	r0, r4
 8002148:	bd10      	pop	{r4, pc}

0800214a <_ZN23ConfigListFilterLogBaseD0Ev>:
 800214a:	b510      	push	{r4, lr}
 800214c:	4604      	mov	r4, r0
 800214e:	f7ff ffc3 	bl	80020d8 <_ZN23ConfigListFilterLogBaseD1Ev>
 8002152:	4620      	mov	r0, r4
 8002154:	f640 71fc 	movw	r1, #4092	; 0xffc
 8002158:	f025 fae4 	bl	8027724 <_ZdlPvj>
 800215c:	4620      	mov	r0, r4
 800215e:	bd10      	pop	{r4, pc}

08002160 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EE11getDrawableEs>:
    virtual Drawable* getDrawable(int16_t index)
 8002160:	b508      	push	{r3, lr}
        assert(index >= 0 && index < SIZE);
 8002162:	b28b      	uxth	r3, r1
 8002164:	2b0f      	cmp	r3, #15
 8002166:	d905      	bls.n	8002174 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EE11getDrawableEs+0x14>
 8002168:	4b05      	ldr	r3, [pc, #20]	; (8002180 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EE11getDrawableEs+0x20>)
 800216a:	4a06      	ldr	r2, [pc, #24]	; (8002184 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EE11getDrawableEs+0x24>)
 800216c:	4806      	ldr	r0, [pc, #24]	; (8002188 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EE11getDrawableEs+0x28>)
 800216e:	2154      	movs	r1, #84	; 0x54
 8002170:	f025 fb06 	bl	8027780 <__assert_func>
        return &element[index];
 8002174:	23ec      	movs	r3, #236	; 0xec
 8002176:	fb01 0003 	mla	r0, r1, r3, r0
    }
 800217a:	3004      	adds	r0, #4
 800217c:	bd08      	pop	{r3, pc}
 800217e:	bf00      	nop
 8002180:	080292a8 	.word	0x080292a8
 8002184:	080292c3 	.word	0x080292c3
 8002188:	08029350 	.word	0x08029350

0800218c <_ZN23ConfigListFilterLogBase10initializeEv>:
    add(boxBg);
    add(scrollList);
}

void ConfigListFilterLogBase::initialize()
{
 800218c:	b570      	push	{r4, r5, r6, lr}
 800218e:	4605      	mov	r5, r0
    virtual void itemChanged(int itemIndex);

    /** Removed all drawables and initializes the content of these items. */
    virtual void initialize()
    {
        list.refreshDrawables();
 8002190:	308c      	adds	r0, #140	; 0x8c
 8002192:	f010 fb3f 	bl	8012814 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>
 8002196:	f44f 7494 	mov.w	r4, #296	; 0x128
    scrollList.initialize();
    for (int i = 0; i < scrollListListItems.getNumberOfDrawables(); i++)
 800219a:	f640 76e8 	movw	r6, #4072	; 0xfe8
    {
        scrollListListItems[i].initialize();
 800219e:	592b      	ldr	r3, [r5, r4]
 80021a0:	1928      	adds	r0, r5, r4
 80021a2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80021a6:	34ec      	adds	r4, #236	; 0xec
 80021a8:	4798      	blx	r3
    for (int i = 0; i < scrollListListItems.getNumberOfDrawables(); i++)
 80021aa:	42b4      	cmp	r4, r6
 80021ac:	d1f7      	bne.n	800219e <_ZN23ConfigListFilterLogBase10initializeEv+0x12>
    }
}
 80021ae:	bd70      	pop	{r4, r5, r6, pc}

080021b0 <_ZN23ConfigListFilterLogBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss>:

void ConfigListFilterLogBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
 80021b0:	b513      	push	{r0, r1, r4, lr}
 80021b2:	4604      	mov	r4, r0
 80021b4:	4608      	mov	r0, r1
 80021b6:	4611      	mov	r1, r2
 80021b8:	461a      	mov	r2, r3
    if (items == &scrollListListItems)
 80021ba:	f504 7392 	add.w	r3, r4, #292	; 0x124
 80021be:	4298      	cmp	r0, r3
 80021c0:	d10d      	bne.n	80021de <_ZN23ConfigListFilterLogBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss+0x2e>
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
 80021c2:	6803      	ldr	r3, [r0, #0]
 80021c4:	9201      	str	r2, [sp, #4]
 80021c6:	689b      	ldr	r3, [r3, #8]
 80021c8:	4798      	blx	r3
        ListTile* cc = (ListTile*)d;
        scrollListUpdateItem(*cc, itemIndex);
 80021ca:	6823      	ldr	r3, [r4, #0]
 80021cc:	9a01      	ldr	r2, [sp, #4]
 80021ce:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
 80021d2:	4601      	mov	r1, r0
        scrollListUpdateItem(*cc, itemIndex);
 80021d4:	4620      	mov	r0, r4
    }
}
 80021d6:	b002      	add	sp, #8
 80021d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        scrollListUpdateItem(*cc, itemIndex);
 80021dc:	4718      	bx	r3
}
 80021de:	b002      	add	sp, #8
 80021e0:	bd10      	pop	{r4, pc}

080021e2 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
    void setWidthHeight(int16_t width, int16_t height)
 80021e2:	b570      	push	{r4, r5, r6, lr}
        setWidth(width);
 80021e4:	6803      	ldr	r3, [r0, #0]
    void setWidthHeight(int16_t width, int16_t height)
 80021e6:	4604      	mov	r4, r0
        setWidth(width);
 80021e8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    void setWidthHeight(int16_t width, int16_t height)
 80021ea:	4615      	mov	r5, r2
        setWidth(width);
 80021ec:	4798      	blx	r3
        setHeight(height);
 80021ee:	6823      	ldr	r3, [r4, #0]
 80021f0:	4629      	mov	r1, r5
 80021f2:	4620      	mov	r0, r4
 80021f4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    }
 80021f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80021fa:	4718      	bx	r3

080021fc <_ZN23ConfigListFilterLogBaseC1Ev>:
ConfigListFilterLogBase::ConfigListFilterLogBase() :
 80021fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    trigger1Callback(0)
 8002200:	4607      	mov	r7, r0
 8002202:	2300      	movs	r3, #0
          visible(true)
 8002204:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002208:	494b      	ldr	r1, [pc, #300]	; (8002338 <_ZN23ConfigListFilterLogBaseC1Ev+0x13c>)
 800220a:	8482      	strh	r2, [r0, #36]	; 0x24
 800220c:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8002210:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8002214:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8002218:	e9c0 3307 	strd	r3, r3, [r0, #28]
          firstChild(0)
 800221c:	6283      	str	r3, [r0, #40]	; 0x28
 800221e:	f847 1b2c 	str.w	r1, [r7], #44
 8002222:	f8a0 2050 	strh.w	r2, [r0, #80]	; 0x50
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002226:	22ff      	movs	r2, #255	; 0xff
 8002228:	f880 2052 	strb.w	r2, [r0, #82]	; 0x52
 800222c:	f100 0560 	add.w	r5, r0, #96	; 0x60
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
        : Box(), borderColor(0), borderSize(0)
 8002230:	4a42      	ldr	r2, [pc, #264]	; (800233c <_ZN23ConfigListFilterLogBaseC1Ev+0x140>)
        : color(col)
 8002232:	6543      	str	r3, [r0, #84]	; 0x54
ConfigListFilterLogBase::ConfigListFilterLogBase() :
 8002234:	4604      	mov	r4, r0
        : x(0), y(0), width(0), height(0)
 8002236:	e9c0 330c 	strd	r3, r3, [r0, #48]	; 0x30
 800223a:	e9c0 330e 	strd	r3, r3, [r0, #56]	; 0x38
 800223e:	e9c0 3310 	strd	r3, r3, [r0, #64]	; 0x40
 8002242:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
        : color(col)
 8002246:	6583      	str	r3, [r0, #88]	; 0x58
 8002248:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 800224c:	62c2      	str	r2, [r0, #44]	; 0x2c
    trigger1Callback(0)
 800224e:	4628      	mov	r0, r5
 8002250:	f010 fd34 	bl	8012cbc <_ZN8touchgfx10ScrollListC1Ev>
class DrawableListItems : public DrawableListItemsInterface
 8002254:	4b3a      	ldr	r3, [pc, #232]	; (8002340 <_ZN23ConfigListFilterLogBaseC1Ev+0x144>)
 8002256:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 800225a:	f504 7a92 	add.w	sl, r4, #292	; 0x124
 800225e:	f504 7694 	add.w	r6, r4, #296	; 0x128
 8002262:	f604 78e8 	addw	r8, r4, #4072	; 0xfe8
 8002266:	4630      	mov	r0, r6
 8002268:	36ec      	adds	r6, #236	; 0xec
 800226a:	f007 fdad 	bl	8009dc8 <_ZN8ListTileC1Ev>
 800226e:	45b0      	cmp	r8, r6
 8002270:	d1f9      	bne.n	8002266 <_ZN23ConfigListFilterLogBaseC1Ev+0x6a>
        : pobject(pobject), pmemfun_3(pmemfun_3)
 8002272:	4b34      	ldr	r3, [pc, #208]	; (8002344 <_ZN23ConfigListFilterLogBaseC1Ev+0x148>)
 8002274:	f8c4 3fe8 	str.w	r3, [r4, #4072]	; 0xfe8
 8002278:	4b33      	ldr	r3, [pc, #204]	; (8002348 <_ZN23ConfigListFilterLogBaseC1Ev+0x14c>)
 800227a:	f8c4 3ff0 	str.w	r3, [r4, #4080]	; 0xff0
 800227e:	2600      	movs	r6, #0
        rect.width = width;
 8002280:	4b32      	ldr	r3, [pc, #200]	; (800234c <_ZN23ConfigListFilterLogBaseC1Ev+0x150>)
 8002282:	60a3      	str	r3, [r4, #8]
        setX(x);
 8002284:	4631      	mov	r1, r6
 8002286:	4638      	mov	r0, r7
 8002288:	f8c4 4fec 	str.w	r4, [r4, #4076]	; 0xfec
 800228c:	f8c4 6ff4 	str.w	r6, [r4, #4084]	; 0xff4
 8002290:	f8c4 6ff8 	str.w	r6, [r4, #4088]	; 0xff8
 8002294:	f7ff fecc 	bl	8002030 <_ZN8touchgfx8Drawable4setXEs>
        setY(y);
 8002298:	4631      	mov	r1, r6
 800229a:	4638      	mov	r0, r7
 800229c:	f7ff feca 	bl	8002034 <_ZN8touchgfx8Drawable4setYEs>
        setWidthHeight(width, height);
 80022a0:	4638      	mov	r0, r7
 80022a2:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80022a6:	21ba      	movs	r1, #186	; 0xba
 80022a8:	f7ff ff9b 	bl	80021e2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
     * @param  color The color of the border.
     * @see setColor, getBorderColor, Color::getColorFrom24BitRGB
     */
    void setBorderColor(colortype color)
    {
        borderColor = color;
 80022ac:	4a28      	ldr	r2, [pc, #160]	; (8002350 <_ZN23ConfigListFilterLogBaseC1Ev+0x154>)
        rect.x = x;
 80022ae:	6666      	str	r6, [r4, #100]	; 0x64
 80022b0:	f04f 33ff 	mov.w	r3, #4294967295
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 80022b4:	f04f 0901 	mov.w	r9, #1
        borderColor = color;
 80022b8:	e9c4 2315 	strd	r2, r3, [r4, #84]	; 0x54
        setWidthHeight(width, height);
 80022bc:	4628      	mov	r0, r5
 80022be:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
        borderSize = size;
 80022c2:	f8a4 905c 	strh.w	r9, [r4, #92]	; 0x5c
 80022c6:	21ba      	movs	r1, #186	; 0xba
 80022c8:	f7ff ff8b 	bl	80021e2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    scrollList.setHorizontal(false);
 80022cc:	4631      	mov	r1, r6
 80022ce:	4628      	mov	r0, r5
 80022d0:	f010 ff00 	bl	80130d4 <_ZN8touchgfx10ScrollBase13setHorizontalEb>
    scrollList.setCircular(true);
 80022d4:	4649      	mov	r1, r9
 80022d6:	4628      	mov	r0, r5
 80022d8:	f010 ff54 	bl	8013184 <_ZN8touchgfx10ScrollBase11setCircularEb>
    scrollList.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
 80022dc:	4628      	mov	r0, r5
 80022de:	491d      	ldr	r1, [pc, #116]	; (8002354 <_ZN23ConfigListFilterLogBaseC1Ev+0x158>)
 80022e0:	f010 fe39 	bl	8012f56 <_ZN8touchgfx10ScrollBase17setEasingEquationEPFstsstE>
    scrollList.setSwipeAcceleration(10);
 80022e4:	4628      	mov	r0, r5
 80022e6:	210a      	movs	r1, #10
 80022e8:	f010 fe38 	bl	8012f5c <_ZN8touchgfx10ScrollBase20setSwipeAccelerationEt>
    scrollList.setDragAcceleration(10);
 80022ec:	4628      	mov	r0, r5
 80022ee:	210a      	movs	r1, #10
 80022f0:	f010 fe37 	bl	8012f62 <_ZN8touchgfx10ScrollBase19setDragAccelerationEt>
    scrollList.setNumberOfItems(32);
 80022f4:	4628      	mov	r0, r5
 80022f6:	2120      	movs	r1, #32
 80022f8:	f010 fda9 	bl	8012e4e <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs>
    scrollList.setPadding(0, 0);
 80022fc:	4632      	mov	r2, r6
 80022fe:	4631      	mov	r1, r6
 8002300:	4628      	mov	r0, r5
 8002302:	f010 fced 	bl	8012ce0 <_ZN8touchgfx10ScrollList10setPaddingEss>
    scrollList.setSnapping(false);
 8002306:	4631      	mov	r1, r6
 8002308:	4628      	mov	r0, r5
 800230a:	f010 fd01 	bl	8012d10 <_ZN8touchgfx10ScrollList11setSnappingEb>
    scrollList.setDrawableSize(32, 0);
 800230e:	4632      	mov	r2, r6
 8002310:	4628      	mov	r0, r5
 8002312:	2120      	movs	r1, #32
 8002314:	f010 fe18 	bl	8012f48 <_ZN8touchgfx10ScrollBase15setDrawableSizeEss>
    scrollList.setDrawables(scrollListListItems, updateItemCallback);
 8002318:	4642      	mov	r2, r8
 800231a:	4651      	mov	r1, sl
 800231c:	4628      	mov	r0, r5
 800231e:	f010 fbfe 	bl	8012b1e <_ZN8touchgfx10ScrollList12setDrawablesERNS_26DrawableListItemsInterfaceERNS_15GenericCallbackIPS1_ssEE>
    add(boxBg);
 8002322:	4639      	mov	r1, r7
 8002324:	4620      	mov	r0, r4
 8002326:	f011 f8a3 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(scrollList);
 800232a:	4620      	mov	r0, r4
 800232c:	4629      	mov	r1, r5
 800232e:	f011 f89f 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002332:	4620      	mov	r0, r4
 8002334:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002338:	080293e8 	.word	0x080293e8
 800233c:	0802c4c8 	.word	0x0802c4c8
 8002340:	080293b8 	.word	0x080293b8
 8002344:	080293d0 	.word	0x080293d0
 8002348:	080021b1 	.word	0x080021b1
 800234c:	00bd00ba 	.word	0x00bd00ba
 8002350:	ff474747 	.word	0xff474747
 8002354:	08018f6d 	.word	0x08018f6d

08002358 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002358:	4770      	bx	lr

0800235a <_ZN29CustomContainerButton_keyBaseD1Ev>:

class CustomContainerButton_keyBase : public touchgfx::Container
{
public:
    CustomContainerButton_keyBase();
    virtual ~CustomContainerButton_keyBase() {}
 800235a:	4770      	bx	lr

0800235c <_ZN29CustomContainerButton_keyBase19functionButtonClickEv>:
     * Virtual Action Handlers
     */
    virtual void functionButtonClick()
    {
        // Override and implement this function in CustomContainerButton_key
    }
 800235c:	4770      	bx	lr

0800235e <_ZN29CustomContainerButton_keyBase29emitTriggerButton_keyCallbackEv>:
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitTriggerButton_keyCallback()
 800235e:	b510      	push	{r4, lr}
 8002360:	4604      	mov	r4, r0
    {
        if (triggerButton_keyCallback && triggerButton_keyCallback->isValid())
 8002362:	f8d0 0110 	ldr.w	r0, [r0, #272]	; 0x110
 8002366:	b150      	cbz	r0, 800237e <_ZN29CustomContainerButton_keyBase29emitTriggerButton_keyCallbackEv+0x20>
 8002368:	6803      	ldr	r3, [r0, #0]
 800236a:	68db      	ldr	r3, [r3, #12]
 800236c:	4798      	blx	r3
 800236e:	b130      	cbz	r0, 800237e <_ZN29CustomContainerButton_keyBase29emitTriggerButton_keyCallbackEv+0x20>
        {
            this->triggerButton_keyCallback->execute();
 8002370:	f8d4 0110 	ldr.w	r0, [r4, #272]	; 0x110
 8002374:	6803      	ldr	r3, [r0, #0]
        }
    }
 8002376:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            this->triggerButton_keyCallback->execute();
 800237a:	689b      	ldr	r3, [r3, #8]
 800237c:	4718      	bx	r3
    }
 800237e:	bd10      	pop	{r4, pc}

08002380 <_ZN29CustomContainerButton_keyBase10initializeEv>:
}

void CustomContainerButton_keyBase::initialize()
{

}
 8002380:	4770      	bx	lr

08002382 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 8002382:	4770      	bx	lr

08002384 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 8002384:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8002388:	b12b      	cbz	r3, 8002396 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x12>
 800238a:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 800238c:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 800238e:	b123      	cbz	r3, 800239a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x16>
 8002390:	6f43      	ldr	r3, [r0, #116]	; 0x74
        borderColor = color;
 8002392:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 8002394:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 8002396:	6e82      	ldr	r2, [r0, #104]	; 0x68
 8002398:	e7f8      	b.n	800238c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x8>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 800239a:	6f03      	ldr	r3, [r0, #112]	; 0x70
 800239c:	e7f9      	b.n	8002392 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xe>

0800239e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    TextAreaWithOneWildcard wildcardText; ///< The wildcard text
    colortype colorReleased;              ///< The color released
    colortype colorPressed;               ///< The color pressed

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 800239e:	b508      	push	{r3, lr}
    {
        wildcardText.setColor(T::getPressed() ? colorPressed : colorReleased);
 80023a0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80023a4:	b133      	cbz	r3, 80023b4 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x16>
 80023a6:	f8d0 30bc 	ldr.w	r3, [r0, #188]	; 0xbc
     *
     * @param  color The color to use.
     */
    FORCE_INLINE_FUNCTION void setColor(colortype color)
    {
        this->color = color;
 80023aa:	f8c0 30a8 	str.w	r3, [r0, #168]	; 0xa8
        T::handlePressedUpdated();
 80023ae:	f7ff ffe9 	bl	8002384 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 80023b2:	bd08      	pop	{r3, pc}
        wildcardText.setColor(T::getPressed() ? colorPressed : colorReleased);
 80023b4:	f8d0 30b8 	ldr.w	r3, [r0, #184]	; 0xb8
 80023b8:	e7f7      	b.n	80023aa <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0xc>

080023ba <_ZN8touchgfx8CallbackI29CustomContainerButton_keyBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80023ba:	4770      	bx	lr

080023bc <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
class WildcardTextButtonStyle : public T
 80023bc:	4770      	bx	lr

080023be <_ZN8touchgfx8CallbackI29CustomContainerButton_keyBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 80023be:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun_1)(t1);
 80023c0:	68c2      	ldr	r2, [r0, #12]
 80023c2:	6844      	ldr	r4, [r0, #4]
 80023c4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80023c6:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80023c8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80023cc:	07d2      	lsls	r2, r2, #31
 80023ce:	bf48      	it	mi
 80023d0:	5962      	ldrmi	r2, [r4, r5]
 80023d2:	689b      	ldr	r3, [r3, #8]
    }
 80023d4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80023d6:	bf48      	it	mi
 80023d8:	58d3      	ldrmi	r3, [r2, r3]
 80023da:	4718      	bx	r3

080023dc <_ZNK8touchgfx8CallbackI29CustomContainerButton_keyBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_1 != 0);
 80023dc:	6843      	ldr	r3, [r0, #4]
 80023de:	b12b      	cbz	r3, 80023ec <_ZNK8touchgfx8CallbackI29CustomContainerButton_keyBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 80023e0:	6883      	ldr	r3, [r0, #8]
 80023e2:	b92b      	cbnz	r3, 80023f0 <_ZNK8touchgfx8CallbackI29CustomContainerButton_keyBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 80023e4:	68c0      	ldr	r0, [r0, #12]
 80023e6:	f000 0001 	and.w	r0, r0, #1
 80023ea:	4770      	bx	lr
 80023ec:	4618      	mov	r0, r3
 80023ee:	4770      	bx	lr
 80023f0:	2001      	movs	r0, #1
    }
 80023f2:	4770      	bx	lr

080023f4 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        wildcardText.setAlpha(T::getAlpha());
 80023f4:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80023f8:	f880 30ae 	strb.w	r3, [r0, #174]	; 0xae
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80023fc:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
        T::handleAlphaUpdated();
    }
 8002400:	4770      	bx	lr

08002402 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
 8002402:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8002406:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 800240a:	4770      	bx	lr

0800240c <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800240c:	b510      	push	{r4, lr}
    }
 800240e:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002410:	4604      	mov	r4, r0
    }
 8002412:	f025 f987 	bl	8027724 <_ZdlPvj>
 8002416:	4620      	mov	r0, r4
 8002418:	bd10      	pop	{r4, pc}

0800241a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 800241a:	b510      	push	{r4, lr}
 800241c:	2178      	movs	r1, #120	; 0x78
 800241e:	4604      	mov	r4, r0
 8002420:	f025 f980 	bl	8027724 <_ZdlPvj>
 8002424:	4620      	mov	r0, r4
 8002426:	bd10      	pop	{r4, pc}

08002428 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class WildcardTextButtonStyle : public T
 8002428:	b510      	push	{r4, lr}
 800242a:	21c0      	movs	r1, #192	; 0xc0
 800242c:	4604      	mov	r4, r0
 800242e:	f025 f979 	bl	8027724 <_ZdlPvj>
 8002432:	4620      	mov	r0, r4
 8002434:	bd10      	pop	{r4, pc}

08002436 <_ZN8touchgfx8CallbackI29CustomContainerButton_keyBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002436:	b510      	push	{r4, lr}
 8002438:	2110      	movs	r1, #16
 800243a:	4604      	mov	r4, r0
 800243c:	f025 f972 	bl	8027724 <_ZdlPvj>
 8002440:	4620      	mov	r0, r4
 8002442:	bd10      	pop	{r4, pc}

08002444 <_ZN29CustomContainerButton_keyBaseD0Ev>:
    virtual ~CustomContainerButton_keyBase() {}
 8002444:	b510      	push	{r4, lr}
 8002446:	f44f 718a 	mov.w	r1, #276	; 0x114
 800244a:	4604      	mov	r4, r0
 800244c:	f025 f96a 	bl	8027724 <_ZdlPvj>
 8002450:	4620      	mov	r0, r4
 8002452:	bd10      	pop	{r4, pc}

08002454 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8002454:	b510      	push	{r4, lr}
 8002456:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8002458:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800245a:	b150      	cbz	r0, 8002472 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 800245c:	6803      	ldr	r3, [r0, #0]
 800245e:	68db      	ldr	r3, [r3, #12]
 8002460:	4798      	blx	r3
 8002462:	b130      	cbz	r0, 8002472 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8002464:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002466:	6803      	ldr	r3, [r0, #0]
 8002468:	4621      	mov	r1, r4
 800246a:	689b      	ldr	r3, [r3, #8]
        }
    }
 800246c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8002470:	4718      	bx	r3
    }
 8002472:	bd10      	pop	{r4, pc}

08002474 <_ZN29CustomContainerButton_keyBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

}

void CustomContainerButton_keyBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton_keyboard)
 8002474:	f100 032c 	add.w	r3, r0, #44	; 0x2c
 8002478:	428b      	cmp	r3, r1
{
 800247a:	b510      	push	{r4, lr}
 800247c:	4604      	mov	r4, r0
    if (&src == &flexButton_keyboard)
 800247e:	d10a      	bne.n	8002496 <_ZN29CustomContainerButton_keyBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
    {
        //Interaction1
        //When flexButton_keyboard clicked call virtual function
        //Call functionButtonClick
        functionButtonClick();
 8002480:	6803      	ldr	r3, [r0, #0]
 8002482:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002486:	4798      	blx	r3

        //Interaction2
        //When flexButton_keyboard clicked emit triggerButton_key callback
        //Emit callback
        emitTriggerButton_keyCallback();
 8002488:	6823      	ldr	r3, [r4, #0]
 800248a:	4620      	mov	r0, r4
 800248c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    }
}
 8002490:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        emitTriggerButton_keyCallback();
 8002494:	4718      	bx	r3
}
 8002496:	bd10      	pop	{r4, pc}

08002498 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002498:	790b      	ldrb	r3, [r1, #4]
    virtual void handleClickEvent(const ClickEvent& event)
 800249a:	b570      	push	{r4, r5, r6, lr}
        bool wasPressed = getPressed();
 800249c:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
    virtual void handleClickEvent(const ClickEvent& event)
 80024a0:	4604      	mov	r4, r0
 80024a2:	460d      	mov	r5, r1
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 80024a4:	b99b      	cbnz	r3, 80024ce <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 80024a6:	b98e      	cbnz	r6, 80024cc <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 80024a8:	fab3 f383 	clz	r3, r3
 80024ac:	095b      	lsrs	r3, r3, #5
 80024ae:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 80024b2:	6823      	ldr	r3, [r4, #0]
 80024b4:	4620      	mov	r0, r4
 80024b6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80024ba:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 80024bc:	6823      	ldr	r3, [r4, #0]
 80024be:	4620      	mov	r0, r4
 80024c0:	695b      	ldr	r3, [r3, #20]
 80024c2:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 80024c4:	b116      	cbz	r6, 80024cc <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 80024c6:	792b      	ldrb	r3, [r5, #4]
 80024c8:	2b01      	cmp	r3, #1
 80024ca:	d003      	beq.n	80024d4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 80024cc:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 80024ce:	2e00      	cmp	r6, #0
 80024d0:	d0fc      	beq.n	80024cc <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 80024d2:	e7e9      	b.n	80024a8 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 80024d4:	6823      	ldr	r3, [r4, #0]
 80024d6:	4620      	mov	r0, r4
 80024d8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    }
 80024dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 80024e0:	4718      	bx	r3
	...

080024e4 <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 80024e4:	4a07      	ldr	r2, [pc, #28]	; (8002504 <_ZN8touchgfx8DrawableC1Ev+0x20>)
 80024e6:	6002      	str	r2, [r0, #0]
        : x(0), y(0), width(0), height(0)
 80024e8:	2200      	movs	r2, #0
 80024ea:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80024ee:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80024f2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80024f6:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80024fa:	f44f 7280 	mov.w	r2, #256	; 0x100
 80024fe:	8482      	strh	r2, [r0, #36]	; 0x24
    }
 8002500:	4770      	bx	lr
 8002502:	bf00      	nop
 8002504:	0802c8b8 	.word	0x0802c8b8

08002508 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002508:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800250a:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 800250c:	4604      	mov	r4, r0
        setX(x);
 800250e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    void setXY(int16_t x, int16_t y)
 8002510:	4615      	mov	r5, r2
        setX(x);
 8002512:	4798      	blx	r3
        setY(y);
 8002514:	6823      	ldr	r3, [r4, #0]
 8002516:	4629      	mov	r1, r5
 8002518:	4620      	mov	r0, r4
 800251a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    }
 800251c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002520:	4718      	bx	r3
	...

08002524 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
    WildcardTextButtonStyle()
 8002524:	b570      	push	{r4, r5, r6, lr}
 8002526:	4604      	mov	r4, r0
 8002528:	f7ff ffdc 	bl	80024e4 <_ZN8touchgfx8DrawableC1Ev>
        : pressed(false), alpha(255), action(0)
 800252c:	f44f 437f 	mov.w	r3, #65280	; 0xff00
        : T(), up(), down()
 8002530:	4626      	mov	r6, r4
 8002532:	85a3      	strh	r3, [r4, #44]	; 0x2c
        touchable = touch;
 8002534:	2301      	movs	r3, #1
 8002536:	2500      	movs	r5, #0
 8002538:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 800253c:	4b22      	ldr	r3, [pc, #136]	; (80025c8 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0xa4>)
 800253e:	62a5      	str	r5, [r4, #40]	; 0x28
 8002540:	6325      	str	r5, [r4, #48]	; 0x30
 8002542:	f846 3b34 	str.w	r3, [r6], #52
        : Widget(), alpha(255), color(0)
 8002546:	2226      	movs	r2, #38	; 0x26
 8002548:	4629      	mov	r1, r5
 800254a:	4630      	mov	r0, r6
 800254c:	f025 fac6 	bl	8027adc <memset>
class Widget : public Drawable
 8002550:	4630      	mov	r0, r6
 8002552:	f7ff ffc7 	bl	80024e4 <_ZN8touchgfx8DrawableC1Ev>
 8002556:	23ff      	movs	r3, #255	; 0xff
 8002558:	f884 305a 	strb.w	r3, [r4, #90]	; 0x5a
        : Box(), borderColor(0), borderSize(0)
 800255c:	4b1b      	ldr	r3, [pc, #108]	; (80025cc <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0xa8>)
 800255e:	6363      	str	r3, [r4, #52]	; 0x34
        T::add(borderBox);
 8002560:	4631      	mov	r1, r6
 8002562:	4620      	mov	r0, r4
        : T()
 8002564:	4626      	mov	r6, r4
        : color(0)
 8002566:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 800256a:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 800256e:	65e5      	str	r5, [r4, #92]	; 0x5c
 8002570:	6625      	str	r5, [r4, #96]	; 0x60
 8002572:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
        rect.x = x;
 8002576:	63a5      	str	r5, [r4, #56]	; 0x38
 8002578:	f010 ff7a 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800257c:	4b14      	ldr	r3, [pc, #80]	; (80025d0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0xac>)
 800257e:	f846 3b78 	str.w	r3, [r6], #120
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8002582:	2226      	movs	r2, #38	; 0x26
 8002584:	4629      	mov	r1, r5
 8002586:	4630      	mov	r0, r6
 8002588:	f025 faa8 	bl	8027adc <memset>
 800258c:	4630      	mov	r0, r6
 800258e:	f7ff ffa9 	bl	80024e4 <_ZN8touchgfx8DrawableC1Ev>
        : typedTextId(id)
 8002592:	4b10      	ldr	r3, [pc, #64]	; (80025d4 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0xb0>)
 8002594:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
 8002598:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800259c:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 80025a0:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 80025a4:	f8c4 30ac 	str.w	r3, [r4, #172]	; 0xac
 */
class TextAreaWithOneWildcard : public TextArea
{
public:
    TextAreaWithOneWildcard()
        : TextArea(), wildcard(0)
 80025a8:	4b0b      	ldr	r3, [pc, #44]	; (80025d8 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0xb4>)
 80025aa:	f8c4 50a8 	str.w	r5, [r4, #168]	; 0xa8
        T::add(wildcardText);
 80025ae:	4620      	mov	r0, r4
        : color(0)
 80025b0:	e9c4 552d 	strd	r5, r5, [r4, #180]	; 0xb4
 80025b4:	f8a4 50b0 	strh.w	r5, [r4, #176]	; 0xb0
 80025b8:	67a3      	str	r3, [r4, #120]	; 0x78
 80025ba:	f8c4 50bc 	str.w	r5, [r4, #188]	; 0xbc
 80025be:	4631      	mov	r1, r6
 80025c0:	f010 ff56 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 80025c4:	4620      	mov	r0, r4
 80025c6:	bd70      	pop	{r4, r5, r6, pc}
 80025c8:	0802959c 	.word	0x0802959c
 80025cc:	0802c4c8 	.word	0x0802c4c8
 80025d0:	08029634 	.word	0x08029634
 80025d4:	0802958c 	.word	0x0802958c
 80025d8:	0802c3a8 	.word	0x0802c3a8

080025dc <_ZN29CustomContainerButton_keyBaseC1Ev>:
CustomContainerButton_keyBase::CustomContainerButton_keyBase() :
 80025dc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80025e0:	4604      	mov	r4, r0
    triggerButton_keyCallback(0)
 80025e2:	4625      	mov	r5, r4
 80025e4:	f7ff ff7e 	bl	80024e4 <_ZN8touchgfx8DrawableC1Ev>
 80025e8:	2600      	movs	r6, #0
 80025ea:	4b49      	ldr	r3, [pc, #292]	; (8002710 <_ZN29CustomContainerButton_keyBaseC1Ev+0x134>)
 80025ec:	62a6      	str	r6, [r4, #40]	; 0x28
 80025ee:	f845 3b2c 	str.w	r3, [r5], #44
 80025f2:	4628      	mov	r0, r5
 80025f4:	f7ff ff96 	bl	8002524 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 80025f8:	4b46      	ldr	r3, [pc, #280]	; (8002714 <_ZN29CustomContainerButton_keyBaseC1Ev+0x138>)
 80025fa:	f8c4 6110 	str.w	r6, [r4, #272]	; 0x110
 80025fe:	e9c4 3440 	strd	r3, r4, [r4, #256]	; 0x100
 8002602:	4b45      	ldr	r3, [pc, #276]	; (8002718 <_ZN29CustomContainerButton_keyBaseC1Ev+0x13c>)
 8002604:	e9c4 3642 	strd	r3, r6, [r4, #264]	; 0x108
        rect.width = width;
 8002608:	f04f 133c 	mov.w	r3, #3932220	; 0x3c003c
 800260c:	60a3      	str	r3, [r4, #8]
        borderBox.setPosition(x, y, width, height);
 800260e:	f104 0060 	add.w	r0, r4, #96	; 0x60
        setXY(x, y);
 8002612:	4632      	mov	r2, r6
 8002614:	4631      	mov	r1, r6
 8002616:	9001      	str	r0, [sp, #4]
 8002618:	f7ff ff76 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 800261c:	223c      	movs	r2, #60	; 0x3c
 800261e:	4611      	mov	r1, r2
 8002620:	9801      	ldr	r0, [sp, #4]
 8002622:	f7ff fdde 	bl	80021e2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
        borderSize = size;
 8002626:	2301      	movs	r3, #1
 8002628:	f8a4 3090 	strh.w	r3, [r4, #144]	; 0x90
        up = colorReleased;
 800262c:	f1a3 1365 	sub.w	r3, r3, #6619237	; 0x650065
 8002630:	f5a3 43c8 	sub.w	r3, r3, #25600	; 0x6400
 8002634:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
        down = colorPressed;
 8002638:	f103 1335 	add.w	r3, r3, #3473461	; 0x350035
 800263c:	f503 5358 	add.w	r3, r3, #13824	; 0x3600
 8002640:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        borderUp = borderColorReleased;
 8002644:	4b35      	ldr	r3, [pc, #212]	; (800271c <_ZN29CustomContainerButton_keyBaseC1Ev+0x140>)
 8002646:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
        borderDown = borderColorPressed;
 800264a:	f503 2342 	add.w	r3, r3, #794624	; 0xc2000
 800264e:	f203 2339 	addw	r3, r3, #569	; 0x239
 8002652:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
        handlePressedUpdated();
 8002656:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002658:	4628      	mov	r0, r5
 800265a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800265e:	4798      	blx	r3
        wildcardText.setTypedText(t);
 8002660:	f104 07a4 	add.w	r7, r4, #164	; 0xa4
 8002664:	4b2e      	ldr	r3, [pc, #184]	; (8002720 <_ZN29CustomContainerButton_keyBaseC1Ev+0x144>)
 8002666:	9302      	str	r3, [sp, #8]
 8002668:	a902      	add	r1, sp, #8
 800266a:	2313      	movs	r3, #19
 800266c:	4638      	mov	r0, r7
 800266e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8002672:	f012 fc94 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        wildcardText.setWidthHeight(T::getWidth(), T::getHeight());
 8002676:	f9b4 3036 	ldrsh.w	r3, [r4, #54]	; 0x36
        rect.height = height;
 800267a:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
    }

private:
    FORCE_INLINE_FUNCTION void assertValid() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800267e:	4b29      	ldr	r3, [pc, #164]	; (8002724 <_ZN29CustomContainerButton_keyBaseC1Ev+0x148>)
        rect.width = width;
 8002680:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8002682:	681b      	ldr	r3, [r3, #0]
 8002684:	f8a4 20ac 	strh.w	r2, [r4, #172]	; 0xac
    Unicode::snprintf(flexButton_keyboardBuffer, FLEXBUTTON_KEYBOARD_SIZE, "%s", TypedText(T_RESOURCEID11).getText());
 8002688:	f104 08ec 	add.w	r8, r4, #236	; 0xec
 800268c:	b92b      	cbnz	r3, 800269a <_ZN29CustomContainerButton_keyBaseC1Ev+0xbe>
 800268e:	4b26      	ldr	r3, [pc, #152]	; (8002728 <_ZN29CustomContainerButton_keyBaseC1Ev+0x14c>)
 8002690:	4a26      	ldr	r2, [pc, #152]	; (800272c <_ZN29CustomContainerButton_keyBaseC1Ev+0x150>)
 8002692:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8002694:	4826      	ldr	r0, [pc, #152]	; (8002730 <_ZN29CustomContainerButton_keyBaseC1Ev+0x154>)
 8002696:	f025 f873 	bl	8027780 <__assert_func>
 800269a:	4b26      	ldr	r3, [pc, #152]	; (8002734 <_ZN29CustomContainerButton_keyBaseC1Ev+0x158>)
 800269c:	881b      	ldrh	r3, [r3, #0]
 800269e:	2b14      	cmp	r3, #20
 80026a0:	d803      	bhi.n	80026aa <_ZN29CustomContainerButton_keyBaseC1Ev+0xce>
 80026a2:	4b25      	ldr	r3, [pc, #148]	; (8002738 <_ZN29CustomContainerButton_keyBaseC1Ev+0x15c>)
 80026a4:	4a21      	ldr	r2, [pc, #132]	; (800272c <_ZN29CustomContainerButton_keyBaseC1Ev+0x150>)
 80026a6:	21af      	movs	r1, #175	; 0xaf
 80026a8:	e7f4      	b.n	8002694 <_ZN29CustomContainerButton_keyBaseC1Ev+0xb8>
        return texts->getText(typedTextId);
 80026aa:	4b24      	ldr	r3, [pc, #144]	; (800273c <_ZN29CustomContainerButton_keyBaseC1Ev+0x160>)
 80026ac:	2114      	movs	r1, #20
 80026ae:	6818      	ldr	r0, [r3, #0]
 80026b0:	f006 faaa 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 80026b4:	4a22      	ldr	r2, [pc, #136]	; (8002740 <_ZN29CustomContainerButton_keyBaseC1Ev+0x164>)
 80026b6:	4603      	mov	r3, r0
 80026b8:	210a      	movs	r1, #10
 80026ba:	4640      	mov	r0, r8
 80026bc:	f018 fd06 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        setXY(x, y);
 80026c0:	4631      	mov	r1, r6
 80026c2:	4638      	mov	r0, r7
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
    {
        wildcard = value;
 80026c4:	f8c4 80e0 	str.w	r8, [r4, #224]	; 0xe0
 80026c8:	2212      	movs	r2, #18
 80026ca:	f7ff ff1d 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80026ce:	223c      	movs	r2, #60	; 0x3c
 80026d0:	4611      	mov	r1, r2
 80026d2:	4638      	mov	r0, r7
 80026d4:	f7ff fd85 	bl	80021e2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
        colorReleased = newColorReleased;
 80026d8:	4b1a      	ldr	r3, [pc, #104]	; (8002744 <_ZN29CustomContainerButton_keyBaseC1Ev+0x168>)
        handlePressedUpdated();
 80026da:	4628      	mov	r0, r5
        colorPressed = newColorPressed;
 80026dc:	e9c4 3339 	strd	r3, r3, [r4, #228]	; 0xe4
        handlePressedUpdated();
 80026e0:	f7ff fe5d 	bl	800239e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
        setXY(x, y);
 80026e4:	4632      	mov	r2, r6
 80026e6:	4631      	mov	r1, r6
 80026e8:	4628      	mov	r0, r5
 80026ea:	f7ff ff0d 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80026ee:	223c      	movs	r2, #60	; 0x3c
 80026f0:	4611      	mov	r1, r2
 80026f2:	4628      	mov	r0, r5
 80026f4:	f7ff fd75 	bl	80021e2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    flexButton_keyboard.setAction(flexButtonCallback);
 80026f8:	f504 7380 	add.w	r3, r4, #256	; 0x100
    add(flexButton_keyboard);
 80026fc:	4620      	mov	r0, r4
        action = &callback;
 80026fe:	65e3      	str	r3, [r4, #92]	; 0x5c
 8002700:	4629      	mov	r1, r5
 8002702:	f010 feb5 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002706:	4620      	mov	r0, r4
 8002708:	b004      	add	sp, #16
 800270a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800270e:	bf00      	nop
 8002710:	080296e4 	.word	0x080296e4
 8002714:	080296cc 	.word	0x080296cc
 8002718:	08002475 	.word	0x08002475
 800271c:	ff626363 	.word	0xff626363
 8002720:	0802958c 	.word	0x0802958c
 8002724:	2002bd84 	.word	0x2002bd84
 8002728:	08029478 	.word	0x08029478
 800272c:	080294ba 	.word	0x080294ba
 8002730:	080294e8 	.word	0x080294e8
 8002734:	2002bd88 	.word	0x2002bd88
 8002738:	0802952f 	.word	0x0802952f
 800273c:	2002bd90 	.word	0x2002bd90
 8002740:	08029581 	.word	0x08029581
 8002744:	ff0a0a0a 	.word	0xff0a0a0a

08002748 <_ZN27CustomContainerKeyboardBaseD1Ev>:

class CustomContainerKeyboardBase : public touchgfx::Container
{
public:
    CustomContainerKeyboardBase();
    virtual ~CustomContainerKeyboardBase() {}
 8002748:	4770      	bx	lr

0800274a <_ZN27CustomContainerKeyboardBase17ClickButtonDelPreEv>:
     * Virtual Action Handlers
     */
    virtual void ClickButtonDelPre()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 800274a:	4770      	bx	lr

0800274c <_ZN27CustomContainerKeyboardBase17ClickButtonDelAllEv>:

    virtual void ClickButtonDelAll()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 800274c:	4770      	bx	lr

0800274e <_ZN27CustomContainerKeyboardBase16ClickButtonShiftEv>:

    virtual void ClickButtonShift()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 800274e:	4770      	bx	lr

08002750 <_ZN27CustomContainerKeyboardBase24ClickButtonCloseKeyboardEv>:

    virtual void ClickButtonCloseKeyboard()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 8002750:	4770      	bx	lr

08002752 <_ZN27CustomContainerKeyboardBase19ClickButtonLanguageEv>:

    virtual void ClickButtonLanguage()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 8002752:	4770      	bx	lr

08002754 <_ZN27CustomContainerKeyboardBase16ClickButtonSpaceEv>:

    virtual void ClickButtonSpace()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 8002754:	4770      	bx	lr

08002756 <_ZN27CustomContainerKeyboardBase16ClickButtonEnterEv>:

    virtual void ClickButtonEnter()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 8002756:	4770      	bx	lr

08002758 <_ZN27CustomContainerKeyboardBase17ClickButtonABC123Ev>:

    virtual void ClickButtonABC123()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 8002758:	4770      	bx	lr

0800275a <_ZN27CustomContainerKeyboardBase27emitTriggerKeyboardCallbackEv>:
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitTriggerKeyboardCallback()
 800275a:	b570      	push	{r4, r5, r6, lr}
    {
        if (triggerKeyboardCallback && triggerKeyboardCallback->isValid())
 800275c:	f642 45e4 	movw	r5, #11492	; 0x2ce4
    virtual void emitTriggerKeyboardCallback()
 8002760:	4604      	mov	r4, r0
        if (triggerKeyboardCallback && triggerKeyboardCallback->isValid())
 8002762:	5940      	ldr	r0, [r0, r5]
 8002764:	b148      	cbz	r0, 800277a <_ZN27CustomContainerKeyboardBase27emitTriggerKeyboardCallbackEv+0x20>
 8002766:	6803      	ldr	r3, [r0, #0]
 8002768:	68db      	ldr	r3, [r3, #12]
 800276a:	4798      	blx	r3
 800276c:	b128      	cbz	r0, 800277a <_ZN27CustomContainerKeyboardBase27emitTriggerKeyboardCallbackEv+0x20>
        {
            this->triggerKeyboardCallback->execute();
 800276e:	5960      	ldr	r0, [r4, r5]
 8002770:	6803      	ldr	r3, [r0, #0]
        }
    }
 8002772:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            this->triggerKeyboardCallback->execute();
 8002776:	689b      	ldr	r3, [r3, #8]
 8002778:	4718      	bx	r3
    }
 800277a:	bd70      	pop	{r4, r5, r6, pc}

0800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>:
void CustomContainerKeyboardBase::customContainer1TriggerButton_keyCallbackHandler()
{
    //Interaction8
    //When customContainer1 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
 800277c:	6803      	ldr	r3, [r0, #0]
 800277e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002782:	4718      	bx	r3

08002784 <_ZN27CustomContainerKeyboardBase48customContainer2TriggerButton_keyCallbackHandlerEv>:
 8002784:	f7ff bffa 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002788 <_ZN27CustomContainerKeyboardBase48customContainer3TriggerButton_keyCallbackHandlerEv>:
 8002788:	f7ff bff8 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

0800278c <_ZN27CustomContainerKeyboardBase48customContainer4TriggerButton_keyCallbackHandlerEv>:
 800278c:	f7ff bff6 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002790 <_ZN27CustomContainerKeyboardBase48customContainer5TriggerButton_keyCallbackHandlerEv>:
 8002790:	f7ff bff4 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002794 <_ZN27CustomContainerKeyboardBase48customContainer6TriggerButton_keyCallbackHandlerEv>:
 8002794:	f7ff bff2 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002798 <_ZN27CustomContainerKeyboardBase48customContainer7TriggerButton_keyCallbackHandlerEv>:
 8002798:	f7ff bff0 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

0800279c <_ZN27CustomContainerKeyboardBase48customContainer8TriggerButton_keyCallbackHandlerEv>:
 800279c:	f7ff bfee 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027a0 <_ZN27CustomContainerKeyboardBase48customContainer9TriggerButton_keyCallbackHandlerEv>:
 80027a0:	f7ff bfec 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027a4 <_ZN27CustomContainerKeyboardBase49customContainer10TriggerButton_keyCallbackHandlerEv>:
 80027a4:	f7ff bfea 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027a8 <_ZN27CustomContainerKeyboardBase49customContainer11TriggerButton_keyCallbackHandlerEv>:
 80027a8:	f7ff bfe8 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027ac <_ZN27CustomContainerKeyboardBase49customContainer12TriggerButton_keyCallbackHandlerEv>:
 80027ac:	f7ff bfe6 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027b0 <_ZN27CustomContainerKeyboardBase50customContainer1_1TriggerButton_keyCallbackHandlerEv>:
 80027b0:	f7ff bfe4 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027b4 <_ZN27CustomContainerKeyboardBase50customContainer2_1TriggerButton_keyCallbackHandlerEv>:
 80027b4:	f7ff bfe2 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027b8 <_ZN27CustomContainerKeyboardBase50customContainer3_1TriggerButton_keyCallbackHandlerEv>:
 80027b8:	f7ff bfe0 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027bc <_ZN27CustomContainerKeyboardBase50customContainer4_1TriggerButton_keyCallbackHandlerEv>:
 80027bc:	f7ff bfde 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027c0 <_ZN27CustomContainerKeyboardBase50customContainer5_1TriggerButton_keyCallbackHandlerEv>:
 80027c0:	f7ff bfdc 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027c4 <_ZN27CustomContainerKeyboardBase50customContainer6_1TriggerButton_keyCallbackHandlerEv>:
 80027c4:	f7ff bfda 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027c8 <_ZN27CustomContainerKeyboardBase50customContainer7_1TriggerButton_keyCallbackHandlerEv>:
 80027c8:	f7ff bfd8 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027cc <_ZN27CustomContainerKeyboardBase50customContainer8_1TriggerButton_keyCallbackHandlerEv>:
 80027cc:	f7ff bfd6 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027d0 <_ZN27CustomContainerKeyboardBase50customContainer9_1TriggerButton_keyCallbackHandlerEv>:
 80027d0:	f7ff bfd4 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027d4 <_ZN27CustomContainerKeyboardBase51customContainer10_1TriggerButton_keyCallbackHandlerEv>:
 80027d4:	f7ff bfd2 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027d8 <_ZN27CustomContainerKeyboardBase50customContainer1_2TriggerButton_keyCallbackHandlerEv>:
 80027d8:	f7ff bfd0 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027dc <_ZN27CustomContainerKeyboardBase50customContainer2_2TriggerButton_keyCallbackHandlerEv>:
 80027dc:	f7ff bfce 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027e0 <_ZN27CustomContainerKeyboardBase50customContainer3_2TriggerButton_keyCallbackHandlerEv>:
 80027e0:	f7ff bfcc 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027e4 <_ZN27CustomContainerKeyboardBase50customContainer4_2TriggerButton_keyCallbackHandlerEv>:
 80027e4:	f7ff bfca 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027e8 <_ZN27CustomContainerKeyboardBase50customContainer5_2TriggerButton_keyCallbackHandlerEv>:
 80027e8:	f7ff bfc8 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027ec <_ZN27CustomContainerKeyboardBase50customContainer6_2TriggerButton_keyCallbackHandlerEv>:
 80027ec:	f7ff bfc6 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027f0 <_ZN27CustomContainerKeyboardBase50customContainer7_2TriggerButton_keyCallbackHandlerEv>:
 80027f0:	f7ff bfc4 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027f4 <_ZN27CustomContainerKeyboardBase50customContainer8_2TriggerButton_keyCallbackHandlerEv>:
 80027f4:	f7ff bfc2 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027f8 <_ZN27CustomContainerKeyboardBase50customContainer9_2TriggerButton_keyCallbackHandlerEv>:
 80027f8:	f7ff bfc0 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

080027fc <_ZN27CustomContainerKeyboardBase51customContainer10_2TriggerButton_keyCallbackHandlerEv>:
 80027fc:	f7ff bfbe 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002800 <_ZN27CustomContainerKeyboardBase51customContainer11_1TriggerButton_keyCallbackHandlerEv>:
 8002800:	f7ff bfbc 	b.w	800277c <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002804 <_ZN27CustomContainerKeyboardBase7action1Ev>:
}

void CustomContainerKeyboardBase::action1()
{

}
 8002804:	4770      	bx	lr

08002806 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    TextArea text;           ///< The text
    colortype colorReleased; ///< The color released
    colortype colorPressed;  ///< The color pressed

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 8002806:	b508      	push	{r3, lr}
    {
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
 8002808:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800280c:	b133      	cbz	r3, 800281c <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x16>
 800280e:	f8d0 30b8 	ldr.w	r3, [r0, #184]	; 0xb8
        this->color = color;
 8002812:	f8c0 30a8 	str.w	r3, [r0, #168]	; 0xa8
        T::handlePressedUpdated();
 8002816:	f7ff fdb5 	bl	8002384 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 800281a:	bd08      	pop	{r3, pc}
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
 800281c:	f8d0 30b4 	ldr.w	r3, [r0, #180]	; 0xb4
 8002820:	e7f7      	b.n	8002812 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0xc>

08002822 <_ZN8touchgfx8CallbackI27CustomContainerKeyboardBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002822:	4770      	bx	lr

08002824 <_ZN8touchgfx8CallbackI27CustomContainerKeyboardBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002824:	4770      	bx	lr

08002826 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
class TextButtonStyle : public T
 8002826:	4770      	bx	lr

08002828 <_ZN8touchgfx8CallbackI27CustomContainerKeyboardBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002828:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 800282a:	68c2      	ldr	r2, [r0, #12]
 800282c:	6841      	ldr	r1, [r0, #4]
 800282e:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002830:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8002832:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002836:	07d2      	lsls	r2, r2, #31
 8002838:	bf48      	it	mi
 800283a:	590a      	ldrmi	r2, [r1, r4]
 800283c:	689b      	ldr	r3, [r3, #8]
    }
 800283e:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8002842:	bf48      	it	mi
 8002844:	58d3      	ldrmi	r3, [r2, r3]
 8002846:	4718      	bx	r3

08002848 <_ZNK8touchgfx8CallbackI27CustomContainerKeyboardBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 8002848:	6843      	ldr	r3, [r0, #4]
 800284a:	b12b      	cbz	r3, 8002858 <_ZNK8touchgfx8CallbackI27CustomContainerKeyboardBasevvvE7isValidEv+0x10>
 800284c:	6883      	ldr	r3, [r0, #8]
 800284e:	b92b      	cbnz	r3, 800285c <_ZNK8touchgfx8CallbackI27CustomContainerKeyboardBasevvvE7isValidEv+0x14>
 8002850:	68c0      	ldr	r0, [r0, #12]
 8002852:	f000 0001 	and.w	r0, r0, #1
 8002856:	4770      	bx	lr
 8002858:	4618      	mov	r0, r3
 800285a:	4770      	bx	lr
 800285c:	2001      	movs	r0, #1
    }
 800285e:	4770      	bx	lr

08002860 <_ZN8touchgfx8CallbackI27CustomContainerKeyboardBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002860:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002862:	68c2      	ldr	r2, [r0, #12]
 8002864:	6844      	ldr	r4, [r0, #4]
 8002866:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002868:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 800286a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800286e:	07d2      	lsls	r2, r2, #31
 8002870:	bf48      	it	mi
 8002872:	5962      	ldrmi	r2, [r4, r5]
 8002874:	689b      	ldr	r3, [r3, #8]
    }
 8002876:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002878:	bf48      	it	mi
 800287a:	58d3      	ldrmi	r3, [r2, r3]
 800287c:	4718      	bx	r3

0800287e <_ZNK8touchgfx8CallbackI27CustomContainerKeyboardBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 800287e:	6843      	ldr	r3, [r0, #4]
 8002880:	b12b      	cbz	r3, 800288e <_ZNK8touchgfx8CallbackI27CustomContainerKeyboardBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8002882:	6883      	ldr	r3, [r0, #8]
 8002884:	b92b      	cbnz	r3, 8002892 <_ZNK8touchgfx8CallbackI27CustomContainerKeyboardBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002886:	68c0      	ldr	r0, [r0, #12]
 8002888:	f000 0001 	and.w	r0, r0, #1
 800288c:	4770      	bx	lr
 800288e:	4618      	mov	r0, r3
 8002890:	4770      	bx	lr
 8002892:	2001      	movs	r0, #1
    }
 8002894:	4770      	bx	lr

08002896 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        text.setAlpha(T::getAlpha());
 8002896:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
        alpha = newAlpha;
 800289a:	f880 30ae 	strb.w	r3, [r0, #174]	; 0xae
        alpha = newAlpha;
 800289e:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
        T::handleAlphaUpdated();
    }
 80028a2:	4770      	bx	lr

080028a4 <_ZN8touchgfx8CallbackI27CustomContainerKeyboardBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80028a4:	b510      	push	{r4, lr}
 80028a6:	2110      	movs	r1, #16
 80028a8:	4604      	mov	r4, r0
 80028aa:	f024 ff3b 	bl	8027724 <_ZdlPvj>
 80028ae:	4620      	mov	r0, r4
 80028b0:	bd10      	pop	{r4, pc}

080028b2 <_ZN8touchgfx8CallbackI27CustomContainerKeyboardBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80028b2:	b510      	push	{r4, lr}
 80028b4:	2110      	movs	r1, #16
 80028b6:	4604      	mov	r4, r0
 80028b8:	f024 ff34 	bl	8027724 <_ZdlPvj>
 80028bc:	4620      	mov	r0, r4
 80028be:	bd10      	pop	{r4, pc}

080028c0 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class TextButtonStyle : public T
 80028c0:	b510      	push	{r4, lr}
 80028c2:	21bc      	movs	r1, #188	; 0xbc
 80028c4:	4604      	mov	r4, r0
 80028c6:	f024 ff2d 	bl	8027724 <_ZdlPvj>
 80028ca:	4620      	mov	r0, r4
 80028cc:	bd10      	pop	{r4, pc}

080028ce <_ZN27CustomContainerKeyboardBaseD0Ev>:
    virtual ~CustomContainerKeyboardBase() {}
 80028ce:	b510      	push	{r4, lr}
 80028d0:	f642 41e8 	movw	r1, #11496	; 0x2ce8
 80028d4:	4604      	mov	r4, r0
 80028d6:	f024 ff25 	bl	8027724 <_ZdlPvj>
 80028da:	4620      	mov	r0, r4
 80028dc:	bd10      	pop	{r4, pc}

080028de <_ZN27CustomContainerKeyboardBase10initializeEv>:
{
 80028de:	b510      	push	{r4, lr}
 80028e0:	4604      	mov	r4, r0
    customContainer1.initialize();
 80028e2:	3060      	adds	r0, #96	; 0x60
 80028e4:	f006 fbba 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer2.initialize();
 80028e8:	f504 70ba 	add.w	r0, r4, #372	; 0x174
 80028ec:	f006 fbb6 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer3.initialize();
 80028f0:	f504 7022 	add.w	r0, r4, #648	; 0x288
 80028f4:	f006 fbb2 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer4.initialize();
 80028f8:	f504 7067 	add.w	r0, r4, #924	; 0x39c
 80028fc:	f006 fbae 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer5.initialize();
 8002900:	f504 6096 	add.w	r0, r4, #1200	; 0x4b0
 8002904:	f006 fbaa 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer6.initialize();
 8002908:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 800290c:	f006 fba6 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer7.initialize();
 8002910:	f504 60db 	add.w	r0, r4, #1752	; 0x6d8
 8002914:	f006 fba2 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer8.initialize();
 8002918:	f204 70ec 	addw	r0, r4, #2028	; 0x7ec
 800291c:	f006 fb9e 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer9.initialize();
 8002920:	f504 6010 	add.w	r0, r4, #2304	; 0x900
 8002924:	f006 fb9a 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer10.initialize();
 8002928:	f604 2014 	addw	r0, r4, #2580	; 0xa14
 800292c:	f006 fb96 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer1_1.initialize();
 8002930:	f604 3028 	addw	r0, r4, #2856	; 0xb28
 8002934:	f006 fb92 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer2_1.initialize();
 8002938:	f604 403c 	addw	r0, r4, #3132	; 0xc3c
 800293c:	f006 fb8e 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer3_1.initialize();
 8002940:	f504 6055 	add.w	r0, r4, #3408	; 0xd50
 8002944:	f006 fb8a 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer4_1.initialize();
 8002948:	f604 6064 	addw	r0, r4, #3684	; 0xe64
 800294c:	f006 fb86 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer5_1.initialize();
 8002950:	f604 7078 	addw	r0, r4, #3960	; 0xf78
 8002954:	f006 fb82 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer6_1.initialize();
 8002958:	f504 5084 	add.w	r0, r4, #4224	; 0x1080
 800295c:	300c      	adds	r0, #12
 800295e:	f006 fb7d 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer7_1.initialize();
 8002962:	f504 508d 	add.w	r0, r4, #4512	; 0x11a0
 8002966:	f006 fb79 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer8_1.initialize();
 800296a:	f504 5095 	add.w	r0, r4, #4768	; 0x12a0
 800296e:	3014      	adds	r0, #20
 8002970:	f006 fb74 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer9_1.initialize();
 8002974:	f504 509e 	add.w	r0, r4, #5056	; 0x13c0
 8002978:	3008      	adds	r0, #8
 800297a:	f006 fb6f 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer10_1.initialize();
 800297e:	f504 50a6 	add.w	r0, r4, #5312	; 0x14c0
 8002982:	301c      	adds	r0, #28
 8002984:	f006 fb6a 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer1_2.initialize();
 8002988:	f504 50af 	add.w	r0, r4, #5600	; 0x15e0
 800298c:	3010      	adds	r0, #16
 800298e:	f006 fb65 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer2_2.initialize();
 8002992:	f504 50b8 	add.w	r0, r4, #5888	; 0x1700
 8002996:	3004      	adds	r0, #4
 8002998:	f006 fb60 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer3_2.initialize();
 800299c:	f504 50c0 	add.w	r0, r4, #6144	; 0x1800
 80029a0:	3018      	adds	r0, #24
 80029a2:	f006 fb5b 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer4_2.initialize();
 80029a6:	f504 50c9 	add.w	r0, r4, #6432	; 0x1920
 80029aa:	300c      	adds	r0, #12
 80029ac:	f006 fb56 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer5_2.initialize();
 80029b0:	f504 50d2 	add.w	r0, r4, #6720	; 0x1a40
 80029b4:	f006 fb52 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer6_2.initialize();
 80029b8:	f504 50da 	add.w	r0, r4, #6976	; 0x1b40
 80029bc:	3014      	adds	r0, #20
 80029be:	f006 fb4d 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer7_2.initialize();
 80029c2:	f504 50e3 	add.w	r0, r4, #7264	; 0x1c60
 80029c6:	3008      	adds	r0, #8
 80029c8:	f006 fb48 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer8_2.initialize();
 80029cc:	f504 50eb 	add.w	r0, r4, #7520	; 0x1d60
 80029d0:	301c      	adds	r0, #28
 80029d2:	f006 fb43 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer9_2.initialize();
 80029d6:	f504 50f4 	add.w	r0, r4, #7808	; 0x1e80
 80029da:	3010      	adds	r0, #16
 80029dc:	f006 fb3e 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer10_2.initialize();
 80029e0:	f504 50fd 	add.w	r0, r4, #8096	; 0x1fa0
 80029e4:	3004      	adds	r0, #4
 80029e6:	f006 fb39 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer11_1.initialize();
 80029ea:	f504 500c 	add.w	r0, r4, #8960	; 0x2300
 80029ee:	3034      	adds	r0, #52	; 0x34
 80029f0:	f006 fb34 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer11.initialize();
 80029f4:	f504 5011 	add.w	r0, r4, #9280	; 0x2440
 80029f8:	3008      	adds	r0, #8
 80029fa:	f006 fb2f 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainer12.initialize();
 80029fe:	f504 5015 	add.w	r0, r4, #9536	; 0x2540
 8002a02:	301c      	adds	r0, #28
}
 8002a04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    customContainer12.initialize();
 8002a08:	f006 bb28 	b.w	800905c <_ZN25CustomContainerButton_key10initializeEv>

08002a0c <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void CustomContainerKeyboardBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton_enter)
 8002a0c:	f500 5303 	add.w	r3, r0, #8384	; 0x20c0
 8002a10:	3338      	adds	r3, #56	; 0x38
 8002a12:	4299      	cmp	r1, r3
{
 8002a14:	b510      	push	{r4, lr}
 8002a16:	4604      	mov	r4, r0
    if (&src == &flexButton_enter)
 8002a18:	d10a      	bne.n	8002a30 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x24>
    {
        //ClickButtonEnter
        //When flexButton_enter clicked call virtual function
        //Call ClickButtonEnter
        ClickButtonEnter();
 8002a1a:	6803      	ldr	r3, [r0, #0]
 8002a1c:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8002a20:	4798      	blx	r3

        //Interaction42
        //When flexButton_enter clicked emit triggerKeyboard callback
        //Emit callback
        emitTriggerKeyboardCallback();
 8002a22:	6823      	ldr	r3, [r4, #0]
 8002a24:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8002a28:	4620      	mov	r0, r4
        //Interaction43
        //When flexButton_ABC_123 clicked call virtual function
        //Call ClickButtonABC123
        ClickButtonABC123();
    }
}
 8002a2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        ClickButtonABC123();
 8002a2e:	4718      	bx	r3
    else if (&src == &flexButton_space)
 8002a30:	f500 5306 	add.w	r3, r0, #8576	; 0x2180
 8002a34:	3334      	adds	r3, #52	; 0x34
 8002a36:	4299      	cmp	r1, r3
 8002a38:	d103      	bne.n	8002a42 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x36>
        ClickButtonSpace();
 8002a3a:	6803      	ldr	r3, [r0, #0]
 8002a3c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8002a40:	e7f3      	b.n	8002a2a <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
    else if (&src == &flexButton_language)
 8002a42:	f500 5309 	add.w	r3, r0, #8768	; 0x2240
 8002a46:	3334      	adds	r3, #52	; 0x34
 8002a48:	4299      	cmp	r1, r3
 8002a4a:	d103      	bne.n	8002a54 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x48>
        ClickButtonLanguage();
 8002a4c:	6803      	ldr	r3, [r0, #0]
 8002a4e:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8002a52:	e7ea      	b.n	8002a2a <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
    else if (&src == &flexButton_close)
 8002a54:	f500 5319 	add.w	r3, r0, #9792	; 0x2640
 8002a58:	3330      	adds	r3, #48	; 0x30
 8002a5a:	4299      	cmp	r1, r3
 8002a5c:	d103      	bne.n	8002a66 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x5a>
        ClickButtonCloseKeyboard();
 8002a5e:	6803      	ldr	r3, [r0, #0]
 8002a60:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8002a64:	e7e1      	b.n	8002a2a <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
    else if (&src == &flexButton_shift)
 8002a66:	f500 531c 	add.w	r3, r0, #9984	; 0x2700
 8002a6a:	3330      	adds	r3, #48	; 0x30
 8002a6c:	4299      	cmp	r1, r3
 8002a6e:	d103      	bne.n	8002a78 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x6c>
        ClickButtonShift();
 8002a70:	6803      	ldr	r3, [r0, #0]
 8002a72:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8002a76:	e7d8      	b.n	8002a2a <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
    else if (&src == &flexButton_del_all)
 8002a78:	f500 531f 	add.w	r3, r0, #10176	; 0x27c0
 8002a7c:	332c      	adds	r3, #44	; 0x2c
 8002a7e:	4299      	cmp	r1, r3
 8002a80:	d103      	bne.n	8002a8a <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x7e>
        ClickButtonDelAll();
 8002a82:	6803      	ldr	r3, [r0, #0]
 8002a84:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8002a88:	e7cf      	b.n	8002a2a <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
    else if (&src == &flexButton_del_pre)
 8002a8a:	f500 5322 	add.w	r3, r0, #10368	; 0x2880
 8002a8e:	3328      	adds	r3, #40	; 0x28
 8002a90:	4299      	cmp	r1, r3
 8002a92:	d103      	bne.n	8002a9c <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x90>
        ClickButtonDelPre();
 8002a94:	6803      	ldr	r3, [r0, #0]
 8002a96:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002a9a:	e7c6      	b.n	8002a2a <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
    else if (&src == &flexButton_ABC_123)
 8002a9c:	f500 5325 	add.w	r3, r0, #10560	; 0x2940
 8002aa0:	3324      	adds	r3, #36	; 0x24
 8002aa2:	4299      	cmp	r1, r3
 8002aa4:	d103      	bne.n	8002aae <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa2>
        ClickButtonABC123();
 8002aa6:	6803      	ldr	r3, [r0, #0]
 8002aa8:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8002aac:	e7bd      	b.n	8002a2a <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
}
 8002aae:	bd10      	pop	{r4, pc}

08002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002ab0:	b538      	push	{r3, r4, r5, lr}
 8002ab2:	4604      	mov	r4, r0
 8002ab4:	461d      	mov	r5, r3
        setXY(x, y);
 8002ab6:	f7ff fd27 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8002aba:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8002abe:	4629      	mov	r1, r5
 8002ac0:	4620      	mov	r0, r4
 8002ac2:	f7ff fb8e 	bl	80021e2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 8002ac6:	bd38      	pop	{r3, r4, r5, pc}

08002ac8 <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8002ac8:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8002aca:	2226      	movs	r2, #38	; 0x26
    Box()
 8002acc:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8002ace:	2100      	movs	r1, #0
 8002ad0:	f025 f804 	bl	8027adc <memset>
 8002ad4:	4620      	mov	r0, r4
 8002ad6:	f7ff fd05 	bl	80024e4 <_ZN8touchgfx8DrawableC1Ev>
 8002ada:	4b04      	ldr	r3, [pc, #16]	; (8002aec <_ZN8touchgfx3BoxC1Ev+0x24>)
 8002adc:	6023      	str	r3, [r4, #0]
 8002ade:	23ff      	movs	r3, #255	; 0xff
 8002ae0:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 8002ae4:	2300      	movs	r3, #0
 8002ae6:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 8002ae8:	4620      	mov	r0, r4
 8002aea:	bd10      	pop	{r4, pc}
 8002aec:	0802c23c 	.word	0x0802c23c

08002af0 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002af0:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8002af2:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002af4:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8002af6:	2100      	movs	r1, #0
 8002af8:	f024 fff0 	bl	8027adc <memset>
 8002afc:	4620      	mov	r0, r4
 8002afe:	f7ff fcf1 	bl	80024e4 <_ZN8touchgfx8DrawableC1Ev>
 8002b02:	4b07      	ldr	r3, [pc, #28]	; (8002b20 <_ZN8touchgfx8TextAreaC1Ev+0x30>)
 8002b04:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002b06:	4b07      	ldr	r3, [pc, #28]	; (8002b24 <_ZN8touchgfx8TextAreaC1Ev+0x34>)
 8002b08:	62a3      	str	r3, [r4, #40]	; 0x28
 8002b0a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002b0e:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002b10:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002b14:	2300      	movs	r3, #0
 8002b16:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 8002b1a:	8723      	strh	r3, [r4, #56]	; 0x38
    }
 8002b1c:	4620      	mov	r0, r4
 8002b1e:	bd10      	pop	{r4, pc}
 8002b20:	0802c194 	.word	0x0802c194
 8002b24:	0802958c 	.word	0x0802958c

08002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 8002b28:	b410      	push	{r4}
        borderUp = borderColorReleased;
 8002b2a:	6703      	str	r3, [r0, #112]	; 0x70
        borderDown = borderColorPressed;
 8002b2c:	9b01      	ldr	r3, [sp, #4]
 8002b2e:	6743      	str	r3, [r0, #116]	; 0x74
        handlePressedUpdated();
 8002b30:	6803      	ldr	r3, [r0, #0]
    }
 8002b32:	f85d 4b04 	ldr.w	r4, [sp], #4
        handlePressedUpdated();
 8002b36:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
        down = colorPressed;
 8002b3a:	e9c0 121a 	strd	r1, r2, [r0, #104]	; 0x68
        handlePressedUpdated();
 8002b3e:	4718      	bx	r3

08002b40 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>:
    void setText(TypedText t)
 8002b40:	b513      	push	{r0, r1, r4, lr}
 8002b42:	4604      	mov	r4, r0
        text.setTypedText(t);
 8002b44:	3078      	adds	r0, #120	; 0x78
 8002b46:	9001      	str	r0, [sp, #4]
 8002b48:	f012 fa29 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        setWidthHeight(drawable.getWidth(), drawable.getHeight());
 8002b4c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8002b50:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8002b54:	9801      	ldr	r0, [sp, #4]
 8002b56:	f7ff fb44 	bl	80021e2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 8002b5a:	b002      	add	sp, #8
 8002b5c:	bd10      	pop	{r4, pc}

08002b5e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>:
    void setWildcardText(TypedText t)
 8002b5e:	b513      	push	{r0, r1, r4, lr}
 8002b60:	4604      	mov	r4, r0
        wildcardText.setTypedText(t);
 8002b62:	3078      	adds	r0, #120	; 0x78
 8002b64:	9001      	str	r0, [sp, #4]
 8002b66:	f012 fa1a 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        wildcardText.setWidthHeight(T::getWidth(), T::getHeight());
 8002b6a:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8002b6e:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8002b72:	9801      	ldr	r0, [sp, #4]
 8002b74:	f7ff fb35 	bl	80021e2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 8002b78:	b002      	add	sp, #8
 8002b7a:	bd10      	pop	{r4, pc}

08002b7c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
    BoxWithBorderButtonStyle()
 8002b7c:	b570      	push	{r4, r5, r6, lr}
 8002b7e:	4604      	mov	r4, r0
 8002b80:	f7ff fcb0 	bl	80024e4 <_ZN8touchgfx8DrawableC1Ev>
        : pressed(false), alpha(255), action(0)
 8002b84:	f44f 437f 	mov.w	r3, #65280	; 0xff00
        : T(), up(), down()
 8002b88:	4626      	mov	r6, r4
 8002b8a:	85a3      	strh	r3, [r4, #44]	; 0x2c
        touchable = touch;
 8002b8c:	2301      	movs	r3, #1
 8002b8e:	2500      	movs	r5, #0
 8002b90:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 8002b94:	4b0d      	ldr	r3, [pc, #52]	; (8002bcc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x50>)
 8002b96:	62a5      	str	r5, [r4, #40]	; 0x28
 8002b98:	6325      	str	r5, [r4, #48]	; 0x30
 8002b9a:	f846 3b34 	str.w	r3, [r6], #52
        : Box(), borderColor(0), borderSize(0)
 8002b9e:	4630      	mov	r0, r6
 8002ba0:	f7ff ff92 	bl	8002ac8 <_ZN8touchgfx3BoxC1Ev>
 8002ba4:	4b0a      	ldr	r3, [pc, #40]	; (8002bd0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x54>)
 8002ba6:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 8002ba8:	462a      	mov	r2, r5
 8002baa:	4629      	mov	r1, r5
 8002bac:	4630      	mov	r0, r6
        : color(0)
 8002bae:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8002bb2:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 8002bb6:	6625      	str	r5, [r4, #96]	; 0x60
 8002bb8:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8002bbc:	f7ff fca4 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8002bc0:	4620      	mov	r0, r4
 8002bc2:	4631      	mov	r1, r6
 8002bc4:	f010 fc54 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8002bc8:	4620      	mov	r0, r4
 8002bca:	bd70      	pop	{r4, r5, r6, pc}
 8002bcc:	0802959c 	.word	0x0802959c
 8002bd0:	0802c4c8 	.word	0x0802c4c8

08002bd4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
    TextButtonStyle()
 8002bd4:	b538      	push	{r3, r4, r5, lr}
 8002bd6:	4604      	mov	r4, r0
        : T()
 8002bd8:	4625      	mov	r5, r4
 8002bda:	f7ff ffcf 	bl	8002b7c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002bde:	4b07      	ldr	r3, [pc, #28]	; (8002bfc <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x28>)
 8002be0:	f845 3b78 	str.w	r3, [r5], #120
 8002be4:	4628      	mov	r0, r5
 8002be6:	f7ff ff83 	bl	8002af0 <_ZN8touchgfx8TextAreaC1Ev>
        : color(0)
 8002bea:	2300      	movs	r3, #0
        T::add(text);
 8002bec:	4620      	mov	r0, r4
 8002bee:	e9c4 332d 	strd	r3, r3, [r4, #180]	; 0xb4
 8002bf2:	4629      	mov	r1, r5
 8002bf4:	f010 fc3c 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8002bf8:	4620      	mov	r0, r4
 8002bfa:	bd38      	pop	{r3, r4, r5, pc}
 8002bfc:	08029780 	.word	0x08029780

08002c00 <_ZN27CustomContainerKeyboardBaseC1Ev>:
CustomContainerKeyboardBase::CustomContainerKeyboardBase() :
 8002c00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002c04:	ed2d 8b10 	vpush	{d8-d15}
 8002c08:	4604      	mov	r4, r0
 8002c0a:	b0bd      	sub	sp, #244	; 0xf4
 8002c0c:	f7ff fc6a 	bl	80024e4 <_ZN8touchgfx8DrawableC1Ev>
    triggerKeyboardCallback(0)
 8002c10:	4622      	mov	r2, r4
 8002c12:	2500      	movs	r5, #0
 8002c14:	4bd4      	ldr	r3, [pc, #848]	; (8002f68 <_ZN27CustomContainerKeyboardBaseC1Ev+0x368>)
 8002c16:	62a5      	str	r5, [r4, #40]	; 0x28
 8002c18:	f842 3b2c 	str.w	r3, [r2], #44
 8002c1c:	4610      	mov	r0, r2
 8002c1e:	ee0a 2a90 	vmov	s21, r2
 8002c22:	f7ff ff51 	bl	8002ac8 <_ZN8touchgfx3BoxC1Ev>
 8002c26:	4bd1      	ldr	r3, [pc, #836]	; (8002f6c <_ZN27CustomContainerKeyboardBaseC1Ev+0x36c>)
 8002c28:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002c2a:	f104 0360 	add.w	r3, r4, #96	; 0x60
 8002c2e:	4618      	mov	r0, r3
        : color(col)
 8002c30:	65a5      	str	r5, [r4, #88]	; 0x58
 8002c32:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8002c36:	930b      	str	r3, [sp, #44]	; 0x2c
 8002c38:	f006 fa1a 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002c3c:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8002c40:	4618      	mov	r0, r3
 8002c42:	930c      	str	r3, [sp, #48]	; 0x30
 8002c44:	f006 fa14 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002c48:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8002c4c:	4618      	mov	r0, r3
 8002c4e:	930d      	str	r3, [sp, #52]	; 0x34
 8002c50:	f006 fa0e 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002c54:	f504 7367 	add.w	r3, r4, #924	; 0x39c
 8002c58:	4618      	mov	r0, r3
 8002c5a:	930e      	str	r3, [sp, #56]	; 0x38
 8002c5c:	f006 fa08 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002c60:	f504 6396 	add.w	r3, r4, #1200	; 0x4b0
 8002c64:	4618      	mov	r0, r3
 8002c66:	930f      	str	r3, [sp, #60]	; 0x3c
 8002c68:	f006 fa02 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002c6c:	f204 53c4 	addw	r3, r4, #1476	; 0x5c4
 8002c70:	4618      	mov	r0, r3
 8002c72:	9310      	str	r3, [sp, #64]	; 0x40
 8002c74:	f006 f9fc 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002c78:	f504 63db 	add.w	r3, r4, #1752	; 0x6d8
 8002c7c:	4618      	mov	r0, r3
 8002c7e:	9311      	str	r3, [sp, #68]	; 0x44
 8002c80:	f006 f9f6 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002c84:	f204 73ec 	addw	r3, r4, #2028	; 0x7ec
 8002c88:	4618      	mov	r0, r3
 8002c8a:	9312      	str	r3, [sp, #72]	; 0x48
 8002c8c:	f006 f9f0 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002c90:	f504 6310 	add.w	r3, r4, #2304	; 0x900
 8002c94:	4618      	mov	r0, r3
 8002c96:	9313      	str	r3, [sp, #76]	; 0x4c
 8002c98:	f006 f9ea 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002c9c:	f604 2314 	addw	r3, r4, #2580	; 0xa14
 8002ca0:	4618      	mov	r0, r3
 8002ca2:	9314      	str	r3, [sp, #80]	; 0x50
 8002ca4:	f006 f9e4 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002ca8:	f604 3328 	addw	r3, r4, #2856	; 0xb28
 8002cac:	4618      	mov	r0, r3
 8002cae:	9315      	str	r3, [sp, #84]	; 0x54
 8002cb0:	f006 f9de 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002cb4:	f604 433c 	addw	r3, r4, #3132	; 0xc3c
 8002cb8:	4618      	mov	r0, r3
 8002cba:	9316      	str	r3, [sp, #88]	; 0x58
 8002cbc:	f006 f9d8 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002cc0:	f504 6355 	add.w	r3, r4, #3408	; 0xd50
 8002cc4:	4618      	mov	r0, r3
 8002cc6:	9317      	str	r3, [sp, #92]	; 0x5c
 8002cc8:	f006 f9d2 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002ccc:	f604 6364 	addw	r3, r4, #3684	; 0xe64
 8002cd0:	4618      	mov	r0, r3
 8002cd2:	9318      	str	r3, [sp, #96]	; 0x60
 8002cd4:	f006 f9cc 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002cd8:	f604 7378 	addw	r3, r4, #3960	; 0xf78
 8002cdc:	4618      	mov	r0, r3
 8002cde:	9319      	str	r3, [sp, #100]	; 0x64
 8002ce0:	f006 f9c6 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002ce4:	f504 5384 	add.w	r3, r4, #4224	; 0x1080
 8002ce8:	330c      	adds	r3, #12
 8002cea:	4618      	mov	r0, r3
 8002cec:	ee0b 3a10 	vmov	s22, r3
 8002cf0:	f006 f9be 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002cf4:	f504 538d 	add.w	r3, r4, #4512	; 0x11a0
 8002cf8:	4618      	mov	r0, r3
 8002cfa:	931a      	str	r3, [sp, #104]	; 0x68
 8002cfc:	f006 f9b8 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002d00:	f504 5395 	add.w	r3, r4, #4768	; 0x12a0
 8002d04:	3314      	adds	r3, #20
 8002d06:	4618      	mov	r0, r3
 8002d08:	ee0b 3a90 	vmov	s23, r3
 8002d0c:	f006 f9b0 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002d10:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8002d14:	3308      	adds	r3, #8
 8002d16:	4618      	mov	r0, r3
 8002d18:	ee0c 3a10 	vmov	s24, r3
 8002d1c:	f006 f9a8 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002d20:	f504 53a6 	add.w	r3, r4, #5312	; 0x14c0
 8002d24:	331c      	adds	r3, #28
 8002d26:	4618      	mov	r0, r3
 8002d28:	ee0c 3a90 	vmov	s25, r3
 8002d2c:	f006 f9a0 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002d30:	f504 53af 	add.w	r3, r4, #5600	; 0x15e0
 8002d34:	3310      	adds	r3, #16
 8002d36:	4618      	mov	r0, r3
 8002d38:	ee0d 3a10 	vmov	s26, r3
 8002d3c:	f006 f998 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002d40:	f504 53b8 	add.w	r3, r4, #5888	; 0x1700
 8002d44:	3304      	adds	r3, #4
 8002d46:	4618      	mov	r0, r3
 8002d48:	ee0d 3a90 	vmov	s27, r3
 8002d4c:	f006 f990 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002d50:	f504 53c0 	add.w	r3, r4, #6144	; 0x1800
 8002d54:	3318      	adds	r3, #24
 8002d56:	4618      	mov	r0, r3
 8002d58:	ee0e 3a10 	vmov	s28, r3
 8002d5c:	f006 f988 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002d60:	f504 53c9 	add.w	r3, r4, #6432	; 0x1920
 8002d64:	330c      	adds	r3, #12
 8002d66:	4618      	mov	r0, r3
 8002d68:	ee0e 3a90 	vmov	s29, r3
 8002d6c:	f006 f980 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002d70:	f504 53d2 	add.w	r3, r4, #6720	; 0x1a40
 8002d74:	4618      	mov	r0, r3
 8002d76:	931b      	str	r3, [sp, #108]	; 0x6c
 8002d78:	f006 f97a 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002d7c:	f504 53da 	add.w	r3, r4, #6976	; 0x1b40
 8002d80:	3314      	adds	r3, #20
 8002d82:	4618      	mov	r0, r3
 8002d84:	ee0f 3a10 	vmov	s30, r3
 8002d88:	f006 f972 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002d8c:	f504 53e3 	add.w	r3, r4, #7264	; 0x1c60
 8002d90:	3308      	adds	r3, #8
 8002d92:	4618      	mov	r0, r3
 8002d94:	ee0f 3a90 	vmov	s31, r3
 8002d98:	f006 f96a 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002d9c:	f504 53eb 	add.w	r3, r4, #7520	; 0x1d60
 8002da0:	331c      	adds	r3, #28
 8002da2:	4618      	mov	r0, r3
 8002da4:	9304      	str	r3, [sp, #16]
 8002da6:	f006 f963 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002daa:	f504 53f4 	add.w	r3, r4, #7808	; 0x1e80
 8002dae:	3310      	adds	r3, #16
 8002db0:	4618      	mov	r0, r3
 8002db2:	9305      	str	r3, [sp, #20]
 8002db4:	f006 f95c 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002db8:	f504 53fd 	add.w	r3, r4, #8096	; 0x1fa0
 8002dbc:	3304      	adds	r3, #4
 8002dbe:	f242 06b8 	movw	r6, #8376	; 0x20b8
 8002dc2:	4618      	mov	r0, r3
 8002dc4:	9306      	str	r3, [sp, #24]
 8002dc6:	f006 f953 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002dca:	19a3      	adds	r3, r4, r6
 8002dcc:	ee0a 3a10 	vmov	s20, r3
        : TextArea(), wildcard(0)
 8002dd0:	4618      	mov	r0, r3
 8002dd2:	f7ff fe8d 	bl	8002af0 <_ZN8touchgfx8TextAreaC1Ev>
 8002dd6:	4b66      	ldr	r3, [pc, #408]	; (8002f70 <_ZN27CustomContainerKeyboardBaseC1Ev+0x370>)
 8002dd8:	51a3      	str	r3, [r4, r6]
 8002dda:	ee1a 3a10 	vmov	r3, s20
 8002dde:	63dd      	str	r5, [r3, #60]	; 0x3c
 8002de0:	f504 5303 	add.w	r3, r4, #8384	; 0x20c0
 8002de4:	3338      	adds	r3, #56	; 0x38
 8002de6:	4618      	mov	r0, r3
 8002de8:	ee08 3a10 	vmov	s16, r3
 8002dec:	f7ff fef2 	bl	8002bd4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002df0:	f504 5306 	add.w	r3, r4, #8576	; 0x2180
 8002df4:	3334      	adds	r3, #52	; 0x34
 8002df6:	4618      	mov	r0, r3
 8002df8:	ee08 3a90 	vmov	s17, r3
 8002dfc:	f7ff fb92 	bl	8002524 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002e00:	f504 5309 	add.w	r3, r4, #8768	; 0x2240
 8002e04:	3334      	adds	r3, #52	; 0x34
 8002e06:	4618      	mov	r0, r3
 8002e08:	ee09 3a10 	vmov	s18, r3
 8002e0c:	f7ff fb8a 	bl	8002524 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002e10:	f504 530c 	add.w	r3, r4, #8960	; 0x2300
 8002e14:	3334      	adds	r3, #52	; 0x34
 8002e16:	4618      	mov	r0, r3
 8002e18:	9307      	str	r3, [sp, #28]
 8002e1a:	f006 f929 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002e1e:	f504 5311 	add.w	r3, r4, #9280	; 0x2440
 8002e22:	3308      	adds	r3, #8
 8002e24:	4618      	mov	r0, r3
 8002e26:	9308      	str	r3, [sp, #32]
 8002e28:	f006 f922 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002e2c:	f504 5315 	add.w	r3, r4, #9536	; 0x2540
 8002e30:	331c      	adds	r3, #28
 8002e32:	4618      	mov	r0, r3
 8002e34:	9309      	str	r3, [sp, #36]	; 0x24
 8002e36:	f006 f91b 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8002e3a:	f504 5319 	add.w	r3, r4, #9792	; 0x2640
 8002e3e:	3330      	adds	r3, #48	; 0x30
 8002e40:	f504 5a1c 	add.w	sl, r4, #9984	; 0x2700
 8002e44:	4618      	mov	r0, r3
 8002e46:	f10a 0a30 	add.w	sl, sl, #48	; 0x30
 8002e4a:	f504 591f 	add.w	r9, r4, #10176	; 0x27c0
 8002e4e:	ee09 3a90 	vmov	s19, r3
 8002e52:	f109 092c 	add.w	r9, r9, #44	; 0x2c
 8002e56:	f7ff fb65 	bl	8002524 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002e5a:	f504 5822 	add.w	r8, r4, #10368	; 0x2880
 8002e5e:	4650      	mov	r0, sl
 8002e60:	f7ff feb8 	bl	8002bd4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002e64:	f108 0828 	add.w	r8, r8, #40	; 0x28
 8002e68:	4648      	mov	r0, r9
 8002e6a:	f504 5b25 	add.w	fp, r4, #10560	; 0x2940
 8002e6e:	f7ff feb1 	bl	8002bd4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002e72:	f10b 0b24 	add.w	fp, fp, #36	; 0x24
 8002e76:	4640      	mov	r0, r8
 8002e78:	f7ff feac 	bl	8002bd4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002e7c:	4658      	mov	r0, fp
 8002e7e:	f7ff fb51 	bl	8002524 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8002e82:	f642 23c4 	movw	r3, #10948	; 0x2ac4
 8002e86:	18e2      	adds	r2, r4, r3
 8002e88:	9203      	str	r2, [sp, #12]
 8002e8a:	4a3a      	ldr	r2, [pc, #232]	; (8002f74 <_ZN27CustomContainerKeyboardBaseC1Ev+0x374>)
 8002e8c:	50e2      	str	r2, [r4, r3]
 8002e8e:	9b03      	ldr	r3, [sp, #12]
 8002e90:	4a39      	ldr	r2, [pc, #228]	; (8002f78 <_ZN27CustomContainerKeyboardBaseC1Ev+0x378>)
 8002e92:	605c      	str	r4, [r3, #4]
 8002e94:	f642 23cc 	movw	r3, #10956	; 0x2acc
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8002e98:	4938      	ldr	r1, [pc, #224]	; (8002f7c <_ZN27CustomContainerKeyboardBaseC1Ev+0x37c>)
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8002e9a:	50e2      	str	r2, [r4, r3]
 8002e9c:	f642 23d0 	movw	r3, #10960	; 0x2ad0
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8002ea0:	f642 22d4 	movw	r2, #10964	; 0x2ad4
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8002ea4:	50e5      	str	r5, [r4, r3]
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8002ea6:	18a3      	adds	r3, r4, r2
 8002ea8:	930a      	str	r3, [sp, #40]	; 0x28
 8002eaa:	4b35      	ldr	r3, [pc, #212]	; (8002f80 <_ZN27CustomContainerKeyboardBaseC1Ev+0x380>)
 8002eac:	50a3      	str	r3, [r4, r2]
 8002eae:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002eb0:	6054      	str	r4, [r2, #4]
 8002eb2:	f642 22dc 	movw	r2, #10972	; 0x2adc
    boxWithBorder1.setPosition(-5, 0, 800, 300);
 8002eb6:	ee1a 0a90 	vmov	r0, s21
 8002eba:	50a1      	str	r1, [r4, r2]
 8002ebc:	f642 22e0 	movw	r2, #10976	; 0x2ae0
 8002ec0:	50a5      	str	r5, [r4, r2]
 8002ec2:	f642 22e4 	movw	r2, #10980	; 0x2ae4
 8002ec6:	18a1      	adds	r1, r4, r2
 8002ec8:	50a3      	str	r3, [r4, r2]
 8002eca:	f642 22ec 	movw	r2, #10988	; 0x2aec
 8002ece:	604c      	str	r4, [r1, #4]
 8002ed0:	911c      	str	r1, [sp, #112]	; 0x70
 8002ed2:	492c      	ldr	r1, [pc, #176]	; (8002f84 <_ZN27CustomContainerKeyboardBaseC1Ev+0x384>)
 8002ed4:	50a1      	str	r1, [r4, r2]
 8002ed6:	f642 22f0 	movw	r2, #10992	; 0x2af0
 8002eda:	50a5      	str	r5, [r4, r2]
 8002edc:	f642 22f4 	movw	r2, #10996	; 0x2af4
 8002ee0:	18a1      	adds	r1, r4, r2
 8002ee2:	50a3      	str	r3, [r4, r2]
 8002ee4:	f642 22fc 	movw	r2, #11004	; 0x2afc
 8002ee8:	604c      	str	r4, [r1, #4]
 8002eea:	911d      	str	r1, [sp, #116]	; 0x74
 8002eec:	4926      	ldr	r1, [pc, #152]	; (8002f88 <_ZN27CustomContainerKeyboardBaseC1Ev+0x388>)
 8002eee:	50a1      	str	r1, [r4, r2]
 8002ef0:	f504 522c 	add.w	r2, r4, #11008	; 0x2b00
 8002ef4:	6015      	str	r5, [r2, #0]
 8002ef6:	f642 3204 	movw	r2, #11012	; 0x2b04
 8002efa:	18a1      	adds	r1, r4, r2
 8002efc:	50a3      	str	r3, [r4, r2]
 8002efe:	f642 320c 	movw	r2, #11020	; 0x2b0c
 8002f02:	604c      	str	r4, [r1, #4]
 8002f04:	911e      	str	r1, [sp, #120]	; 0x78
 8002f06:	4921      	ldr	r1, [pc, #132]	; (8002f8c <_ZN27CustomContainerKeyboardBaseC1Ev+0x38c>)
 8002f08:	50a1      	str	r1, [r4, r2]
 8002f0a:	f642 3210 	movw	r2, #11024	; 0x2b10
 8002f0e:	50a5      	str	r5, [r4, r2]
 8002f10:	f642 3214 	movw	r2, #11028	; 0x2b14
 8002f14:	18a1      	adds	r1, r4, r2
 8002f16:	50a3      	str	r3, [r4, r2]
 8002f18:	f642 321c 	movw	r2, #11036	; 0x2b1c
 8002f1c:	604c      	str	r4, [r1, #4]
 8002f1e:	911f      	str	r1, [sp, #124]	; 0x7c
 8002f20:	491b      	ldr	r1, [pc, #108]	; (8002f90 <_ZN27CustomContainerKeyboardBaseC1Ev+0x390>)
 8002f22:	50a1      	str	r1, [r4, r2]
 8002f24:	f642 3220 	movw	r2, #11040	; 0x2b20
 8002f28:	50a5      	str	r5, [r4, r2]
 8002f2a:	f642 3224 	movw	r2, #11044	; 0x2b24
 8002f2e:	18a1      	adds	r1, r4, r2
 8002f30:	9120      	str	r1, [sp, #128]	; 0x80
 8002f32:	50a3      	str	r3, [r4, r2]
 8002f34:	f642 322c 	movw	r2, #11052	; 0x2b2c
 8002f38:	604c      	str	r4, [r1, #4]
 8002f3a:	4916      	ldr	r1, [pc, #88]	; (8002f94 <_ZN27CustomContainerKeyboardBaseC1Ev+0x394>)
 8002f3c:	50a1      	str	r1, [r4, r2]
 8002f3e:	f642 3230 	movw	r2, #11056	; 0x2b30
 8002f42:	50a5      	str	r5, [r4, r2]
 8002f44:	f642 3234 	movw	r2, #11060	; 0x2b34
 8002f48:	18a1      	adds	r1, r4, r2
 8002f4a:	50a3      	str	r3, [r4, r2]
 8002f4c:	f642 323c 	movw	r2, #11068	; 0x2b3c
 8002f50:	604c      	str	r4, [r1, #4]
 8002f52:	9121      	str	r1, [sp, #132]	; 0x84
 8002f54:	4910      	ldr	r1, [pc, #64]	; (8002f98 <_ZN27CustomContainerKeyboardBaseC1Ev+0x398>)
 8002f56:	50a1      	str	r1, [r4, r2]
 8002f58:	f504 522d 	add.w	r2, r4, #11072	; 0x2b40
 8002f5c:	6015      	str	r5, [r2, #0]
 8002f5e:	f642 3244 	movw	r2, #11076	; 0x2b44
 8002f62:	18a1      	adds	r1, r4, r2
 8002f64:	e01a      	b.n	8002f9c <_ZN27CustomContainerKeyboardBaseC1Ev+0x39c>
 8002f66:	bf00      	nop
 8002f68:	08029848 	.word	0x08029848
 8002f6c:	0802c4c8 	.word	0x0802c4c8
 8002f70:	0802c3a8 	.word	0x0802c3a8
 8002f74:	08029818 	.word	0x08029818
 8002f78:	08002a0d 	.word	0x08002a0d
 8002f7c:	0800277d 	.word	0x0800277d
 8002f80:	08029830 	.word	0x08029830
 8002f84:	08002785 	.word	0x08002785
 8002f88:	08002789 	.word	0x08002789
 8002f8c:	0800278d 	.word	0x0800278d
 8002f90:	08002791 	.word	0x08002791
 8002f94:	08002795 	.word	0x08002795
 8002f98:	08002799 	.word	0x08002799
 8002f9c:	50a3      	str	r3, [r4, r2]
 8002f9e:	f642 324c 	movw	r2, #11084	; 0x2b4c
 8002fa2:	604c      	str	r4, [r1, #4]
 8002fa4:	9122      	str	r1, [sp, #136]	; 0x88
 8002fa6:	49af      	ldr	r1, [pc, #700]	; (8003264 <_ZN27CustomContainerKeyboardBaseC1Ev+0x664>)
 8002fa8:	50a1      	str	r1, [r4, r2]
 8002faa:	f642 3250 	movw	r2, #11088	; 0x2b50
 8002fae:	50a5      	str	r5, [r4, r2]
 8002fb0:	f642 3254 	movw	r2, #11092	; 0x2b54
 8002fb4:	18a1      	adds	r1, r4, r2
 8002fb6:	50a3      	str	r3, [r4, r2]
 8002fb8:	f642 325c 	movw	r2, #11100	; 0x2b5c
 8002fbc:	604c      	str	r4, [r1, #4]
 8002fbe:	9123      	str	r1, [sp, #140]	; 0x8c
 8002fc0:	49a9      	ldr	r1, [pc, #676]	; (8003268 <_ZN27CustomContainerKeyboardBaseC1Ev+0x668>)
 8002fc2:	50a1      	str	r1, [r4, r2]
 8002fc4:	f642 3260 	movw	r2, #11104	; 0x2b60
 8002fc8:	50a5      	str	r5, [r4, r2]
 8002fca:	f642 3264 	movw	r2, #11108	; 0x2b64
 8002fce:	18a1      	adds	r1, r4, r2
 8002fd0:	50a3      	str	r3, [r4, r2]
 8002fd2:	f642 326c 	movw	r2, #11116	; 0x2b6c
 8002fd6:	604c      	str	r4, [r1, #4]
 8002fd8:	9124      	str	r1, [sp, #144]	; 0x90
 8002fda:	49a4      	ldr	r1, [pc, #656]	; (800326c <_ZN27CustomContainerKeyboardBaseC1Ev+0x66c>)
 8002fdc:	50a1      	str	r1, [r4, r2]
 8002fde:	f642 3270 	movw	r2, #11120	; 0x2b70
 8002fe2:	50a5      	str	r5, [r4, r2]
 8002fe4:	f642 3274 	movw	r2, #11124	; 0x2b74
 8002fe8:	18a1      	adds	r1, r4, r2
 8002fea:	50a3      	str	r3, [r4, r2]
 8002fec:	f642 327c 	movw	r2, #11132	; 0x2b7c
 8002ff0:	604c      	str	r4, [r1, #4]
 8002ff2:	9125      	str	r1, [sp, #148]	; 0x94
 8002ff4:	499e      	ldr	r1, [pc, #632]	; (8003270 <_ZN27CustomContainerKeyboardBaseC1Ev+0x670>)
 8002ff6:	50a1      	str	r1, [r4, r2]
 8002ff8:	f504 522e 	add.w	r2, r4, #11136	; 0x2b80
 8002ffc:	6015      	str	r5, [r2, #0]
 8002ffe:	f642 3284 	movw	r2, #11140	; 0x2b84
 8003002:	18a1      	adds	r1, r4, r2
 8003004:	50a3      	str	r3, [r4, r2]
 8003006:	f642 328c 	movw	r2, #11148	; 0x2b8c
 800300a:	9126      	str	r1, [sp, #152]	; 0x98
 800300c:	604c      	str	r4, [r1, #4]
 800300e:	4999      	ldr	r1, [pc, #612]	; (8003274 <_ZN27CustomContainerKeyboardBaseC1Ev+0x674>)
 8003010:	50a1      	str	r1, [r4, r2]
 8003012:	f642 3290 	movw	r2, #11152	; 0x2b90
 8003016:	50a5      	str	r5, [r4, r2]
 8003018:	f642 3294 	movw	r2, #11156	; 0x2b94
 800301c:	18a1      	adds	r1, r4, r2
 800301e:	50a3      	str	r3, [r4, r2]
 8003020:	f642 329c 	movw	r2, #11164	; 0x2b9c
 8003024:	604c      	str	r4, [r1, #4]
 8003026:	9127      	str	r1, [sp, #156]	; 0x9c
 8003028:	4993      	ldr	r1, [pc, #588]	; (8003278 <_ZN27CustomContainerKeyboardBaseC1Ev+0x678>)
 800302a:	50a1      	str	r1, [r4, r2]
 800302c:	f642 32a0 	movw	r2, #11168	; 0x2ba0
 8003030:	50a5      	str	r5, [r4, r2]
 8003032:	f642 32a4 	movw	r2, #11172	; 0x2ba4
 8003036:	18a1      	adds	r1, r4, r2
 8003038:	50a3      	str	r3, [r4, r2]
 800303a:	f642 32ac 	movw	r2, #11180	; 0x2bac
 800303e:	604c      	str	r4, [r1, #4]
 8003040:	9128      	str	r1, [sp, #160]	; 0xa0
 8003042:	498e      	ldr	r1, [pc, #568]	; (800327c <_ZN27CustomContainerKeyboardBaseC1Ev+0x67c>)
 8003044:	50a1      	str	r1, [r4, r2]
 8003046:	f642 32b0 	movw	r2, #11184	; 0x2bb0
 800304a:	50a5      	str	r5, [r4, r2]
 800304c:	f642 32b4 	movw	r2, #11188	; 0x2bb4
 8003050:	18a1      	adds	r1, r4, r2
 8003052:	50a3      	str	r3, [r4, r2]
 8003054:	f642 32bc 	movw	r2, #11196	; 0x2bbc
 8003058:	604c      	str	r4, [r1, #4]
 800305a:	9129      	str	r1, [sp, #164]	; 0xa4
 800305c:	4988      	ldr	r1, [pc, #544]	; (8003280 <_ZN27CustomContainerKeyboardBaseC1Ev+0x680>)
 800305e:	50a1      	str	r1, [r4, r2]
 8003060:	f504 522f 	add.w	r2, r4, #11200	; 0x2bc0
 8003064:	6015      	str	r5, [r2, #0]
 8003066:	f642 32c4 	movw	r2, #11204	; 0x2bc4
 800306a:	18a1      	adds	r1, r4, r2
 800306c:	50a3      	str	r3, [r4, r2]
 800306e:	f642 32cc 	movw	r2, #11212	; 0x2bcc
 8003072:	604c      	str	r4, [r1, #4]
 8003074:	912a      	str	r1, [sp, #168]	; 0xa8
 8003076:	4983      	ldr	r1, [pc, #524]	; (8003284 <_ZN27CustomContainerKeyboardBaseC1Ev+0x684>)
 8003078:	50a1      	str	r1, [r4, r2]
 800307a:	f642 32d0 	movw	r2, #11216	; 0x2bd0
 800307e:	50a5      	str	r5, [r4, r2]
 8003080:	f642 32d4 	movw	r2, #11220	; 0x2bd4
 8003084:	18a1      	adds	r1, r4, r2
 8003086:	50a3      	str	r3, [r4, r2]
 8003088:	f642 32dc 	movw	r2, #11228	; 0x2bdc
 800308c:	604c      	str	r4, [r1, #4]
 800308e:	912b      	str	r1, [sp, #172]	; 0xac
 8003090:	497d      	ldr	r1, [pc, #500]	; (8003288 <_ZN27CustomContainerKeyboardBaseC1Ev+0x688>)
 8003092:	50a1      	str	r1, [r4, r2]
 8003094:	f642 32e0 	movw	r2, #11232	; 0x2be0
 8003098:	50a5      	str	r5, [r4, r2]
 800309a:	f642 32e4 	movw	r2, #11236	; 0x2be4
 800309e:	18a1      	adds	r1, r4, r2
 80030a0:	50a3      	str	r3, [r4, r2]
 80030a2:	f642 32ec 	movw	r2, #11244	; 0x2bec
 80030a6:	604c      	str	r4, [r1, #4]
 80030a8:	912c      	str	r1, [sp, #176]	; 0xb0
 80030aa:	4978      	ldr	r1, [pc, #480]	; (800328c <_ZN27CustomContainerKeyboardBaseC1Ev+0x68c>)
 80030ac:	50a1      	str	r1, [r4, r2]
 80030ae:	f642 32f0 	movw	r2, #11248	; 0x2bf0
 80030b2:	50a5      	str	r5, [r4, r2]
 80030b4:	f642 32f4 	movw	r2, #11252	; 0x2bf4
 80030b8:	18a1      	adds	r1, r4, r2
 80030ba:	912d      	str	r1, [sp, #180]	; 0xb4
 80030bc:	50a3      	str	r3, [r4, r2]
 80030be:	f642 32fc 	movw	r2, #11260	; 0x2bfc
 80030c2:	604c      	str	r4, [r1, #4]
 80030c4:	4972      	ldr	r1, [pc, #456]	; (8003290 <_ZN27CustomContainerKeyboardBaseC1Ev+0x690>)
 80030c6:	50a1      	str	r1, [r4, r2]
 80030c8:	f504 5230 	add.w	r2, r4, #11264	; 0x2c00
 80030cc:	6015      	str	r5, [r2, #0]
 80030ce:	f642 4204 	movw	r2, #11268	; 0x2c04
 80030d2:	18a1      	adds	r1, r4, r2
 80030d4:	50a3      	str	r3, [r4, r2]
 80030d6:	f642 420c 	movw	r2, #11276	; 0x2c0c
 80030da:	604c      	str	r4, [r1, #4]
 80030dc:	912e      	str	r1, [sp, #184]	; 0xb8
 80030de:	496d      	ldr	r1, [pc, #436]	; (8003294 <_ZN27CustomContainerKeyboardBaseC1Ev+0x694>)
 80030e0:	50a1      	str	r1, [r4, r2]
 80030e2:	f642 4210 	movw	r2, #11280	; 0x2c10
 80030e6:	50a5      	str	r5, [r4, r2]
 80030e8:	f642 4214 	movw	r2, #11284	; 0x2c14
 80030ec:	18a1      	adds	r1, r4, r2
 80030ee:	50a3      	str	r3, [r4, r2]
 80030f0:	f642 421c 	movw	r2, #11292	; 0x2c1c
 80030f4:	604c      	str	r4, [r1, #4]
 80030f6:	912f      	str	r1, [sp, #188]	; 0xbc
 80030f8:	4967      	ldr	r1, [pc, #412]	; (8003298 <_ZN27CustomContainerKeyboardBaseC1Ev+0x698>)
 80030fa:	50a1      	str	r1, [r4, r2]
 80030fc:	f642 4220 	movw	r2, #11296	; 0x2c20
 8003100:	50a5      	str	r5, [r4, r2]
 8003102:	f642 4224 	movw	r2, #11300	; 0x2c24
 8003106:	18a1      	adds	r1, r4, r2
 8003108:	50a3      	str	r3, [r4, r2]
 800310a:	f642 422c 	movw	r2, #11308	; 0x2c2c
 800310e:	604c      	str	r4, [r1, #4]
 8003110:	9130      	str	r1, [sp, #192]	; 0xc0
 8003112:	4962      	ldr	r1, [pc, #392]	; (800329c <_ZN27CustomContainerKeyboardBaseC1Ev+0x69c>)
 8003114:	50a1      	str	r1, [r4, r2]
 8003116:	f642 4230 	movw	r2, #11312	; 0x2c30
 800311a:	50a5      	str	r5, [r4, r2]
 800311c:	f642 4234 	movw	r2, #11316	; 0x2c34
 8003120:	18a1      	adds	r1, r4, r2
 8003122:	50a3      	str	r3, [r4, r2]
 8003124:	f642 423c 	movw	r2, #11324	; 0x2c3c
 8003128:	604c      	str	r4, [r1, #4]
 800312a:	9131      	str	r1, [sp, #196]	; 0xc4
 800312c:	495c      	ldr	r1, [pc, #368]	; (80032a0 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6a0>)
 800312e:	50a1      	str	r1, [r4, r2]
 8003130:	f504 5231 	add.w	r2, r4, #11328	; 0x2c40
 8003134:	6015      	str	r5, [r2, #0]
 8003136:	f642 4244 	movw	r2, #11332	; 0x2c44
 800313a:	18a1      	adds	r1, r4, r2
 800313c:	50a3      	str	r3, [r4, r2]
 800313e:	f642 424c 	movw	r2, #11340	; 0x2c4c
 8003142:	604c      	str	r4, [r1, #4]
 8003144:	9132      	str	r1, [sp, #200]	; 0xc8
 8003146:	4957      	ldr	r1, [pc, #348]	; (80032a4 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6a4>)
 8003148:	50a1      	str	r1, [r4, r2]
 800314a:	f642 4250 	movw	r2, #11344	; 0x2c50
 800314e:	50a5      	str	r5, [r4, r2]
 8003150:	f642 4254 	movw	r2, #11348	; 0x2c54
 8003154:	18a1      	adds	r1, r4, r2
 8003156:	50a3      	str	r3, [r4, r2]
 8003158:	f642 425c 	movw	r2, #11356	; 0x2c5c
 800315c:	604c      	str	r4, [r1, #4]
 800315e:	9133      	str	r1, [sp, #204]	; 0xcc
 8003160:	4951      	ldr	r1, [pc, #324]	; (80032a8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6a8>)
 8003162:	50a1      	str	r1, [r4, r2]
 8003164:	f642 4260 	movw	r2, #11360	; 0x2c60
 8003168:	50a5      	str	r5, [r4, r2]
 800316a:	f642 4264 	movw	r2, #11364	; 0x2c64
 800316e:	18a1      	adds	r1, r4, r2
 8003170:	50a3      	str	r3, [r4, r2]
 8003172:	f642 426c 	movw	r2, #11372	; 0x2c6c
 8003176:	604c      	str	r4, [r1, #4]
 8003178:	9134      	str	r1, [sp, #208]	; 0xd0
 800317a:	494c      	ldr	r1, [pc, #304]	; (80032ac <_ZN27CustomContainerKeyboardBaseC1Ev+0x6ac>)
 800317c:	50a1      	str	r1, [r4, r2]
 800317e:	f642 4270 	movw	r2, #11376	; 0x2c70
 8003182:	50a5      	str	r5, [r4, r2]
 8003184:	f642 4274 	movw	r2, #11380	; 0x2c74
 8003188:	18a1      	adds	r1, r4, r2
 800318a:	50a3      	str	r3, [r4, r2]
 800318c:	f642 427c 	movw	r2, #11388	; 0x2c7c
 8003190:	604c      	str	r4, [r1, #4]
 8003192:	9135      	str	r1, [sp, #212]	; 0xd4
 8003194:	4946      	ldr	r1, [pc, #280]	; (80032b0 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6b0>)
 8003196:	50a1      	str	r1, [r4, r2]
 8003198:	f504 5232 	add.w	r2, r4, #11392	; 0x2c80
 800319c:	6015      	str	r5, [r2, #0]
 800319e:	f642 4284 	movw	r2, #11396	; 0x2c84
 80031a2:	18a1      	adds	r1, r4, r2
 80031a4:	50a3      	str	r3, [r4, r2]
 80031a6:	f642 428c 	movw	r2, #11404	; 0x2c8c
 80031aa:	604c      	str	r4, [r1, #4]
 80031ac:	9136      	str	r1, [sp, #216]	; 0xd8
 80031ae:	4941      	ldr	r1, [pc, #260]	; (80032b4 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6b4>)
 80031b0:	50a1      	str	r1, [r4, r2]
 80031b2:	f642 4290 	movw	r2, #11408	; 0x2c90
 80031b6:	50a5      	str	r5, [r4, r2]
 80031b8:	f642 4294 	movw	r2, #11412	; 0x2c94
 80031bc:	18a1      	adds	r1, r4, r2
 80031be:	50a3      	str	r3, [r4, r2]
 80031c0:	f642 429c 	movw	r2, #11420	; 0x2c9c
 80031c4:	604c      	str	r4, [r1, #4]
 80031c6:	9137      	str	r1, [sp, #220]	; 0xdc
 80031c8:	493b      	ldr	r1, [pc, #236]	; (80032b8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6b8>)
 80031ca:	50a1      	str	r1, [r4, r2]
 80031cc:	f642 42a0 	movw	r2, #11424	; 0x2ca0
 80031d0:	50a5      	str	r5, [r4, r2]
 80031d2:	f642 42a4 	movw	r2, #11428	; 0x2ca4
 80031d6:	18a1      	adds	r1, r4, r2
 80031d8:	50a3      	str	r3, [r4, r2]
 80031da:	f642 42ac 	movw	r2, #11436	; 0x2cac
 80031de:	604c      	str	r4, [r1, #4]
 80031e0:	9138      	str	r1, [sp, #224]	; 0xe0
 80031e2:	4936      	ldr	r1, [pc, #216]	; (80032bc <_ZN27CustomContainerKeyboardBaseC1Ev+0x6bc>)
 80031e4:	50a1      	str	r1, [r4, r2]
 80031e6:	f642 42b0 	movw	r2, #11440	; 0x2cb0
 80031ea:	4935      	ldr	r1, [pc, #212]	; (80032c0 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6c0>)
 80031ec:	50a5      	str	r5, [r4, r2]
 80031ee:	f642 42b4 	movw	r2, #11444	; 0x2cb4
 80031f2:	18a7      	adds	r7, r4, r2
 80031f4:	50a3      	str	r3, [r4, r2]
 80031f6:	f642 42bc 	movw	r2, #11452	; 0x2cbc
 80031fa:	607c      	str	r4, [r7, #4]
 80031fc:	50a1      	str	r1, [r4, r2]
 80031fe:	f504 5233 	add.w	r2, r4, #11456	; 0x2cc0
 8003202:	4930      	ldr	r1, [pc, #192]	; (80032c4 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6c4>)
 8003204:	6015      	str	r5, [r2, #0]
 8003206:	f642 42c4 	movw	r2, #11460	; 0x2cc4
 800320a:	18a6      	adds	r6, r4, r2
 800320c:	50a3      	str	r3, [r4, r2]
 800320e:	f642 42cc 	movw	r2, #11468	; 0x2ccc
 8003212:	6074      	str	r4, [r6, #4]
 8003214:	50a1      	str	r1, [r4, r2]
 8003216:	f642 42d0 	movw	r2, #11472	; 0x2cd0
 800321a:	50a5      	str	r5, [r4, r2]
 800321c:	f642 42d4 	movw	r2, #11476	; 0x2cd4
 8003220:	18a1      	adds	r1, r4, r2
 8003222:	50a3      	str	r3, [r4, r2]
 8003224:	f642 43dc 	movw	r3, #11484	; 0x2cdc
 8003228:	4a27      	ldr	r2, [pc, #156]	; (80032c8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6c8>)
 800322a:	604c      	str	r4, [r1, #4]
 800322c:	50e2      	str	r2, [r4, r3]
 800322e:	f642 43e0 	movw	r3, #11488	; 0x2ce0
 8003232:	9139      	str	r1, [sp, #228]	; 0xe4
 8003234:	50e5      	str	r5, [r4, r3]
    triggerKeyboardCallback(0)
 8003236:	f642 43e4 	movw	r3, #11492	; 0x2ce4
    boxWithBorder1.setPosition(-5, 0, 800, 300);
 800323a:	462a      	mov	r2, r5
    triggerKeyboardCallback(0)
 800323c:	50e5      	str	r5, [r4, r3]
        rect.width = width;
 800323e:	4b23      	ldr	r3, [pc, #140]	; (80032cc <_ZN27CustomContainerKeyboardBaseC1Ev+0x6cc>)
 8003240:	60a3      	str	r3, [r4, #8]
    boxWithBorder1.setPosition(-5, 0, 800, 300);
 8003242:	f44f 7396 	mov.w	r3, #300	; 0x12c
 8003246:	9300      	str	r3, [sp, #0]
 8003248:	f06f 0104 	mvn.w	r1, #4
 800324c:	f44f 7348 	mov.w	r3, #800	; 0x320
 8003250:	f7ff fc2e 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8003254:	4b1e      	ldr	r3, [pc, #120]	; (80032d0 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6d0>)
 8003256:	6563      	str	r3, [r4, #84]	; 0x54
        borderColor = color;
 8003258:	f103 33c7 	add.w	r3, r3, #3351758791	; 0xc7c7c7c7
 800325c:	f103 5360 	add.w	r3, r3, #939524096	; 0x38000000
 8003260:	65a3      	str	r3, [r4, #88]	; 0x58
 8003262:	e037      	b.n	80032d4 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6d4>
 8003264:	0800279d 	.word	0x0800279d
 8003268:	080027a1 	.word	0x080027a1
 800326c:	080027a5 	.word	0x080027a5
 8003270:	080027a9 	.word	0x080027a9
 8003274:	080027ad 	.word	0x080027ad
 8003278:	080027b1 	.word	0x080027b1
 800327c:	080027b5 	.word	0x080027b5
 8003280:	080027b9 	.word	0x080027b9
 8003284:	080027bd 	.word	0x080027bd
 8003288:	080027c1 	.word	0x080027c1
 800328c:	080027c5 	.word	0x080027c5
 8003290:	080027c9 	.word	0x080027c9
 8003294:	080027cd 	.word	0x080027cd
 8003298:	080027d1 	.word	0x080027d1
 800329c:	080027d5 	.word	0x080027d5
 80032a0:	080027d9 	.word	0x080027d9
 80032a4:	080027dd 	.word	0x080027dd
 80032a8:	080027e1 	.word	0x080027e1
 80032ac:	080027e5 	.word	0x080027e5
 80032b0:	080027e9 	.word	0x080027e9
 80032b4:	080027ed 	.word	0x080027ed
 80032b8:	080027f1 	.word	0x080027f1
 80032bc:	080027f5 	.word	0x080027f5
 80032c0:	080027f9 	.word	0x080027f9
 80032c4:	080027fd 	.word	0x080027fd
 80032c8:	08002801 	.word	0x08002801
 80032cc:	012c0320 	.word	0x012c0320
 80032d0:	ff9a9b9c 	.word	0xff9a9b9c
        borderSize = size;
 80032d4:	f04f 0306 	mov.w	r3, #6
    customContainer1.setXY(35, 51);
 80032d8:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80032da:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80032de:	2233      	movs	r2, #51	; 0x33
 80032e0:	2123      	movs	r1, #35	; 0x23
 80032e2:	f7ff f911 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
        this->triggerButton_keyCallback = &callback;
 80032e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    customContainer2.setXY(96, 51);
 80032e8:	980c      	ldr	r0, [sp, #48]	; 0x30
 80032ea:	f8c4 3170 	str.w	r3, [r4, #368]	; 0x170
 80032ee:	2233      	movs	r2, #51	; 0x33
 80032f0:	2160      	movs	r1, #96	; 0x60
 80032f2:	f7ff f909 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 80032f6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
    customContainer3.setXY(157, 51);
 80032f8:	980d      	ldr	r0, [sp, #52]	; 0x34
 80032fa:	f8c4 3284 	str.w	r3, [r4, #644]	; 0x284
 80032fe:	2233      	movs	r2, #51	; 0x33
 8003300:	219d      	movs	r1, #157	; 0x9d
 8003302:	f7ff f901 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 8003306:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    customContainer4.setXY(218, 51);
 8003308:	980e      	ldr	r0, [sp, #56]	; 0x38
 800330a:	f8c4 3398 	str.w	r3, [r4, #920]	; 0x398
 800330e:	2233      	movs	r2, #51	; 0x33
 8003310:	21da      	movs	r1, #218	; 0xda
 8003312:	f7ff f8f9 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 8003316:	9b1e      	ldr	r3, [sp, #120]	; 0x78
    customContainer5.setXY(279, 51);
 8003318:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800331a:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 800331e:	2233      	movs	r2, #51	; 0x33
 8003320:	f240 1117 	movw	r1, #279	; 0x117
 8003324:	f7ff f8f0 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 8003328:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    customContainer6.setXY(340, 51);
 800332a:	9810      	ldr	r0, [sp, #64]	; 0x40
 800332c:	f8c4 35c0 	str.w	r3, [r4, #1472]	; 0x5c0
 8003330:	2233      	movs	r2, #51	; 0x33
 8003332:	f44f 71aa 	mov.w	r1, #340	; 0x154
 8003336:	f7ff f8e7 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 800333a:	9b20      	ldr	r3, [sp, #128]	; 0x80
    customContainer7.setXY(401, 51);
 800333c:	9811      	ldr	r0, [sp, #68]	; 0x44
 800333e:	f8c4 36d4 	str.w	r3, [r4, #1748]	; 0x6d4
 8003342:	2233      	movs	r2, #51	; 0x33
 8003344:	f240 1191 	movw	r1, #401	; 0x191
 8003348:	f7ff f8de 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 800334c:	9b21      	ldr	r3, [sp, #132]	; 0x84
    customContainer8.setXY(462, 51);
 800334e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8003350:	f8c4 37e8 	str.w	r3, [r4, #2024]	; 0x7e8
 8003354:	2233      	movs	r2, #51	; 0x33
 8003356:	f44f 71e7 	mov.w	r1, #462	; 0x1ce
 800335a:	f7ff f8d5 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 800335e:	9b22      	ldr	r3, [sp, #136]	; 0x88
    customContainer9.setXY(523, 51);
 8003360:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8003362:	f8c4 38fc 	str.w	r3, [r4, #2300]	; 0x8fc
 8003366:	2233      	movs	r2, #51	; 0x33
 8003368:	f240 210b 	movw	r1, #523	; 0x20b
 800336c:	f7ff f8cc 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 8003370:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    customContainer10.setXY(584, 51);
 8003372:	9814      	ldr	r0, [sp, #80]	; 0x50
 8003374:	f8c4 3a10 	str.w	r3, [r4, #2576]	; 0xa10
 8003378:	2233      	movs	r2, #51	; 0x33
 800337a:	f44f 7112 	mov.w	r1, #584	; 0x248
 800337e:	f7ff f8c3 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 8003382:	9b24      	ldr	r3, [sp, #144]	; 0x90
    customContainer1_1.setXY(35, 112);
 8003384:	9815      	ldr	r0, [sp, #84]	; 0x54
 8003386:	f8c4 3b24 	str.w	r3, [r4, #2852]	; 0xb24
 800338a:	2270      	movs	r2, #112	; 0x70
 800338c:	2123      	movs	r1, #35	; 0x23
 800338e:	f7ff f8bb 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 8003392:	9b27      	ldr	r3, [sp, #156]	; 0x9c
    customContainer2_1.setXY(96, 112);
 8003394:	9816      	ldr	r0, [sp, #88]	; 0x58
 8003396:	f8c4 3c38 	str.w	r3, [r4, #3128]	; 0xc38
 800339a:	2270      	movs	r2, #112	; 0x70
 800339c:	2160      	movs	r1, #96	; 0x60
 800339e:	f7ff f8b3 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 80033a2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
    customContainer3_1.setXY(157, 112);
 80033a4:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80033a6:	f8c4 3d4c 	str.w	r3, [r4, #3404]	; 0xd4c
 80033aa:	2270      	movs	r2, #112	; 0x70
 80033ac:	219d      	movs	r1, #157	; 0x9d
 80033ae:	f7ff f8ab 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 80033b2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    customContainer4_1.setXY(218, 112);
 80033b4:	9818      	ldr	r0, [sp, #96]	; 0x60
 80033b6:	f8c4 3e60 	str.w	r3, [r4, #3680]	; 0xe60
 80033ba:	2270      	movs	r2, #112	; 0x70
 80033bc:	21da      	movs	r1, #218	; 0xda
 80033be:	f7ff f8a3 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 80033c2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
    customContainer5_1.setXY(279, 112);
 80033c4:	9819      	ldr	r0, [sp, #100]	; 0x64
 80033c6:	f8c4 3f74 	str.w	r3, [r4, #3956]	; 0xf74
 80033ca:	2270      	movs	r2, #112	; 0x70
 80033cc:	f240 1117 	movw	r1, #279	; 0x117
 80033d0:	f7ff f89a 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 80033d4:	f241 0388 	movw	r3, #4232	; 0x1088
 80033d8:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80033da:	50e2      	str	r2, [r4, r3]
    customContainer6_1.setXY(340, 112);
 80033dc:	ee1b 0a10 	vmov	r0, s22
 80033e0:	2270      	movs	r2, #112	; 0x70
 80033e2:	f44f 71aa 	mov.w	r1, #340	; 0x154
 80033e6:	f7ff f88f 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 80033ea:	f241 139c 	movw	r3, #4508	; 0x119c
 80033ee:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80033f0:	50e2      	str	r2, [r4, r3]
    customContainer7_1.setXY(401, 112);
 80033f2:	981a      	ldr	r0, [sp, #104]	; 0x68
 80033f4:	2270      	movs	r2, #112	; 0x70
 80033f6:	f240 1191 	movw	r1, #401	; 0x191
 80033fa:	f7ff f885 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 80033fe:	f241 23b0 	movw	r3, #4784	; 0x12b0
 8003402:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8003404:	50e2      	str	r2, [r4, r3]
    customContainer8_1.setXY(462, 112);
 8003406:	ee1b 0a90 	vmov	r0, s23
 800340a:	2270      	movs	r2, #112	; 0x70
 800340c:	f44f 71e7 	mov.w	r1, #462	; 0x1ce
 8003410:	f7ff f87a 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 8003414:	f241 33c4 	movw	r3, #5060	; 0x13c4
 8003418:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 800341a:	50e2      	str	r2, [r4, r3]
    customContainer9_1.setXY(523, 112);
 800341c:	ee1c 0a10 	vmov	r0, s24
 8003420:	2270      	movs	r2, #112	; 0x70
 8003422:	f240 210b 	movw	r1, #523	; 0x20b
 8003426:	f7ff f86f 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 800342a:	f241 43d8 	movw	r3, #5336	; 0x14d8
 800342e:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8003430:	50e2      	str	r2, [r4, r3]
    customContainer10_1.setXY(584, 112);
 8003432:	ee1c 0a90 	vmov	r0, s25
 8003436:	2270      	movs	r2, #112	; 0x70
 8003438:	f44f 7112 	mov.w	r1, #584	; 0x248
 800343c:	f7ff f864 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 8003440:	f241 53ec 	movw	r3, #5612	; 0x15ec
 8003444:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8003446:	50e2      	str	r2, [r4, r3]
    customContainer1_2.setXY(96, 173);
 8003448:	ee1d 0a10 	vmov	r0, s26
 800344c:	22ad      	movs	r2, #173	; 0xad
 800344e:	2160      	movs	r1, #96	; 0x60
 8003450:	f7ff f85a 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 8003454:	f504 53b8 	add.w	r3, r4, #5888	; 0x1700
 8003458:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 800345a:	601a      	str	r2, [r3, #0]
    customContainer2_2.setXY(157, 173);
 800345c:	ee1d 0a90 	vmov	r0, s27
 8003460:	22ad      	movs	r2, #173	; 0xad
 8003462:	219d      	movs	r1, #157	; 0x9d
 8003464:	f7ff f850 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 8003468:	f641 0314 	movw	r3, #6164	; 0x1814
 800346c:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 800346e:	50e2      	str	r2, [r4, r3]
    customContainer3_2.setXY(218, 173);
 8003470:	ee1e 0a10 	vmov	r0, s28
 8003474:	22ad      	movs	r2, #173	; 0xad
 8003476:	21da      	movs	r1, #218	; 0xda
 8003478:	f7ff f846 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 800347c:	f641 1328 	movw	r3, #6440	; 0x1928
 8003480:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8003482:	50e2      	str	r2, [r4, r3]
    customContainer4_2.setXY(279, 173);
 8003484:	ee1e 0a90 	vmov	r0, s29
 8003488:	22ad      	movs	r2, #173	; 0xad
 800348a:	f240 1117 	movw	r1, #279	; 0x117
 800348e:	f7ff f83b 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 8003492:	f641 233c 	movw	r3, #6716	; 0x1a3c
 8003496:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 8003498:	50e2      	str	r2, [r4, r3]
    customContainer5_2.setXY(340, 173);
 800349a:	981b      	ldr	r0, [sp, #108]	; 0x6c
 800349c:	22ad      	movs	r2, #173	; 0xad
 800349e:	f44f 71aa 	mov.w	r1, #340	; 0x154
 80034a2:	f7ff f831 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 80034a6:	f641 3350 	movw	r3, #6992	; 0x1b50
 80034aa:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 80034ac:	50e2      	str	r2, [r4, r3]
    customContainer6_2.setXY(401, 173);
 80034ae:	ee1f 0a10 	vmov	r0, s30
 80034b2:	22ad      	movs	r2, #173	; 0xad
 80034b4:	f240 1191 	movw	r1, #401	; 0x191
 80034b8:	f7ff f826 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 80034bc:	f641 4364 	movw	r3, #7268	; 0x1c64
 80034c0:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 80034c2:	50e2      	str	r2, [r4, r3]
    customContainer7_2.setXY(462, 173);
 80034c4:	ee1f 0a90 	vmov	r0, s31
 80034c8:	22ad      	movs	r2, #173	; 0xad
 80034ca:	f44f 71e7 	mov.w	r1, #462	; 0x1ce
 80034ce:	f7ff f81b 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 80034d2:	f641 5378 	movw	r3, #7544	; 0x1d78
 80034d6:	9a37      	ldr	r2, [sp, #220]	; 0xdc
 80034d8:	50e2      	str	r2, [r4, r3]
    customContainer8_2.setXY(523, 173);
 80034da:	9804      	ldr	r0, [sp, #16]
 80034dc:	22ad      	movs	r2, #173	; 0xad
 80034de:	f240 210b 	movw	r1, #523	; 0x20b
 80034e2:	f7ff f811 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 80034e6:	f641 638c 	movw	r3, #7820	; 0x1e8c
 80034ea:	9a38      	ldr	r2, [sp, #224]	; 0xe0
 80034ec:	50e2      	str	r2, [r4, r3]
    customContainer9_2.setXY(584, 173);
 80034ee:	9805      	ldr	r0, [sp, #20]
 80034f0:	22ad      	movs	r2, #173	; 0xad
 80034f2:	f44f 7112 	mov.w	r1, #584	; 0x248
 80034f6:	f7ff f807 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 80034fa:	f504 53fd 	add.w	r3, r4, #8096	; 0x1fa0
    customContainer10_2.setXY(645, 173);
 80034fe:	9806      	ldr	r0, [sp, #24]
 8003500:	601f      	str	r7, [r3, #0]
 8003502:	22ad      	movs	r2, #173	; 0xad
 8003504:	f240 2185 	movw	r1, #645	; 0x285
 8003508:	f7fe fffe 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 800350c:	f242 03b4 	movw	r3, #8372	; 0x20b4
    textArea1.setPosition(35, 21, 720, 30);
 8003510:	2215      	movs	r2, #21
 8003512:	50e6      	str	r6, [r4, r3]
 8003514:	231e      	movs	r3, #30
 8003516:	9300      	str	r3, [sp, #0]
 8003518:	ee1a 0a10 	vmov	r0, s20
 800351c:	f44f 7334 	mov.w	r3, #720	; 0x2d0
 8003520:	2123      	movs	r1, #35	; 0x23
 8003522:	f7ff fac5 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8003526:	f242 03e8 	movw	r3, #8424	; 0x20e8
 800352a:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 800352e:	50e2      	str	r2, [r4, r3]
     *
     * @see getLinespacing
     */
    FORCE_INLINE_FUNCTION void setLinespacing(int16_t space)
    {
        linespace = space;
 8003530:	ee1a 3a10 	vmov	r3, s20
 8003534:	869d      	strh	r5, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003536:	4b0a      	ldr	r3, [pc, #40]	; (8003560 <_ZN27CustomContainerKeyboardBaseC1Ev+0x960>)
 8003538:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T_RESOURCEID2).getText());
 800353a:	f504 5628 	add.w	r6, r4, #10752	; 0x2a00
 800353e:	3624      	adds	r6, #36	; 0x24
 8003540:	b92b      	cbnz	r3, 800354e <_ZN27CustomContainerKeyboardBaseC1Ev+0x94e>
 8003542:	4b08      	ldr	r3, [pc, #32]	; (8003564 <_ZN27CustomContainerKeyboardBaseC1Ev+0x964>)
 8003544:	4a08      	ldr	r2, [pc, #32]	; (8003568 <_ZN27CustomContainerKeyboardBaseC1Ev+0x968>)
 8003546:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8003548:	4808      	ldr	r0, [pc, #32]	; (800356c <_ZN27CustomContainerKeyboardBaseC1Ev+0x96c>)
 800354a:	f024 f919 	bl	8027780 <__assert_func>
 800354e:	4b08      	ldr	r3, [pc, #32]	; (8003570 <_ZN27CustomContainerKeyboardBaseC1Ev+0x970>)
 8003550:	881b      	ldrh	r3, [r3, #0]
 8003552:	2b02      	cmp	r3, #2
 8003554:	d810      	bhi.n	8003578 <_ZN27CustomContainerKeyboardBaseC1Ev+0x978>
 8003556:	4b07      	ldr	r3, [pc, #28]	; (8003574 <_ZN27CustomContainerKeyboardBaseC1Ev+0x974>)
 8003558:	4a03      	ldr	r2, [pc, #12]	; (8003568 <_ZN27CustomContainerKeyboardBaseC1Ev+0x968>)
 800355a:	21af      	movs	r1, #175	; 0xaf
 800355c:	e7f4      	b.n	8003548 <_ZN27CustomContainerKeyboardBaseC1Ev+0x948>
 800355e:	bf00      	nop
 8003560:	2002bd84 	.word	0x2002bd84
 8003564:	08029478 	.word	0x08029478
 8003568:	080294ba 	.word	0x080294ba
 800356c:	080294e8 	.word	0x080294e8
 8003570:	2002bd88 	.word	0x2002bd88
 8003574:	0802952f 	.word	0x0802952f
        return texts->getText(typedTextId);
 8003578:	4bce      	ldr	r3, [pc, #824]	; (80038b4 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcb4>)
 800357a:	2102      	movs	r1, #2
 800357c:	6818      	ldr	r0, [r3, #0]
 800357e:	f005 fb43 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8003582:	4acd      	ldr	r2, [pc, #820]	; (80038b8 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcb8>)
 8003584:	4603      	mov	r3, r0
 8003586:	2128      	movs	r1, #40	; 0x28
 8003588:	4630      	mov	r0, r6
 800358a:	f017 fd9f 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wildcard = value;
 800358e:	f242 03f4 	movw	r3, #8436	; 0x20f4
        borderBox.setPosition(x, y, width, height);
 8003592:	ee18 7a10 	vmov	r7, s16
 8003596:	50e6      	str	r6, [r4, r3]
    textArea1.setTypedText(touchgfx::TypedText(T_RESOURCEID3));
 8003598:	ee1a 0a10 	vmov	r0, s20
        : typedTextId(id)
 800359c:	4ec7      	ldr	r6, [pc, #796]	; (80038bc <_ZN27CustomContainerKeyboardBaseC1Ev+0xcbc>)
 800359e:	963a      	str	r6, [sp, #232]	; 0xe8
 80035a0:	2303      	movs	r3, #3
 80035a2:	a93a      	add	r1, sp, #232	; 0xe8
 80035a4:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 80035a8:	f011 fcf9 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80035ac:	2279      	movs	r2, #121	; 0x79
 80035ae:	f107 0034 	add.w	r0, r7, #52	; 0x34
 80035b2:	9200      	str	r2, [sp, #0]
 80035b4:	233c      	movs	r3, #60	; 0x3c
 80035b6:	462a      	mov	r2, r5
 80035b8:	4629      	mov	r1, r5
 80035ba:	f7ff fa79 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80035be:	f242 135c 	movw	r3, #8540	; 0x215c
 80035c2:	f04f 0201 	mov.w	r2, #1
 80035c6:	52e2      	strh	r2, [r4, r3]
    flexButton_enter.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80035c8:	4bbd      	ldr	r3, [pc, #756]	; (80038c0 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc0>)
 80035ca:	9300      	str	r3, [sp, #0]
 80035cc:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 80035d0:	4abc      	ldr	r2, [pc, #752]	; (80038c4 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc4>)
 80035d2:	49bd      	ldr	r1, [pc, #756]	; (80038c8 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc8>)
 80035d4:	ee18 0a10 	vmov	r0, s16
 80035d8:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 80035dc:	f7ff faa4 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 80035e0:	2309      	movs	r3, #9
    flexButton_enter.setText(TypedText(T___SINGLEUSE_CLAL));
 80035e2:	ee18 0a10 	vmov	r0, s16
 80035e6:	a93a      	add	r1, sp, #232	; 0xe8
 80035e8:	963a      	str	r6, [sp, #232]	; 0xe8
 80035ea:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 80035ee:	f7ff faa7 	bl	8002b40 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 80035f2:	2179      	movs	r1, #121	; 0x79
 80035f4:	2234      	movs	r2, #52	; 0x34
 80035f6:	f107 0078 	add.w	r0, r7, #120	; 0x78
 80035fa:	9100      	str	r1, [sp, #0]
 80035fc:	233c      	movs	r3, #60	; 0x3c
 80035fe:	4629      	mov	r1, r5
 8003600:	f7ff fa56 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8003604:	f242 13ac 	movw	r3, #8620	; 0x21ac
 8003608:	4fb0      	ldr	r7, [pc, #704]	; (80038cc <_ZN27CustomContainerKeyboardBaseC1Ev+0xccc>)
 800360a:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 800360c:	f242 13b0 	movw	r3, #8624	; 0x21b0
        handlePressedUpdated();
 8003610:	ee18 0a10 	vmov	r0, s16
        colorPressed = newColorPressed;
 8003614:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 8003616:	f7ff f8f6 	bl	8002806 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_enter.setPosition(706, 173, 60, 121);
 800361a:	2179      	movs	r1, #121	; 0x79
 800361c:	ee18 0a10 	vmov	r0, s16
 8003620:	9100      	str	r1, [sp, #0]
 8003622:	233c      	movs	r3, #60	; 0x3c
 8003624:	22ad      	movs	r2, #173	; 0xad
 8003626:	f240 21c2 	movw	r1, #706	; 0x2c2
 800362a:	f7ff fa41 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        action = &callback;
 800362e:	f242 1328 	movw	r3, #8488	; 0x2128
 8003632:	ee18 0a90 	vmov	r0, s17
 8003636:	263c      	movs	r6, #60	; 0x3c
 8003638:	9903      	ldr	r1, [sp, #12]
 800363a:	50e1      	str	r1, [r4, r3]
 800363c:	462a      	mov	r2, r5
 800363e:	f44f 73d5 	mov.w	r3, #426	; 0x1aa
 8003642:	4629      	mov	r1, r5
 8003644:	3034      	adds	r0, #52	; 0x34
 8003646:	9600      	str	r6, [sp, #0]
 8003648:	f7ff fa32 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_space.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800364c:	4a9c      	ldr	r2, [pc, #624]	; (80038c0 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc0>)
 800364e:	9200      	str	r2, [sp, #0]
 8003650:	f242 2318 	movw	r3, #8728	; 0x2218
 8003654:	f04f 0101 	mov.w	r1, #1
 8003658:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 800365c:	52e1      	strh	r1, [r4, r3]
 800365e:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 8003662:	4b9b      	ldr	r3, [pc, #620]	; (80038d0 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcd0>)
 8003664:	4998      	ldr	r1, [pc, #608]	; (80038c8 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc8>)
 8003666:	ee18 0a90 	vmov	r0, s17
 800366a:	f7ff fa5d 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton_space.setWildcardText(TypedText(T_RESOURCEID15));
 800366e:	f10d 0ce8 	add.w	ip, sp, #232	; 0xe8
 8003672:	4b92      	ldr	r3, [pc, #584]	; (80038bc <_ZN27CustomContainerKeyboardBaseC1Ev+0xcbc>)
 8003674:	933a      	str	r3, [sp, #232]	; 0xe8
 8003676:	4661      	mov	r1, ip
 8003678:	230c      	movs	r3, #12
 800367a:	ee18 0a90 	vmov	r0, s17
 800367e:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8003682:	f7ff fa6c 	bl	8002b5e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
    flexButton_spaceBuffer[0] = 0;
 8003686:	f642 2374 	movw	r3, #10868	; 0x2a74
 800368a:	18e2      	adds	r2, r4, r3
 800368c:	52e5      	strh	r5, [r4, r3]
        wildcardText.setPosition(x, y, width, height);
 800368e:	ee18 0a90 	vmov	r0, s17
 8003692:	f242 2368 	movw	r3, #8808	; 0x2268
 8003696:	4629      	mov	r1, r5
 8003698:	50e2      	str	r2, [r4, r3]
 800369a:	3078      	adds	r0, #120	; 0x78
 800369c:	462a      	mov	r2, r5
 800369e:	f44f 73d5 	mov.w	r3, #426	; 0x1aa
 80036a2:	9600      	str	r6, [sp, #0]
 80036a4:	f7ff fa04 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 80036a8:	f242 236c 	movw	r3, #8812	; 0x226c
        handlePressedUpdated();
 80036ac:	ee18 0a90 	vmov	r0, s17
        colorReleased = newColorReleased;
 80036b0:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 80036b2:	f242 2370 	movw	r3, #8816	; 0x2270
 80036b6:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 80036b8:	f7fe fe71 	bl	800239e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_space.setPosition(218, 234, 426, 60);
 80036bc:	ee18 0a90 	vmov	r0, s17
 80036c0:	f44f 73d5 	mov.w	r3, #426	; 0x1aa
 80036c4:	22ea      	movs	r2, #234	; 0xea
 80036c6:	21da      	movs	r1, #218	; 0xda
 80036c8:	9600      	str	r6, [sp, #0]
 80036ca:	f7ff f9f1 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80036ce:	f242 13e4 	movw	r3, #8676	; 0x21e4
 80036d2:	ee19 0a10 	vmov	r0, s18
 80036d6:	9903      	ldr	r1, [sp, #12]
 80036d8:	50e1      	str	r1, [r4, r3]
 80036da:	462a      	mov	r2, r5
 80036dc:	4633      	mov	r3, r6
 80036de:	4629      	mov	r1, r5
 80036e0:	3034      	adds	r0, #52	; 0x34
 80036e2:	9600      	str	r6, [sp, #0]
 80036e4:	f7ff f9e4 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_language.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80036e8:	4a75      	ldr	r2, [pc, #468]	; (80038c0 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc0>)
 80036ea:	9200      	str	r2, [sp, #0]
 80036ec:	f242 23d8 	movw	r3, #8920	; 0x22d8
 80036f0:	f04f 0101 	mov.w	r1, #1
 80036f4:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 80036f8:	52e1      	strh	r1, [r4, r3]
 80036fa:	ee19 0a10 	vmov	r0, s18
 80036fe:	4b74      	ldr	r3, [pc, #464]	; (80038d0 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcd0>)
 8003700:	4971      	ldr	r1, [pc, #452]	; (80038c8 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc8>)
 8003702:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 8003706:	f7ff fa0f 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton_language.setWildcardText(TypedText(T_RESOURCEID13));
 800370a:	f10d 0ee8 	add.w	lr, sp, #232	; 0xe8
 800370e:	4b6b      	ldr	r3, [pc, #428]	; (80038bc <_ZN27CustomContainerKeyboardBaseC1Ev+0xcbc>)
 8003710:	933a      	str	r3, [sp, #232]	; 0xe8
 8003712:	4671      	mov	r1, lr
 8003714:	2304      	movs	r3, #4
 8003716:	ee19 0a10 	vmov	r0, s18
 800371a:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 800371e:	f7ff fa1e 	bl	8002b5e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003722:	496c      	ldr	r1, [pc, #432]	; (80038d4 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcd4>)
    Unicode::snprintf(flexButton_languageBuffer, FLEXBUTTON_LANGUAGE_SIZE, "%s", TypedText(T_RESOURCEID4).getText());
 8003724:	f504 5e2a 	add.w	lr, r4, #10880	; 0x2a80
 8003728:	680b      	ldr	r3, [r1, #0]
 800372a:	f10e 0e08 	add.w	lr, lr, #8
 800372e:	f8cd e028 	str.w	lr, [sp, #40]	; 0x28
 8003732:	2b00      	cmp	r3, #0
 8003734:	f43f af05 	beq.w	8003542 <_ZN27CustomContainerKeyboardBaseC1Ev+0x942>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8003738:	4867      	ldr	r0, [pc, #412]	; (80038d8 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcd8>)
 800373a:	8803      	ldrh	r3, [r0, #0]
 800373c:	2b05      	cmp	r3, #5
 800373e:	f67f af0a 	bls.w	8003556 <_ZN27CustomContainerKeyboardBaseC1Ev+0x956>
        return texts->getText(typedTextId);
 8003742:	485c      	ldr	r0, [pc, #368]	; (80038b4 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcb4>)
 8003744:	2105      	movs	r1, #5
 8003746:	6800      	ldr	r0, [r0, #0]
 8003748:	f005 fa5e 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 800374c:	4a5a      	ldr	r2, [pc, #360]	; (80038b8 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcb8>)
 800374e:	4603      	mov	r3, r0
 8003750:	210a      	movs	r1, #10
 8003752:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003754:	f017 fcba 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8003758:	f242 3328 	movw	r3, #9000	; 0x2328
        wildcardText.setPosition(x, y, width, height);
 800375c:	ee19 0a10 	vmov	r0, s18
 8003760:	990a      	ldr	r1, [sp, #40]	; 0x28
 8003762:	50e1      	str	r1, [r4, r3]
 8003764:	2214      	movs	r2, #20
 8003766:	4629      	mov	r1, r5
 8003768:	4633      	mov	r3, r6
 800376a:	3078      	adds	r0, #120	; 0x78
 800376c:	9600      	str	r6, [sp, #0]
 800376e:	f7ff f99f 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8003772:	f242 332c 	movw	r3, #9004	; 0x232c
        handlePressedUpdated();
 8003776:	ee19 0a10 	vmov	r0, s18
        colorReleased = newColorReleased;
 800377a:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 800377c:	f242 3330 	movw	r3, #9008	; 0x2330
 8003780:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 8003782:	f7fe fe0c 	bl	800239e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_language.setPosition(157, 234, 60, 60);
 8003786:	ee19 0a10 	vmov	r0, s18
 800378a:	4633      	mov	r3, r6
 800378c:	22ea      	movs	r2, #234	; 0xea
 800378e:	219d      	movs	r1, #157	; 0x9d
 8003790:	9600      	str	r6, [sp, #0]
 8003792:	f7ff f98d 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003796:	f242 23a4 	movw	r3, #8868	; 0x22a4
 800379a:	9903      	ldr	r1, [sp, #12]
 800379c:	50e1      	str	r1, [r4, r3]
    customContainer11_1.setXY(645, 112);
 800379e:	9807      	ldr	r0, [sp, #28]
 80037a0:	2270      	movs	r2, #112	; 0x70
 80037a2:	f240 2185 	movw	r1, #645	; 0x285
 80037a6:	f7fe feaf 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 80037aa:	f242 4344 	movw	r3, #9284	; 0x2444
 80037ae:	9939      	ldr	r1, [sp, #228]	; 0xe4
 80037b0:	50e1      	str	r1, [r4, r3]
    customContainer11.setXY(645, 51);
 80037b2:	9808      	ldr	r0, [sp, #32]
 80037b4:	2233      	movs	r2, #51	; 0x33
 80037b6:	f240 2185 	movw	r1, #645	; 0x285
 80037ba:	f7fe fea5 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 80037be:	f242 5358 	movw	r3, #9560	; 0x2558
 80037c2:	9925      	ldr	r1, [sp, #148]	; 0x94
 80037c4:	50e1      	str	r1, [r4, r3]
    customContainer12.setXY(706, 51);
 80037c6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80037c8:	2233      	movs	r2, #51	; 0x33
 80037ca:	f240 21c2 	movw	r1, #706	; 0x2c2
 80037ce:	f7fe fe9b 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 80037d2:	f242 636c 	movw	r3, #9836	; 0x266c
 80037d6:	ee19 0a90 	vmov	r0, s19
 80037da:	9926      	ldr	r1, [sp, #152]	; 0x98
 80037dc:	50e1      	str	r1, [r4, r3]
 80037de:	462a      	mov	r2, r5
 80037e0:	4633      	mov	r3, r6
 80037e2:	4629      	mov	r1, r5
 80037e4:	3034      	adds	r0, #52	; 0x34
 80037e6:	9600      	str	r6, [sp, #0]
 80037e8:	f7ff f962 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_close.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80037ec:	4a34      	ldr	r2, [pc, #208]	; (80038c0 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc0>)
 80037ee:	9200      	str	r2, [sp, #0]
 80037f0:	f242 63d4 	movw	r3, #9940	; 0x26d4
 80037f4:	f04f 0c01 	mov.w	ip, #1
 80037f8:	f824 c003 	strh.w	ip, [r4, r3]
 80037fc:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 8003800:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 8003804:	4930      	ldr	r1, [pc, #192]	; (80038c8 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc8>)
 8003806:	ee19 0a90 	vmov	r0, s19
 800380a:	f603 4392 	addw	r3, r3, #3218	; 0xc92
 800380e:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 8003812:	f7ff f989 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8003816:	f04f 0e06 	mov.w	lr, #6
 800381a:	f8ad e0ec 	strh.w	lr, [sp, #236]	; 0xec
    flexButton_close.setWildcardText(TypedText(T_RESOURCEID14));
 800381e:	f10d 0ee8 	add.w	lr, sp, #232	; 0xe8
 8003822:	4b26      	ldr	r3, [pc, #152]	; (80038bc <_ZN27CustomContainerKeyboardBaseC1Ev+0xcbc>)
 8003824:	933a      	str	r3, [sp, #232]	; 0xe8
 8003826:	4671      	mov	r1, lr
 8003828:	ee19 0a90 	vmov	r0, s19
 800382c:	f7ff f997 	bl	8002b5e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003830:	4928      	ldr	r1, [pc, #160]	; (80038d4 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcd4>)
    Unicode::snprintf(flexButton_closeBuffer, FLEXBUTTON_CLOSE_SIZE, "%s", TypedText(T_RESOURCEID5).getText());
 8003832:	f504 5e2a 	add.w	lr, r4, #10880	; 0x2a80
 8003836:	680b      	ldr	r3, [r1, #0]
 8003838:	f10e 0e1c 	add.w	lr, lr, #28
 800383c:	f8cd e028 	str.w	lr, [sp, #40]	; 0x28
 8003840:	2b00      	cmp	r3, #0
 8003842:	f43f ae7e 	beq.w	8003542 <_ZN27CustomContainerKeyboardBaseC1Ev+0x942>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8003846:	4824      	ldr	r0, [pc, #144]	; (80038d8 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcd8>)
 8003848:	8803      	ldrh	r3, [r0, #0]
 800384a:	2b07      	cmp	r3, #7
 800384c:	f67f ae83 	bls.w	8003556 <_ZN27CustomContainerKeyboardBaseC1Ev+0x956>
        return texts->getText(typedTextId);
 8003850:	4818      	ldr	r0, [pc, #96]	; (80038b4 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcb4>)
 8003852:	2107      	movs	r1, #7
 8003854:	6800      	ldr	r0, [r0, #0]
 8003856:	f005 f9d7 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 800385a:	4a17      	ldr	r2, [pc, #92]	; (80038b8 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcb8>)
 800385c:	4603      	mov	r3, r0
 800385e:	210a      	movs	r1, #10
 8003860:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003862:	f017 fc33 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8003866:	f242 7324 	movw	r3, #10020	; 0x2724
        wildcardText.setPosition(x, y, width, height);
 800386a:	ee19 0a90 	vmov	r0, s19
 800386e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8003870:	50e1      	str	r1, [r4, r3]
 8003872:	2214      	movs	r2, #20
 8003874:	4629      	mov	r1, r5
 8003876:	4633      	mov	r3, r6
 8003878:	3078      	adds	r0, #120	; 0x78
 800387a:	9600      	str	r6, [sp, #0]
 800387c:	f7ff f918 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8003880:	f242 7328 	movw	r3, #10024	; 0x2728
        handlePressedUpdated();
 8003884:	ee19 0a90 	vmov	r0, s19
        colorReleased = newColorReleased;
 8003888:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 800388a:	f242 732c 	movw	r3, #10028	; 0x272c
 800388e:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 8003890:	f7fe fd85 	bl	800239e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_close.setPosition(96, 234, 60, 60);
 8003894:	ee19 0a90 	vmov	r0, s19
 8003898:	4633      	mov	r3, r6
 800389a:	22ea      	movs	r2, #234	; 0xea
 800389c:	2160      	movs	r1, #96	; 0x60
 800389e:	9600      	str	r6, [sp, #0]
 80038a0:	f7ff f906 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80038a4:	f242 63a0 	movw	r3, #9888	; 0x26a0
 80038a8:	f04f 0e79 	mov.w	lr, #121	; 0x79
 80038ac:	9903      	ldr	r1, [sp, #12]
 80038ae:	50e1      	str	r1, [r4, r3]
 80038b0:	e014      	b.n	80038dc <_ZN27CustomContainerKeyboardBaseC1Ev+0xcdc>
 80038b2:	bf00      	nop
 80038b4:	2002bd90 	.word	0x2002bd90
 80038b8:	08029581 	.word	0x08029581
 80038bc:	0802958c 	.word	0x0802958c
 80038c0:	ff336699 	.word	0xff336699
 80038c4:	ff0099cc 	.word	0xff0099cc
 80038c8:	ff006699 	.word	0xff006699
 80038cc:	ff0a0a0a 	.word	0xff0a0a0a
 80038d0:	ff003366 	.word	0xff003366
 80038d4:	2002bd84 	.word	0x2002bd84
 80038d8:	2002bd88 	.word	0x2002bd88
 80038dc:	f8cd e000 	str.w	lr, [sp]
 80038e0:	462a      	mov	r2, r5
 80038e2:	4629      	mov	r1, r5
 80038e4:	4633      	mov	r3, r6
 80038e6:	f10a 0034 	add.w	r0, sl, #52	; 0x34
 80038ea:	f7ff f8e1 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_shift.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80038ee:	4ad9      	ldr	r2, [pc, #868]	; (8003c54 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1054>)
 80038f0:	9200      	str	r2, [sp, #0]
 80038f2:	f242 7394 	movw	r3, #10132	; 0x2794
 80038f6:	f04f 0c01 	mov.w	ip, #1
 80038fa:	f824 c003 	strh.w	ip, [r4, r3]
 80038fe:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 8003902:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 8003906:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 800390a:	49d3      	ldr	r1, [pc, #844]	; (8003c58 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1058>)
 800390c:	f603 33d2 	addw	r3, r3, #3026	; 0xbd2
 8003910:	4650      	mov	r0, sl
 8003912:	f7ff f909 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton_shift.setText(TypedText(T___SINGLEUSE_DBNX));
 8003916:	f10d 0ee8 	add.w	lr, sp, #232	; 0xe8
        : typedTextId(id)
 800391a:	4bd0      	ldr	r3, [pc, #832]	; (8003c5c <_ZN27CustomContainerKeyboardBaseC1Ev+0x105c>)
 800391c:	933a      	str	r3, [sp, #232]	; 0xe8
 800391e:	4671      	mov	r1, lr
 8003920:	2308      	movs	r3, #8
 8003922:	4650      	mov	r0, sl
 8003924:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8003928:	f7ff f90a 	bl	8002b40 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 800392c:	4629      	mov	r1, r5
 800392e:	2214      	movs	r2, #20
 8003930:	4633      	mov	r3, r6
 8003932:	f10a 0078 	add.w	r0, sl, #120	; 0x78
 8003936:	9600      	str	r6, [sp, #0]
 8003938:	f7ff f8ba 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 800393c:	f242 73e4 	movw	r3, #10212	; 0x27e4
        handlePressedUpdated();
 8003940:	4650      	mov	r0, sl
        colorReleased = newColorReleased;
 8003942:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 8003944:	f242 73e8 	movw	r3, #10216	; 0x27e8
 8003948:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 800394a:	f7fe ff5c 	bl	8002806 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_shift.setPosition(35, 173, 60, 60);
 800394e:	4633      	mov	r3, r6
 8003950:	22ad      	movs	r2, #173	; 0xad
 8003952:	2123      	movs	r1, #35	; 0x23
 8003954:	4650      	mov	r0, sl
 8003956:	9600      	str	r6, [sp, #0]
 8003958:	f7ff f8aa 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 800395c:	f242 7360 	movw	r3, #10080	; 0x2760
 8003960:	9903      	ldr	r1, [sp, #12]
 8003962:	50e1      	str	r1, [r4, r3]
 8003964:	462a      	mov	r2, r5
 8003966:	4629      	mov	r1, r5
 8003968:	4633      	mov	r3, r6
 800396a:	f109 0034 	add.w	r0, r9, #52	; 0x34
 800396e:	9600      	str	r6, [sp, #0]
 8003970:	f7ff f89e 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_del_all.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003974:	4ab7      	ldr	r2, [pc, #732]	; (8003c54 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1054>)
 8003976:	9200      	str	r2, [sp, #0]
 8003978:	f642 0350 	movw	r3, #10320	; 0x2850
 800397c:	f04f 0c01 	mov.w	ip, #1
 8003980:	f824 c003 	strh.w	ip, [r4, r3]
 8003984:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 8003988:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 800398c:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 8003990:	49b1      	ldr	r1, [pc, #708]	; (8003c58 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1058>)
 8003992:	4db2      	ldr	r5, [pc, #712]	; (8003c5c <_ZN27CustomContainerKeyboardBaseC1Ev+0x105c>)
 8003994:	f603 3316 	addw	r3, r3, #2838	; 0xb16
 8003998:	4648      	mov	r0, r9
 800399a:	f7ff f8c5 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton_del_all.setText(TypedText(T___SINGLEUSE_HLSL));
 800399e:	f10d 0ee8 	add.w	lr, sp, #232	; 0xe8
 80039a2:	4671      	mov	r1, lr
 80039a4:	230a      	movs	r3, #10
 80039a6:	4648      	mov	r0, r9
 80039a8:	953a      	str	r5, [sp, #232]	; 0xe8
 80039aa:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 80039ae:	f7ff f8c7 	bl	8002b40 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 80039b2:	2214      	movs	r2, #20
 80039b4:	2100      	movs	r1, #0
 80039b6:	4633      	mov	r3, r6
 80039b8:	f109 0078 	add.w	r0, r9, #120	; 0x78
 80039bc:	9600      	str	r6, [sp, #0]
 80039be:	f7ff f877 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 80039c2:	f642 03a0 	movw	r3, #10400	; 0x28a0
        handlePressedUpdated();
 80039c6:	4648      	mov	r0, r9
        colorReleased = newColorReleased;
 80039c8:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 80039ca:	f642 03a4 	movw	r3, #10404	; 0x28a4
 80039ce:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 80039d0:	f7fe ff19 	bl	8002806 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_del_all.setPosition(645, 234, 60, 60);
 80039d4:	4633      	mov	r3, r6
 80039d6:	22ea      	movs	r2, #234	; 0xea
 80039d8:	f240 2185 	movw	r1, #645	; 0x285
 80039dc:	4648      	mov	r0, r9
 80039de:	9600      	str	r6, [sp, #0]
 80039e0:	f7ff f866 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80039e4:	f642 031c 	movw	r3, #10268	; 0x281c
 80039e8:	9903      	ldr	r1, [sp, #12]
 80039ea:	50e1      	str	r1, [r4, r3]
 80039ec:	2200      	movs	r2, #0
 80039ee:	4611      	mov	r1, r2
 80039f0:	4633      	mov	r3, r6
 80039f2:	f108 0034 	add.w	r0, r8, #52	; 0x34
 80039f6:	9600      	str	r6, [sp, #0]
 80039f8:	f7ff f85a 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_del_pre.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80039fc:	4a95      	ldr	r2, [pc, #596]	; (8003c54 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1054>)
 80039fe:	9200      	str	r2, [sp, #0]
 8003a00:	f642 130c 	movw	r3, #10508	; 0x290c
 8003a04:	f04f 0c01 	mov.w	ip, #1
 8003a08:	f824 c003 	strh.w	ip, [r4, r3]
 8003a0c:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 8003a10:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 8003a14:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 8003a18:	498f      	ldr	r1, [pc, #572]	; (8003c58 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1058>)
 8003a1a:	f603 235a 	addw	r3, r3, #2650	; 0xa5a
 8003a1e:	4640      	mov	r0, r8
 8003a20:	f7ff f882 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton_del_pre.setText(TypedText(T___SINGLEUSE_K2XR));
 8003a24:	f10d 0ee8 	add.w	lr, sp, #232	; 0xe8
 8003a28:	4671      	mov	r1, lr
 8003a2a:	230b      	movs	r3, #11
 8003a2c:	4640      	mov	r0, r8
 8003a2e:	953a      	str	r5, [sp, #232]	; 0xe8
 8003a30:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8003a34:	f7ff f884 	bl	8002b40 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8003a38:	2214      	movs	r2, #20
 8003a3a:	2100      	movs	r1, #0
 8003a3c:	4633      	mov	r3, r6
 8003a3e:	f108 0078 	add.w	r0, r8, #120	; 0x78
 8003a42:	9600      	str	r6, [sp, #0]
 8003a44:	f7ff f834 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8003a48:	f642 135c 	movw	r3, #10588	; 0x295c
        handlePressedUpdated();
 8003a4c:	4640      	mov	r0, r8
        colorReleased = newColorReleased;
 8003a4e:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 8003a50:	f642 1360 	movw	r3, #10592	; 0x2960
 8003a54:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 8003a56:	f7fe fed6 	bl	8002806 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_del_pre.setPosition(706, 112, 60, 60);
 8003a5a:	4633      	mov	r3, r6
 8003a5c:	2270      	movs	r2, #112	; 0x70
 8003a5e:	f240 21c2 	movw	r1, #706	; 0x2c2
 8003a62:	4640      	mov	r0, r8
 8003a64:	9600      	str	r6, [sp, #0]
 8003a66:	f7ff f823 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003a6a:	f642 03d8 	movw	r3, #10456	; 0x28d8
 8003a6e:	9903      	ldr	r1, [sp, #12]
 8003a70:	50e1      	str	r1, [r4, r3]
 8003a72:	2200      	movs	r2, #0
 8003a74:	4611      	mov	r1, r2
 8003a76:	4633      	mov	r3, r6
 8003a78:	f10b 0034 	add.w	r0, fp, #52	; 0x34
 8003a7c:	9600      	str	r6, [sp, #0]
 8003a7e:	f7ff f817 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_ABC_123.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003a82:	4a74      	ldr	r2, [pc, #464]	; (8003c54 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1054>)
 8003a84:	9200      	str	r2, [sp, #0]
 8003a86:	f642 13c8 	movw	r3, #10696	; 0x29c8
 8003a8a:	f04f 0c01 	mov.w	ip, #1
 8003a8e:	f824 c003 	strh.w	ip, [r4, r3]
 8003a92:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 8003a96:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 8003a9a:	496f      	ldr	r1, [pc, #444]	; (8003c58 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1058>)
 8003a9c:	f603 139e 	addw	r3, r3, #2462	; 0x99e
 8003aa0:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 8003aa4:	4658      	mov	r0, fp
 8003aa6:	f7ff f83f 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8003aaa:	953a      	str	r5, [sp, #232]	; 0xe8
    flexButton_ABC_123.setWildcardText(TypedText(T_RESOURCEID17));
 8003aac:	ad3a      	add	r5, sp, #232	; 0xe8
 8003aae:	230f      	movs	r3, #15
 8003ab0:	4629      	mov	r1, r5
 8003ab2:	4658      	mov	r0, fp
 8003ab4:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8003ab8:	f7ff f851 	bl	8002b5e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003abc:	4968      	ldr	r1, [pc, #416]	; (8003c60 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1060>)
 8003abe:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(flexButton_ABC_123Buffer, FLEXBUTTON_ABC_123_SIZE, "%s", TypedText(T_RESOURCEID7).getText());
 8003ac0:	f504 552a 	add.w	r5, r4, #10880	; 0x2a80
 8003ac4:	3530      	adds	r5, #48	; 0x30
 8003ac6:	2b00      	cmp	r3, #0
 8003ac8:	f43f ad3b 	beq.w	8003542 <_ZN27CustomContainerKeyboardBaseC1Ev+0x942>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8003acc:	4a65      	ldr	r2, [pc, #404]	; (8003c64 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1064>)
 8003ace:	8813      	ldrh	r3, [r2, #0]
 8003ad0:	2b10      	cmp	r3, #16
 8003ad2:	f67f ad40 	bls.w	8003556 <_ZN27CustomContainerKeyboardBaseC1Ev+0x956>
        return texts->getText(typedTextId);
 8003ad6:	4864      	ldr	r0, [pc, #400]	; (8003c68 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1068>)
 8003ad8:	2110      	movs	r1, #16
 8003ada:	6800      	ldr	r0, [r0, #0]
 8003adc:	f005 f894 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8003ae0:	4a62      	ldr	r2, [pc, #392]	; (8003c6c <_ZN27CustomContainerKeyboardBaseC1Ev+0x106c>)
 8003ae2:	4603      	mov	r3, r0
 8003ae4:	210a      	movs	r1, #10
 8003ae6:	4628      	mov	r0, r5
 8003ae8:	f017 faf0 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8003aec:	f642 2318 	movw	r3, #10776	; 0x2a18
        wildcardText.setPosition(x, y, width, height);
 8003af0:	2214      	movs	r2, #20
 8003af2:	50e5      	str	r5, [r4, r3]
 8003af4:	2100      	movs	r1, #0
 8003af6:	4633      	mov	r3, r6
 8003af8:	f10b 0078 	add.w	r0, fp, #120	; 0x78
 8003afc:	9600      	str	r6, [sp, #0]
 8003afe:	f7fe ffd7 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8003b02:	f642 231c 	movw	r3, #10780	; 0x2a1c
        handlePressedUpdated();
 8003b06:	4658      	mov	r0, fp
        colorReleased = newColorReleased;
 8003b08:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 8003b0a:	f642 2320 	movw	r3, #10784	; 0x2a20
 8003b0e:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 8003b10:	f7fe fc45 	bl	800239e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_ABC_123.setPosition(35, 234, 60, 60);
 8003b14:	4633      	mov	r3, r6
 8003b16:	4658      	mov	r0, fp
 8003b18:	9600      	str	r6, [sp, #0]
 8003b1a:	22ea      	movs	r2, #234	; 0xea
 8003b1c:	2123      	movs	r1, #35	; 0x23
 8003b1e:	f7fe ffc7 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003b22:	f642 1394 	movw	r3, #10644	; 0x2994
 8003b26:	9a03      	ldr	r2, [sp, #12]
 8003b28:	50e2      	str	r2, [r4, r3]
    add(boxWithBorder1);
 8003b2a:	ee1a 1a90 	vmov	r1, s21
 8003b2e:	4620      	mov	r0, r4
 8003b30:	f00f fc9e 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer1);
 8003b34:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003b36:	4620      	mov	r0, r4
 8003b38:	f00f fc9a 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer2);
 8003b3c:	990c      	ldr	r1, [sp, #48]	; 0x30
 8003b3e:	4620      	mov	r0, r4
 8003b40:	f00f fc96 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer3);
 8003b44:	990d      	ldr	r1, [sp, #52]	; 0x34
 8003b46:	4620      	mov	r0, r4
 8003b48:	f00f fc92 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer4);
 8003b4c:	990e      	ldr	r1, [sp, #56]	; 0x38
 8003b4e:	4620      	mov	r0, r4
 8003b50:	f00f fc8e 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer5);
 8003b54:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8003b56:	4620      	mov	r0, r4
 8003b58:	f00f fc8a 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer6);
 8003b5c:	9910      	ldr	r1, [sp, #64]	; 0x40
 8003b5e:	4620      	mov	r0, r4
 8003b60:	f00f fc86 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer7);
 8003b64:	9911      	ldr	r1, [sp, #68]	; 0x44
 8003b66:	4620      	mov	r0, r4
 8003b68:	f00f fc82 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer8);
 8003b6c:	9912      	ldr	r1, [sp, #72]	; 0x48
 8003b6e:	4620      	mov	r0, r4
 8003b70:	f00f fc7e 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer9);
 8003b74:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8003b76:	4620      	mov	r0, r4
 8003b78:	f00f fc7a 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer10);
 8003b7c:	9914      	ldr	r1, [sp, #80]	; 0x50
 8003b7e:	4620      	mov	r0, r4
 8003b80:	f00f fc76 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer1_1);
 8003b84:	9915      	ldr	r1, [sp, #84]	; 0x54
 8003b86:	4620      	mov	r0, r4
 8003b88:	f00f fc72 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer2_1);
 8003b8c:	9916      	ldr	r1, [sp, #88]	; 0x58
 8003b8e:	4620      	mov	r0, r4
 8003b90:	f00f fc6e 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer3_1);
 8003b94:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8003b96:	4620      	mov	r0, r4
 8003b98:	f00f fc6a 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer4_1);
 8003b9c:	9918      	ldr	r1, [sp, #96]	; 0x60
 8003b9e:	4620      	mov	r0, r4
 8003ba0:	f00f fc66 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer5_1);
 8003ba4:	9919      	ldr	r1, [sp, #100]	; 0x64
 8003ba6:	4620      	mov	r0, r4
 8003ba8:	f00f fc62 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer6_1);
 8003bac:	ee1b 1a10 	vmov	r1, s22
 8003bb0:	4620      	mov	r0, r4
 8003bb2:	f00f fc5d 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer7_1);
 8003bb6:	991a      	ldr	r1, [sp, #104]	; 0x68
 8003bb8:	4620      	mov	r0, r4
 8003bba:	f00f fc59 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer8_1);
 8003bbe:	ee1b 1a90 	vmov	r1, s23
 8003bc2:	4620      	mov	r0, r4
 8003bc4:	f00f fc54 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer9_1);
 8003bc8:	ee1c 1a10 	vmov	r1, s24
 8003bcc:	4620      	mov	r0, r4
 8003bce:	f00f fc4f 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer10_1);
 8003bd2:	ee1c 1a90 	vmov	r1, s25
 8003bd6:	4620      	mov	r0, r4
 8003bd8:	f00f fc4a 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer1_2);
 8003bdc:	ee1d 1a10 	vmov	r1, s26
 8003be0:	4620      	mov	r0, r4
 8003be2:	f00f fc45 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer2_2);
 8003be6:	ee1d 1a90 	vmov	r1, s27
 8003bea:	4620      	mov	r0, r4
 8003bec:	f00f fc40 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer3_2);
 8003bf0:	ee1e 1a10 	vmov	r1, s28
 8003bf4:	4620      	mov	r0, r4
 8003bf6:	f00f fc3b 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer4_2);
 8003bfa:	ee1e 1a90 	vmov	r1, s29
 8003bfe:	4620      	mov	r0, r4
 8003c00:	f00f fc36 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer5_2);
 8003c04:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8003c06:	4620      	mov	r0, r4
 8003c08:	f00f fc32 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer6_2);
 8003c0c:	ee1f 1a10 	vmov	r1, s30
 8003c10:	4620      	mov	r0, r4
 8003c12:	f00f fc2d 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer7_2);
 8003c16:	ee1f 1a90 	vmov	r1, s31
 8003c1a:	4620      	mov	r0, r4
 8003c1c:	f00f fc28 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer8_2);
 8003c20:	9904      	ldr	r1, [sp, #16]
 8003c22:	4620      	mov	r0, r4
 8003c24:	f00f fc24 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer9_2);
 8003c28:	9905      	ldr	r1, [sp, #20]
 8003c2a:	4620      	mov	r0, r4
 8003c2c:	f00f fc20 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer10_2);
 8003c30:	9906      	ldr	r1, [sp, #24]
 8003c32:	4620      	mov	r0, r4
 8003c34:	f00f fc1c 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textArea1);
 8003c38:	ee1a 1a10 	vmov	r1, s20
 8003c3c:	4620      	mov	r0, r4
 8003c3e:	f00f fc17 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_enter);
 8003c42:	ee18 1a10 	vmov	r1, s16
 8003c46:	4620      	mov	r0, r4
 8003c48:	f00f fc12 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_space);
 8003c4c:	ee18 1a90 	vmov	r1, s17
 8003c50:	e00e      	b.n	8003c70 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1070>
 8003c52:	bf00      	nop
 8003c54:	ff336699 	.word	0xff336699
 8003c58:	ff006699 	.word	0xff006699
 8003c5c:	0802958c 	.word	0x0802958c
 8003c60:	2002bd84 	.word	0x2002bd84
 8003c64:	2002bd88 	.word	0x2002bd88
 8003c68:	2002bd90 	.word	0x2002bd90
 8003c6c:	08029581 	.word	0x08029581
 8003c70:	4620      	mov	r0, r4
 8003c72:	f00f fbfd 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_language);
 8003c76:	ee19 1a10 	vmov	r1, s18
 8003c7a:	4620      	mov	r0, r4
 8003c7c:	f00f fbf8 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer11_1);
 8003c80:	9907      	ldr	r1, [sp, #28]
 8003c82:	4620      	mov	r0, r4
 8003c84:	f00f fbf4 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer11);
 8003c88:	9908      	ldr	r1, [sp, #32]
 8003c8a:	4620      	mov	r0, r4
 8003c8c:	f00f fbf0 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer12);
 8003c90:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003c92:	4620      	mov	r0, r4
 8003c94:	f00f fbec 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_close);
 8003c98:	ee19 1a90 	vmov	r1, s19
 8003c9c:	4620      	mov	r0, r4
 8003c9e:	f00f fbe7 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_shift);
 8003ca2:	4651      	mov	r1, sl
 8003ca4:	4620      	mov	r0, r4
 8003ca6:	f00f fbe3 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_del_all);
 8003caa:	4649      	mov	r1, r9
 8003cac:	4620      	mov	r0, r4
 8003cae:	f00f fbdf 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_del_pre);
 8003cb2:	4641      	mov	r1, r8
 8003cb4:	4620      	mov	r0, r4
 8003cb6:	f00f fbdb 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_ABC_123);
 8003cba:	4620      	mov	r0, r4
 8003cbc:	4659      	mov	r1, fp
 8003cbe:	f00f fbd7 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003cc2:	4620      	mov	r0, r4
 8003cc4:	b03d      	add	sp, #244	; 0xf4
 8003cc6:	ecbd 8b10 	vpop	{d8-d15}
 8003cca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003cce:	bf00      	nop

08003cd0 <_ZN31CustomContainerKeyboard_NumBaseD1Ev>:

class CustomContainerKeyboard_NumBase : public touchgfx::Container
{
public:
    CustomContainerKeyboard_NumBase();
    virtual ~CustomContainerKeyboard_NumBase() {}
 8003cd0:	4770      	bx	lr

08003cd2 <_ZN31CustomContainerKeyboard_NumBase16ClickButtonEnterEv>:
     * Virtual Action Handlers
     */
    virtual void ClickButtonEnter()
    {
        // Override and implement this function in CustomContainerKeyboard_Num
    }
 8003cd2:	4770      	bx	lr

08003cd4 <_ZN31CustomContainerKeyboard_NumBase24ClickButtonCloseKeyboardEv>:

    virtual void ClickButtonCloseKeyboard()
    {
        // Override and implement this function in CustomContainerKeyboard_Num
    }
 8003cd4:	4770      	bx	lr

08003cd6 <_ZN31CustomContainerKeyboard_NumBase17ClickButtonDelPreEv>:

    virtual void ClickButtonDelPre()
    {
        // Override and implement this function in CustomContainerKeyboard_Num
    }
 8003cd6:	4770      	bx	lr

08003cd8 <_ZN31CustomContainerKeyboard_NumBase31emitTriggerKeyboard_NumCallbackEv>:
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitTriggerKeyboard_NumCallback()
 8003cd8:	b570      	push	{r4, r5, r6, lr}
    {
        if (triggerKeyboard_NumCallback && triggerKeyboard_NumCallback->isValid())
 8003cda:	f241 05a8 	movw	r5, #4264	; 0x10a8
    virtual void emitTriggerKeyboard_NumCallback()
 8003cde:	4604      	mov	r4, r0
        if (triggerKeyboard_NumCallback && triggerKeyboard_NumCallback->isValid())
 8003ce0:	5940      	ldr	r0, [r0, r5]
 8003ce2:	b148      	cbz	r0, 8003cf8 <_ZN31CustomContainerKeyboard_NumBase31emitTriggerKeyboard_NumCallbackEv+0x20>
 8003ce4:	6803      	ldr	r3, [r0, #0]
 8003ce6:	68db      	ldr	r3, [r3, #12]
 8003ce8:	4798      	blx	r3
 8003cea:	b128      	cbz	r0, 8003cf8 <_ZN31CustomContainerKeyboard_NumBase31emitTriggerKeyboard_NumCallbackEv+0x20>
        {
            this->triggerKeyboard_NumCallback->execute();
 8003cec:	5960      	ldr	r0, [r4, r5]
 8003cee:	6803      	ldr	r3, [r0, #0]
        }
    }
 8003cf0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            this->triggerKeyboard_NumCallback->execute();
 8003cf4:	689b      	ldr	r3, [r3, #8]
 8003cf6:	4718      	bx	r3
    }
 8003cf8:	bd70      	pop	{r4, r5, r6, pc}

08003cfa <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>:
void CustomContainerKeyboard_NumBase::customContainerButton_key1TriggerButton_keyCallbackHandler()
{
    //Interaction3
    //When customContainerButton_key1 triggerButton_key call action1 on CustomContainerKeyboard_Num
    //Call action1
    action1();
 8003cfa:	6803      	ldr	r3, [r0, #0]
 8003cfc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003d00:	4718      	bx	r3

08003d02 <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key2TriggerButton_keyCallbackHandlerEv>:
 8003d02:	f7ff bffa 	b.w	8003cfa <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003d06 <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key3TriggerButton_keyCallbackHandlerEv>:
 8003d06:	f7ff bff8 	b.w	8003cfa <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003d0a <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key4TriggerButton_keyCallbackHandlerEv>:
 8003d0a:	f7ff bff6 	b.w	8003cfa <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003d0e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key5TriggerButton_keyCallbackHandlerEv>:
 8003d0e:	f7ff bff4 	b.w	8003cfa <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003d12 <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key6TriggerButton_keyCallbackHandlerEv>:
 8003d12:	f7ff bff2 	b.w	8003cfa <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003d16 <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key7TriggerButton_keyCallbackHandlerEv>:
 8003d16:	f7ff bff0 	b.w	8003cfa <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003d1a <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key8TriggerButton_keyCallbackHandlerEv>:
 8003d1a:	f7ff bfee 	b.w	8003cfa <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003d1e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key9TriggerButton_keyCallbackHandlerEv>:
 8003d1e:	f7ff bfec 	b.w	8003cfa <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003d22 <_ZN31CustomContainerKeyboard_NumBase59customContainerButton_key10TriggerButton_keyCallbackHandlerEv>:
 8003d22:	f7ff bfea 	b.w	8003cfa <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003d26 <_ZN31CustomContainerKeyboard_NumBase59customContainerButton_key11TriggerButton_keyCallbackHandlerEv>:
 8003d26:	f7ff bfe8 	b.w	8003cfa <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003d2a <_ZN31CustomContainerKeyboard_NumBase59customContainerButton_key12TriggerButton_keyCallbackHandlerEv>:
 8003d2a:	f7ff bfe6 	b.w	8003cfa <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003d2e <_ZN31CustomContainerKeyboard_NumBase7action1Ev>:
}

void CustomContainerKeyboard_NumBase::action1()
{

}
 8003d2e:	4770      	bx	lr

08003d30 <_ZN8touchgfx8CallbackI31CustomContainerKeyboard_NumBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003d30:	4770      	bx	lr

08003d32 <_ZN8touchgfx8CallbackI31CustomContainerKeyboard_NumBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003d32:	4770      	bx	lr

08003d34 <_ZN8touchgfx8CallbackI31CustomContainerKeyboard_NumBasevvvE7executeEv>:
    virtual void execute()
 8003d34:	b410      	push	{r4}
        (pobject->*pmemfun_0)();
 8003d36:	68c2      	ldr	r2, [r0, #12]
 8003d38:	6841      	ldr	r1, [r0, #4]
 8003d3a:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8003d3c:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8003d3e:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8003d42:	07d2      	lsls	r2, r2, #31
 8003d44:	bf48      	it	mi
 8003d46:	590a      	ldrmi	r2, [r1, r4]
 8003d48:	689b      	ldr	r3, [r3, #8]
    }
 8003d4a:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8003d4e:	bf48      	it	mi
 8003d50:	58d3      	ldrmi	r3, [r2, r3]
 8003d52:	4718      	bx	r3

08003d54 <_ZNK8touchgfx8CallbackI31CustomContainerKeyboard_NumBasevvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_0 != 0);
 8003d54:	6843      	ldr	r3, [r0, #4]
 8003d56:	b12b      	cbz	r3, 8003d64 <_ZNK8touchgfx8CallbackI31CustomContainerKeyboard_NumBasevvvE7isValidEv+0x10>
 8003d58:	6883      	ldr	r3, [r0, #8]
 8003d5a:	b92b      	cbnz	r3, 8003d68 <_ZNK8touchgfx8CallbackI31CustomContainerKeyboard_NumBasevvvE7isValidEv+0x14>
 8003d5c:	68c0      	ldr	r0, [r0, #12]
 8003d5e:	f000 0001 	and.w	r0, r0, #1
 8003d62:	4770      	bx	lr
 8003d64:	4618      	mov	r0, r3
 8003d66:	4770      	bx	lr
 8003d68:	2001      	movs	r0, #1
    }
 8003d6a:	4770      	bx	lr

08003d6c <_ZN8touchgfx8CallbackI31CustomContainerKeyboard_NumBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003d6c:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8003d6e:	68c2      	ldr	r2, [r0, #12]
 8003d70:	6844      	ldr	r4, [r0, #4]
 8003d72:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003d74:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8003d76:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003d7a:	07d2      	lsls	r2, r2, #31
 8003d7c:	bf48      	it	mi
 8003d7e:	5962      	ldrmi	r2, [r4, r5]
 8003d80:	689b      	ldr	r3, [r3, #8]
    }
 8003d82:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8003d84:	bf48      	it	mi
 8003d86:	58d3      	ldrmi	r3, [r2, r3]
 8003d88:	4718      	bx	r3

08003d8a <_ZNK8touchgfx8CallbackI31CustomContainerKeyboard_NumBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8003d8a:	6843      	ldr	r3, [r0, #4]
 8003d8c:	b12b      	cbz	r3, 8003d9a <_ZNK8touchgfx8CallbackI31CustomContainerKeyboard_NumBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8003d8e:	6883      	ldr	r3, [r0, #8]
 8003d90:	b92b      	cbnz	r3, 8003d9e <_ZNK8touchgfx8CallbackI31CustomContainerKeyboard_NumBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8003d92:	68c0      	ldr	r0, [r0, #12]
 8003d94:	f000 0001 	and.w	r0, r0, #1
 8003d98:	4770      	bx	lr
 8003d9a:	4618      	mov	r0, r3
 8003d9c:	4770      	bx	lr
 8003d9e:	2001      	movs	r0, #1
    }
 8003da0:	4770      	bx	lr

08003da2 <_ZN8touchgfx8CallbackI31CustomContainerKeyboard_NumBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003da2:	b510      	push	{r4, lr}
 8003da4:	2110      	movs	r1, #16
 8003da6:	4604      	mov	r4, r0
 8003da8:	f023 fcbc 	bl	8027724 <_ZdlPvj>
 8003dac:	4620      	mov	r0, r4
 8003dae:	bd10      	pop	{r4, pc}

08003db0 <_ZN8touchgfx8CallbackI31CustomContainerKeyboard_NumBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003db0:	b510      	push	{r4, lr}
 8003db2:	2110      	movs	r1, #16
 8003db4:	4604      	mov	r4, r0
 8003db6:	f023 fcb5 	bl	8027724 <_ZdlPvj>
 8003dba:	4620      	mov	r0, r4
 8003dbc:	bd10      	pop	{r4, pc}

08003dbe <_ZN31CustomContainerKeyboard_NumBaseD0Ev>:
    virtual ~CustomContainerKeyboard_NumBase() {}
 8003dbe:	b510      	push	{r4, lr}
 8003dc0:	f241 01ac 	movw	r1, #4268	; 0x10ac
 8003dc4:	4604      	mov	r4, r0
 8003dc6:	f023 fcad 	bl	8027724 <_ZdlPvj>
 8003dca:	4620      	mov	r0, r4
 8003dcc:	bd10      	pop	{r4, pc}

08003dce <_ZN31CustomContainerKeyboard_NumBase10initializeEv>:
{
 8003dce:	b510      	push	{r4, lr}
 8003dd0:	4604      	mov	r4, r0
    customContainerButton_key1.initialize();
 8003dd2:	f500 7006 	add.w	r0, r0, #536	; 0x218
 8003dd6:	f005 f941 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key2.initialize();
 8003dda:	f504 704b 	add.w	r0, r4, #812	; 0x32c
 8003dde:	f005 f93d 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key3.initialize();
 8003de2:	f504 6088 	add.w	r0, r4, #1088	; 0x440
 8003de6:	f005 f939 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key4.initialize();
 8003dea:	f204 5054 	addw	r0, r4, #1364	; 0x554
 8003dee:	f005 f935 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key5.initialize();
 8003df2:	f504 60cd 	add.w	r0, r4, #1640	; 0x668
 8003df6:	f005 f931 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key6.initialize();
 8003dfa:	f204 707c 	addw	r0, r4, #1916	; 0x77c
 8003dfe:	f005 f92d 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key7.initialize();
 8003e02:	f504 6009 	add.w	r0, r4, #2192	; 0x890
 8003e06:	f005 f929 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key8.initialize();
 8003e0a:	f604 10a4 	addw	r0, r4, #2468	; 0x9a4
 8003e0e:	f005 f925 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key9.initialize();
 8003e12:	f604 20b8 	addw	r0, r4, #2744	; 0xab8
 8003e16:	f005 f921 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key10.initialize();
 8003e1a:	f604 30cc 	addw	r0, r4, #3020	; 0xbcc
 8003e1e:	f005 f91d 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key11.initialize();
 8003e22:	f504 604e 	add.w	r0, r4, #3296	; 0xce0
 8003e26:	f005 f919 	bl	800905c <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key12.initialize();
 8003e2a:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
}
 8003e2e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    customContainerButton_key12.initialize();
 8003e32:	f005 b913 	b.w	800905c <_ZN25CustomContainerButton_key10initializeEv>

08003e36 <_ZN31CustomContainerKeyboard_NumBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void CustomContainerKeyboard_NumBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButtonEnter)
 8003e36:	f100 0360 	add.w	r3, r0, #96	; 0x60
 8003e3a:	4299      	cmp	r1, r3
{
 8003e3c:	b510      	push	{r4, lr}
 8003e3e:	4604      	mov	r4, r0
    if (&src == &flexButtonEnter)
 8003e40:	d10a      	bne.n	8003e58 <_ZN31CustomContainerKeyboard_NumBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
    {
        //Interaction1
        //When flexButtonEnter clicked call virtual function
        //Call ClickButtonEnter
        ClickButtonEnter();
 8003e42:	6803      	ldr	r3, [r0, #0]
 8003e44:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8003e48:	4798      	blx	r3

        //Interaction15
        //When flexButtonEnter clicked emit triggerKeyboard_Num callback
        //Emit callback
        emitTriggerKeyboard_NumCallback();
 8003e4a:	6823      	ldr	r3, [r4, #0]
 8003e4c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8003e50:	4620      	mov	r0, r4
        //Interaction16
        //When flexButton_del_pre clicked call virtual function
        //Call ClickButtonDelPre
        ClickButtonDelPre();
    }
}
 8003e52:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        ClickButtonDelPre();
 8003e56:	4718      	bx	r3
    else if (&src == &flexButtonClose)
 8003e58:	f500 738e 	add.w	r3, r0, #284	; 0x11c
 8003e5c:	4299      	cmp	r1, r3
 8003e5e:	d103      	bne.n	8003e68 <_ZN31CustomContainerKeyboard_NumBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x32>
        ClickButtonCloseKeyboard();
 8003e60:	6803      	ldr	r3, [r0, #0]
 8003e62:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003e66:	e7f4      	b.n	8003e52 <_ZN31CustomContainerKeyboard_NumBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
    else if (&src == &flexButton_del_pre)
 8003e68:	f600 7308 	addw	r3, r0, #3848	; 0xf08
 8003e6c:	4299      	cmp	r1, r3
 8003e6e:	d103      	bne.n	8003e78 <_ZN31CustomContainerKeyboard_NumBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x42>
        ClickButtonDelPre();
 8003e70:	6803      	ldr	r3, [r0, #0]
 8003e72:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003e76:	e7ec      	b.n	8003e52 <_ZN31CustomContainerKeyboard_NumBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
}
 8003e78:	bd10      	pop	{r4, pc}
	...

08003e7c <_ZN31CustomContainerKeyboard_NumBaseC1Ev>:
CustomContainerKeyboard_NumBase::CustomContainerKeyboard_NumBase() :
 8003e7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003e80:	ed2d 8b0c 	vpush	{d8-d13}
 8003e84:	4604      	mov	r4, r0
 8003e86:	b091      	sub	sp, #68	; 0x44
    triggerKeyboard_NumCallback(0)
 8003e88:	46a3      	mov	fp, r4
 8003e8a:	2500      	movs	r5, #0
 8003e8c:	f7fe fb2a 	bl	80024e4 <_ZN8touchgfx8DrawableC1Ev>
 8003e90:	4bcd      	ldr	r3, [pc, #820]	; (80041c8 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x34c>)
 8003e92:	62a5      	str	r5, [r4, #40]	; 0x28
 8003e94:	f84b 3b2c 	str.w	r3, [fp], #44
        : Box(), borderColor(0), borderSize(0)
 8003e98:	4658      	mov	r0, fp
 8003e9a:	f7fe fe15 	bl	8002ac8 <_ZN8touchgfx3BoxC1Ev>
 8003e9e:	f104 0960 	add.w	r9, r4, #96	; 0x60
 8003ea2:	4bca      	ldr	r3, [pc, #808]	; (80041cc <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x350>)
 8003ea4:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003ea6:	f504 788e 	add.w	r8, r4, #284	; 0x11c
 8003eaa:	65a5      	str	r5, [r4, #88]	; 0x58
 8003eac:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8003eb0:	4648      	mov	r0, r9
 8003eb2:	f7fe fe8f 	bl	8002bd4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8003eb6:	f504 7aec 	add.w	sl, r4, #472	; 0x1d8
 8003eba:	4640      	mov	r0, r8
 8003ebc:	f7fe fe8a 	bl	8002bd4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : TextArea(), wildcard(0)
 8003ec0:	4650      	mov	r0, sl
 8003ec2:	f7fe fe15 	bl	8002af0 <_ZN8touchgfx8TextAreaC1Ev>
 8003ec6:	4bc2      	ldr	r3, [pc, #776]	; (80041d0 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x354>)
 8003ec8:	f8c4 31d8 	str.w	r3, [r4, #472]	; 0x1d8
 8003ecc:	f504 7306 	add.w	r3, r4, #536	; 0x218
 8003ed0:	4618      	mov	r0, r3
 8003ed2:	f8c4 5214 	str.w	r5, [r4, #532]	; 0x214
 8003ed6:	ee08 3a10 	vmov	s16, r3
 8003eda:	f005 f8c9 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8003ede:	f504 734b 	add.w	r3, r4, #812	; 0x32c
 8003ee2:	4618      	mov	r0, r3
 8003ee4:	ee08 3a90 	vmov	s17, r3
 8003ee8:	f005 f8c2 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8003eec:	f504 6388 	add.w	r3, r4, #1088	; 0x440
 8003ef0:	4618      	mov	r0, r3
 8003ef2:	ee09 3a10 	vmov	s18, r3
 8003ef6:	f005 f8bb 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8003efa:	f204 5354 	addw	r3, r4, #1364	; 0x554
 8003efe:	4618      	mov	r0, r3
 8003f00:	ee09 3a90 	vmov	s19, r3
 8003f04:	f005 f8b4 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8003f08:	f504 63cd 	add.w	r3, r4, #1640	; 0x668
 8003f0c:	4618      	mov	r0, r3
 8003f0e:	ee0a 3a10 	vmov	s20, r3
 8003f12:	f005 f8ad 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8003f16:	f204 737c 	addw	r3, r4, #1916	; 0x77c
 8003f1a:	4618      	mov	r0, r3
 8003f1c:	ee0a 3a90 	vmov	s21, r3
 8003f20:	f005 f8a6 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8003f24:	f504 6309 	add.w	r3, r4, #2192	; 0x890
 8003f28:	4618      	mov	r0, r3
 8003f2a:	ee0b 3a10 	vmov	s22, r3
 8003f2e:	f005 f89f 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8003f32:	f604 13a4 	addw	r3, r4, #2468	; 0x9a4
 8003f36:	4618      	mov	r0, r3
 8003f38:	ee0b 3a90 	vmov	s23, r3
 8003f3c:	f005 f898 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8003f40:	f604 23b8 	addw	r3, r4, #2744	; 0xab8
 8003f44:	4618      	mov	r0, r3
 8003f46:	ee0c 3a10 	vmov	s24, r3
 8003f4a:	f005 f891 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8003f4e:	f604 33cc 	addw	r3, r4, #3020	; 0xbcc
 8003f52:	4618      	mov	r0, r3
 8003f54:	ee0c 3a90 	vmov	s25, r3
 8003f58:	f005 f88a 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8003f5c:	f504 634e 	add.w	r3, r4, #3296	; 0xce0
 8003f60:	4618      	mov	r0, r3
 8003f62:	ee0d 3a10 	vmov	s26, r3
 8003f66:	f005 f883 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8003f6a:	f604 53f4 	addw	r3, r4, #3572	; 0xdf4
 8003f6e:	4618      	mov	r0, r3
 8003f70:	f604 7708 	addw	r7, r4, #3848	; 0xf08
 8003f74:	ee0d 3a90 	vmov	s27, r3
 8003f78:	f005 f87a 	bl	8009070 <_ZN25CustomContainerButton_keyC1Ev>
 8003f7c:	4638      	mov	r0, r7
 8003f7e:	f7fe fe29 	bl	8002bd4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8003f82:	4b94      	ldr	r3, [pc, #592]	; (80041d4 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x358>)
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8003f84:	4a94      	ldr	r2, [pc, #592]	; (80041d8 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x35c>)
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8003f86:	f8c4 3fd8 	str.w	r3, [r4, #4056]	; 0xfd8
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8003f8a:	f8c4 2ff0 	str.w	r2, [r4, #4080]	; 0xff0
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8003f8e:	4b93      	ldr	r3, [pc, #588]	; (80041dc <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x360>)
 8003f90:	f8c4 3fe0 	str.w	r3, [r4, #4064]	; 0xfe0
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8003f94:	f504 5280 	add.w	r2, r4, #4096	; 0x1000
 8003f98:	4b91      	ldr	r3, [pc, #580]	; (80041e0 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x364>)
 8003f9a:	4992      	ldr	r1, [pc, #584]	; (80041e4 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x368>)
 8003f9c:	f8c4 3fe8 	str.w	r3, [r4, #4072]	; 0xfe8
 8003fa0:	f8c4 3ff8 	str.w	r3, [r4, #4088]	; 0xff8
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8003fa4:	f8c4 4fdc 	str.w	r4, [r4, #4060]	; 0xfdc
 8003fa8:	f8c4 5fe4 	str.w	r5, [r4, #4068]	; 0xfe4
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8003fac:	f8c4 4fec 	str.w	r4, [r4, #4076]	; 0xfec
 8003fb0:	f8c4 5ff4 	str.w	r5, [r4, #4084]	; 0xff4
 8003fb4:	f8c4 4ffc 	str.w	r4, [r4, #4092]	; 0xffc
 8003fb8:	6011      	str	r1, [r2, #0]
 8003fba:	f241 0204 	movw	r2, #4100	; 0x1004
    boxWithBorder1.setPosition(0, 0, 270, 300);
 8003fbe:	4658      	mov	r0, fp
 8003fc0:	50a5      	str	r5, [r4, r2]
 8003fc2:	f241 0208 	movw	r2, #4104	; 0x1008
 8003fc6:	18a1      	adds	r1, r4, r2
 8003fc8:	50a3      	str	r3, [r4, r2]
 8003fca:	f241 0210 	movw	r2, #4112	; 0x1010
 8003fce:	604c      	str	r4, [r1, #4]
 8003fd0:	9104      	str	r1, [sp, #16]
 8003fd2:	4985      	ldr	r1, [pc, #532]	; (80041e8 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x36c>)
 8003fd4:	50a1      	str	r1, [r4, r2]
 8003fd6:	f241 0214 	movw	r2, #4116	; 0x1014
 8003fda:	2679      	movs	r6, #121	; 0x79
 8003fdc:	50a5      	str	r5, [r4, r2]
 8003fde:	f241 0218 	movw	r2, #4120	; 0x1018
 8003fe2:	18a1      	adds	r1, r4, r2
 8003fe4:	50a3      	str	r3, [r4, r2]
 8003fe6:	f504 5281 	add.w	r2, r4, #4128	; 0x1020
 8003fea:	604c      	str	r4, [r1, #4]
 8003fec:	9105      	str	r1, [sp, #20]
 8003fee:	497f      	ldr	r1, [pc, #508]	; (80041ec <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x370>)
 8003ff0:	6011      	str	r1, [r2, #0]
 8003ff2:	f241 0224 	movw	r2, #4132	; 0x1024
 8003ff6:	50a5      	str	r5, [r4, r2]
 8003ff8:	f241 0228 	movw	r2, #4136	; 0x1028
 8003ffc:	18a1      	adds	r1, r4, r2
 8003ffe:	50a3      	str	r3, [r4, r2]
 8004000:	f241 0230 	movw	r2, #4144	; 0x1030
 8004004:	604c      	str	r4, [r1, #4]
 8004006:	9106      	str	r1, [sp, #24]
 8004008:	4979      	ldr	r1, [pc, #484]	; (80041f0 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x374>)
 800400a:	50a1      	str	r1, [r4, r2]
 800400c:	f241 0234 	movw	r2, #4148	; 0x1034
 8004010:	50a5      	str	r5, [r4, r2]
 8004012:	f241 0238 	movw	r2, #4152	; 0x1038
 8004016:	18a1      	adds	r1, r4, r2
 8004018:	50a3      	str	r3, [r4, r2]
 800401a:	f504 5282 	add.w	r2, r4, #4160	; 0x1040
 800401e:	604c      	str	r4, [r1, #4]
 8004020:	9107      	str	r1, [sp, #28]
 8004022:	4974      	ldr	r1, [pc, #464]	; (80041f4 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x378>)
 8004024:	6011      	str	r1, [r2, #0]
 8004026:	f241 0244 	movw	r2, #4164	; 0x1044
 800402a:	50a5      	str	r5, [r4, r2]
 800402c:	f241 0248 	movw	r2, #4168	; 0x1048
 8004030:	18a1      	adds	r1, r4, r2
 8004032:	9108      	str	r1, [sp, #32]
 8004034:	50a3      	str	r3, [r4, r2]
 8004036:	f241 0250 	movw	r2, #4176	; 0x1050
 800403a:	604c      	str	r4, [r1, #4]
 800403c:	496e      	ldr	r1, [pc, #440]	; (80041f8 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x37c>)
 800403e:	50a1      	str	r1, [r4, r2]
 8004040:	f241 0254 	movw	r2, #4180	; 0x1054
 8004044:	50a5      	str	r5, [r4, r2]
 8004046:	f241 0258 	movw	r2, #4184	; 0x1058
 800404a:	18a1      	adds	r1, r4, r2
 800404c:	50a3      	str	r3, [r4, r2]
 800404e:	f504 5283 	add.w	r2, r4, #4192	; 0x1060
 8004052:	604c      	str	r4, [r1, #4]
 8004054:	9109      	str	r1, [sp, #36]	; 0x24
 8004056:	4969      	ldr	r1, [pc, #420]	; (80041fc <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x380>)
 8004058:	6011      	str	r1, [r2, #0]
 800405a:	f241 0264 	movw	r2, #4196	; 0x1064
 800405e:	50a5      	str	r5, [r4, r2]
 8004060:	f241 0268 	movw	r2, #4200	; 0x1068
 8004064:	18a1      	adds	r1, r4, r2
 8004066:	50a3      	str	r3, [r4, r2]
 8004068:	f241 0270 	movw	r2, #4208	; 0x1070
 800406c:	604c      	str	r4, [r1, #4]
 800406e:	910a      	str	r1, [sp, #40]	; 0x28
 8004070:	4963      	ldr	r1, [pc, #396]	; (8004200 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x384>)
 8004072:	50a1      	str	r1, [r4, r2]
 8004074:	f241 0274 	movw	r2, #4212	; 0x1074
 8004078:	50a5      	str	r5, [r4, r2]
 800407a:	f241 0278 	movw	r2, #4216	; 0x1078
 800407e:	18a1      	adds	r1, r4, r2
 8004080:	50a3      	str	r3, [r4, r2]
 8004082:	f504 5284 	add.w	r2, r4, #4224	; 0x1080
 8004086:	604c      	str	r4, [r1, #4]
 8004088:	910b      	str	r1, [sp, #44]	; 0x2c
 800408a:	495e      	ldr	r1, [pc, #376]	; (8004204 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x388>)
 800408c:	6011      	str	r1, [r2, #0]
 800408e:	f241 0284 	movw	r2, #4228	; 0x1084
 8004092:	50a5      	str	r5, [r4, r2]
 8004094:	f241 0288 	movw	r2, #4232	; 0x1088
 8004098:	18a1      	adds	r1, r4, r2
 800409a:	50a3      	str	r3, [r4, r2]
 800409c:	f241 0290 	movw	r2, #4240	; 0x1090
 80040a0:	604c      	str	r4, [r1, #4]
 80040a2:	910c      	str	r1, [sp, #48]	; 0x30
 80040a4:	4958      	ldr	r1, [pc, #352]	; (8004208 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x38c>)
 80040a6:	50a1      	str	r1, [r4, r2]
 80040a8:	f241 0294 	movw	r2, #4244	; 0x1094
 80040ac:	50a5      	str	r5, [r4, r2]
 80040ae:	f241 0298 	movw	r2, #4248	; 0x1098
 80040b2:	18a1      	adds	r1, r4, r2
 80040b4:	50a3      	str	r3, [r4, r2]
 80040b6:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 80040ba:	4a54      	ldr	r2, [pc, #336]	; (800420c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x390>)
 80040bc:	604c      	str	r4, [r1, #4]
 80040be:	601a      	str	r2, [r3, #0]
 80040c0:	f241 03a4 	movw	r3, #4260	; 0x10a4
 80040c4:	910d      	str	r1, [sp, #52]	; 0x34
 80040c6:	50e5      	str	r5, [r4, r3]
    triggerKeyboard_NumCallback(0)
 80040c8:	f241 03a8 	movw	r3, #4264	; 0x10a8
    boxWithBorder1.setPosition(0, 0, 270, 300);
 80040cc:	462a      	mov	r2, r5
    triggerKeyboard_NumCallback(0)
 80040ce:	50e5      	str	r5, [r4, r3]
 80040d0:	4b4f      	ldr	r3, [pc, #316]	; (8004210 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x394>)
 80040d2:	60a3      	str	r3, [r4, #8]
    boxWithBorder1.setPosition(0, 0, 270, 300);
 80040d4:	f44f 7396 	mov.w	r3, #300	; 0x12c
 80040d8:	9300      	str	r3, [sp, #0]
 80040da:	4629      	mov	r1, r5
 80040dc:	f44f 7387 	mov.w	r3, #270	; 0x10e
 80040e0:	f7fe fce6 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 80040e4:	4a4b      	ldr	r2, [pc, #300]	; (8004214 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x398>)
 80040e6:	9600      	str	r6, [sp, #0]
 80040e8:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80040ec:	e9c4 2315 	strd	r2, r3, [r4, #84]	; 0x54
        borderSize = size;
 80040f0:	2305      	movs	r3, #5
 80040f2:	462a      	mov	r2, r5
 80040f4:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80040f8:	4629      	mov	r1, r5
 80040fa:	233c      	movs	r3, #60	; 0x3c
 80040fc:	f104 0094 	add.w	r0, r4, #148	; 0x94
 8004100:	f7fe fcd6 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004104:	f04f 0301 	mov.w	r3, #1
        down = colorPressed;
 8004108:	4943      	ldr	r1, [pc, #268]	; (8004218 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x39c>)
 800410a:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 800410e:	4b43      	ldr	r3, [pc, #268]	; (800421c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3a0>)
        borderUp = borderColorReleased;
 8004110:	4843      	ldr	r0, [pc, #268]	; (8004220 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3a4>)
 8004112:	f8c4 00d0 	str.w	r0, [r4, #208]	; 0xd0
        down = colorPressed;
 8004116:	e9c4 3132 	strd	r3, r1, [r4, #200]	; 0xc8
        borderDown = borderColorPressed;
 800411a:	f503 134c 	add.w	r3, r3, #3342336	; 0x330000
 800411e:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        handlePressedUpdated();
 8004122:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8004124:	4648      	mov	r0, r9
 8004126:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800412a:	4798      	blx	r3
    flexButtonEnter.setText(TypedText(T___SINGLEUSE_O6I9));
 800412c:	f10d 0e38 	add.w	lr, sp, #56	; 0x38
        : typedTextId(id)
 8004130:	4b3c      	ldr	r3, [pc, #240]	; (8004224 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3a8>)
 8004132:	930e      	str	r3, [sp, #56]	; 0x38
 8004134:	4671      	mov	r1, lr
 8004136:	231c      	movs	r3, #28
 8004138:	4648      	mov	r0, r9
 800413a:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 800413e:	f7fe fcff 	bl	8002b40 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8004142:	2232      	movs	r2, #50	; 0x32
 8004144:	4629      	mov	r1, r5
 8004146:	9600      	str	r6, [sp, #0]
 8004148:	233c      	movs	r3, #60	; 0x3c
 800414a:	f104 00d8 	add.w	r0, r4, #216	; 0xd8
 800414e:	f7fe fcaf 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8004152:	4b35      	ldr	r3, [pc, #212]	; (8004228 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3ac>)
        handlePressedUpdated();
 8004154:	4648      	mov	r0, r9
        colorPressed = newColorPressed;
 8004156:	e9c4 3345 	strd	r3, r3, [r4, #276]	; 0x114
        handlePressedUpdated();
 800415a:	f7fe fb54 	bl	8002806 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonEnter.setPosition(196, 106, 60, 121);
 800415e:	9600      	str	r6, [sp, #0]
 8004160:	233c      	movs	r3, #60	; 0x3c
    flexButtonEnter.setAction(flexButtonCallback);
 8004162:	f604 76d8 	addw	r6, r4, #4056	; 0xfd8
    flexButtonEnter.setPosition(196, 106, 60, 121);
 8004166:	226a      	movs	r2, #106	; 0x6a
 8004168:	21c4      	movs	r1, #196	; 0xc4
 800416a:	4648      	mov	r0, r9
 800416c:	f7fe fca0 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonEnter.setAction(flexButtonCallback);
 8004170:	9602      	str	r6, [sp, #8]
 8004172:	f8c4 6090 	str.w	r6, [r4, #144]	; 0x90
        borderBox.setPosition(x, y, width, height);
 8004176:	263c      	movs	r6, #60	; 0x3c
 8004178:	4633      	mov	r3, r6
 800417a:	462a      	mov	r2, r5
 800417c:	4629      	mov	r1, r5
 800417e:	f504 70a8 	add.w	r0, r4, #336	; 0x150
 8004182:	9600      	str	r6, [sp, #0]
 8004184:	f7fe fc94 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 8004188:	4923      	ldr	r1, [pc, #140]	; (8004218 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x39c>)
 800418a:	4a24      	ldr	r2, [pc, #144]	; (800421c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3a0>)
        handlePressedUpdated();
 800418c:	f8d4 311c 	ldr.w	r3, [r4, #284]	; 0x11c
        borderUp = borderColorReleased;
 8004190:	4823      	ldr	r0, [pc, #140]	; (8004220 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3a4>)
        handlePressedUpdated();
 8004192:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
        borderUp = borderColorReleased;
 8004196:	f8c4 018c 	str.w	r0, [r4, #396]	; 0x18c
 800419a:	f04f 0c01 	mov.w	ip, #1
        down = colorPressed;
 800419e:	e9c4 2161 	strd	r2, r1, [r4, #388]	; 0x184
        borderDown = borderColorPressed;
 80041a2:	f502 124c 	add.w	r2, r2, #3342336	; 0x330000
 80041a6:	f8a4 c180 	strh.w	ip, [r4, #384]	; 0x180
 80041aa:	f8c4 2190 	str.w	r2, [r4, #400]	; 0x190
        handlePressedUpdated();
 80041ae:	4640      	mov	r0, r8
 80041b0:	4798      	blx	r3
 80041b2:	4a1c      	ldr	r2, [pc, #112]	; (8004224 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3a8>)
 80041b4:	920e      	str	r2, [sp, #56]	; 0x38
 80041b6:	231b      	movs	r3, #27
    flexButtonClose.setText(TypedText(T___SINGLEUSE_66SU));
 80041b8:	a90e      	add	r1, sp, #56	; 0x38
 80041ba:	4640      	mov	r0, r8
 80041bc:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 80041c0:	f7fe fcbe 	bl	8002b40 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
 80041c4:	e032      	b.n	800422c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3b0>
 80041c6:	bf00      	nop
 80041c8:	08029930 	.word	0x08029930
 80041cc:	0802c4c8 	.word	0x0802c4c8
 80041d0:	0802c3a8 	.word	0x0802c3a8
 80041d4:	08029900 	.word	0x08029900
 80041d8:	08003cfb 	.word	0x08003cfb
 80041dc:	08003e37 	.word	0x08003e37
 80041e0:	08029918 	.word	0x08029918
 80041e4:	08003d03 	.word	0x08003d03
 80041e8:	08003d07 	.word	0x08003d07
 80041ec:	08003d0b 	.word	0x08003d0b
 80041f0:	08003d0f 	.word	0x08003d0f
 80041f4:	08003d13 	.word	0x08003d13
 80041f8:	08003d17 	.word	0x08003d17
 80041fc:	08003d1b 	.word	0x08003d1b
 8004200:	08003d1f 	.word	0x08003d1f
 8004204:	08003d23 	.word	0x08003d23
 8004208:	08003d27 	.word	0x08003d27
 800420c:	08003d2b 	.word	0x08003d2b
 8004210:	012c010e 	.word	0x012c010e
 8004214:	ff878787 	.word	0xff878787
 8004218:	ff0099cc 	.word	0xff0099cc
 800421c:	ff006699 	.word	0xff006699
 8004220:	ff003366 	.word	0xff003366
 8004224:	0802958c 	.word	0x0802958c
 8004228:	ff0a0a0a 	.word	0xff0a0a0a
        text.setPosition(x, y, width, height);
 800422c:	2214      	movs	r2, #20
 800422e:	4629      	mov	r1, r5
 8004230:	4633      	mov	r3, r6
 8004232:	f504 70ca 	add.w	r0, r4, #404	; 0x194
 8004236:	9600      	str	r6, [sp, #0]
 8004238:	f7fe fc3a 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 800423c:	4baa      	ldr	r3, [pc, #680]	; (80044e8 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x66c>)
        handlePressedUpdated();
 800423e:	4640      	mov	r0, r8
        colorPressed = newColorPressed;
 8004240:	e9c4 3374 	strd	r3, r3, [r4, #464]	; 0x1d0
        handlePressedUpdated();
 8004244:	f7fe fadf 	bl	8002806 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonClose.setPosition(196, 228, 60, 60);
 8004248:	4633      	mov	r3, r6
 800424a:	22e4      	movs	r2, #228	; 0xe4
 800424c:	21c4      	movs	r1, #196	; 0xc4
 800424e:	4640      	mov	r0, r8
 8004250:	9600      	str	r6, [sp, #0]
 8004252:	f7fe fc2d 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004256:	9b02      	ldr	r3, [sp, #8]
 8004258:	f8c4 314c 	str.w	r3, [r4, #332]	; 0x14c
    textArea1.setPosition(13, 14, 200, 25);
 800425c:	2319      	movs	r3, #25
 800425e:	9300      	str	r3, [sp, #0]
 8004260:	220e      	movs	r2, #14
 8004262:	23c8      	movs	r3, #200	; 0xc8
 8004264:	210d      	movs	r1, #13
 8004266:	4650      	mov	r0, sl
 8004268:	f7fe fc22 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 800426c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004270:	f8c4 3208 	str.w	r3, [r4, #520]	; 0x208
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4UB8).getText());
 8004274:	f604 73c4 	addw	r3, r4, #4036	; 0xfc4
 8004278:	9303      	str	r3, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800427a:	4b9c      	ldr	r3, [pc, #624]	; (80044ec <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x670>)
        linespace = space;
 800427c:	f8a4 520c 	strh.w	r5, [r4, #524]	; 0x20c
 8004280:	681b      	ldr	r3, [r3, #0]
 8004282:	b92b      	cbnz	r3, 8004290 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x414>
 8004284:	4b9a      	ldr	r3, [pc, #616]	; (80044f0 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x674>)
 8004286:	4a9b      	ldr	r2, [pc, #620]	; (80044f4 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x678>)
 8004288:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800428a:	489b      	ldr	r0, [pc, #620]	; (80044f8 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x67c>)
 800428c:	f023 fa78 	bl	8027780 <__assert_func>
 8004290:	4b9a      	ldr	r3, [pc, #616]	; (80044fc <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x680>)
 8004292:	881b      	ldrh	r3, [r3, #0]
 8004294:	2b1a      	cmp	r3, #26
 8004296:	d803      	bhi.n	80042a0 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x424>
 8004298:	4b99      	ldr	r3, [pc, #612]	; (8004500 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x684>)
 800429a:	4a96      	ldr	r2, [pc, #600]	; (80044f4 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x678>)
 800429c:	21af      	movs	r1, #175	; 0xaf
 800429e:	e7f4      	b.n	800428a <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x40e>
        return texts->getText(typedTextId);
 80042a0:	4b98      	ldr	r3, [pc, #608]	; (8004504 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x688>)
 80042a2:	211a      	movs	r1, #26
 80042a4:	6818      	ldr	r0, [r3, #0]
 80042a6:	f004 fcaf 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 80042aa:	4a97      	ldr	r2, [pc, #604]	; (8004508 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x68c>)
 80042ac:	4603      	mov	r3, r0
 80042ae:	210a      	movs	r1, #10
 80042b0:	9803      	ldr	r0, [sp, #12]
 80042b2:	f016 ff0b 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wildcard = value;
 80042b6:	9b03      	ldr	r3, [sp, #12]
 80042b8:	f8c4 3214 	str.w	r3, [r4, #532]	; 0x214
        : typedTextId(id)
 80042bc:	f04f 0219 	mov.w	r2, #25
 80042c0:	4b92      	ldr	r3, [pc, #584]	; (800450c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x690>)
 80042c2:	930e      	str	r3, [sp, #56]	; 0x38
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z4JY));
 80042c4:	a90e      	add	r1, sp, #56	; 0x38
 80042c6:	4650      	mov	r0, sl
 80042c8:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 80042cc:	f010 fe67 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    customContainerButton_key1.setXY(13, 45);
 80042d0:	ee18 0a10 	vmov	r0, s16
 80042d4:	222d      	movs	r2, #45	; 0x2d
 80042d6:	210d      	movs	r1, #13
 80042d8:	f7fe f916 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
    customContainerButton_key1.setTriggerButton_keyCallback(customContainerButton_key1TriggerButton_keyCallback);
 80042dc:	f604 73e8 	addw	r3, r4, #4072	; 0xfe8
    customContainerButton_key2.setXY(74, 45);
 80042e0:	ee18 0a90 	vmov	r0, s17
 80042e4:	f8c4 3328 	str.w	r3, [r4, #808]	; 0x328
 80042e8:	222d      	movs	r2, #45	; 0x2d
 80042ea:	214a      	movs	r1, #74	; 0x4a
 80042ec:	f7fe f90c 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
    customContainerButton_key2.setTriggerButton_keyCallback(customContainerButton_key2TriggerButton_keyCallback);
 80042f0:	f604 73f8 	addw	r3, r4, #4088	; 0xff8
 80042f4:	f8c4 343c 	str.w	r3, [r4, #1084]	; 0x43c
    customContainerButton_key3.setXY(135, 45);
 80042f8:	ee19 0a10 	vmov	r0, s18
 80042fc:	222d      	movs	r2, #45	; 0x2d
 80042fe:	2187      	movs	r1, #135	; 0x87
 8004300:	f7fe f902 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 8004304:	9a04      	ldr	r2, [sp, #16]
 8004306:	f8c4 2550 	str.w	r2, [r4, #1360]	; 0x550
    customContainerButton_key4.setXY(13, 106);
 800430a:	ee19 0a90 	vmov	r0, s19
 800430e:	226a      	movs	r2, #106	; 0x6a
 8004310:	210d      	movs	r1, #13
 8004312:	f7fe f8f9 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 8004316:	9a05      	ldr	r2, [sp, #20]
 8004318:	f8c4 2664 	str.w	r2, [r4, #1636]	; 0x664
    customContainerButton_key5.setXY(74, 106);
 800431c:	ee1a 0a10 	vmov	r0, s20
 8004320:	226a      	movs	r2, #106	; 0x6a
 8004322:	214a      	movs	r1, #74	; 0x4a
 8004324:	f7fe f8f0 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 8004328:	9a06      	ldr	r2, [sp, #24]
 800432a:	f8c4 2778 	str.w	r2, [r4, #1912]	; 0x778
    customContainerButton_key6.setXY(135, 106);
 800432e:	ee1a 0a90 	vmov	r0, s21
 8004332:	226a      	movs	r2, #106	; 0x6a
 8004334:	2187      	movs	r1, #135	; 0x87
 8004336:	f7fe f8e7 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 800433a:	9a07      	ldr	r2, [sp, #28]
 800433c:	f8c4 288c 	str.w	r2, [r4, #2188]	; 0x88c
    customContainerButton_key7.setXY(13, 167);
 8004340:	ee1b 0a10 	vmov	r0, s22
 8004344:	22a7      	movs	r2, #167	; 0xa7
 8004346:	210d      	movs	r1, #13
 8004348:	f7fe f8de 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 800434c:	9a08      	ldr	r2, [sp, #32]
 800434e:	f8c4 29a0 	str.w	r2, [r4, #2464]	; 0x9a0
    customContainerButton_key8.setXY(74, 167);
 8004352:	ee1b 0a90 	vmov	r0, s23
 8004356:	22a7      	movs	r2, #167	; 0xa7
 8004358:	214a      	movs	r1, #74	; 0x4a
 800435a:	f7fe f8d5 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 800435e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004360:	f8c4 2ab4 	str.w	r2, [r4, #2740]	; 0xab4
    customContainerButton_key9.setXY(135, 167);
 8004364:	ee1c 0a10 	vmov	r0, s24
 8004368:	22a7      	movs	r2, #167	; 0xa7
 800436a:	2187      	movs	r1, #135	; 0x87
 800436c:	f7fe f8cc 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 8004370:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004372:	f8c4 2bc8 	str.w	r2, [r4, #3016]	; 0xbc8
    customContainerButton_key10.setXY(13, 228);
 8004376:	ee1c 0a90 	vmov	r0, s25
 800437a:	22e4      	movs	r2, #228	; 0xe4
 800437c:	210d      	movs	r1, #13
 800437e:	f7fe f8c3 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 8004382:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004384:	f8c4 2cdc 	str.w	r2, [r4, #3292]	; 0xcdc
    customContainerButton_key11.setXY(74, 228);
 8004388:	ee1d 0a10 	vmov	r0, s26
 800438c:	22e4      	movs	r2, #228	; 0xe4
 800438e:	214a      	movs	r1, #74	; 0x4a
 8004390:	f7fe f8ba 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 8004394:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004396:	f8c4 2df0 	str.w	r2, [r4, #3568]	; 0xdf0
    customContainerButton_key12.setXY(135, 228);
 800439a:	ee1d 0a90 	vmov	r0, s27
 800439e:	22e4      	movs	r2, #228	; 0xe4
 80043a0:	2187      	movs	r1, #135	; 0x87
 80043a2:	f7fe f8b1 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 80043a6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80043a8:	f8c4 2f04 	str.w	r2, [r4, #3844]	; 0xf04
        borderBox.setPosition(x, y, width, height);
 80043ac:	4629      	mov	r1, r5
 80043ae:	4633      	mov	r3, r6
 80043b0:	462a      	mov	r2, r5
 80043b2:	f604 703c 	addw	r0, r4, #3900	; 0xf3c
 80043b6:	9600      	str	r6, [sp, #0]
 80043b8:	f7fe fb7a 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80043bc:	f04f 0201 	mov.w	r2, #1
 80043c0:	f8a4 2f6c 	strh.w	r2, [r4, #3948]	; 0xf6c
        up = colorReleased;
 80043c4:	4a52      	ldr	r2, [pc, #328]	; (8004510 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x694>)
 80043c6:	f8c4 2f70 	str.w	r2, [r4, #3952]	; 0xf70
        down = colorPressed;
 80043ca:	f502 524c 	add.w	r2, r2, #13056	; 0x3300
 80043ce:	3233      	adds	r2, #51	; 0x33
 80043d0:	f8c4 2f74 	str.w	r2, [r4, #3956]	; 0xf74
        borderUp = borderColorReleased;
 80043d4:	f5a2 42cc 	sub.w	r2, r2, #26112	; 0x6600
 80043d8:	3a66      	subs	r2, #102	; 0x66
        handlePressedUpdated();
 80043da:	f8d4 3f08 	ldr.w	r3, [r4, #3848]	; 0xf08
        borderUp = borderColorReleased;
 80043de:	f8c4 2f78 	str.w	r2, [r4, #3960]	; 0xf78
        borderDown = borderColorPressed;
 80043e2:	f102 1233 	add.w	r2, r2, #3342387	; 0x330033
 80043e6:	f502 524c 	add.w	r2, r2, #13056	; 0x3300
 80043ea:	f8c4 2f7c 	str.w	r2, [r4, #3964]	; 0xf7c
        handlePressedUpdated();
 80043ee:	4638      	mov	r0, r7
 80043f0:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80043f4:	4798      	blx	r3
 80043f6:	4b45      	ldr	r3, [pc, #276]	; (800450c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x690>)
 80043f8:	930e      	str	r3, [sp, #56]	; 0x38
    flexButton_del_pre.setText(TypedText(T___SINGLEUSE_TS12));
 80043fa:	a90e      	add	r1, sp, #56	; 0x38
 80043fc:	2316      	movs	r3, #22
 80043fe:	4638      	mov	r0, r7
 8004400:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8004404:	f7fe fb9c 	bl	8002b40 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8004408:	4629      	mov	r1, r5
 800440a:	4633      	mov	r3, r6
 800440c:	2214      	movs	r2, #20
 800440e:	f504 6078 	add.w	r0, r4, #3968	; 0xf80
 8004412:	9600      	str	r6, [sp, #0]
 8004414:	f7fe fb4c 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8004418:	4b33      	ldr	r3, [pc, #204]	; (80044e8 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x66c>)
 800441a:	f8c4 3fbc 	str.w	r3, [r4, #4028]	; 0xfbc
        colorPressed = newColorPressed;
 800441e:	f8c4 3fc0 	str.w	r3, [r4, #4032]	; 0xfc0
        handlePressedUpdated();
 8004422:	4638      	mov	r0, r7
 8004424:	f7fe f9ef 	bl	8002806 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_del_pre.setPosition(196, 45, 60, 60);
 8004428:	222d      	movs	r2, #45	; 0x2d
 800442a:	4633      	mov	r3, r6
 800442c:	4638      	mov	r0, r7
 800442e:	9600      	str	r6, [sp, #0]
 8004430:	21c4      	movs	r1, #196	; 0xc4
 8004432:	f7fe fb3d 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004436:	9b02      	ldr	r3, [sp, #8]
 8004438:	f8c4 3f38 	str.w	r3, [r4, #3896]	; 0xf38
    add(boxWithBorder1);
 800443c:	4659      	mov	r1, fp
 800443e:	4620      	mov	r0, r4
 8004440:	f00f f816 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButtonEnter);
 8004444:	4649      	mov	r1, r9
 8004446:	4620      	mov	r0, r4
 8004448:	f00f f812 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButtonClose);
 800444c:	4641      	mov	r1, r8
 800444e:	4620      	mov	r0, r4
 8004450:	f00f f80e 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textArea1);
 8004454:	4651      	mov	r1, sl
 8004456:	4620      	mov	r0, r4
 8004458:	f00f f80a 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key1);
 800445c:	ee18 1a10 	vmov	r1, s16
 8004460:	4620      	mov	r0, r4
 8004462:	f00f f805 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key2);
 8004466:	ee18 1a90 	vmov	r1, s17
 800446a:	4620      	mov	r0, r4
 800446c:	f00f f800 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key3);
 8004470:	ee19 1a10 	vmov	r1, s18
 8004474:	4620      	mov	r0, r4
 8004476:	f00e fffb 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key4);
 800447a:	ee19 1a90 	vmov	r1, s19
 800447e:	4620      	mov	r0, r4
 8004480:	f00e fff6 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key5);
 8004484:	ee1a 1a10 	vmov	r1, s20
 8004488:	4620      	mov	r0, r4
 800448a:	f00e fff1 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key6);
 800448e:	ee1a 1a90 	vmov	r1, s21
 8004492:	4620      	mov	r0, r4
 8004494:	f00e ffec 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key7);
 8004498:	ee1b 1a10 	vmov	r1, s22
 800449c:	4620      	mov	r0, r4
 800449e:	f00e ffe7 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key8);
 80044a2:	ee1b 1a90 	vmov	r1, s23
 80044a6:	4620      	mov	r0, r4
 80044a8:	f00e ffe2 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key9);
 80044ac:	ee1c 1a10 	vmov	r1, s24
 80044b0:	4620      	mov	r0, r4
 80044b2:	f00e ffdd 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key10);
 80044b6:	ee1c 1a90 	vmov	r1, s25
 80044ba:	4620      	mov	r0, r4
 80044bc:	f00e ffd8 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key11);
 80044c0:	ee1d 1a10 	vmov	r1, s26
 80044c4:	4620      	mov	r0, r4
 80044c6:	f00e ffd3 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key12);
 80044ca:	ee1d 1a90 	vmov	r1, s27
 80044ce:	4620      	mov	r0, r4
 80044d0:	f00e ffce 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_del_pre);
 80044d4:	4620      	mov	r0, r4
 80044d6:	4639      	mov	r1, r7
 80044d8:	f00e ffca 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80044dc:	4620      	mov	r0, r4
 80044de:	b011      	add	sp, #68	; 0x44
 80044e0:	ecbd 8b0c 	vpop	{d8-d13}
 80044e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80044e8:	ff0a0a0a 	.word	0xff0a0a0a
 80044ec:	2002bd84 	.word	0x2002bd84
 80044f0:	08029478 	.word	0x08029478
 80044f4:	080294ba 	.word	0x080294ba
 80044f8:	080294e8 	.word	0x080294e8
 80044fc:	2002bd88 	.word	0x2002bd88
 8004500:	0802952f 	.word	0x0802952f
 8004504:	2002bd90 	.word	0x2002bd90
 8004508:	08029581 	.word	0x08029581
 800450c:	0802958c 	.word	0x0802958c
 8004510:	ff006699 	.word	0xff006699

08004514 <_ZN27CustomContainerTableLogBaseD1Ev>:

class CustomContainerTableLogBase : public touchgfx::Container
{
public:
    CustomContainerTableLogBase();
    virtual ~CustomContainerTableLogBase() {}
 8004514:	4770      	bx	lr

08004516 <_ZN27CustomContainerTableLogBase10initializeEv>:
}

void CustomContainerTableLogBase::initialize()
{

}
 8004516:	4770      	bx	lr

08004518 <_ZN27CustomContainerTableLogBaseD0Ev>:
 8004518:	b510      	push	{r4, lr}
 800451a:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 800451e:	4604      	mov	r4, r0
 8004520:	f023 f900 	bl	8027724 <_ZdlPvj>
 8004524:	4620      	mov	r0, r4
 8004526:	bd10      	pop	{r4, pc}

08004528 <_ZN8touchgfx13BoxWithBorderC1Ev>:
    BoxWithBorder()
 8004528:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 800452a:	2226      	movs	r2, #38	; 0x26
 800452c:	4604      	mov	r4, r0
 800452e:	2100      	movs	r1, #0
 8004530:	f023 fad4 	bl	8027adc <memset>
 8004534:	4620      	mov	r0, r4
 8004536:	f7fd ffd5 	bl	80024e4 <_ZN8touchgfx8DrawableC1Ev>
 800453a:	23ff      	movs	r3, #255	; 0xff
        : Box(), borderColor(0), borderSize(0)
 800453c:	4a04      	ldr	r2, [pc, #16]	; (8004550 <_ZN8touchgfx13BoxWithBorderC1Ev+0x28>)
 800453e:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
 8004542:	2300      	movs	r3, #0
 8004544:	62a3      	str	r3, [r4, #40]	; 0x28
 8004546:	6022      	str	r2, [r4, #0]
 8004548:	62e3      	str	r3, [r4, #44]	; 0x2c
 800454a:	8623      	strh	r3, [r4, #48]	; 0x30
    }
 800454c:	4620      	mov	r0, r4
 800454e:	bd10      	pop	{r4, pc}
 8004550:	0802c4c8 	.word	0x0802c4c8

08004554 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8004554:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8004556:	2226      	movs	r2, #38	; 0x26
 8004558:	4604      	mov	r4, r0
 800455a:	2100      	movs	r1, #0
 800455c:	f023 fabe 	bl	8027adc <memset>
 8004560:	4620      	mov	r0, r4
 8004562:	f7fd ffbf 	bl	80024e4 <_ZN8touchgfx8DrawableC1Ev>
 8004566:	4b08      	ldr	r3, [pc, #32]	; (8004588 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x34>)
 8004568:	62a3      	str	r3, [r4, #40]	; 0x28
 800456a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800456e:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8004570:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8004574:	2300      	movs	r3, #0
 8004576:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : TextArea(), wildcard(0)
 800457a:	4a04      	ldr	r2, [pc, #16]	; (800458c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x38>)
 800457c:	8723      	strh	r3, [r4, #56]	; 0x38
 800457e:	6022      	str	r2, [r4, #0]
 8004580:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8004582:	4620      	mov	r0, r4
 8004584:	bd10      	pop	{r4, pc}
 8004586:	bf00      	nop
 8004588:	0802958c 	.word	0x0802958c
 800458c:	0802c3a8 	.word	0x0802c3a8

08004590 <_ZN27CustomContainerTableLogBaseC1Ev>:
CustomContainerTableLogBase::CustomContainerTableLogBase()
 8004590:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004594:	ed2d 8b10 	vpush	{d8-d15}
 8004598:	4604      	mov	r4, r0
 800459a:	b087      	sub	sp, #28
 800459c:	f7fd ffa2 	bl	80024e4 <_ZN8touchgfx8DrawableC1Ev>
 80045a0:	4622      	mov	r2, r4
 80045a2:	2500      	movs	r5, #0
 80045a4:	4b8e      	ldr	r3, [pc, #568]	; (80047e0 <_ZN27CustomContainerTableLogBaseC1Ev+0x250>)
 80045a6:	62a5      	str	r5, [r4, #40]	; 0x28
 80045a8:	f842 3b2c 	str.w	r3, [r2], #44
 80045ac:	4610      	mov	r0, r2
 80045ae:	ee08 2a10 	vmov	s16, r2
 80045b2:	f7ff ffb9 	bl	8004528 <_ZN8touchgfx13BoxWithBorderC1Ev>
 80045b6:	f104 0360 	add.w	r3, r4, #96	; 0x60
 80045ba:	4618      	mov	r0, r3
 80045bc:	ee0d 3a10 	vmov	s26, r3
 80045c0:	f7ff ffb2 	bl	8004528 <_ZN8touchgfx13BoxWithBorderC1Ev>
 80045c4:	f104 0394 	add.w	r3, r4, #148	; 0x94
 80045c8:	4618      	mov	r0, r3
 80045ca:	ee0d 3a90 	vmov	s27, r3
 80045ce:	f7ff ffab 	bl	8004528 <_ZN8touchgfx13BoxWithBorderC1Ev>
 80045d2:	f104 03c8 	add.w	r3, r4, #200	; 0xc8
 80045d6:	4618      	mov	r0, r3
 80045d8:	ee0e 3a10 	vmov	s28, r3
 80045dc:	f7ff ffa4 	bl	8004528 <_ZN8touchgfx13BoxWithBorderC1Ev>
 80045e0:	f104 03fc 	add.w	r3, r4, #252	; 0xfc
 80045e4:	4618      	mov	r0, r3
 80045e6:	ee0e 3a90 	vmov	s29, r3
 80045ea:	f7ff ff9d 	bl	8004528 <_ZN8touchgfx13BoxWithBorderC1Ev>
 80045ee:	f504 7398 	add.w	r3, r4, #304	; 0x130
 80045f2:	4618      	mov	r0, r3
 80045f4:	ee0f 3a10 	vmov	s30, r3
 80045f8:	f7ff ff96 	bl	8004528 <_ZN8touchgfx13BoxWithBorderC1Ev>
 80045fc:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 8004600:	4618      	mov	r0, r3
 8004602:	ee0f 3a90 	vmov	s31, r3
 8004606:	f7ff ff8f 	bl	8004528 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800460a:	f504 73cc 	add.w	r3, r4, #408	; 0x198
 800460e:	4618      	mov	r0, r3
 8004610:	9302      	str	r3, [sp, #8]
 8004612:	f7ff ff89 	bl	8004528 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8004616:	f504 73e6 	add.w	r3, r4, #460	; 0x1cc
 800461a:	4618      	mov	r0, r3
 800461c:	9303      	str	r3, [sp, #12]
 800461e:	f7ff ff83 	bl	8004528 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8004622:	f504 7300 	add.w	r3, r4, #512	; 0x200
 8004626:	4618      	mov	r0, r3
 8004628:	ee08 3a90 	vmov	s17, r3
 800462c:	f7ff ff92 	bl	8004554 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004630:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8004634:	4618      	mov	r0, r3
 8004636:	ee09 3a10 	vmov	s18, r3
 800463a:	f7ff ff8b 	bl	8004554 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800463e:	f504 7320 	add.w	r3, r4, #640	; 0x280
 8004642:	4618      	mov	r0, r3
 8004644:	ee09 3a90 	vmov	s19, r3
 8004648:	f7ff ff84 	bl	8004554 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800464c:	f504 7330 	add.w	r3, r4, #704	; 0x2c0
 8004650:	4618      	mov	r0, r3
 8004652:	ee0a 3a10 	vmov	s20, r3
 8004656:	f7ff ff7d 	bl	8004554 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800465a:	f504 7340 	add.w	r3, r4, #768	; 0x300
 800465e:	4618      	mov	r0, r3
 8004660:	ee0a 3a90 	vmov	s21, r3
 8004664:	f7ff ff76 	bl	8004554 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004668:	f504 7350 	add.w	r3, r4, #832	; 0x340
 800466c:	4618      	mov	r0, r3
 800466e:	ee0b 3a10 	vmov	s22, r3
 8004672:	f7ff ff6f 	bl	8004554 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004676:	f504 7360 	add.w	r3, r4, #896	; 0x380
 800467a:	4618      	mov	r0, r3
 800467c:	ee0b 3a90 	vmov	s23, r3
 8004680:	f7ff ff68 	bl	8004554 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004684:	f504 7370 	add.w	r3, r4, #960	; 0x3c0
 8004688:	4618      	mov	r0, r3
 800468a:	ee0c 3a10 	vmov	s24, r3
 800468e:	f7ff ff61 	bl	8004554 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004692:	f504 6380 	add.w	r3, r4, #1024	; 0x400
 8004696:	4618      	mov	r0, r3
    boxWithBorderDataTime.setPosition(0, 0, 150, 20);
 8004698:	2714      	movs	r7, #20
CustomContainerTableLogBase::CustomContainerTableLogBase()
 800469a:	ee0c 3a90 	vmov	s25, r3
 800469e:	f7ff ff59 	bl	8004554 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80046a2:	4b50      	ldr	r3, [pc, #320]	; (80047e4 <_ZN27CustomContainerTableLogBaseC1Ev+0x254>)
 80046a4:	60a3      	str	r3, [r4, #8]
        borderColor = color;
 80046a6:	f04f 39ff 	mov.w	r9, #4294967295
        borderSize = size;
 80046aa:	f04f 0801 	mov.w	r8, #1
        borderColor = color;
 80046ae:	f04f 467f 	mov.w	r6, #4278190080	; 0xff000000
    boxWithBorderDataTime.setPosition(0, 0, 150, 20);
 80046b2:	ee18 0a10 	vmov	r0, s16
 80046b6:	2396      	movs	r3, #150	; 0x96
 80046b8:	462a      	mov	r2, r5
 80046ba:	4629      	mov	r1, r5
 80046bc:	9700      	str	r7, [sp, #0]
 80046be:	f7fe f9f7 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80046c2:	e9c4 9615 	strd	r9, r6, [r4, #84]	; 0x54
    boxWithBorderChan.setPosition(150, 0, 50, 20);
 80046c6:	ee1d 0a10 	vmov	r0, s26
 80046ca:	2332      	movs	r3, #50	; 0x32
 80046cc:	462a      	mov	r2, r5
 80046ce:	2196      	movs	r1, #150	; 0x96
        borderSize = size;
 80046d0:	f8a4 805c 	strh.w	r8, [r4, #92]	; 0x5c
 80046d4:	9700      	str	r7, [sp, #0]
 80046d6:	f7fe f9eb 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 80046da:	e9c4 9622 	strd	r9, r6, [r4, #136]	; 0x88
    boxWithBorderTypeChan.setPosition(200, 0, 100, 20);
 80046de:	ee1d 0a90 	vmov	r0, s27
 80046e2:	2364      	movs	r3, #100	; 0x64
 80046e4:	462a      	mov	r2, r5
 80046e6:	21c8      	movs	r1, #200	; 0xc8
        borderSize = size;
 80046e8:	f8a4 8090 	strh.w	r8, [r4, #144]	; 0x90
 80046ec:	9700      	str	r7, [sp, #0]
 80046ee:	f7fe f9df 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 80046f2:	e9c4 962f 	strd	r9, r6, [r4, #188]	; 0xbc
    boxWithBorderStLoop.setPosition(300, 0, 100, 20);
 80046f6:	ee1e 0a10 	vmov	r0, s28
 80046fa:	2364      	movs	r3, #100	; 0x64
 80046fc:	462a      	mov	r2, r5
 80046fe:	f44f 7196 	mov.w	r1, #300	; 0x12c
        borderSize = size;
 8004702:	f8a4 80c4 	strh.w	r8, [r4, #196]	; 0xc4
 8004706:	9700      	str	r7, [sp, #0]
 8004708:	f7fe f9d2 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 800470c:	e9c4 963c 	strd	r9, r6, [r4, #240]	; 0xf0
    boxWithBorderConc.setPosition(400, 0, 50, 20);
 8004710:	ee1e 0a90 	vmov	r0, s29
 8004714:	2332      	movs	r3, #50	; 0x32
 8004716:	462a      	mov	r2, r5
 8004718:	f44f 71c8 	mov.w	r1, #400	; 0x190
        borderSize = size;
 800471c:	f8a4 80f8 	strh.w	r8, [r4, #248]	; 0xf8
 8004720:	9700      	str	r7, [sp, #0]
 8004722:	f7fe f9c5 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 8004726:	e9c4 9649 	strd	r9, r6, [r4, #292]	; 0x124
    boxWithBorderUnit.setPosition(450, 0, 70, 20);
 800472a:	ee1f 0a10 	vmov	r0, s30
 800472e:	2346      	movs	r3, #70	; 0x46
 8004730:	462a      	mov	r2, r5
 8004732:	f44f 71e1 	mov.w	r1, #450	; 0x1c2
        borderSize = size;
 8004736:	f8a4 812c 	strh.w	r8, [r4, #300]	; 0x12c
 800473a:	9700      	str	r7, [sp, #0]
 800473c:	f7fe f9b8 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 8004740:	e9c4 9656 	strd	r9, r6, [r4, #344]	; 0x158
    boxWithBorderStCur.setPosition(520, 0, 80, 20);
 8004744:	ee1f 0a90 	vmov	r0, s31
 8004748:	2350      	movs	r3, #80	; 0x50
 800474a:	462a      	mov	r2, r5
 800474c:	f44f 7102 	mov.w	r1, #520	; 0x208
        borderSize = size;
 8004750:	f8a4 8160 	strh.w	r8, [r4, #352]	; 0x160
 8004754:	9700      	str	r7, [sp, #0]
 8004756:	f7fe f9ab 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 800475a:	e9c4 9663 	strd	r9, r6, [r4, #396]	; 0x18c
    boxWithBorderErr.setPosition(600, 0, 50, 20);
 800475e:	9802      	ldr	r0, [sp, #8]
        borderSize = size;
 8004760:	f8a4 8194 	strh.w	r8, [r4, #404]	; 0x194
 8004764:	2332      	movs	r3, #50	; 0x32
 8004766:	462a      	mov	r2, r5
 8004768:	f44f 7116 	mov.w	r1, #600	; 0x258
 800476c:	9700      	str	r7, [sp, #0]
 800476e:	f7fe f99f 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    textAreaDataTime.setPosition(0, 0, 150, 19);
 8004772:	f04f 0a13 	mov.w	sl, #19
        borderColor = color;
 8004776:	e9c4 9670 	strd	r9, r6, [r4, #448]	; 0x1c0
    boxWithBorderGas.setPosition(650, 0, 100, 20);
 800477a:	9803      	ldr	r0, [sp, #12]
        borderSize = size;
 800477c:	f8a4 81c8 	strh.w	r8, [r4, #456]	; 0x1c8
 8004780:	2364      	movs	r3, #100	; 0x64
 8004782:	462a      	mov	r2, r5
 8004784:	f240 218a 	movw	r1, #650	; 0x28a
 8004788:	9700      	str	r7, [sp, #0]
 800478a:	f7fe f991 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 800478e:	e9c4 967d 	strd	r9, r6, [r4, #500]	; 0x1f4
    textAreaDataTime.setPosition(0, 0, 150, 19);
 8004792:	2396      	movs	r3, #150	; 0x96
 8004794:	ee18 0a90 	vmov	r0, s17
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004798:	f8df 9060 	ldr.w	r9, [pc, #96]	; 80047fc <_ZN27CustomContainerTableLogBaseC1Ev+0x26c>
        borderSize = size;
 800479c:	f8a4 81fc 	strh.w	r8, [r4, #508]	; 0x1fc
 80047a0:	f8cd a000 	str.w	sl, [sp]
 80047a4:	462a      	mov	r2, r5
 80047a6:	4629      	mov	r1, r5
 80047a8:	f7fe f982 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 80047ac:	4b0e      	ldr	r3, [pc, #56]	; (80047e8 <_ZN27CustomContainerTableLogBaseC1Ev+0x258>)
 80047ae:	f8c4 3230 	str.w	r3, [r4, #560]	; 0x230
 80047b2:	f8d9 3000 	ldr.w	r3, [r9]
        linespace = space;
 80047b6:	f8a4 8234 	strh.w	r8, [r4, #564]	; 0x234
    Unicode::snprintf(textAreaDataTimeBuffer, TEXTAREADATATIME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_WIXH).getText());
 80047ba:	f504 6b88 	add.w	fp, r4, #1088	; 0x440
 80047be:	b92b      	cbnz	r3, 80047cc <_ZN27CustomContainerTableLogBaseC1Ev+0x23c>
 80047c0:	4b0a      	ldr	r3, [pc, #40]	; (80047ec <_ZN27CustomContainerTableLogBaseC1Ev+0x25c>)
 80047c2:	4a0b      	ldr	r2, [pc, #44]	; (80047f0 <_ZN27CustomContainerTableLogBaseC1Ev+0x260>)
 80047c4:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80047c6:	480b      	ldr	r0, [pc, #44]	; (80047f4 <_ZN27CustomContainerTableLogBaseC1Ev+0x264>)
 80047c8:	f022 ffda 	bl	8027780 <__assert_func>
 80047cc:	f8df 8030 	ldr.w	r8, [pc, #48]	; 8004800 <_ZN27CustomContainerTableLogBaseC1Ev+0x270>
 80047d0:	f8b8 3000 	ldrh.w	r3, [r8]
 80047d4:	2b24      	cmp	r3, #36	; 0x24
 80047d6:	d815      	bhi.n	8004804 <_ZN27CustomContainerTableLogBaseC1Ev+0x274>
 80047d8:	4b07      	ldr	r3, [pc, #28]	; (80047f8 <_ZN27CustomContainerTableLogBaseC1Ev+0x268>)
 80047da:	4a05      	ldr	r2, [pc, #20]	; (80047f0 <_ZN27CustomContainerTableLogBaseC1Ev+0x260>)
 80047dc:	21af      	movs	r1, #175	; 0xaf
 80047de:	e7f2      	b.n	80047c6 <_ZN27CustomContainerTableLogBaseC1Ev+0x236>
 80047e0:	080299d4 	.word	0x080299d4
 80047e4:	001402ee 	.word	0x001402ee
 80047e8:	ff030202 	.word	0xff030202
 80047ec:	08029478 	.word	0x08029478
 80047f0:	080294ba 	.word	0x080294ba
 80047f4:	080294e8 	.word	0x080294e8
 80047f8:	0802952f 	.word	0x0802952f
 80047fc:	2002bd84 	.word	0x2002bd84
 8004800:	2002bd88 	.word	0x2002bd88
        return texts->getText(typedTextId);
 8004804:	4be2      	ldr	r3, [pc, #904]	; (8004b90 <_ZN27CustomContainerTableLogBaseC1Ev+0x600>)
 8004806:	2124      	movs	r1, #36	; 0x24
 8004808:	6818      	ldr	r0, [r3, #0]
 800480a:	f004 f9fd 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 800480e:	4ae1      	ldr	r2, [pc, #900]	; (8004b94 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 8004810:	4603      	mov	r3, r0
 8004812:	4639      	mov	r1, r7
 8004814:	4658      	mov	r0, fp
 8004816:	f016 fc59 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800481a:	4fdf      	ldr	r7, [pc, #892]	; (8004b98 <_ZN27CustomContainerTableLogBaseC1Ev+0x608>)
        wildcard = value;
 800481c:	f8c4 b23c 	str.w	fp, [r4, #572]	; 0x23c
 8004820:	2323      	movs	r3, #35	; 0x23
    textAreaDataTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LBEI));
 8004822:	ee18 0a90 	vmov	r0, s17
 8004826:	a904      	add	r1, sp, #16
 8004828:	f8ad 3014 	strh.w	r3, [sp, #20]
 800482c:	9704      	str	r7, [sp, #16]
 800482e:	f010 fbb6 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaNumChan.setPosition(150, 0, 50, 19);
 8004832:	2332      	movs	r3, #50	; 0x32
 8004834:	ee19 0a10 	vmov	r0, s18
 8004838:	f8cd a000 	str.w	sl, [sp]
 800483c:	462a      	mov	r2, r5
 800483e:	2196      	movs	r1, #150	; 0x96
 8004840:	f7fe f936 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004844:	f8d9 3000 	ldr.w	r3, [r9]
        this->color = color;
 8004848:	f8c4 6270 	str.w	r6, [r4, #624]	; 0x270
        linespace = space;
 800484c:	f8a4 5274 	strh.w	r5, [r4, #628]	; 0x274
    Unicode::snprintf(textAreaNumChanBuffer, TEXTAREANUMCHAN_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_53KN).getText());
 8004850:	f504 6b8d 	add.w	fp, r4, #1128	; 0x468
 8004854:	2b00      	cmp	r3, #0
 8004856:	d0b3      	beq.n	80047c0 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004858:	f8b8 3000 	ldrh.w	r3, [r8]
 800485c:	2b22      	cmp	r3, #34	; 0x22
 800485e:	d9bb      	bls.n	80047d8 <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 8004860:	4bcb      	ldr	r3, [pc, #812]	; (8004b90 <_ZN27CustomContainerTableLogBaseC1Ev+0x600>)
 8004862:	2122      	movs	r1, #34	; 0x22
 8004864:	6818      	ldr	r0, [r3, #0]
 8004866:	f004 f9cf 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 800486a:	4aca      	ldr	r2, [pc, #808]	; (8004b94 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 800486c:	4603      	mov	r3, r0
 800486e:	2105      	movs	r1, #5
 8004870:	4658      	mov	r0, fp
 8004872:	f016 fc2b 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004876:	2321      	movs	r3, #33	; 0x21
    textAreaNumChan.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L982));
 8004878:	ee19 0a10 	vmov	r0, s18
 800487c:	f8c4 b27c 	str.w	fp, [r4, #636]	; 0x27c
 8004880:	a904      	add	r1, sp, #16
 8004882:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004886:	9704      	str	r7, [sp, #16]
 8004888:	f010 fb89 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaTypeChan.setPosition(200, 0, 100, 19);
 800488c:	2364      	movs	r3, #100	; 0x64
 800488e:	ee19 0a90 	vmov	r0, s19
 8004892:	f8cd a000 	str.w	sl, [sp]
 8004896:	462a      	mov	r2, r5
 8004898:	21c8      	movs	r1, #200	; 0xc8
 800489a:	f7fe f909 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800489e:	f8d9 3000 	ldr.w	r3, [r9]
        this->color = color;
 80048a2:	f8c4 62b0 	str.w	r6, [r4, #688]	; 0x2b0
        linespace = space;
 80048a6:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
    Unicode::snprintf(textAreaTypeChanBuffer, TEXTAREATYPECHAN_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_P13T).getText());
 80048aa:	f204 4b72 	addw	fp, r4, #1138	; 0x472
 80048ae:	2b00      	cmp	r3, #0
 80048b0:	d086      	beq.n	80047c0 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80048b2:	f8b8 3000 	ldrh.w	r3, [r8]
 80048b6:	2b26      	cmp	r3, #38	; 0x26
 80048b8:	d98e      	bls.n	80047d8 <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 80048ba:	4bb5      	ldr	r3, [pc, #724]	; (8004b90 <_ZN27CustomContainerTableLogBaseC1Ev+0x600>)
 80048bc:	2126      	movs	r1, #38	; 0x26
 80048be:	6818      	ldr	r0, [r3, #0]
 80048c0:	f004 f9a2 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 80048c4:	4ab3      	ldr	r2, [pc, #716]	; (8004b94 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 80048c6:	4603      	mov	r3, r0
 80048c8:	210a      	movs	r1, #10
 80048ca:	4658      	mov	r0, fp
 80048cc:	f016 fbfe 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80048d0:	2325      	movs	r3, #37	; 0x25
    textAreaTypeChan.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DOAO));
 80048d2:	ee19 0a90 	vmov	r0, s19
 80048d6:	f8c4 b2bc 	str.w	fp, [r4, #700]	; 0x2bc
 80048da:	a904      	add	r1, sp, #16
 80048dc:	f8ad 3014 	strh.w	r3, [sp, #20]
 80048e0:	9704      	str	r7, [sp, #16]
 80048e2:	f010 fb5c 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaStLoop.setPosition(300, 0, 100, 19);
 80048e6:	2364      	movs	r3, #100	; 0x64
 80048e8:	ee1a 0a10 	vmov	r0, s20
 80048ec:	f8cd a000 	str.w	sl, [sp]
 80048f0:	462a      	mov	r2, r5
 80048f2:	f44f 7196 	mov.w	r1, #300	; 0x12c
 80048f6:	f7fe f8db 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80048fa:	f8d9 3000 	ldr.w	r3, [r9]
        this->color = color;
 80048fe:	f8c4 62f0 	str.w	r6, [r4, #752]	; 0x2f0
        linespace = space;
 8004902:	f8a4 52f4 	strh.w	r5, [r4, #756]	; 0x2f4
    Unicode::snprintf(textAreaStLoopBuffer, TEXTAREASTLOOP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_A188).getText());
 8004906:	f204 4b86 	addw	fp, r4, #1158	; 0x486
 800490a:	2b00      	cmp	r3, #0
 800490c:	f43f af58 	beq.w	80047c0 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004910:	f8b8 3000 	ldrh.w	r3, [r8]
 8004914:	2b28      	cmp	r3, #40	; 0x28
 8004916:	f67f af5f 	bls.w	80047d8 <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 800491a:	4b9d      	ldr	r3, [pc, #628]	; (8004b90 <_ZN27CustomContainerTableLogBaseC1Ev+0x600>)
 800491c:	2128      	movs	r1, #40	; 0x28
 800491e:	6818      	ldr	r0, [r3, #0]
 8004920:	f004 f972 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8004924:	4a9b      	ldr	r2, [pc, #620]	; (8004b94 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 8004926:	4603      	mov	r3, r0
 8004928:	210a      	movs	r1, #10
 800492a:	4658      	mov	r0, fp
 800492c:	f016 fbce 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004930:	2327      	movs	r3, #39	; 0x27
    textAreaStLoop.setTypedText(touchgfx::TypedText(T___SINGLEUSE_I04R));
 8004932:	ee1a 0a10 	vmov	r0, s20
 8004936:	a904      	add	r1, sp, #16
 8004938:	f8c4 b2fc 	str.w	fp, [r4, #764]	; 0x2fc
 800493c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004940:	9704      	str	r7, [sp, #16]
 8004942:	f010 fb2c 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaConc.setPosition(400, 0, 50, 19);
 8004946:	2332      	movs	r3, #50	; 0x32
 8004948:	462a      	mov	r2, r5
 800494a:	ee1a 0a90 	vmov	r0, s21
 800494e:	f8cd a000 	str.w	sl, [sp]
 8004952:	f44f 71c8 	mov.w	r1, #400	; 0x190
 8004956:	f7fe f8ab 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800495a:	f8d9 3000 	ldr.w	r3, [r9]
 800495e:	f8a4 5334 	strh.w	r5, [r4, #820]	; 0x334
        this->color = color;
 8004962:	f8c4 6330 	str.w	r6, [r4, #816]	; 0x330
    Unicode::snprintf(textAreaConcBuffer, TEXTAREACONC_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_QS1C).getText());
 8004966:	f204 459a 	addw	r5, r4, #1178	; 0x49a
 800496a:	2b00      	cmp	r3, #0
 800496c:	f43f af28 	beq.w	80047c0 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004970:	f8b8 3000 	ldrh.w	r3, [r8]
 8004974:	2b2a      	cmp	r3, #42	; 0x2a
 8004976:	f67f af2f 	bls.w	80047d8 <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 800497a:	f8df 9214 	ldr.w	r9, [pc, #532]	; 8004b90 <_ZN27CustomContainerTableLogBaseC1Ev+0x600>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800497e:	f8df 8220 	ldr.w	r8, [pc, #544]	; 8004ba0 <_ZN27CustomContainerTableLogBaseC1Ev+0x610>
        return texts->getText(typedTextId);
 8004982:	f8d9 0000 	ldr.w	r0, [r9]
 8004986:	212a      	movs	r1, #42	; 0x2a
 8004988:	f004 f93e 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 800498c:	4a81      	ldr	r2, [pc, #516]	; (8004b94 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 800498e:	4603      	mov	r3, r0
 8004990:	210a      	movs	r1, #10
 8004992:	4628      	mov	r0, r5
 8004994:	f016 fb9a 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaUnit.setPosition(450, 0, 70, 19);
 8004998:	f04f 0a13 	mov.w	sl, #19
        : typedTextId(id)
 800499c:	2329      	movs	r3, #41	; 0x29
    textAreaConc.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q6FU));
 800499e:	ee1a 0a90 	vmov	r0, s21
 80049a2:	f8c4 533c 	str.w	r5, [r4, #828]	; 0x33c
 80049a6:	a904      	add	r1, sp, #16
 80049a8:	f8ad 3014 	strh.w	r3, [sp, #20]
 80049ac:	9704      	str	r7, [sp, #16]
 80049ae:	f010 faf6 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaUnit.setPosition(450, 0, 70, 19);
 80049b2:	2346      	movs	r3, #70	; 0x46
 80049b4:	ee1b 0a10 	vmov	r0, s22
 80049b8:	f8cd a000 	str.w	sl, [sp]
 80049bc:	2200      	movs	r2, #0
 80049be:	f44f 71e1 	mov.w	r1, #450	; 0x1c2
 80049c2:	f7fe f875 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80049c6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80049ca:	f8c4 3370 	str.w	r3, [r4, #880]	; 0x370
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80049ce:	f8d8 3000 	ldr.w	r3, [r8]
        linespace = space;
 80049d2:	2500      	movs	r5, #0
        : typedTextId(id)
 80049d4:	463e      	mov	r6, r7
 80049d6:	f8a4 5374 	strh.w	r5, [r4, #884]	; 0x374
    Unicode::snprintf(textAreaUnitBuffer, TEXTAREAUNIT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LNEH).getText());
 80049da:	f204 4bae 	addw	fp, r4, #1198	; 0x4ae
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80049de:	2b00      	cmp	r3, #0
 80049e0:	f43f aeee 	beq.w	80047c0 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80049e4:	4f6d      	ldr	r7, [pc, #436]	; (8004b9c <_ZN27CustomContainerTableLogBaseC1Ev+0x60c>)
 80049e6:	883b      	ldrh	r3, [r7, #0]
 80049e8:	2b2c      	cmp	r3, #44	; 0x2c
 80049ea:	f67f aef5 	bls.w	80047d8 <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 80049ee:	212c      	movs	r1, #44	; 0x2c
 80049f0:	f8d9 0000 	ldr.w	r0, [r9]
 80049f4:	f004 f908 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 80049f8:	4a66      	ldr	r2, [pc, #408]	; (8004b94 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 80049fa:	4603      	mov	r3, r0
 80049fc:	210a      	movs	r1, #10
 80049fe:	4658      	mov	r0, fp
 8004a00:	f016 fb64 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004a04:	232b      	movs	r3, #43	; 0x2b
    textAreaUnit.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YDSR));
 8004a06:	ee1b 0a10 	vmov	r0, s22
 8004a0a:	f8c4 b37c 	str.w	fp, [r4, #892]	; 0x37c
 8004a0e:	a904      	add	r1, sp, #16
 8004a10:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004a14:	9604      	str	r6, [sp, #16]
 8004a16:	f010 fac2 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaStCur.setPosition(520, 0, 80, 19);
 8004a1a:	2350      	movs	r3, #80	; 0x50
 8004a1c:	ee1b 0a90 	vmov	r0, s23
 8004a20:	f8cd a000 	str.w	sl, [sp]
 8004a24:	462a      	mov	r2, r5
 8004a26:	f44f 7102 	mov.w	r1, #520	; 0x208
 8004a2a:	f7fe f841 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8004a2e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004a32:	f8c4 33b0 	str.w	r3, [r4, #944]	; 0x3b0
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004a36:	f8d8 3000 	ldr.w	r3, [r8]
        linespace = space;
 8004a3a:	f8a4 53b4 	strh.w	r5, [r4, #948]	; 0x3b4
    Unicode::snprintf(textAreaStCurBuffer, TEXTAREASTCUR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_83ZL).getText());
 8004a3e:	f204 4bc2 	addw	fp, r4, #1218	; 0x4c2
 8004a42:	2b00      	cmp	r3, #0
 8004a44:	f43f aebc 	beq.w	80047c0 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004a48:	883b      	ldrh	r3, [r7, #0]
 8004a4a:	2b2e      	cmp	r3, #46	; 0x2e
 8004a4c:	f67f aec4 	bls.w	80047d8 <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 8004a50:	212e      	movs	r1, #46	; 0x2e
 8004a52:	f8d9 0000 	ldr.w	r0, [r9]
 8004a56:	f004 f8d7 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8004a5a:	4a4e      	ldr	r2, [pc, #312]	; (8004b94 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 8004a5c:	4603      	mov	r3, r0
 8004a5e:	210a      	movs	r1, #10
 8004a60:	4658      	mov	r0, fp
 8004a62:	f016 fb33 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004a66:	232d      	movs	r3, #45	; 0x2d
    textAreaStCur.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJ1U));
 8004a68:	ee1b 0a90 	vmov	r0, s23
 8004a6c:	f8c4 b3bc 	str.w	fp, [r4, #956]	; 0x3bc
 8004a70:	a904      	add	r1, sp, #16
 8004a72:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004a76:	9604      	str	r6, [sp, #16]
 8004a78:	f010 fa91 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaErr.setPosition(600, 0, 50, 19);
 8004a7c:	2332      	movs	r3, #50	; 0x32
 8004a7e:	ee1c 0a10 	vmov	r0, s24
 8004a82:	f8cd a000 	str.w	sl, [sp]
 8004a86:	462a      	mov	r2, r5
 8004a88:	f44f 7116 	mov.w	r1, #600	; 0x258
 8004a8c:	f7fe f810 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8004a90:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004a94:	f8c4 33f0 	str.w	r3, [r4, #1008]	; 0x3f0
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004a98:	f8d8 3000 	ldr.w	r3, [r8]
        linespace = space;
 8004a9c:	f8a4 53f4 	strh.w	r5, [r4, #1012]	; 0x3f4
    Unicode::snprintf(textAreaErrBuffer, TEXTAREAERR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_60JG).getText());
 8004aa0:	f204 4bd6 	addw	fp, r4, #1238	; 0x4d6
 8004aa4:	2b00      	cmp	r3, #0
 8004aa6:	f43f ae8b 	beq.w	80047c0 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004aaa:	883b      	ldrh	r3, [r7, #0]
 8004aac:	2b30      	cmp	r3, #48	; 0x30
 8004aae:	f67f ae93 	bls.w	80047d8 <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 8004ab2:	2130      	movs	r1, #48	; 0x30
 8004ab4:	f8d9 0000 	ldr.w	r0, [r9]
 8004ab8:	f004 f8a6 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8004abc:	4a35      	ldr	r2, [pc, #212]	; (8004b94 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 8004abe:	4603      	mov	r3, r0
 8004ac0:	210a      	movs	r1, #10
 8004ac2:	4658      	mov	r0, fp
 8004ac4:	f016 fb02 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004ac8:	232f      	movs	r3, #47	; 0x2f
    textAreaErr.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PXKK));
 8004aca:	ee1c 0a10 	vmov	r0, s24
 8004ace:	a904      	add	r1, sp, #16
 8004ad0:	f8c4 b3fc 	str.w	fp, [r4, #1020]	; 0x3fc
 8004ad4:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004ad8:	9604      	str	r6, [sp, #16]
 8004ada:	f010 fa60 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaGas.setPosition(650, 0, 100, 19);
 8004ade:	2364      	movs	r3, #100	; 0x64
 8004ae0:	462a      	mov	r2, r5
 8004ae2:	ee1c 0a90 	vmov	r0, s25
 8004ae6:	f8cd a000 	str.w	sl, [sp]
 8004aea:	f240 218a 	movw	r1, #650	; 0x28a
 8004aee:	f7fd ffdf 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8004af2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004af6:	f8c4 3430 	str.w	r3, [r4, #1072]	; 0x430
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004afa:	f8d8 3000 	ldr.w	r3, [r8]
        linespace = space;
 8004afe:	f8a4 5434 	strh.w	r5, [r4, #1076]	; 0x434
    Unicode::snprintf(textAreaGasBuffer, TEXTAREAGAS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_A04E).getText());
 8004b02:	f204 45ea 	addw	r5, r4, #1258	; 0x4ea
 8004b06:	2b00      	cmp	r3, #0
 8004b08:	f43f ae5a 	beq.w	80047c0 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004b0c:	883b      	ldrh	r3, [r7, #0]
 8004b0e:	2b32      	cmp	r3, #50	; 0x32
 8004b10:	f67f ae62 	bls.w	80047d8 <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 8004b14:	f8d9 0000 	ldr.w	r0, [r9]
 8004b18:	2132      	movs	r1, #50	; 0x32
 8004b1a:	f004 f875 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8004b1e:	4a1d      	ldr	r2, [pc, #116]	; (8004b94 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 8004b20:	4603      	mov	r3, r0
 8004b22:	210a      	movs	r1, #10
 8004b24:	4628      	mov	r0, r5
 8004b26:	f016 fad1 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004b2a:	2331      	movs	r3, #49	; 0x31
    textAreaGas.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JQ77));
 8004b2c:	ee1c 0a90 	vmov	r0, s25
 8004b30:	a904      	add	r1, sp, #16
 8004b32:	f8c4 543c 	str.w	r5, [r4, #1084]	; 0x43c
 8004b36:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004b3a:	9604      	str	r6, [sp, #16]
 8004b3c:	f010 fa2f 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(boxWithBorderDataTime);
 8004b40:	ee18 1a10 	vmov	r1, s16
 8004b44:	4620      	mov	r0, r4
 8004b46:	f00e fc93 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderChan);
 8004b4a:	ee1d 1a10 	vmov	r1, s26
 8004b4e:	4620      	mov	r0, r4
 8004b50:	f00e fc8e 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderTypeChan);
 8004b54:	ee1d 1a90 	vmov	r1, s27
 8004b58:	4620      	mov	r0, r4
 8004b5a:	f00e fc89 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderStLoop);
 8004b5e:	ee1e 1a10 	vmov	r1, s28
 8004b62:	4620      	mov	r0, r4
 8004b64:	f00e fc84 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderConc);
 8004b68:	ee1e 1a90 	vmov	r1, s29
 8004b6c:	4620      	mov	r0, r4
 8004b6e:	f00e fc7f 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderUnit);
 8004b72:	ee1f 1a10 	vmov	r1, s30
 8004b76:	4620      	mov	r0, r4
 8004b78:	f00e fc7a 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderStCur);
 8004b7c:	ee1f 1a90 	vmov	r1, s31
 8004b80:	4620      	mov	r0, r4
 8004b82:	f00e fc75 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderErr);
 8004b86:	9902      	ldr	r1, [sp, #8]
 8004b88:	4620      	mov	r0, r4
 8004b8a:	f00e fc71 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b8e:	e009      	b.n	8004ba4 <_ZN27CustomContainerTableLogBaseC1Ev+0x614>
 8004b90:	2002bd90 	.word	0x2002bd90
 8004b94:	08029581 	.word	0x08029581
 8004b98:	0802958c 	.word	0x0802958c
 8004b9c:	2002bd88 	.word	0x2002bd88
 8004ba0:	2002bd84 	.word	0x2002bd84
    add(boxWithBorderGas);
 8004ba4:	9903      	ldr	r1, [sp, #12]
 8004ba6:	4620      	mov	r0, r4
 8004ba8:	f00e fc62 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaDataTime);
 8004bac:	ee18 1a90 	vmov	r1, s17
 8004bb0:	4620      	mov	r0, r4
 8004bb2:	f00e fc5d 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaNumChan);
 8004bb6:	ee19 1a10 	vmov	r1, s18
 8004bba:	4620      	mov	r0, r4
 8004bbc:	f00e fc58 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaTypeChan);
 8004bc0:	ee19 1a90 	vmov	r1, s19
 8004bc4:	4620      	mov	r0, r4
 8004bc6:	f00e fc53 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaStLoop);
 8004bca:	ee1a 1a10 	vmov	r1, s20
 8004bce:	4620      	mov	r0, r4
 8004bd0:	f00e fc4e 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaConc);
 8004bd4:	ee1a 1a90 	vmov	r1, s21
 8004bd8:	4620      	mov	r0, r4
 8004bda:	f00e fc49 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaUnit);
 8004bde:	ee1b 1a10 	vmov	r1, s22
 8004be2:	4620      	mov	r0, r4
 8004be4:	f00e fc44 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaStCur);
 8004be8:	ee1b 1a90 	vmov	r1, s23
 8004bec:	4620      	mov	r0, r4
 8004bee:	f00e fc3f 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaErr);
 8004bf2:	ee1c 1a10 	vmov	r1, s24
 8004bf6:	4620      	mov	r0, r4
 8004bf8:	f00e fc3a 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaGas);
 8004bfc:	4620      	mov	r0, r4
 8004bfe:	ee1c 1a90 	vmov	r1, s25
 8004c02:	f00e fc35 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004c06:	4620      	mov	r0, r4
 8004c08:	b007      	add	sp, #28
 8004c0a:	ecbd 8b10 	vpop	{d8-d15}
 8004c0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004c12:	bf00      	nop

08004c14 <_ZN33CustomContainerTableLog_Type2BaseD1Ev>:

class CustomContainerTableLog_Type2Base : public touchgfx::Container
{
public:
    CustomContainerTableLog_Type2Base();
    virtual ~CustomContainerTableLog_Type2Base() {}
 8004c14:	4770      	bx	lr

08004c16 <_ZN33CustomContainerTableLog_Type2Base10initializeEv>:
}

void CustomContainerTableLog_Type2Base::initialize()
{

}
 8004c16:	4770      	bx	lr

08004c18 <_ZN33CustomContainerTableLog_Type2BaseD0Ev>:
 8004c18:	b510      	push	{r4, lr}
 8004c1a:	f240 5194 	movw	r1, #1428	; 0x594
 8004c1e:	4604      	mov	r4, r0
 8004c20:	f022 fd80 	bl	8027724 <_ZdlPvj>
 8004c24:	4620      	mov	r0, r4
 8004c26:	bd10      	pop	{r4, pc}

08004c28 <_ZN33CustomContainerTableLog_Type2BaseC1Ev>:
CustomContainerTableLog_Type2Base::CustomContainerTableLog_Type2Base()
 8004c28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004c2c:	ed2d 8b10 	vpush	{d8-d15}
 8004c30:	4604      	mov	r4, r0
 8004c32:	b089      	sub	sp, #36	; 0x24
 8004c34:	f7fd fc56 	bl	80024e4 <_ZN8touchgfx8DrawableC1Ev>
 8004c38:	4622      	mov	r2, r4
 8004c3a:	2500      	movs	r5, #0
 8004c3c:	4b99      	ldr	r3, [pc, #612]	; (8004ea4 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x27c>)
 8004c3e:	62a5      	str	r5, [r4, #40]	; 0x28
 8004c40:	f842 3b2c 	str.w	r3, [r2], #44
 8004c44:	4610      	mov	r0, r2
 8004c46:	ee08 2a10 	vmov	s16, r2
 8004c4a:	f7ff fc6d 	bl	8004528 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8004c4e:	f104 0360 	add.w	r3, r4, #96	; 0x60
 8004c52:	4618      	mov	r0, r3
 8004c54:	ee0d 3a90 	vmov	s27, r3
 8004c58:	f7ff fc66 	bl	8004528 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8004c5c:	f104 0394 	add.w	r3, r4, #148	; 0x94
 8004c60:	4618      	mov	r0, r3
 8004c62:	ee0e 3a10 	vmov	s28, r3
 8004c66:	f7ff fc5f 	bl	8004528 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8004c6a:	f104 03c8 	add.w	r3, r4, #200	; 0xc8
 8004c6e:	4618      	mov	r0, r3
 8004c70:	ee0e 3a90 	vmov	s29, r3
 8004c74:	f7ff fc58 	bl	8004528 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8004c78:	f104 03fc 	add.w	r3, r4, #252	; 0xfc
 8004c7c:	4618      	mov	r0, r3
 8004c7e:	ee0f 3a10 	vmov	s30, r3
 8004c82:	f7ff fc51 	bl	8004528 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8004c86:	f504 7398 	add.w	r3, r4, #304	; 0x130
 8004c8a:	4618      	mov	r0, r3
 8004c8c:	ee0f 3a90 	vmov	s31, r3
 8004c90:	f7ff fc4a 	bl	8004528 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8004c94:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 8004c98:	4618      	mov	r0, r3
 8004c9a:	9302      	str	r3, [sp, #8]
 8004c9c:	f7ff fc44 	bl	8004528 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8004ca0:	f504 73cc 	add.w	r3, r4, #408	; 0x198
 8004ca4:	4618      	mov	r0, r3
 8004ca6:	9303      	str	r3, [sp, #12]
 8004ca8:	f7ff fc3e 	bl	8004528 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8004cac:	f504 73e6 	add.w	r3, r4, #460	; 0x1cc
 8004cb0:	4618      	mov	r0, r3
 8004cb2:	9304      	str	r3, [sp, #16]
 8004cb4:	f7ff fc38 	bl	8004528 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8004cb8:	f504 7300 	add.w	r3, r4, #512	; 0x200
 8004cbc:	4618      	mov	r0, r3
 8004cbe:	9305      	str	r3, [sp, #20]
 8004cc0:	f7ff fc32 	bl	8004528 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8004cc4:	f504 730d 	add.w	r3, r4, #564	; 0x234
 8004cc8:	4618      	mov	r0, r3
 8004cca:	ee08 3a90 	vmov	s17, r3
 8004cce:	f7ff fc41 	bl	8004554 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004cd2:	f504 731d 	add.w	r3, r4, #628	; 0x274
 8004cd6:	4618      	mov	r0, r3
 8004cd8:	ee09 3a10 	vmov	s18, r3
 8004cdc:	f7ff fc3a 	bl	8004554 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004ce0:	f504 732d 	add.w	r3, r4, #692	; 0x2b4
 8004ce4:	4618      	mov	r0, r3
 8004ce6:	ee09 3a90 	vmov	s19, r3
 8004cea:	f7ff fc33 	bl	8004554 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004cee:	f504 733d 	add.w	r3, r4, #756	; 0x2f4
 8004cf2:	4618      	mov	r0, r3
 8004cf4:	ee0a 3a10 	vmov	s20, r3
 8004cf8:	f7ff fc2c 	bl	8004554 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004cfc:	f504 734d 	add.w	r3, r4, #820	; 0x334
 8004d00:	4618      	mov	r0, r3
 8004d02:	ee0a 3a90 	vmov	s21, r3
 8004d06:	f7ff fc25 	bl	8004554 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004d0a:	f504 735d 	add.w	r3, r4, #884	; 0x374
 8004d0e:	4618      	mov	r0, r3
 8004d10:	ee0b 3a10 	vmov	s22, r3
 8004d14:	f7ff fc1e 	bl	8004554 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004d18:	f504 736d 	add.w	r3, r4, #948	; 0x3b4
 8004d1c:	4618      	mov	r0, r3
 8004d1e:	ee0b 3a90 	vmov	s23, r3
 8004d22:	f7ff fc17 	bl	8004554 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004d26:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 8004d2a:	4618      	mov	r0, r3
 8004d2c:	ee0c 3a10 	vmov	s24, r3
 8004d30:	f7ff fc10 	bl	8004554 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004d34:	f204 4334 	addw	r3, r4, #1076	; 0x434
 8004d38:	4618      	mov	r0, r3
 8004d3a:	ee0c 3a90 	vmov	s25, r3
 8004d3e:	f7ff fc09 	bl	8004554 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004d42:	f204 4374 	addw	r3, r4, #1140	; 0x474
 8004d46:	4618      	mov	r0, r3
    boxWithBorderChan.setPosition(150, 0, 50, 20);
 8004d48:	2714      	movs	r7, #20
CustomContainerTableLog_Type2Base::CustomContainerTableLog_Type2Base()
 8004d4a:	ee0d 3a10 	vmov	s26, r3
 8004d4e:	f7ff fc01 	bl	8004554 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004d52:	4b55      	ldr	r3, [pc, #340]	; (8004ea8 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x280>)
 8004d54:	60a3      	str	r3, [r4, #8]
        borderColor = color;
 8004d56:	f04f 39ff 	mov.w	r9, #4294967295
        borderSize = size;
 8004d5a:	f04f 0801 	mov.w	r8, #1
        borderColor = color;
 8004d5e:	f04f 467f 	mov.w	r6, #4278190080	; 0xff000000
    boxWithBorderChan.setPosition(150, 0, 50, 20);
 8004d62:	ee18 0a10 	vmov	r0, s16
 8004d66:	2332      	movs	r3, #50	; 0x32
 8004d68:	462a      	mov	r2, r5
 8004d6a:	2196      	movs	r1, #150	; 0x96
 8004d6c:	9700      	str	r7, [sp, #0]
 8004d6e:	f7fd fe9f 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004d72:	e9c4 9615 	strd	r9, r6, [r4, #84]	; 0x54
    boxWithBorderDataTime.setPosition(0, 0, 150, 20);
 8004d76:	ee1d 0a90 	vmov	r0, s27
 8004d7a:	2396      	movs	r3, #150	; 0x96
 8004d7c:	462a      	mov	r2, r5
 8004d7e:	4629      	mov	r1, r5
        borderSize = size;
 8004d80:	f8a4 805c 	strh.w	r8, [r4, #92]	; 0x5c
 8004d84:	9700      	str	r7, [sp, #0]
 8004d86:	f7fd fe93 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 8004d8a:	e9c4 9622 	strd	r9, r6, [r4, #136]	; 0x88
    boxWithBorderThreshold_1.setPosition(200, 0, 50, 20);
 8004d8e:	ee1e 0a10 	vmov	r0, s28
 8004d92:	2332      	movs	r3, #50	; 0x32
 8004d94:	462a      	mov	r2, r5
 8004d96:	21c8      	movs	r1, #200	; 0xc8
        borderSize = size;
 8004d98:	f8a4 8090 	strh.w	r8, [r4, #144]	; 0x90
 8004d9c:	9700      	str	r7, [sp, #0]
 8004d9e:	f7fd fe87 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 8004da2:	e9c4 962f 	strd	r9, r6, [r4, #188]	; 0xbc
    boxWithBorderThreshold_2.setPosition(250, 0, 50, 20);
 8004da6:	ee1e 0a90 	vmov	r0, s29
 8004daa:	2332      	movs	r3, #50	; 0x32
 8004dac:	462a      	mov	r2, r5
 8004dae:	21fa      	movs	r1, #250	; 0xfa
        borderSize = size;
 8004db0:	f8a4 80c4 	strh.w	r8, [r4, #196]	; 0xc4
 8004db4:	9700      	str	r7, [sp, #0]
 8004db6:	f7fd fe7b 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 8004dba:	e9c4 963c 	strd	r9, r6, [r4, #240]	; 0xf0
    boxWithBorderThreshold_3.setPosition(300, 0, 50, 20);
 8004dbe:	ee1f 0a10 	vmov	r0, s30
 8004dc2:	2332      	movs	r3, #50	; 0x32
 8004dc4:	462a      	mov	r2, r5
 8004dc6:	f44f 7196 	mov.w	r1, #300	; 0x12c
        borderSize = size;
 8004dca:	f8a4 80f8 	strh.w	r8, [r4, #248]	; 0xf8
 8004dce:	9700      	str	r7, [sp, #0]
 8004dd0:	f7fd fe6e 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 8004dd4:	e9c4 9649 	strd	r9, r6, [r4, #292]	; 0x124
    boxWithBorderFullScale.setPosition(350, 0, 50, 20);
 8004dd8:	ee1f 0a90 	vmov	r0, s31
 8004ddc:	2332      	movs	r3, #50	; 0x32
 8004dde:	462a      	mov	r2, r5
 8004de0:	f44f 71af 	mov.w	r1, #350	; 0x15e
        borderSize = size;
 8004de4:	f8a4 812c 	strh.w	r8, [r4, #300]	; 0x12c
 8004de8:	9700      	str	r7, [sp, #0]
 8004dea:	f7fd fe61 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 8004dee:	e9c4 9656 	strd	r9, r6, [r4, #344]	; 0x158
    boxWithBorderHysteresis.setPosition(400, 0, 50, 20);
 8004df2:	9802      	ldr	r0, [sp, #8]
        borderSize = size;
 8004df4:	f8a4 8160 	strh.w	r8, [r4, #352]	; 0x160
 8004df8:	2332      	movs	r3, #50	; 0x32
 8004dfa:	462a      	mov	r2, r5
 8004dfc:	f44f 71c8 	mov.w	r1, #400	; 0x190
 8004e00:	9700      	str	r7, [sp, #0]
 8004e02:	f7fd fe55 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 8004e06:	e9c4 9663 	strd	r9, r6, [r4, #396]	; 0x18c
    boxWithBorderUnit.setPosition(450, 0, 70, 20);
 8004e0a:	9803      	ldr	r0, [sp, #12]
        borderSize = size;
 8004e0c:	f8a4 8194 	strh.w	r8, [r4, #404]	; 0x194
 8004e10:	2346      	movs	r3, #70	; 0x46
 8004e12:	462a      	mov	r2, r5
 8004e14:	f44f 71e1 	mov.w	r1, #450	; 0x1c2
 8004e18:	9700      	str	r7, [sp, #0]
 8004e1a:	f7fd fe49 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 8004e1e:	e9c4 9670 	strd	r9, r6, [r4, #448]	; 0x1c0
    boxWithBorderGas.setPosition(520, 0, 100, 20);
 8004e22:	9804      	ldr	r0, [sp, #16]
        borderSize = size;
 8004e24:	f8a4 81c8 	strh.w	r8, [r4, #456]	; 0x1c8
 8004e28:	2364      	movs	r3, #100	; 0x64
 8004e2a:	462a      	mov	r2, r5
 8004e2c:	f44f 7102 	mov.w	r1, #520	; 0x208
 8004e30:	9700      	str	r7, [sp, #0]
 8004e32:	f7fd fe3d 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    textAreaDataTime.setPosition(0, 0, 150, 19);
 8004e36:	f04f 0a13 	mov.w	sl, #19
        borderColor = color;
 8004e3a:	e9c4 967d 	strd	r9, r6, [r4, #500]	; 0x1f4
    boxWithBorderTag.setPosition(620, 0, 130, 20);
 8004e3e:	9805      	ldr	r0, [sp, #20]
        borderSize = size;
 8004e40:	f8a4 81fc 	strh.w	r8, [r4, #508]	; 0x1fc
 8004e44:	2382      	movs	r3, #130	; 0x82
 8004e46:	462a      	mov	r2, r5
 8004e48:	f44f 711b 	mov.w	r1, #620	; 0x26c
 8004e4c:	9700      	str	r7, [sp, #0]
 8004e4e:	f7fd fe2f 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 8004e52:	e9c4 968a 	strd	r9, r6, [r4, #552]	; 0x228
    textAreaDataTime.setPosition(0, 0, 150, 19);
 8004e56:	2396      	movs	r3, #150	; 0x96
 8004e58:	ee18 0a90 	vmov	r0, s17
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004e5c:	f8df 9060 	ldr.w	r9, [pc, #96]	; 8004ec0 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x298>
        borderSize = size;
 8004e60:	f8a4 8230 	strh.w	r8, [r4, #560]	; 0x230
 8004e64:	f8cd a000 	str.w	sl, [sp]
 8004e68:	462a      	mov	r2, r5
 8004e6a:	4629      	mov	r1, r5
 8004e6c:	f7fd fe20 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8004e70:	4b0e      	ldr	r3, [pc, #56]	; (8004eac <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x284>)
 8004e72:	f8c4 3264 	str.w	r3, [r4, #612]	; 0x264
 8004e76:	f8d9 3000 	ldr.w	r3, [r9]
        linespace = space;
 8004e7a:	f8a4 8268 	strh.w	r8, [r4, #616]	; 0x268
    Unicode::snprintf(textAreaDataTimeBuffer, TEXTAREADATATIME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_RKAI).getText());
 8004e7e:	f204 4bb4 	addw	fp, r4, #1204	; 0x4b4
 8004e82:	b92b      	cbnz	r3, 8004e90 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x268>
 8004e84:	4b0a      	ldr	r3, [pc, #40]	; (8004eb0 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x288>)
 8004e86:	4a0b      	ldr	r2, [pc, #44]	; (8004eb4 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x28c>)
 8004e88:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004e8a:	480b      	ldr	r0, [pc, #44]	; (8004eb8 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x290>)
 8004e8c:	f022 fc78 	bl	8027780 <__assert_func>
 8004e90:	f8df 8030 	ldr.w	r8, [pc, #48]	; 8004ec4 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x29c>
 8004e94:	f8b8 3000 	ldrh.w	r3, [r8]
 8004e98:	2b64      	cmp	r3, #100	; 0x64
 8004e9a:	d815      	bhi.n	8004ec8 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x2a0>
 8004e9c:	4b07      	ldr	r3, [pc, #28]	; (8004ebc <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x294>)
 8004e9e:	4a05      	ldr	r2, [pc, #20]	; (8004eb4 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x28c>)
 8004ea0:	21af      	movs	r1, #175	; 0xaf
 8004ea2:	e7f2      	b.n	8004e8a <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x262>
 8004ea4:	08029a64 	.word	0x08029a64
 8004ea8:	001402ee 	.word	0x001402ee
 8004eac:	ff030202 	.word	0xff030202
 8004eb0:	08029478 	.word	0x08029478
 8004eb4:	080294ba 	.word	0x080294ba
 8004eb8:	080294e8 	.word	0x080294e8
 8004ebc:	0802952f 	.word	0x0802952f
 8004ec0:	2002bd84 	.word	0x2002bd84
 8004ec4:	2002bd88 	.word	0x2002bd88
        return texts->getText(typedTextId);
 8004ec8:	4bdc      	ldr	r3, [pc, #880]	; (800523c <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x614>)
 8004eca:	2164      	movs	r1, #100	; 0x64
 8004ecc:	6818      	ldr	r0, [r3, #0]
 8004ece:	f003 fe9b 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8004ed2:	4adb      	ldr	r2, [pc, #876]	; (8005240 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x618>)
 8004ed4:	4603      	mov	r3, r0
 8004ed6:	4639      	mov	r1, r7
 8004ed8:	4658      	mov	r0, fp
 8004eda:	f016 f8f7 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004ede:	4fd9      	ldr	r7, [pc, #868]	; (8005244 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x61c>)
 8004ee0:	f8c4 b270 	str.w	fp, [r4, #624]	; 0x270
 8004ee4:	2363      	movs	r3, #99	; 0x63
    textAreaDataTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MZ3L));
 8004ee6:	ee18 0a90 	vmov	r0, s17
 8004eea:	a906      	add	r1, sp, #24
 8004eec:	f8ad 301c 	strh.w	r3, [sp, #28]
 8004ef0:	9706      	str	r7, [sp, #24]
 8004ef2:	f010 f854 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaNumChan.setPosition(150, 0, 50, 19);
 8004ef6:	2332      	movs	r3, #50	; 0x32
 8004ef8:	ee19 0a10 	vmov	r0, s18
 8004efc:	f8cd a000 	str.w	sl, [sp]
 8004f00:	462a      	mov	r2, r5
 8004f02:	2196      	movs	r1, #150	; 0x96
 8004f04:	f7fd fdd4 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004f08:	f8d9 3000 	ldr.w	r3, [r9]
        this->color = color;
 8004f0c:	f8c4 62a4 	str.w	r6, [r4, #676]	; 0x2a4
        linespace = space;
 8004f10:	f8a4 52a8 	strh.w	r5, [r4, #680]	; 0x2a8
    Unicode::snprintf(textAreaNumChanBuffer, TEXTAREANUMCHAN_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_BM4F).getText());
 8004f14:	f204 4bdc 	addw	fp, r4, #1244	; 0x4dc
 8004f18:	2b00      	cmp	r3, #0
 8004f1a:	d0b3      	beq.n	8004e84 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x25c>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004f1c:	f8b8 3000 	ldrh.w	r3, [r8]
 8004f20:	2b66      	cmp	r3, #102	; 0x66
 8004f22:	d9bb      	bls.n	8004e9c <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x274>
        return texts->getText(typedTextId);
 8004f24:	4bc5      	ldr	r3, [pc, #788]	; (800523c <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x614>)
 8004f26:	2166      	movs	r1, #102	; 0x66
 8004f28:	6818      	ldr	r0, [r3, #0]
 8004f2a:	f003 fe6d 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8004f2e:	4ac4      	ldr	r2, [pc, #784]	; (8005240 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x618>)
 8004f30:	4603      	mov	r3, r0
 8004f32:	2105      	movs	r1, #5
 8004f34:	4658      	mov	r0, fp
 8004f36:	f016 f8c9 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004f3a:	2365      	movs	r3, #101	; 0x65
    textAreaNumChan.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZVG0));
 8004f3c:	ee19 0a10 	vmov	r0, s18
 8004f40:	f8c4 b2b0 	str.w	fp, [r4, #688]	; 0x2b0
 8004f44:	a906      	add	r1, sp, #24
 8004f46:	f8ad 301c 	strh.w	r3, [sp, #28]
 8004f4a:	9706      	str	r7, [sp, #24]
 8004f4c:	f010 f827 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaThreshold_1.setPosition(200, 0, 50, 19);
 8004f50:	2332      	movs	r3, #50	; 0x32
 8004f52:	ee19 0a90 	vmov	r0, s19
 8004f56:	f8cd a000 	str.w	sl, [sp]
 8004f5a:	462a      	mov	r2, r5
 8004f5c:	21c8      	movs	r1, #200	; 0xc8
 8004f5e:	f7fd fda7 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004f62:	f8d9 3000 	ldr.w	r3, [r9]
        this->color = color;
 8004f66:	f8c4 62e4 	str.w	r6, [r4, #740]	; 0x2e4
        linespace = space;
 8004f6a:	f8a4 52e8 	strh.w	r5, [r4, #744]	; 0x2e8
    Unicode::snprintf(textAreaThreshold_1Buffer, TEXTAREATHRESHOLD_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8OHI).getText());
 8004f6e:	f204 4be6 	addw	fp, r4, #1254	; 0x4e6
 8004f72:	2b00      	cmp	r3, #0
 8004f74:	d086      	beq.n	8004e84 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x25c>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004f76:	f8b8 3000 	ldrh.w	r3, [r8]
 8004f7a:	2b68      	cmp	r3, #104	; 0x68
 8004f7c:	d98e      	bls.n	8004e9c <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x274>
        return texts->getText(typedTextId);
 8004f7e:	4baf      	ldr	r3, [pc, #700]	; (800523c <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x614>)
 8004f80:	2168      	movs	r1, #104	; 0x68
 8004f82:	6818      	ldr	r0, [r3, #0]
 8004f84:	f003 fe40 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8004f88:	4aad      	ldr	r2, [pc, #692]	; (8005240 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x618>)
 8004f8a:	4603      	mov	r3, r0
 8004f8c:	210a      	movs	r1, #10
 8004f8e:	4658      	mov	r0, fp
 8004f90:	f016 f89c 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004f94:	2367      	movs	r3, #103	; 0x67
    textAreaThreshold_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_29R3));
 8004f96:	ee19 0a90 	vmov	r0, s19
 8004f9a:	f8c4 b2f0 	str.w	fp, [r4, #752]	; 0x2f0
 8004f9e:	a906      	add	r1, sp, #24
 8004fa0:	f8ad 301c 	strh.w	r3, [sp, #28]
 8004fa4:	9706      	str	r7, [sp, #24]
 8004fa6:	f00f fffa 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaThreshold_2.setPosition(250, 0, 50, 19);
 8004faa:	2332      	movs	r3, #50	; 0x32
 8004fac:	ee1a 0a10 	vmov	r0, s20
 8004fb0:	f8cd a000 	str.w	sl, [sp]
 8004fb4:	462a      	mov	r2, r5
 8004fb6:	21fa      	movs	r1, #250	; 0xfa
 8004fb8:	f7fd fd7a 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004fbc:	f8d9 3000 	ldr.w	r3, [r9]
        this->color = color;
 8004fc0:	f8c4 6324 	str.w	r6, [r4, #804]	; 0x324
        linespace = space;
 8004fc4:	f8a4 5328 	strh.w	r5, [r4, #808]	; 0x328
    Unicode::snprintf(textAreaThreshold_2Buffer, TEXTAREATHRESHOLD_2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_OPQ9).getText());
 8004fc8:	f204 4bfa 	addw	fp, r4, #1274	; 0x4fa
 8004fcc:	2b00      	cmp	r3, #0
 8004fce:	f43f af59 	beq.w	8004e84 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x25c>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004fd2:	f8b8 3000 	ldrh.w	r3, [r8]
 8004fd6:	2b6a      	cmp	r3, #106	; 0x6a
 8004fd8:	f67f af60 	bls.w	8004e9c <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x274>
        return texts->getText(typedTextId);
 8004fdc:	4b97      	ldr	r3, [pc, #604]	; (800523c <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x614>)
 8004fde:	216a      	movs	r1, #106	; 0x6a
 8004fe0:	6818      	ldr	r0, [r3, #0]
 8004fe2:	f003 fe11 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8004fe6:	4a96      	ldr	r2, [pc, #600]	; (8005240 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x618>)
 8004fe8:	4603      	mov	r3, r0
 8004fea:	210a      	movs	r1, #10
 8004fec:	4658      	mov	r0, fp
 8004fee:	f016 f86d 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004ff2:	2369      	movs	r3, #105	; 0x69
    textAreaThreshold_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NWXO));
 8004ff4:	ee1a 0a10 	vmov	r0, s20
 8004ff8:	a906      	add	r1, sp, #24
 8004ffa:	f8c4 b330 	str.w	fp, [r4, #816]	; 0x330
 8004ffe:	f8ad 301c 	strh.w	r3, [sp, #28]
 8005002:	9706      	str	r7, [sp, #24]
 8005004:	f00f ffcb 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaThreshold_3.setPosition(300, 0, 50, 19);
 8005008:	2332      	movs	r3, #50	; 0x32
 800500a:	462a      	mov	r2, r5
 800500c:	ee1a 0a90 	vmov	r0, s21
 8005010:	f8cd a000 	str.w	sl, [sp]
 8005014:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8005018:	f7fd fd4a 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800501c:	f8d9 3000 	ldr.w	r3, [r9]
 8005020:	f8a4 5368 	strh.w	r5, [r4, #872]	; 0x368
        this->color = color;
 8005024:	f8c4 6364 	str.w	r6, [r4, #868]	; 0x364
    Unicode::snprintf(textAreaThreshold_3Buffer, TEXTAREATHRESHOLD_3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8DMT).getText());
 8005028:	f204 550e 	addw	r5, r4, #1294	; 0x50e
 800502c:	2b00      	cmp	r3, #0
 800502e:	f43f af29 	beq.w	8004e84 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x25c>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8005032:	f8b8 3000 	ldrh.w	r3, [r8]
 8005036:	2b6c      	cmp	r3, #108	; 0x6c
 8005038:	f67f af30 	bls.w	8004e9c <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x274>
        return texts->getText(typedTextId);
 800503c:	f8df a1fc 	ldr.w	sl, [pc, #508]	; 800523c <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x614>
 8005040:	216c      	movs	r1, #108	; 0x6c
 8005042:	f8da 0000 	ldr.w	r0, [sl]
 8005046:	f003 fddf 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 800504a:	4a7d      	ldr	r2, [pc, #500]	; (8005240 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x618>)
 800504c:	4603      	mov	r3, r0
 800504e:	210a      	movs	r1, #10
 8005050:	4628      	mov	r0, r5
 8005052:	f016 f83b 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaFullScale.setPosition(350, 0, 50, 19);
 8005056:	f04f 0913 	mov.w	r9, #19
        : typedTextId(id)
 800505a:	236b      	movs	r3, #107	; 0x6b
    textAreaThreshold_3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KSWU));
 800505c:	ee1a 0a90 	vmov	r0, s21
 8005060:	f8c4 5370 	str.w	r5, [r4, #880]	; 0x370
 8005064:	9706      	str	r7, [sp, #24]
 8005066:	a906      	add	r1, sp, #24
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005068:	4f77      	ldr	r7, [pc, #476]	; (8005248 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x620>)
        : typedTextId(id)
 800506a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800506e:	f00f ff96 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaFullScale.setPosition(350, 0, 50, 19);
 8005072:	2332      	movs	r3, #50	; 0x32
 8005074:	ee1b 0a10 	vmov	r0, s22
 8005078:	f8cd 9000 	str.w	r9, [sp]
 800507c:	2200      	movs	r2, #0
 800507e:	f44f 71af 	mov.w	r1, #350	; 0x15e
 8005082:	f7fd fd15 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005086:	683b      	ldr	r3, [r7, #0]
 8005088:	f04f 487f 	mov.w	r8, #4278190080	; 0xff000000
        linespace = space;
 800508c:	2500      	movs	r5, #0
        this->color = color;
 800508e:	f8c4 83a4 	str.w	r8, [r4, #932]	; 0x3a4
        linespace = space;
 8005092:	f8a4 53a8 	strh.w	r5, [r4, #936]	; 0x3a8
    Unicode::snprintf(textAreaFullScaleBuffer, TEXTAREAFULLSCALE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_F638).getText());
 8005096:	f204 5b22 	addw	fp, r4, #1314	; 0x522
 800509a:	2b00      	cmp	r3, #0
 800509c:	f43f aef2 	beq.w	8004e84 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x25c>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80050a0:	4e6a      	ldr	r6, [pc, #424]	; (800524c <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x624>)
 80050a2:	8833      	ldrh	r3, [r6, #0]
 80050a4:	2b70      	cmp	r3, #112	; 0x70
 80050a6:	f67f aef9 	bls.w	8004e9c <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x274>
        return texts->getText(typedTextId);
 80050aa:	2170      	movs	r1, #112	; 0x70
 80050ac:	f8da 0000 	ldr.w	r0, [sl]
 80050b0:	f003 fdaa 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 80050b4:	4a62      	ldr	r2, [pc, #392]	; (8005240 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x618>)
 80050b6:	4603      	mov	r3, r0
 80050b8:	210a      	movs	r1, #10
 80050ba:	4658      	mov	r0, fp
 80050bc:	f016 f806 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80050c0:	4b60      	ldr	r3, [pc, #384]	; (8005244 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x61c>)
 80050c2:	f8c4 b3b0 	str.w	fp, [r4, #944]	; 0x3b0
    textAreaFullScale.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MKVX));
 80050c6:	ee1b 0a10 	vmov	r0, s22
 80050ca:	9306      	str	r3, [sp, #24]
 80050cc:	a906      	add	r1, sp, #24
 80050ce:	236f      	movs	r3, #111	; 0x6f
 80050d0:	f8ad 301c 	strh.w	r3, [sp, #28]
 80050d4:	f00f ff63 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaFullHysteresis.setPosition(400, 0, 50, 19);
 80050d8:	2332      	movs	r3, #50	; 0x32
 80050da:	ee1b 0a90 	vmov	r0, s23
 80050de:	f8cd 9000 	str.w	r9, [sp]
 80050e2:	462a      	mov	r2, r5
 80050e4:	f44f 71c8 	mov.w	r1, #400	; 0x190
 80050e8:	f7fd fce2 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80050ec:	683b      	ldr	r3, [r7, #0]
        this->color = color;
 80050ee:	f8c4 83e4 	str.w	r8, [r4, #996]	; 0x3e4
        linespace = space;
 80050f2:	f8a4 53e8 	strh.w	r5, [r4, #1000]	; 0x3e8
    Unicode::snprintf(textAreaFullHysteresisBuffer, TEXTAREAFULLHYSTERESIS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_456D).getText());
 80050f6:	f204 5b36 	addw	fp, r4, #1334	; 0x536
 80050fa:	2b00      	cmp	r3, #0
 80050fc:	f43f aec2 	beq.w	8004e84 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x25c>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8005100:	8833      	ldrh	r3, [r6, #0]
 8005102:	2b74      	cmp	r3, #116	; 0x74
 8005104:	f67f aeca 	bls.w	8004e9c <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x274>
        return texts->getText(typedTextId);
 8005108:	2174      	movs	r1, #116	; 0x74
 800510a:	f8da 0000 	ldr.w	r0, [sl]
 800510e:	f003 fd7b 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8005112:	4a4b      	ldr	r2, [pc, #300]	; (8005240 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x618>)
 8005114:	4603      	mov	r3, r0
 8005116:	210a      	movs	r1, #10
 8005118:	4658      	mov	r0, fp
 800511a:	f015 ffd7 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800511e:	4b49      	ldr	r3, [pc, #292]	; (8005244 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x61c>)
 8005120:	f8c4 b3f0 	str.w	fp, [r4, #1008]	; 0x3f0
    textAreaFullHysteresis.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9XVJ));
 8005124:	ee1b 0a90 	vmov	r0, s23
 8005128:	9306      	str	r3, [sp, #24]
 800512a:	a906      	add	r1, sp, #24
 800512c:	2373      	movs	r3, #115	; 0x73
 800512e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8005132:	f00f ff34 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaUnit.setPosition(450, 0, 70, 19);
 8005136:	2346      	movs	r3, #70	; 0x46
 8005138:	ee1c 0a10 	vmov	r0, s24
 800513c:	f8cd 9000 	str.w	r9, [sp]
 8005140:	462a      	mov	r2, r5
 8005142:	f44f 71e1 	mov.w	r1, #450	; 0x1c2
 8005146:	f7fd fcb3 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800514a:	683b      	ldr	r3, [r7, #0]
        this->color = color;
 800514c:	f8c4 8424 	str.w	r8, [r4, #1060]	; 0x424
        linespace = space;
 8005150:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
    Unicode::snprintf(textAreaUnitBuffer, TEXTAREAUNIT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_MUZ6).getText());
 8005154:	f204 5b4a 	addw	fp, r4, #1354	; 0x54a
 8005158:	2b00      	cmp	r3, #0
 800515a:	f43f ae93 	beq.w	8004e84 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x25c>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800515e:	8833      	ldrh	r3, [r6, #0]
 8005160:	2b6e      	cmp	r3, #110	; 0x6e
 8005162:	f67f ae9b 	bls.w	8004e9c <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x274>
        return texts->getText(typedTextId);
 8005166:	216e      	movs	r1, #110	; 0x6e
 8005168:	f8da 0000 	ldr.w	r0, [sl]
 800516c:	f003 fd4c 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8005170:	4a33      	ldr	r2, [pc, #204]	; (8005240 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x618>)
 8005172:	4603      	mov	r3, r0
 8005174:	210a      	movs	r1, #10
 8005176:	4658      	mov	r0, fp
 8005178:	f015 ffa8 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800517c:	4b31      	ldr	r3, [pc, #196]	; (8005244 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x61c>)
 800517e:	f8c4 b430 	str.w	fp, [r4, #1072]	; 0x430
    textAreaUnit.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WHJ0));
 8005182:	ee1c 0a10 	vmov	r0, s24
 8005186:	9306      	str	r3, [sp, #24]
 8005188:	a906      	add	r1, sp, #24
 800518a:	236d      	movs	r3, #109	; 0x6d
 800518c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8005190:	f00f ff05 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaGas.setPosition(520, 0, 100, 19);
 8005194:	2364      	movs	r3, #100	; 0x64
 8005196:	ee1c 0a90 	vmov	r0, s25
 800519a:	f8cd 9000 	str.w	r9, [sp]
 800519e:	462a      	mov	r2, r5
 80051a0:	f44f 7102 	mov.w	r1, #520	; 0x208
 80051a4:	f7fd fc84 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80051a8:	683b      	ldr	r3, [r7, #0]
        this->color = color;
 80051aa:	f8c4 8464 	str.w	r8, [r4, #1124]	; 0x464
        linespace = space;
 80051ae:	f8a4 5468 	strh.w	r5, [r4, #1128]	; 0x468
    Unicode::snprintf(textAreaGasBuffer, TEXTAREAGAS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0JHY).getText());
 80051b2:	f204 5b5e 	addw	fp, r4, #1374	; 0x55e
 80051b6:	2b00      	cmp	r3, #0
 80051b8:	f43f ae64 	beq.w	8004e84 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x25c>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80051bc:	8833      	ldrh	r3, [r6, #0]
 80051be:	2b72      	cmp	r3, #114	; 0x72
 80051c0:	f67f ae6c 	bls.w	8004e9c <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x274>
        return texts->getText(typedTextId);
 80051c4:	2172      	movs	r1, #114	; 0x72
 80051c6:	f8da 0000 	ldr.w	r0, [sl]
 80051ca:	f003 fd1d 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 80051ce:	4a1c      	ldr	r2, [pc, #112]	; (8005240 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x618>)
 80051d0:	4603      	mov	r3, r0
 80051d2:	210a      	movs	r1, #10
 80051d4:	4658      	mov	r0, fp
 80051d6:	f015 ff79 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80051da:	4b1a      	ldr	r3, [pc, #104]	; (8005244 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x61c>)
 80051dc:	9306      	str	r3, [sp, #24]
    textAreaGas.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FGQS));
 80051de:	ee1c 0a90 	vmov	r0, s25
 80051e2:	2371      	movs	r3, #113	; 0x71
 80051e4:	a906      	add	r1, sp, #24
 80051e6:	f8c4 b470 	str.w	fp, [r4, #1136]	; 0x470
 80051ea:	f8ad 301c 	strh.w	r3, [sp, #28]
 80051ee:	f00f fed6 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaTag.setPosition(620, 0, 130, 19);
 80051f2:	2382      	movs	r3, #130	; 0x82
 80051f4:	462a      	mov	r2, r5
 80051f6:	ee1d 0a10 	vmov	r0, s26
 80051fa:	f8cd 9000 	str.w	r9, [sp]
 80051fe:	f44f 711b 	mov.w	r1, #620	; 0x26c
 8005202:	f7fd fc55 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005206:	683b      	ldr	r3, [r7, #0]
 8005208:	f8a4 54a8 	strh.w	r5, [r4, #1192]	; 0x4a8
        this->color = color;
 800520c:	f8c4 84a4 	str.w	r8, [r4, #1188]	; 0x4a4
    Unicode::snprintf(textAreaTagBuffer, TEXTAREATAG_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_HOCZ).getText());
 8005210:	f204 5572 	addw	r5, r4, #1394	; 0x572
 8005214:	2b00      	cmp	r3, #0
 8005216:	f43f ae35 	beq.w	8004e84 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x25c>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800521a:	8833      	ldrh	r3, [r6, #0]
 800521c:	2b76      	cmp	r3, #118	; 0x76
 800521e:	f67f ae3d 	bls.w	8004e9c <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x274>
        return texts->getText(typedTextId);
 8005222:	f8da 0000 	ldr.w	r0, [sl]
 8005226:	2176      	movs	r1, #118	; 0x76
 8005228:	f003 fcee 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 800522c:	4a04      	ldr	r2, [pc, #16]	; (8005240 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x618>)
 800522e:	4603      	mov	r3, r0
 8005230:	2110      	movs	r1, #16
 8005232:	4628      	mov	r0, r5
 8005234:	f015 ff4a 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8005238:	e00a      	b.n	8005250 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x628>
 800523a:	bf00      	nop
 800523c:	2002bd90 	.word	0x2002bd90
 8005240:	08029581 	.word	0x08029581
 8005244:	0802958c 	.word	0x0802958c
 8005248:	2002bd84 	.word	0x2002bd84
 800524c:	2002bd88 	.word	0x2002bd88
        : typedTextId(id)
 8005250:	4b38      	ldr	r3, [pc, #224]	; (8005334 <_ZN33CustomContainerTableLog_Type2BaseC1Ev+0x70c>)
 8005252:	9306      	str	r3, [sp, #24]
    textAreaTag.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YDUD));
 8005254:	ee1d 0a10 	vmov	r0, s26
 8005258:	2375      	movs	r3, #117	; 0x75
 800525a:	a906      	add	r1, sp, #24
 800525c:	f8c4 54b0 	str.w	r5, [r4, #1200]	; 0x4b0
 8005260:	f8ad 301c 	strh.w	r3, [sp, #28]
 8005264:	f00f fe9b 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(boxWithBorderChan);
 8005268:	ee18 1a10 	vmov	r1, s16
 800526c:	4620      	mov	r0, r4
 800526e:	f00e f8ff 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderDataTime);
 8005272:	ee1d 1a90 	vmov	r1, s27
 8005276:	4620      	mov	r0, r4
 8005278:	f00e f8fa 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderThreshold_1);
 800527c:	ee1e 1a10 	vmov	r1, s28
 8005280:	4620      	mov	r0, r4
 8005282:	f00e f8f5 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderThreshold_2);
 8005286:	ee1e 1a90 	vmov	r1, s29
 800528a:	4620      	mov	r0, r4
 800528c:	f00e f8f0 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderThreshold_3);
 8005290:	ee1f 1a10 	vmov	r1, s30
 8005294:	4620      	mov	r0, r4
 8005296:	f00e f8eb 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderFullScale);
 800529a:	ee1f 1a90 	vmov	r1, s31
 800529e:	4620      	mov	r0, r4
 80052a0:	f00e f8e6 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderHysteresis);
 80052a4:	9902      	ldr	r1, [sp, #8]
 80052a6:	4620      	mov	r0, r4
 80052a8:	f00e f8e2 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderUnit);
 80052ac:	9903      	ldr	r1, [sp, #12]
 80052ae:	4620      	mov	r0, r4
 80052b0:	f00e f8de 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderGas);
 80052b4:	9904      	ldr	r1, [sp, #16]
 80052b6:	4620      	mov	r0, r4
 80052b8:	f00e f8da 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderTag);
 80052bc:	9905      	ldr	r1, [sp, #20]
 80052be:	4620      	mov	r0, r4
 80052c0:	f00e f8d6 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaDataTime);
 80052c4:	ee18 1a90 	vmov	r1, s17
 80052c8:	4620      	mov	r0, r4
 80052ca:	f00e f8d1 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaNumChan);
 80052ce:	ee19 1a10 	vmov	r1, s18
 80052d2:	4620      	mov	r0, r4
 80052d4:	f00e f8cc 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaThreshold_1);
 80052d8:	ee19 1a90 	vmov	r1, s19
 80052dc:	4620      	mov	r0, r4
 80052de:	f00e f8c7 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaThreshold_2);
 80052e2:	ee1a 1a10 	vmov	r1, s20
 80052e6:	4620      	mov	r0, r4
 80052e8:	f00e f8c2 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaThreshold_3);
 80052ec:	ee1a 1a90 	vmov	r1, s21
 80052f0:	4620      	mov	r0, r4
 80052f2:	f00e f8bd 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaFullScale);
 80052f6:	ee1b 1a10 	vmov	r1, s22
 80052fa:	4620      	mov	r0, r4
 80052fc:	f00e f8b8 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaFullHysteresis);
 8005300:	ee1b 1a90 	vmov	r1, s23
 8005304:	4620      	mov	r0, r4
 8005306:	f00e f8b3 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaUnit);
 800530a:	ee1c 1a10 	vmov	r1, s24
 800530e:	4620      	mov	r0, r4
 8005310:	f00e f8ae 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaGas);
 8005314:	ee1c 1a90 	vmov	r1, s25
 8005318:	4620      	mov	r0, r4
 800531a:	f00e f8a9 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaTag);
 800531e:	4620      	mov	r0, r4
 8005320:	ee1d 1a10 	vmov	r1, s26
 8005324:	f00e f8a4 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005328:	4620      	mov	r0, r4
 800532a:	b009      	add	sp, #36	; 0x24
 800532c:	ecbd 8b10 	vpop	{d8-d15}
 8005330:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005334:	0802958c 	.word	0x0802958c

08005338 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 8005338:	4770      	bx	lr

0800533a <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 800533a:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 800533e:	6808      	ldr	r0, [r1, #0]
 8005340:	6849      	ldr	r1, [r1, #4]
 8005342:	c303      	stmia	r3!, {r0, r1}
    }
 8005344:	4770      	bx	lr

08005346 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8005346:	4770      	bx	lr

08005348 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8005348:	4770      	bx	lr

0800534a <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 800534a:	6041      	str	r1, [r0, #4]
    }
 800534c:	4770      	bx	lr

0800534e <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800534e:	4770      	bx	lr

08005350 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8005350:	2301      	movs	r3, #1
 8005352:	7203      	strb	r3, [r0, #8]
    }
 8005354:	4770      	bx	lr

08005356 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8005356:	4770      	bx	lr

08005358 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8005358:	4770      	bx	lr

0800535a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
    virtual void execute()
 800535a:	b410      	push	{r4}
        (pobject->*pmemfun_0)();
 800535c:	68c2      	ldr	r2, [r0, #12]
 800535e:	6841      	ldr	r1, [r0, #4]
 8005360:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8005362:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8005364:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8005368:	07d2      	lsls	r2, r2, #31
 800536a:	bf48      	it	mi
 800536c:	590a      	ldrmi	r2, [r1, r4]
 800536e:	689b      	ldr	r3, [r3, #8]
    }
 8005370:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8005374:	bf48      	it	mi
 8005376:	58d3      	ldrmi	r3, [r2, r3]
 8005378:	4718      	bx	r3

0800537a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_0 != 0);
 800537a:	6843      	ldr	r3, [r0, #4]
 800537c:	b12b      	cbz	r3, 800538a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 800537e:	6883      	ldr	r3, [r0, #8]
 8005380:	b92b      	cbnz	r3, 800538e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8005382:	68c0      	ldr	r0, [r0, #12]
 8005384:	f000 0001 	and.w	r0, r0, #1
 8005388:	4770      	bx	lr
 800538a:	4618      	mov	r0, r3
 800538c:	4770      	bx	lr
 800538e:	2001      	movs	r0, #1
    }
 8005390:	4770      	bx	lr

08005392 <_ZN8touchgfx12NoTransitionD0Ev>:
 8005392:	b510      	push	{r4, lr}
 8005394:	210c      	movs	r1, #12
 8005396:	4604      	mov	r4, r0
 8005398:	f022 f9c4 	bl	8027724 <_ZdlPvj>
 800539c:	4620      	mov	r0, r4
 800539e:	bd10      	pop	{r4, pc}

080053a0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80053a0:	b510      	push	{r4, lr}
 80053a2:	2110      	movs	r1, #16
 80053a4:	4604      	mov	r4, r0
 80053a6:	f022 f9bd 	bl	8027724 <_ZdlPvj>
 80053aa:	4620      	mov	r0, r4
 80053ac:	bd10      	pop	{r4, pc}

080053ae <_ZN23FrontendApplicationBaseD0Ev>:
 80053ae:	b510      	push	{r4, lr}
 80053b0:	f44f 71ac 	mov.w	r1, #344	; 0x158
 80053b4:	4604      	mov	r4, r0
 80053b6:	f022 f9b5 	bl	8027724 <_ZdlPvj>
 80053ba:	4620      	mov	r0, r4
 80053bc:	bd10      	pop	{r4, pc}

080053be <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80053be:	b510      	push	{r4, lr}
        Application::getInstance()->draw();
 80053c0:	f012 f9dc 	bl	801777c <_ZN8touchgfx11Application11getInstanceEv>
 80053c4:	6803      	ldr	r3, [r0, #0]
    }
 80053c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->draw();
 80053ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80053cc:	4718      	bx	r3

080053ce <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80053ce:	b510      	push	{r4, lr}
 80053d0:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80053d2:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 80053d6:	b158      	cbz	r0, 80053f0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80053d8:	6803      	ldr	r3, [r0, #0]
 80053da:	68db      	ldr	r3, [r3, #12]
 80053dc:	4798      	blx	r3
 80053de:	b138      	cbz	r0, 80053f0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80053e0:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 80053e4:	6803      	ldr	r3, [r0, #0]
 80053e6:	689b      	ldr	r3, [r3, #8]
 80053e8:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80053ea:	2300      	movs	r3, #0
 80053ec:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 80053f0:	bd10      	pop	{r4, pc}
	...

080053f4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen2_screen/Screen2View.hpp>
#include <gui/screen2_screen/Screen2Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80053f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80053f6:	4604      	mov	r4, r0
 80053f8:	4617      	mov	r7, r2
 80053fa:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80053fc:	f012 fa26 	bl	801784c <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8005400:	4b10      	ldr	r3, [pc, #64]	; (8005444 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 8005402:	2500      	movs	r5, #0
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8005404:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
        return instance;
 8005408:	4e0f      	ldr	r6, [pc, #60]	; (8005448 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
        instance = this;
 800540a:	601c      	str	r4, [r3, #0]
        : pobject(0), pmemfun_0(0)
 800540c:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 8005410:	4b0e      	ldr	r3, [pc, #56]	; (800544c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 8005412:	6830      	ldr	r0, [r6, #0]
 8005414:	6023      	str	r3, [r4, #0]
 8005416:	4b0e      	ldr	r3, [pc, #56]	; (8005450 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8005418:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800541c:	6803      	ldr	r3, [r0, #0]
 800541e:	4629      	mov	r1, r5
 8005420:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8005422:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
 8005426:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8005428:	4628      	mov	r0, r5
 800542a:	f003 fbb1 	bl	8008b90 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800542e:	6833      	ldr	r3, [r6, #0]
 8005430:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8005434:	b10a      	cbz	r2, 800543a <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
 8005436:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8005438:	b900      	cbnz	r0, 800543c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>
        return instance->lcdRef;
 800543a:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800543c:	f01b f81d 	bl	802047a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8005440:	4620      	mov	r0, r4
 8005442:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005444:	2002bd80 	.word	0x2002bd80
 8005448:	2002bd34 	.word	0x2002bd34
 800544c:	08029f30 	.word	0x08029f30
 8005450:	08029f18 	.word	0x08029f18

08005454 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8005454:	4b06      	ldr	r3, [pc, #24]	; (8005470 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8005456:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800545a:	2300      	movs	r3, #0
 800545c:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8005460:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8005464:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8005468:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 800546c:	4770      	bx	lr
 800546e:	bf00      	nop
 8005470:	080055d9 	.word	0x080055d9

08005474 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>:
 8005474:	4b06      	ldr	r3, [pc, #24]	; (8005490 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv+0x1c>)
 8005476:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800547a:	2300      	movs	r3, #0
 800547c:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen2

void FrontendApplicationBase::gotoScreen2ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen2ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8005480:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8005484:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8005488:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 800548c:	4770      	bx	lr
 800548e:	bf00      	nop
 8005490:	08005741 	.word	0x08005741

08005494 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8005494:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005498:	4607      	mov	r7, r0
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800549a:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800549c:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 80054a0:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80054a2:	6803      	ldr	r3, [r0, #0]
 80054a4:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 80054a6:	4688      	mov	r8, r1
 80054a8:	4614      	mov	r4, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80054aa:	4798      	blx	r3
 80054ac:	4b43      	ldr	r3, [pc, #268]	; (80055bc <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 80054ae:	4298      	cmp	r0, r3
 80054b0:	d805      	bhi.n	80054be <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x2a>
 80054b2:	4b43      	ldr	r3, [pc, #268]	; (80055c0 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 80054b4:	4a43      	ldr	r2, [pc, #268]	; (80055c4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 80054b6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80054b8:	4843      	ldr	r0, [pc, #268]	; (80055c8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 80054ba:	f022 f961 	bl	8027780 <__assert_func>
 80054be:	6860      	ldr	r0, [r4, #4]
 80054c0:	6803      	ldr	r3, [r0, #0]
 80054c2:	6a1b      	ldr	r3, [r3, #32]
 80054c4:	4798      	blx	r3
 80054c6:	280f      	cmp	r0, #15
 80054c8:	d803      	bhi.n	80054d2 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x3e>
 80054ca:	4b40      	ldr	r3, [pc, #256]	; (80055cc <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 80054cc:	4a3d      	ldr	r2, [pc, #244]	; (80055c4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 80054ce:	21a4      	movs	r1, #164	; 0xa4
 80054d0:	e7f2      	b.n	80054b8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80054d2:	68e0      	ldr	r0, [r4, #12]
 80054d4:	6803      	ldr	r3, [r0, #0]
 80054d6:	6a1b      	ldr	r3, [r3, #32]
 80054d8:	4798      	blx	r3
 80054da:	280b      	cmp	r0, #11
 80054dc:	d803      	bhi.n	80054e6 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x52>
 80054de:	4b3c      	ldr	r3, [pc, #240]	; (80055d0 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13c>)
 80054e0:	4a38      	ldr	r2, [pc, #224]	; (80055c4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 80054e2:	21a5      	movs	r1, #165	; 0xa5
 80054e4:	e7e8      	b.n	80054b8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    Application::getInstance()->clearAllTimerWidgets();
 80054e6:	f012 f949 	bl	801777c <_ZN8touchgfx11Application11getInstanceEv>
 80054ea:	f012 f995 	bl	8017818 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80054ee:	f8d9 0000 	ldr.w	r0, [r9]
 80054f2:	b110      	cbz	r0, 80054fa <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x66>
        (*currentTrans)->tearDown();
 80054f4:	6803      	ldr	r3, [r0, #0]
 80054f6:	68db      	ldr	r3, [r3, #12]
 80054f8:	4798      	blx	r3
    if (*currentTrans)
 80054fa:	f8d9 0000 	ldr.w	r0, [r9]
 80054fe:	b110      	cbz	r0, 8005506 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x72>
        (*currentTrans)->~Transition();
 8005500:	6803      	ldr	r3, [r0, #0]
 8005502:	681b      	ldr	r3, [r3, #0]
 8005504:	4798      	blx	r3
    if (*currentScreen)
 8005506:	6838      	ldr	r0, [r7, #0]
 8005508:	b110      	cbz	r0, 8005510 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
        (*currentScreen)->tearDownScreen();
 800550a:	6803      	ldr	r3, [r0, #0]
 800550c:	695b      	ldr	r3, [r3, #20]
 800550e:	4798      	blx	r3
    if (*currentPresenter)
 8005510:	f8d8 0000 	ldr.w	r0, [r8]
 8005514:	b110      	cbz	r0, 800551c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x88>
        (*currentPresenter)->deactivate();
 8005516:	6803      	ldr	r3, [r0, #0]
 8005518:	685b      	ldr	r3, [r3, #4]
 800551a:	4798      	blx	r3
    if (*currentScreen)
 800551c:	6838      	ldr	r0, [r7, #0]
 800551e:	b110      	cbz	r0, 8005526 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x92>
        (*currentScreen)->~Screen();
 8005520:	6803      	ldr	r3, [r0, #0]
 8005522:	681b      	ldr	r3, [r3, #0]
 8005524:	4798      	blx	r3
    if (*currentPresenter)
 8005526:	f8d8 0000 	ldr.w	r0, [r8]
 800552a:	b110      	cbz	r0, 8005532 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x9e>
        (*currentPresenter)->~Presenter();
 800552c:	6803      	ldr	r3, [r0, #0]
 800552e:	689b      	ldr	r3, [r3, #8]
 8005530:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005532:	68e0      	ldr	r0, [r4, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8005534:	6803      	ldr	r3, [r0, #0]
 8005536:	2100      	movs	r1, #0
 8005538:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800553a:	4798      	blx	r3
        : screenContainer(0), done(false)
 800553c:	f04f 0b00 	mov.w	fp, #0
 8005540:	4b24      	ldr	r3, [pc, #144]	; (80055d4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x140>)
 8005542:	6003      	str	r3, [r0, #0]
 8005544:	4605      	mov	r5, r0
 8005546:	f8c0 b004 	str.w	fp, [r0, #4]
 800554a:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800554e:	68a0      	ldr	r0, [r4, #8]
 8005550:	6803      	ldr	r3, [r0, #0]
 8005552:	4659      	mov	r1, fp
 8005554:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005556:	4798      	blx	r3
 8005558:	4606      	mov	r6, r0
 800555a:	f005 faf3 	bl	800ab44 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800555e:	6860      	ldr	r0, [r4, #4]
 8005560:	6803      	ldr	r3, [r0, #0]
 8005562:	4659      	mov	r1, fp
 8005564:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005566:	4798      	blx	r3
 8005568:	4631      	mov	r1, r6
 800556a:	4604      	mov	r4, r0
 800556c:	f004 fc78 	bl	8009e60 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8005570:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005574:	f8c8 4000 	str.w	r4, [r8]
    *currentScreen = newScreen;
 8005578:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 800557a:	b1e4      	cbz	r4, 80055b6 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x122>
 800557c:	1d23      	adds	r3, r4, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800557e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005582:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8005584:	f8c4 a008 	str.w	sl, [r4, #8]
 8005588:	4630      	mov	r0, r6
 800558a:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 800558c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800558e:	4798      	blx	r3
    newPresenter->activate();
 8005590:	6823      	ldr	r3, [r4, #0]
 8005592:	4620      	mov	r0, r4
 8005594:	681b      	ldr	r3, [r3, #0]
 8005596:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005598:	4629      	mov	r1, r5
 800559a:	4630      	mov	r0, r6
 800559c:	f013 fce0 	bl	8018f60 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80055a0:	682b      	ldr	r3, [r5, #0]
 80055a2:	4628      	mov	r0, r5
 80055a4:	691b      	ldr	r3, [r3, #16]
 80055a6:	4798      	blx	r3
    newTransition->invalidate();
 80055a8:	682b      	ldr	r3, [r5, #0]
 80055aa:	4628      	mov	r0, r5
 80055ac:	695b      	ldr	r3, [r3, #20]
 80055ae:	4798      	blx	r3
    newScreen->bind(*newPresenter);

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
}
 80055b0:	4620      	mov	r0, r4
 80055b2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    model->bind(newPresenter);
 80055b6:	4623      	mov	r3, r4
 80055b8:	e7e1      	b.n	800557e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xea>
 80055ba:	bf00      	nop
 80055bc:	00019c07 	.word	0x00019c07
 80055c0:	08029aec 	.word	0x08029aec
 80055c4:	08029b7a 	.word	0x08029b7a
 80055c8:	08029c7e 	.word	0x08029c7e
 80055cc:	08029cc5 	.word	0x08029cc5
 80055d0:	08029d68 	.word	0x08029d68
 80055d4:	08029f74 	.word	0x08029f74

080055d8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
{
 80055d8:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80055da:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 80055de:	9300      	str	r3, [sp, #0]
 80055e0:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 80055e4:	4b04      	ldr	r3, [pc, #16]	; (80055f8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>)
 80055e6:	f500 719c 	add.w	r1, r0, #312	; 0x138
 80055ea:	4804      	ldr	r0, [pc, #16]	; (80055fc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>)
 80055ec:	f7ff ff52 	bl	8005494 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 80055f0:	b003      	add	sp, #12
 80055f2:	f85d fb04 	ldr.w	pc, [sp], #4
 80055f6:	bf00      	nop
 80055f8:	2002bd74 	.word	0x2002bd74
 80055fc:	2002bd70 	.word	0x2002bd70

08005600 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8005600:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005604:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005606:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8005608:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 800560c:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800560e:	6803      	ldr	r3, [r0, #0]
 8005610:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8005612:	4688      	mov	r8, r1
 8005614:	4614      	mov	r4, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005616:	4798      	blx	r3
 8005618:	f244 537b 	movw	r3, #17787	; 0x457b
 800561c:	4298      	cmp	r0, r3
 800561e:	d805      	bhi.n	800562c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x2c>
 8005620:	4b41      	ldr	r3, [pc, #260]	; (8005728 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 8005622:	4a42      	ldr	r2, [pc, #264]	; (800572c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8005624:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005626:	4842      	ldr	r0, [pc, #264]	; (8005730 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 8005628:	f022 f8aa 	bl	8027780 <__assert_func>
 800562c:	6860      	ldr	r0, [r4, #4]
 800562e:	6803      	ldr	r3, [r0, #0]
 8005630:	6a1b      	ldr	r3, [r3, #32]
 8005632:	4798      	blx	r3
 8005634:	280f      	cmp	r0, #15
 8005636:	d803      	bhi.n	8005640 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x40>
 8005638:	4b3e      	ldr	r3, [pc, #248]	; (8005734 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 800563a:	4a3c      	ldr	r2, [pc, #240]	; (800572c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 800563c:	21a4      	movs	r1, #164	; 0xa4
 800563e:	e7f2      	b.n	8005626 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x26>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005640:	68e0      	ldr	r0, [r4, #12]
 8005642:	6803      	ldr	r3, [r0, #0]
 8005644:	6a1b      	ldr	r3, [r3, #32]
 8005646:	4798      	blx	r3
 8005648:	280b      	cmp	r0, #11
 800564a:	d803      	bhi.n	8005654 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x54>
 800564c:	4b3a      	ldr	r3, [pc, #232]	; (8005738 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 800564e:	4a37      	ldr	r2, [pc, #220]	; (800572c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8005650:	21a5      	movs	r1, #165	; 0xa5
 8005652:	e7e8      	b.n	8005626 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x26>
    Application::getInstance()->clearAllTimerWidgets();
 8005654:	f012 f892 	bl	801777c <_ZN8touchgfx11Application11getInstanceEv>
 8005658:	f012 f8de 	bl	8017818 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800565c:	f8d9 0000 	ldr.w	r0, [r9]
 8005660:	b110      	cbz	r0, 8005668 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x68>
        (*currentTrans)->tearDown();
 8005662:	6803      	ldr	r3, [r0, #0]
 8005664:	68db      	ldr	r3, [r3, #12]
 8005666:	4798      	blx	r3
    if (*currentTrans)
 8005668:	f8d9 0000 	ldr.w	r0, [r9]
 800566c:	b110      	cbz	r0, 8005674 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x74>
        (*currentTrans)->~Transition();
 800566e:	6803      	ldr	r3, [r0, #0]
 8005670:	681b      	ldr	r3, [r3, #0]
 8005672:	4798      	blx	r3
    if (*currentScreen)
 8005674:	6838      	ldr	r0, [r7, #0]
 8005676:	b110      	cbz	r0, 800567e <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7e>
        (*currentScreen)->tearDownScreen();
 8005678:	6803      	ldr	r3, [r0, #0]
 800567a:	695b      	ldr	r3, [r3, #20]
 800567c:	4798      	blx	r3
    if (*currentPresenter)
 800567e:	f8d8 0000 	ldr.w	r0, [r8]
 8005682:	b110      	cbz	r0, 800568a <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8a>
        (*currentPresenter)->deactivate();
 8005684:	6803      	ldr	r3, [r0, #0]
 8005686:	685b      	ldr	r3, [r3, #4]
 8005688:	4798      	blx	r3
    if (*currentScreen)
 800568a:	6838      	ldr	r0, [r7, #0]
 800568c:	b110      	cbz	r0, 8005694 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x94>
        (*currentScreen)->~Screen();
 800568e:	6803      	ldr	r3, [r0, #0]
 8005690:	681b      	ldr	r3, [r3, #0]
 8005692:	4798      	blx	r3
    if (*currentPresenter)
 8005694:	f8d8 0000 	ldr.w	r0, [r8]
 8005698:	b110      	cbz	r0, 80056a0 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xa0>
        (*currentPresenter)->~Presenter();
 800569a:	6803      	ldr	r3, [r0, #0]
 800569c:	689b      	ldr	r3, [r3, #8]
 800569e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80056a0:	68e0      	ldr	r0, [r4, #12]
 80056a2:	6803      	ldr	r3, [r0, #0]
 80056a4:	2100      	movs	r1, #0
 80056a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056a8:	4798      	blx	r3
 80056aa:	f04f 0b00 	mov.w	fp, #0
 80056ae:	4b23      	ldr	r3, [pc, #140]	; (800573c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13c>)
 80056b0:	6003      	str	r3, [r0, #0]
 80056b2:	4605      	mov	r5, r0
 80056b4:	f8c0 b004 	str.w	fp, [r0, #4]
 80056b8:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80056bc:	68a0      	ldr	r0, [r4, #8]
 80056be:	6803      	ldr	r3, [r0, #0]
 80056c0:	4659      	mov	r1, fp
 80056c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056c4:	4798      	blx	r3
 80056c6:	4606      	mov	r6, r0
 80056c8:	f005 fdc6 	bl	800b258 <_ZN11Screen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80056cc:	6860      	ldr	r0, [r4, #4]
 80056ce:	6803      	ldr	r3, [r0, #0]
 80056d0:	4659      	mov	r1, fp
 80056d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056d4:	4798      	blx	r3
 80056d6:	4631      	mov	r1, r6
 80056d8:	4604      	mov	r4, r0
 80056da:	f005 fcbd 	bl	800b058 <_ZN16Screen2PresenterC1ER11Screen2View>
    *currentTrans = newTransition;
 80056de:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80056e2:	f8c8 4000 	str.w	r4, [r8]
    *currentScreen = newScreen;
 80056e6:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 80056e8:	b1e4      	cbz	r4, 8005724 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x124>
 80056ea:	1d23      	adds	r3, r4, #4
 80056ec:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80056f0:	6833      	ldr	r3, [r6, #0]
 80056f2:	f8c4 a008 	str.w	sl, [r4, #8]
 80056f6:	4630      	mov	r0, r6
 80056f8:	68db      	ldr	r3, [r3, #12]
 80056fa:	63f4      	str	r4, [r6, #60]	; 0x3c
 80056fc:	4798      	blx	r3
    newPresenter->activate();
 80056fe:	6823      	ldr	r3, [r4, #0]
 8005700:	4620      	mov	r0, r4
 8005702:	681b      	ldr	r3, [r3, #0]
 8005704:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005706:	4629      	mov	r1, r5
 8005708:	4630      	mov	r0, r6
 800570a:	f013 fc29 	bl	8018f60 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800570e:	682b      	ldr	r3, [r5, #0]
 8005710:	4628      	mov	r0, r5
 8005712:	691b      	ldr	r3, [r3, #16]
 8005714:	4798      	blx	r3
    newTransition->invalidate();
 8005716:	682b      	ldr	r3, [r5, #0]
 8005718:	4628      	mov	r0, r5
 800571a:	695b      	ldr	r3, [r3, #20]
 800571c:	4798      	blx	r3
}
 800571e:	4620      	mov	r0, r4
 8005720:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    model->bind(newPresenter);
 8005724:	4623      	mov	r3, r4
 8005726:	e7e1      	b.n	80056ec <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xec>
 8005728:	08029aec 	.word	0x08029aec
 800572c:	08029e0b 	.word	0x08029e0b
 8005730:	08029c7e 	.word	0x08029c7e
 8005734:	08029cc5 	.word	0x08029cc5
 8005738:	08029d68 	.word	0x08029d68
 800573c:	08029f74 	.word	0x08029f74

08005740 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen2ScreenNoTransitionImpl()
{
 8005740:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005742:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 8005746:	9300      	str	r3, [sp, #0]
 8005748:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 800574c:	4b04      	ldr	r3, [pc, #16]	; (8005760 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x20>)
 800574e:	f500 719c 	add.w	r1, r0, #312	; 0x138
 8005752:	4804      	ldr	r0, [pc, #16]	; (8005764 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x24>)
 8005754:	f7ff ff54 	bl	8005600 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8005758:	b003      	add	sp, #12
 800575a:	f85d fb04 	ldr.w	pc, [sp], #4
 800575e:	bf00      	nop
 8005760:	2002bd74 	.word	0x2002bd74
 8005764:	2002bd70 	.word	0x2002bd70

08005768 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8005768:	6a00      	ldr	r0, [r0, #32]
 800576a:	4770      	bx	lr

0800576c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 800576c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800576e:	4770      	bx	lr

08005770 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8005770:	4770      	bx	lr

08005772 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8005772:	888b      	ldrh	r3, [r1, #4]
 8005774:	6980      	ldr	r0, [r0, #24]
 8005776:	680a      	ldr	r2, [r1, #0]
 8005778:	0adb      	lsrs	r3, r3, #11
 800577a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 800577e:	4410      	add	r0, r2
 8005780:	4770      	bx	lr

08005782 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8005782:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8005784:	b1c2      	cbz	r2, 80057b8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8005786:	7b13      	ldrb	r3, [r2, #12]
 8005788:	b1b3      	cbz	r3, 80057b8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800578a:	7b54      	ldrb	r4, [r2, #13]
 800578c:	7ad2      	ldrb	r2, [r2, #11]
 800578e:	0224      	lsls	r4, r4, #8
 8005790:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005794:	4314      	orrs	r4, r2
 8005796:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005798:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800579a:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800579e:	8813      	ldrh	r3, [r2, #0]
 80057a0:	428b      	cmp	r3, r1
 80057a2:	d102      	bne.n	80057aa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80057a4:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80057a8:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80057aa:	d805      	bhi.n	80057b8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80057ac:	3801      	subs	r0, #1
 80057ae:	b280      	uxth	r0, r0
 80057b0:	3204      	adds	r2, #4
 80057b2:	2800      	cmp	r0, #0
 80057b4:	d1f3      	bne.n	800579e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80057b6:	e7f7      	b.n	80057a8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80057b8:	2000      	movs	r0, #0
 80057ba:	e7f5      	b.n	80057a8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080057bc <_ZN8touchgfx13GeneratedFontD0Ev>:
 80057bc:	b510      	push	{r4, lr}
 80057be:	2128      	movs	r1, #40	; 0x28
 80057c0:	4604      	mov	r4, r0
 80057c2:	f021 ffaf 	bl	8027724 <_ZdlPvj>
 80057c6:	4620      	mov	r0, r4
 80057c8:	bd10      	pop	{r4, pc}
	...

080057cc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80057cc:	b530      	push	{r4, r5, lr}
 80057ce:	b089      	sub	sp, #36	; 0x24
 80057d0:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80057d2:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 80057d6:	9506      	str	r5, [sp, #24]
 80057d8:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80057dc:	9505      	str	r5, [sp, #20]
 80057de:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80057e2:	9504      	str	r5, [sp, #16]
 80057e4:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80057e8:	9503      	str	r5, [sp, #12]
 80057ea:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 80057ee:	9502      	str	r5, [sp, #8]
 80057f0:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 80057f4:	9501      	str	r5, [sp, #4]
 80057f6:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80057fa:	9500      	str	r5, [sp, #0]
 80057fc:	f013 f810 	bl	8018820 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8005800:	4b06      	ldr	r3, [pc, #24]	; (800581c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 8005802:	6023      	str	r3, [r4, #0]
 8005804:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005806:	61a3      	str	r3, [r4, #24]
 8005808:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800580a:	61e3      	str	r3, [r4, #28]
 800580c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800580e:	6223      	str	r3, [r4, #32]
 8005810:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8005812:	6263      	str	r3, [r4, #36]	; 0x24
}
 8005814:	4620      	mov	r0, r4
 8005816:	b009      	add	sp, #36	; 0x24
 8005818:	bd30      	pop	{r4, r5, pc}
 800581a:	bf00      	nop
 800581c:	08029f98 	.word	0x08029f98

08005820 <_ZN12ListTileBaseD1Ev>:

class ListTileBase : public touchgfx::Container
{
public:
    ListTileBase();
    virtual ~ListTileBase() {}
 8005820:	4770      	bx	lr

08005822 <_ZN12ListTileBase20emitTrigger1CallbackEv>:
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitTrigger1Callback()
 8005822:	b510      	push	{r4, lr}
 8005824:	4604      	mov	r4, r0
    {
        if (trigger1Callback && trigger1Callback->isValid())
 8005826:	f8d0 00e4 	ldr.w	r0, [r0, #228]	; 0xe4
 800582a:	b150      	cbz	r0, 8005842 <_ZN12ListTileBase20emitTrigger1CallbackEv+0x20>
 800582c:	6803      	ldr	r3, [r0, #0]
 800582e:	68db      	ldr	r3, [r3, #12]
 8005830:	4798      	blx	r3
 8005832:	b130      	cbz	r0, 8005842 <_ZN12ListTileBase20emitTrigger1CallbackEv+0x20>
        {
            this->trigger1Callback->execute();
 8005834:	f8d4 00e4 	ldr.w	r0, [r4, #228]	; 0xe4
 8005838:	6803      	ldr	r3, [r0, #0]
        }
    }
 800583a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            this->trigger1Callback->execute();
 800583e:	689b      	ldr	r3, [r3, #8]
 8005840:	4718      	bx	r3
    }
 8005842:	bd10      	pop	{r4, pc}

08005844 <_ZN12ListTileBase10initializeEv>:
}

void ListTileBase::initialize()
{

}
 8005844:	4770      	bx	lr

08005846 <_ZN12ListTileBaseD0Ev>:
    virtual ~ListTileBase() {}
 8005846:	b510      	push	{r4, lr}
 8005848:	21e8      	movs	r1, #232	; 0xe8
 800584a:	4604      	mov	r4, r0
 800584c:	f021 ff6a 	bl	8027724 <_ZdlPvj>
 8005850:	4620      	mov	r0, r4
 8005852:	bd10      	pop	{r4, pc}

08005854 <_ZN12ListTileBaseC1Ev>:
ListTileBase::ListTileBase() :
 8005854:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8005858:	4604      	mov	r4, r0
    trigger1Callback(0)
 800585a:	4627      	mov	r7, r4
 800585c:	2500      	movs	r5, #0
 800585e:	f7fc fe41 	bl	80024e4 <_ZN8touchgfx8DrawableC1Ev>
 8005862:	4b4a      	ldr	r3, [pc, #296]	; (800598c <_ZN12ListTileBaseC1Ev+0x138>)
 8005864:	62a5      	str	r5, [r4, #40]	; 0x28
 8005866:	f847 3b2c 	str.w	r3, [r7], #44
 800586a:	f104 0858 	add.w	r8, r4, #88	; 0x58
 800586e:	4638      	mov	r0, r7
 8005870:	f7fd f92a 	bl	8002ac8 <_ZN8touchgfx3BoxC1Ev>
 8005874:	f104 0684 	add.w	r6, r4, #132	; 0x84
 8005878:	4640      	mov	r0, r8
 800587a:	f7fd f925 	bl	8002ac8 <_ZN8touchgfx3BoxC1Ev>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 800587e:	4629      	mov	r1, r5
 8005880:	2226      	movs	r2, #38	; 0x26
 8005882:	4630      	mov	r0, r6
 8005884:	f022 f92a 	bl	8027adc <memset>
 8005888:	4630      	mov	r0, r6
 800588a:	f7fc fe2b 	bl	80024e4 <_ZN8touchgfx8DrawableC1Ev>
 800588e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005892:	f8a4 30b0 	strh.w	r3, [r4, #176]	; 0xb0
 8005896:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 800589a:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
        : TextArea(), wildcard(0)
 800589e:	4b3c      	ldr	r3, [pc, #240]	; (8005990 <_ZN12ListTileBaseC1Ev+0x13c>)
 80058a0:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
        setXY(x, y);
 80058a4:	2201      	movs	r2, #1
        rect.width = width;
 80058a6:	4b3b      	ldr	r3, [pc, #236]	; (8005994 <_ZN12ListTileBaseC1Ev+0x140>)
 80058a8:	f8df 9110 	ldr.w	r9, [pc, #272]	; 80059bc <_ZN12ListTileBaseC1Ev+0x168>
 80058ac:	60a3      	str	r3, [r4, #8]
        setXY(x, y);
 80058ae:	4611      	mov	r1, r2
 80058b0:	f8c4 50b4 	str.w	r5, [r4, #180]	; 0xb4
 80058b4:	f8a4 50bc 	strh.w	r5, [r4, #188]	; 0xbc
 80058b8:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
 80058bc:	f8c4 50e4 	str.w	r5, [r4, #228]	; 0xe4
 80058c0:	4638      	mov	r0, r7
 80058c2:	f8c4 90ac 	str.w	r9, [r4, #172]	; 0xac
 80058c6:	f7fc fe1f 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80058ca:	221e      	movs	r2, #30
 80058cc:	21b8      	movs	r1, #184	; 0xb8
 80058ce:	4638      	mov	r0, r7
 80058d0:	f7fc fc87 	bl	80021e2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
        this->color = color;
 80058d4:	f04f 3aff 	mov.w	sl, #4294967295
        setXY(x, y);
 80058d8:	2201      	movs	r2, #1
 80058da:	4611      	mov	r1, r2
        visible = vis;
 80058dc:	f884 5051 	strb.w	r5, [r4, #81]	; 0x51
        setXY(x, y);
 80058e0:	4640      	mov	r0, r8
 80058e2:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
 80058e6:	f7fc fe0f 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80058ea:	221e      	movs	r2, #30
 80058ec:	21b8      	movs	r1, #184	; 0xb8
 80058ee:	4640      	mov	r0, r8
 80058f0:	f7fc fc77 	bl	80021e2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80058f4:	4b28      	ldr	r3, [pc, #160]	; (8005998 <_ZN12ListTileBaseC1Ev+0x144>)
 80058f6:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
        visible = vis;
 80058fa:	f884 507d 	strb.w	r5, [r4, #125]	; 0x7d
        setXY(x, y);
 80058fe:	2204      	movs	r2, #4
 8005900:	2106      	movs	r1, #6
 8005902:	4630      	mov	r0, r6
 8005904:	f7fc fe00 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8005908:	2219      	movs	r2, #25
 800590a:	2182      	movs	r1, #130	; 0x82
 800590c:	4630      	mov	r0, r6
 800590e:	f7fc fc68 	bl	80021e2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005912:	4b22      	ldr	r3, [pc, #136]	; (800599c <_ZN12ListTileBaseC1Ev+0x148>)
        linespace = space;
 8005914:	f8a4 50b8 	strh.w	r5, [r4, #184]	; 0xb8
 8005918:	681b      	ldr	r3, [r3, #0]
        this->color = color;
 800591a:	f8c4 a0b4 	str.w	sl, [r4, #180]	; 0xb4
    Unicode::snprintf(textBuffer, TEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_510H).getText());
 800591e:	f104 05c4 	add.w	r5, r4, #196	; 0xc4
 8005922:	b92b      	cbnz	r3, 8005930 <_ZN12ListTileBaseC1Ev+0xdc>
 8005924:	4b1e      	ldr	r3, [pc, #120]	; (80059a0 <_ZN12ListTileBaseC1Ev+0x14c>)
 8005926:	4a1f      	ldr	r2, [pc, #124]	; (80059a4 <_ZN12ListTileBaseC1Ev+0x150>)
 8005928:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800592a:	481f      	ldr	r0, [pc, #124]	; (80059a8 <_ZN12ListTileBaseC1Ev+0x154>)
 800592c:	f021 ff28 	bl	8027780 <__assert_func>
 8005930:	4b1e      	ldr	r3, [pc, #120]	; (80059ac <_ZN12ListTileBaseC1Ev+0x158>)
 8005932:	881b      	ldrh	r3, [r3, #0]
 8005934:	2b50      	cmp	r3, #80	; 0x50
 8005936:	d803      	bhi.n	8005940 <_ZN12ListTileBaseC1Ev+0xec>
 8005938:	4b1d      	ldr	r3, [pc, #116]	; (80059b0 <_ZN12ListTileBaseC1Ev+0x15c>)
 800593a:	4a1a      	ldr	r2, [pc, #104]	; (80059a4 <_ZN12ListTileBaseC1Ev+0x150>)
 800593c:	21af      	movs	r1, #175	; 0xaf
 800593e:	e7f4      	b.n	800592a <_ZN12ListTileBaseC1Ev+0xd6>
        return texts->getText(typedTextId);
 8005940:	4b1c      	ldr	r3, [pc, #112]	; (80059b4 <_ZN12ListTileBaseC1Ev+0x160>)
 8005942:	2150      	movs	r1, #80	; 0x50
 8005944:	6818      	ldr	r0, [r3, #0]
 8005946:	f003 f95f 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 800594a:	4a1b      	ldr	r2, [pc, #108]	; (80059b8 <_ZN12ListTileBaseC1Ev+0x164>)
 800594c:	4603      	mov	r3, r0
 800594e:	2110      	movs	r1, #16
 8005950:	4628      	mov	r0, r5
 8005952:	f015 fbbb 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8005956:	234f      	movs	r3, #79	; 0x4f
    text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7SO4));
 8005958:	4669      	mov	r1, sp
 800595a:	4630      	mov	r0, r6
        wildcard = value;
 800595c:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
 8005960:	f8ad 3004 	strh.w	r3, [sp, #4]
 8005964:	f8cd 9000 	str.w	r9, [sp]
 8005968:	f00f fb19 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(boxBg_1);
 800596c:	4639      	mov	r1, r7
 800596e:	4620      	mov	r0, r4
 8005970:	f00d fd7e 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxBg);
 8005974:	4641      	mov	r1, r8
 8005976:	4620      	mov	r0, r4
 8005978:	f00d fd7a 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(text);
 800597c:	4620      	mov	r0, r4
 800597e:	4631      	mov	r1, r6
 8005980:	f00d fd76 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005984:	4620      	mov	r0, r4
 8005986:	b002      	add	sp, #8
 8005988:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800598c:	08029ff0 	.word	0x08029ff0
 8005990:	0802c3a8 	.word	0x0802c3a8
 8005994:	002000ba 	.word	0x002000ba
 8005998:	ff9ae624 	.word	0xff9ae624
 800599c:	2002bd84 	.word	0x2002bd84
 80059a0:	08029478 	.word	0x08029478
 80059a4:	080294ba 	.word	0x080294ba
 80059a8:	080294e8 	.word	0x080294e8
 80059ac:	2002bd88 	.word	0x2002bd88
 80059b0:	0802952f 	.word	0x0802952f
 80059b4:	2002bd90 	.word	0x2002bd90
 80059b8:	08029581 	.word	0x08029581
 80059bc:	0802958c 	.word	0x0802958c

080059c0 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80059c0:	4770      	bx	lr

080059c2 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80059c2:	4770      	bx	lr

080059c4 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80059c4:	4770      	bx	lr

080059c6 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80059c6:	4770      	bx	lr

080059c8 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 80059c8:	4770      	bx	lr

080059ca <_ZN15Screen1ViewBase18functionFilterDateEv>:
     * Virtual Action Handlers
     */
    virtual void functionFilterDate()
    {
        // Override and implement this function in Screen1
    }
 80059ca:	4770      	bx	lr

080059cc <_ZN15Screen1ViewBase15functionReadLogEv>:

    virtual void functionReadLog()
    {
        // Override and implement this function in Screen1
    }
 80059cc:	4770      	bx	lr

080059ce <_ZN15Screen1ViewBase16functionPageBackEv>:

    virtual void functionPageBack()
    {
        // Override and implement this function in Screen1
    }
 80059ce:	4770      	bx	lr

080059d0 <_ZN15Screen1ViewBase19functionPageForwardEv>:

    virtual void functionPageForward()
    {
        // Override and implement this function in Screen1
    }
 80059d0:	4770      	bx	lr

080059d2 <_ZN15Screen1ViewBase14functionPage_1Ev>:

    virtual void functionPage_1()
    {
        // Override and implement this function in Screen1
    }
 80059d2:	4770      	bx	lr

080059d4 <_ZN15Screen1ViewBase14functionPage_2Ev>:

    virtual void functionPage_2()
    {
        // Override and implement this function in Screen1
    }
 80059d4:	4770      	bx	lr

080059d6 <_ZN15Screen1ViewBase14functionPage_3Ev>:

    virtual void functionPage_3()
    {
        // Override and implement this function in Screen1
    }
 80059d6:	4770      	bx	lr

080059d8 <_ZN15Screen1ViewBase14functionPage_4Ev>:

    virtual void functionPage_4()
    {
        // Override and implement this function in Screen1
    }
 80059d8:	4770      	bx	lr

080059da <_ZN15Screen1ViewBase14functionPage_5Ev>:

    virtual void functionPage_5()
    {
        // Override and implement this function in Screen1
    }
 80059da:	4770      	bx	lr

080059dc <_ZN15Screen1ViewBase21functionOkFilDataTimeEv>:

    virtual void functionOkFilDataTime()
    {
        // Override and implement this function in Screen1
    }
 80059dc:	4770      	bx	lr

080059de <_ZN15Screen1ViewBase17functionFilterNumEv>:

    virtual void functionFilterNum()
    {
        // Override and implement this function in Screen1
    }
 80059de:	4770      	bx	lr

080059e0 <_ZN15Screen1ViewBase25functionFilterTypeChannelEv>:

    virtual void functionFilterTypeChannel()
    {
        // Override and implement this function in Screen1
    }
 80059e0:	4770      	bx	lr

080059e2 <_ZN15Screen1ViewBase20functionFilterStLoopEv>:

    virtual void functionFilterStLoop()
    {
        // Override and implement this function in Screen1
    }
 80059e2:	4770      	bx	lr

080059e4 <_ZN15Screen1ViewBase18functionFilterUnitEv>:

    virtual void functionFilterUnit()
    {
        // Override and implement this function in Screen1
    }
 80059e4:	4770      	bx	lr

080059e6 <_ZN15Screen1ViewBase23functionFilterThresholdEv>:

    virtual void functionFilterThreshold()
    {
        // Override and implement this function in Screen1
    }
 80059e6:	4770      	bx	lr

080059e8 <_ZN15Screen1ViewBase17functionFilterErrEv>:

    virtual void functionFilterErr()
    {
        // Override and implement this function in Screen1
    }
 80059e8:	4770      	bx	lr

080059ea <_ZN15Screen1ViewBase17functionFilterGasEv>:

    virtual void functionFilterGas()
    {
        // Override and implement this function in Screen1
    }
 80059ea:	4770      	bx	lr

080059ec <_ZN15Screen1ViewBase24functionFilterDate_Type2Ev>:

    virtual void functionFilterDate_Type2()
    {
        // Override and implement this function in Screen1
    }
 80059ec:	4770      	bx	lr

080059ee <_ZN15Screen1ViewBase23functionFilterNum_Type2Ev>:

    virtual void functionFilterNum_Type2()
    {
        // Override and implement this function in Screen1
    }
 80059ee:	4770      	bx	lr

080059f0 <_ZN15Screen1ViewBase24functionFilterUnit_Type2Ev>:

    virtual void functionFilterUnit_Type2()
    {
        // Override and implement this function in Screen1
    }
 80059f0:	4770      	bx	lr

080059f2 <_ZN15Screen1ViewBase23functionFilterGas_Type2Ev>:

    virtual void functionFilterGas_Type2()
    {
        // Override and implement this function in Screen1
    }
 80059f2:	4770      	bx	lr

080059f4 <_ZN15Screen1ViewBase16functionTurnLog1Ev>:

    virtual void functionTurnLog1()
    {
        // Override and implement this function in Screen1
    }
 80059f4:	4770      	bx	lr

080059f6 <_ZN15Screen1ViewBase16functionTurnLog2Ev>:

    virtual void functionTurnLog2()
    {
        // Override and implement this function in Screen1
    }
 80059f6:	4770      	bx	lr

080059f8 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    TextAreaWithTwoWildcards twoWildcardText; ///< The wildcard text
    colortype colorReleased;                  ///< The color released
    colortype colorPressed;                   ///< The color pressed

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 80059f8:	b508      	push	{r3, lr}
    {
        twoWildcardText.setColor(T::getPressed() ? colorPressed : colorReleased);
 80059fa:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80059fe:	b133      	cbz	r3, 8005a0e <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x16>
 8005a00:	f8d0 30c0 	ldr.w	r3, [r0, #192]	; 0xc0
 8005a04:	f8c0 30a8 	str.w	r3, [r0, #168]	; 0xa8
        T::handlePressedUpdated();
 8005a08:	f7fc fcbc 	bl	8002384 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 8005a0c:	bd08      	pop	{r3, pc}
        twoWildcardText.setColor(T::getPressed() ? colorPressed : colorReleased);
 8005a0e:	f8d0 30bc 	ldr.w	r3, [r0, #188]	; 0xbc
 8005a12:	e7f7      	b.n	8005a04 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0xc>

08005a14 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005a14:	4770      	bx	lr

08005a16 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 8005a16:	4770      	bx	lr

08005a18 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
class TwoWildcardTextButtonStyle : public T
 8005a18:	4770      	bx	lr

08005a1a <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005a1a:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8005a1c:	68c2      	ldr	r2, [r0, #12]
 8005a1e:	6844      	ldr	r4, [r0, #4]
 8005a20:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005a22:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8005a24:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005a28:	07d2      	lsls	r2, r2, #31
 8005a2a:	bf48      	it	mi
 8005a2c:	5962      	ldrmi	r2, [r4, r5]
 8005a2e:	689b      	ldr	r3, [r3, #8]
    }
 8005a30:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8005a32:	bf48      	it	mi
 8005a34:	58d3      	ldrmi	r3, [r2, r3]
 8005a36:	4718      	bx	r3

08005a38 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8005a38:	6843      	ldr	r3, [r0, #4]
 8005a3a:	b12b      	cbz	r3, 8005a48 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8005a3c:	6883      	ldr	r3, [r0, #8]
 8005a3e:	b92b      	cbnz	r3, 8005a4c <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8005a40:	68c0      	ldr	r0, [r0, #12]
 8005a42:	f000 0001 	and.w	r0, r0, #1
 8005a46:	4770      	bx	lr
 8005a48:	4618      	mov	r0, r3
 8005a4a:	4770      	bx	lr
 8005a4c:	2001      	movs	r0, #1
    }
 8005a4e:	4770      	bx	lr

08005a50 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005a50:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8005a52:	68c2      	ldr	r2, [r0, #12]
 8005a54:	6844      	ldr	r4, [r0, #4]
 8005a56:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005a58:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8005a5a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005a5e:	07d2      	lsls	r2, r2, #31
 8005a60:	bf48      	it	mi
 8005a62:	5962      	ldrmi	r2, [r4, r5]
 8005a64:	689b      	ldr	r3, [r3, #8]
    }
 8005a66:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8005a68:	bf48      	it	mi
 8005a6a:	58d3      	ldrmi	r3, [r2, r3]
 8005a6c:	4718      	bx	r3

08005a6e <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8005a6e:	6843      	ldr	r3, [r0, #4]
 8005a70:	b12b      	cbz	r3, 8005a7e <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005a72:	6883      	ldr	r3, [r0, #8]
 8005a74:	b92b      	cbnz	r3, 8005a82 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005a76:	68c0      	ldr	r0, [r0, #12]
 8005a78:	f000 0001 	and.w	r0, r0, #1
 8005a7c:	4770      	bx	lr
 8005a7e:	4618      	mov	r0, r3
 8005a80:	4770      	bx	lr
 8005a82:	2001      	movs	r0, #1
    }
 8005a84:	4770      	bx	lr

08005a86 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        twoWildcardText.setAlpha(T::getAlpha());
 8005a86:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
        alpha = newAlpha;
 8005a8a:	f880 30ae 	strb.w	r3, [r0, #174]	; 0xae
        alpha = newAlpha;
 8005a8e:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
        T::handleAlphaUpdated();
    }
 8005a92:	4770      	bx	lr

08005a94 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005a94:	b510      	push	{r4, lr}
 8005a96:	2110      	movs	r1, #16
 8005a98:	4604      	mov	r4, r0
 8005a9a:	f021 fe43 	bl	8027724 <_ZdlPvj>
 8005a9e:	4620      	mov	r0, r4
 8005aa0:	bd10      	pop	{r4, pc}

08005aa2 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 8005aa2:	b510      	push	{r4, lr}
 8005aa4:	2110      	movs	r1, #16
 8005aa6:	4604      	mov	r4, r0
 8005aa8:	f021 fe3c 	bl	8027724 <_ZdlPvj>
 8005aac:	4620      	mov	r0, r4
 8005aae:	bd10      	pop	{r4, pc}

08005ab0 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class TwoWildcardTextButtonStyle : public T
 8005ab0:	b510      	push	{r4, lr}
 8005ab2:	21c4      	movs	r1, #196	; 0xc4
 8005ab4:	4604      	mov	r4, r0
 8005ab6:	f021 fe35 	bl	8027724 <_ZdlPvj>
 8005aba:	4620      	mov	r0, r4
 8005abc:	bd10      	pop	{r4, pc}

08005abe <_ZN15Screen1ViewBase11setupScreenEv>:
    add(flexButtonTurnLog1);
    add(flexButtonTurnLog2);
}

void Screen1ViewBase::setupScreen()
{
 8005abe:	b510      	push	{r4, lr}
 8005ac0:	4604      	mov	r4, r0
    customContainerTableLog_Type2_0.initialize();
 8005ac2:	30d0      	adds	r0, #208	; 0xd0
 8005ac4:	f003 fdab 	bl	800961e <_ZN29CustomContainerTableLog_Type210initializeEv>
    customContainerTableLog_Type2_1.initialize();
 8005ac8:	f204 6064 	addw	r0, r4, #1636	; 0x664
 8005acc:	f003 fda7 	bl	800961e <_ZN29CustomContainerTableLog_Type210initializeEv>
    customContainerTableLog_Type2_2.initialize();
 8005ad0:	f604 30f8 	addw	r0, r4, #3064	; 0xbf8
 8005ad4:	f003 fda3 	bl	800961e <_ZN29CustomContainerTableLog_Type210initializeEv>
    customContainerTableLog_Type2_3.initialize();
 8005ad8:	f504 508c 	add.w	r0, r4, #4480	; 0x1180
 8005adc:	300c      	adds	r0, #12
 8005ade:	f003 fd9e 	bl	800961e <_ZN29CustomContainerTableLog_Type210initializeEv>
    customContainerTableLog_Type2_4.initialize();
 8005ae2:	f504 50b9 	add.w	r0, r4, #5920	; 0x1720
 8005ae6:	f003 fd9a 	bl	800961e <_ZN29CustomContainerTableLog_Type210initializeEv>
    customContainerTableLog_Type2_5.initialize();
 8005aea:	f504 50e5 	add.w	r0, r4, #7328	; 0x1ca0
 8005aee:	3014      	adds	r0, #20
 8005af0:	f003 fd95 	bl	800961e <_ZN29CustomContainerTableLog_Type210initializeEv>
    customContainerTableLog_Type2_6.initialize();
 8005af4:	f504 5009 	add.w	r0, r4, #8768	; 0x2240
 8005af8:	3008      	adds	r0, #8
 8005afa:	f003 fd90 	bl	800961e <_ZN29CustomContainerTableLog_Type210initializeEv>
    customContainerTableLog_Type2_7.initialize();
 8005afe:	f504 501f 	add.w	r0, r4, #10176	; 0x27c0
 8005b02:	301c      	adds	r0, #28
 8005b04:	f003 fd8b 	bl	800961e <_ZN29CustomContainerTableLog_Type210initializeEv>
    customContainerTableLog_Type2_8.initialize();
 8005b08:	f504 5035 	add.w	r0, r4, #11584	; 0x2d40
 8005b0c:	3030      	adds	r0, #48	; 0x30
 8005b0e:	f003 fd86 	bl	800961e <_ZN29CustomContainerTableLog_Type210initializeEv>
    customContainerTableLog_Type2_9.initialize();
 8005b12:	f504 504c 	add.w	r0, r4, #13056	; 0x3300
 8005b16:	3004      	adds	r0, #4
 8005b18:	f003 fd81 	bl	800961e <_ZN29CustomContainerTableLog_Type210initializeEv>
    customContainerTableLog_0.initialize();
 8005b1c:	f504 5063 	add.w	r0, r4, #14528	; 0x38c0
 8005b20:	3008      	adds	r0, #8
 8005b22:	f003 fca0 	bl	8009466 <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_1.initialize();
 8005b26:	f504 507a 	add.w	r0, r4, #16000	; 0x3e80
 8005b2a:	3018      	adds	r0, #24
 8005b2c:	f003 fc9b 	bl	8009466 <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_2.initialize();
 8005b30:	f504 4088 	add.w	r0, r4, #17408	; 0x4400
 8005b34:	3068      	adds	r0, #104	; 0x68
 8005b36:	f003 fc96 	bl	8009466 <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_3.initialize();
 8005b3a:	f504 4094 	add.w	r0, r4, #18944	; 0x4a00
 8005b3e:	3038      	adds	r0, #56	; 0x38
 8005b40:	f003 fc91 	bl	8009466 <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_4.initialize();
 8005b44:	f504 40a0 	add.w	r0, r4, #20480	; 0x5000
 8005b48:	3008      	adds	r0, #8
 8005b4a:	f003 fc8c 	bl	8009466 <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_5.initialize();
 8005b4e:	f504 40ab 	add.w	r0, r4, #21888	; 0x5580
 8005b52:	3058      	adds	r0, #88	; 0x58
 8005b54:	f003 fc87 	bl	8009466 <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_6.initialize();
 8005b58:	f504 40b7 	add.w	r0, r4, #23424	; 0x5b80
 8005b5c:	3028      	adds	r0, #40	; 0x28
 8005b5e:	f003 fc82 	bl	8009466 <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_7.initialize();
 8005b62:	f504 40c2 	add.w	r0, r4, #24832	; 0x6100
 8005b66:	3078      	adds	r0, #120	; 0x78
 8005b68:	f003 fc7d 	bl	8009466 <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_8.initialize();
 8005b6c:	f504 40ce 	add.w	r0, r4, #26368	; 0x6700
 8005b70:	3048      	adds	r0, #72	; 0x48
 8005b72:	f003 fc78 	bl	8009466 <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_9.initialize();
 8005b76:	f504 40da 	add.w	r0, r4, #27904	; 0x6d00
 8005b7a:	3018      	adds	r0, #24
 8005b7c:	f003 fc73 	bl	8009466 <_ZN23CustomContainerTableLog10initializeEv>
    ListFilterLog_Gas.initialize();
 8005b80:	f504 4008 	add.w	r0, r4, #34816	; 0x8800
 8005b84:	3028      	adds	r0, #40	; 0x28
 8005b86:	f003 f886 	bl	8008c96 <_ZN19ConfigListFilterLog10initializeEv>
    ListFilterLog_Err.initialize();
 8005b8a:	f504 4018 	add.w	r0, r4, #38912	; 0x9800
 8005b8e:	3050      	adds	r0, #80	; 0x50
 8005b90:	f003 f881 	bl	8008c96 <_ZN19ConfigListFilterLog10initializeEv>
    ListFilterLog_StCur.initialize();
 8005b94:	f504 4028 	add.w	r0, r4, #43008	; 0xa800
 8005b98:	3078      	adds	r0, #120	; 0x78
 8005b9a:	f003 f87c 	bl	8008c96 <_ZN19ConfigListFilterLog10initializeEv>
    ListFilterLog_Unit.initialize();
 8005b9e:	f504 4038 	add.w	r0, r4, #47104	; 0xb800
 8005ba2:	30a0      	adds	r0, #160	; 0xa0
 8005ba4:	f003 f877 	bl	8008c96 <_ZN19ConfigListFilterLog10initializeEv>
    ListFilterLog_StLoop.initialize();
 8005ba8:	f504 4048 	add.w	r0, r4, #51200	; 0xc800
 8005bac:	30c8      	adds	r0, #200	; 0xc8
 8005bae:	f003 f872 	bl	8008c96 <_ZN19ConfigListFilterLog10initializeEv>
    ListFilterLog_TypeChan.initialize();
 8005bb2:	f504 4058 	add.w	r0, r4, #55296	; 0xd800
 8005bb6:	30f0      	adds	r0, #240	; 0xf0
 8005bb8:	f003 f86d 	bl	8008c96 <_ZN19ConfigListFilterLog10initializeEv>
    ListFilterLog_Num.initialize();
 8005bbc:	f504 4069 	add.w	r0, r4, #59648	; 0xe900
 8005bc0:	3018      	adds	r0, #24
}
 8005bc2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    ListFilterLog_Num.initialize();
 8005bc6:	f003 b866 	b.w	8008c96 <_ZN19ConfigListFilterLog10initializeEv>

08005bca <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    }
}

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButtonReadLog)
 8005bca:	f500 42e6 	add.w	r2, r0, #29440	; 0x7300
 8005bce:	321c      	adds	r2, #28
 8005bd0:	4291      	cmp	r1, r2
{
 8005bd2:	4603      	mov	r3, r0
    if (&src == &flexButtonReadLog)
 8005bd4:	d102      	bne.n	8005bdc <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x12>
    {
        //InteractionReadLog
        //When flexButtonReadLog clicked call virtual function
        //Call functionReadLog
        functionReadLog();
 8005bd6:	6803      	ldr	r3, [r0, #0]
 8005bd8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    else if (&src == &flexButtonPageBack)
    {
        //InteractionPageBack
        //When flexButtonPageBack clicked call virtual function
        //Call functionPageBack
        functionPageBack();
 8005bda:	4718      	bx	r3
    else if (&src == &flexButtonPageBack)
 8005bdc:	f500 42e8 	add.w	r2, r0, #29696	; 0x7400
 8005be0:	3208      	adds	r2, #8
 8005be2:	4291      	cmp	r1, r2
 8005be4:	d102      	bne.n	8005bec <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
        functionPageBack();
 8005be6:	6803      	ldr	r3, [r0, #0]
 8005be8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005bea:	e7f6      	b.n	8005bda <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    }
    else if (&src == &flexButtonPage_1)
 8005bec:	f500 42e9 	add.w	r2, r0, #29824	; 0x7480
 8005bf0:	3248      	adds	r2, #72	; 0x48
 8005bf2:	4291      	cmp	r1, r2
 8005bf4:	d102      	bne.n	8005bfc <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x32>
    {
        //InteractionPage_1
        //When flexButtonPage_1 clicked call virtual function
        //Call functionPage_1
        functionPage_1();
 8005bf6:	6803      	ldr	r3, [r0, #0]
 8005bf8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005bfa:	e7ee      	b.n	8005bda <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    }
    else if (&src == &flexButtonPage_2)
 8005bfc:	f500 42eb 	add.w	r2, r0, #30080	; 0x7580
 8005c00:	3208      	adds	r2, #8
 8005c02:	4291      	cmp	r1, r2
 8005c04:	d102      	bne.n	8005c0c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x42>
    {
        //InteractionPage_2
        //When flexButtonPage_2 clicked call virtual function
        //Call functionPage_2
        functionPage_2();
 8005c06:	6803      	ldr	r3, [r0, #0]
 8005c08:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005c0a:	e7e6      	b.n	8005bda <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    }
    else if (&src == &flexButtonPage_3)
 8005c0c:	f500 42ec 	add.w	r2, r0, #30208	; 0x7600
 8005c10:	3248      	adds	r2, #72	; 0x48
 8005c12:	4291      	cmp	r1, r2
 8005c14:	d102      	bne.n	8005c1c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x52>
    {
        //InteractionPage_3
        //When flexButtonPage_3 clicked call virtual function
        //Call functionPage_3
        functionPage_3();
 8005c16:	6803      	ldr	r3, [r0, #0]
 8005c18:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005c1a:	e7de      	b.n	8005bda <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    }
    else if (&src == &flexButtonPage_4)
 8005c1c:	f500 42ee 	add.w	r2, r0, #30464	; 0x7700
 8005c20:	3208      	adds	r2, #8
 8005c22:	4291      	cmp	r1, r2
 8005c24:	d102      	bne.n	8005c2c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x62>
    {
        //InteractionPage_4
        //When flexButtonPage_4 clicked call virtual function
        //Call functionPage_4
        functionPage_4();
 8005c26:	6803      	ldr	r3, [r0, #0]
 8005c28:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005c2a:	e7d6      	b.n	8005bda <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    }
    else if (&src == &flexButtonPage_5)
 8005c2c:	f500 42ef 	add.w	r2, r0, #30592	; 0x7780
 8005c30:	3248      	adds	r2, #72	; 0x48
 8005c32:	4291      	cmp	r1, r2
 8005c34:	d102      	bne.n	8005c3c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x72>
    {
        //InteractionPage_5
        //When flexButtonPage_5 clicked call virtual function
        //Call functionPage_5
        functionPage_5();
 8005c36:	6803      	ldr	r3, [r0, #0]
 8005c38:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005c3a:	e7ce      	b.n	8005bda <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    }
    else if (&src == &flexButtonPageForward)
 8005c3c:	f500 42f1 	add.w	r2, r0, #30848	; 0x7880
 8005c40:	3208      	adds	r2, #8
 8005c42:	4291      	cmp	r1, r2
 8005c44:	d102      	bne.n	8005c4c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x82>
    {
        //InteractionPageForward
        //When flexButtonPageForward clicked call virtual function
        //Call functionPageForward
        functionPageForward();
 8005c46:	6803      	ldr	r3, [r0, #0]
 8005c48:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005c4a:	e7c6      	b.n	8005bda <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    }
    else if (&src == &flexButtonFilterData_Type2)
 8005c4c:	f500 42f2 	add.w	r2, r0, #30976	; 0x7900
 8005c50:	3278      	adds	r2, #120	; 0x78
 8005c52:	4291      	cmp	r1, r2
 8005c54:	d102      	bne.n	8005c5c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x92>
    {
        //InteractionFilterDate_Type2
        //When flexButtonFilterData_Type2 clicked call virtual function
        //Call functionFilterDate_Type2
        functionFilterDate_Type2();
 8005c56:	6803      	ldr	r3, [r0, #0]
 8005c58:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005c5a:	e7be      	b.n	8005bda <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    }
    else if (&src == &flexButtonFilterNum_Type2)
 8005c5c:	f500 42f4 	add.w	r2, r0, #31232	; 0x7a00
 8005c60:	3238      	adds	r2, #56	; 0x38
 8005c62:	4291      	cmp	r1, r2
 8005c64:	d103      	bne.n	8005c6e <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa4>
    {
        //InteractionFilterNum_Type2
        //When flexButtonFilterNum_Type2 clicked call virtual function
        //Call functionFilterNum_Type2
        functionFilterNum_Type2();
 8005c66:	6802      	ldr	r2, [r0, #0]
 8005c68:	6f52      	ldr	r2, [r2, #116]	; 0x74
    else if (&src == &flexButtonTurnLog2)
    {
        //InteractionTurnLog2
        //When flexButtonTurnLog2 clicked call virtual function
        //Call functionTurnLog2
        functionTurnLog2();
 8005c6a:	4618      	mov	r0, r3
 8005c6c:	4710      	bx	r2
    else if (&src == &flexButtonFilterUnit_Type2)
 8005c6e:	f500 42fd 	add.w	r2, r0, #32384	; 0x7e80
 8005c72:	324c      	adds	r2, #76	; 0x4c
 8005c74:	4291      	cmp	r1, r2
 8005c76:	d102      	bne.n	8005c7e <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xb4>
        functionFilterUnit_Type2();
 8005c78:	6802      	ldr	r2, [r0, #0]
 8005c7a:	6f92      	ldr	r2, [r2, #120]	; 0x78
 8005c7c:	e7f5      	b.n	8005c6a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa0>
    else if (&src == &flexButtonFilterGas_Type2)
 8005c7e:	f500 42ff 	add.w	r2, r0, #32640	; 0x7f80
 8005c82:	3210      	adds	r2, #16
 8005c84:	4291      	cmp	r1, r2
 8005c86:	d102      	bne.n	8005c8e <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc4>
        functionFilterGas_Type2();
 8005c88:	6802      	ldr	r2, [r0, #0]
 8005c8a:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8005c8c:	e7ed      	b.n	8005c6a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa0>
    else if (&src == &flexButtonFilterData)
 8005c8e:	f500 4201 	add.w	r2, r0, #33024	; 0x8100
 8005c92:	3248      	adds	r2, #72	; 0x48
 8005c94:	4291      	cmp	r1, r2
 8005c96:	d102      	bne.n	8005c9e <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xd4>
        functionFilterDate();
 8005c98:	6802      	ldr	r2, [r0, #0]
 8005c9a:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8005c9c:	e7e5      	b.n	8005c6a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa0>
    else if (&src == &flexButtonFilterNum)
 8005c9e:	f500 4202 	add.w	r2, r0, #33280	; 0x8200
 8005ca2:	3208      	adds	r2, #8
 8005ca4:	4291      	cmp	r1, r2
 8005ca6:	d102      	bne.n	8005cae <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe4>
        functionFilterNum();
 8005ca8:	6802      	ldr	r2, [r0, #0]
 8005caa:	6d52      	ldr	r2, [r2, #84]	; 0x54
 8005cac:	e7dd      	b.n	8005c6a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa0>
    else if (&src == &flexButtonFilterTypeChannel)
 8005cae:	f500 4202 	add.w	r2, r0, #33280	; 0x8200
 8005cb2:	32cc      	adds	r2, #204	; 0xcc
 8005cb4:	4291      	cmp	r1, r2
 8005cb6:	d102      	bne.n	8005cbe <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xf4>
        functionFilterTypeChannel();
 8005cb8:	6802      	ldr	r2, [r0, #0]
 8005cba:	6d92      	ldr	r2, [r2, #88]	; 0x58
 8005cbc:	e7d5      	b.n	8005c6a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa0>
    else if (&src == &flexButtonFilterStLoop)
 8005cbe:	f500 4203 	add.w	r2, r0, #33536	; 0x8300
 8005cc2:	3290      	adds	r2, #144	; 0x90
 8005cc4:	4291      	cmp	r1, r2
 8005cc6:	d102      	bne.n	8005cce <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x104>
        functionFilterStLoop();
 8005cc8:	6802      	ldr	r2, [r0, #0]
 8005cca:	6dd2      	ldr	r2, [r2, #92]	; 0x5c
 8005ccc:	e7cd      	b.n	8005c6a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa0>
    else if (&src == &flexButtonFilterUnit)
 8005cce:	f500 4205 	add.w	r2, r0, #34048	; 0x8500
 8005cd2:	3214      	adds	r2, #20
 8005cd4:	4291      	cmp	r1, r2
 8005cd6:	d102      	bne.n	8005cde <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x114>
        functionFilterUnit();
 8005cd8:	6802      	ldr	r2, [r0, #0]
 8005cda:	6e12      	ldr	r2, [r2, #96]	; 0x60
 8005cdc:	e7c5      	b.n	8005c6a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa0>
    else if (&src == &flexButtonFilterThreshold)
 8005cde:	f500 4205 	add.w	r2, r0, #34048	; 0x8500
 8005ce2:	32d8      	adds	r2, #216	; 0xd8
 8005ce4:	4291      	cmp	r1, r2
 8005ce6:	d102      	bne.n	8005cee <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x124>
        functionFilterThreshold();
 8005ce8:	6802      	ldr	r2, [r0, #0]
 8005cea:	6e52      	ldr	r2, [r2, #100]	; 0x64
 8005cec:	e7bd      	b.n	8005c6a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa0>
    else if (&src == &flexButtonFilterErr)
 8005cee:	f500 4206 	add.w	r2, r0, #34304	; 0x8600
 8005cf2:	329c      	adds	r2, #156	; 0x9c
 8005cf4:	4291      	cmp	r1, r2
 8005cf6:	d102      	bne.n	8005cfe <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x134>
        functionFilterErr();
 8005cf8:	6802      	ldr	r2, [r0, #0]
 8005cfa:	6e92      	ldr	r2, [r2, #104]	; 0x68
 8005cfc:	e7b5      	b.n	8005c6a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa0>
    else if (&src == &flexButtonFilterGas)
 8005cfe:	f500 4207 	add.w	r2, r0, #34560	; 0x8700
 8005d02:	3260      	adds	r2, #96	; 0x60
 8005d04:	4291      	cmp	r1, r2
 8005d06:	d102      	bne.n	8005d0e <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x144>
        functionFilterGas();
 8005d08:	6802      	ldr	r2, [r0, #0]
 8005d0a:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8005d0c:	e7ad      	b.n	8005c6a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa0>
    else if (&src == &flexButtonOkFilDataTime)
 8005d0e:	f500 427a 	add.w	r2, r0, #64000	; 0xfa00
 8005d12:	3270      	adds	r2, #112	; 0x70
 8005d14:	4291      	cmp	r1, r2
 8005d16:	d102      	bne.n	8005d1e <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x154>
        functionOkFilDataTime();
 8005d18:	6802      	ldr	r2, [r0, #0]
 8005d1a:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8005d1c:	e7a5      	b.n	8005c6a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa0>
    else if (&src == &flexButtonExitFilDataTime)
 8005d1e:	f500 427b 	add.w	r2, r0, #64256	; 0xfb00
 8005d22:	322c      	adds	r2, #44	; 0x2c
 8005d24:	4291      	cmp	r1, r2
 8005d26:	d108      	bne.n	8005d3a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x170>
        visible = vis;
 8005d28:	f64f 12e5 	movw	r2, #63973	; 0xf9e5
 8005d2c:	2100      	movs	r1, #0
 8005d2e:	5481      	strb	r1, [r0, r2]
        modalWindow1.invalidate();
 8005d30:	f500 4079 	add.w	r0, r0, #63744	; 0xf900
 8005d34:	30c0      	adds	r0, #192	; 0xc0
 8005d36:	f012 bcc9 	b.w	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>
    else if (&src == &flexButtonTurnLog1)
 8005d3a:	f500 427c 	add.w	r2, r0, #64512	; 0xfc00
 8005d3e:	3268      	adds	r2, #104	; 0x68
 8005d40:	4291      	cmp	r1, r2
 8005d42:	d103      	bne.n	8005d4c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x182>
        functionTurnLog1();
 8005d44:	6802      	ldr	r2, [r0, #0]
 8005d46:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8005d4a:	e78e      	b.n	8005c6a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa0>
    else if (&src == &flexButtonTurnLog2)
 8005d4c:	f500 427d 	add.w	r2, r0, #64768	; 0xfd00
 8005d50:	3224      	adds	r2, #36	; 0x24
 8005d52:	4291      	cmp	r1, r2
 8005d54:	d103      	bne.n	8005d5e <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x194>
        functionTurnLog2();
 8005d56:	6802      	ldr	r2, [r0, #0]
 8005d58:	f8d2 2084 	ldr.w	r2, [r2, #132]	; 0x84
 8005d5c:	e785      	b.n	8005c6a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa0>
    }
}
 8005d5e:	4770      	bx	lr

08005d60 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &button1)
 8005d60:	f500 40e5 	add.w	r0, r0, #29312	; 0x7280
 8005d64:	3068      	adds	r0, #104	; 0x68
 8005d66:	4281      	cmp	r1, r0
{
 8005d68:	b508      	push	{r3, lr}
    if (&src == &button1)
 8005d6a:	d105      	bne.n	8005d78 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005d6c:	f011 fd06 	bl	801777c <_ZN8touchgfx11Application11getInstanceEv>
}
 8005d70:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen2ScreenNoTransition();
 8005d74:	f7ff bb7e 	b.w	8005474 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>
}
 8005d78:	bd08      	pop	{r3, pc}
	...

08005d7c <_ZN8touchgfx10ListLayoutC1ENS_9DirectionE>:
     * @param  d (Optional) The direction to place the elements. ::SOUTH (Default)
     *           places the elements vertically, ::EAST places the elements horizontally.
     *
     * @see setDirection
     */
    ListLayout(const Direction d = SOUTH)
 8005d7c:	b538      	push	{r3, r4, r5, lr}
 8005d7e:	4604      	mov	r4, r0
 8005d80:	460d      	mov	r5, r1
 8005d82:	f7fc fbaf 	bl	80024e4 <_ZN8touchgfx8DrawableC1Ev>
        : Container(), direction(d), offset(0)
 8005d86:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
    {
        assert((d == SOUTH || d == EAST) && "Chosen direction not supported");
 8005d8a:	3d01      	subs	r5, #1
 8005d8c:	2300      	movs	r3, #0
        : Container(), direction(d), offset(0)
 8005d8e:	4a07      	ldr	r2, [pc, #28]	; (8005dac <_ZN8touchgfx10ListLayoutC1ENS_9DirectionE+0x30>)
 8005d90:	62a3      	str	r3, [r4, #40]	; 0x28
        assert((d == SOUTH || d == EAST) && "Chosen direction not supported");
 8005d92:	2d01      	cmp	r5, #1
        : Container(), direction(d), offset(0)
 8005d94:	6022      	str	r2, [r4, #0]
 8005d96:	85e3      	strh	r3, [r4, #46]	; 0x2e
        assert((d == SOUTH || d == EAST) && "Chosen direction not supported");
 8005d98:	d905      	bls.n	8005da6 <_ZN8touchgfx10ListLayoutC1ENS_9DirectionE+0x2a>
 8005d9a:	4b05      	ldr	r3, [pc, #20]	; (8005db0 <_ZN8touchgfx10ListLayoutC1ENS_9DirectionE+0x34>)
 8005d9c:	4a05      	ldr	r2, [pc, #20]	; (8005db4 <_ZN8touchgfx10ListLayoutC1ENS_9DirectionE+0x38>)
 8005d9e:	4806      	ldr	r0, [pc, #24]	; (8005db8 <_ZN8touchgfx10ListLayoutC1ENS_9DirectionE+0x3c>)
 8005da0:	2133      	movs	r1, #51	; 0x33
 8005da2:	f021 fced 	bl	8027780 <__assert_func>
    }
 8005da6:	4620      	mov	r0, r4
 8005da8:	bd38      	pop	{r3, r4, r5, pc}
 8005daa:	bf00      	nop
 8005dac:	0802b900 	.word	0x0802b900
 8005db0:	0802a07c 	.word	0x0802a07c
 8005db4:	0802a0ba 	.word	0x0802a0ba
 8005db8:	0802a0f0 	.word	0x0802a0f0

08005dbc <_ZN19ConfigListFilterLogD1Ev>:

class ConfigListFilterLog : public ConfigListFilterLogBase
{
public:
    ConfigListFilterLog();
    virtual ~ConfigListFilterLog()
 8005dbc:	b510      	push	{r4, lr}
 8005dbe:	4b04      	ldr	r3, [pc, #16]	; (8005dd0 <_ZN19ConfigListFilterLogD1Ev+0x14>)
 8005dc0:	6003      	str	r3, [r0, #0]
 8005dc2:	4604      	mov	r4, r0
 8005dc4:	f500 7092 	add.w	r0, r0, #292	; 0x124
 8005dc8:	f7fc f974 	bl	80020b4 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EED1Ev>
    {
    }
 8005dcc:	4620      	mov	r0, r4
 8005dce:	bd10      	pop	{r4, pc}
 8005dd0:	080293e8 	.word	0x080293e8

08005dd4 <_ZN15Screen1ViewBaseD1Ev>:
    virtual ~Screen1ViewBase() {}
 8005dd4:	4b14      	ldr	r3, [pc, #80]	; (8005e28 <_ZN15Screen1ViewBaseD1Ev+0x54>)
 8005dd6:	b510      	push	{r4, lr}
 8005dd8:	4604      	mov	r4, r0
 8005dda:	6003      	str	r3, [r0, #0]
 8005ddc:	f500 4069 	add.w	r0, r0, #59648	; 0xe900
 8005de0:	3018      	adds	r0, #24
 8005de2:	f7ff ffeb 	bl	8005dbc <_ZN19ConfigListFilterLogD1Ev>
 8005de6:	f504 4058 	add.w	r0, r4, #55296	; 0xd800
 8005dea:	30f0      	adds	r0, #240	; 0xf0
 8005dec:	f7ff ffe6 	bl	8005dbc <_ZN19ConfigListFilterLogD1Ev>
 8005df0:	f504 4048 	add.w	r0, r4, #51200	; 0xc800
 8005df4:	30c8      	adds	r0, #200	; 0xc8
 8005df6:	f7ff ffe1 	bl	8005dbc <_ZN19ConfigListFilterLogD1Ev>
 8005dfa:	f504 4038 	add.w	r0, r4, #47104	; 0xb800
 8005dfe:	30a0      	adds	r0, #160	; 0xa0
 8005e00:	f7ff ffdc 	bl	8005dbc <_ZN19ConfigListFilterLogD1Ev>
 8005e04:	f504 4028 	add.w	r0, r4, #43008	; 0xa800
 8005e08:	3078      	adds	r0, #120	; 0x78
 8005e0a:	f7ff ffd7 	bl	8005dbc <_ZN19ConfigListFilterLogD1Ev>
 8005e0e:	f504 4018 	add.w	r0, r4, #38912	; 0x9800
 8005e12:	3050      	adds	r0, #80	; 0x50
 8005e14:	f7ff ffd2 	bl	8005dbc <_ZN19ConfigListFilterLogD1Ev>
 8005e18:	f504 4008 	add.w	r0, r4, #34816	; 0x8800
 8005e1c:	3028      	adds	r0, #40	; 0x28
 8005e1e:	f7ff ffcd 	bl	8005dbc <_ZN19ConfigListFilterLogD1Ev>
 8005e22:	4620      	mov	r0, r4
 8005e24:	bd10      	pop	{r4, pc}
 8005e26:	bf00      	nop
 8005e28:	0802a214 	.word	0x0802a214

08005e2c <_ZN15Screen1ViewBaseD0Ev>:
 8005e2c:	b510      	push	{r4, lr}
 8005e2e:	4604      	mov	r4, r0
 8005e30:	f7ff ffd0 	bl	8005dd4 <_ZN15Screen1ViewBaseD1Ev>
 8005e34:	4620      	mov	r0, r4
 8005e36:	4902      	ldr	r1, [pc, #8]	; (8005e40 <_ZN15Screen1ViewBaseD0Ev+0x14>)
 8005e38:	f021 fc74 	bl	8027724 <_ZdlPvj>
 8005e3c:	4620      	mov	r0, r4
 8005e3e:	bd10      	pop	{r4, pc}
 8005e40:	00010210 	.word	0x00010210

08005e44 <_ZN19ConfigListFilterLogD0Ev>:
    virtual ~ConfigListFilterLog()
 8005e44:	b510      	push	{r4, lr}
 8005e46:	4604      	mov	r4, r0
    }
 8005e48:	f7ff ffb8 	bl	8005dbc <_ZN19ConfigListFilterLogD1Ev>
 8005e4c:	4620      	mov	r0, r4
 8005e4e:	f241 0128 	movw	r1, #4136	; 0x1028
 8005e52:	f021 fc67 	bl	8027724 <_ZdlPvj>
 8005e56:	4620      	mov	r0, r4
 8005e58:	bd10      	pop	{r4, pc}

08005e5a <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>:
 8005e5a:	6803      	ldr	r3, [r0, #0]
        colorPressed = newColorPressed;
 8005e5c:	e9c0 122e 	strd	r1, r2, [r0, #184]	; 0xb8
        handlePressedUpdated();
 8005e60:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005e64:	4718      	bx	r3

08005e66 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18setTwoWildcardTextENS_9TypedTextE>:
    void setTwoWildcardText(TypedText t)
 8005e66:	b513      	push	{r0, r1, r4, lr}
 8005e68:	4604      	mov	r4, r0
        twoWildcardText.setTypedText(t);
 8005e6a:	3078      	adds	r0, #120	; 0x78
 8005e6c:	9001      	str	r0, [sp, #4]
 8005e6e:	f00f f896 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        twoWildcardText.setWidthHeight(T::getWidth(), T::getHeight());
 8005e72:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8005e76:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8005e7a:	9801      	ldr	r0, [sp, #4]
 8005e7c:	f7fc f9b1 	bl	80021e2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 8005e80:	b002      	add	sp, #8
 8005e82:	bd10      	pop	{r4, pc}

08005e84 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE24setTwoWildcardTextColorsENS_9colortypeES5_>:
        handlePressedUpdated();
 8005e84:	6803      	ldr	r3, [r0, #0]
        colorPressed = newColorPressed;
 8005e86:	e9c0 122f 	strd	r1, r2, [r0, #188]	; 0xbc
        handlePressedUpdated();
 8005e8a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005e8e:	4718      	bx	r3

08005e90 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
    TwoWildcardTextButtonStyle()
 8005e90:	b538      	push	{r3, r4, r5, lr}
 8005e92:	4604      	mov	r4, r0
        : T()
 8005e94:	4625      	mov	r5, r4
 8005e96:	f7fc fe71 	bl	8002b7c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8005e9a:	4b09      	ldr	r3, [pc, #36]	; (8005ec0 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x30>)
 8005e9c:	f845 3b78 	str.w	r3, [r5], #120
 */
class TextAreaWithTwoWildcards : public TextArea
{
public:
    TextAreaWithTwoWildcards()
        : TextArea(), wc1(0), wc2(0)
 8005ea0:	4628      	mov	r0, r5
 8005ea2:	f7fc fe25 	bl	8002af0 <_ZN8touchgfx8TextAreaC1Ev>
 8005ea6:	4b07      	ldr	r3, [pc, #28]	; (8005ec4 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x34>)
 8005ea8:	67a3      	str	r3, [r4, #120]	; 0x78
 8005eaa:	2300      	movs	r3, #0
        T::add(twoWildcardText);
 8005eac:	4620      	mov	r0, r4
 8005eae:	e9c4 332d 	strd	r3, r3, [r4, #180]	; 0xb4
        : color(0)
 8005eb2:	e9c4 332f 	strd	r3, r3, [r4, #188]	; 0xbc
 8005eb6:	4629      	mov	r1, r5
 8005eb8:	f00d fada 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8005ebc:	4620      	mov	r0, r4
 8005ebe:	bd38      	pop	{r3, r4, r5, pc}
 8005ec0:	0802a14c 	.word	0x0802a14c
 8005ec4:	0802c420 	.word	0x0802c420

08005ec8 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8005ec8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005ecc:	ed2d 8b10 	vpush	{d8-d15}
 8005ed0:	4604      	mov	r4, r0
 8005ed2:	b0bd      	sub	sp, #244	; 0xf4
        : presenter(0)
 8005ed4:	f012 fe98 	bl	8018c08 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 8005ed8:	4622      	mov	r2, r4
 8005eda:	2500      	movs	r5, #0
 8005edc:	4be4      	ldr	r3, [pc, #912]	; (8006270 <_ZN15Screen1ViewBaseC1Ev+0x3a8>)
 8005ede:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005ee0:	f842 3b40 	str.w	r3, [r2], #64
 8005ee4:	4610      	mov	r0, r2
 8005ee6:	9232      	str	r2, [sp, #200]	; 0xc8
 8005ee8:	f7fc fdee 	bl	8002ac8 <_ZN8touchgfx3BoxC1Ev>
 8005eec:	f104 036c 	add.w	r3, r4, #108	; 0x6c
        : Box(), borderColor(0), borderSize(0)
 8005ef0:	4618      	mov	r0, r3
 8005ef2:	9333      	str	r3, [sp, #204]	; 0xcc
 8005ef4:	f7fc fde8 	bl	8002ac8 <_ZN8touchgfx3BoxC1Ev>
 8005ef8:	4bde      	ldr	r3, [pc, #888]	; (8006274 <_ZN15Screen1ViewBaseC1Ev+0x3ac>)
 8005efa:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005efc:	f104 03a0 	add.w	r3, r4, #160	; 0xa0
 8005f00:	2101      	movs	r1, #1
 8005f02:	4618      	mov	r0, r3
        : color(col)
 8005f04:	f8c4 5098 	str.w	r5, [r4, #152]	; 0x98
 8005f08:	f8a4 509c 	strh.w	r5, [r4, #156]	; 0x9c
 8005f0c:	ee09 3a90 	vmov	s19, r3
 8005f10:	f7ff ff34 	bl	8005d7c <_ZN8touchgfx10ListLayoutC1ENS_9DirectionE>
 8005f14:	f104 03d0 	add.w	r3, r4, #208	; 0xd0
 8005f18:	4618      	mov	r0, r3
 8005f1a:	9334      	str	r3, [sp, #208]	; 0xd0
 8005f1c:	f003 fb8a 	bl	8009634 <_ZN29CustomContainerTableLog_Type2C1Ev>
 8005f20:	f204 6364 	addw	r3, r4, #1636	; 0x664
 8005f24:	4618      	mov	r0, r3
 8005f26:	9335      	str	r3, [sp, #212]	; 0xd4
 8005f28:	f003 fb84 	bl	8009634 <_ZN29CustomContainerTableLog_Type2C1Ev>
 8005f2c:	f604 33f8 	addw	r3, r4, #3064	; 0xbf8
 8005f30:	4618      	mov	r0, r3
 8005f32:	9336      	str	r3, [sp, #216]	; 0xd8
 8005f34:	f003 fb7e 	bl	8009634 <_ZN29CustomContainerTableLog_Type2C1Ev>
 8005f38:	f504 538c 	add.w	r3, r4, #4480	; 0x1180
 8005f3c:	330c      	adds	r3, #12
 8005f3e:	4618      	mov	r0, r3
 8005f40:	9323      	str	r3, [sp, #140]	; 0x8c
 8005f42:	f003 fb77 	bl	8009634 <_ZN29CustomContainerTableLog_Type2C1Ev>
 8005f46:	f504 53b9 	add.w	r3, r4, #5920	; 0x1720
 8005f4a:	4618      	mov	r0, r3
 8005f4c:	9337      	str	r3, [sp, #220]	; 0xdc
 8005f4e:	f003 fb71 	bl	8009634 <_ZN29CustomContainerTableLog_Type2C1Ev>
 8005f52:	f504 53e5 	add.w	r3, r4, #7328	; 0x1ca0
 8005f56:	3314      	adds	r3, #20
 8005f58:	4618      	mov	r0, r3
 8005f5a:	9324      	str	r3, [sp, #144]	; 0x90
 8005f5c:	f003 fb6a 	bl	8009634 <_ZN29CustomContainerTableLog_Type2C1Ev>
 8005f60:	f504 5309 	add.w	r3, r4, #8768	; 0x2240
 8005f64:	3308      	adds	r3, #8
 8005f66:	4618      	mov	r0, r3
 8005f68:	9325      	str	r3, [sp, #148]	; 0x94
 8005f6a:	f003 fb63 	bl	8009634 <_ZN29CustomContainerTableLog_Type2C1Ev>
 8005f6e:	f504 531f 	add.w	r3, r4, #10176	; 0x27c0
 8005f72:	331c      	adds	r3, #28
 8005f74:	4618      	mov	r0, r3
 8005f76:	9326      	str	r3, [sp, #152]	; 0x98
 8005f78:	f003 fb5c 	bl	8009634 <_ZN29CustomContainerTableLog_Type2C1Ev>
 8005f7c:	f504 5335 	add.w	r3, r4, #11584	; 0x2d40
 8005f80:	3330      	adds	r3, #48	; 0x30
 8005f82:	4618      	mov	r0, r3
 8005f84:	9327      	str	r3, [sp, #156]	; 0x9c
 8005f86:	f003 fb55 	bl	8009634 <_ZN29CustomContainerTableLog_Type2C1Ev>
 8005f8a:	f504 534c 	add.w	r3, r4, #13056	; 0x3300
 8005f8e:	3304      	adds	r3, #4
 8005f90:	4618      	mov	r0, r3
 8005f92:	9328      	str	r3, [sp, #160]	; 0xa0
 8005f94:	f003 fb4e 	bl	8009634 <_ZN29CustomContainerTableLog_Type2C1Ev>
 8005f98:	f504 5362 	add.w	r3, r4, #14464	; 0x3880
 8005f9c:	3318      	adds	r3, #24
 8005f9e:	2101      	movs	r1, #1
 8005fa0:	4618      	mov	r0, r3
 8005fa2:	ee08 3a10 	vmov	s16, r3
 8005fa6:	f7ff fee9 	bl	8005d7c <_ZN8touchgfx10ListLayoutC1ENS_9DirectionE>
 8005faa:	f504 5363 	add.w	r3, r4, #14528	; 0x38c0
 8005fae:	3308      	adds	r3, #8
 8005fb0:	4618      	mov	r0, r3
 8005fb2:	9329      	str	r3, [sp, #164]	; 0xa4
 8005fb4:	f003 fa62 	bl	800947c <_ZN23CustomContainerTableLogC1Ev>
 8005fb8:	f504 537a 	add.w	r3, r4, #16000	; 0x3e80
 8005fbc:	3318      	adds	r3, #24
 8005fbe:	4618      	mov	r0, r3
 8005fc0:	932a      	str	r3, [sp, #168]	; 0xa8
 8005fc2:	f003 fa5b 	bl	800947c <_ZN23CustomContainerTableLogC1Ev>
 8005fc6:	f504 4388 	add.w	r3, r4, #17408	; 0x4400
 8005fca:	3368      	adds	r3, #104	; 0x68
 8005fcc:	4618      	mov	r0, r3
 8005fce:	932b      	str	r3, [sp, #172]	; 0xac
 8005fd0:	f003 fa54 	bl	800947c <_ZN23CustomContainerTableLogC1Ev>
 8005fd4:	f504 4394 	add.w	r3, r4, #18944	; 0x4a00
 8005fd8:	3338      	adds	r3, #56	; 0x38
 8005fda:	4618      	mov	r0, r3
 8005fdc:	932c      	str	r3, [sp, #176]	; 0xb0
 8005fde:	f003 fa4d 	bl	800947c <_ZN23CustomContainerTableLogC1Ev>
 8005fe2:	f504 43a0 	add.w	r3, r4, #20480	; 0x5000
 8005fe6:	3308      	adds	r3, #8
 8005fe8:	4618      	mov	r0, r3
 8005fea:	932d      	str	r3, [sp, #180]	; 0xb4
 8005fec:	f003 fa46 	bl	800947c <_ZN23CustomContainerTableLogC1Ev>
 8005ff0:	f504 43ab 	add.w	r3, r4, #21888	; 0x5580
 8005ff4:	3358      	adds	r3, #88	; 0x58
 8005ff6:	4618      	mov	r0, r3
 8005ff8:	932e      	str	r3, [sp, #184]	; 0xb8
 8005ffa:	f003 fa3f 	bl	800947c <_ZN23CustomContainerTableLogC1Ev>
 8005ffe:	f504 43b7 	add.w	r3, r4, #23424	; 0x5b80
 8006002:	3328      	adds	r3, #40	; 0x28
 8006004:	4618      	mov	r0, r3
 8006006:	932f      	str	r3, [sp, #188]	; 0xbc
 8006008:	f003 fa38 	bl	800947c <_ZN23CustomContainerTableLogC1Ev>
 800600c:	f504 43c2 	add.w	r3, r4, #24832	; 0x6100
 8006010:	3378      	adds	r3, #120	; 0x78
 8006012:	f504 49ce 	add.w	r9, r4, #26368	; 0x6700
 8006016:	4618      	mov	r0, r3
 8006018:	f109 0948 	add.w	r9, r9, #72	; 0x48
 800601c:	f504 48da 	add.w	r8, r4, #27904	; 0x6d00
 8006020:	9330      	str	r3, [sp, #192]	; 0xc0
 8006022:	f108 0818 	add.w	r8, r8, #24
 8006026:	f003 fa29 	bl	800947c <_ZN23CustomContainerTableLogC1Ev>
 800602a:	4648      	mov	r0, r9
 800602c:	f003 fa26 	bl	800947c <_ZN23CustomContainerTableLogC1Ev>
 8006030:	f247 26e8 	movw	r6, #29416	; 0x72e8
 8006034:	4640      	mov	r0, r8
 8006036:	f003 fa21 	bl	800947c <_ZN23CustomContainerTableLogC1Ev>
 800603a:	19a3      	adds	r3, r4, r6
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 800603c:	4629      	mov	r1, r5
 800603e:	2226      	movs	r2, #38	; 0x26
 8006040:	4618      	mov	r0, r3
 8006042:	9331      	str	r3, [sp, #196]	; 0xc4
 8006044:	f021 fd4a 	bl	8027adc <memset>
 8006048:	19a0      	adds	r0, r4, r6
 800604a:	f7fc fa4b 	bl	80024e4 <_ZN8touchgfx8DrawableC1Ev>
 800604e:	19a3      	adds	r3, r4, r6
        touchable = touch;
 8006050:	2701      	movs	r7, #1
 8006052:	629d      	str	r5, [r3, #40]	; 0x28
 8006054:	f883 502c 	strb.w	r5, [r3, #44]	; 0x2c
 8006058:	f247 330c 	movw	r3, #29452	; 0x730c
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 800605c:	f247 3216 	movw	r2, #29462	; 0x7316
 8006060:	54e7      	strb	r7, [r4, r3]
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 8006062:	4b85      	ldr	r3, [pc, #532]	; (8006278 <_ZN15Screen1ViewBaseC1Ev+0x3b0>)
 8006064:	51a3      	str	r3, [r4, r6]
 8006066:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800606a:	52a3      	strh	r3, [r4, r2]
 800606c:	f247 3218 	movw	r2, #29464	; 0x7318
 8006070:	f504 4be9 	add.w	fp, r4, #29824	; 0x7480
 8006074:	52a3      	strh	r3, [r4, r2]
 8006076:	9a31      	ldr	r2, [sp, #196]	; 0xc4
        : TextArea(), wildcard(0)
 8006078:	4e80      	ldr	r6, [pc, #512]	; (800627c <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
 800607a:	f882 3032 	strb.w	r3, [r2, #50]	; 0x32
 800607e:	f504 43e6 	add.w	r3, r4, #29440	; 0x7300
 8006082:	331c      	adds	r3, #28
 8006084:	4618      	mov	r0, r3
 8006086:	ee0b 3a10 	vmov	s22, r3
 800608a:	f7fc fda3 	bl	8002bd4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800608e:	f504 43e7 	add.w	r3, r4, #29568	; 0x7380
 8006092:	3358      	adds	r3, #88	; 0x58
 8006094:	4639      	mov	r1, r7
 8006096:	4618      	mov	r0, r3
 8006098:	ee0a 3a10 	vmov	s20, r3
 800609c:	f7ff fe6e 	bl	8005d7c <_ZN8touchgfx10ListLayoutC1ENS_9DirectionE>
 80060a0:	f504 43e8 	add.w	r3, r4, #29696	; 0x7400
 80060a4:	3308      	adds	r3, #8
 80060a6:	4618      	mov	r0, r3
 80060a8:	f10b 0b48 	add.w	fp, fp, #72	; 0x48
 80060ac:	9305      	str	r3, [sp, #20]
 80060ae:	f7fc fa39 	bl	8002524 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80060b2:	4658      	mov	r0, fp
 80060b4:	f7fc fa36 	bl	8002524 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80060b8:	f504 43eb 	add.w	r3, r4, #30080	; 0x7580
 80060bc:	3308      	adds	r3, #8
 80060be:	4618      	mov	r0, r3
 80060c0:	9306      	str	r3, [sp, #24]
 80060c2:	f7fc fa2f 	bl	8002524 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80060c6:	f504 43ec 	add.w	r3, r4, #30208	; 0x7600
 80060ca:	3348      	adds	r3, #72	; 0x48
 80060cc:	4618      	mov	r0, r3
 80060ce:	ee0b 3a90 	vmov	s23, r3
 80060d2:	f7fc fa27 	bl	8002524 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80060d6:	f504 43ee 	add.w	r3, r4, #30464	; 0x7700
 80060da:	3308      	adds	r3, #8
 80060dc:	4618      	mov	r0, r3
 80060de:	9307      	str	r3, [sp, #28]
 80060e0:	f7fc fa20 	bl	8002524 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80060e4:	f504 43ef 	add.w	r3, r4, #30592	; 0x7780
 80060e8:	3348      	adds	r3, #72	; 0x48
 80060ea:	4618      	mov	r0, r3
 80060ec:	ee0c 3a10 	vmov	s24, r3
 80060f0:	f7fc fa18 	bl	8002524 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80060f4:	f504 43f1 	add.w	r3, r4, #30848	; 0x7880
 80060f8:	3308      	adds	r3, #8
 80060fa:	4618      	mov	r0, r3
 80060fc:	9308      	str	r3, [sp, #32]
 80060fe:	f7fc fa11 	bl	8002524 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8006102:	f504 43f2 	add.w	r3, r4, #30976	; 0x7900
 8006106:	3348      	adds	r3, #72	; 0x48
 8006108:	4639      	mov	r1, r7
 800610a:	4618      	mov	r0, r3
 800610c:	ee08 3a90 	vmov	s17, r3
 8006110:	f7ff fe34 	bl	8005d7c <_ZN8touchgfx10ListLayoutC1ENS_9DirectionE>
 8006114:	f504 43f2 	add.w	r3, r4, #30976	; 0x7900
 8006118:	3378      	adds	r3, #120	; 0x78
 800611a:	4618      	mov	r0, r3
 800611c:	ee0c 3a90 	vmov	s25, r3
 8006120:	f7fc fa00 	bl	8002524 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8006124:	f504 43f4 	add.w	r3, r4, #31232	; 0x7a00
 8006128:	3338      	adds	r3, #56	; 0x38
 800612a:	4618      	mov	r0, r3
 800612c:	ee0d 3a10 	vmov	s26, r3
 8006130:	f7ff feae 	bl	8005e90 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8006134:	f504 43f5 	add.w	r3, r4, #31360	; 0x7a80
 8006138:	337c      	adds	r3, #124	; 0x7c
 800613a:	4618      	mov	r0, r3
 800613c:	ee0d 3a90 	vmov	s27, r3
 8006140:	f7ff fea6 	bl	8005e90 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8006144:	f504 43f7 	add.w	r3, r4, #31616	; 0x7b80
 8006148:	3340      	adds	r3, #64	; 0x40
 800614a:	4618      	mov	r0, r3
 800614c:	ee0e 3a10 	vmov	s28, r3
 8006150:	f7ff fe9e 	bl	8005e90 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8006154:	f504 43f9 	add.w	r3, r4, #31872	; 0x7c80
 8006158:	3304      	adds	r3, #4
 800615a:	4618      	mov	r0, r3
 800615c:	ee0e 3a90 	vmov	s29, r3
 8006160:	f7ff fe96 	bl	8005e90 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8006164:	f504 43fa 	add.w	r3, r4, #32000	; 0x7d00
 8006168:	3348      	adds	r3, #72	; 0x48
 800616a:	4618      	mov	r0, r3
 800616c:	ee0f 3a10 	vmov	s30, r3
 8006170:	f7ff fe8e 	bl	8005e90 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8006174:	f504 43fc 	add.w	r3, r4, #32256	; 0x7e00
 8006178:	330c      	adds	r3, #12
 800617a:	4618      	mov	r0, r3
 800617c:	ee0f 3a90 	vmov	s31, r3
 8006180:	f7fc f9d0 	bl	8002524 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8006184:	f504 43fd 	add.w	r3, r4, #32384	; 0x7e80
 8006188:	334c      	adds	r3, #76	; 0x4c
 800618a:	4618      	mov	r0, r3
 800618c:	9309      	str	r3, [sp, #36]	; 0x24
 800618e:	f7ff fe7f 	bl	8005e90 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8006192:	f504 43ff 	add.w	r3, r4, #32640	; 0x7f80
 8006196:	3310      	adds	r3, #16
 8006198:	4618      	mov	r0, r3
 800619a:	9304      	str	r3, [sp, #16]
 800619c:	f7ff fe78 	bl	8005e90 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80061a0:	f504 4300 	add.w	r3, r4, #32768	; 0x8000
 80061a4:	3354      	adds	r3, #84	; 0x54
 80061a6:	4618      	mov	r0, r3
 80061a8:	930e      	str	r3, [sp, #56]	; 0x38
 80061aa:	f7ff fe71 	bl	8005e90 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80061ae:	f504 4301 	add.w	r3, r4, #33024	; 0x8100
 80061b2:	3318      	adds	r3, #24
 80061b4:	4639      	mov	r1, r7
 80061b6:	4618      	mov	r0, r3
 80061b8:	ee09 3a10 	vmov	s18, r3
 80061bc:	f7ff fdde 	bl	8005d7c <_ZN8touchgfx10ListLayoutC1ENS_9DirectionE>
 80061c0:	f504 4301 	add.w	r3, r4, #33024	; 0x8100
 80061c4:	3348      	adds	r3, #72	; 0x48
 80061c6:	4618      	mov	r0, r3
 80061c8:	930f      	str	r3, [sp, #60]	; 0x3c
 80061ca:	f7fc f9ab 	bl	8002524 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80061ce:	f504 4302 	add.w	r3, r4, #33280	; 0x8200
 80061d2:	3308      	adds	r3, #8
 80061d4:	4618      	mov	r0, r3
 80061d6:	9310      	str	r3, [sp, #64]	; 0x40
 80061d8:	f7ff fe5a 	bl	8005e90 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80061dc:	f504 4302 	add.w	r3, r4, #33280	; 0x8200
 80061e0:	33cc      	adds	r3, #204	; 0xcc
 80061e2:	4618      	mov	r0, r3
 80061e4:	9311      	str	r3, [sp, #68]	; 0x44
 80061e6:	f7ff fe53 	bl	8005e90 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80061ea:	f504 4303 	add.w	r3, r4, #33536	; 0x8300
 80061ee:	3390      	adds	r3, #144	; 0x90
 80061f0:	4618      	mov	r0, r3
 80061f2:	9312      	str	r3, [sp, #72]	; 0x48
 80061f4:	f7ff fe4c 	bl	8005e90 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80061f8:	f504 4304 	add.w	r3, r4, #33792	; 0x8400
 80061fc:	3354      	adds	r3, #84	; 0x54
 80061fe:	4618      	mov	r0, r3
 8006200:	9313      	str	r3, [sp, #76]	; 0x4c
 8006202:	f7fc f98f 	bl	8002524 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8006206:	f504 4305 	add.w	r3, r4, #34048	; 0x8500
 800620a:	3314      	adds	r3, #20
 800620c:	4618      	mov	r0, r3
 800620e:	9314      	str	r3, [sp, #80]	; 0x50
 8006210:	f7ff fe3e 	bl	8005e90 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8006214:	f504 4305 	add.w	r3, r4, #34048	; 0x8500
 8006218:	33d8      	adds	r3, #216	; 0xd8
 800621a:	4618      	mov	r0, r3
 800621c:	9315      	str	r3, [sp, #84]	; 0x54
 800621e:	f7ff fe37 	bl	8005e90 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8006222:	f504 4306 	add.w	r3, r4, #34304	; 0x8600
 8006226:	339c      	adds	r3, #156	; 0x9c
 8006228:	4618      	mov	r0, r3
 800622a:	9316      	str	r3, [sp, #88]	; 0x58
 800622c:	f7ff fe30 	bl	8005e90 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8006230:	f504 4307 	add.w	r3, r4, #34560	; 0x8700
 8006234:	3360      	adds	r3, #96	; 0x60
 8006236:	4618      	mov	r0, r3
 8006238:	9317      	str	r3, [sp, #92]	; 0x5c
 800623a:	f7ff fe29 	bl	8005e90 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800623e:	f504 4308 	add.w	r3, r4, #34816	; 0x8800
 8006242:	3328      	adds	r3, #40	; 0x28
 8006244:	4618      	mov	r0, r3
 8006246:	931c      	str	r3, [sp, #112]	; 0x70
 8006248:	f002 fdd4 	bl	8008df4 <_ZN19ConfigListFilterLogC1Ev>
 800624c:	f504 4318 	add.w	r3, r4, #38912	; 0x9800
 8006250:	3350      	adds	r3, #80	; 0x50
 8006252:	4618      	mov	r0, r3
 8006254:	931d      	str	r3, [sp, #116]	; 0x74
 8006256:	f002 fdcd 	bl	8008df4 <_ZN19ConfigListFilterLogC1Ev>
 800625a:	f504 4328 	add.w	r3, r4, #43008	; 0xa800
 800625e:	3378      	adds	r3, #120	; 0x78
 8006260:	4618      	mov	r0, r3
 8006262:	931e      	str	r3, [sp, #120]	; 0x78
 8006264:	f002 fdc6 	bl	8008df4 <_ZN19ConfigListFilterLogC1Ev>
 8006268:	f504 4338 	add.w	r3, r4, #47104	; 0xb800
 800626c:	33a0      	adds	r3, #160	; 0xa0
 800626e:	e007      	b.n	8006280 <_ZN15Screen1ViewBaseC1Ev+0x3b8>
 8006270:	0802a214 	.word	0x0802a214
 8006274:	0802c4c8 	.word	0x0802c4c8
 8006278:	0802c304 	.word	0x0802c304
 800627c:	0802c3a8 	.word	0x0802c3a8
 8006280:	4618      	mov	r0, r3
 8006282:	931f      	str	r3, [sp, #124]	; 0x7c
 8006284:	f002 fdb6 	bl	8008df4 <_ZN19ConfigListFilterLogC1Ev>
 8006288:	f504 4348 	add.w	r3, r4, #51200	; 0xc800
 800628c:	33c8      	adds	r3, #200	; 0xc8
 800628e:	4618      	mov	r0, r3
 8006290:	9320      	str	r3, [sp, #128]	; 0x80
 8006292:	f002 fdaf 	bl	8008df4 <_ZN19ConfigListFilterLogC1Ev>
 8006296:	f504 4358 	add.w	r3, r4, #55296	; 0xd800
 800629a:	33f0      	adds	r3, #240	; 0xf0
 800629c:	4618      	mov	r0, r3
 800629e:	9321      	str	r3, [sp, #132]	; 0x84
 80062a0:	f002 fda8 	bl	8008df4 <_ZN19ConfigListFilterLogC1Ev>
 80062a4:	f504 4369 	add.w	r3, r4, #59648	; 0xe900
 80062a8:	3318      	adds	r3, #24
 80062aa:	f64f 1a40 	movw	sl, #63808	; 0xf940
 80062ae:	4618      	mov	r0, r3
 80062b0:	9322      	str	r3, [sp, #136]	; 0x88
 80062b2:	f002 fd9f 	bl	8008df4 <_ZN19ConfigListFilterLogC1Ev>
 80062b6:	eb04 030a 	add.w	r3, r4, sl
 80062ba:	4618      	mov	r0, r3
 80062bc:	9318      	str	r3, [sp, #96]	; 0x60
 80062be:	f7fc fc17 	bl	8002af0 <_ZN8touchgfx8TextAreaC1Ev>
 80062c2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80062c4:	f844 600a 	str.w	r6, [r4, sl]
 80062c8:	f64f 1a80 	movw	sl, #63872	; 0xf980
 80062cc:	63dd      	str	r5, [r3, #60]	; 0x3c
 80062ce:	eb04 030a 	add.w	r3, r4, sl
 80062d2:	4618      	mov	r0, r3
 80062d4:	9319      	str	r3, [sp, #100]	; 0x64
 80062d6:	f7fc fc0b 	bl	8002af0 <_ZN8touchgfx8TextAreaC1Ev>
 80062da:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80062dc:	f844 600a 	str.w	r6, [r4, sl]
 80062e0:	63dd      	str	r5, [r3, #60]	; 0x3c
 80062e2:	f504 4379 	add.w	r3, r4, #63744	; 0xf900
 80062e6:	33c0      	adds	r3, #192	; 0xc0
 80062e8:	4618      	mov	r0, r3
 80062ea:	ee0a 3a90 	vmov	s21, r3
 80062ee:	f00c ffcf 	bl	8013290 <_ZN8touchgfx11ModalWindowC1Ev>
 80062f2:	f504 437a 	add.w	r3, r4, #64000	; 0xfa00
 80062f6:	3370      	adds	r3, #112	; 0x70
 80062f8:	4618      	mov	r0, r3
 80062fa:	930a      	str	r3, [sp, #40]	; 0x28
 80062fc:	f7fc fc6a 	bl	8002bd4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8006300:	f504 437b 	add.w	r3, r4, #64256	; 0xfb00
 8006304:	332c      	adds	r3, #44	; 0x2c
 8006306:	f64f 3ae8 	movw	sl, #64488	; 0xfbe8
 800630a:	4618      	mov	r0, r3
 800630c:	930b      	str	r3, [sp, #44]	; 0x2c
 800630e:	f7fc fc61 	bl	8002bd4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8006312:	eb04 030a 	add.w	r3, r4, sl
 8006316:	4618      	mov	r0, r3
 8006318:	931a      	str	r3, [sp, #104]	; 0x68
 800631a:	f7fc fbe9 	bl	8002af0 <_ZN8touchgfx8TextAreaC1Ev>
 800631e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8006320:	f844 600a 	str.w	r6, [r4, sl]
 8006324:	f64f 4a28 	movw	sl, #64552	; 0xfc28
 8006328:	63dd      	str	r5, [r3, #60]	; 0x3c
 800632a:	eb04 030a 	add.w	r3, r4, sl
 800632e:	4618      	mov	r0, r3
 8006330:	931b      	str	r3, [sp, #108]	; 0x6c
 8006332:	f7fc fbdd 	bl	8002af0 <_ZN8touchgfx8TextAreaC1Ev>
 8006336:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8006338:	f844 600a 	str.w	r6, [r4, sl]
 800633c:	63dd      	str	r5, [r3, #60]	; 0x3c
 800633e:	f504 437c 	add.w	r3, r4, #64512	; 0xfc00
 8006342:	3368      	adds	r3, #104	; 0x68
 8006344:	4618      	mov	r0, r3
 8006346:	930c      	str	r3, [sp, #48]	; 0x30
 8006348:	f7fc fc44 	bl	8002bd4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800634c:	f504 437d 	add.w	r3, r4, #64768	; 0xfd00
 8006350:	3324      	adds	r3, #36	; 0x24
 8006352:	4618      	mov	r0, r3
 8006354:	930d      	str	r3, [sp, #52]	; 0x34
 8006356:	f7fc fc3d 	bl	8002bd4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 800635a:	4aa7      	ldr	r2, [pc, #668]	; (80065f8 <_ZN15Screen1ViewBaseC1Ev+0x730>)
    __background.setPosition(0, 0, 800, 480);
 800635c:	9832      	ldr	r0, [sp, #200]	; 0xc8
 800635e:	f504 3380 	add.w	r3, r4, #65536	; 0x10000
 8006362:	e9c3 247c 	strd	r2, r4, [r3, #496]	; 0x1f0
 8006366:	4aa5      	ldr	r2, [pc, #660]	; (80065fc <_ZN15Screen1ViewBaseC1Ev+0x734>)
 8006368:	f503 76f8 	add.w	r6, r3, #496	; 0x1f0
 800636c:	e9c3 257e 	strd	r2, r5, [r3, #504]	; 0x1f8
 8006370:	f504 3381 	add.w	r3, r4, #66048	; 0x10200
 8006374:	9303      	str	r3, [sp, #12]
 8006376:	9a03      	ldr	r2, [sp, #12]
 8006378:	4ba1      	ldr	r3, [pc, #644]	; (8006600 <_ZN15Screen1ViewBaseC1Ev+0x738>)
 800637a:	6013      	str	r3, [r2, #0]
 800637c:	4ba1      	ldr	r3, [pc, #644]	; (8006604 <_ZN15Screen1ViewBaseC1Ev+0x73c>)
 800637e:	6093      	str	r3, [r2, #8]
 8006380:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8006384:	6054      	str	r4, [r2, #4]
 8006386:	60d5      	str	r5, [r2, #12]
 8006388:	4629      	mov	r1, r5
 800638a:	9300      	str	r3, [sp, #0]
 800638c:	462a      	mov	r2, r5
 800638e:	f44f 7348 	mov.w	r3, #800	; 0x320
 8006392:	f7fc fb8d 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8006396:	f04f 4a7f 	mov.w	sl, #4278190080	; 0xff000000
    boxWithBorder1.setPosition(3, 0, 800, 480);
 800639a:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 800639e:	462a      	mov	r2, r5
 80063a0:	9833      	ldr	r0, [sp, #204]	; 0xcc
 80063a2:	f8c4 a068 	str.w	sl, [r4, #104]	; 0x68
 80063a6:	9300      	str	r3, [sp, #0]
 80063a8:	2103      	movs	r1, #3
 80063aa:	f44f 7348 	mov.w	r3, #800	; 0x320
 80063ae:	f7fc fb7f 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80063b2:	f04f 33ff 	mov.w	r3, #4294967295
        borderColor = color;
 80063b6:	e9c4 3a25 	strd	r3, sl, [r4, #148]	; 0x94
        borderSize = size;
 80063ba:	2303      	movs	r3, #3
 80063bc:	f8a4 309c 	strh.w	r3, [r4, #156]	; 0x9c
    listLayoutLogTable_Type2.setDirection(touchgfx::SOUTH);
 80063c0:	ee19 0a90 	vmov	r0, s19
 80063c4:	4639      	mov	r1, r7
 80063c6:	f00d fb5d 	bl	8013a84 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>
    listLayoutLogTable_Type2.setXY(32, 540);
 80063ca:	f44f 7207 	mov.w	r2, #540	; 0x21c
 80063ce:	ee19 0a90 	vmov	r0, s19
 80063d2:	2120      	movs	r1, #32
 80063d4:	f7fc f898 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
    listLayoutLogTable_Type2.add(customContainerTableLog_Type2_0);
 80063d8:	9934      	ldr	r1, [sp, #208]	; 0xd0
 80063da:	ee19 0a90 	vmov	r0, s19
 80063de:	f00d fbbb 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable_Type2.add(customContainerTableLog_Type2_1);
 80063e2:	9935      	ldr	r1, [sp, #212]	; 0xd4
 80063e4:	ee19 0a90 	vmov	r0, s19
 80063e8:	f00d fbb6 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable_Type2.add(customContainerTableLog_Type2_2);
 80063ec:	9936      	ldr	r1, [sp, #216]	; 0xd8
 80063ee:	ee19 0a90 	vmov	r0, s19
 80063f2:	f00d fbb1 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable_Type2.add(customContainerTableLog_Type2_3);
 80063f6:	9923      	ldr	r1, [sp, #140]	; 0x8c
 80063f8:	ee19 0a90 	vmov	r0, s19
 80063fc:	f00d fbac 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable_Type2.add(customContainerTableLog_Type2_4);
 8006400:	9937      	ldr	r1, [sp, #220]	; 0xdc
 8006402:	ee19 0a90 	vmov	r0, s19
 8006406:	f00d fba7 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable_Type2.add(customContainerTableLog_Type2_5);
 800640a:	9924      	ldr	r1, [sp, #144]	; 0x90
 800640c:	ee19 0a90 	vmov	r0, s19
 8006410:	f00d fba2 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable_Type2.add(customContainerTableLog_Type2_6);
 8006414:	9925      	ldr	r1, [sp, #148]	; 0x94
 8006416:	ee19 0a90 	vmov	r0, s19
 800641a:	f00d fb9d 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable_Type2.add(customContainerTableLog_Type2_7);
 800641e:	9926      	ldr	r1, [sp, #152]	; 0x98
 8006420:	ee19 0a90 	vmov	r0, s19
 8006424:	f00d fb98 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable_Type2.add(customContainerTableLog_Type2_8);
 8006428:	9927      	ldr	r1, [sp, #156]	; 0x9c
 800642a:	ee19 0a90 	vmov	r0, s19
 800642e:	f00d fb93 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable_Type2.add(customContainerTableLog_Type2_9);
 8006432:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8006434:	ee19 0a90 	vmov	r0, s19
 8006438:	f00d fb8e 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.setDirection(touchgfx::SOUTH);
 800643c:	ee18 0a10 	vmov	r0, s16
 8006440:	4639      	mov	r1, r7
 8006442:	f00d fb1f 	bl	8013a84 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>
    listLayoutLogTable.setXY(32, 200);
 8006446:	22c8      	movs	r2, #200	; 0xc8
 8006448:	ee18 0a10 	vmov	r0, s16
 800644c:	2120      	movs	r1, #32
 800644e:	f7fc f85b 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
    listLayoutLogTable.add(customContainerTableLog_0);
 8006452:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8006454:	ee18 0a10 	vmov	r0, s16
 8006458:	f00d fb7e 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_1);
 800645c:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800645e:	ee18 0a10 	vmov	r0, s16
 8006462:	f00d fb79 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_2);
 8006466:	992b      	ldr	r1, [sp, #172]	; 0xac
 8006468:	ee18 0a10 	vmov	r0, s16
 800646c:	f00d fb74 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_3);
 8006470:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8006472:	ee18 0a10 	vmov	r0, s16
 8006476:	f00d fb6f 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_4);
 800647a:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800647c:	ee18 0a10 	vmov	r0, s16
 8006480:	f00d fb6a 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_5);
 8006484:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8006486:	ee18 0a10 	vmov	r0, s16
 800648a:	f00d fb65 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_6);
 800648e:	992f      	ldr	r1, [sp, #188]	; 0xbc
 8006490:	ee18 0a10 	vmov	r0, s16
 8006494:	f00d fb60 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_7);
 8006498:	9930      	ldr	r1, [sp, #192]	; 0xc0
 800649a:	ee18 0a10 	vmov	r0, s16
 800649e:	f00d fb5b 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_8);
 80064a2:	4649      	mov	r1, r9
 80064a4:	ee18 0a10 	vmov	r0, s16
 80064a8:	f00d fb56 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_9);
 80064ac:	4641      	mov	r1, r8
 80064ae:	ee18 0a10 	vmov	r0, s16
 80064b2:	f00d fb51 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    button1.setXY(18, 14);
 80064b6:	9831      	ldr	r0, [sp, #196]	; 0xc4
        colorReleased = newColorReleased;
 80064b8:	f8df 8170 	ldr.w	r8, [pc, #368]	; 800662c <_ZN15Screen1ViewBaseC1Ev+0x764>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80064bc:	f8df 9170 	ldr.w	r9, [pc, #368]	; 8006630 <_ZN15Screen1ViewBaseC1Ev+0x768>
 80064c0:	220e      	movs	r2, #14
 80064c2:	2112      	movs	r1, #18
 80064c4:	f7fc f820 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 80064c8:	9831      	ldr	r0, [sp, #196]	; 0xc4
 80064ca:	f8ad 50e4 	strh.w	r5, [sp, #228]	; 0xe4
 80064ce:	aa3a      	add	r2, sp, #232	; 0xe8
 80064d0:	a939      	add	r1, sp, #228	; 0xe4
 80064d2:	f8ad 70e8 	strh.w	r7, [sp, #232]	; 0xe8
 80064d6:	f00e fda5 	bl	8015024 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80064da:	f247 3310 	movw	r3, #29456	; 0x7310
        borderBox.setPosition(x, y, width, height);
 80064de:	ee1b 0a10 	vmov	r0, s22
 80064e2:	50e6      	str	r6, [r4, r3]
 80064e4:	261e      	movs	r6, #30
 80064e6:	9600      	str	r6, [sp, #0]
 80064e8:	23c4      	movs	r3, #196	; 0xc4
 80064ea:	462a      	mov	r2, r5
 80064ec:	4629      	mov	r1, r5
 80064ee:	3034      	adds	r0, #52	; 0x34
 80064f0:	f7fc fade 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80064f4:	f504 43e7 	add.w	r3, r4, #29568	; 0x7380
    flexButtonReadLog.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80064f8:	4a43      	ldr	r2, [pc, #268]	; (8006608 <_ZN15Screen1ViewBaseC1Ev+0x740>)
 80064fa:	801f      	strh	r7, [r3, #0]
 80064fc:	4b43      	ldr	r3, [pc, #268]	; (800660c <_ZN15Screen1ViewBaseC1Ev+0x744>)
 80064fe:	9300      	str	r3, [sp, #0]
 8006500:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 8006504:	4942      	ldr	r1, [pc, #264]	; (8006610 <_ZN15Screen1ViewBaseC1Ev+0x748>)
 8006506:	ee1b 0a10 	vmov	r0, s22
 800650a:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 800650e:	f7fc fb0b 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8006512:	4a40      	ldr	r2, [pc, #256]	; (8006614 <_ZN15Screen1ViewBaseC1Ev+0x74c>)
 8006514:	923a      	str	r2, [sp, #232]	; 0xe8
 8006516:	2333      	movs	r3, #51	; 0x33
    flexButtonReadLog.setText(TypedText(T___SINGLEUSE_Z9OO));
 8006518:	ee1b 0a10 	vmov	r0, s22
 800651c:	a93a      	add	r1, sp, #232	; 0xe8
 800651e:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8006522:	f7fc fb0d 	bl	8002b40 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8006526:	ee1b 0a10 	vmov	r0, s22
 800652a:	2205      	movs	r2, #5
 800652c:	4629      	mov	r1, r5
 800652e:	9600      	str	r6, [sp, #0]
 8006530:	23c4      	movs	r3, #196	; 0xc4
 8006532:	3078      	adds	r0, #120	; 0x78
 8006534:	f7fc fabc 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8006538:	f247 33d0 	movw	r3, #29648	; 0x73d0
        handlePressedUpdated();
 800653c:	ee1b 0a10 	vmov	r0, s22
        colorReleased = newColorReleased;
 8006540:	f844 8003 	str.w	r8, [r4, r3]
        colorPressed = newColorPressed;
 8006544:	f247 33d4 	movw	r3, #29652	; 0x73d4
    Unicode::snprintf(flexButtonPageBackBuffer, FLEXBUTTONPAGEBACK_SIZE, "%s", TypedText(T___SINGLEUSE_EGRS).getText());
 8006548:	f504 4a7e 	add.w	sl, r4, #65024	; 0xfe00
 800654c:	f844 8003 	str.w	r8, [r4, r3]
        handlePressedUpdated();
 8006550:	f7fc f959 	bl	8002806 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonReadLog.setPosition(585, 74, 196, 30);
 8006554:	224a      	movs	r2, #74	; 0x4a
 8006556:	ee1b 0a10 	vmov	r0, s22
 800655a:	9600      	str	r6, [sp, #0]
 800655c:	23c4      	movs	r3, #196	; 0xc4
 800655e:	f240 2149 	movw	r1, #585	; 0x249
 8006562:	f7fc faa5 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006566:	f247 334c 	movw	r3, #29516	; 0x734c
 800656a:	9903      	ldr	r1, [sp, #12]
 800656c:	50e1      	str	r1, [r4, r3]
    listLayoutPageButton.setDirection(touchgfx::EAST);
 800656e:	ee1a 0a10 	vmov	r0, s20
 8006572:	2102      	movs	r1, #2
 8006574:	f00d fa86 	bl	8013a84 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>
    listLayoutPageButton.setXY(203, 413);
 8006578:	ee1a 0a10 	vmov	r0, s20
 800657c:	f240 129d 	movw	r2, #413	; 0x19d
 8006580:	21cb      	movs	r1, #203	; 0xcb
 8006582:	f7fb ffc1 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 8006586:	9805      	ldr	r0, [sp, #20]
 8006588:	2632      	movs	r6, #50	; 0x32
 800658a:	4633      	mov	r3, r6
 800658c:	462a      	mov	r2, r5
 800658e:	4629      	mov	r1, r5
 8006590:	3034      	adds	r0, #52	; 0x34
 8006592:	9600      	str	r6, [sp, #0]
 8006594:	f7fc fa8c 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006598:	f247 436c 	movw	r3, #29804	; 0x746c
    flexButtonPageBack.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800659c:	4a1a      	ldr	r2, [pc, #104]	; (8006608 <_ZN15Screen1ViewBaseC1Ev+0x740>)
 800659e:	52e7      	strh	r7, [r4, r3]
 80065a0:	f5a3 034d 	sub.w	r3, r3, #13434880	; 0xcd0000
 80065a4:	f6a3 53d3 	subw	r3, r3, #3539	; 0xdd3
 80065a8:	9300      	str	r3, [sp, #0]
 80065aa:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 80065ae:	4918      	ldr	r1, [pc, #96]	; (8006610 <_ZN15Screen1ViewBaseC1Ev+0x748>)
 80065b0:	9805      	ldr	r0, [sp, #20]
 80065b2:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 80065b6:	f7fc fab7 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 80065ba:	4a16      	ldr	r2, [pc, #88]	; (8006614 <_ZN15Screen1ViewBaseC1Ev+0x74c>)
    flexButtonPageBack.setWildcardText(TypedText(T___SINGLEUSE_IRA4));
 80065bc:	9805      	ldr	r0, [sp, #20]
 80065be:	923a      	str	r2, [sp, #232]	; 0xe8
 80065c0:	2334      	movs	r3, #52	; 0x34
 80065c2:	a93a      	add	r1, sp, #232	; 0xe8
 80065c4:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 80065c8:	f7fc fac9 	bl	8002b5e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80065cc:	f8d9 3000 	ldr.w	r3, [r9]
 80065d0:	4a0e      	ldr	r2, [pc, #56]	; (800660c <_ZN15Screen1ViewBaseC1Ev+0x744>)
 80065d2:	9223      	str	r2, [sp, #140]	; 0x8c
    Unicode::snprintf(flexButtonPageBackBuffer, FLEXBUTTONPAGEBACK_SIZE, "%s", TypedText(T___SINGLEUSE_EGRS).getText());
 80065d4:	f10a 0a38 	add.w	sl, sl, #56	; 0x38
 80065d8:	b92b      	cbnz	r3, 80065e6 <_ZN15Screen1ViewBaseC1Ev+0x71e>
 80065da:	4b0f      	ldr	r3, [pc, #60]	; (8006618 <_ZN15Screen1ViewBaseC1Ev+0x750>)
 80065dc:	4a0f      	ldr	r2, [pc, #60]	; (800661c <_ZN15Screen1ViewBaseC1Ev+0x754>)
 80065de:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80065e0:	480f      	ldr	r0, [pc, #60]	; (8006620 <_ZN15Screen1ViewBaseC1Ev+0x758>)
 80065e2:	f021 f8cd 	bl	8027780 <__assert_func>
 80065e6:	4b0f      	ldr	r3, [pc, #60]	; (8006624 <_ZN15Screen1ViewBaseC1Ev+0x75c>)
 80065e8:	881b      	ldrh	r3, [r3, #0]
 80065ea:	2b35      	cmp	r3, #53	; 0x35
 80065ec:	d822      	bhi.n	8006634 <_ZN15Screen1ViewBaseC1Ev+0x76c>
 80065ee:	4b0e      	ldr	r3, [pc, #56]	; (8006628 <_ZN15Screen1ViewBaseC1Ev+0x760>)
 80065f0:	4a0a      	ldr	r2, [pc, #40]	; (800661c <_ZN15Screen1ViewBaseC1Ev+0x754>)
 80065f2:	21af      	movs	r1, #175	; 0xaf
 80065f4:	e7f4      	b.n	80065e0 <_ZN15Screen1ViewBaseC1Ev+0x718>
 80065f6:	bf00      	nop
 80065f8:	0802a1e4 	.word	0x0802a1e4
 80065fc:	08005d61 	.word	0x08005d61
 8006600:	0802a1fc 	.word	0x0802a1fc
 8006604:	08005bcb 	.word	0x08005bcb
 8006608:	ff0099cc 	.word	0xff0099cc
 800660c:	ff336699 	.word	0xff336699
 8006610:	ff006699 	.word	0xff006699
 8006614:	0802958c 	.word	0x0802958c
 8006618:	08029478 	.word	0x08029478
 800661c:	080294ba 	.word	0x080294ba
 8006620:	080294e8 	.word	0x080294e8
 8006624:	2002bd88 	.word	0x2002bd88
 8006628:	0802952f 	.word	0x0802952f
 800662c:	ff0a0a0a 	.word	0xff0a0a0a
 8006630:	2002bd84 	.word	0x2002bd84
        return texts->getText(typedTextId);
 8006634:	4bca      	ldr	r3, [pc, #808]	; (8006960 <_ZN15Screen1ViewBaseC1Ev+0xa98>)
 8006636:	2135      	movs	r1, #53	; 0x35
 8006638:	6818      	ldr	r0, [r3, #0]
 800663a:	f002 fae5 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 800663e:	4ac9      	ldr	r2, [pc, #804]	; (8006964 <_ZN15Screen1ViewBaseC1Ev+0xa9c>)
 8006640:	4603      	mov	r3, r0
 8006642:	210a      	movs	r1, #10
 8006644:	4650      	mov	r0, sl
 8006646:	f014 fd41 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wildcard = value;
 800664a:	f247 43bc 	movw	r3, #29884	; 0x74bc
        wildcardText.setPosition(x, y, width, height);
 800664e:	2205      	movs	r2, #5
 8006650:	f844 a003 	str.w	sl, [r4, r3]
 8006654:	4629      	mov	r1, r5
 8006656:	4633      	mov	r3, r6
 8006658:	f504 40e9 	add.w	r0, r4, #29824	; 0x7480
 800665c:	9600      	str	r6, [sp, #0]
 800665e:	f7fc fa27 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPageBack.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8006662:	4642      	mov	r2, r8
 8006664:	9805      	ldr	r0, [sp, #20]
 8006666:	4641      	mov	r1, r8
 8006668:	f7ff fbf7 	bl	8005e5a <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
        rect.width = width;
 800666c:	f247 4310 	movw	r3, #29712	; 0x7410
 8006670:	f04f 1132 	mov.w	r1, #3276850	; 0x320032
 8006674:	50e1      	str	r1, [r4, r3]
 8006676:	f247 4338 	movw	r3, #29752	; 0x7438
 800667a:	9903      	ldr	r1, [sp, #12]
 800667c:	50e1      	str	r1, [r4, r3]
    listLayoutPageButton.add(flexButtonPageBack);
 800667e:	ee1a 0a10 	vmov	r0, s20
 8006682:	9905      	ldr	r1, [sp, #20]
 8006684:	f00d fa68 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8006688:	4633      	mov	r3, r6
 800668a:	462a      	mov	r2, r5
 800668c:	4629      	mov	r1, r5
 800668e:	f10b 0034 	add.w	r0, fp, #52	; 0x34
 8006692:	9600      	str	r6, [sp, #0]
 8006694:	f7fc fa0c 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPage_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8006698:	49b3      	ldr	r1, [pc, #716]	; (8006968 <_ZN15Screen1ViewBaseC1Ev+0xaa0>)
 800669a:	4ab4      	ldr	r2, [pc, #720]	; (800696c <_ZN15Screen1ViewBaseC1Ev+0xaa4>)
 800669c:	9100      	str	r1, [sp, #0]
 800669e:	f247 532c 	movw	r3, #29996	; 0x752c
 80066a2:	f5a1 114c 	sub.w	r1, r1, #3342336	; 0x330000
 80066a6:	52e7      	strh	r7, [r4, r3]
 80066a8:	4658      	mov	r0, fp
 80066aa:	4bb1      	ldr	r3, [pc, #708]	; (8006970 <_ZN15Screen1ViewBaseC1Ev+0xaa8>)
 80066ac:	f7fc fa3c 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 80066b0:	4bb0      	ldr	r3, [pc, #704]	; (8006974 <_ZN15Screen1ViewBaseC1Ev+0xaac>)
 80066b2:	933a      	str	r3, [sp, #232]	; 0xe8
    flexButtonPage_1.setWildcardText(TypedText(T___SINGLEUSE_WP7W));
 80066b4:	a93a      	add	r1, sp, #232	; 0xe8
 80066b6:	2336      	movs	r3, #54	; 0x36
 80066b8:	4658      	mov	r0, fp
 80066ba:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 80066be:	f7fc fa4e 	bl	8002b5e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80066c2:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(flexButtonPage_1Buffer, FLEXBUTTONPAGE_1_SIZE, "%s", TypedText(T___SINGLEUSE_IWNN).getText());
 80066c6:	f504 4a7e 	add.w	sl, r4, #65024	; 0xfe00
 80066ca:	f10a 0a4c 	add.w	sl, sl, #76	; 0x4c
 80066ce:	2b00      	cmp	r3, #0
 80066d0:	d083      	beq.n	80065da <_ZN15Screen1ViewBaseC1Ev+0x712>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80066d2:	49a9      	ldr	r1, [pc, #676]	; (8006978 <_ZN15Screen1ViewBaseC1Ev+0xab0>)
 80066d4:	880b      	ldrh	r3, [r1, #0]
 80066d6:	2b37      	cmp	r3, #55	; 0x37
 80066d8:	d989      	bls.n	80065ee <_ZN15Screen1ViewBaseC1Ev+0x726>
        return texts->getText(typedTextId);
 80066da:	4aa1      	ldr	r2, [pc, #644]	; (8006960 <_ZN15Screen1ViewBaseC1Ev+0xa98>)
 80066dc:	2137      	movs	r1, #55	; 0x37
 80066de:	6810      	ldr	r0, [r2, #0]
 80066e0:	f002 fa92 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 80066e4:	4a9f      	ldr	r2, [pc, #636]	; (8006964 <_ZN15Screen1ViewBaseC1Ev+0xa9c>)
 80066e6:	4603      	mov	r3, r0
 80066e8:	210a      	movs	r1, #10
 80066ea:	4650      	mov	r0, sl
 80066ec:	f014 fcee 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80066f0:	f247 537c 	movw	r3, #30076	; 0x757c
 80066f4:	f10b 0078 	add.w	r0, fp, #120	; 0x78
 80066f8:	f844 a003 	str.w	sl, [r4, r3]
 80066fc:	2205      	movs	r2, #5
 80066fe:	4633      	mov	r3, r6
 8006700:	4629      	mov	r1, r5
 8006702:	9600      	str	r6, [sp, #0]
 8006704:	f7fc f9d4 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPage_1.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8006708:	4642      	mov	r2, r8
 800670a:	4658      	mov	r0, fp
 800670c:	4641      	mov	r1, r8
 800670e:	f7ff fba4 	bl	8005e5a <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
 8006712:	f247 43d0 	movw	r3, #29904	; 0x74d0
 8006716:	f04f 1032 	mov.w	r0, #3276850	; 0x320032
 800671a:	50e0      	str	r0, [r4, r3]
 800671c:	f247 43f8 	movw	r3, #29944	; 0x74f8
 8006720:	9803      	ldr	r0, [sp, #12]
 8006722:	50e0      	str	r0, [r4, r3]
    listLayoutPageButton.add(flexButtonPage_1);
 8006724:	4659      	mov	r1, fp
 8006726:	ee1a 0a10 	vmov	r0, s20
 800672a:	f00d fa15 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 800672e:	9806      	ldr	r0, [sp, #24]
 8006730:	9600      	str	r6, [sp, #0]
 8006732:	4633      	mov	r3, r6
 8006734:	462a      	mov	r2, r5
 8006736:	4629      	mov	r1, r5
 8006738:	3034      	adds	r0, #52	; 0x34
 800673a:	f7fc f9b9 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 800673e:	f247 53ec 	movw	r3, #30188	; 0x75ec
    flexButtonPage_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8006742:	4889      	ldr	r0, [pc, #548]	; (8006968 <_ZN15Screen1ViewBaseC1Ev+0xaa0>)
 8006744:	52e7      	strh	r7, [r4, r3]
 8006746:	4a89      	ldr	r2, [pc, #548]	; (800696c <_ZN15Screen1ViewBaseC1Ev+0xaa4>)
 8006748:	4b89      	ldr	r3, [pc, #548]	; (8006970 <_ZN15Screen1ViewBaseC1Ev+0xaa8>)
 800674a:	498c      	ldr	r1, [pc, #560]	; (800697c <_ZN15Screen1ViewBaseC1Ev+0xab4>)
 800674c:	9000      	str	r0, [sp, #0]
 800674e:	9806      	ldr	r0, [sp, #24]
 8006750:	f7fc f9ea 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8006754:	4b87      	ldr	r3, [pc, #540]	; (8006974 <_ZN15Screen1ViewBaseC1Ev+0xaac>)
 8006756:	933a      	str	r3, [sp, #232]	; 0xe8
    flexButtonPage_2.setWildcardText(TypedText(T___SINGLEUSE_AKZM));
 8006758:	a83a      	add	r0, sp, #232	; 0xe8
 800675a:	2338      	movs	r3, #56	; 0x38
 800675c:	4601      	mov	r1, r0
 800675e:	9806      	ldr	r0, [sp, #24]
 8006760:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8006764:	f7fc f9fb 	bl	8002b5e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006768:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(flexButtonPage_2Buffer, FLEXBUTTONPAGE_2_SIZE, "%s", TypedText(T___SINGLEUSE_G02N).getText());
 800676c:	f504 4b7e 	add.w	fp, r4, #65024	; 0xfe00
 8006770:	f10b 0b60 	add.w	fp, fp, #96	; 0x60
 8006774:	2b00      	cmp	r3, #0
 8006776:	f43f af30 	beq.w	80065da <_ZN15Screen1ViewBaseC1Ev+0x712>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800677a:	497f      	ldr	r1, [pc, #508]	; (8006978 <_ZN15Screen1ViewBaseC1Ev+0xab0>)
 800677c:	880b      	ldrh	r3, [r1, #0]
 800677e:	2b39      	cmp	r3, #57	; 0x39
 8006780:	f67f af35 	bls.w	80065ee <_ZN15Screen1ViewBaseC1Ev+0x726>
        return texts->getText(typedTextId);
 8006784:	4a76      	ldr	r2, [pc, #472]	; (8006960 <_ZN15Screen1ViewBaseC1Ev+0xa98>)
 8006786:	2139      	movs	r1, #57	; 0x39
 8006788:	6810      	ldr	r0, [r2, #0]
 800678a:	f002 fa3d 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 800678e:	4a75      	ldr	r2, [pc, #468]	; (8006964 <_ZN15Screen1ViewBaseC1Ev+0xa9c>)
 8006790:	4603      	mov	r3, r0
 8006792:	210a      	movs	r1, #10
 8006794:	4658      	mov	r0, fp
 8006796:	f014 fc99 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800679a:	f247 633c 	movw	r3, #30268	; 0x763c
 800679e:	2205      	movs	r2, #5
 80067a0:	f844 b003 	str.w	fp, [r4, r3]
 80067a4:	4629      	mov	r1, r5
 80067a6:	4633      	mov	r3, r6
 80067a8:	f504 40ec 	add.w	r0, r4, #30208	; 0x7600
 80067ac:	9600      	str	r6, [sp, #0]
 80067ae:	f7fc f97f 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPage_2.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 80067b2:	4642      	mov	r2, r8
 80067b4:	9806      	ldr	r0, [sp, #24]
 80067b6:	4641      	mov	r1, r8
 80067b8:	f7ff fb4f 	bl	8005e5a <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
 80067bc:	f247 5390 	movw	r3, #30096	; 0x7590
 80067c0:	f04f 1032 	mov.w	r0, #3276850	; 0x320032
 80067c4:	50e0      	str	r0, [r4, r3]
 80067c6:	f247 53b8 	movw	r3, #30136	; 0x75b8
 80067ca:	9803      	ldr	r0, [sp, #12]
 80067cc:	50e0      	str	r0, [r4, r3]
    listLayoutPageButton.add(flexButtonPage_2);
 80067ce:	9906      	ldr	r1, [sp, #24]
 80067d0:	ee1a 0a10 	vmov	r0, s20
 80067d4:	f00d f9c0 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 80067d8:	ee1b 0a90 	vmov	r0, s23
 80067dc:	4633      	mov	r3, r6
 80067de:	462a      	mov	r2, r5
 80067e0:	4629      	mov	r1, r5
 80067e2:	3034      	adds	r0, #52	; 0x34
 80067e4:	9600      	str	r6, [sp, #0]
 80067e6:	f7fc f963 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80067ea:	f247 63ac 	movw	r3, #30380	; 0x76ac
    flexButtonPage_3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80067ee:	485e      	ldr	r0, [pc, #376]	; (8006968 <_ZN15Screen1ViewBaseC1Ev+0xaa0>)
 80067f0:	52e7      	strh	r7, [r4, r3]
 80067f2:	4a5e      	ldr	r2, [pc, #376]	; (800696c <_ZN15Screen1ViewBaseC1Ev+0xaa4>)
 80067f4:	4b5e      	ldr	r3, [pc, #376]	; (8006970 <_ZN15Screen1ViewBaseC1Ev+0xaa8>)
 80067f6:	4961      	ldr	r1, [pc, #388]	; (800697c <_ZN15Screen1ViewBaseC1Ev+0xab4>)
 80067f8:	9000      	str	r0, [sp, #0]
 80067fa:	ee1b 0a90 	vmov	r0, s23
 80067fe:	f7fc f993 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8006802:	4b5c      	ldr	r3, [pc, #368]	; (8006974 <_ZN15Screen1ViewBaseC1Ev+0xaac>)
 8006804:	933a      	str	r3, [sp, #232]	; 0xe8
    flexButtonPage_3.setWildcardText(TypedText(T___SINGLEUSE_5HYA));
 8006806:	a83a      	add	r0, sp, #232	; 0xe8
 8006808:	233a      	movs	r3, #58	; 0x3a
 800680a:	4601      	mov	r1, r0
 800680c:	ee1b 0a90 	vmov	r0, s23
 8006810:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8006814:	f7fc f9a3 	bl	8002b5e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006818:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(flexButtonPage_3Buffer, FLEXBUTTONPAGE_3_SIZE, "%s", TypedText(T___SINGLEUSE_LYTH).getText());
 800681c:	f504 4b7e 	add.w	fp, r4, #65024	; 0xfe00
 8006820:	f10b 0b74 	add.w	fp, fp, #116	; 0x74
 8006824:	2b00      	cmp	r3, #0
 8006826:	f43f aed8 	beq.w	80065da <_ZN15Screen1ViewBaseC1Ev+0x712>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800682a:	4953      	ldr	r1, [pc, #332]	; (8006978 <_ZN15Screen1ViewBaseC1Ev+0xab0>)
 800682c:	880b      	ldrh	r3, [r1, #0]
 800682e:	2b3b      	cmp	r3, #59	; 0x3b
 8006830:	f67f aedd 	bls.w	80065ee <_ZN15Screen1ViewBaseC1Ev+0x726>
        return texts->getText(typedTextId);
 8006834:	4a4a      	ldr	r2, [pc, #296]	; (8006960 <_ZN15Screen1ViewBaseC1Ev+0xa98>)
 8006836:	213b      	movs	r1, #59	; 0x3b
 8006838:	6810      	ldr	r0, [r2, #0]
 800683a:	f002 f9e5 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 800683e:	4a49      	ldr	r2, [pc, #292]	; (8006964 <_ZN15Screen1ViewBaseC1Ev+0xa9c>)
 8006840:	4603      	mov	r3, r0
 8006842:	210a      	movs	r1, #10
 8006844:	4658      	mov	r0, fp
 8006846:	f014 fc41 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800684a:	f247 63fc 	movw	r3, #30460	; 0x76fc
 800684e:	ee1b 0a90 	vmov	r0, s23
 8006852:	4629      	mov	r1, r5
 8006854:	f844 b003 	str.w	fp, [r4, r3]
 8006858:	9600      	str	r6, [sp, #0]
 800685a:	4633      	mov	r3, r6
 800685c:	2205      	movs	r2, #5
 800685e:	3078      	adds	r0, #120	; 0x78
 8006860:	f7fc f926 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPage_3.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8006864:	4642      	mov	r2, r8
 8006866:	ee1b 0a90 	vmov	r0, s23
 800686a:	4641      	mov	r1, r8
 800686c:	f7ff faf5 	bl	8005e5a <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
 8006870:	f247 6350 	movw	r3, #30288	; 0x7650
 8006874:	f04f 1032 	mov.w	r0, #3276850	; 0x320032
 8006878:	50e0      	str	r0, [r4, r3]
 800687a:	f247 6378 	movw	r3, #30328	; 0x7678
 800687e:	9803      	ldr	r0, [sp, #12]
 8006880:	50e0      	str	r0, [r4, r3]
    listLayoutPageButton.add(flexButtonPage_3);
 8006882:	ee1b 1a90 	vmov	r1, s23
 8006886:	ee1a 0a10 	vmov	r0, s20
 800688a:	f00d f965 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 800688e:	9807      	ldr	r0, [sp, #28]
 8006890:	9600      	str	r6, [sp, #0]
 8006892:	4633      	mov	r3, r6
 8006894:	462a      	mov	r2, r5
 8006896:	4629      	mov	r1, r5
 8006898:	3034      	adds	r0, #52	; 0x34
 800689a:	f7fc f909 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 800689e:	f247 736c 	movw	r3, #30572	; 0x776c
    flexButtonPage_4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80068a2:	4831      	ldr	r0, [pc, #196]	; (8006968 <_ZN15Screen1ViewBaseC1Ev+0xaa0>)
 80068a4:	52e7      	strh	r7, [r4, r3]
 80068a6:	4a31      	ldr	r2, [pc, #196]	; (800696c <_ZN15Screen1ViewBaseC1Ev+0xaa4>)
 80068a8:	4b31      	ldr	r3, [pc, #196]	; (8006970 <_ZN15Screen1ViewBaseC1Ev+0xaa8>)
 80068aa:	4934      	ldr	r1, [pc, #208]	; (800697c <_ZN15Screen1ViewBaseC1Ev+0xab4>)
 80068ac:	9000      	str	r0, [sp, #0]
 80068ae:	9807      	ldr	r0, [sp, #28]
        : typedTextId(id)
 80068b0:	4e30      	ldr	r6, [pc, #192]	; (8006974 <_ZN15Screen1ViewBaseC1Ev+0xaac>)
 80068b2:	f7fc f939 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 80068b6:	233c      	movs	r3, #60	; 0x3c
 80068b8:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
    flexButtonPage_4.setWildcardText(TypedText(T___SINGLEUSE_IX3T));
 80068bc:	ab3a      	add	r3, sp, #232	; 0xe8
 80068be:	4619      	mov	r1, r3
 80068c0:	9807      	ldr	r0, [sp, #28]
 80068c2:	963a      	str	r6, [sp, #232]	; 0xe8
 80068c4:	f7fc f94b 	bl	8002b5e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80068c8:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(flexButtonPage_4Buffer, FLEXBUTTONPAGE_4_SIZE, "%s", TypedText(T___SINGLEUSE_MKU4).getText());
 80068cc:	f504 457e 	add.w	r5, r4, #65024	; 0xfe00
 80068d0:	3588      	adds	r5, #136	; 0x88
 80068d2:	2b00      	cmp	r3, #0
 80068d4:	f43f ae81 	beq.w	80065da <_ZN15Screen1ViewBaseC1Ev+0x712>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80068d8:	4927      	ldr	r1, [pc, #156]	; (8006978 <_ZN15Screen1ViewBaseC1Ev+0xab0>)
 80068da:	880b      	ldrh	r3, [r1, #0]
 80068dc:	2b3d      	cmp	r3, #61	; 0x3d
 80068de:	f67f ae86 	bls.w	80065ee <_ZN15Screen1ViewBaseC1Ev+0x726>
        return texts->getText(typedTextId);
 80068e2:	f8df 907c 	ldr.w	r9, [pc, #124]	; 8006960 <_ZN15Screen1ViewBaseC1Ev+0xa98>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80068e6:	4f26      	ldr	r7, [pc, #152]	; (8006980 <_ZN15Screen1ViewBaseC1Ev+0xab8>)
        return texts->getText(typedTextId);
 80068e8:	f8d9 0000 	ldr.w	r0, [r9]
 80068ec:	213d      	movs	r1, #61	; 0x3d
 80068ee:	f002 f98b 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 80068f2:	4a1c      	ldr	r2, [pc, #112]	; (8006964 <_ZN15Screen1ViewBaseC1Ev+0xa9c>)
 80068f4:	4603      	mov	r3, r0
 80068f6:	210a      	movs	r1, #10
 80068f8:	4628      	mov	r0, r5
 80068fa:	f014 fbe7 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80068fe:	f247 73bc 	movw	r3, #30652	; 0x77bc
 8006902:	2205      	movs	r2, #5
 8006904:	50e5      	str	r5, [r4, r3]
 8006906:	2532      	movs	r5, #50	; 0x32
 8006908:	462b      	mov	r3, r5
 800690a:	2100      	movs	r1, #0
 800690c:	f504 40ef 	add.w	r0, r4, #30592	; 0x7780
 8006910:	9500      	str	r5, [sp, #0]
 8006912:	f7fc f8cd 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPage_4.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8006916:	4a1b      	ldr	r2, [pc, #108]	; (8006984 <_ZN15Screen1ViewBaseC1Ev+0xabc>)
 8006918:	9807      	ldr	r0, [sp, #28]
 800691a:	4611      	mov	r1, r2
 800691c:	f7ff fa9d 	bl	8005e5a <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
 8006920:	f247 7310 	movw	r3, #30480	; 0x7710
 8006924:	f04f 1a32 	mov.w	sl, #3276850	; 0x320032
 8006928:	f844 a003 	str.w	sl, [r4, r3]
 800692c:	f247 7338 	movw	r3, #30520	; 0x7738
 8006930:	9803      	ldr	r0, [sp, #12]
 8006932:	50e0      	str	r0, [r4, r3]
    listLayoutPageButton.add(flexButtonPage_4);
 8006934:	9907      	ldr	r1, [sp, #28]
 8006936:	ee1a 0a10 	vmov	r0, s20
 800693a:	f00d f90d 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 800693e:	ee1c 0a10 	vmov	r0, s24
 8006942:	2200      	movs	r2, #0
 8006944:	4611      	mov	r1, r2
 8006946:	462b      	mov	r3, r5
 8006948:	3034      	adds	r0, #52	; 0x34
 800694a:	9500      	str	r5, [sp, #0]
 800694c:	f7fc f8b0 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006950:	f647 032c 	movw	r3, #30764	; 0x782c
 8006954:	f04f 0b01 	mov.w	fp, #1
 8006958:	f824 b003 	strh.w	fp, [r4, r3]
 800695c:	e014      	b.n	8006988 <_ZN15Screen1ViewBaseC1Ev+0xac0>
 800695e:	bf00      	nop
 8006960:	2002bd90 	.word	0x2002bd90
 8006964:	08029581 	.word	0x08029581
 8006968:	ff336699 	.word	0xff336699
 800696c:	ff0099cc 	.word	0xff0099cc
 8006970:	ff003366 	.word	0xff003366
 8006974:	0802958c 	.word	0x0802958c
 8006978:	2002bd88 	.word	0x2002bd88
 800697c:	ff006699 	.word	0xff006699
 8006980:	2002bd84 	.word	0x2002bd84
 8006984:	ff0a0a0a 	.word	0xff0a0a0a
    flexButtonPage_5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8006988:	4bd3      	ldr	r3, [pc, #844]	; (8006cd8 <_ZN15Screen1ViewBaseC1Ev+0xe10>)
 800698a:	9300      	str	r3, [sp, #0]
 800698c:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 8006990:	4ad2      	ldr	r2, [pc, #840]	; (8006cdc <_ZN15Screen1ViewBaseC1Ev+0xe14>)
 8006992:	49d3      	ldr	r1, [pc, #844]	; (8006ce0 <_ZN15Screen1ViewBaseC1Ev+0xe18>)
 8006994:	ee1c 0a10 	vmov	r0, s24
 8006998:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 800699c:	f7fc f8c4 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButtonPage_5.setWildcardText(TypedText(T___SINGLEUSE_I0UZ));
 80069a0:	a83a      	add	r0, sp, #232	; 0xe8
        : typedTextId(id)
 80069a2:	233e      	movs	r3, #62	; 0x3e
 80069a4:	4601      	mov	r1, r0
 80069a6:	ee1c 0a10 	vmov	r0, s24
 80069aa:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 80069ae:	963a      	str	r6, [sp, #232]	; 0xe8
 80069b0:	f7fc f8d5 	bl	8002b5e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80069b4:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(flexButtonPage_5Buffer, FLEXBUTTONPAGE_5_SIZE, "%s", TypedText(T___SINGLEUSE_ONOL).getText());
 80069b6:	f504 487e 	add.w	r8, r4, #65024	; 0xfe00
 80069ba:	f108 089c 	add.w	r8, r8, #156	; 0x9c
 80069be:	2b00      	cmp	r3, #0
 80069c0:	f43f ae0b 	beq.w	80065da <_ZN15Screen1ViewBaseC1Ev+0x712>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80069c4:	4ec7      	ldr	r6, [pc, #796]	; (8006ce4 <_ZN15Screen1ViewBaseC1Ev+0xe1c>)
 80069c6:	8833      	ldrh	r3, [r6, #0]
 80069c8:	2b3f      	cmp	r3, #63	; 0x3f
 80069ca:	f67f ae10 	bls.w	80065ee <_ZN15Screen1ViewBaseC1Ev+0x726>
        return texts->getText(typedTextId);
 80069ce:	213f      	movs	r1, #63	; 0x3f
 80069d0:	f8d9 0000 	ldr.w	r0, [r9]
 80069d4:	f002 f918 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 80069d8:	4ac3      	ldr	r2, [pc, #780]	; (8006ce8 <_ZN15Screen1ViewBaseC1Ev+0xe20>)
 80069da:	4603      	mov	r3, r0
 80069dc:	210a      	movs	r1, #10
 80069de:	4640      	mov	r0, r8
 80069e0:	f014 fb74 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80069e4:	f647 037c 	movw	r3, #30844	; 0x787c
 80069e8:	ee1c 0a10 	vmov	r0, s24
 80069ec:	f844 8003 	str.w	r8, [r4, r3]
 80069f0:	2205      	movs	r2, #5
 80069f2:	462b      	mov	r3, r5
 80069f4:	2100      	movs	r1, #0
 80069f6:	3078      	adds	r0, #120	; 0x78
 80069f8:	9500      	str	r5, [sp, #0]
 80069fa:	f7fc f859 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPage_5.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 80069fe:	4abb      	ldr	r2, [pc, #748]	; (8006cec <_ZN15Screen1ViewBaseC1Ev+0xe24>)
 8006a00:	ee1c 0a10 	vmov	r0, s24
 8006a04:	4611      	mov	r1, r2
 8006a06:	f7ff fa28 	bl	8005e5a <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
 8006a0a:	f247 73d0 	movw	r3, #30672	; 0x77d0
 8006a0e:	9803      	ldr	r0, [sp, #12]
 8006a10:	f844 a003 	str.w	sl, [r4, r3]
 8006a14:	f247 73f8 	movw	r3, #30712	; 0x77f8
    listLayoutPageButton.add(flexButtonPage_5);
 8006a18:	ee1c 1a10 	vmov	r1, s24
 8006a1c:	50e0      	str	r0, [r4, r3]
 8006a1e:	ee1a 0a10 	vmov	r0, s20
 8006a22:	f00d f899 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8006a26:	9808      	ldr	r0, [sp, #32]
 8006a28:	9500      	str	r5, [sp, #0]
 8006a2a:	2200      	movs	r2, #0
 8006a2c:	4611      	mov	r1, r2
 8006a2e:	462b      	mov	r3, r5
 8006a30:	3034      	adds	r0, #52	; 0x34
 8006a32:	f7fc f83d 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006a36:	f647 03ec 	movw	r3, #30956	; 0x78ec
    flexButtonPageForward.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8006a3a:	48a7      	ldr	r0, [pc, #668]	; (8006cd8 <_ZN15Screen1ViewBaseC1Ev+0xe10>)
 8006a3c:	f824 b003 	strh.w	fp, [r4, r3]
 8006a40:	4aa6      	ldr	r2, [pc, #664]	; (8006cdc <_ZN15Screen1ViewBaseC1Ev+0xe14>)
 8006a42:	4bab      	ldr	r3, [pc, #684]	; (8006cf0 <_ZN15Screen1ViewBaseC1Ev+0xe28>)
 8006a44:	49a6      	ldr	r1, [pc, #664]	; (8006ce0 <_ZN15Screen1ViewBaseC1Ev+0xe18>)
 8006a46:	9000      	str	r0, [sp, #0]
 8006a48:	9808      	ldr	r0, [sp, #32]
 8006a4a:	f7fc f86d 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8006a4e:	4ba9      	ldr	r3, [pc, #676]	; (8006cf4 <_ZN15Screen1ViewBaseC1Ev+0xe2c>)
 8006a50:	933a      	str	r3, [sp, #232]	; 0xe8
    flexButtonPageForward.setWildcardText(TypedText(T___SINGLEUSE_A1TC));
 8006a52:	a83a      	add	r0, sp, #232	; 0xe8
 8006a54:	2340      	movs	r3, #64	; 0x40
 8006a56:	4601      	mov	r1, r0
 8006a58:	9808      	ldr	r0, [sp, #32]
 8006a5a:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8006a5e:	f7fc f87e 	bl	8002b5e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006a62:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(flexButtonPageForwardBuffer, FLEXBUTTONPAGEFORWARD_SIZE, "%s", TypedText(T___SINGLEUSE_UI2S).getText());
 8006a64:	f504 487e 	add.w	r8, r4, #65024	; 0xfe00
 8006a68:	f108 08b0 	add.w	r8, r8, #176	; 0xb0
 8006a6c:	2b00      	cmp	r3, #0
 8006a6e:	f43f adb4 	beq.w	80065da <_ZN15Screen1ViewBaseC1Ev+0x712>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8006a72:	8833      	ldrh	r3, [r6, #0]
 8006a74:	2b41      	cmp	r3, #65	; 0x41
 8006a76:	f67f adba 	bls.w	80065ee <_ZN15Screen1ViewBaseC1Ev+0x726>
        return texts->getText(typedTextId);
 8006a7a:	2141      	movs	r1, #65	; 0x41
 8006a7c:	f8d9 0000 	ldr.w	r0, [r9]
 8006a80:	f002 f8c2 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8006a84:	4a98      	ldr	r2, [pc, #608]	; (8006ce8 <_ZN15Screen1ViewBaseC1Ev+0xe20>)
 8006a86:	4603      	mov	r3, r0
 8006a88:	210a      	movs	r1, #10
 8006a8a:	4640      	mov	r0, r8
 8006a8c:	f014 fb1e 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8006a90:	f647 133c 	movw	r3, #31036	; 0x793c
 8006a94:	2205      	movs	r2, #5
 8006a96:	f844 8003 	str.w	r8, [r4, r3]
 8006a9a:	2100      	movs	r1, #0
 8006a9c:	462b      	mov	r3, r5
 8006a9e:	f504 40f2 	add.w	r0, r4, #30976	; 0x7900
 8006aa2:	9500      	str	r5, [sp, #0]
 8006aa4:	f7fc f804 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPageForward.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8006aa8:	4a90      	ldr	r2, [pc, #576]	; (8006cec <_ZN15Screen1ViewBaseC1Ev+0xe24>)
 8006aaa:	9808      	ldr	r0, [sp, #32]
 8006aac:	4611      	mov	r1, r2
 8006aae:	f7ff f9d4 	bl	8005e5a <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
 8006ab2:	f647 0390 	movw	r3, #30864	; 0x7890
 8006ab6:	9803      	ldr	r0, [sp, #12]
 8006ab8:	f844 a003 	str.w	sl, [r4, r3]
 8006abc:	f647 03b8 	movw	r3, #30904	; 0x78b8
    listLayoutPageButton.add(flexButtonPageForward);
 8006ac0:	9908      	ldr	r1, [sp, #32]
 8006ac2:	50e0      	str	r0, [r4, r3]
 8006ac4:	ee1a 0a10 	vmov	r0, s20
 8006ac8:	f00d f846 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutButtonFilter_Type2.setDirection(touchgfx::EAST);
 8006acc:	ee18 0a90 	vmov	r0, s17
 8006ad0:	2102      	movs	r1, #2
 8006ad2:	f00c ffd7 	bl	8013a84 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>
    listLayoutButtonFilter_Type2.setXY(32, 480);
 8006ad6:	ee18 0a90 	vmov	r0, s17
 8006ada:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8006ade:	2120      	movs	r1, #32
 8006ae0:	f7fb fd12 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 8006ae4:	ee1c 0a90 	vmov	r0, s25
 8006ae8:	2200      	movs	r2, #0
 8006aea:	f04f 083b 	mov.w	r8, #59	; 0x3b
 8006aee:	4611      	mov	r1, r2
 8006af0:	2396      	movs	r3, #150	; 0x96
 8006af2:	3034      	adds	r0, #52	; 0x34
 8006af4:	f8cd 8000 	str.w	r8, [sp]
 8006af8:	f7fb ffda 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006afc:	f647 13dc 	movw	r3, #31196	; 0x79dc
    flexButtonFilterData_Type2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8006b00:	4875      	ldr	r0, [pc, #468]	; (8006cd8 <_ZN15Screen1ViewBaseC1Ev+0xe10>)
 8006b02:	4a76      	ldr	r2, [pc, #472]	; (8006cdc <_ZN15Screen1ViewBaseC1Ev+0xe14>)
 8006b04:	4976      	ldr	r1, [pc, #472]	; (8006ce0 <_ZN15Screen1ViewBaseC1Ev+0xe18>)
 8006b06:	9000      	str	r0, [sp, #0]
 8006b08:	f04f 0b02 	mov.w	fp, #2
 8006b0c:	f824 b003 	strh.w	fp, [r4, r3]
 8006b10:	ee1c 0a90 	vmov	r0, s25
 8006b14:	4b76      	ldr	r3, [pc, #472]	; (8006cf0 <_ZN15Screen1ViewBaseC1Ev+0xe28>)
 8006b16:	f7fc f807 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8006b1a:	4b76      	ldr	r3, [pc, #472]	; (8006cf4 <_ZN15Screen1ViewBaseC1Ev+0xe2c>)
 8006b1c:	933a      	str	r3, [sp, #232]	; 0xe8
    flexButtonFilterData_Type2.setWildcardText(TypedText(T___SINGLEUSE_RL3K));
 8006b1e:	a83a      	add	r0, sp, #232	; 0xe8
 8006b20:	f240 132b 	movw	r3, #299	; 0x12b
 8006b24:	4601      	mov	r1, r0
 8006b26:	ee1c 0a90 	vmov	r0, s25
 8006b2a:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8006b2e:	f7fc f816 	bl	8002b5e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006b32:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(flexButtonFilterData_Type2Buffer, FLEXBUTTONFILTERDATA_TYPE2_SIZE, "%s", TypedText(T___SINGLEUSE_XU9J).getText());
 8006b34:	f504 4a7e 	add.w	sl, r4, #65024	; 0xfe00
 8006b38:	f10a 0ac4 	add.w	sl, sl, #196	; 0xc4
 8006b3c:	2b00      	cmp	r3, #0
 8006b3e:	f43f ad4c 	beq.w	80065da <_ZN15Screen1ViewBaseC1Ev+0x712>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8006b42:	8833      	ldrh	r3, [r6, #0]
 8006b44:	f5b3 7f96 	cmp.w	r3, #300	; 0x12c
 8006b48:	f67f ad51 	bls.w	80065ee <_ZN15Screen1ViewBaseC1Ev+0x726>
        return texts->getText(typedTextId);
 8006b4c:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8006b50:	f8d9 0000 	ldr.w	r0, [r9]
 8006b54:	f002 f858 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8006b58:	4a63      	ldr	r2, [pc, #396]	; (8006ce8 <_ZN15Screen1ViewBaseC1Ev+0xe20>)
 8006b5a:	4603      	mov	r3, r0
 8006b5c:	210f      	movs	r1, #15
 8006b5e:	4650      	mov	r0, sl
 8006b60:	f014 fab4 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8006b64:	f647 232c 	movw	r3, #31276	; 0x7a2c
 8006b68:	ee1c 0a90 	vmov	r0, s25
 8006b6c:	2200      	movs	r2, #0
 8006b6e:	f844 a003 	str.w	sl, [r4, r3]
 8006b72:	4611      	mov	r1, r2
 8006b74:	2396      	movs	r3, #150	; 0x96
 8006b76:	3078      	adds	r0, #120	; 0x78
 8006b78:	f8cd 8000 	str.w	r8, [sp]
 8006b7c:	f7fb ff98 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonFilterData_Type2.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8006b80:	4a5a      	ldr	r2, [pc, #360]	; (8006cec <_ZN15Screen1ViewBaseC1Ev+0xe24>)
 8006b82:	ee1c 0a90 	vmov	r0, s25
 8006b86:	4611      	mov	r1, r2
 8006b88:	f7ff f967 	bl	8005e5a <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
 8006b8c:	f504 43f3 	add.w	r3, r4, #31104	; 0x7980
 8006b90:	4a59      	ldr	r2, [pc, #356]	; (8006cf8 <_ZN15Screen1ViewBaseC1Ev+0xe30>)
 8006b92:	601a      	str	r2, [r3, #0]
 8006b94:	f647 13a8 	movw	r3, #31144	; 0x79a8
 8006b98:	9803      	ldr	r0, [sp, #12]
 8006b9a:	50e0      	str	r0, [r4, r3]
    listLayoutButtonFilter_Type2.add(flexButtonFilterData_Type2);
 8006b9c:	ee1c 1a90 	vmov	r1, s25
 8006ba0:	ee18 0a90 	vmov	r0, s17
 8006ba4:	f00c ffd8 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8006ba8:	ee1d 0a10 	vmov	r0, s26
 8006bac:	2200      	movs	r2, #0
 8006bae:	4611      	mov	r1, r2
 8006bb0:	462b      	mov	r3, r5
 8006bb2:	3034      	adds	r0, #52	; 0x34
 8006bb4:	f8cd 8000 	str.w	r8, [sp]
 8006bb8:	f7fb ff7a 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006bbc:	f647 239c 	movw	r3, #31388	; 0x7a9c
    flexButtonFilterNum_Type2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8006bc0:	4845      	ldr	r0, [pc, #276]	; (8006cd8 <_ZN15Screen1ViewBaseC1Ev+0xe10>)
 8006bc2:	f824 b003 	strh.w	fp, [r4, r3]
 8006bc6:	4a45      	ldr	r2, [pc, #276]	; (8006cdc <_ZN15Screen1ViewBaseC1Ev+0xe14>)
 8006bc8:	4b49      	ldr	r3, [pc, #292]	; (8006cf0 <_ZN15Screen1ViewBaseC1Ev+0xe28>)
 8006bca:	4945      	ldr	r1, [pc, #276]	; (8006ce0 <_ZN15Screen1ViewBaseC1Ev+0xe18>)
 8006bcc:	9000      	str	r0, [sp, #0]
 8006bce:	ee1d 0a10 	vmov	r0, s26
 8006bd2:	f7fb ffa9 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8006bd6:	4b47      	ldr	r3, [pc, #284]	; (8006cf4 <_ZN15Screen1ViewBaseC1Ev+0xe2c>)
 8006bd8:	933a      	str	r3, [sp, #232]	; 0xe8
    flexButtonFilterNum_Type2.setTwoWildcardText(TypedText(T___SINGLEUSE_JSZ5));
 8006bda:	a83a      	add	r0, sp, #232	; 0xe8
 8006bdc:	f240 132d 	movw	r3, #301	; 0x12d
 8006be0:	4601      	mov	r1, r0
 8006be2:	ee1d 0a10 	vmov	r0, s26
 8006be6:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8006bea:	f7ff f93c 	bl	8005e66 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18setTwoWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006bee:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(flexButtonFilterNum_Type2Buffer1, FLEXBUTTONFILTERNUM_TYPE2BUFFER1_SIZE, "%s", TypedText(T___SINGLEUSE_3JSL).getText());
 8006bf0:	f504 4a7e 	add.w	sl, r4, #65024	; 0xfe00
 8006bf4:	f10a 0ae2 	add.w	sl, sl, #226	; 0xe2
 8006bf8:	2b00      	cmp	r3, #0
 8006bfa:	f43f acee 	beq.w	80065da <_ZN15Screen1ViewBaseC1Ev+0x712>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8006bfe:	8833      	ldrh	r3, [r6, #0]
 8006c00:	f5b3 7f97 	cmp.w	r3, #302	; 0x12e
 8006c04:	f67f acf3 	bls.w	80065ee <_ZN15Screen1ViewBaseC1Ev+0x726>
        return texts->getText(typedTextId);
 8006c08:	f8d9 0000 	ldr.w	r0, [r9]
 8006c0c:	f44f 7197 	mov.w	r1, #302	; 0x12e
 8006c10:	f001 fffa 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8006c14:	4a34      	ldr	r2, [pc, #208]	; (8006ce8 <_ZN15Screen1ViewBaseC1Ev+0xe20>)
 8006c16:	4603      	mov	r3, r0
 8006c18:	210a      	movs	r1, #10
 8006c1a:	4650      	mov	r0, sl
 8006c1c:	f014 fa56 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithTwoWildcard
     *       may need it.
     */
    void setWildcard1(const Unicode::UnicodeChar* value)
    {
        wc1 = value;
 8006c20:	f647 23ec 	movw	r3, #31468	; 0x7aec
    flexButtonFilterNum_Type2Buffer2[0] = 0;
 8006c24:	f04f 0900 	mov.w	r9, #0
 8006c28:	f844 a003 	str.w	sl, [r4, r3]
 8006c2c:	f64f 63f6 	movw	r3, #65270	; 0xfef6
 8006c30:	18e2      	adds	r2, r4, r3
 8006c32:	f824 9003 	strh.w	r9, [r4, r3]
        twoWildcardText.setPosition(x, y, width, height);
 8006c36:	ee1d 0a10 	vmov	r0, s26
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithTwoWildcard
     *       may need it.
     */
    void setWildcard2(const Unicode::UnicodeChar* value)
    {
        wc2 = value;
 8006c3a:	f647 23f0 	movw	r3, #31472	; 0x7af0
 8006c3e:	4649      	mov	r1, r9
 8006c40:	50e2      	str	r2, [r4, r3]
 8006c42:	3078      	adds	r0, #120	; 0x78
 8006c44:	462b      	mov	r3, r5
 8006c46:	464a      	mov	r2, r9
 8006c48:	f8cd 8000 	str.w	r8, [sp]
 8006c4c:	f7fb ff30 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonFilterNum_Type2.setTwoWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8006c50:	4a26      	ldr	r2, [pc, #152]	; (8006cec <_ZN15Screen1ViewBaseC1Ev+0xe24>)
 8006c52:	ee1d 0a10 	vmov	r0, s26
 8006c56:	4611      	mov	r1, r2
 8006c58:	f7ff f914 	bl	8005e84 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE24setTwoWildcardTextColorsENS_9colortypeES5_>
 8006c5c:	f647 2340 	movw	r3, #31296	; 0x7a40
 8006c60:	4a26      	ldr	r2, [pc, #152]	; (8006cfc <_ZN15Screen1ViewBaseC1Ev+0xe34>)
 8006c62:	50e2      	str	r2, [r4, r3]
 8006c64:	f647 2368 	movw	r3, #31336	; 0x7a68
 8006c68:	9803      	ldr	r0, [sp, #12]
 8006c6a:	50e0      	str	r0, [r4, r3]
    listLayoutButtonFilter_Type2.add(flexButtonFilterNum_Type2);
 8006c6c:	ee1d 1a10 	vmov	r1, s26
 8006c70:	ee18 0a90 	vmov	r0, s17
 8006c74:	f00c ff70 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8006c78:	ee1d 0a90 	vmov	r0, s27
 8006c7c:	462b      	mov	r3, r5
 8006c7e:	464a      	mov	r2, r9
 8006c80:	4649      	mov	r1, r9
 8006c82:	3034      	adds	r0, #52	; 0x34
 8006c84:	f8cd 8000 	str.w	r8, [sp]
 8006c88:	f7fb ff12 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006c8c:	f647 3360 	movw	r3, #31584	; 0x7b60
    flexButtonFilterThreshold_1_Type2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8006c90:	4811      	ldr	r0, [pc, #68]	; (8006cd8 <_ZN15Screen1ViewBaseC1Ev+0xe10>)
 8006c92:	f824 b003 	strh.w	fp, [r4, r3]
 8006c96:	4a11      	ldr	r2, [pc, #68]	; (8006cdc <_ZN15Screen1ViewBaseC1Ev+0xe14>)
 8006c98:	4b15      	ldr	r3, [pc, #84]	; (8006cf0 <_ZN15Screen1ViewBaseC1Ev+0xe28>)
 8006c9a:	4911      	ldr	r1, [pc, #68]	; (8006ce0 <_ZN15Screen1ViewBaseC1Ev+0xe18>)
 8006c9c:	9000      	str	r0, [sp, #0]
 8006c9e:	ee1d 0a90 	vmov	r0, s27
 8006ca2:	f7fb ff41 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8006ca6:	4b13      	ldr	r3, [pc, #76]	; (8006cf4 <_ZN15Screen1ViewBaseC1Ev+0xe2c>)
 8006ca8:	933a      	str	r3, [sp, #232]	; 0xe8
    flexButtonFilterThreshold_1_Type2.setTwoWildcardText(TypedText(T___SINGLEUSE_55BH));
 8006caa:	a83a      	add	r0, sp, #232	; 0xe8
 8006cac:	f240 132f 	movw	r3, #303	; 0x12f
 8006cb0:	4601      	mov	r1, r0
 8006cb2:	ee1d 0a90 	vmov	r0, s27
 8006cb6:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8006cba:	f7ff f8d4 	bl	8005e66 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18setTwoWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006cbe:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(flexButtonFilterThreshold_1_Type2Buffer1, FLEXBUTTONFILTERTHRESHOLD_1_TYPE2BUFFER1_SIZE, "%s", TypedText(T___SINGLEUSE_3NDI).getText());
 8006cc0:	f504 457f 	add.w	r5, r4, #65280	; 0xff00
 8006cc4:	350a      	adds	r5, #10
 8006cc6:	2b00      	cmp	r3, #0
 8006cc8:	f43f ac87 	beq.w	80065da <_ZN15Screen1ViewBaseC1Ev+0x712>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8006ccc:	8833      	ldrh	r3, [r6, #0]
 8006cce:	f5b3 7f98 	cmp.w	r3, #304	; 0x130
 8006cd2:	f67f ac8c 	bls.w	80065ee <_ZN15Screen1ViewBaseC1Ev+0x726>
 8006cd6:	e013      	b.n	8006d00 <_ZN15Screen1ViewBaseC1Ev+0xe38>
 8006cd8:	ff336699 	.word	0xff336699
 8006cdc:	ff0099cc 	.word	0xff0099cc
 8006ce0:	ff006699 	.word	0xff006699
 8006ce4:	2002bd88 	.word	0x2002bd88
 8006ce8:	08029581 	.word	0x08029581
 8006cec:	ff0a0a0a 	.word	0xff0a0a0a
 8006cf0:	ff003366 	.word	0xff003366
 8006cf4:	0802958c 	.word	0x0802958c
 8006cf8:	003b0096 	.word	0x003b0096
 8006cfc:	003b0032 	.word	0x003b0032
        return texts->getText(typedTextId);
 8006d00:	f8df 939c 	ldr.w	r9, [pc, #924]	; 80070a0 <_ZN15Screen1ViewBaseC1Ev+0x11d8>
 8006d04:	f44f 7198 	mov.w	r1, #304	; 0x130
 8006d08:	f8d9 0000 	ldr.w	r0, [r9]
 8006d0c:	f001 ff7c 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8006d10:	4ada      	ldr	r2, [pc, #872]	; (800707c <_ZN15Screen1ViewBaseC1Ev+0x11b4>)
 8006d12:	4603      	mov	r3, r0
 8006d14:	210a      	movs	r1, #10
 8006d16:	4628      	mov	r0, r5
 8006d18:	f014 f9d8 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006d1c:	f647 33b0 	movw	r3, #31664	; 0x7bb0
 8006d20:	ee1d 0a90 	vmov	r0, s27
 8006d24:	50e5      	str	r5, [r4, r3]
    flexButtonFilterThreshold_1_Type2Buffer2[0] = 0;
 8006d26:	f64f 731e 	movw	r3, #65310	; 0xff1e
 8006d2a:	2500      	movs	r5, #0
 8006d2c:	52e5      	strh	r5, [r4, r3]
 8006d2e:	18e2      	adds	r2, r4, r3
        wc2 = value;
 8006d30:	f647 33b4 	movw	r3, #31668	; 0x7bb4
 8006d34:	f8cd 8000 	str.w	r8, [sp]
 8006d38:	50e2      	str	r2, [r4, r3]
 8006d3a:	4629      	mov	r1, r5
 8006d3c:	2332      	movs	r3, #50	; 0x32
 8006d3e:	462a      	mov	r2, r5
 8006d40:	3078      	adds	r0, #120	; 0x78
 8006d42:	f7fb feb5 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonFilterThreshold_1_Type2.setTwoWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8006d46:	4ace      	ldr	r2, [pc, #824]	; (8007080 <_ZN15Screen1ViewBaseC1Ev+0x11b8>)
 8006d48:	ee1d 0a90 	vmov	r0, s27
 8006d4c:	4611      	mov	r1, r2
 8006d4e:	f7ff f899 	bl	8005e84 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE24setTwoWildcardTextColorsENS_9colortypeES5_>
 8006d52:	f647 3304 	movw	r3, #31492	; 0x7b04
 8006d56:	48cb      	ldr	r0, [pc, #812]	; (8007084 <_ZN15Screen1ViewBaseC1Ev+0x11bc>)
 8006d58:	50e0      	str	r0, [r4, r3]
 8006d5a:	ee1e 7a10 	vmov	r7, s28
    listLayoutButtonFilter_Type2.add(flexButtonFilterThreshold_1_Type2);
 8006d5e:	ee1d 1a90 	vmov	r1, s27
 8006d62:	ee18 0a90 	vmov	r0, s17
 8006d66:	f00c fef7 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8006d6a:	f107 0034 	add.w	r0, r7, #52	; 0x34
 8006d6e:	f8cd 8000 	str.w	r8, [sp]
 8006d72:	2332      	movs	r3, #50	; 0x32
 8006d74:	462a      	mov	r2, r5
 8006d76:	4629      	mov	r1, r5
 8006d78:	f7fb fe9a 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006d7c:	f647 4324 	movw	r3, #31780	; 0x7c24
    flexButtonFilterThreshold_2_Type2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8006d80:	4fc1      	ldr	r7, [pc, #772]	; (8007088 <_ZN15Screen1ViewBaseC1Ev+0x11c0>)
 8006d82:	f824 b003 	strh.w	fp, [r4, r3]
 8006d86:	4ac1      	ldr	r2, [pc, #772]	; (800708c <_ZN15Screen1ViewBaseC1Ev+0x11c4>)
 8006d88:	4bc1      	ldr	r3, [pc, #772]	; (8007090 <_ZN15Screen1ViewBaseC1Ev+0x11c8>)
 8006d8a:	49c2      	ldr	r1, [pc, #776]	; (8007094 <_ZN15Screen1ViewBaseC1Ev+0x11cc>)
 8006d8c:	9700      	str	r7, [sp, #0]
 8006d8e:	ee1e 0a10 	vmov	r0, s28
 8006d92:	f7fb fec9 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8006d96:	4646      	mov	r6, r8
        : typedTextId(id)
 8006d98:	4bbf      	ldr	r3, [pc, #764]	; (8007098 <_ZN15Screen1ViewBaseC1Ev+0x11d0>)
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006d9a:	f8df 8308 	ldr.w	r8, [pc, #776]	; 80070a4 <_ZN15Screen1ViewBaseC1Ev+0x11dc>
        : typedTextId(id)
 8006d9e:	933a      	str	r3, [sp, #232]	; 0xe8
    flexButtonFilterThreshold_2_Type2.setTwoWildcardText(TypedText(T___SINGLEUSE_CG2S));
 8006da0:	af3a      	add	r7, sp, #232	; 0xe8
 8006da2:	f240 1339 	movw	r3, #313	; 0x139
 8006da6:	ee1e 0a10 	vmov	r0, s28
 8006daa:	4639      	mov	r1, r7
 8006dac:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8006db0:	f7ff f859 	bl	8005e66 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18setTwoWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006db4:	f8d8 3000 	ldr.w	r3, [r8]
 8006db8:	46da      	mov	sl, fp
    Unicode::snprintf(flexButtonFilterThreshold_2_Type2Buffer1, FLEXBUTTONFILTERTHRESHOLD_2_TYPE2BUFFER1_SIZE, "%s", TypedText(T___SINGLEUSE_13WD).getText());
 8006dba:	f504 4b7f 	add.w	fp, r4, #65280	; 0xff00
 8006dbe:	f10b 0b32 	add.w	fp, fp, #50	; 0x32
 8006dc2:	2b00      	cmp	r3, #0
 8006dc4:	f43f ac09 	beq.w	80065da <_ZN15Screen1ViewBaseC1Ev+0x712>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8006dc8:	4fb4      	ldr	r7, [pc, #720]	; (800709c <_ZN15Screen1ViewBaseC1Ev+0x11d4>)
 8006dca:	883b      	ldrh	r3, [r7, #0]
 8006dcc:	f5b3 7f9d 	cmp.w	r3, #314	; 0x13a
 8006dd0:	f67f ac0d 	bls.w	80065ee <_ZN15Screen1ViewBaseC1Ev+0x726>
        return texts->getText(typedTextId);
 8006dd4:	f44f 719d 	mov.w	r1, #314	; 0x13a
 8006dd8:	f8d9 0000 	ldr.w	r0, [r9]
 8006ddc:	f001 ff14 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8006de0:	4aa6      	ldr	r2, [pc, #664]	; (800707c <_ZN15Screen1ViewBaseC1Ev+0x11b4>)
 8006de2:	4603      	mov	r3, r0
 8006de4:	210a      	movs	r1, #10
 8006de6:	4658      	mov	r0, fp
 8006de8:	f014 f970 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006dec:	f647 4374 	movw	r3, #31860	; 0x7c74
 8006df0:	ee1e 0a10 	vmov	r0, s28
 8006df4:	f844 b003 	str.w	fp, [r4, r3]
    flexButtonFilterThreshold_2_Type2Buffer2[0] = 0;
 8006df8:	f64f 7346 	movw	r3, #65350	; 0xff46
 8006dfc:	18e2      	adds	r2, r4, r3
 8006dfe:	52e5      	strh	r5, [r4, r3]
        wc2 = value;
 8006e00:	f647 4378 	movw	r3, #31864	; 0x7c78
 8006e04:	4629      	mov	r1, r5
 8006e06:	50e2      	str	r2, [r4, r3]
 8006e08:	3078      	adds	r0, #120	; 0x78
 8006e0a:	2332      	movs	r3, #50	; 0x32
 8006e0c:	462a      	mov	r2, r5
 8006e0e:	9600      	str	r6, [sp, #0]
 8006e10:	f7fb fe4e 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonFilterThreshold_2_Type2.setTwoWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8006e14:	4a9a      	ldr	r2, [pc, #616]	; (8007080 <_ZN15Screen1ViewBaseC1Ev+0x11b8>)
 8006e16:	ee1e 0a10 	vmov	r0, s28
 8006e1a:	4611      	mov	r1, r2
 8006e1c:	f7ff f832 	bl	8005e84 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE24setTwoWildcardTextColorsENS_9colortypeES5_>
 8006e20:	f647 33c8 	movw	r3, #31688	; 0x7bc8
 8006e24:	4897      	ldr	r0, [pc, #604]	; (8007084 <_ZN15Screen1ViewBaseC1Ev+0x11bc>)
 8006e26:	50e0      	str	r0, [r4, r3]
    listLayoutButtonFilter_Type2.add(flexButtonFilterThreshold_2_Type2);
 8006e28:	ee1e 1a10 	vmov	r1, s28
 8006e2c:	ee18 0a90 	vmov	r0, s17
 8006e30:	f00c fe92 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8006e34:	ee1e 0a90 	vmov	r0, s29
 8006e38:	2332      	movs	r3, #50	; 0x32
 8006e3a:	462a      	mov	r2, r5
 8006e3c:	4629      	mov	r1, r5
 8006e3e:	3034      	adds	r0, #52	; 0x34
 8006e40:	9600      	str	r6, [sp, #0]
 8006e42:	f7fb fe35 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006e46:	f647 43e8 	movw	r3, #31976	; 0x7ce8
    flexButtonFilterThreshold_3_Type2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8006e4a:	488f      	ldr	r0, [pc, #572]	; (8007088 <_ZN15Screen1ViewBaseC1Ev+0x11c0>)
 8006e4c:	f824 a003 	strh.w	sl, [r4, r3]
 8006e50:	4a8e      	ldr	r2, [pc, #568]	; (800708c <_ZN15Screen1ViewBaseC1Ev+0x11c4>)
 8006e52:	4b8f      	ldr	r3, [pc, #572]	; (8007090 <_ZN15Screen1ViewBaseC1Ev+0x11c8>)
 8006e54:	498f      	ldr	r1, [pc, #572]	; (8007094 <_ZN15Screen1ViewBaseC1Ev+0x11cc>)
 8006e56:	9000      	str	r0, [sp, #0]
 8006e58:	ee1e 0a90 	vmov	r0, s29
 8006e5c:	f7fb fe64 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8006e60:	4b8d      	ldr	r3, [pc, #564]	; (8007098 <_ZN15Screen1ViewBaseC1Ev+0x11d0>)
 8006e62:	933a      	str	r3, [sp, #232]	; 0xe8
    flexButtonFilterThreshold_3_Type2.setTwoWildcardText(TypedText(T___SINGLEUSE_BL0A));
 8006e64:	f10d 0ce8 	add.w	ip, sp, #232	; 0xe8
 8006e68:	f240 133b 	movw	r3, #315	; 0x13b
 8006e6c:	ee1e 0a90 	vmov	r0, s29
 8006e70:	4661      	mov	r1, ip
 8006e72:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8006e76:	f7fe fff6 	bl	8005e66 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18setTwoWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006e7a:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(flexButtonFilterThreshold_3_Type2Buffer1, FLEXBUTTONFILTERTHRESHOLD_3_TYPE2BUFFER1_SIZE, "%s", TypedText(T___SINGLEUSE_3W8Y).getText());
 8006e7e:	f504 4b7f 	add.w	fp, r4, #65280	; 0xff00
 8006e82:	f10b 0b5a 	add.w	fp, fp, #90	; 0x5a
 8006e86:	2b00      	cmp	r3, #0
 8006e88:	f43f aba7 	beq.w	80065da <_ZN15Screen1ViewBaseC1Ev+0x712>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8006e8c:	883b      	ldrh	r3, [r7, #0]
 8006e8e:	f5b3 7f9e 	cmp.w	r3, #316	; 0x13c
 8006e92:	f67f abac 	bls.w	80065ee <_ZN15Screen1ViewBaseC1Ev+0x726>
        return texts->getText(typedTextId);
 8006e96:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8006e9a:	f8d9 0000 	ldr.w	r0, [r9]
 8006e9e:	f001 feb3 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8006ea2:	4a76      	ldr	r2, [pc, #472]	; (800707c <_ZN15Screen1ViewBaseC1Ev+0x11b4>)
 8006ea4:	4603      	mov	r3, r0
 8006ea6:	210a      	movs	r1, #10
 8006ea8:	4658      	mov	r0, fp
 8006eaa:	f014 f90f 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006eae:	f647 5338 	movw	r3, #32056	; 0x7d38
 8006eb2:	ee1e 0a90 	vmov	r0, s29
 8006eb6:	f844 b003 	str.w	fp, [r4, r3]
    flexButtonFilterThreshold_3_Type2Buffer2[0] = 0;
 8006eba:	f64f 736e 	movw	r3, #65390	; 0xff6e
 8006ebe:	18e2      	adds	r2, r4, r3
 8006ec0:	52e5      	strh	r5, [r4, r3]
        wc2 = value;
 8006ec2:	f647 533c 	movw	r3, #32060	; 0x7d3c
 8006ec6:	4629      	mov	r1, r5
 8006ec8:	50e2      	str	r2, [r4, r3]
 8006eca:	3078      	adds	r0, #120	; 0x78
 8006ecc:	2332      	movs	r3, #50	; 0x32
 8006ece:	462a      	mov	r2, r5
 8006ed0:	9600      	str	r6, [sp, #0]
 8006ed2:	f7fb fded 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonFilterThreshold_3_Type2.setTwoWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8006ed6:	4a6a      	ldr	r2, [pc, #424]	; (8007080 <_ZN15Screen1ViewBaseC1Ev+0x11b8>)
 8006ed8:	ee1e 0a90 	vmov	r0, s29
 8006edc:	4611      	mov	r1, r2
 8006ede:	f7fe ffd1 	bl	8005e84 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE24setTwoWildcardTextColorsENS_9colortypeES5_>
 8006ee2:	f647 438c 	movw	r3, #31884	; 0x7c8c
 8006ee6:	4867      	ldr	r0, [pc, #412]	; (8007084 <_ZN15Screen1ViewBaseC1Ev+0x11bc>)
 8006ee8:	50e0      	str	r0, [r4, r3]
    listLayoutButtonFilter_Type2.add(flexButtonFilterThreshold_3_Type2);
 8006eea:	ee1e 1a90 	vmov	r1, s29
 8006eee:	ee18 0a90 	vmov	r0, s17
 8006ef2:	f00c fe31 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8006ef6:	ee1f 0a10 	vmov	r0, s30
 8006efa:	2332      	movs	r3, #50	; 0x32
 8006efc:	462a      	mov	r2, r5
 8006efe:	4629      	mov	r1, r5
 8006f00:	3034      	adds	r0, #52	; 0x34
 8006f02:	9600      	str	r6, [sp, #0]
 8006f04:	f7fb fdd4 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006f08:	f647 53ac 	movw	r3, #32172	; 0x7dac
    flexButtonFilterFullScale_Type2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8006f0c:	4a5f      	ldr	r2, [pc, #380]	; (800708c <_ZN15Screen1ViewBaseC1Ev+0x11c4>)
 8006f0e:	f824 a003 	strh.w	sl, [r4, r3]
 8006f12:	4b5d      	ldr	r3, [pc, #372]	; (8007088 <_ZN15Screen1ViewBaseC1Ev+0x11c0>)
 8006f14:	9300      	str	r3, [sp, #0]
 8006f16:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 8006f1a:	495e      	ldr	r1, [pc, #376]	; (8007094 <_ZN15Screen1ViewBaseC1Ev+0x11cc>)
 8006f1c:	ee1f 0a10 	vmov	r0, s30
 8006f20:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 8006f24:	f7fb fe00 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8006f28:	4b5b      	ldr	r3, [pc, #364]	; (8007098 <_ZN15Screen1ViewBaseC1Ev+0x11d0>)
 8006f2a:	933a      	str	r3, [sp, #232]	; 0xe8
    flexButtonFilterFullScale_Type2.setTwoWildcardText(TypedText(T___SINGLEUSE_0QZJ));
 8006f2c:	f10d 0ce8 	add.w	ip, sp, #232	; 0xe8
 8006f30:	f240 1331 	movw	r3, #305	; 0x131
 8006f34:	ee1f 0a10 	vmov	r0, s30
 8006f38:	4661      	mov	r1, ip
 8006f3a:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8006f3e:	f7fe ff92 	bl	8005e66 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18setTwoWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006f42:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(flexButtonFilterFullScale_Type2Buffer1, FLEXBUTTONFILTERFULLSCALE_TYPE2BUFFER1_SIZE, "%s", TypedText(T___SINGLEUSE_VERH).getText());
 8006f46:	f504 4b7f 	add.w	fp, r4, #65280	; 0xff00
 8006f4a:	f10b 0b82 	add.w	fp, fp, #130	; 0x82
 8006f4e:	2b00      	cmp	r3, #0
 8006f50:	f43f ab43 	beq.w	80065da <_ZN15Screen1ViewBaseC1Ev+0x712>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8006f54:	883b      	ldrh	r3, [r7, #0]
 8006f56:	f5b3 7f99 	cmp.w	r3, #306	; 0x132
 8006f5a:	f67f ab48 	bls.w	80065ee <_ZN15Screen1ViewBaseC1Ev+0x726>
        return texts->getText(typedTextId);
 8006f5e:	f44f 7199 	mov.w	r1, #306	; 0x132
 8006f62:	f8d9 0000 	ldr.w	r0, [r9]
 8006f66:	f001 fe4f 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8006f6a:	4a44      	ldr	r2, [pc, #272]	; (800707c <_ZN15Screen1ViewBaseC1Ev+0x11b4>)
 8006f6c:	4603      	mov	r3, r0
 8006f6e:	210a      	movs	r1, #10
 8006f70:	4658      	mov	r0, fp
 8006f72:	f014 f8ab 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006f76:	f647 53fc 	movw	r3, #32252	; 0x7dfc
 8006f7a:	ee1f 0a10 	vmov	r0, s30
 8006f7e:	f844 b003 	str.w	fp, [r4, r3]
    flexButtonFilterFullScale_Type2Buffer2[0] = 0;
 8006f82:	f64f 7396 	movw	r3, #65430	; 0xff96
 8006f86:	18e2      	adds	r2, r4, r3
 8006f88:	52e5      	strh	r5, [r4, r3]
        wc2 = value;
 8006f8a:	f504 43fc 	add.w	r3, r4, #32256	; 0x7e00
 8006f8e:	4629      	mov	r1, r5
 8006f90:	601a      	str	r2, [r3, #0]
 8006f92:	3078      	adds	r0, #120	; 0x78
 8006f94:	2332      	movs	r3, #50	; 0x32
 8006f96:	462a      	mov	r2, r5
 8006f98:	9600      	str	r6, [sp, #0]
 8006f9a:	f7fb fd89 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonFilterFullScale_Type2.setTwoWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8006f9e:	4a38      	ldr	r2, [pc, #224]	; (8007080 <_ZN15Screen1ViewBaseC1Ev+0x11b8>)
 8006fa0:	ee1f 0a10 	vmov	r0, s30
 8006fa4:	4611      	mov	r1, r2
 8006fa6:	f7fe ff6d 	bl	8005e84 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE24setTwoWildcardTextColorsENS_9colortypeES5_>
 8006faa:	f647 5350 	movw	r3, #32080	; 0x7d50
 8006fae:	4835      	ldr	r0, [pc, #212]	; (8007084 <_ZN15Screen1ViewBaseC1Ev+0x11bc>)
 8006fb0:	50e0      	str	r0, [r4, r3]
    listLayoutButtonFilter_Type2.add(flexButtonFilterFullScale_Type2);
 8006fb2:	ee1f 1a10 	vmov	r1, s30
 8006fb6:	ee18 0a90 	vmov	r0, s17
 8006fba:	f00c fdcd 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8006fbe:	ee1f 0a90 	vmov	r0, s31
 8006fc2:	2332      	movs	r3, #50	; 0x32
 8006fc4:	462a      	mov	r2, r5
 8006fc6:	4629      	mov	r1, r5
 8006fc8:	3034      	adds	r0, #52	; 0x34
 8006fca:	9600      	str	r6, [sp, #0]
 8006fcc:	f7fb fd70 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006fd0:	f647 6370 	movw	r3, #32368	; 0x7e70
    flexButtonFilterHysteresis_Type2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8006fd4:	4a2d      	ldr	r2, [pc, #180]	; (800708c <_ZN15Screen1ViewBaseC1Ev+0x11c4>)
 8006fd6:	f824 a003 	strh.w	sl, [r4, r3]
 8006fda:	4b2b      	ldr	r3, [pc, #172]	; (8007088 <_ZN15Screen1ViewBaseC1Ev+0x11c0>)
 8006fdc:	9300      	str	r3, [sp, #0]
 8006fde:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 8006fe2:	492c      	ldr	r1, [pc, #176]	; (8007094 <_ZN15Screen1ViewBaseC1Ev+0x11cc>)
 8006fe4:	ee1f 0a90 	vmov	r0, s31
 8006fe8:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 8006fec:	f7fb fd9c 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8006ff0:	4b29      	ldr	r3, [pc, #164]	; (8007098 <_ZN15Screen1ViewBaseC1Ev+0x11d0>)
 8006ff2:	933a      	str	r3, [sp, #232]	; 0xe8
    flexButtonFilterHysteresis_Type2.setWildcardText(TypedText(T___SINGLEUSE_UMP8));
 8006ff4:	f10d 0ce8 	add.w	ip, sp, #232	; 0xe8
 8006ff8:	f240 1333 	movw	r3, #307	; 0x133
 8006ffc:	ee1f 0a90 	vmov	r0, s31
 8007000:	4661      	mov	r1, ip
 8007002:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8007006:	f7fb fdaa 	bl	8002b5e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800700a:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(flexButtonFilterHysteresis_Type2Buffer, FLEXBUTTONFILTERHYSTERESIS_TYPE2_SIZE, "%s", TypedText(T___SINGLEUSE_VN34).getText());
 800700e:	f504 4b7f 	add.w	fp, r4, #65280	; 0xff00
 8007012:	f10b 0baa 	add.w	fp, fp, #170	; 0xaa
 8007016:	2b00      	cmp	r3, #0
 8007018:	f43f aadf 	beq.w	80065da <_ZN15Screen1ViewBaseC1Ev+0x712>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800701c:	883b      	ldrh	r3, [r7, #0]
 800701e:	f5b3 7f9a 	cmp.w	r3, #308	; 0x134
 8007022:	f67f aae4 	bls.w	80065ee <_ZN15Screen1ViewBaseC1Ev+0x726>
        return texts->getText(typedTextId);
 8007026:	f44f 719a 	mov.w	r1, #308	; 0x134
 800702a:	f8d9 0000 	ldr.w	r0, [r9]
 800702e:	f001 fdeb 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8007032:	4a12      	ldr	r2, [pc, #72]	; (800707c <_ZN15Screen1ViewBaseC1Ev+0x11b4>)
 8007034:	4603      	mov	r3, r0
 8007036:	210f      	movs	r1, #15
 8007038:	4658      	mov	r0, fp
 800703a:	f014 f847 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wildcard = value;
 800703e:	f647 63c0 	movw	r3, #32448	; 0x7ec0
 8007042:	ee1f 0a90 	vmov	r0, s31
 8007046:	462a      	mov	r2, r5
 8007048:	4629      	mov	r1, r5
 800704a:	f844 b003 	str.w	fp, [r4, r3]
 800704e:	9600      	str	r6, [sp, #0]
 8007050:	2332      	movs	r3, #50	; 0x32
 8007052:	3078      	adds	r0, #120	; 0x78
 8007054:	f7fb fd2c 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonFilterHysteresis_Type2.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8007058:	4a09      	ldr	r2, [pc, #36]	; (8007080 <_ZN15Screen1ViewBaseC1Ev+0x11b8>)
 800705a:	ee1f 0a90 	vmov	r0, s31
 800705e:	4611      	mov	r1, r2
 8007060:	f7fe fefb 	bl	8005e5a <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
 8007064:	f647 6314 	movw	r3, #32276	; 0x7e14
 8007068:	4806      	ldr	r0, [pc, #24]	; (8007084 <_ZN15Screen1ViewBaseC1Ev+0x11bc>)
 800706a:	50e0      	str	r0, [r4, r3]
    listLayoutButtonFilter_Type2.add(flexButtonFilterHysteresis_Type2);
 800706c:	ee1f 1a90 	vmov	r1, s31
 8007070:	ee18 0a90 	vmov	r0, s17
 8007074:	f00c fd70 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8007078:	e016      	b.n	80070a8 <_ZN15Screen1ViewBaseC1Ev+0x11e0>
 800707a:	bf00      	nop
 800707c:	08029581 	.word	0x08029581
 8007080:	ff0a0a0a 	.word	0xff0a0a0a
 8007084:	003b0032 	.word	0x003b0032
 8007088:	ff336699 	.word	0xff336699
 800708c:	ff0099cc 	.word	0xff0099cc
 8007090:	ff003366 	.word	0xff003366
 8007094:	ff006699 	.word	0xff006699
 8007098:	0802958c 	.word	0x0802958c
 800709c:	2002bd88 	.word	0x2002bd88
 80070a0:	2002bd90 	.word	0x2002bd90
 80070a4:	2002bd84 	.word	0x2002bd84
 80070a8:	462a      	mov	r2, r5
 80070aa:	4629      	mov	r1, r5
 80070ac:	9600      	str	r6, [sp, #0]
 80070ae:	2346      	movs	r3, #70	; 0x46
 80070b0:	f504 40fe 	add.w	r0, r4, #32512	; 0x7f00
 80070b4:	f7fb fcfc 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80070b8:	f647 7330 	movw	r3, #32560	; 0x7f30
    flexButtonFilterUnit_Type2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80070bc:	48c6      	ldr	r0, [pc, #792]	; (80073d8 <_ZN15Screen1ViewBaseC1Ev+0x1510>)
 80070be:	f824 a003 	strh.w	sl, [r4, r3]
 80070c2:	4ac6      	ldr	r2, [pc, #792]	; (80073dc <_ZN15Screen1ViewBaseC1Ev+0x1514>)
 80070c4:	4bc6      	ldr	r3, [pc, #792]	; (80073e0 <_ZN15Screen1ViewBaseC1Ev+0x1518>)
 80070c6:	49c7      	ldr	r1, [pc, #796]	; (80073e4 <_ZN15Screen1ViewBaseC1Ev+0x151c>)
 80070c8:	9000      	str	r0, [sp, #0]
 80070ca:	9809      	ldr	r0, [sp, #36]	; 0x24
        : typedTextId(id)
 80070cc:	4ec6      	ldr	r6, [pc, #792]	; (80073e8 <_ZN15Screen1ViewBaseC1Ev+0x1520>)
 80070ce:	f7fb fd2b 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 80070d2:	f240 1335 	movw	r3, #309	; 0x135
 80070d6:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
    flexButtonFilterUnit_Type2.setTwoWildcardText(TypedText(T___SINGLEUSE_OKWK));
 80070da:	ab3a      	add	r3, sp, #232	; 0xe8
 80070dc:	4619      	mov	r1, r3
 80070de:	9809      	ldr	r0, [sp, #36]	; 0x24
 80070e0:	963a      	str	r6, [sp, #232]	; 0xe8
 80070e2:	f7fe fec0 	bl	8005e66 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18setTwoWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80070e6:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(flexButtonFilterUnit_Type2Buffer1, FLEXBUTTONFILTERUNIT_TYPE2BUFFER1_SIZE, "%s", TypedText(T___SINGLEUSE_VWWH).getText());
 80070ea:	f504 457f 	add.w	r5, r4, #65280	; 0xff00
 80070ee:	35c8      	adds	r5, #200	; 0xc8
 80070f0:	2b00      	cmp	r3, #0
 80070f2:	f43f aa72 	beq.w	80065da <_ZN15Screen1ViewBaseC1Ev+0x712>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80070f6:	883b      	ldrh	r3, [r7, #0]
 80070f8:	f5b3 7f9b 	cmp.w	r3, #310	; 0x136
 80070fc:	f67f aa77 	bls.w	80065ee <_ZN15Screen1ViewBaseC1Ev+0x726>
        return texts->getText(typedTextId);
 8007100:	f8d9 0000 	ldr.w	r0, [r9]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007104:	f8df 9304 	ldr.w	r9, [pc, #772]	; 800740c <_ZN15Screen1ViewBaseC1Ev+0x1544>
        return texts->getText(typedTextId);
 8007108:	f44f 719b 	mov.w	r1, #310	; 0x136
 800710c:	f001 fd7c 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8007110:	4ab6      	ldr	r2, [pc, #728]	; (80073ec <_ZN15Screen1ViewBaseC1Ev+0x1524>)
 8007112:	4603      	mov	r3, r0
 8007114:	210f      	movs	r1, #15
 8007116:	4628      	mov	r0, r5
 8007118:	f013 ffd8 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 800711c:	f504 43ff 	add.w	r3, r4, #32640	; 0x7f80
 8007120:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007122:	601d      	str	r5, [r3, #0]
    flexButtonFilterUnit_Type2Buffer2[0] = 0;
 8007124:	f64f 73e6 	movw	r3, #65510	; 0xffe6
 8007128:	2500      	movs	r5, #0
 800712a:	52e5      	strh	r5, [r4, r3]
 800712c:	18e2      	adds	r2, r4, r3
        wc2 = value;
 800712e:	f647 7384 	movw	r3, #32644	; 0x7f84
 8007132:	273b      	movs	r7, #59	; 0x3b
 8007134:	50e2      	str	r2, [r4, r3]
 8007136:	4629      	mov	r1, r5
 8007138:	2346      	movs	r3, #70	; 0x46
 800713a:	462a      	mov	r2, r5
 800713c:	3078      	adds	r0, #120	; 0x78
 800713e:	9700      	str	r7, [sp, #0]
 8007140:	f7fb fcb6 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonFilterUnit_Type2.setTwoWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8007144:	4aaa      	ldr	r2, [pc, #680]	; (80073f0 <_ZN15Screen1ViewBaseC1Ev+0x1528>)
 8007146:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007148:	4611      	mov	r1, r2
 800714a:	f7fe fe9b 	bl	8005e84 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE24setTwoWildcardTextColorsENS_9colortypeES5_>
 800714e:	f647 63d4 	movw	r3, #32468	; 0x7ed4
 8007152:	4aa8      	ldr	r2, [pc, #672]	; (80073f4 <_ZN15Screen1ViewBaseC1Ev+0x152c>)
 8007154:	50e2      	str	r2, [r4, r3]
 8007156:	f647 63fc 	movw	r3, #32508	; 0x7efc
 800715a:	9803      	ldr	r0, [sp, #12]
 800715c:	50e0      	str	r0, [r4, r3]
    listLayoutButtonFilter_Type2.add(flexButtonFilterUnit_Type2);
 800715e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8007160:	ee18 0a90 	vmov	r0, s17
 8007164:	f00c fcf8 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8007168:	9804      	ldr	r0, [sp, #16]
 800716a:	9700      	str	r7, [sp, #0]
 800716c:	2364      	movs	r3, #100	; 0x64
 800716e:	462a      	mov	r2, r5
 8007170:	4629      	mov	r1, r5
 8007172:	3034      	adds	r0, #52	; 0x34
 8007174:	f7fb fc9c 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007178:	f647 73f4 	movw	r3, #32756	; 0x7ff4
    flexButtonFilterGas_Type2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800717c:	4a97      	ldr	r2, [pc, #604]	; (80073dc <_ZN15Screen1ViewBaseC1Ev+0x1514>)
 800717e:	f824 a003 	strh.w	sl, [r4, r3]
 8007182:	4b95      	ldr	r3, [pc, #596]	; (80073d8 <_ZN15Screen1ViewBaseC1Ev+0x1510>)
 8007184:	9300      	str	r3, [sp, #0]
 8007186:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 800718a:	4996      	ldr	r1, [pc, #600]	; (80073e4 <_ZN15Screen1ViewBaseC1Ev+0x151c>)
 800718c:	9804      	ldr	r0, [sp, #16]
 800718e:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 8007192:	f7fb fcc9 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButtonFilterGas_Type2.setTwoWildcardText(TypedText(T___SINGLEUSE_BSKR));
 8007196:	a83a      	add	r0, sp, #232	; 0xe8
        : typedTextId(id)
 8007198:	f240 1337 	movw	r3, #311	; 0x137
 800719c:	4601      	mov	r1, r0
 800719e:	9804      	ldr	r0, [sp, #16]
 80071a0:	963a      	str	r6, [sp, #232]	; 0xe8
 80071a2:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 80071a6:	f7fe fe5e 	bl	8005e66 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18setTwoWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80071aa:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(flexButtonFilterGas_Type2Buffer1, FLEXBUTTONFILTERGAS_TYPE2BUFFER1_SIZE, "%s", TypedText(T___SINGLEUSE_4T0R).getText());
 80071ae:	f504 467f 	add.w	r6, r4, #65280	; 0xff00
 80071b2:	46d0      	mov	r8, sl
 80071b4:	36fa      	adds	r6, #250	; 0xfa
 80071b6:	2b00      	cmp	r3, #0
 80071b8:	f43f aa0f 	beq.w	80065da <_ZN15Screen1ViewBaseC1Ev+0x712>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80071bc:	498e      	ldr	r1, [pc, #568]	; (80073f8 <_ZN15Screen1ViewBaseC1Ev+0x1530>)
 80071be:	880b      	ldrh	r3, [r1, #0]
 80071c0:	f5b3 7f9c 	cmp.w	r3, #312	; 0x138
 80071c4:	f67f aa13 	bls.w	80065ee <_ZN15Screen1ViewBaseC1Ev+0x726>
        return texts->getText(typedTextId);
 80071c8:	4a8c      	ldr	r2, [pc, #560]	; (80073fc <_ZN15Screen1ViewBaseC1Ev+0x1534>)
 80071ca:	f44f 719c 	mov.w	r1, #312	; 0x138
 80071ce:	6810      	ldr	r0, [r2, #0]
 80071d0:	f001 fd1a 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 80071d4:	4a85      	ldr	r2, [pc, #532]	; (80073ec <_ZN15Screen1ViewBaseC1Ev+0x1524>)
 80071d6:	4603      	mov	r3, r0
 80071d8:	210f      	movs	r1, #15
 80071da:	4630      	mov	r0, r6
 80071dc:	f013 ff76 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80071e0:	f248 0344 	movw	r3, #32836	; 0x8044
 80071e4:	9804      	ldr	r0, [sp, #16]
 80071e6:	50e6      	str	r6, [r4, r3]
    flexButtonFilterGas_Type2Buffer2[0] = 0;
 80071e8:	f504 3680 	add.w	r6, r4, #65536	; 0x10000
        wc2 = value;
 80071ec:	f248 0348 	movw	r3, #32840	; 0x8048
 80071f0:	f106 0218 	add.w	r2, r6, #24
 80071f4:	8335      	strh	r5, [r6, #24]
 80071f6:	4629      	mov	r1, r5
 80071f8:	50e2      	str	r2, [r4, r3]
 80071fa:	3078      	adds	r0, #120	; 0x78
 80071fc:	2364      	movs	r3, #100	; 0x64
 80071fe:	462a      	mov	r2, r5
 8007200:	9700      	str	r7, [sp, #0]
 8007202:	f7fb fc55 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonFilterGas_Type2.setTwoWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8007206:	4a7a      	ldr	r2, [pc, #488]	; (80073f0 <_ZN15Screen1ViewBaseC1Ev+0x1528>)
 8007208:	9804      	ldr	r0, [sp, #16]
 800720a:	4611      	mov	r1, r2
 800720c:	f7fe fe3a 	bl	8005e84 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE24setTwoWildcardTextColorsENS_9colortypeES5_>
 8007210:	f647 7398 	movw	r3, #32664	; 0x7f98
 8007214:	4a7a      	ldr	r2, [pc, #488]	; (8007400 <_ZN15Screen1ViewBaseC1Ev+0x1538>)
 8007216:	50e2      	str	r2, [r4, r3]
 8007218:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 800721c:	9803      	ldr	r0, [sp, #12]
 800721e:	50e0      	str	r0, [r4, r3]
    listLayoutButtonFilter_Type2.add(flexButtonFilterGas_Type2);
 8007220:	9904      	ldr	r1, [sp, #16]
 8007222:	ee18 0a90 	vmov	r0, s17
 8007226:	f504 4a00 	add.w	sl, r4, #32768	; 0x8000
 800722a:	f00c fc95 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 800722e:	f10a 0088 	add.w	r0, sl, #136	; 0x88
 8007232:	2382      	movs	r3, #130	; 0x82
 8007234:	462a      	mov	r2, r5
 8007236:	4629      	mov	r1, r5
 8007238:	9700      	str	r7, [sp, #0]
 800723a:	f7fb fc39 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 800723e:	f248 03b8 	movw	r3, #32952	; 0x80b8
    flexButtonFilterTag_Type2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8007242:	4865      	ldr	r0, [pc, #404]	; (80073d8 <_ZN15Screen1ViewBaseC1Ev+0x1510>)
 8007244:	f824 8003 	strh.w	r8, [r4, r3]
 8007248:	4a64      	ldr	r2, [pc, #400]	; (80073dc <_ZN15Screen1ViewBaseC1Ev+0x1514>)
 800724a:	4b65      	ldr	r3, [pc, #404]	; (80073e0 <_ZN15Screen1ViewBaseC1Ev+0x1518>)
 800724c:	4965      	ldr	r1, [pc, #404]	; (80073e4 <_ZN15Screen1ViewBaseC1Ev+0x151c>)
 800724e:	9000      	str	r0, [sp, #0]
 8007250:	980e      	ldr	r0, [sp, #56]	; 0x38
 8007252:	f7fb fc69 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8007256:	4b64      	ldr	r3, [pc, #400]	; (80073e8 <_ZN15Screen1ViewBaseC1Ev+0x1520>)
 8007258:	933a      	str	r3, [sp, #232]	; 0xe8
    flexButtonFilterTag_Type2.setTwoWildcardText(TypedText(T___SINGLEUSE_WRID));
 800725a:	a83a      	add	r0, sp, #232	; 0xe8
 800725c:	f240 133d 	movw	r3, #317	; 0x13d
 8007260:	4601      	mov	r1, r0
 8007262:	980e      	ldr	r0, [sp, #56]	; 0x38
 8007264:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8007268:	f7fe fdfd 	bl	8005e66 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18setTwoWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800726c:	f8d9 3000 	ldr.w	r3, [r9]
 8007270:	f10a 0a54 	add.w	sl, sl, #84	; 0x54
    Unicode::snprintf(flexButtonFilterTag_Type2Buffer1, FLEXBUTTONFILTERTAG_TYPE2BUFFER1_SIZE, "%s", TypedText(T___SINGLEUSE_LFN3).getText());
 8007274:	f106 0b2c 	add.w	fp, r6, #44	; 0x2c
 8007278:	2b00      	cmp	r3, #0
 800727a:	f43f a9ae 	beq.w	80065da <_ZN15Screen1ViewBaseC1Ev+0x712>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800727e:	495e      	ldr	r1, [pc, #376]	; (80073f8 <_ZN15Screen1ViewBaseC1Ev+0x1530>)
 8007280:	880b      	ldrh	r3, [r1, #0]
 8007282:	f5b3 7f9f 	cmp.w	r3, #318	; 0x13e
 8007286:	f67f a9b2 	bls.w	80065ee <_ZN15Screen1ViewBaseC1Ev+0x726>
        return texts->getText(typedTextId);
 800728a:	4a5c      	ldr	r2, [pc, #368]	; (80073fc <_ZN15Screen1ViewBaseC1Ev+0x1534>)
 800728c:	f44f 719f 	mov.w	r1, #318	; 0x13e
 8007290:	6810      	ldr	r0, [r2, #0]
 8007292:	f001 fcb9 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8007296:	4a55      	ldr	r2, [pc, #340]	; (80073ec <_ZN15Screen1ViewBaseC1Ev+0x1524>)
 8007298:	4603      	mov	r3, r0
 800729a:	210f      	movs	r1, #15
 800729c:	4658      	mov	r0, fp
 800729e:	f013 ff15 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80072a2:	f248 1308 	movw	r3, #33032	; 0x8108
        wc2 = value;
 80072a6:	f248 120c 	movw	r2, #33036	; 0x810c
        wc1 = value;
 80072aa:	f844 b003 	str.w	fp, [r4, r3]
    flexButtonFilterTag_Type2Buffer2[0] = 0;
 80072ae:	f106 034a 	add.w	r3, r6, #74	; 0x4a
 80072b2:	f8a6 504a 	strh.w	r5, [r6, #74]	; 0x4a
 80072b6:	f10a 0078 	add.w	r0, sl, #120	; 0x78
        wc2 = value;
 80072ba:	50a3      	str	r3, [r4, r2]
 80072bc:	4629      	mov	r1, r5
 80072be:	2382      	movs	r3, #130	; 0x82
 80072c0:	462a      	mov	r2, r5
 80072c2:	9700      	str	r7, [sp, #0]
 80072c4:	f7fb fbf4 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonFilterTag_Type2.setTwoWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 80072c8:	4a49      	ldr	r2, [pc, #292]	; (80073f0 <_ZN15Screen1ViewBaseC1Ev+0x1528>)
 80072ca:	980e      	ldr	r0, [sp, #56]	; 0x38
 80072cc:	4611      	mov	r1, r2
 80072ce:	f7fe fdd9 	bl	8005e84 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE24setTwoWildcardTextColorsENS_9colortypeES5_>
 80072d2:	f248 035c 	movw	r3, #32860	; 0x805c
 80072d6:	4a4b      	ldr	r2, [pc, #300]	; (8007404 <_ZN15Screen1ViewBaseC1Ev+0x153c>)
 80072d8:	50e2      	str	r2, [r4, r3]
    listLayoutButtonFilter_Type2.add(flexButtonFilterTag_Type2);
 80072da:	990e      	ldr	r1, [sp, #56]	; 0x38
 80072dc:	ee18 0a90 	vmov	r0, s17
 80072e0:	f00c fc3a 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutButtonFilter.setDirection(touchgfx::EAST);
 80072e4:	ee19 0a10 	vmov	r0, s18
 80072e8:	4641      	mov	r1, r8
 80072ea:	f00c fbcb 	bl	8013a84 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>
 80072ee:	f504 4a01 	add.w	sl, r4, #33024	; 0x8100
    listLayoutButtonFilter.setXY(32, 141);
 80072f2:	ee19 0a10 	vmov	r0, s18
 80072f6:	228d      	movs	r2, #141	; 0x8d
 80072f8:	2120      	movs	r1, #32
 80072fa:	f7fb f905 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 80072fe:	f10a 007c 	add.w	r0, sl, #124	; 0x7c
 8007302:	2396      	movs	r3, #150	; 0x96
 8007304:	462a      	mov	r2, r5
 8007306:	4629      	mov	r1, r5
 8007308:	9700      	str	r7, [sp, #0]
 800730a:	f7fb fbd1 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 800730e:	f248 13ac 	movw	r3, #33196	; 0x81ac
    flexButtonFilterData.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8007312:	4831      	ldr	r0, [pc, #196]	; (80073d8 <_ZN15Screen1ViewBaseC1Ev+0x1510>)
 8007314:	f824 8003 	strh.w	r8, [r4, r3]
 8007318:	4a30      	ldr	r2, [pc, #192]	; (80073dc <_ZN15Screen1ViewBaseC1Ev+0x1514>)
 800731a:	4b31      	ldr	r3, [pc, #196]	; (80073e0 <_ZN15Screen1ViewBaseC1Ev+0x1518>)
 800731c:	4931      	ldr	r1, [pc, #196]	; (80073e4 <_ZN15Screen1ViewBaseC1Ev+0x151c>)
 800731e:	9000      	str	r0, [sp, #0]
 8007320:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8007322:	f7fb fc01 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8007326:	4b30      	ldr	r3, [pc, #192]	; (80073e8 <_ZN15Screen1ViewBaseC1Ev+0x1520>)
 8007328:	933a      	str	r3, [sp, #232]	; 0xe8
    flexButtonFilterData.setWildcardText(TypedText(T___SINGLEUSE_ZX97));
 800732a:	a83a      	add	r0, sp, #232	; 0xe8
 800732c:	2342      	movs	r3, #66	; 0x42
 800732e:	4601      	mov	r1, r0
 8007330:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8007332:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8007336:	f7fb fc12 	bl	8002b5e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800733a:	f8d9 3000 	ldr.w	r3, [r9]
 800733e:	f10a 0a48 	add.w	sl, sl, #72	; 0x48
    Unicode::snprintf(flexButtonFilterDataBuffer, FLEXBUTTONFILTERDATA_SIZE, "%s", TypedText(T___SINGLEUSE_5ZOV).getText());
 8007342:	f106 0b5e 	add.w	fp, r6, #94	; 0x5e
 8007346:	2b00      	cmp	r3, #0
 8007348:	f43f a947 	beq.w	80065da <_ZN15Screen1ViewBaseC1Ev+0x712>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800734c:	492a      	ldr	r1, [pc, #168]	; (80073f8 <_ZN15Screen1ViewBaseC1Ev+0x1530>)
 800734e:	880b      	ldrh	r3, [r1, #0]
 8007350:	2b43      	cmp	r3, #67	; 0x43
 8007352:	f67f a94c 	bls.w	80065ee <_ZN15Screen1ViewBaseC1Ev+0x726>
        return texts->getText(typedTextId);
 8007356:	4a29      	ldr	r2, [pc, #164]	; (80073fc <_ZN15Screen1ViewBaseC1Ev+0x1534>)
 8007358:	2143      	movs	r1, #67	; 0x43
 800735a:	6810      	ldr	r0, [r2, #0]
 800735c:	f001 fc54 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8007360:	4a22      	ldr	r2, [pc, #136]	; (80073ec <_ZN15Screen1ViewBaseC1Ev+0x1524>)
 8007362:	4603      	mov	r3, r0
 8007364:	210f      	movs	r1, #15
 8007366:	4658      	mov	r0, fp
 8007368:	f013 feb0 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wildcard = value;
 800736c:	f248 13fc 	movw	r3, #33276	; 0x81fc
 8007370:	f10a 0078 	add.w	r0, sl, #120	; 0x78
 8007374:	f844 b003 	str.w	fp, [r4, r3]
 8007378:	462a      	mov	r2, r5
 800737a:	2396      	movs	r3, #150	; 0x96
 800737c:	4629      	mov	r1, r5
 800737e:	9700      	str	r7, [sp, #0]
 8007380:	f7fb fb96 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonFilterData.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8007384:	4a1a      	ldr	r2, [pc, #104]	; (80073f0 <_ZN15Screen1ViewBaseC1Ev+0x1528>)
 8007386:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8007388:	4611      	mov	r1, r2
 800738a:	f7fe fd66 	bl	8005e5a <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
 800738e:	f248 1350 	movw	r3, #33104	; 0x8150
 8007392:	4a1d      	ldr	r2, [pc, #116]	; (8007408 <_ZN15Screen1ViewBaseC1Ev+0x1540>)
 8007394:	50e2      	str	r2, [r4, r3]
 8007396:	f248 1378 	movw	r3, #33144	; 0x8178
 800739a:	9803      	ldr	r0, [sp, #12]
 800739c:	50e0      	str	r0, [r4, r3]
    listLayoutButtonFilter.add(flexButtonFilterData);
 800739e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80073a0:	ee19 0a10 	vmov	r0, s18
 80073a4:	f504 4a02 	add.w	sl, r4, #33280	; 0x8200
 80073a8:	f00c fbd6 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 80073ac:	f10a 003c 	add.w	r0, sl, #60	; 0x3c
 80073b0:	2332      	movs	r3, #50	; 0x32
 80073b2:	462a      	mov	r2, r5
 80073b4:	4629      	mov	r1, r5
 80073b6:	9700      	str	r7, [sp, #0]
 80073b8:	f7fb fb7a 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80073bc:	f248 236c 	movw	r3, #33388	; 0x826c
    flexButtonFilterNum.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80073c0:	4805      	ldr	r0, [pc, #20]	; (80073d8 <_ZN15Screen1ViewBaseC1Ev+0x1510>)
 80073c2:	f824 8003 	strh.w	r8, [r4, r3]
 80073c6:	4a05      	ldr	r2, [pc, #20]	; (80073dc <_ZN15Screen1ViewBaseC1Ev+0x1514>)
 80073c8:	4b05      	ldr	r3, [pc, #20]	; (80073e0 <_ZN15Screen1ViewBaseC1Ev+0x1518>)
 80073ca:	4906      	ldr	r1, [pc, #24]	; (80073e4 <_ZN15Screen1ViewBaseC1Ev+0x151c>)
 80073cc:	9000      	str	r0, [sp, #0]
 80073ce:	9810      	ldr	r0, [sp, #64]	; 0x40
 80073d0:	f7fb fbaa 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 80073d4:	e01c      	b.n	8007410 <_ZN15Screen1ViewBaseC1Ev+0x1548>
 80073d6:	bf00      	nop
 80073d8:	ff336699 	.word	0xff336699
 80073dc:	ff0099cc 	.word	0xff0099cc
 80073e0:	ff003366 	.word	0xff003366
 80073e4:	ff006699 	.word	0xff006699
 80073e8:	0802958c 	.word	0x0802958c
 80073ec:	08029581 	.word	0x08029581
 80073f0:	ff0a0a0a 	.word	0xff0a0a0a
 80073f4:	003b0046 	.word	0x003b0046
 80073f8:	2002bd88 	.word	0x2002bd88
 80073fc:	2002bd90 	.word	0x2002bd90
 8007400:	003b0064 	.word	0x003b0064
 8007404:	003b0082 	.word	0x003b0082
 8007408:	003b0096 	.word	0x003b0096
 800740c:	2002bd84 	.word	0x2002bd84
        : typedTextId(id)
 8007410:	4bcc      	ldr	r3, [pc, #816]	; (8007744 <_ZN15Screen1ViewBaseC1Ev+0x187c>)
 8007412:	933a      	str	r3, [sp, #232]	; 0xe8
    flexButtonFilterNum.setTwoWildcardText(TypedText(T___SINGLEUSE_PRB2));
 8007414:	a83a      	add	r0, sp, #232	; 0xe8
 8007416:	234d      	movs	r3, #77	; 0x4d
 8007418:	4601      	mov	r1, r0
 800741a:	9810      	ldr	r0, [sp, #64]	; 0x40
 800741c:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8007420:	f7fe fd21 	bl	8005e66 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18setTwoWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007424:	f8d9 3000 	ldr.w	r3, [r9]
 8007428:	f10a 0a08 	add.w	sl, sl, #8
    Unicode::snprintf(flexButtonFilterNumBuffer1, FLEXBUTTONFILTERNUMBUFFER1_SIZE, "%s", TypedText(T___SINGLEUSE_459A).getText());
 800742c:	f106 0b7c 	add.w	fp, r6, #124	; 0x7c
 8007430:	2b00      	cmp	r3, #0
 8007432:	f43f a8d2 	beq.w	80065da <_ZN15Screen1ViewBaseC1Ev+0x712>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8007436:	49c4      	ldr	r1, [pc, #784]	; (8007748 <_ZN15Screen1ViewBaseC1Ev+0x1880>)
 8007438:	880b      	ldrh	r3, [r1, #0]
 800743a:	2b4e      	cmp	r3, #78	; 0x4e
 800743c:	f67f a8d7 	bls.w	80065ee <_ZN15Screen1ViewBaseC1Ev+0x726>
        return texts->getText(typedTextId);
 8007440:	4ac2      	ldr	r2, [pc, #776]	; (800774c <_ZN15Screen1ViewBaseC1Ev+0x1884>)
 8007442:	214e      	movs	r1, #78	; 0x4e
 8007444:	6810      	ldr	r0, [r2, #0]
 8007446:	f001 fbdf 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 800744a:	4ac1      	ldr	r2, [pc, #772]	; (8007750 <_ZN15Screen1ViewBaseC1Ev+0x1888>)
 800744c:	4603      	mov	r3, r0
 800744e:	210a      	movs	r1, #10
 8007450:	4658      	mov	r0, fp
 8007452:	f013 fe3b 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8007456:	f248 23bc 	movw	r3, #33468	; 0x82bc
    flexButtonFilterNumBuffer2[0] = 0;
 800745a:	f106 0290 	add.w	r2, r6, #144	; 0x90
 800745e:	f844 b003 	str.w	fp, [r4, r3]
        wc2 = value;
 8007462:	f248 23c0 	movw	r3, #33472	; 0x82c0
 8007466:	f8a6 5090 	strh.w	r5, [r6, #144]	; 0x90
 800746a:	4629      	mov	r1, r5
 800746c:	50e2      	str	r2, [r4, r3]
 800746e:	9700      	str	r7, [sp, #0]
 8007470:	2332      	movs	r3, #50	; 0x32
 8007472:	462a      	mov	r2, r5
 8007474:	f10a 0078 	add.w	r0, sl, #120	; 0x78
 8007478:	f7fb fb1a 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonFilterNum.setTwoWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 800747c:	4ab5      	ldr	r2, [pc, #724]	; (8007754 <_ZN15Screen1ViewBaseC1Ev+0x188c>)
 800747e:	9810      	ldr	r0, [sp, #64]	; 0x40
 8007480:	4611      	mov	r1, r2
 8007482:	f7fe fcff 	bl	8005e84 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE24setTwoWildcardTextColorsENS_9colortypeES5_>
 8007486:	f248 2310 	movw	r3, #33296	; 0x8210
 800748a:	4ab3      	ldr	r2, [pc, #716]	; (8007758 <_ZN15Screen1ViewBaseC1Ev+0x1890>)
 800748c:	50e2      	str	r2, [r4, r3]
 800748e:	f248 2338 	movw	r3, #33336	; 0x8238
 8007492:	9803      	ldr	r0, [sp, #12]
 8007494:	50e0      	str	r0, [r4, r3]
    listLayoutButtonFilter.add(flexButtonFilterNum);
 8007496:	9910      	ldr	r1, [sp, #64]	; 0x40
 8007498:	ee19 0a10 	vmov	r0, s18
 800749c:	f00c fb5c 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 80074a0:	9700      	str	r7, [sp, #0]
 80074a2:	2364      	movs	r3, #100	; 0x64
 80074a4:	462a      	mov	r2, r5
 80074a6:	4629      	mov	r1, r5
 80074a8:	f504 4003 	add.w	r0, r4, #33536	; 0x8300
 80074ac:	f7fb fb00 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80074b0:	f248 3330 	movw	r3, #33584	; 0x8330
    flexButtonFilterTypeChannel.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80074b4:	48a9      	ldr	r0, [pc, #676]	; (800775c <_ZN15Screen1ViewBaseC1Ev+0x1894>)
 80074b6:	f824 8003 	strh.w	r8, [r4, r3]
 80074ba:	4aa9      	ldr	r2, [pc, #676]	; (8007760 <_ZN15Screen1ViewBaseC1Ev+0x1898>)
 80074bc:	4ba9      	ldr	r3, [pc, #676]	; (8007764 <_ZN15Screen1ViewBaseC1Ev+0x189c>)
 80074be:	49aa      	ldr	r1, [pc, #680]	; (8007768 <_ZN15Screen1ViewBaseC1Ev+0x18a0>)
 80074c0:	9000      	str	r0, [sp, #0]
 80074c2:	9811      	ldr	r0, [sp, #68]	; 0x44
        : typedTextId(id)
 80074c4:	4f9f      	ldr	r7, [pc, #636]	; (8007744 <_ZN15Screen1ViewBaseC1Ev+0x187c>)
 80074c6:	f7fb fb2f 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 80074ca:	2351      	movs	r3, #81	; 0x51
 80074cc:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
    flexButtonFilterTypeChannel.setTwoWildcardText(TypedText(T___SINGLEUSE_0627));
 80074d0:	ab3a      	add	r3, sp, #232	; 0xe8
 80074d2:	4619      	mov	r1, r3
 80074d4:	9811      	ldr	r0, [sp, #68]	; 0x44
 80074d6:	973a      	str	r7, [sp, #232]	; 0xe8
 80074d8:	f7fe fcc5 	bl	8005e66 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18setTwoWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80074dc:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(flexButtonFilterTypeChannelBuffer1, FLEXBUTTONFILTERTYPECHANNELBUFFER1_SIZE, "%s", TypedText(T___SINGLEUSE_QCEL).getText());
 80074e0:	36a4      	adds	r6, #164	; 0xa4
 80074e2:	2b00      	cmp	r3, #0
 80074e4:	f43f a879 	beq.w	80065da <_ZN15Screen1ViewBaseC1Ev+0x712>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80074e8:	4997      	ldr	r1, [pc, #604]	; (8007748 <_ZN15Screen1ViewBaseC1Ev+0x1880>)
 80074ea:	880b      	ldrh	r3, [r1, #0]
 80074ec:	2b52      	cmp	r3, #82	; 0x52
 80074ee:	f67f a87e 	bls.w	80065ee <_ZN15Screen1ViewBaseC1Ev+0x726>
        return texts->getText(typedTextId);
 80074f2:	4a96      	ldr	r2, [pc, #600]	; (800774c <_ZN15Screen1ViewBaseC1Ev+0x1884>)
 80074f4:	f8df b264 	ldr.w	fp, [pc, #612]	; 800775c <_ZN15Screen1ViewBaseC1Ev+0x1894>
 80074f8:	6810      	ldr	r0, [r2, #0]
 80074fa:	2152      	movs	r1, #82	; 0x52
 80074fc:	f001 fb84 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8007500:	4a93      	ldr	r2, [pc, #588]	; (8007750 <_ZN15Screen1ViewBaseC1Ev+0x1888>)
 8007502:	4603      	mov	r3, r0
 8007504:	210f      	movs	r1, #15
 8007506:	4630      	mov	r0, r6
 8007508:	f013 fde0 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 800750c:	f248 3380 	movw	r3, #33664	; 0x8380
 8007510:	f04f 0a3b 	mov.w	sl, #59	; 0x3b
 8007514:	50e6      	str	r6, [r4, r3]
    flexButtonFilterTypeChannelBuffer2[0] = 0;
 8007516:	f504 3680 	add.w	r6, r4, #65536	; 0x10000
        wc2 = value;
 800751a:	f248 3384 	movw	r3, #33668	; 0x8384
 800751e:	f106 02c2 	add.w	r2, r6, #194	; 0xc2
 8007522:	f504 4003 	add.w	r0, r4, #33536	; 0x8300
 8007526:	f8a6 50c2 	strh.w	r5, [r6, #194]	; 0xc2
 800752a:	4629      	mov	r1, r5
 800752c:	50e2      	str	r2, [r4, r3]
 800752e:	3044      	adds	r0, #68	; 0x44
 8007530:	2364      	movs	r3, #100	; 0x64
 8007532:	462a      	mov	r2, r5
 8007534:	f8cd a000 	str.w	sl, [sp]
 8007538:	f7fb faba 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonFilterTypeChannel.setTwoWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 800753c:	4a85      	ldr	r2, [pc, #532]	; (8007754 <_ZN15Screen1ViewBaseC1Ev+0x188c>)
 800753e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8007540:	4611      	mov	r1, r2
 8007542:	f7fe fc9f 	bl	8005e84 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE24setTwoWildcardTextColorsENS_9colortypeES5_>
 8007546:	f248 23d4 	movw	r3, #33492	; 0x82d4
 800754a:	4888      	ldr	r0, [pc, #544]	; (800776c <_ZN15Screen1ViewBaseC1Ev+0x18a4>)
 800754c:	50e0      	str	r0, [r4, r3]
 800754e:	f248 23fc 	movw	r3, #33532	; 0x82fc
 8007552:	9803      	ldr	r0, [sp, #12]
 8007554:	50e0      	str	r0, [r4, r3]
    listLayoutButtonFilter.add(flexButtonFilterTypeChannel);
 8007556:	9911      	ldr	r1, [sp, #68]	; 0x44
 8007558:	ee19 0a10 	vmov	r0, s18
 800755c:	f504 4803 	add.w	r8, r4, #33536	; 0x8300
 8007560:	f00c fafa 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8007564:	f108 00c4 	add.w	r0, r8, #196	; 0xc4
 8007568:	2364      	movs	r3, #100	; 0x64
 800756a:	462a      	mov	r2, r5
 800756c:	4629      	mov	r1, r5
 800756e:	f8cd a000 	str.w	sl, [sp]
 8007572:	f7fb fa9d 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007576:	f248 33f4 	movw	r3, #33780	; 0x83f4
 800757a:	f04f 0c02 	mov.w	ip, #2
 800757e:	f824 c003 	strh.w	ip, [r4, r3]
    flexButtonFilterStLoop.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8007582:	4a77      	ldr	r2, [pc, #476]	; (8007760 <_ZN15Screen1ViewBaseC1Ev+0x1898>)
 8007584:	4b77      	ldr	r3, [pc, #476]	; (8007764 <_ZN15Screen1ViewBaseC1Ev+0x189c>)
 8007586:	4978      	ldr	r1, [pc, #480]	; (8007768 <_ZN15Screen1ViewBaseC1Ev+0x18a0>)
 8007588:	9812      	ldr	r0, [sp, #72]	; 0x48
 800758a:	f8cd b000 	str.w	fp, [sp]
 800758e:	f7fb facb 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8007592:	973a      	str	r7, [sp, #232]	; 0xe8
    flexButtonFilterStLoop.setTwoWildcardText(TypedText(T___SINGLEUSE_3ADS));
 8007594:	f10d 0ee8 	add.w	lr, sp, #232	; 0xe8
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007598:	4f75      	ldr	r7, [pc, #468]	; (8007770 <_ZN15Screen1ViewBaseC1Ev+0x18a8>)
 800759a:	9812      	ldr	r0, [sp, #72]	; 0x48
        : typedTextId(id)
 800759c:	2357      	movs	r3, #87	; 0x57
 800759e:	4671      	mov	r1, lr
 80075a0:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 80075a4:	f7fe fc5f 	bl	8005e66 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18setTwoWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80075a8:	683b      	ldr	r3, [r7, #0]
 80075aa:	f8cd b010 	str.w	fp, [sp, #16]
 80075ae:	f108 0890 	add.w	r8, r8, #144	; 0x90
    Unicode::snprintf(flexButtonFilterStLoopBuffer1, FLEXBUTTONFILTERSTLOOPBUFFER1_SIZE, "%s", TypedText(T___SINGLEUSE_FR0S).getText());
 80075b2:	f106 09d6 	add.w	r9, r6, #214	; 0xd6
 80075b6:	2b00      	cmp	r3, #0
 80075b8:	f43f a80f 	beq.w	80065da <_ZN15Screen1ViewBaseC1Ev+0x712>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80075bc:	f8df b188 	ldr.w	fp, [pc, #392]	; 8007748 <_ZN15Screen1ViewBaseC1Ev+0x1880>
 80075c0:	f8bb 3000 	ldrh.w	r3, [fp]
 80075c4:	2b58      	cmp	r3, #88	; 0x58
 80075c6:	f67f a812 	bls.w	80065ee <_ZN15Screen1ViewBaseC1Ev+0x726>
        return texts->getText(typedTextId);
 80075ca:	4a60      	ldr	r2, [pc, #384]	; (800774c <_ZN15Screen1ViewBaseC1Ev+0x1884>)
 80075cc:	2158      	movs	r1, #88	; 0x58
 80075ce:	6810      	ldr	r0, [r2, #0]
 80075d0:	f001 fb1a 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 80075d4:	4a5e      	ldr	r2, [pc, #376]	; (8007750 <_ZN15Screen1ViewBaseC1Ev+0x1888>)
 80075d6:	4603      	mov	r3, r0
 80075d8:	210f      	movs	r1, #15
 80075da:	4648      	mov	r0, r9
 80075dc:	f013 fd76 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80075e0:	f248 4344 	movw	r3, #33860	; 0x8444
        wc2 = value;
 80075e4:	f248 4248 	movw	r2, #33864	; 0x8448
        wc1 = value;
 80075e8:	f844 9003 	str.w	r9, [r4, r3]
    flexButtonFilterStLoopBuffer2[0] = 0;
 80075ec:	f106 03f4 	add.w	r3, r6, #244	; 0xf4
 80075f0:	f8a6 50f4 	strh.w	r5, [r6, #244]	; 0xf4
 80075f4:	f108 0078 	add.w	r0, r8, #120	; 0x78
        wc2 = value;
 80075f8:	50a3      	str	r3, [r4, r2]
 80075fa:	4629      	mov	r1, r5
 80075fc:	2364      	movs	r3, #100	; 0x64
 80075fe:	462a      	mov	r2, r5
 8007600:	f8cd a000 	str.w	sl, [sp]
 8007604:	f7fb fa54 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonFilterStLoop.setTwoWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8007608:	4a52      	ldr	r2, [pc, #328]	; (8007754 <_ZN15Screen1ViewBaseC1Ev+0x188c>)
 800760a:	9812      	ldr	r0, [sp, #72]	; 0x48
 800760c:	4611      	mov	r1, r2
 800760e:	f7fe fc39 	bl	8005e84 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE24setTwoWildcardTextColorsENS_9colortypeES5_>
 8007612:	f248 3398 	movw	r3, #33688	; 0x8398
 8007616:	4855      	ldr	r0, [pc, #340]	; (800776c <_ZN15Screen1ViewBaseC1Ev+0x18a4>)
 8007618:	50e0      	str	r0, [r4, r3]
 800761a:	f248 33c0 	movw	r3, #33728	; 0x83c0
 800761e:	9803      	ldr	r0, [sp, #12]
 8007620:	50e0      	str	r0, [r4, r3]
    listLayoutButtonFilter.add(flexButtonFilterStLoop);
 8007622:	9912      	ldr	r1, [sp, #72]	; 0x48
 8007624:	ee19 0a10 	vmov	r0, s18
 8007628:	f504 4804 	add.w	r8, r4, #33792	; 0x8400
 800762c:	f00c fa94 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8007630:	f108 0088 	add.w	r0, r8, #136	; 0x88
 8007634:	2332      	movs	r3, #50	; 0x32
 8007636:	462a      	mov	r2, r5
 8007638:	4629      	mov	r1, r5
 800763a:	f8cd a000 	str.w	sl, [sp]
 800763e:	f7fb fa37 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007642:	f248 43b8 	movw	r3, #33976	; 0x84b8
    flexButtonFilterConc.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8007646:	9804      	ldr	r0, [sp, #16]
 8007648:	4a45      	ldr	r2, [pc, #276]	; (8007760 <_ZN15Screen1ViewBaseC1Ev+0x1898>)
 800764a:	4947      	ldr	r1, [pc, #284]	; (8007768 <_ZN15Screen1ViewBaseC1Ev+0x18a0>)
 800764c:	9000      	str	r0, [sp, #0]
 800764e:	f04f 0c02 	mov.w	ip, #2
 8007652:	f824 c003 	strh.w	ip, [r4, r3]
 8007656:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8007658:	4b42      	ldr	r3, [pc, #264]	; (8007764 <_ZN15Screen1ViewBaseC1Ev+0x189c>)
 800765a:	f7fb fa65 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 800765e:	4b39      	ldr	r3, [pc, #228]	; (8007744 <_ZN15Screen1ViewBaseC1Ev+0x187c>)
 8007660:	933a      	str	r3, [sp, #232]	; 0xe8
    flexButtonFilterConc.setWildcardText(TypedText(T___SINGLEUSE_0XAZ));
 8007662:	a83a      	add	r0, sp, #232	; 0xe8
 8007664:	2359      	movs	r3, #89	; 0x59
 8007666:	4601      	mov	r1, r0
 8007668:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800766a:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 800766e:	f7fb fa76 	bl	8002b5e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007672:	683b      	ldr	r3, [r7, #0]
 8007674:	f108 0854 	add.w	r8, r8, #84	; 0x54
    Unicode::snprintf(flexButtonFilterConcBuffer, FLEXBUTTONFILTERCONC_SIZE, "%s", TypedText(T___SINGLEUSE_FH4T).getText());
 8007678:	f506 7984 	add.w	r9, r6, #264	; 0x108
 800767c:	2b00      	cmp	r3, #0
 800767e:	f43e afac 	beq.w	80065da <_ZN15Screen1ViewBaseC1Ev+0x712>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8007682:	f8bb 3000 	ldrh.w	r3, [fp]
 8007686:	2b5a      	cmp	r3, #90	; 0x5a
 8007688:	f67e afb1 	bls.w	80065ee <_ZN15Screen1ViewBaseC1Ev+0x726>
        return texts->getText(typedTextId);
 800768c:	4a2f      	ldr	r2, [pc, #188]	; (800774c <_ZN15Screen1ViewBaseC1Ev+0x1884>)
 800768e:	215a      	movs	r1, #90	; 0x5a
 8007690:	6810      	ldr	r0, [r2, #0]
 8007692:	f001 fab9 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8007696:	4a2e      	ldr	r2, [pc, #184]	; (8007750 <_ZN15Screen1ViewBaseC1Ev+0x1888>)
 8007698:	4603      	mov	r3, r0
 800769a:	210f      	movs	r1, #15
 800769c:	4648      	mov	r0, r9
 800769e:	f013 fd15 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wildcard = value;
 80076a2:	f248 5308 	movw	r3, #34056	; 0x8508
 80076a6:	f108 0078 	add.w	r0, r8, #120	; 0x78
 80076aa:	f844 9003 	str.w	r9, [r4, r3]
 80076ae:	462a      	mov	r2, r5
 80076b0:	2332      	movs	r3, #50	; 0x32
 80076b2:	4629      	mov	r1, r5
 80076b4:	f8cd a000 	str.w	sl, [sp]
 80076b8:	f7fb f9fa 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonFilterConc.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 80076bc:	4a25      	ldr	r2, [pc, #148]	; (8007754 <_ZN15Screen1ViewBaseC1Ev+0x188c>)
 80076be:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80076c0:	4611      	mov	r1, r2
 80076c2:	f7fe fbca 	bl	8005e5a <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
 80076c6:	f248 435c 	movw	r3, #33884	; 0x845c
 80076ca:	4a23      	ldr	r2, [pc, #140]	; (8007758 <_ZN15Screen1ViewBaseC1Ev+0x1890>)
 80076cc:	50e2      	str	r2, [r4, r3]
    listLayoutButtonFilter.add(flexButtonFilterConc);
 80076ce:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80076d0:	ee19 0a10 	vmov	r0, s18
 80076d4:	f504 4805 	add.w	r8, r4, #34048	; 0x8500
 80076d8:	f00c fa3e 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 80076dc:	f108 0048 	add.w	r0, r8, #72	; 0x48
 80076e0:	2346      	movs	r3, #70	; 0x46
 80076e2:	462a      	mov	r2, r5
 80076e4:	4629      	mov	r1, r5
 80076e6:	f8cd a000 	str.w	sl, [sp]
 80076ea:	f7fb f9e1 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80076ee:	f248 5378 	movw	r3, #34168	; 0x8578
    flexButtonFilterUnit.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80076f2:	9804      	ldr	r0, [sp, #16]
 80076f4:	4a1a      	ldr	r2, [pc, #104]	; (8007760 <_ZN15Screen1ViewBaseC1Ev+0x1898>)
 80076f6:	491c      	ldr	r1, [pc, #112]	; (8007768 <_ZN15Screen1ViewBaseC1Ev+0x18a0>)
 80076f8:	9000      	str	r0, [sp, #0]
 80076fa:	f04f 0c02 	mov.w	ip, #2
 80076fe:	f824 c003 	strh.w	ip, [r4, r3]
 8007702:	9814      	ldr	r0, [sp, #80]	; 0x50
 8007704:	4b17      	ldr	r3, [pc, #92]	; (8007764 <_ZN15Screen1ViewBaseC1Ev+0x189c>)
 8007706:	f7fb fa0f 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 800770a:	4b0e      	ldr	r3, [pc, #56]	; (8007744 <_ZN15Screen1ViewBaseC1Ev+0x187c>)
 800770c:	933a      	str	r3, [sp, #232]	; 0xe8
    flexButtonFilterUnit.setTwoWildcardText(TypedText(T___SINGLEUSE_7RS5));
 800770e:	a83a      	add	r0, sp, #232	; 0xe8
 8007710:	235b      	movs	r3, #91	; 0x5b
 8007712:	4601      	mov	r1, r0
 8007714:	9814      	ldr	r0, [sp, #80]	; 0x50
 8007716:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 800771a:	f7fe fba4 	bl	8005e66 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18setTwoWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800771e:	683b      	ldr	r3, [r7, #0]
 8007720:	f108 0814 	add.w	r8, r8, #20
    Unicode::snprintf(flexButtonFilterUnitBuffer1, FLEXBUTTONFILTERUNITBUFFER1_SIZE, "%s", TypedText(T___SINGLEUSE_3018).getText());
 8007724:	f506 7993 	add.w	r9, r6, #294	; 0x126
 8007728:	2b00      	cmp	r3, #0
 800772a:	f43e af56 	beq.w	80065da <_ZN15Screen1ViewBaseC1Ev+0x712>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800772e:	f8bb 3000 	ldrh.w	r3, [fp]
 8007732:	2b5c      	cmp	r3, #92	; 0x5c
 8007734:	f67e af5b 	bls.w	80065ee <_ZN15Screen1ViewBaseC1Ev+0x726>
        return texts->getText(typedTextId);
 8007738:	4a04      	ldr	r2, [pc, #16]	; (800774c <_ZN15Screen1ViewBaseC1Ev+0x1884>)
 800773a:	215c      	movs	r1, #92	; 0x5c
 800773c:	6810      	ldr	r0, [r2, #0]
 800773e:	f001 fa63 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8007742:	e017      	b.n	8007774 <_ZN15Screen1ViewBaseC1Ev+0x18ac>
 8007744:	0802958c 	.word	0x0802958c
 8007748:	2002bd88 	.word	0x2002bd88
 800774c:	2002bd90 	.word	0x2002bd90
 8007750:	08029581 	.word	0x08029581
 8007754:	ff0a0a0a 	.word	0xff0a0a0a
 8007758:	003b0032 	.word	0x003b0032
 800775c:	ff336699 	.word	0xff336699
 8007760:	ff0099cc 	.word	0xff0099cc
 8007764:	ff003366 	.word	0xff003366
 8007768:	ff006699 	.word	0xff006699
 800776c:	003b0064 	.word	0x003b0064
 8007770:	2002bd84 	.word	0x2002bd84
 8007774:	4acf      	ldr	r2, [pc, #828]	; (8007ab4 <_ZN15Screen1ViewBaseC1Ev+0x1bec>)
 8007776:	4603      	mov	r3, r0
 8007778:	210f      	movs	r1, #15
 800777a:	4648      	mov	r0, r9
 800777c:	f013 fca6 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8007780:	f248 53c8 	movw	r3, #34248	; 0x85c8
        wc2 = value;
 8007784:	f248 52cc 	movw	r2, #34252	; 0x85cc
        wc1 = value;
 8007788:	f844 9003 	str.w	r9, [r4, r3]
    flexButtonFilterUnitBuffer2[0] = 0;
 800778c:	f506 73a2 	add.w	r3, r6, #324	; 0x144
 8007790:	f8a6 5144 	strh.w	r5, [r6, #324]	; 0x144
 8007794:	f108 0078 	add.w	r0, r8, #120	; 0x78
        wc2 = value;
 8007798:	50a3      	str	r3, [r4, r2]
 800779a:	4629      	mov	r1, r5
 800779c:	2346      	movs	r3, #70	; 0x46
 800779e:	462a      	mov	r2, r5
 80077a0:	f8cd a000 	str.w	sl, [sp]
 80077a4:	f7fb f984 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonFilterUnit.setTwoWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 80077a8:	4ac3      	ldr	r2, [pc, #780]	; (8007ab8 <_ZN15Screen1ViewBaseC1Ev+0x1bf0>)
 80077aa:	9814      	ldr	r0, [sp, #80]	; 0x50
 80077ac:	4611      	mov	r1, r2
 80077ae:	f7fe fb69 	bl	8005e84 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE24setTwoWildcardTextColorsENS_9colortypeES5_>
 80077b2:	f248 531c 	movw	r3, #34076	; 0x851c
 80077b6:	4ac1      	ldr	r2, [pc, #772]	; (8007abc <_ZN15Screen1ViewBaseC1Ev+0x1bf4>)
 80077b8:	50e2      	str	r2, [r4, r3]
 80077ba:	f248 5344 	movw	r3, #34116	; 0x8544
 80077be:	9803      	ldr	r0, [sp, #12]
 80077c0:	50e0      	str	r0, [r4, r3]
    listLayoutButtonFilter.add(flexButtonFilterUnit);
 80077c2:	9914      	ldr	r1, [sp, #80]	; 0x50
 80077c4:	ee19 0a10 	vmov	r0, s18
 80077c8:	f504 4805 	add.w	r8, r4, #34048	; 0x8500
 80077cc:	f00c f9c4 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 80077d0:	f508 7086 	add.w	r0, r8, #268	; 0x10c
 80077d4:	2350      	movs	r3, #80	; 0x50
 80077d6:	462a      	mov	r2, r5
 80077d8:	4629      	mov	r1, r5
 80077da:	f8cd a000 	str.w	sl, [sp]
 80077de:	f7fb f967 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80077e2:	f248 633c 	movw	r3, #34364	; 0x863c
    flexButtonFilterThreshold.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80077e6:	9804      	ldr	r0, [sp, #16]
 80077e8:	4ab5      	ldr	r2, [pc, #724]	; (8007ac0 <_ZN15Screen1ViewBaseC1Ev+0x1bf8>)
 80077ea:	49b6      	ldr	r1, [pc, #728]	; (8007ac4 <_ZN15Screen1ViewBaseC1Ev+0x1bfc>)
 80077ec:	9000      	str	r0, [sp, #0]
 80077ee:	f04f 0c02 	mov.w	ip, #2
 80077f2:	f824 c003 	strh.w	ip, [r4, r3]
 80077f6:	9815      	ldr	r0, [sp, #84]	; 0x54
 80077f8:	4bb3      	ldr	r3, [pc, #716]	; (8007ac8 <_ZN15Screen1ViewBaseC1Ev+0x1c00>)
 80077fa:	f7fb f995 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 80077fe:	4bb3      	ldr	r3, [pc, #716]	; (8007acc <_ZN15Screen1ViewBaseC1Ev+0x1c04>)
 8007800:	933a      	str	r3, [sp, #232]	; 0xe8
    flexButtonFilterThreshold.setTwoWildcardText(TypedText(T___SINGLEUSE_D5AS));
 8007802:	a83a      	add	r0, sp, #232	; 0xe8
 8007804:	235d      	movs	r3, #93	; 0x5d
 8007806:	4601      	mov	r1, r0
 8007808:	9815      	ldr	r0, [sp, #84]	; 0x54
 800780a:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 800780e:	f7fe fb2a 	bl	8005e66 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18setTwoWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007812:	683b      	ldr	r3, [r7, #0]
 8007814:	f108 08d8 	add.w	r8, r8, #216	; 0xd8
    Unicode::snprintf(flexButtonFilterThresholdBuffer1, FLEXBUTTONFILTERTHRESHOLDBUFFER1_SIZE, "%s", TypedText(T___SINGLEUSE_VTHY).getText());
 8007818:	f506 79ac 	add.w	r9, r6, #344	; 0x158
 800781c:	2b00      	cmp	r3, #0
 800781e:	f43e aedc 	beq.w	80065da <_ZN15Screen1ViewBaseC1Ev+0x712>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8007822:	f8bb 3000 	ldrh.w	r3, [fp]
 8007826:	2b5e      	cmp	r3, #94	; 0x5e
 8007828:	f67e aee1 	bls.w	80065ee <_ZN15Screen1ViewBaseC1Ev+0x726>
        return texts->getText(typedTextId);
 800782c:	4aa8      	ldr	r2, [pc, #672]	; (8007ad0 <_ZN15Screen1ViewBaseC1Ev+0x1c08>)
 800782e:	215e      	movs	r1, #94	; 0x5e
 8007830:	6810      	ldr	r0, [r2, #0]
 8007832:	f001 f9e9 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8007836:	4a9f      	ldr	r2, [pc, #636]	; (8007ab4 <_ZN15Screen1ViewBaseC1Ev+0x1bec>)
 8007838:	4603      	mov	r3, r0
 800783a:	210f      	movs	r1, #15
 800783c:	4648      	mov	r0, r9
 800783e:	f013 fc45 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8007842:	f248 638c 	movw	r3, #34444	; 0x868c
    flexButtonFilterThresholdBuffer2[0] = 0;
 8007846:	f506 72bb 	add.w	r2, r6, #374	; 0x176
 800784a:	f844 9003 	str.w	r9, [r4, r3]
        wc2 = value;
 800784e:	f248 6390 	movw	r3, #34448	; 0x8690
 8007852:	f8a6 5176 	strh.w	r5, [r6, #374]	; 0x176
 8007856:	f108 0078 	add.w	r0, r8, #120	; 0x78
 800785a:	50e2      	str	r2, [r4, r3]
 800785c:	4629      	mov	r1, r5
 800785e:	2350      	movs	r3, #80	; 0x50
 8007860:	462a      	mov	r2, r5
 8007862:	f8cd a000 	str.w	sl, [sp]
 8007866:	f7fb f923 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonFilterThreshold.setTwoWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 800786a:	4a93      	ldr	r2, [pc, #588]	; (8007ab8 <_ZN15Screen1ViewBaseC1Ev+0x1bf0>)
 800786c:	9815      	ldr	r0, [sp, #84]	; 0x54
 800786e:	4611      	mov	r1, r2
 8007870:	f7fe fb08 	bl	8005e84 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE24setTwoWildcardTextColorsENS_9colortypeES5_>
 8007874:	f248 53e0 	movw	r3, #34272	; 0x85e0
 8007878:	4a96      	ldr	r2, [pc, #600]	; (8007ad4 <_ZN15Screen1ViewBaseC1Ev+0x1c0c>)
 800787a:	50e2      	str	r2, [r4, r3]
 800787c:	f248 6308 	movw	r3, #34312	; 0x8608
 8007880:	9803      	ldr	r0, [sp, #12]
 8007882:	50e0      	str	r0, [r4, r3]
    listLayoutButtonFilter.add(flexButtonFilterThreshold);
 8007884:	9915      	ldr	r1, [sp, #84]	; 0x54
 8007886:	ee19 0a10 	vmov	r0, s18
 800788a:	f504 4806 	add.w	r8, r4, #34304	; 0x8600
 800788e:	f00c f963 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8007892:	f108 00d0 	add.w	r0, r8, #208	; 0xd0
 8007896:	2332      	movs	r3, #50	; 0x32
 8007898:	462a      	mov	r2, r5
 800789a:	4629      	mov	r1, r5
 800789c:	f8cd a000 	str.w	sl, [sp]
 80078a0:	f7fb f906 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80078a4:	f504 4307 	add.w	r3, r4, #34560	; 0x8700
    flexButtonFilterErr.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80078a8:	9804      	ldr	r0, [sp, #16]
 80078aa:	4a85      	ldr	r2, [pc, #532]	; (8007ac0 <_ZN15Screen1ViewBaseC1Ev+0x1bf8>)
 80078ac:	4985      	ldr	r1, [pc, #532]	; (8007ac4 <_ZN15Screen1ViewBaseC1Ev+0x1bfc>)
 80078ae:	f04f 0c02 	mov.w	ip, #2
 80078b2:	f8a3 c000 	strh.w	ip, [r3]
 80078b6:	4b84      	ldr	r3, [pc, #528]	; (8007ac8 <_ZN15Screen1ViewBaseC1Ev+0x1c00>)
 80078b8:	9000      	str	r0, [sp, #0]
 80078ba:	9816      	ldr	r0, [sp, #88]	; 0x58
 80078bc:	f7fb f934 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 80078c0:	4b82      	ldr	r3, [pc, #520]	; (8007acc <_ZN15Screen1ViewBaseC1Ev+0x1c04>)
 80078c2:	933a      	str	r3, [sp, #232]	; 0xe8
    flexButtonFilterErr.setTwoWildcardText(TypedText(T___SINGLEUSE_4O78));
 80078c4:	a83a      	add	r0, sp, #232	; 0xe8
 80078c6:	235f      	movs	r3, #95	; 0x5f
 80078c8:	4601      	mov	r1, r0
 80078ca:	9816      	ldr	r0, [sp, #88]	; 0x58
 80078cc:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 80078d0:	f7fe fac9 	bl	8005e66 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18setTwoWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80078d4:	683b      	ldr	r3, [r7, #0]
 80078d6:	f108 089c 	add.w	r8, r8, #156	; 0x9c
    Unicode::snprintf(flexButtonFilterErrBuffer1, FLEXBUTTONFILTERERRBUFFER1_SIZE, "%s", TypedText(T___SINGLEUSE_XN5A).getText());
 80078da:	f506 76c5 	add.w	r6, r6, #394	; 0x18a
 80078de:	2b00      	cmp	r3, #0
 80078e0:	f43e ae7b 	beq.w	80065da <_ZN15Screen1ViewBaseC1Ev+0x712>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80078e4:	f8bb 3000 	ldrh.w	r3, [fp]
 80078e8:	2b60      	cmp	r3, #96	; 0x60
 80078ea:	f67e ae80 	bls.w	80065ee <_ZN15Screen1ViewBaseC1Ev+0x726>
        return texts->getText(typedTextId);
 80078ee:	4a78      	ldr	r2, [pc, #480]	; (8007ad0 <_ZN15Screen1ViewBaseC1Ev+0x1c08>)
 80078f0:	2160      	movs	r1, #96	; 0x60
 80078f2:	6810      	ldr	r0, [r2, #0]
 80078f4:	f001 f988 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 80078f8:	4a6e      	ldr	r2, [pc, #440]	; (8007ab4 <_ZN15Screen1ViewBaseC1Ev+0x1bec>)
 80078fa:	4603      	mov	r3, r0
 80078fc:	210f      	movs	r1, #15
 80078fe:	4630      	mov	r0, r6
 8007900:	f013 fbe4 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8007904:	f248 7350 	movw	r3, #34640	; 0x8750
    flexButtonFilterErrBuffer2[0] = 0;
 8007908:	f504 3780 	add.w	r7, r4, #65536	; 0x10000
 800790c:	50e6      	str	r6, [r4, r3]
        wc2 = value;
 800790e:	f248 7354 	movw	r3, #34644	; 0x8754
 8007912:	4e69      	ldr	r6, [pc, #420]	; (8007ab8 <_ZN15Screen1ViewBaseC1Ev+0x1bf0>)
 8007914:	f8a7 51a8 	strh.w	r5, [r7, #424]	; 0x1a8
 8007918:	f507 72d4 	add.w	r2, r7, #424	; 0x1a8
 800791c:	50e2      	str	r2, [r4, r3]
 800791e:	f108 0078 	add.w	r0, r8, #120	; 0x78
 8007922:	2332      	movs	r3, #50	; 0x32
 8007924:	462a      	mov	r2, r5
 8007926:	4629      	mov	r1, r5
 8007928:	f8cd a000 	str.w	sl, [sp]
 800792c:	f7fb f8c0 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonFilterErr.setTwoWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8007930:	9816      	ldr	r0, [sp, #88]	; 0x58
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007932:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8007ae4 <_ZN15Screen1ViewBaseC1Ev+0x1c1c>
 8007936:	4632      	mov	r2, r6
 8007938:	4631      	mov	r1, r6
 800793a:	f7fe faa3 	bl	8005e84 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE24setTwoWildcardTextColorsENS_9colortypeES5_>
 800793e:	f248 63a4 	movw	r3, #34468	; 0x86a4
 8007942:	4a65      	ldr	r2, [pc, #404]	; (8007ad8 <_ZN15Screen1ViewBaseC1Ev+0x1c10>)
 8007944:	50e2      	str	r2, [r4, r3]
 8007946:	f248 63cc 	movw	r3, #34508	; 0x86cc
 800794a:	9803      	ldr	r0, [sp, #12]
 800794c:	50e0      	str	r0, [r4, r3]
    listLayoutButtonFilter.add(flexButtonFilterErr);
 800794e:	9916      	ldr	r1, [sp, #88]	; 0x58
 8007950:	ee19 0a10 	vmov	r0, s18
 8007954:	f504 4907 	add.w	r9, r4, #34560	; 0x8700
 8007958:	f00c f8fe 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 800795c:	f109 0094 	add.w	r0, r9, #148	; 0x94
 8007960:	2364      	movs	r3, #100	; 0x64
 8007962:	462a      	mov	r2, r5
 8007964:	4629      	mov	r1, r5
 8007966:	f8cd a000 	str.w	sl, [sp]
 800796a:	f7fb f8a1 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 800796e:	f248 73c4 	movw	r3, #34756	; 0x87c4
    flexButtonFilterGas.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8007972:	9804      	ldr	r0, [sp, #16]
 8007974:	4953      	ldr	r1, [pc, #332]	; (8007ac4 <_ZN15Screen1ViewBaseC1Ev+0x1bfc>)
 8007976:	9000      	str	r0, [sp, #0]
 8007978:	2202      	movs	r2, #2
 800797a:	52e2      	strh	r2, [r4, r3]
 800797c:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800797e:	4b52      	ldr	r3, [pc, #328]	; (8007ac8 <_ZN15Screen1ViewBaseC1Ev+0x1c00>)
 8007980:	4a4f      	ldr	r2, [pc, #316]	; (8007ac0 <_ZN15Screen1ViewBaseC1Ev+0x1bf8>)
 8007982:	f7fb f8d1 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8007986:	4b51      	ldr	r3, [pc, #324]	; (8007acc <_ZN15Screen1ViewBaseC1Ev+0x1c04>)
 8007988:	933a      	str	r3, [sp, #232]	; 0xe8
    flexButtonFilterGas.setTwoWildcardText(TypedText(T___SINGLEUSE_84Z8));
 800798a:	a83a      	add	r0, sp, #232	; 0xe8
 800798c:	2361      	movs	r3, #97	; 0x61
 800798e:	4601      	mov	r1, r0
 8007990:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8007992:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8007996:	f7fe fa66 	bl	8005e66 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18setTwoWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800799a:	f8d8 3000 	ldr.w	r3, [r8]
 800799e:	f109 0960 	add.w	r9, r9, #96	; 0x60
    Unicode::snprintf(flexButtonFilterGasBuffer1, FLEXBUTTONFILTERGASBUFFER1_SIZE, "%s", TypedText(T___SINGLEUSE_NNWG).getText());
 80079a2:	f507 7bde 	add.w	fp, r7, #444	; 0x1bc
 80079a6:	2b00      	cmp	r3, #0
 80079a8:	f43e ae17 	beq.w	80065da <_ZN15Screen1ViewBaseC1Ev+0x712>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80079ac:	494b      	ldr	r1, [pc, #300]	; (8007adc <_ZN15Screen1ViewBaseC1Ev+0x1c14>)
 80079ae:	880b      	ldrh	r3, [r1, #0]
 80079b0:	2b62      	cmp	r3, #98	; 0x62
 80079b2:	f67e ae1c 	bls.w	80065ee <_ZN15Screen1ViewBaseC1Ev+0x726>
        return texts->getText(typedTextId);
 80079b6:	4a46      	ldr	r2, [pc, #280]	; (8007ad0 <_ZN15Screen1ViewBaseC1Ev+0x1c08>)
 80079b8:	2162      	movs	r1, #98	; 0x62
 80079ba:	6810      	ldr	r0, [r2, #0]
 80079bc:	f001 f924 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 80079c0:	4a3c      	ldr	r2, [pc, #240]	; (8007ab4 <_ZN15Screen1ViewBaseC1Ev+0x1bec>)
 80079c2:	4603      	mov	r3, r0
 80079c4:	210f      	movs	r1, #15
 80079c6:	4658      	mov	r0, fp
 80079c8:	f013 fb80 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80079cc:	f648 0314 	movw	r3, #34836	; 0x8814
    flexButtonFilterGasBuffer2[0] = 0;
 80079d0:	f507 72ed 	add.w	r2, r7, #474	; 0x1da
 80079d4:	f844 b003 	str.w	fp, [r4, r3]
        wc2 = value;
 80079d8:	f648 0318 	movw	r3, #34840	; 0x8818
 80079dc:	f8a7 51da 	strh.w	r5, [r7, #474]	; 0x1da
 80079e0:	f109 0078 	add.w	r0, r9, #120	; 0x78
 80079e4:	50e2      	str	r2, [r4, r3]
 80079e6:	4629      	mov	r1, r5
 80079e8:	2364      	movs	r3, #100	; 0x64
 80079ea:	462a      	mov	r2, r5
 80079ec:	f8cd a000 	str.w	sl, [sp]
 80079f0:	f7fb f85e 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonFilterGas.setTwoWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 80079f4:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80079f6:	4632      	mov	r2, r6
 80079f8:	4631      	mov	r1, r6
 80079fa:	f7fe fa43 	bl	8005e84 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE24setTwoWildcardTextColorsENS_9colortypeES5_>
 80079fe:	f248 7368 	movw	r3, #34664	; 0x8768
 8007a02:	4a37      	ldr	r2, [pc, #220]	; (8007ae0 <_ZN15Screen1ViewBaseC1Ev+0x1c18>)
 8007a04:	50e2      	str	r2, [r4, r3]
 8007a06:	f248 7390 	movw	r3, #34704	; 0x8790
 8007a0a:	9803      	ldr	r0, [sp, #12]
 8007a0c:	50e0      	str	r0, [r4, r3]
    listLayoutButtonFilter.add(flexButtonFilterGas);
 8007a0e:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8007a10:	ee19 0a10 	vmov	r0, s18
 8007a14:	f00c f8a0 	bl	8013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    ListFilterLog_Gas.setXY(1199, 4);
 8007a18:	981c      	ldr	r0, [sp, #112]	; 0x70
 8007a1a:	2204      	movs	r2, #4
 8007a1c:	f240 41af 	movw	r1, #1199	; 0x4af
 8007a20:	f7fa fd72 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
    ListFilterLog_Err.setXY(1001, 384);
 8007a24:	981d      	ldr	r0, [sp, #116]	; 0x74
 8007a26:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8007a2a:	f240 31e9 	movw	r1, #1001	; 0x3e9
 8007a2e:	f7fa fd6b 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
    ListFilterLog_StCur.setXY(1001, 195);
 8007a32:	981e      	ldr	r0, [sp, #120]	; 0x78
 8007a34:	22c3      	movs	r2, #195	; 0xc3
 8007a36:	f240 31e9 	movw	r1, #1001	; 0x3e9
 8007a3a:	f7fa fd65 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
    ListFilterLog_Unit.setXY(1001, 4);
 8007a3e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8007a40:	2204      	movs	r2, #4
 8007a42:	f240 31e9 	movw	r1, #1001	; 0x3e9
 8007a46:	f7fa fd5f 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
    ListFilterLog_StLoop.setXY(806, 384);
 8007a4a:	9820      	ldr	r0, [sp, #128]	; 0x80
 8007a4c:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8007a50:	f240 3126 	movw	r1, #806	; 0x326
 8007a54:	f7fa fd58 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
    ListFilterLog_TypeChan.setXY(806, 195);
 8007a58:	9821      	ldr	r0, [sp, #132]	; 0x84
 8007a5a:	22c3      	movs	r2, #195	; 0xc3
 8007a5c:	f240 3126 	movw	r1, #806	; 0x326
 8007a60:	f7fa fd52 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
    ListFilterLog_Num.setXY(806, 4);
 8007a64:	9822      	ldr	r0, [sp, #136]	; 0x88
 8007a66:	2204      	movs	r2, #4
 8007a68:	f240 3126 	movw	r1, #806	; 0x326
 8007a6c:	f7fa fd4c 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
    textAreaStartDate.setXY(60, 160);
 8007a70:	9818      	ldr	r0, [sp, #96]	; 0x60
 8007a72:	22a0      	movs	r2, #160	; 0xa0
 8007a74:	213c      	movs	r1, #60	; 0x3c
 8007a76:	f7fa fd47 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8007a7a:	f64f 1370 	movw	r3, #63856	; 0xf970
 8007a7e:	f04f 497f 	mov.w	r9, #4278190080	; 0xff000000
 8007a82:	f844 9003 	str.w	r9, [r4, r3]
        linespace = space;
 8007a86:	f504 4379 	add.w	r3, r4, #63744	; 0xf900
    Unicode::snprintf(textAreaStartDateBuffer, TEXTAREASTARTDATE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_3H21).getText());
 8007a8a:	f504 477d 	add.w	r7, r4, #64768	; 0xfd00
 8007a8e:	f8a3 5074 	strh.w	r5, [r3, #116]	; 0x74
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007a92:	f8d8 3000 	ldr.w	r3, [r8]
 8007a96:	37e0      	adds	r7, #224	; 0xe0
 8007a98:	2b00      	cmp	r3, #0
 8007a9a:	f43e ad9e 	beq.w	80065da <_ZN15Screen1ViewBaseC1Ev+0x712>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8007a9e:	490f      	ldr	r1, [pc, #60]	; (8007adc <_ZN15Screen1ViewBaseC1Ev+0x1c14>)
 8007aa0:	880b      	ldrh	r3, [r1, #0]
 8007aa2:	2b54      	cmp	r3, #84	; 0x54
 8007aa4:	f67e ada3 	bls.w	80065ee <_ZN15Screen1ViewBaseC1Ev+0x726>
        return texts->getText(typedTextId);
 8007aa8:	4a09      	ldr	r2, [pc, #36]	; (8007ad0 <_ZN15Screen1ViewBaseC1Ev+0x1c08>)
 8007aaa:	2154      	movs	r1, #84	; 0x54
 8007aac:	6810      	ldr	r0, [r2, #0]
 8007aae:	f001 f8ab 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8007ab2:	e019      	b.n	8007ae8 <_ZN15Screen1ViewBaseC1Ev+0x1c20>
 8007ab4:	08029581 	.word	0x08029581
 8007ab8:	ff0a0a0a 	.word	0xff0a0a0a
 8007abc:	003b0046 	.word	0x003b0046
 8007ac0:	ff0099cc 	.word	0xff0099cc
 8007ac4:	ff006699 	.word	0xff006699
 8007ac8:	ff003366 	.word	0xff003366
 8007acc:	0802958c 	.word	0x0802958c
 8007ad0:	2002bd90 	.word	0x2002bd90
 8007ad4:	003b0050 	.word	0x003b0050
 8007ad8:	003b0032 	.word	0x003b0032
 8007adc:	2002bd88 	.word	0x2002bd88
 8007ae0:	003b0064 	.word	0x003b0064
 8007ae4:	2002bd84 	.word	0x2002bd84
 8007ae8:	4acb      	ldr	r2, [pc, #812]	; (8007e18 <_ZN15Screen1ViewBaseC1Ev+0x1f50>)
 8007aea:	4603      	mov	r3, r0
 8007aec:	210c      	movs	r1, #12
 8007aee:	4638      	mov	r0, r7
 8007af0:	f013 faec 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wildcard = value;
 8007af4:	f64f 137c 	movw	r3, #63868	; 0xf97c
    textAreaStartDate.resizeToCurrentText();
 8007af8:	9818      	ldr	r0, [sp, #96]	; 0x60
 8007afa:	50e7      	str	r7, [r4, r3]
 8007afc:	f00d fa32 	bl	8014f64 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007b00:	4bc6      	ldr	r3, [pc, #792]	; (8007e1c <_ZN15Screen1ViewBaseC1Ev+0x1f54>)
 8007b02:	933a      	str	r3, [sp, #232]	; 0xe8
    textAreaStartDate.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9LC6));
 8007b04:	a83a      	add	r0, sp, #232	; 0xe8
 8007b06:	2353      	movs	r3, #83	; 0x53
 8007b08:	4601      	mov	r1, r0
 8007b0a:	9818      	ldr	r0, [sp, #96]	; 0x60
 8007b0c:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8007b10:	f00d fa45 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaStopDate.setXY(60, 179);
 8007b14:	9819      	ldr	r0, [sp, #100]	; 0x64
 8007b16:	22b3      	movs	r2, #179	; 0xb3
 8007b18:	213c      	movs	r1, #60	; 0x3c
 8007b1a:	f7fa fcf5 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8007b1e:	f64f 13b0 	movw	r3, #63920	; 0xf9b0
    Unicode::snprintf(textAreaStopDateBuffer, TEXTAREASTOPDATE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_FS6U).getText());
 8007b22:	f504 477d 	add.w	r7, r4, #64768	; 0xfd00
 8007b26:	f844 9003 	str.w	r9, [r4, r3]
        linespace = space;
 8007b2a:	f504 4379 	add.w	r3, r4, #63744	; 0xf900
 8007b2e:	37f8      	adds	r7, #248	; 0xf8
 8007b30:	f8a3 50b4 	strh.w	r5, [r3, #180]	; 0xb4
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007b34:	f8d8 3000 	ldr.w	r3, [r8]
 8007b38:	2b00      	cmp	r3, #0
 8007b3a:	f43e ad4e 	beq.w	80065da <_ZN15Screen1ViewBaseC1Ev+0x712>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8007b3e:	49b8      	ldr	r1, [pc, #736]	; (8007e20 <_ZN15Screen1ViewBaseC1Ev+0x1f58>)
 8007b40:	880b      	ldrh	r3, [r1, #0]
 8007b42:	2b56      	cmp	r3, #86	; 0x56
 8007b44:	f67e ad53 	bls.w	80065ee <_ZN15Screen1ViewBaseC1Ev+0x726>
        return texts->getText(typedTextId);
 8007b48:	4ab6      	ldr	r2, [pc, #728]	; (8007e24 <_ZN15Screen1ViewBaseC1Ev+0x1f5c>)
 8007b4a:	2156      	movs	r1, #86	; 0x56
 8007b4c:	6810      	ldr	r0, [r2, #0]
 8007b4e:	f001 f85b 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8007b52:	4ab1      	ldr	r2, [pc, #708]	; (8007e18 <_ZN15Screen1ViewBaseC1Ev+0x1f50>)
 8007b54:	4603      	mov	r3, r0
 8007b56:	210c      	movs	r1, #12
 8007b58:	4638      	mov	r0, r7
 8007b5a:	f013 fab7 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8007b5e:	f64f 13bc 	movw	r3, #63932	; 0xf9bc
    textAreaStopDate.resizeToCurrentText();
 8007b62:	9819      	ldr	r0, [sp, #100]	; 0x64
 8007b64:	50e7      	str	r7, [r4, r3]
 8007b66:	f00d f9fd 	bl	8014f64 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007b6a:	4bac      	ldr	r3, [pc, #688]	; (8007e1c <_ZN15Screen1ViewBaseC1Ev+0x1f54>)
 8007b6c:	933a      	str	r3, [sp, #232]	; 0xe8
    textAreaStopDate.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V4DC));
 8007b6e:	a83a      	add	r0, sp, #232	; 0xe8
 8007b70:	2355      	movs	r3, #85	; 0x55
 8007b72:	4601      	mov	r1, r0
 8007b74:	9819      	ldr	r0, [sp, #100]	; 0x64
 8007b76:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8007b7a:	f00d fa10 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    modalWindow1.setBackground(touchgfx::BitmapId(BITMAP_DARK_BACKGROUNDS_MAIN_BG_480X272PX_ID), 160, 104);
 8007b7e:	2303      	movs	r3, #3
 8007b80:	a83a      	add	r0, sp, #232	; 0xe8
 8007b82:	22a0      	movs	r2, #160	; 0xa0
 8007b84:	4601      	mov	r1, r0
 8007b86:	f8ad 30e8 	strh.w	r3, [sp, #232]	; 0xe8
 8007b8a:	ee1a 0a90 	vmov	r0, s21
 8007b8e:	2368      	movs	r3, #104	; 0x68
 8007b90:	f00b fb3d 	bl	801320e <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>
    modalWindow1.setShadeColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 8007b94:	ee1a 0a90 	vmov	r0, s21
 8007b98:	4649      	mov	r1, r9
 8007b9a:	f00b fb25 	bl	80131e8 <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>
    modalWindow1.setShadeAlpha(150);
 8007b9e:	2196      	movs	r1, #150	; 0x96
 8007ba0:	ee1a 0a90 	vmov	r0, s21
 8007ba4:	2728      	movs	r7, #40	; 0x28
 8007ba6:	f00b fb23 	bl	80131f0 <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>
 8007baa:	f504 4a7a 	add.w	sl, r4, #64000	; 0xfa00
    modalWindow1.hide();
 8007bae:	ee1a 0a90 	vmov	r0, s21
 8007bb2:	f00b fb0f 	bl	80131d4 <_ZN8touchgfx11ModalWindow4hideEv>
 8007bb6:	f10a 00a4 	add.w	r0, sl, #164	; 0xa4
 8007bba:	2332      	movs	r3, #50	; 0x32
 8007bbc:	462a      	mov	r2, r5
 8007bbe:	4629      	mov	r1, r5
 8007bc0:	9700      	str	r7, [sp, #0]
 8007bc2:	f7fa ff75 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007bc6:	f64f 23d4 	movw	r3, #64212	; 0xfad4
    flexButtonOkFilDataTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8007bca:	9804      	ldr	r0, [sp, #16]
 8007bcc:	4a96      	ldr	r2, [pc, #600]	; (8007e28 <_ZN15Screen1ViewBaseC1Ev+0x1f60>)
 8007bce:	4997      	ldr	r1, [pc, #604]	; (8007e2c <_ZN15Screen1ViewBaseC1Ev+0x1f64>)
 8007bd0:	9000      	str	r0, [sp, #0]
 8007bd2:	f04f 0b01 	mov.w	fp, #1
 8007bd6:	f824 b003 	strh.w	fp, [r4, r3]
 8007bda:	980a      	ldr	r0, [sp, #40]	; 0x28
 8007bdc:	4b94      	ldr	r3, [pc, #592]	; (8007e30 <_ZN15Screen1ViewBaseC1Ev+0x1f68>)
 8007bde:	f7fa ffa3 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8007be2:	4b8e      	ldr	r3, [pc, #568]	; (8007e1c <_ZN15Screen1ViewBaseC1Ev+0x1f54>)
 8007be4:	933a      	str	r3, [sp, #232]	; 0xe8
    flexButtonOkFilDataTime.setText(TypedText(T___SINGLEUSE_NY18));
 8007be6:	a83a      	add	r0, sp, #232	; 0xe8
 8007be8:	2344      	movs	r3, #68	; 0x44
 8007bea:	4601      	mov	r1, r0
 8007bec:	980a      	ldr	r0, [sp, #40]	; 0x28
 8007bee:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8007bf2:	f7fa ffa5 	bl	8002b40 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8007bf6:	462a      	mov	r2, r5
 8007bf8:	4629      	mov	r1, r5
 8007bfa:	f10a 00e8 	add.w	r0, sl, #232	; 0xe8
 8007bfe:	2332      	movs	r3, #50	; 0x32
 8007c00:	9700      	str	r7, [sp, #0]
 8007c02:	f7fa ff55 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8007c06:	f64f 3324 	movw	r3, #64292	; 0xfb24
        handlePressedUpdated();
 8007c0a:	980a      	ldr	r0, [sp, #40]	; 0x28
        colorReleased = newColorReleased;
 8007c0c:	50e6      	str	r6, [r4, r3]
        colorPressed = newColorPressed;
 8007c0e:	f64f 3328 	movw	r3, #64296	; 0xfb28
 8007c12:	f504 4a7b 	add.w	sl, r4, #64256	; 0xfb00
 8007c16:	50e6      	str	r6, [r4, r3]
        handlePressedUpdated();
 8007c18:	f7fa fdf5 	bl	8002806 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonOkFilDataTime.setPosition(143, 222, 50, 40);
 8007c1c:	22de      	movs	r2, #222	; 0xde
 8007c1e:	980a      	ldr	r0, [sp, #40]	; 0x28
 8007c20:	9700      	str	r7, [sp, #0]
 8007c22:	2332      	movs	r3, #50	; 0x32
 8007c24:	218f      	movs	r1, #143	; 0x8f
 8007c26:	f7fa ff43 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007c2a:	f64f 23a0 	movw	r3, #64160	; 0xfaa0
 8007c2e:	9803      	ldr	r0, [sp, #12]
 8007c30:	50e0      	str	r0, [r4, r3]
    modalWindow1.add(flexButtonOkFilDataTime);
 8007c32:	990a      	ldr	r1, [sp, #40]	; 0x28
 8007c34:	ee1a 0a90 	vmov	r0, s21
 8007c38:	f00b fad3 	bl	80131e2 <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
 8007c3c:	2332      	movs	r3, #50	; 0x32
 8007c3e:	462a      	mov	r2, r5
 8007c40:	4629      	mov	r1, r5
 8007c42:	f10a 0060 	add.w	r0, sl, #96	; 0x60
 8007c46:	9700      	str	r7, [sp, #0]
 8007c48:	f7fa ff32 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007c4c:	f64f 3390 	movw	r3, #64400	; 0xfb90
    flexButtonExitFilDataTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8007c50:	9804      	ldr	r0, [sp, #16]
 8007c52:	4a75      	ldr	r2, [pc, #468]	; (8007e28 <_ZN15Screen1ViewBaseC1Ev+0x1f60>)
 8007c54:	f824 b003 	strh.w	fp, [r4, r3]
 8007c58:	4974      	ldr	r1, [pc, #464]	; (8007e2c <_ZN15Screen1ViewBaseC1Ev+0x1f64>)
 8007c5a:	4b75      	ldr	r3, [pc, #468]	; (8007e30 <_ZN15Screen1ViewBaseC1Ev+0x1f68>)
 8007c5c:	9000      	str	r0, [sp, #0]
 8007c5e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8007c60:	f7fa ff62 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8007c64:	4b6d      	ldr	r3, [pc, #436]	; (8007e1c <_ZN15Screen1ViewBaseC1Ev+0x1f54>)
 8007c66:	933a      	str	r3, [sp, #232]	; 0xe8
    flexButtonExitFilDataTime.setText(TypedText(T___SINGLEUSE_BK1O));
 8007c68:	a83a      	add	r0, sp, #232	; 0xe8
 8007c6a:	2345      	movs	r3, #69	; 0x45
 8007c6c:	4601      	mov	r1, r0
 8007c6e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8007c70:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8007c74:	f7fa ff64 	bl	8002b40 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8007c78:	462a      	mov	r2, r5
 8007c7a:	4629      	mov	r1, r5
 8007c7c:	2332      	movs	r3, #50	; 0x32
 8007c7e:	f10a 00a4 	add.w	r0, sl, #164	; 0xa4
 8007c82:	9700      	str	r7, [sp, #0]
 8007c84:	f7fa ff14 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8007c88:	f64f 33e0 	movw	r3, #64480	; 0xfbe0
        handlePressedUpdated();
 8007c8c:	980b      	ldr	r0, [sp, #44]	; 0x2c
        colorReleased = newColorReleased;
 8007c8e:	50e6      	str	r6, [r4, r3]
        colorPressed = newColorPressed;
 8007c90:	f64f 33e4 	movw	r3, #64484	; 0xfbe4
 8007c94:	50e6      	str	r6, [r4, r3]
        handlePressedUpdated();
 8007c96:	f7fa fdb6 	bl	8002806 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonExitFilDataTime.setPosition(279, 222, 50, 40);
 8007c9a:	22de      	movs	r2, #222	; 0xde
 8007c9c:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8007c9e:	9700      	str	r7, [sp, #0]
 8007ca0:	2332      	movs	r3, #50	; 0x32
 8007ca2:	f240 1117 	movw	r1, #279	; 0x117
 8007ca6:	f7fa ff03 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007caa:	f64f 335c 	movw	r3, #64348	; 0xfb5c
 8007cae:	9803      	ldr	r0, [sp, #12]
 8007cb0:	50e0      	str	r0, [r4, r3]
    modalWindow1.add(flexButtonExitFilDataTime);
 8007cb2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8007cb4:	ee1a 0a90 	vmov	r0, s21
 8007cb8:	f00b fa93 	bl	80131e2 <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    textAreaDataStart.setXY(80, 25);
 8007cbc:	981a      	ldr	r0, [sp, #104]	; 0x68
 8007cbe:	2219      	movs	r2, #25
 8007cc0:	2150      	movs	r1, #80	; 0x50
 8007cc2:	f7fa fc21 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8007cc6:	f64f 4318 	movw	r3, #64536	; 0xfc18
    Unicode::snprintf(textAreaDataStartBuffer, TEXTAREADATASTART_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_68K3).getText());
 8007cca:	f504 467e 	add.w	r6, r4, #65024	; 0xfe00
 8007cce:	f844 9003 	str.w	r9, [r4, r3]
        linespace = space;
 8007cd2:	f504 437b 	add.w	r3, r4, #64256	; 0xfb00
 8007cd6:	3610      	adds	r6, #16
 8007cd8:	f8a3 511c 	strh.w	r5, [r3, #284]	; 0x11c
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007cdc:	f8d8 3000 	ldr.w	r3, [r8]
 8007ce0:	2b00      	cmp	r3, #0
 8007ce2:	f43e ac7a 	beq.w	80065da <_ZN15Screen1ViewBaseC1Ev+0x712>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8007ce6:	4f4e      	ldr	r7, [pc, #312]	; (8007e20 <_ZN15Screen1ViewBaseC1Ev+0x1f58>)
 8007ce8:	883b      	ldrh	r3, [r7, #0]
 8007cea:	2b4a      	cmp	r3, #74	; 0x4a
 8007cec:	f67e ac7f 	bls.w	80065ee <_ZN15Screen1ViewBaseC1Ev+0x726>
        return texts->getText(typedTextId);
 8007cf0:	4a4c      	ldr	r2, [pc, #304]	; (8007e24 <_ZN15Screen1ViewBaseC1Ev+0x1f5c>)
 8007cf2:	214a      	movs	r1, #74	; 0x4a
 8007cf4:	6810      	ldr	r0, [r2, #0]
 8007cf6:	f000 ff87 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8007cfa:	4a47      	ldr	r2, [pc, #284]	; (8007e18 <_ZN15Screen1ViewBaseC1Ev+0x1f50>)
 8007cfc:	4603      	mov	r3, r0
 8007cfe:	210a      	movs	r1, #10
 8007d00:	4630      	mov	r0, r6
 8007d02:	f013 f9e3 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8007d06:	f64f 4324 	movw	r3, #64548	; 0xfc24
    textAreaDataStart.resizeToCurrentText();
 8007d0a:	981a      	ldr	r0, [sp, #104]	; 0x68
 8007d0c:	50e6      	str	r6, [r4, r3]
 8007d0e:	f00d f929 	bl	8014f64 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007d12:	4b42      	ldr	r3, [pc, #264]	; (8007e1c <_ZN15Screen1ViewBaseC1Ev+0x1f54>)
    textAreaDataStart.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A8GK));
 8007d14:	981a      	ldr	r0, [sp, #104]	; 0x68
 8007d16:	933a      	str	r3, [sp, #232]	; 0xe8
 8007d18:	a93a      	add	r1, sp, #232	; 0xe8
 8007d1a:	2349      	movs	r3, #73	; 0x49
 8007d1c:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8007d20:	f00d f93d 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    modalWindow1.add(textAreaDataStart);
 8007d24:	991a      	ldr	r1, [sp, #104]	; 0x68
 8007d26:	ee1a 0a90 	vmov	r0, s21
 8007d2a:	f00b fa5a 	bl	80131e2 <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    textAreaDataStop.setXY(330, 25);
 8007d2e:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8007d30:	2219      	movs	r2, #25
 8007d32:	f44f 71a5 	mov.w	r1, #330	; 0x14a
 8007d36:	f7fa fbe7 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8007d3a:	f64f 4358 	movw	r3, #64600	; 0xfc58
 8007d3e:	f844 9003 	str.w	r9, [r4, r3]
        linespace = space;
 8007d42:	f504 437c 	add.w	r3, r4, #64512	; 0xfc00
 8007d46:	f8a3 505c 	strh.w	r5, [r3, #92]	; 0x5c
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007d4a:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(textAreaDataStopBuffer, TEXTAREADATASTOP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_EEOS).getText());
 8007d4e:	f504 457e 	add.w	r5, r4, #65024	; 0xfe00
 8007d52:	3524      	adds	r5, #36	; 0x24
 8007d54:	2b00      	cmp	r3, #0
 8007d56:	f43e ac40 	beq.w	80065da <_ZN15Screen1ViewBaseC1Ev+0x712>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8007d5a:	883b      	ldrh	r3, [r7, #0]
 8007d5c:	2b4c      	cmp	r3, #76	; 0x4c
 8007d5e:	f67e ac46 	bls.w	80065ee <_ZN15Screen1ViewBaseC1Ev+0x726>
        return texts->getText(typedTextId);
 8007d62:	4b30      	ldr	r3, [pc, #192]	; (8007e24 <_ZN15Screen1ViewBaseC1Ev+0x1f5c>)
        : typedTextId(id)
 8007d64:	f8df 90b4 	ldr.w	r9, [pc, #180]	; 8007e1c <_ZN15Screen1ViewBaseC1Ev+0x1f54>
        return texts->getText(typedTextId);
 8007d68:	6818      	ldr	r0, [r3, #0]
 8007d6a:	214c      	movs	r1, #76	; 0x4c
 8007d6c:	f000 ff4c 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8007d70:	4a29      	ldr	r2, [pc, #164]	; (8007e18 <_ZN15Screen1ViewBaseC1Ev+0x1f50>)
 8007d72:	4603      	mov	r3, r0
 8007d74:	210a      	movs	r1, #10
 8007d76:	4628      	mov	r0, r5
 8007d78:	f013 f9a8 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8007d7c:	f64f 4364 	movw	r3, #64612	; 0xfc64
    textAreaDataStop.resizeToCurrentText();
 8007d80:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8007d82:	50e5      	str	r5, [r4, r3]
 8007d84:	f00d f8ee 	bl	8014f64 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007d88:	234b      	movs	r3, #75	; 0x4b
    textAreaDataStop.setTypedText(touchgfx::TypedText(T___SINGLEUSE_01JS));
 8007d8a:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8007d8c:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8007d90:	a93a      	add	r1, sp, #232	; 0xe8
 8007d92:	f8cd 90e8 	str.w	r9, [sp, #232]	; 0xe8
 8007d96:	f00d f902 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    modalWindow1.add(textAreaDataStop);
 8007d9a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8007d9c:	ee1a 0a90 	vmov	r0, s21
 8007da0:	f00b fa1f 	bl	80131e2 <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
 8007da4:	2532      	movs	r5, #50	; 0x32
 8007da6:	f504 467c 	add.w	r6, r4, #64512	; 0xfc00
 8007daa:	2200      	movs	r2, #0
 8007dac:	9500      	str	r5, [sp, #0]
 8007dae:	4611      	mov	r1, r2
 8007db0:	f106 009c 	add.w	r0, r6, #156	; 0x9c
 8007db4:	2364      	movs	r3, #100	; 0x64
 8007db6:	f7fa fe7b 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007dba:	f64f 43cc 	movw	r3, #64716	; 0xfccc
 8007dbe:	f04f 0a05 	mov.w	sl, #5
 8007dc2:	f824 a003 	strh.w	sl, [r4, r3]
    flexButtonTurnLog1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8007dc6:	9b04      	ldr	r3, [sp, #16]
 8007dc8:	4a17      	ldr	r2, [pc, #92]	; (8007e28 <_ZN15Screen1ViewBaseC1Ev+0x1f60>)
 8007dca:	980c      	ldr	r0, [sp, #48]	; 0x30
 8007dcc:	9300      	str	r3, [sp, #0]
 8007dce:	4917      	ldr	r1, [pc, #92]	; (8007e2c <_ZN15Screen1ViewBaseC1Ev+0x1f64>)
 8007dd0:	4b17      	ldr	r3, [pc, #92]	; (8007e30 <_ZN15Screen1ViewBaseC1Ev+0x1f68>)
 8007dd2:	f7fa fea9 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButtonTurnLog1.setText(TypedText(T___SINGLEUSE_ZILU));
 8007dd6:	980c      	ldr	r0, [sp, #48]	; 0x30
 8007dd8:	f8cd 90e8 	str.w	r9, [sp, #232]	; 0xe8
 8007ddc:	f240 133f 	movw	r3, #319	; 0x13f
 8007de0:	a93a      	add	r1, sp, #232	; 0xe8
 8007de2:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8007de6:	f7fa feab 	bl	8002b40 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8007dea:	2200      	movs	r2, #0
 8007dec:	4611      	mov	r1, r2
 8007dee:	9500      	str	r5, [sp, #0]
 8007df0:	f106 00e0 	add.w	r0, r6, #224	; 0xe0
 8007df4:	2364      	movs	r3, #100	; 0x64
 8007df6:	f7fa fe5b 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8007dfa:	f64f 531c 	movw	r3, #64796	; 0xfd1c
 8007dfe:	4e0d      	ldr	r6, [pc, #52]	; (8007e34 <_ZN15Screen1ViewBaseC1Ev+0x1f6c>)
 8007e00:	50e6      	str	r6, [r4, r3]
        colorPressed = newColorPressed;
 8007e02:	f64f 5320 	movw	r3, #64800	; 0xfd20
        handlePressedUpdated();
 8007e06:	980c      	ldr	r0, [sp, #48]	; 0x30
        colorPressed = newColorPressed;
 8007e08:	50e6      	str	r6, [r4, r3]
        handlePressedUpdated();
 8007e0a:	f7fa fcfc 	bl	8002806 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonTurnLog1.setPosition(203, 44, 100, 50);
 8007e0e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8007e10:	9500      	str	r5, [sp, #0]
 8007e12:	2364      	movs	r3, #100	; 0x64
 8007e14:	e010      	b.n	8007e38 <_ZN15Screen1ViewBaseC1Ev+0x1f70>
 8007e16:	bf00      	nop
 8007e18:	08029581 	.word	0x08029581
 8007e1c:	0802958c 	.word	0x0802958c
 8007e20:	2002bd88 	.word	0x2002bd88
 8007e24:	2002bd90 	.word	0x2002bd90
 8007e28:	ff0099cc 	.word	0xff0099cc
 8007e2c:	ff006699 	.word	0xff006699
 8007e30:	ff003366 	.word	0xff003366
 8007e34:	ff0a0a0a 	.word	0xff0a0a0a
 8007e38:	222c      	movs	r2, #44	; 0x2c
 8007e3a:	21cb      	movs	r1, #203	; 0xcb
 8007e3c:	f7fa fe38 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        visible = vis;
 8007e40:	f64f 438d 	movw	r3, #64653	; 0xfc8d
 8007e44:	f04f 0800 	mov.w	r8, #0
 8007e48:	f804 8003 	strb.w	r8, [r4, r3]
 8007e4c:	f64f 4398 	movw	r3, #64664	; 0xfc98
 8007e50:	9a03      	ldr	r2, [sp, #12]
 8007e52:	50e2      	str	r2, [r4, r3]
 8007e54:	f504 477d 	add.w	r7, r4, #64768	; 0xfd00
 8007e58:	9500      	str	r5, [sp, #0]
 8007e5a:	4642      	mov	r2, r8
 8007e5c:	4641      	mov	r1, r8
 8007e5e:	f107 0058 	add.w	r0, r7, #88	; 0x58
 8007e62:	2364      	movs	r3, #100	; 0x64
 8007e64:	f7fa fe24 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007e68:	f64f 5388 	movw	r3, #64904	; 0xfd88
    flexButtonTurnLog2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8007e6c:	4a49      	ldr	r2, [pc, #292]	; (8007f94 <_ZN15Screen1ViewBaseC1Ev+0x20cc>)
 8007e6e:	f824 a003 	strh.w	sl, [r4, r3]
 8007e72:	9b04      	ldr	r3, [sp, #16]
 8007e74:	980d      	ldr	r0, [sp, #52]	; 0x34
 8007e76:	9300      	str	r3, [sp, #0]
 8007e78:	4947      	ldr	r1, [pc, #284]	; (8007f98 <_ZN15Screen1ViewBaseC1Ev+0x20d0>)
 8007e7a:	4b48      	ldr	r3, [pc, #288]	; (8007f9c <_ZN15Screen1ViewBaseC1Ev+0x20d4>)
 8007e7c:	f7fa fe54 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButtonTurnLog2.setText(TypedText(T___SINGLEUSE_1JZ3));
 8007e80:	980d      	ldr	r0, [sp, #52]	; 0x34
 8007e82:	f8cd 90e8 	str.w	r9, [sp, #232]	; 0xe8
 8007e86:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007e8a:	a93a      	add	r1, sp, #232	; 0xe8
 8007e8c:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8007e90:	f7fa fe56 	bl	8002b40 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8007e94:	4642      	mov	r2, r8
 8007e96:	4641      	mov	r1, r8
 8007e98:	9500      	str	r5, [sp, #0]
 8007e9a:	f107 009c 	add.w	r0, r7, #156	; 0x9c
 8007e9e:	2364      	movs	r3, #100	; 0x64
 8007ea0:	f7fa fe06 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8007ea4:	f64f 53d8 	movw	r3, #64984	; 0xfdd8
        handlePressedUpdated();
 8007ea8:	980d      	ldr	r0, [sp, #52]	; 0x34
        colorReleased = newColorReleased;
 8007eaa:	50e6      	str	r6, [r4, r3]
        colorPressed = newColorPressed;
 8007eac:	f64f 53dc 	movw	r3, #64988	; 0xfddc
 8007eb0:	50e6      	str	r6, [r4, r3]
        handlePressedUpdated();
 8007eb2:	f7fa fca8 	bl	8002806 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonTurnLog2.setPosition(303, 44, 100, 50);
 8007eb6:	980d      	ldr	r0, [sp, #52]	; 0x34
 8007eb8:	9500      	str	r5, [sp, #0]
 8007eba:	2364      	movs	r3, #100	; 0x64
 8007ebc:	222c      	movs	r2, #44	; 0x2c
 8007ebe:	f240 112f 	movw	r1, #303	; 0x12f
 8007ec2:	f7fa fdf5 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007ec6:	f64f 5354 	movw	r3, #64852	; 0xfd54
 8007eca:	9a03      	ldr	r2, [sp, #12]
 8007ecc:	50e2      	str	r2, [r4, r3]
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8007ece:	1d25      	adds	r5, r4, #4
 8007ed0:	9932      	ldr	r1, [sp, #200]	; 0xc8
 8007ed2:	4628      	mov	r0, r5
 8007ed4:	f00b facc 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007ed8:	9933      	ldr	r1, [sp, #204]	; 0xcc
 8007eda:	4628      	mov	r0, r5
 8007edc:	f00b fac8 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007ee0:	ee19 1a90 	vmov	r1, s19
 8007ee4:	4628      	mov	r0, r5
 8007ee6:	f00b fac3 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007eea:	ee18 1a10 	vmov	r1, s16
 8007eee:	4628      	mov	r0, r5
 8007ef0:	f00b fabe 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007ef4:	9931      	ldr	r1, [sp, #196]	; 0xc4
 8007ef6:	4628      	mov	r0, r5
 8007ef8:	f00b faba 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007efc:	ee1b 1a10 	vmov	r1, s22
 8007f00:	4628      	mov	r0, r5
 8007f02:	f00b fab5 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007f06:	ee1a 1a10 	vmov	r1, s20
 8007f0a:	4628      	mov	r0, r5
 8007f0c:	f00b fab0 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007f10:	ee18 1a90 	vmov	r1, s17
 8007f14:	4628      	mov	r0, r5
 8007f16:	f00b faab 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007f1a:	ee19 1a10 	vmov	r1, s18
 8007f1e:	4628      	mov	r0, r5
 8007f20:	f00b faa6 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007f24:	991c      	ldr	r1, [sp, #112]	; 0x70
 8007f26:	4628      	mov	r0, r5
 8007f28:	f00b faa2 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007f2c:	991d      	ldr	r1, [sp, #116]	; 0x74
 8007f2e:	4628      	mov	r0, r5
 8007f30:	f00b fa9e 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007f34:	991e      	ldr	r1, [sp, #120]	; 0x78
 8007f36:	4628      	mov	r0, r5
 8007f38:	f00b fa9a 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007f3c:	991f      	ldr	r1, [sp, #124]	; 0x7c
 8007f3e:	4628      	mov	r0, r5
 8007f40:	f00b fa96 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007f44:	9920      	ldr	r1, [sp, #128]	; 0x80
 8007f46:	4628      	mov	r0, r5
 8007f48:	f00b fa92 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007f4c:	9921      	ldr	r1, [sp, #132]	; 0x84
 8007f4e:	4628      	mov	r0, r5
 8007f50:	f00b fa8e 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007f54:	9922      	ldr	r1, [sp, #136]	; 0x88
 8007f56:	4628      	mov	r0, r5
 8007f58:	f00b fa8a 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007f5c:	9918      	ldr	r1, [sp, #96]	; 0x60
 8007f5e:	4628      	mov	r0, r5
 8007f60:	f00b fa86 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007f64:	9919      	ldr	r1, [sp, #100]	; 0x64
 8007f66:	4628      	mov	r0, r5
 8007f68:	f00b fa82 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007f6c:	ee1a 1a90 	vmov	r1, s21
 8007f70:	4628      	mov	r0, r5
 8007f72:	f00b fa7d 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007f76:	990c      	ldr	r1, [sp, #48]	; 0x30
 8007f78:	4628      	mov	r0, r5
 8007f7a:	f00b fa79 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007f7e:	4628      	mov	r0, r5
 8007f80:	990d      	ldr	r1, [sp, #52]	; 0x34
 8007f82:	f00b fa75 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007f86:	4620      	mov	r0, r4
 8007f88:	b03d      	add	sp, #244	; 0xf4
 8007f8a:	ecbd 8b10 	vpop	{d8-d15}
 8007f8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007f92:	bf00      	nop
 8007f94:	ff0099cc 	.word	0xff0099cc
 8007f98:	ff006699 	.word	0xff006699
 8007f9c:	ff003366 	.word	0xff003366

08007fa0 <_ZN15Screen2ViewBaseD1Ev>:

class Screen2ViewBase : public touchgfx::View<Screen2Presenter>
{
public:
    Screen2ViewBase();
    virtual ~Screen2ViewBase() {}
 8007fa0:	4770      	bx	lr

08007fa2 <_ZN15Screen2ViewBase31CallbackcustomContainerKeyboardEv>:
     * Virtual Action Handlers
     */
    virtual void CallbackcustomContainerKeyboard()
    {
        // Override and implement this function in Screen2
    }
 8007fa2:	4770      	bx	lr

08007fa4 <_ZN15Screen2ViewBase9function2Ev>:

    virtual void function2()
    {
        // Override and implement this function in Screen2
    }
 8007fa4:	4770      	bx	lr

08007fa6 <_ZN15Screen2ViewBase9function3Ev>:

    virtual void function3()
    {
        // Override and implement this function in Screen2
    }
 8007fa6:	4770      	bx	lr

08007fa8 <_ZN15Screen2ViewBase35CallbackcustomContainerKeyboard_NumEv>:

    virtual void CallbackcustomContainerKeyboard_Num()
    {
        // Override and implement this function in Screen2
    }
 8007fa8:	4770      	bx	lr

08007faa <_ZN15Screen2ViewBase20functionSaveSettingsEv>:

    virtual void functionSaveSettings()
    {
        // Override and implement this function in Screen2
    }
 8007faa:	4770      	bx	lr

08007fac <_ZN15Screen2ViewBase23functionSaveModalWindowEv>:

    virtual void functionSaveModalWindow()
    {
        // Override and implement this function in Screen2
    }
 8007fac:	4770      	bx	lr

08007fae <_ZN15Screen2ViewBase54customContainerKeyboard1TriggerKeyboardCallbackHandlerEv>:
void Screen2ViewBase::customContainerKeyboard1TriggerKeyboardCallbackHandler()
{
    //Interaction1
    //When customContainerKeyboard1 triggerKeyboard call virtual function
    //Call CallbackcustomContainerKeyboard
    CallbackcustomContainerKeyboard();
 8007fae:	6803      	ldr	r3, [r0, #0]
 8007fb0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007fb2:	4718      	bx	r3

08007fb4 <_ZN15Screen2ViewBase62customContainerKeyboard_Num1TriggerKeyboard_NumCallbackHandlerEv>:
void Screen2ViewBase::customContainerKeyboard_Num1TriggerKeyboard_NumCallbackHandler()
{
    //Interaction4
    //When customContainerKeyboard_Num1 triggerKeyboard_Num call virtual function
    //Call CallbackcustomContainerKeyboard_Num
    CallbackcustomContainerKeyboard_Num();
 8007fb4:	6803      	ldr	r3, [r0, #0]
 8007fb6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007fb8:	4718      	bx	r3

08007fba <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
 * The position of the icon can be adjusted with setIconXY.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class IconButtonStyle : public T
 8007fba:	4770      	bx	lr

08007fbc <_ZN8touchgfx8CallbackI15Screen2ViewBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8007fbc:	4770      	bx	lr

08007fbe <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007fbe:	4770      	bx	lr

08007fc0 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 8007fc0:	4770      	bx	lr

08007fc2 <_ZN8touchgfx23WildcardTextButtonStyleINS_15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEED1Ev>:
class WildcardTextButtonStyle : public T
 8007fc2:	4770      	bx	lr

08007fc4 <_ZN8touchgfx8CallbackI15Screen2ViewBasevvvE7executeEv>:
    virtual void execute()
 8007fc4:	b410      	push	{r4}
        (pobject->*pmemfun_0)();
 8007fc6:	68c2      	ldr	r2, [r0, #12]
 8007fc8:	6841      	ldr	r1, [r0, #4]
 8007fca:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8007fcc:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8007fce:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8007fd2:	07d2      	lsls	r2, r2, #31
 8007fd4:	bf48      	it	mi
 8007fd6:	590a      	ldrmi	r2, [r1, r4]
 8007fd8:	689b      	ldr	r3, [r3, #8]
    }
 8007fda:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8007fde:	bf48      	it	mi
 8007fe0:	58d3      	ldrmi	r3, [r2, r3]
 8007fe2:	4718      	bx	r3

08007fe4 <_ZNK8touchgfx8CallbackI15Screen2ViewBasevvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_0 != 0);
 8007fe4:	6843      	ldr	r3, [r0, #4]
 8007fe6:	b12b      	cbz	r3, 8007ff4 <_ZNK8touchgfx8CallbackI15Screen2ViewBasevvvE7isValidEv+0x10>
 8007fe8:	6883      	ldr	r3, [r0, #8]
 8007fea:	b92b      	cbnz	r3, 8007ff8 <_ZNK8touchgfx8CallbackI15Screen2ViewBasevvvE7isValidEv+0x14>
 8007fec:	68c0      	ldr	r0, [r0, #12]
 8007fee:	f000 0001 	and.w	r0, r0, #1
 8007ff2:	4770      	bx	lr
 8007ff4:	4618      	mov	r0, r3
 8007ff6:	4770      	bx	lr
 8007ff8:	2001      	movs	r0, #1
    }
 8007ffa:	4770      	bx	lr

08007ffc <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007ffc:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8007ffe:	68c2      	ldr	r2, [r0, #12]
 8008000:	6844      	ldr	r4, [r0, #4]
 8008002:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8008004:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8008006:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800800a:	07d2      	lsls	r2, r2, #31
 800800c:	bf48      	it	mi
 800800e:	5962      	ldrmi	r2, [r4, r5]
 8008010:	689b      	ldr	r3, [r3, #8]
    }
 8008012:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8008014:	bf48      	it	mi
 8008016:	58d3      	ldrmi	r3, [r2, r3]
 8008018:	4718      	bx	r3

0800801a <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 800801a:	6843      	ldr	r3, [r0, #4]
 800801c:	b12b      	cbz	r3, 800802a <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 800801e:	6883      	ldr	r3, [r0, #8]
 8008020:	b92b      	cbnz	r3, 800802e <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8008022:	68c0      	ldr	r0, [r0, #12]
 8008024:	f000 0001 	and.w	r0, r0, #1
 8008028:	4770      	bx	lr
 800802a:	4618      	mov	r0, r3
 800802c:	4770      	bx	lr
 800802e:	2001      	movs	r0, #1
    }
 8008030:	4770      	bx	lr

08008032 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8008032:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8008034:	68c2      	ldr	r2, [r0, #12]
 8008036:	6844      	ldr	r4, [r0, #4]
 8008038:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800803a:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 800803c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8008040:	07d2      	lsls	r2, r2, #31
 8008042:	bf48      	it	mi
 8008044:	5962      	ldrmi	r2, [r4, r5]
 8008046:	689b      	ldr	r3, [r3, #8]
    }
 8008048:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800804a:	bf48      	it	mi
 800804c:	58d3      	ldrmi	r3, [r2, r3]
 800804e:	4718      	bx	r3

08008050 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8008050:	6843      	ldr	r3, [r0, #4]
 8008052:	b12b      	cbz	r3, 8008060 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8008054:	6883      	ldr	r3, [r0, #8]
 8008056:	b92b      	cbnz	r3, 8008064 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8008058:	68c0      	ldr	r0, [r0, #12]
 800805a:	f000 0001 	and.w	r0, r0, #1
 800805e:	4770      	bx	lr
 8008060:	4618      	mov	r0, r3
 8008062:	4770      	bx	lr
 8008064:	2001      	movs	r0, #1
    }
 8008066:	4770      	bx	lr

08008068 <_ZN8touchgfx23WildcardTextButtonStyleINS_15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE18handleAlphaUpdatedEv>:
        wildcardText.setAlpha(T::getAlpha());
 8008068:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
        alpha = newAlpha;
 800806c:	f880 30de 	strb.w	r3, [r0, #222]	; 0xde
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8008070:	f880 30a4 	strb.w	r3, [r0, #164]	; 0xa4
        alpha = newAlpha;
 8008074:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    }
 8008078:	4770      	bx	lr

0800807a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        iconImage.setAlpha(T::getAlpha());
 800807a:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 800807e:	f880 30a4 	strb.w	r3, [r0, #164]	; 0xa4
 8008082:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
        T::handleAlphaUpdated();
    }
 8008086:	4770      	bx	lr

08008088 <_ZN8touchgfx8CallbackI15Screen2ViewBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8008088:	b510      	push	{r4, lr}
 800808a:	2110      	movs	r1, #16
 800808c:	4604      	mov	r4, r0
 800808e:	f01f fb49 	bl	8027724 <_ZdlPvj>
 8008092:	4620      	mov	r0, r4
 8008094:	bd10      	pop	{r4, pc}

08008096 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008096:	b510      	push	{r4, lr}
 8008098:	2110      	movs	r1, #16
 800809a:	4604      	mov	r4, r0
 800809c:	f01f fb42 	bl	8027724 <_ZdlPvj>
 80080a0:	4620      	mov	r0, r4
 80080a2:	bd10      	pop	{r4, pc}

080080a4 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 80080a4:	b510      	push	{r4, lr}
 80080a6:	2110      	movs	r1, #16
 80080a8:	4604      	mov	r4, r0
 80080aa:	f01f fb3b 	bl	8027724 <_ZdlPvj>
 80080ae:	4620      	mov	r0, r4
 80080b0:	bd10      	pop	{r4, pc}

080080b2 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class IconButtonStyle : public T
 80080b2:	b510      	push	{r4, lr}
 80080b4:	21a8      	movs	r1, #168	; 0xa8
 80080b6:	4604      	mov	r4, r0
 80080b8:	f01f fb34 	bl	8027724 <_ZdlPvj>
 80080bc:	4620      	mov	r0, r4
 80080be:	bd10      	pop	{r4, pc}

080080c0 <_ZN8touchgfx23WildcardTextButtonStyleINS_15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEED0Ev>:
class WildcardTextButtonStyle : public T
 80080c0:	b510      	push	{r4, lr}
 80080c2:	21f0      	movs	r1, #240	; 0xf0
 80080c4:	4604      	mov	r4, r0
 80080c6:	f01f fb2d 	bl	8027724 <_ZdlPvj>
 80080ca:	4620      	mov	r0, r4
 80080cc:	bd10      	pop	{r4, pc}

080080ce <_ZN15Screen2ViewBaseD0Ev>:
    virtual ~Screen2ViewBase() {}
 80080ce:	b510      	push	{r4, lr}
 80080d0:	f244 5178 	movw	r1, #17784	; 0x4578
 80080d4:	4604      	mov	r4, r0
 80080d6:	f01f fb25 	bl	8027724 <_ZdlPvj>
 80080da:	4620      	mov	r0, r4
 80080dc:	bd10      	pop	{r4, pc}

080080de <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 80080de:	b510      	push	{r4, lr}
 80080e0:	4604      	mov	r4, r0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 80080e2:	307c      	adds	r0, #124	; 0x7c
 80080e4:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80080e8:	b13b      	cbz	r3, 80080fa <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x1c>
 80080ea:	f104 017a 	add.w	r1, r4, #122	; 0x7a
 80080ee:	f00d fa89 	bl	8015604 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::handlePressedUpdated();
 80080f2:	4620      	mov	r0, r4
 80080f4:	f7fa f946 	bl	8002384 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 80080f8:	bd10      	pop	{r4, pc}
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 80080fa:	f104 0178 	add.w	r1, r4, #120	; 0x78
 80080fe:	e7f6      	b.n	80080ee <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x10>

08008100 <_ZN8touchgfx23WildcardTextButtonStyleINS_15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 8008100:	b508      	push	{r3, lr}
        wildcardText.setColor(T::getPressed() ? colorPressed : colorReleased);
 8008102:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8008106:	b133      	cbz	r3, 8008116 <_ZN8touchgfx23WildcardTextButtonStyleINS_15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE20handlePressedUpdatedEv+0x16>
 8008108:	f8d0 30ec 	ldr.w	r3, [r0, #236]	; 0xec
        this->color = color;
 800810c:	f8c0 30d8 	str.w	r3, [r0, #216]	; 0xd8
        T::handlePressedUpdated();
 8008110:	f7ff ffe5 	bl	80080de <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    }
 8008114:	bd08      	pop	{r3, pc}
        wildcardText.setColor(T::getPressed() ? colorPressed : colorReleased);
 8008116:	f8d0 30e8 	ldr.w	r3, [r0, #232]	; 0xe8
 800811a:	e7f7      	b.n	800810c <_ZN8touchgfx23WildcardTextButtonStyleINS_15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE20handlePressedUpdatedEv+0xc>

0800811c <_ZN15Screen2ViewBase11setupScreenEv>:
{
 800811c:	b510      	push	{r4, lr}
 800811e:	4604      	mov	r4, r0
    customContainerKeyboard1.initialize();
 8008120:	30a0      	adds	r0, #160	; 0xa0
 8008122:	f001 f863 	bl	80091ec <_ZN23CustomContainerKeyboard10initializeEv>
    customContainerKeyboard_Num1.initialize();
 8008126:	f504 5040 	add.w	r0, r4, #12288	; 0x3000
 800812a:	3038      	adds	r0, #56	; 0x38
}
 800812c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    customContainerKeyboard_Num1.initialize();
 8008130:	f001 b8c2 	b.w	80092b8 <_ZN27CustomContainerKeyboard_Num10initializeEv>

08008134 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    }
}

void Screen2ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton_text_out)
 8008134:	f500 523d 	add.w	r2, r0, #12096	; 0x2f40
 8008138:	3208      	adds	r2, #8
 800813a:	4291      	cmp	r1, r2
{
 800813c:	4603      	mov	r3, r0
    if (&src == &flexButton_text_out)
 800813e:	d102      	bne.n	8008146 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x12>
    {
        //Interaction2
        //When flexButton_text_out clicked call virtual function
        //Call function2
        function2();
 8008140:	6803      	ldr	r3, [r0, #0]
 8008142:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    else if (&src == &flexButtonSaveYes)
    {
        //Interaction6
        //When flexButtonSaveYes clicked call virtual function
        //Call functionSaveModalWindow
        functionSaveModalWindow();
 8008144:	4718      	bx	r3
    else if (&src == &flexButton_text_out_Num)
 8008146:	f500 4281 	add.w	r2, r0, #16512	; 0x4080
 800814a:	3274      	adds	r2, #116	; 0x74
 800814c:	4291      	cmp	r1, r2
 800814e:	d102      	bne.n	8008156 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
        function3();
 8008150:	6803      	ldr	r3, [r0, #0]
 8008152:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008154:	e7f6      	b.n	8008144 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    else if (&src == &flexButtonSave)
 8008156:	f500 4283 	add.w	r2, r0, #16768	; 0x4180
 800815a:	3234      	adds	r2, #52	; 0x34
 800815c:	4291      	cmp	r1, r2
 800815e:	d102      	bne.n	8008166 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x32>
        functionSaveSettings();
 8008160:	6803      	ldr	r3, [r0, #0]
 8008162:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008164:	e7ee      	b.n	8008144 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    else if (&src == &flexButtonSaveNo)
 8008166:	f500 4286 	add.w	r2, r0, #17152	; 0x4300
 800816a:	3220      	adds	r2, #32
 800816c:	4291      	cmp	r1, r2
 800816e:	d102      	bne.n	8008176 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x42>
        functionSaveModalWindow();
 8008170:	681b      	ldr	r3, [r3, #0]
 8008172:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008174:	e7e6      	b.n	8008144 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    else if (&src == &flexButtonSaveYes)
 8008176:	f500 4287 	add.w	r2, r0, #17280	; 0x4380
 800817a:	325c      	adds	r2, #92	; 0x5c
 800817c:	4291      	cmp	r1, r2
 800817e:	d0f7      	beq.n	8008170 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3c>
    }
}
 8008180:	4770      	bx	lr

08008182 <_ZN15Screen2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &button1)
 8008182:	306c      	adds	r0, #108	; 0x6c
 8008184:	4288      	cmp	r0, r1
{
 8008186:	b508      	push	{r3, lr}
    if (&src == &button1)
 8008188:	d105      	bne.n	8008196 <_ZN15Screen2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800818a:	f00f faf7 	bl	801777c <_ZN8touchgfx11Application11getInstanceEv>
}
 800818e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen1ScreenNoTransition();
 8008192:	f7fd b95f 	b.w	8005454 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
}
 8008196:	bd08      	pop	{r3, pc}

08008198 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>:
        iconReleased = newIconReleased;
 8008198:	880b      	ldrh	r3, [r1, #0]
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 800819a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 800819e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        iconReleased = newIconReleased;
 80081a2:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
        iconPressed = newIconPressed;
 80081a6:	8813      	ldrh	r3, [r2, #0]
 80081a8:	f8a0 307a 	strh.w	r3, [r0, #122]	; 0x7a
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 80081ac:	4604      	mov	r4, r0
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 80081ae:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80081b2:	4610      	mov	r0, r2
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 80081b4:	4617      	mov	r7, r2
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 80081b6:	f3c1 054f 	ubfx	r5, r1, #1, #16
 80081ba:	f013 fa57 	bl	801b66c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80081be:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80081c2:	4680      	mov	r8, r0
 80081c4:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 80081c8:	4638      	mov	r0, r7
 80081ca:	f3c3 064f 	ubfx	r6, r3, #1, #16
 80081ce:	f013 fa87 	bl	801b6e0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80081d2:	eba5 0158 	sub.w	r1, r5, r8, lsr #1
 80081d6:	eba6 0250 	sub.w	r2, r6, r0, lsr #1
 80081da:	b212      	sxth	r2, r2
 80081dc:	f104 007c 	add.w	r0, r4, #124	; 0x7c
 80081e0:	b209      	sxth	r1, r1
 80081e2:	f7fa f991 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
        handlePressedUpdated();
 80081e6:	6823      	ldr	r3, [r4, #0]
 80081e8:	4620      	mov	r0, r4
 80081ea:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 80081ee:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        handlePressedUpdated();
 80081f2:	4718      	bx	r3

080081f4 <_ZN15Screen2ViewBaseC1Ev>:
Screen2ViewBase::Screen2ViewBase() :
 80081f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80081f8:	ed2d 8b08 	vpush	{d8-d11}
 80081fc:	4604      	mov	r4, r0
 80081fe:	b08b      	sub	sp, #44	; 0x2c
 8008200:	f010 fd02 	bl	8018c08 <_ZN8touchgfx6ScreenC1Ev>
    customContainerKeyboard_Num1TriggerKeyboard_NumCallback(this, &Screen2ViewBase::customContainerKeyboard_Num1TriggerKeyboard_NumCallbackHandler)
 8008204:	4622      	mov	r2, r4
 8008206:	2500      	movs	r5, #0
 8008208:	4bd8      	ldr	r3, [pc, #864]	; (800856c <_ZN15Screen2ViewBaseC1Ev+0x378>)
 800820a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800820c:	f842 3b40 	str.w	r3, [r2], #64
 8008210:	4610      	mov	r0, r2
 8008212:	ee09 2a90 	vmov	s19, r2
 8008216:	f7fa fc57 	bl	8002ac8 <_ZN8touchgfx3BoxC1Ev>
 800821a:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 800821e:	ee0a 3a10 	vmov	s20, r3
        : Widget(), action(), pressed(false)
 8008222:	2226      	movs	r2, #38	; 0x26
 8008224:	4629      	mov	r1, r5
 8008226:	4618      	mov	r0, r3
 8008228:	f01f fc58 	bl	8027adc <memset>
 800822c:	ee1a 0a10 	vmov	r0, s20
 8008230:	f7fa f958 	bl	80024e4 <_ZN8touchgfx8DrawableC1Ev>
        touchable = touch;
 8008234:	f04f 0301 	mov.w	r3, #1
 8008238:	f884 3090 	strb.w	r3, [r4, #144]	; 0x90
 800823c:	4bcc      	ldr	r3, [pc, #816]	; (8008570 <_ZN15Screen2ViewBaseC1Ev+0x37c>)
 800823e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8008240:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8008244:	f104 03a0 	add.w	r3, r4, #160	; 0xa0
 8008248:	f642 7848 	movw	r8, #12104	; 0x2f48
 800824c:	eb04 0608 	add.w	r6, r4, r8
 8008250:	4618      	mov	r0, r3
 8008252:	f8a4 709a 	strh.w	r7, [r4, #154]	; 0x9a
 8008256:	f8a4 709c 	strh.w	r7, [r4, #156]	; 0x9c
 800825a:	f884 709e 	strb.w	r7, [r4, #158]	; 0x9e
 800825e:	f8c4 5094 	str.w	r5, [r4, #148]	; 0x94
 8008262:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8008266:	ee0b 3a10 	vmov	s22, r3
 800826a:	f000 ff77 	bl	800915c <_ZN23CustomContainerKeyboardC1Ev>
        : T()
 800826e:	4630      	mov	r0, r6
 8008270:	f7fa fc84 	bl	8002b7c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8008274:	4bbf      	ldr	r3, [pc, #764]	; (8008574 <_ZN15Screen2ViewBaseC1Ev+0x380>)
 8008276:	f844 3008 	str.w	r3, [r4, r8]
 800827a:	f504 533f 	add.w	r3, r4, #12224	; 0x2fc0
        : Widget(), bitmap(bitmap), alpha(255)
 800827e:	f642 7bc4 	movw	fp, #12228	; 0x2fc4
 8008282:	801f      	strh	r7, [r3, #0]
 8008284:	f642 73c2 	movw	r3, #12226	; 0x2fc2
 8008288:	eb04 0a0b 	add.w	sl, r4, fp
 800828c:	2226      	movs	r2, #38	; 0x26
 800828e:	52e7      	strh	r7, [r4, r3]
 8008290:	f106 097c 	add.w	r9, r6, #124	; 0x7c
 8008294:	4629      	mov	r1, r5
 8008296:	4650      	mov	r0, sl
 8008298:	f8ad 7020 	strh.w	r7, [sp, #32]
 800829c:	f01f fc1e 	bl	8027adc <memset>
 80082a0:	4648      	mov	r0, r9
 80082a2:	f7fa f91f 	bl	80024e4 <_ZN8touchgfx8DrawableC1Ev>
 80082a6:	4bb4      	ldr	r3, [pc, #720]	; (8008578 <_ZN15Screen2ViewBaseC1Ev+0x384>)
 80082a8:	f844 300b 	str.w	r3, [r4, fp]
 80082ac:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80082b0:	f8aa 3026 	strh.w	r3, [sl, #38]	; 0x26
 80082b4:	f88a 7028 	strb.w	r7, [sl, #40]	; 0x28
        Image::setBitmap(bitmap);
 80082b8:	4648      	mov	r0, r9
 80082ba:	a908      	add	r1, sp, #32
 80082bc:	f00d f9a2 	bl	8015604 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::add(iconImage);
 80082c0:	4649      	mov	r1, r9
 80082c2:	4630      	mov	r0, r6
 80082c4:	f00b f8d4 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T()
 80082c8:	4bac      	ldr	r3, [pc, #688]	; (800857c <_ZN15Screen2ViewBaseC1Ev+0x388>)
 80082ca:	f844 3008 	str.w	r3, [r4, r8]
 80082ce:	f106 08a8 	add.w	r8, r6, #168	; 0xa8
        : TextArea(), wildcard(0)
 80082d2:	4640      	mov	r0, r8
 80082d4:	f7fa fc0c 	bl	8002af0 <_ZN8touchgfx8TextAreaC1Ev>
 80082d8:	f642 73f0 	movw	r3, #12272	; 0x2ff0
 80082dc:	18e2      	adds	r2, r4, r3
 80082de:	f8df 92d8 	ldr.w	r9, [pc, #728]	; 80085b8 <_ZN15Screen2ViewBaseC1Ev+0x3c4>
 80082e2:	f844 9003 	str.w	r9, [r4, r3]
 80082e6:	63d5      	str	r5, [r2, #60]	; 0x3c
        : color(0)
 80082e8:	f243 0330 	movw	r3, #12336	; 0x3030
 80082ec:	f243 0234 	movw	r2, #12340	; 0x3034
        T::add(wildcardText);
 80082f0:	4641      	mov	r1, r8
 80082f2:	50e5      	str	r5, [r4, r3]
 80082f4:	4630      	mov	r0, r6
 80082f6:	50a5      	str	r5, [r4, r2]
 80082f8:	f00b f8ba 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80082fc:	f504 5340 	add.w	r3, r4, #12288	; 0x3000
 8008300:	3338      	adds	r3, #56	; 0x38
 8008302:	f244 07f4 	movw	r7, #16628	; 0x40f4
 8008306:	4618      	mov	r0, r3
 8008308:	ee0a 3a90 	vmov	s21, r3
 800830c:	f000 ffde 	bl	80092cc <_ZN27CustomContainerKeyboard_NumC1Ev>
 8008310:	19e3      	adds	r3, r4, r7
 8008312:	ee08 3a90 	vmov	s17, r3
        : T()
 8008316:	4618      	mov	r0, r3
 8008318:	f7fa fc30 	bl	8002b7c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800831c:	4b98      	ldr	r3, [pc, #608]	; (8008580 <_ZN15Screen2ViewBaseC1Ev+0x38c>)
 800831e:	51e3      	str	r3, [r4, r7]
 8008320:	ee18 3a90 	vmov	r3, s17
 8008324:	f103 0778 	add.w	r7, r3, #120	; 0x78
 8008328:	4638      	mov	r0, r7
 800832a:	f7fa fbe1 	bl	8002af0 <_ZN8touchgfx8TextAreaC1Ev>
 800832e:	f244 136c 	movw	r3, #16748	; 0x416c
 8008332:	18e2      	adds	r2, r4, r3
 8008334:	f244 10ac 	movw	r0, #16812	; 0x41ac
 8008338:	f844 9003 	str.w	r9, [r4, r3]
 800833c:	63d5      	str	r5, [r2, #60]	; 0x3c
 800833e:	5025      	str	r5, [r4, r0]
 8008340:	f244 10b0 	movw	r0, #16816	; 0x41b0
 8008344:	f504 4983 	add.w	r9, r4, #16768	; 0x4180
        T::add(wildcardText);
 8008348:	4639      	mov	r1, r7
 800834a:	5025      	str	r5, [r4, r0]
 800834c:	f109 0934 	add.w	r9, r9, #52	; 0x34
 8008350:	ee18 0a90 	vmov	r0, s17
 8008354:	f504 4a84 	add.w	sl, r4, #16896	; 0x4200
 8008358:	f00b f88a 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800835c:	f10a 0a70 	add.w	sl, sl, #112	; 0x70
 8008360:	4648      	mov	r0, r9
 8008362:	f7fa fc37 	bl	8002bd4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8008366:	4650      	mov	r0, sl
 8008368:	f00a ff92 	bl	8013290 <_ZN8touchgfx11ModalWindowC1Ev>
 800836c:	f504 4386 	add.w	r3, r4, #17152	; 0x4300
 8008370:	3320      	adds	r3, #32
 8008372:	f504 4b87 	add.w	fp, r4, #17280	; 0x4380
 8008376:	4618      	mov	r0, r3
 8008378:	f10b 0b5c 	add.w	fp, fp, #92	; 0x5c
 800837c:	ee08 3a10 	vmov	s16, r3
 8008380:	f7fa fc28 	bl	8002bd4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8008384:	4658      	mov	r0, fp
 8008386:	f7fa fc25 	bl	8002bd4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800838a:	f504 4389 	add.w	r3, r4, #17536	; 0x4480
 800838e:	3318      	adds	r3, #24
 8008390:	4618      	mov	r0, r3
 8008392:	ee09 3a10 	vmov	s18, r3
 8008396:	f7fa fbab 	bl	8002af0 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 800839a:	f244 5338 	movw	r3, #17720	; 0x4538
 800839e:	18e2      	adds	r2, r4, r3
 80083a0:	9203      	str	r2, [sp, #12]
 80083a2:	4a78      	ldr	r2, [pc, #480]	; (8008584 <_ZN15Screen2ViewBaseC1Ev+0x390>)
 80083a4:	50e2      	str	r2, [r4, r3]
 80083a6:	9b03      	ldr	r3, [sp, #12]
 80083a8:	4a77      	ldr	r2, [pc, #476]	; (8008588 <_ZN15Screen2ViewBaseC1Ev+0x394>)
 80083aa:	605c      	str	r4, [r3, #4]
 80083ac:	f244 5340 	movw	r3, #17728	; 0x4540
        : pobject(pobject), pmemfun_0(pmemfun_0)
 80083b0:	4976      	ldr	r1, [pc, #472]	; (800858c <_ZN15Screen2ViewBaseC1Ev+0x398>)
        : pobject(pobject), pmemfun_1(pmemfun_1)
 80083b2:	50e2      	str	r2, [r4, r3]
 80083b4:	f244 5344 	movw	r3, #17732	; 0x4544
    __background.setPosition(0, 0, 800, 480);
 80083b8:	ee19 0a90 	vmov	r0, s19
 80083bc:	50e5      	str	r5, [r4, r3]
 80083be:	f244 5348 	movw	r3, #17736	; 0x4548
 80083c2:	18e2      	adds	r2, r4, r3
 80083c4:	9202      	str	r2, [sp, #8]
 80083c6:	4a72      	ldr	r2, [pc, #456]	; (8008590 <_ZN15Screen2ViewBaseC1Ev+0x39c>)
 80083c8:	50e2      	str	r2, [r4, r3]
 80083ca:	9b02      	ldr	r3, [sp, #8]
 80083cc:	4a71      	ldr	r2, [pc, #452]	; (8008594 <_ZN15Screen2ViewBaseC1Ev+0x3a0>)
 80083ce:	605c      	str	r4, [r3, #4]
 80083d0:	f244 5350 	movw	r3, #17744	; 0x4550
 80083d4:	50e2      	str	r2, [r4, r3]
 80083d6:	f244 5354 	movw	r3, #17748	; 0x4554
 80083da:	50e5      	str	r5, [r4, r3]
        : pobject(pobject), pmemfun_0(pmemfun_0)
 80083dc:	f244 5358 	movw	r3, #17752	; 0x4558
 80083e0:	18e2      	adds	r2, r4, r3
 80083e2:	9204      	str	r2, [sp, #16]
 80083e4:	4a6c      	ldr	r2, [pc, #432]	; (8008598 <_ZN15Screen2ViewBaseC1Ev+0x3a4>)
 80083e6:	50e2      	str	r2, [r4, r3]
 80083e8:	9b04      	ldr	r3, [sp, #16]
 80083ea:	605c      	str	r4, [r3, #4]
 80083ec:	f244 5360 	movw	r3, #17760	; 0x4560
 80083f0:	50e1      	str	r1, [r4, r3]
 80083f2:	f244 5364 	movw	r3, #17764	; 0x4564
 80083f6:	50e5      	str	r5, [r4, r3]
 80083f8:	f244 5368 	movw	r3, #17768	; 0x4568
 80083fc:	18e1      	adds	r1, r4, r3
 80083fe:	50e2      	str	r2, [r4, r3]
 8008400:	f244 5370 	movw	r3, #17776	; 0x4570
 8008404:	4a65      	ldr	r2, [pc, #404]	; (800859c <_ZN15Screen2ViewBaseC1Ev+0x3a8>)
 8008406:	604c      	str	r4, [r1, #4]
 8008408:	50e2      	str	r2, [r4, r3]
 800840a:	f244 5374 	movw	r3, #17780	; 0x4574
 800840e:	9105      	str	r1, [sp, #20]
 8008410:	50e5      	str	r5, [r4, r3]
 8008412:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8008416:	9300      	str	r3, [sp, #0]
 8008418:	462a      	mov	r2, r5
 800841a:	f44f 7348 	mov.w	r3, #800	; 0x320
 800841e:	4629      	mov	r1, r5
 8008420:	f7fa fb46 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8008424:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008428:	66a3      	str	r3, [r4, #104]	; 0x68
    button1.setXY(0, 0);
 800842a:	ee1a 0a10 	vmov	r0, s20
 800842e:	462a      	mov	r2, r5
 8008430:	4629      	mov	r1, r5
 8008432:	f7fa f869 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 8008436:	f10d 0c1c 	add.w	ip, sp, #28
 800843a:	f04f 0001 	mov.w	r0, #1
 800843e:	4661      	mov	r1, ip
 8008440:	f8ad 0020 	strh.w	r0, [sp, #32]
 8008444:	aa08      	add	r2, sp, #32
 8008446:	ee1a 0a10 	vmov	r0, s20
 800844a:	f8ad 501c 	strh.w	r5, [sp, #28]
 800844e:	f00c fde9 	bl	8015024 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        action = &callback;
 8008452:	9b03      	ldr	r3, [sp, #12]
 8008454:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
    customContainerKeyboard1.setXY(0, 480);
 8008458:	ee1b 0a10 	vmov	r0, s22
 800845c:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8008460:	4629      	mov	r1, r5
 8008462:	f7fa f851 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
        this->triggerKeyboardCallback = &callback;
 8008466:	f642 5384 	movw	r3, #11652	; 0x2d84
 800846a:	9a04      	ldr	r2, [sp, #16]
 800846c:	50e2      	str	r2, [r4, r3]
 800846e:	2332      	movs	r3, #50	; 0x32
 8008470:	9300      	str	r3, [sp, #0]
 8008472:	462a      	mov	r2, r5
 8008474:	f44f 73c0 	mov.w	r3, #384	; 0x180
 8008478:	4629      	mov	r1, r5
 800847a:	f106 0034 	add.w	r0, r6, #52	; 0x34
 800847e:	f7fa fb17 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008482:	f642 73ac 	movw	r3, #12204	; 0x2fac
 8008486:	f04f 0c05 	mov.w	ip, #5
 800848a:	f824 c003 	strh.w	ip, [r4, r3]
    flexButton_text_out.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800848e:	4b44      	ldr	r3, [pc, #272]	; (80085a0 <_ZN15Screen2ViewBaseC1Ev+0x3ac>)
 8008490:	9300      	str	r3, [sp, #0]
 8008492:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 8008496:	4a43      	ldr	r2, [pc, #268]	; (80085a4 <_ZN15Screen2ViewBaseC1Ev+0x3b0>)
 8008498:	4943      	ldr	r1, [pc, #268]	; (80085a8 <_ZN15Screen2ViewBaseC1Ev+0x3b4>)
 800849a:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 800849e:	4630      	mov	r0, r6
 80084a0:	f7fa fb42 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton_text_out.setIconBitmaps(Bitmap(BITMAP_KEYBOARD_ID), Bitmap(BITMAP_KEYBOARD_ID));
 80084a4:	f10d 0c1c 	add.w	ip, sp, #28
 80084a8:	2308      	movs	r3, #8
 80084aa:	4661      	mov	r1, ip
 80084ac:	aa08      	add	r2, sp, #32
 80084ae:	4630      	mov	r0, r6
 80084b0:	f8ad 301c 	strh.w	r3, [sp, #28]
 80084b4:	f8ad 3020 	strh.w	r3, [sp, #32]
 80084b8:	f7ff fe6e 	bl	8008198 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
        rect.x = x;
 80084bc:	f642 73c8 	movw	r3, #12232	; 0x2fc8
        wildcardText.setTypedText(t);
 80084c0:	f10d 0c20 	add.w	ip, sp, #32
 80084c4:	4a39      	ldr	r2, [pc, #228]	; (80085ac <_ZN15Screen2ViewBaseC1Ev+0x3b8>)
 80084c6:	50e2      	str	r2, [r4, r3]
 80084c8:	4661      	mov	r1, ip
 80084ca:	4a39      	ldr	r2, [pc, #228]	; (80085b0 <_ZN15Screen2ViewBaseC1Ev+0x3bc>)
 80084cc:	9208      	str	r2, [sp, #32]
 80084ce:	230e      	movs	r3, #14
 80084d0:	4640      	mov	r0, r8
 80084d2:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80084d6:	f00c fd62 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        wildcardText.setWidthHeight(T::getWidth(), T::getHeight());
 80084da:	f642 7352 	movw	r3, #12114	; 0x2f52
 80084de:	4640      	mov	r0, r8
 80084e0:	5ee2      	ldrsh	r2, [r4, r3]
 80084e2:	f642 7350 	movw	r3, #12112	; 0x2f50
 80084e6:	5ee1      	ldrsh	r1, [r4, r3]
 80084e8:	f7f9 fe7b 	bl	80021e2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    flexButton_text_outBuffer[0] = 0;
 80084ec:	f244 43d4 	movw	r3, #17620	; 0x44d4
 80084f0:	18e2      	adds	r2, r4, r3
 80084f2:	52e5      	strh	r5, [r4, r3]
        wildcard = value;
 80084f4:	f243 032c 	movw	r3, #12332	; 0x302c
        wildcardText.setPosition(x, y, width, height);
 80084f8:	f04f 0c32 	mov.w	ip, #50	; 0x32
 80084fc:	f8cd c000 	str.w	ip, [sp]
 8008500:	50e2      	str	r2, [r4, r3]
 8008502:	4640      	mov	r0, r8
 8008504:	f44f 73c0 	mov.w	r3, #384	; 0x180
 8008508:	462a      	mov	r2, r5
 800850a:	4629      	mov	r1, r5
 800850c:	f7fa fad0 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8008510:	f243 0130 	movw	r1, #12336	; 0x3030
 8008514:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 80085bc <_ZN15Screen2ViewBaseC1Ev+0x3c8>
 8008518:	f844 8001 	str.w	r8, [r4, r1]
        colorPressed = newColorPressed;
 800851c:	f243 0134 	movw	r1, #12340	; 0x3034
        handlePressedUpdated();
 8008520:	4630      	mov	r0, r6
        colorPressed = newColorPressed;
 8008522:	f844 8001 	str.w	r8, [r4, r1]
        handlePressedUpdated();
 8008526:	f7ff fdeb 	bl	8008100 <_ZN8touchgfx23WildcardTextButtonStyleINS_15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE20handlePressedUpdatedEv>
    flexButton_text_out.setPosition(407, 25, 384, 50);
 800852a:	2132      	movs	r1, #50	; 0x32
 800852c:	9100      	str	r1, [sp, #0]
 800852e:	f44f 73c0 	mov.w	r3, #384	; 0x180
 8008532:	2219      	movs	r2, #25
 8008534:	f240 1197 	movw	r1, #407	; 0x197
 8008538:	4630      	mov	r0, r6
 800853a:	f7fa fab9 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 800853e:	f642 7378 	movw	r3, #12152	; 0x2f78
 8008542:	9902      	ldr	r1, [sp, #8]
 8008544:	50e1      	str	r1, [r4, r3]
    customContainerKeyboard_Num1.setXY(-270, 180);
 8008546:	ee1a 0a90 	vmov	r0, s21
 800854a:	491a      	ldr	r1, [pc, #104]	; (80085b4 <_ZN15Screen2ViewBaseC1Ev+0x3c0>)
 800854c:	22b4      	movs	r2, #180	; 0xb4
 800854e:	f7f9 ffdb 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
        this->triggerKeyboard_NumCallback = &callback;
 8008552:	f244 03e0 	movw	r3, #16608	; 0x40e0
 8008556:	9905      	ldr	r1, [sp, #20]
 8008558:	50e1      	str	r1, [r4, r3]
 800855a:	ee18 0a90 	vmov	r0, s17
 800855e:	212d      	movs	r1, #45	; 0x2d
 8008560:	9100      	str	r1, [sp, #0]
 8008562:	23c7      	movs	r3, #199	; 0xc7
 8008564:	462a      	mov	r2, r5
 8008566:	4629      	mov	r1, r5
 8008568:	3034      	adds	r0, #52	; 0x34
 800856a:	e029      	b.n	80085c0 <_ZN15Screen2ViewBaseC1Ev+0x3cc>
 800856c:	0802a424 	.word	0x0802a424
 8008570:	0802c304 	.word	0x0802c304
 8008574:	0802a2a4 	.word	0x0802a2a4
 8008578:	0802c52c 	.word	0x0802c52c
 800857c:	0802a340 	.word	0x0802a340
 8008580:	08029634 	.word	0x08029634
 8008584:	0802a3dc 	.word	0x0802a3dc
 8008588:	08008183 	.word	0x08008183
 800858c:	08007faf 	.word	0x08007faf
 8008590:	0802a3f4 	.word	0x0802a3f4
 8008594:	08008135 	.word	0x08008135
 8008598:	0802a40c 	.word	0x0802a40c
 800859c:	08007fb5 	.word	0x08007fb5
 80085a0:	ff336699 	.word	0xff336699
 80085a4:	ff0099cc 	.word	0xff0099cc
 80085a8:	ff006699 	.word	0xff006699
 80085ac:	000e0162 	.word	0x000e0162
 80085b0:	0802958c 	.word	0x0802958c
 80085b4:	fffffef2 	.word	0xfffffef2
 80085b8:	0802c3a8 	.word	0x0802c3a8
 80085bc:	ff0a0a0a 	.word	0xff0a0a0a
 80085c0:	f7fa fa76 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80085c4:	f244 1358 	movw	r3, #16728	; 0x4158
 80085c8:	f04f 0001 	mov.w	r0, #1
 80085cc:	52e0      	strh	r0, [r4, r3]
    flexButton_text_out_Num.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80085ce:	4bc8      	ldr	r3, [pc, #800]	; (80088f0 <_ZN15Screen2ViewBaseC1Ev+0x6fc>)
 80085d0:	9300      	str	r3, [sp, #0]
 80085d2:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 80085d6:	4ac7      	ldr	r2, [pc, #796]	; (80088f4 <_ZN15Screen2ViewBaseC1Ev+0x700>)
 80085d8:	49c7      	ldr	r1, [pc, #796]	; (80088f8 <_ZN15Screen2ViewBaseC1Ev+0x704>)
 80085da:	ee18 0a90 	vmov	r0, s17
 80085de:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 80085e2:	f7fa faa1 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 80085e6:	4ac5      	ldr	r2, [pc, #788]	; (80088fc <_ZN15Screen2ViewBaseC1Ev+0x708>)
 80085e8:	9208      	str	r2, [sp, #32]
 80085ea:	2317      	movs	r3, #23
        wildcardText.setTypedText(t);
 80085ec:	a908      	add	r1, sp, #32
 80085ee:	4638      	mov	r0, r7
 80085f0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80085f4:	f00c fcd3 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        wildcardText.setWidthHeight(T::getWidth(), T::getHeight());
 80085f8:	f244 03fe 	movw	r3, #16638	; 0x40fe
 80085fc:	4638      	mov	r0, r7
 80085fe:	5ee2      	ldrsh	r2, [r4, r3]
 8008600:	f244 03fc 	movw	r3, #16636	; 0x40fc
 8008604:	5ee1      	ldrsh	r1, [r4, r3]
 8008606:	f7f9 fdec 	bl	80021e2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    Unicode::snprintf(flexButton_text_out_NumBuffer, FLEXBUTTON_TEXT_OUT_NUM_SIZE, "%s", TypedText(T___SINGLEUSE_D72U).getText());
 800860a:	f504 438a 	add.w	r3, r4, #17664	; 0x4500
 800860e:	3324      	adds	r3, #36	; 0x24
 8008610:	9303      	str	r3, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008612:	4bbb      	ldr	r3, [pc, #748]	; (8008900 <_ZN15Screen2ViewBaseC1Ev+0x70c>)
 8008614:	681b      	ldr	r3, [r3, #0]
 8008616:	b92b      	cbnz	r3, 8008624 <_ZN15Screen2ViewBaseC1Ev+0x430>
 8008618:	4bba      	ldr	r3, [pc, #744]	; (8008904 <_ZN15Screen2ViewBaseC1Ev+0x710>)
 800861a:	4abb      	ldr	r2, [pc, #748]	; (8008908 <_ZN15Screen2ViewBaseC1Ev+0x714>)
 800861c:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800861e:	48bb      	ldr	r0, [pc, #748]	; (800890c <_ZN15Screen2ViewBaseC1Ev+0x718>)
 8008620:	f01f f8ae 	bl	8027780 <__assert_func>
 8008624:	4bba      	ldr	r3, [pc, #744]	; (8008910 <_ZN15Screen2ViewBaseC1Ev+0x71c>)
 8008626:	881b      	ldrh	r3, [r3, #0]
 8008628:	2b18      	cmp	r3, #24
 800862a:	d803      	bhi.n	8008634 <_ZN15Screen2ViewBaseC1Ev+0x440>
 800862c:	4bb9      	ldr	r3, [pc, #740]	; (8008914 <_ZN15Screen2ViewBaseC1Ev+0x720>)
 800862e:	4ab6      	ldr	r2, [pc, #728]	; (8008908 <_ZN15Screen2ViewBaseC1Ev+0x714>)
 8008630:	21af      	movs	r1, #175	; 0xaf
 8008632:	e7f4      	b.n	800861e <_ZN15Screen2ViewBaseC1Ev+0x42a>
        return texts->getText(typedTextId);
 8008634:	4bb8      	ldr	r3, [pc, #736]	; (8008918 <_ZN15Screen2ViewBaseC1Ev+0x724>)
 8008636:	2118      	movs	r1, #24
 8008638:	6818      	ldr	r0, [r3, #0]
 800863a:	f000 fae5 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 800863e:	4ab7      	ldr	r2, [pc, #732]	; (800891c <_ZN15Screen2ViewBaseC1Ev+0x728>)
 8008640:	4603      	mov	r3, r0
 8008642:	210a      	movs	r1, #10
 8008644:	9803      	ldr	r0, [sp, #12]
 8008646:	f012 fd41 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800864a:	f244 13a8 	movw	r3, #16808	; 0x41a8
 800864e:	9a03      	ldr	r2, [sp, #12]
 8008650:	50e2      	str	r2, [r4, r3]
        wildcardText.setPosition(x, y, width, height);
 8008652:	232d      	movs	r3, #45	; 0x2d
 8008654:	4629      	mov	r1, r5
 8008656:	9300      	str	r3, [sp, #0]
 8008658:	2207      	movs	r2, #7
 800865a:	4638      	mov	r0, r7
 800865c:	23c7      	movs	r3, #199	; 0xc7
 800865e:	f7fa fa27 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8008662:	f244 13ac 	movw	r3, #16812	; 0x41ac
        handlePressedUpdated();
 8008666:	ee18 0a90 	vmov	r0, s17
        colorReleased = newColorReleased;
 800866a:	f844 8003 	str.w	r8, [r4, r3]
        colorPressed = newColorPressed;
 800866e:	f244 13b0 	movw	r3, #16816	; 0x41b0
 8008672:	2746      	movs	r7, #70	; 0x46
 8008674:	f844 8003 	str.w	r8, [r4, r3]
        handlePressedUpdated();
 8008678:	f7f9 fe91 	bl	800239e <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_text_out_Num.setPosition(178, 30, 199, 45);
 800867c:	232d      	movs	r3, #45	; 0x2d
 800867e:	ee18 0a90 	vmov	r0, s17
 8008682:	9300      	str	r3, [sp, #0]
 8008684:	221e      	movs	r2, #30
 8008686:	23c7      	movs	r3, #199	; 0xc7
 8008688:	21b2      	movs	r1, #178	; 0xb2
 800868a:	f7fa fa11 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 800868e:	f244 1324 	movw	r3, #16676	; 0x4124
 8008692:	9a02      	ldr	r2, [sp, #8]
 8008694:	50e2      	str	r2, [r4, r3]
 8008696:	4629      	mov	r1, r5
 8008698:	462a      	mov	r2, r5
 800869a:	f109 0034 	add.w	r0, r9, #52	; 0x34
 800869e:	9700      	str	r7, [sp, #0]
 80086a0:	23a0      	movs	r3, #160	; 0xa0
 80086a2:	f7fa fa05 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80086a6:	f244 2318 	movw	r3, #16920	; 0x4218
 80086aa:	f04f 0205 	mov.w	r2, #5
 80086ae:	52e2      	strh	r2, [r4, r3]
    flexButtonSave.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80086b0:	4b8f      	ldr	r3, [pc, #572]	; (80088f0 <_ZN15Screen2ViewBaseC1Ev+0x6fc>)
 80086b2:	9300      	str	r3, [sp, #0]
 80086b4:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 80086b8:	4a8e      	ldr	r2, [pc, #568]	; (80088f4 <_ZN15Screen2ViewBaseC1Ev+0x700>)
 80086ba:	498f      	ldr	r1, [pc, #572]	; (80088f8 <_ZN15Screen2ViewBaseC1Ev+0x704>)
 80086bc:	4648      	mov	r0, r9
 80086be:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 80086c2:	f7fa fa31 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 80086c6:	4b8d      	ldr	r3, [pc, #564]	; (80088fc <_ZN15Screen2ViewBaseC1Ev+0x708>)
 80086c8:	9308      	str	r3, [sp, #32]
    flexButtonSave.setText(TypedText(T___SINGLEUSE_QKLS));
 80086ca:	a908      	add	r1, sp, #32
 80086cc:	231d      	movs	r3, #29
 80086ce:	4648      	mov	r0, r9
 80086d0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80086d4:	f7fa fa34 	bl	8002b40 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 80086d8:	4629      	mov	r1, r5
 80086da:	220a      	movs	r2, #10
 80086dc:	f109 0078 	add.w	r0, r9, #120	; 0x78
 80086e0:	9700      	str	r7, [sp, #0]
 80086e2:	23a0      	movs	r3, #160	; 0xa0
 80086e4:	f7fa f9e4 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 80086e8:	f244 2368 	movw	r3, #17000	; 0x4268
        handlePressedUpdated();
 80086ec:	4648      	mov	r0, r9
        colorReleased = newColorReleased;
 80086ee:	f844 8003 	str.w	r8, [r4, r3]
        colorPressed = newColorPressed;
 80086f2:	f244 236c 	movw	r3, #17004	; 0x426c
 80086f6:	f844 8003 	str.w	r8, [r4, r3]
        handlePressedUpdated();
 80086fa:	f7fa f884 	bl	8002806 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonSave.setPosition(631, 368, 160, 70);
 80086fe:	4648      	mov	r0, r9
 8008700:	9700      	str	r7, [sp, #0]
 8008702:	23a0      	movs	r3, #160	; 0xa0
 8008704:	f44f 72b8 	mov.w	r2, #368	; 0x170
 8008708:	f240 2177 	movw	r1, #631	; 0x277
 800870c:	f7fa f9d0 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008710:	f244 13e4 	movw	r3, #16868	; 0x41e4
 8008714:	9902      	ldr	r1, [sp, #8]
 8008716:	50e1      	str	r1, [r4, r3]
    modalWindow1.setBackground(touchgfx::BitmapId(BITMAP_DARK_BACKGROUNDS_MAIN_BG_320X240PX_ID), 240, 120);
 8008718:	2302      	movs	r3, #2
 800871a:	22f0      	movs	r2, #240	; 0xf0
 800871c:	f8ad 3020 	strh.w	r3, [sp, #32]
 8008720:	a908      	add	r1, sp, #32
 8008722:	2378      	movs	r3, #120	; 0x78
 8008724:	4650      	mov	r0, sl
 8008726:	f00a fd72 	bl	801320e <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>
    modalWindow1.setShadeColor(touchgfx::Color::getColorFromRGB(28, 28, 28));
 800872a:	4650      	mov	r0, sl
 800872c:	497c      	ldr	r1, [pc, #496]	; (8008920 <_ZN15Screen2ViewBaseC1Ev+0x72c>)
 800872e:	f00a fd5b 	bl	80131e8 <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>
    modalWindow1.setShadeAlpha(149);
 8008732:	2195      	movs	r1, #149	; 0x95
 8008734:	4650      	mov	r0, sl
 8008736:	f00a fd5b 	bl	80131f0 <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>
    modalWindow1.hide();
 800873a:	4650      	mov	r0, sl
 800873c:	f00a fd4a 	bl	80131d4 <_ZN8touchgfx11ModalWindow4hideEv>
 8008740:	ee18 0a10 	vmov	r0, s16
 8008744:	462a      	mov	r2, r5
 8008746:	4629      	mov	r1, r5
 8008748:	9700      	str	r7, [sp, #0]
 800874a:	2364      	movs	r3, #100	; 0x64
 800874c:	3034      	adds	r0, #52	; 0x34
 800874e:	f7fa f9af 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonSaveNo.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8008752:	4a67      	ldr	r2, [pc, #412]	; (80088f0 <_ZN15Screen2ViewBaseC1Ev+0x6fc>)
 8008754:	9200      	str	r2, [sp, #0]
 8008756:	f244 3384 	movw	r3, #17284	; 0x4384
 800875a:	f04f 0105 	mov.w	r1, #5
 800875e:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 8008762:	52e1      	strh	r1, [r4, r3]
 8008764:	ee18 0a10 	vmov	r0, s16
 8008768:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 800876c:	4b6d      	ldr	r3, [pc, #436]	; (8008924 <_ZN15Screen2ViewBaseC1Ev+0x730>)
 800876e:	4962      	ldr	r1, [pc, #392]	; (80088f8 <_ZN15Screen2ViewBaseC1Ev+0x704>)
 8008770:	f7fa f9da 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButtonSaveNo.setText(TypedText(T___SINGLEUSE_XFCU));
 8008774:	a808      	add	r0, sp, #32
 8008776:	4b61      	ldr	r3, [pc, #388]	; (80088fc <_ZN15Screen2ViewBaseC1Ev+0x708>)
 8008778:	9308      	str	r3, [sp, #32]
 800877a:	4601      	mov	r1, r0
 800877c:	231e      	movs	r3, #30
 800877e:	ee18 0a10 	vmov	r0, s16
 8008782:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008786:	f7fa f9db 	bl	8002b40 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 800878a:	ee18 0a10 	vmov	r0, s16
 800878e:	4629      	mov	r1, r5
 8008790:	2214      	movs	r2, #20
 8008792:	9700      	str	r7, [sp, #0]
 8008794:	2364      	movs	r3, #100	; 0x64
 8008796:	3078      	adds	r0, #120	; 0x78
 8008798:	f7fa f98a 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 800879c:	f244 33d4 	movw	r3, #17364	; 0x43d4
        handlePressedUpdated();
 80087a0:	ee18 0a10 	vmov	r0, s16
        colorReleased = newColorReleased;
 80087a4:	f844 8003 	str.w	r8, [r4, r3]
        colorPressed = newColorPressed;
 80087a8:	f244 33d8 	movw	r3, #17368	; 0x43d8
 80087ac:	f844 8003 	str.w	r8, [r4, r3]
        handlePressedUpdated();
 80087b0:	f7fa f829 	bl	8002806 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonSaveNo.setPosition(196, 120, 100, 70);
 80087b4:	ee18 0a10 	vmov	r0, s16
 80087b8:	2278      	movs	r2, #120	; 0x78
 80087ba:	9700      	str	r7, [sp, #0]
 80087bc:	2364      	movs	r3, #100	; 0x64
 80087be:	21c4      	movs	r1, #196	; 0xc4
 80087c0:	f7fa f976 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80087c4:	f244 3350 	movw	r3, #17232	; 0x4350
 80087c8:	9902      	ldr	r1, [sp, #8]
 80087ca:	50e1      	str	r1, [r4, r3]
    modalWindow1.add(flexButtonSaveNo);
 80087cc:	4650      	mov	r0, sl
 80087ce:	ee18 1a10 	vmov	r1, s16
 80087d2:	f00a fd06 	bl	80131e2 <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
 80087d6:	462a      	mov	r2, r5
 80087d8:	4629      	mov	r1, r5
 80087da:	f10b 0034 	add.w	r0, fp, #52	; 0x34
 80087de:	9700      	str	r7, [sp, #0]
 80087e0:	2364      	movs	r3, #100	; 0x64
 80087e2:	f7fa f965 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonSaveYes.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80087e6:	4a42      	ldr	r2, [pc, #264]	; (80088f0 <_ZN15Screen2ViewBaseC1Ev+0x6fc>)
 80087e8:	9200      	str	r2, [sp, #0]
 80087ea:	f244 4340 	movw	r3, #17472	; 0x4440
 80087ee:	f04f 0105 	mov.w	r1, #5
 80087f2:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 80087f6:	52e1      	strh	r1, [r4, r3]
 80087f8:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 80087fc:	4658      	mov	r0, fp
 80087fe:	4b49      	ldr	r3, [pc, #292]	; (8008924 <_ZN15Screen2ViewBaseC1Ev+0x730>)
 8008800:	493d      	ldr	r1, [pc, #244]	; (80088f8 <_ZN15Screen2ViewBaseC1Ev+0x704>)
 8008802:	f7fa f991 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8008806:	4b3d      	ldr	r3, [pc, #244]	; (80088fc <_ZN15Screen2ViewBaseC1Ev+0x708>)
 8008808:	9308      	str	r3, [sp, #32]
    flexButtonSaveYes.setText(TypedText(T___SINGLEUSE_KVEN));
 800880a:	a908      	add	r1, sp, #32
 800880c:	231f      	movs	r3, #31
 800880e:	4658      	mov	r0, fp
 8008810:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008814:	f7fa f994 	bl	8002b40 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8008818:	4629      	mov	r1, r5
 800881a:	2214      	movs	r2, #20
 800881c:	f10b 0078 	add.w	r0, fp, #120	; 0x78
 8008820:	9700      	str	r7, [sp, #0]
 8008822:	2364      	movs	r3, #100	; 0x64
 8008824:	f7fa f944 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8008828:	f244 4390 	movw	r3, #17552	; 0x4490
        handlePressedUpdated();
 800882c:	4658      	mov	r0, fp
        colorReleased = newColorReleased;
 800882e:	f844 8003 	str.w	r8, [r4, r3]
        colorPressed = newColorPressed;
 8008832:	f244 4394 	movw	r3, #17556	; 0x4494
 8008836:	f844 8003 	str.w	r8, [r4, r3]
        handlePressedUpdated();
 800883a:	f7f9 ffe4 	bl	8002806 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonSaveYes.setPosition(37, 120, 100, 70);
 800883e:	4658      	mov	r0, fp
 8008840:	9700      	str	r7, [sp, #0]
 8008842:	2364      	movs	r3, #100	; 0x64
 8008844:	2278      	movs	r2, #120	; 0x78
 8008846:	2125      	movs	r1, #37	; 0x25
 8008848:	f7fa f932 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
 800884c:	f244 430c 	movw	r3, #17420	; 0x440c
 8008850:	9a02      	ldr	r2, [sp, #8]
 8008852:	50e2      	str	r2, [r4, r3]
    modalWindow1.add(flexButtonSaveYes);
 8008854:	4659      	mov	r1, fp
 8008856:	4650      	mov	r0, sl
 8008858:	f00a fcc3 	bl	80131e2 <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    textArea1.setXY(50, 60);
 800885c:	ee19 0a10 	vmov	r0, s18
 8008860:	223c      	movs	r2, #60	; 0x3c
 8008862:	2132      	movs	r1, #50	; 0x32
 8008864:	f7f9 fe50 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 8008868:	f244 43c8 	movw	r3, #17608	; 0x44c8
 800886c:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 8008870:	50e2      	str	r2, [r4, r3]
        linespace = space;
 8008872:	ee19 2a10 	vmov	r2, s18
 8008876:	4b21      	ldr	r3, [pc, #132]	; (80088fc <_ZN15Screen2ViewBaseC1Ev+0x708>)
 8008878:	9308      	str	r3, [sp, #32]
 800887a:	2320      	movs	r3, #32
 800887c:	8695      	strh	r5, [r2, #52]	; 0x34
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5CIK));
 800887e:	eb0d 0103 	add.w	r1, sp, r3
 8008882:	ee19 0a10 	vmov	r0, s18
 8008886:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800888a:	1d25      	adds	r5, r4, #4
 800888c:	f00c fb87 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    modalWindow1.add(textArea1);
 8008890:	ee19 1a10 	vmov	r1, s18
 8008894:	4650      	mov	r0, sl
 8008896:	f00a fca4 	bl	80131e2 <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
 800889a:	ee19 1a90 	vmov	r1, s19
 800889e:	4628      	mov	r0, r5
 80088a0:	f00a fde6 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80088a4:	ee1a 1a10 	vmov	r1, s20
 80088a8:	4628      	mov	r0, r5
 80088aa:	f00a fde1 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80088ae:	ee1b 1a10 	vmov	r1, s22
 80088b2:	4628      	mov	r0, r5
 80088b4:	f00a fddc 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80088b8:	4631      	mov	r1, r6
 80088ba:	4628      	mov	r0, r5
 80088bc:	f00a fdd8 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80088c0:	ee1a 1a90 	vmov	r1, s21
 80088c4:	4628      	mov	r0, r5
 80088c6:	f00a fdd3 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80088ca:	ee18 1a90 	vmov	r1, s17
 80088ce:	4628      	mov	r0, r5
 80088d0:	f00a fdce 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80088d4:	4649      	mov	r1, r9
 80088d6:	4628      	mov	r0, r5
 80088d8:	f00a fdca 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80088dc:	4628      	mov	r0, r5
 80088de:	4651      	mov	r1, sl
 80088e0:	f00a fdc6 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80088e4:	4620      	mov	r0, r4
 80088e6:	b00b      	add	sp, #44	; 0x2c
 80088e8:	ecbd 8b08 	vpop	{d8-d11}
 80088ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80088f0:	ff336699 	.word	0xff336699
 80088f4:	ff0099cc 	.word	0xff0099cc
 80088f8:	ff006699 	.word	0xff006699
 80088fc:	0802958c 	.word	0x0802958c
 8008900:	2002bd84 	.word	0x2002bd84
 8008904:	08029478 	.word	0x08029478
 8008908:	080294ba 	.word	0x080294ba
 800890c:	080294e8 	.word	0x080294e8
 8008910:	2002bd88 	.word	0x2002bd88
 8008914:	0802952f 	.word	0x0802952f
 8008918:	2002bd90 	.word	0x2002bd90
 800891c:	08029581 	.word	0x08029581
 8008920:	ff1c1c1c 	.word	0xff1c1c1c
 8008924:	ff003366 	.word	0xff003366

08008928 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 155, 10, 2, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008928:	4770      	bx	lr
	...

0800892c <_Z23getFont_verdana_10_4bppv>:
{
 800892c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 155, 10, 2, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800892e:	4d16      	ldr	r5, [pc, #88]	; (8008988 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8008930:	782c      	ldrb	r4, [r5, #0]
 8008932:	f3bf 8f5b 	dmb	ish
 8008936:	f014 0401 	ands.w	r4, r4, #1
{
 800893a:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 155, 10, 2, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800893c:	d120      	bne.n	8008980 <_Z23getFont_verdana_10_4bppv+0x54>
 800893e:	4628      	mov	r0, r5
 8008940:	f01e fef2 	bl	8027728 <__cxa_guard_acquire>
 8008944:	b1e0      	cbz	r0, 8008980 <_Z23getFont_verdana_10_4bppv+0x54>
 8008946:	233f      	movs	r3, #63	; 0x3f
 8008948:	9307      	str	r3, [sp, #28]
 800894a:	4b10      	ldr	r3, [pc, #64]	; (800898c <_Z23getFont_verdana_10_4bppv+0x60>)
 800894c:	9306      	str	r3, [sp, #24]
 800894e:	4b10      	ldr	r3, [pc, #64]	; (8008990 <_Z23getFont_verdana_10_4bppv+0x64>)
 8008950:	9305      	str	r3, [sp, #20]
 8008952:	2301      	movs	r3, #1
 8008954:	e9cd 3303 	strd	r3, r3, [sp, #12]
 8008958:	9302      	str	r3, [sp, #8]
 800895a:	2204      	movs	r2, #4
 800895c:	2302      	movs	r3, #2
 800895e:	e9cd 3200 	strd	r3, r2, [sp]
 8008962:	490c      	ldr	r1, [pc, #48]	; (8008994 <_Z23getFont_verdana_10_4bppv+0x68>)
 8008964:	480c      	ldr	r0, [pc, #48]	; (8008998 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8008966:	9408      	str	r4, [sp, #32]
 8008968:	230a      	movs	r3, #10
 800896a:	229b      	movs	r2, #155	; 0x9b
 800896c:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8008970:	f7fc ff2c 	bl	80057cc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008974:	4628      	mov	r0, r5
 8008976:	f01e fee3 	bl	8027740 <__cxa_guard_release>
 800897a:	4808      	ldr	r0, [pc, #32]	; (800899c <_Z23getFont_verdana_10_4bppv+0x70>)
 800897c:	f01e ff1e 	bl	80277bc <atexit>
    return verdana_10_4bpp;
}
 8008980:	4805      	ldr	r0, [pc, #20]	; (8008998 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8008982:	b00d      	add	sp, #52	; 0x34
 8008984:	bd30      	pop	{r4, r5, pc}
 8008986:	bf00      	nop
 8008988:	2001ac70 	.word	0x2001ac70
 800898c:	0802dd9c 	.word	0x0802dd9c
 8008990:	0802e18c 	.word	0x0802e18c
 8008994:	90124258 	.word	0x90124258
 8008998:	2001ac74 	.word	0x2001ac74
 800899c:	08008929 	.word	0x08008929

080089a0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_15_4bpp();

touchgfx::GeneratedFont& getFont_verdana_15_4bpp()
{
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 155, 15, 3, 4, 1, 1, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 80089a0:	4770      	bx	lr
	...

080089a4 <_Z23getFont_verdana_15_4bppv>:
{
 80089a4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 155, 15, 3, 4, 1, 1, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 80089a6:	4d16      	ldr	r5, [pc, #88]	; (8008a00 <_Z23getFont_verdana_15_4bppv+0x5c>)
 80089a8:	782c      	ldrb	r4, [r5, #0]
 80089aa:	f3bf 8f5b 	dmb	ish
 80089ae:	f014 0401 	ands.w	r4, r4, #1
{
 80089b2:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 155, 15, 3, 4, 1, 1, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 80089b4:	d120      	bne.n	80089f8 <_Z23getFont_verdana_15_4bppv+0x54>
 80089b6:	4628      	mov	r0, r5
 80089b8:	f01e feb6 	bl	8027728 <__cxa_guard_acquire>
 80089bc:	b1e0      	cbz	r0, 80089f8 <_Z23getFont_verdana_15_4bppv+0x54>
 80089be:	233f      	movs	r3, #63	; 0x3f
 80089c0:	9307      	str	r3, [sp, #28]
 80089c2:	4b10      	ldr	r3, [pc, #64]	; (8008a04 <_Z23getFont_verdana_15_4bppv+0x60>)
 80089c4:	9306      	str	r3, [sp, #24]
 80089c6:	4b10      	ldr	r3, [pc, #64]	; (8008a08 <_Z23getFont_verdana_15_4bppv+0x64>)
 80089c8:	9305      	str	r3, [sp, #20]
 80089ca:	2301      	movs	r3, #1
 80089cc:	e9cd 3303 	strd	r3, r3, [sp, #12]
 80089d0:	9302      	str	r3, [sp, #8]
 80089d2:	2204      	movs	r2, #4
 80089d4:	2303      	movs	r3, #3
 80089d6:	e9cd 3200 	strd	r3, r2, [sp]
 80089da:	490c      	ldr	r1, [pc, #48]	; (8008a0c <_Z23getFont_verdana_15_4bppv+0x68>)
 80089dc:	480c      	ldr	r0, [pc, #48]	; (8008a10 <_Z23getFont_verdana_15_4bppv+0x6c>)
 80089de:	9408      	str	r4, [sp, #32]
 80089e0:	230f      	movs	r3, #15
 80089e2:	229b      	movs	r2, #155	; 0x9b
 80089e4:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80089e8:	f7fc fef0 	bl	80057cc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80089ec:	4628      	mov	r0, r5
 80089ee:	f01e fea7 	bl	8027740 <__cxa_guard_release>
 80089f2:	4808      	ldr	r0, [pc, #32]	; (8008a14 <_Z23getFont_verdana_15_4bppv+0x70>)
 80089f4:	f01e fee2 	bl	80277bc <atexit>
    return verdana_15_4bpp;
}
 80089f8:	4805      	ldr	r0, [pc, #20]	; (8008a10 <_Z23getFont_verdana_15_4bppv+0x6c>)
 80089fa:	b00d      	add	sp, #52	; 0x34
 80089fc:	bd30      	pop	{r4, r5, pc}
 80089fe:	bf00      	nop
 8008a00:	2001ac9c 	.word	0x2001ac9c
 8008a04:	0802ddd0 	.word	0x0802ddd0
 8008a08:	0802e190 	.word	0x0802e190
 8008a0c:	90124ad4 	.word	0x90124ad4
 8008a10:	2001aca0 	.word	0x2001aca0
 8008a14:	080089a1 	.word	0x080089a1

08008a18 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 154, 40, 8, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008a18:	4770      	bx	lr
	...

08008a1c <_Z23getFont_verdana_40_4bppv>:
{
 8008a1c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 154, 40, 8, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008a1e:	4d16      	ldr	r5, [pc, #88]	; (8008a78 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8008a20:	782c      	ldrb	r4, [r5, #0]
 8008a22:	f3bf 8f5b 	dmb	ish
 8008a26:	f014 0401 	ands.w	r4, r4, #1
{
 8008a2a:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 154, 40, 8, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008a2c:	d121      	bne.n	8008a72 <_Z23getFont_verdana_40_4bppv+0x56>
 8008a2e:	4628      	mov	r0, r5
 8008a30:	f01e fe7a 	bl	8027728 <__cxa_guard_acquire>
 8008a34:	b1e8      	cbz	r0, 8008a72 <_Z23getFont_verdana_40_4bppv+0x56>
 8008a36:	233f      	movs	r3, #63	; 0x3f
 8008a38:	9307      	str	r3, [sp, #28]
 8008a3a:	4b10      	ldr	r3, [pc, #64]	; (8008a7c <_Z23getFont_verdana_40_4bppv+0x60>)
 8008a3c:	9306      	str	r3, [sp, #24]
 8008a3e:	4b10      	ldr	r3, [pc, #64]	; (8008a80 <_Z23getFont_verdana_40_4bppv+0x64>)
 8008a40:	9305      	str	r3, [sp, #20]
 8008a42:	2302      	movs	r3, #2
 8008a44:	e9cd 3303 	strd	r3, r3, [sp, #12]
 8008a48:	2201      	movs	r2, #1
 8008a4a:	2304      	movs	r3, #4
 8008a4c:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8008a50:	2308      	movs	r3, #8
 8008a52:	490c      	ldr	r1, [pc, #48]	; (8008a84 <_Z23getFont_verdana_40_4bppv+0x68>)
 8008a54:	9300      	str	r3, [sp, #0]
 8008a56:	229a      	movs	r2, #154	; 0x9a
 8008a58:	2328      	movs	r3, #40	; 0x28
 8008a5a:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8008a5e:	480a      	ldr	r0, [pc, #40]	; (8008a88 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8008a60:	9408      	str	r4, [sp, #32]
 8008a62:	f7fc feb3 	bl	80057cc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008a66:	4628      	mov	r0, r5
 8008a68:	f01e fe6a 	bl	8027740 <__cxa_guard_release>
 8008a6c:	4807      	ldr	r0, [pc, #28]	; (8008a8c <_Z23getFont_verdana_40_4bppv+0x70>)
 8008a6e:	f01e fea5 	bl	80277bc <atexit>
    return verdana_40_4bpp;
}
 8008a72:	4805      	ldr	r0, [pc, #20]	; (8008a88 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8008a74:	b00d      	add	sp, #52	; 0x34
 8008a76:	bd30      	pop	{r4, r5, pc}
 8008a78:	2001acc8 	.word	0x2001acc8
 8008a7c:	0802deac 	.word	0x0802deac
 8008a80:	0802e194 	.word	0x0802e194
 8008a84:	90125350 	.word	0x90125350
 8008a88:	2001accc 	.word	0x2001accc
 8008a8c:	08008a19 	.word	0x08008a19

08008a90 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8008a90:	2000      	movs	r0, #0
 8008a92:	4770      	bx	lr

08008a94 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8008a94:	2000      	movs	r0, #0
 8008a96:	4770      	bx	lr

08008a98 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008a98:	b40e      	push	{r1, r2, r3}
 8008a9a:	b503      	push	{r0, r1, lr}
 8008a9c:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthRTL(TEXT_DIRECTION_LTR, text, pArg);
 8008a9e:	2100      	movs	r1, #0
{
 8008aa0:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8008aa4:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthRTL(TEXT_DIRECTION_LTR, text, pArg);
 8008aa6:	f00f fd13 	bl	80184d0 <_ZNK8touchgfx4Font17getStringWidthRTLEhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8008aaa:	b002      	add	sp, #8
 8008aac:	f85d eb04 	ldr.w	lr, [sp], #4
 8008ab0:	b003      	add	sp, #12
 8008ab2:	4770      	bx	lr

08008ab4 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008ab4:	b40c      	push	{r2, r3}
 8008ab6:	b507      	push	{r0, r1, r2, lr}
 8008ab8:	ab04      	add	r3, sp, #16
 8008aba:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8008abe:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthRTL(textDirection, text, pArg);
 8008ac0:	f00f fd06 	bl	80184d0 <_ZNK8touchgfx4Font17getStringWidthRTLEhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8008ac4:	b003      	add	sp, #12
 8008ac6:	f85d eb04 	ldr.w	lr, [sp], #4
 8008aca:	b002      	add	sp, #8
 8008acc:	4770      	bx	lr
	...

08008ad0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 8008ad0:	b510      	push	{r4, lr}
 8008ad2:	4604      	mov	r4, r0
    nextCharacters.replaceAt0(unicodeConverter(direction));
 8008ad4:	f010 fb90 	bl	80191f8 <_ZN8touchgfx12TextProvider16unicodeConverterEh>
            assert(used < size);
            replaceAt(++used - 1, newChar);
        }
        FORCE_INLINE_FUNCTION void replaceAt0(Unicode::UnicodeChar newChar)
        {
            buffer[pos] = newChar;
 8008ad8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008ada:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8008ade:	8458      	strh	r0, [r3, #34]	; 0x22
    if (fontGsubTable && nextCharacters.peekChar())
 8008ae0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8008ae2:	b35b      	cbz	r3, 8008b3c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6c>
            assert(used > 0);
 8008ae4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8008ae6:	b92b      	cbnz	r3, 8008af4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x24>
 8008ae8:	4b17      	ldr	r3, [pc, #92]	; (8008b48 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8008aea:	4a18      	ldr	r2, [pc, #96]	; (8008b4c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8008aec:	21c0      	movs	r1, #192	; 0xc0
            assert(offset < used);
 8008aee:	4818      	ldr	r0, [pc, #96]	; (8008b50 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8008af0:	f01e fe46 	bl	8027780 <__assert_func>
 8008af4:	b310      	cbz	r0, 8008b3c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6c>
    {
        substituteGlyphs();
 8008af6:	4620      	mov	r0, r4
 8008af8:	f011 fd0a 	bl	801a510 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
 8008afc:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8008afe:	2b01      	cmp	r3, #1
 8008b00:	d803      	bhi.n	8008b0a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x3a>
 8008b02:	4b14      	ldr	r3, [pc, #80]	; (8008b54 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x84>)
 8008b04:	4a14      	ldr	r2, [pc, #80]	; (8008b58 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x88>)
 8008b06:	21c5      	movs	r1, #197	; 0xc5
 8008b08:	e7f1      	b.n	8008aee <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x1e>
            const uint16_t index = pos + offset;
 8008b0a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8008b0c:	1c53      	adds	r3, r2, #1
 8008b0e:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8008b10:	2b09      	cmp	r3, #9
 8008b12:	4619      	mov	r1, r3
 8008b14:	bf88      	it	hi
 8008b16:	f1a3 010a 	subhi.w	r1, r3, #10
 8008b1a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8008b1e:	f640 103f 	movw	r0, #2367	; 0x93f
 8008b22:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8008b24:	4281      	cmp	r1, r0
 8008b26:	d109      	bne.n	8008b3c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6c>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8008b28:	2b0a      	cmp	r3, #10
 8008b2a:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8008b2e:	bf28      	it	cs
 8008b30:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8008b32:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8008b36:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8008b38:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8008b3a:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8008b3c:	4620      	mov	r0, r4
}
 8008b3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8008b42:	f011 bbc9 	b.w	801a2d8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8008b46:	bf00      	nop
 8008b48:	0802a468 	.word	0x0802a468
 8008b4c:	0802a471 	.word	0x0802a471
 8008b50:	0802a51c 	.word	0x0802a51c
 8008b54:	0802a566 	.word	0x0802a566
 8008b58:	0802a574 	.word	0x0802a574

08008b5c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 8008b5c:	b510      	push	{r4, lr}
 8008b5e:	4604      	mov	r4, r0
    fillInputBuffer();
 8008b60:	f011 fb72 	bl	801a248 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
    unicodeConverterInit();
 8008b64:	4620      	mov	r0, r4
}
 8008b66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    unicodeConverterInit();
 8008b6a:	f010 bb40 	b.w	80191ee <_ZN8touchgfx12TextProvider20unicodeConverterInitEv>

08008b6e <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8008b6e:	b510      	push	{r4, lr}
 8008b70:	b086      	sub	sp, #24
 8008b72:	ac02      	add	r4, sp, #8
 8008b74:	e884 0006 	stmia.w	r4, {r1, r2}
 8008b78:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8008b7a:	ab0a      	add	r3, sp, #40	; 0x28
 8008b7c:	9305      	str	r3, [sp, #20]
    drawStringRTL(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8008b7e:	9301      	str	r3, [sp, #4]
 8008b80:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008b82:	9300      	str	r3, [sp, #0]
 8008b84:	4621      	mov	r1, r4
 8008b86:	9b08      	ldr	r3, [sp, #32]
 8008b88:	f00e f94a 	bl	8016e20 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8008b8c:	b006      	add	sp, #24
 8008b8e:	bd10      	pop	{r4, pc}

08008b90 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8008b90:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8008b92:	bb18      	cbnz	r0, 8008bdc <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8008b94:	4b12      	ldr	r3, [pc, #72]	; (8008be0 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8008b96:	4813      	ldr	r0, [pc, #76]	; (8008be4 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8008b98:	681b      	ldr	r3, [r3, #0]
 8008b9a:	4913      	ldr	r1, [pc, #76]	; (8008be8 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8008b9c:	b1b3      	cbz	r3, 8008bcc <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8008b9e:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8008ba0:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8008ba2:	441a      	add	r2, r3
 8008ba4:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8008ba6:	685a      	ldr	r2, [r3, #4]
 8008ba8:	441a      	add	r2, r3
 8008baa:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8008bac:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8008bae:	4b0f      	ldr	r3, [pc, #60]	; (8008bec <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8008bb0:	2200      	movs	r2, #0
 8008bb2:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8008bb4:	f000 f83a 	bl	8008c2c <_ZN17TypedTextDatabase8getFontsEv>
 8008bb8:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8008bba:	f000 f833 	bl	8008c24 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8008bbe:	4b0c      	ldr	r3, [pc, #48]	; (8008bf0 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8008bc0:	601c      	str	r4, [r3, #0]
        fonts = f;
 8008bc2:	4b0c      	ldr	r3, [pc, #48]	; (8008bf4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8008bc4:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8008bc6:	4b0c      	ldr	r3, [pc, #48]	; (8008bf8 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8008bc8:	8018      	strh	r0, [r3, #0]
    }
}
 8008bca:	e007      	b.n	8008bdc <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8008bcc:	4b0b      	ldr	r3, [pc, #44]	; (8008bfc <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8008bce:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8008bd0:	4b0b      	ldr	r3, [pc, #44]	; (8008c00 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8008bd2:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8008bd4:	4b0b      	ldr	r3, [pc, #44]	; (8008c04 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8008bd6:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8008bd8:	2c00      	cmp	r4, #0
 8008bda:	d1e8      	bne.n	8008bae <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8008bdc:	bd38      	pop	{r3, r4, r5, pc}
 8008bde:	bf00      	nop
 8008be0:	2001acf4 	.word	0x2001acf4
 8008be4:	2001acf8 	.word	0x2001acf8
 8008be8:	2001acfc 	.word	0x2001acfc
 8008bec:	2001ad00 	.word	0x2001ad00
 8008bf0:	2002bd84 	.word	0x2002bd84
 8008bf4:	2002bd8c 	.word	0x2002bd8c
 8008bf8:	2002bd88 	.word	0x2002bd88
 8008bfc:	901260c0 	.word	0x901260c0
 8008c00:	90125bbc 	.word	0x90125bbc
 8008c04:	9012662c 	.word	0x9012662c

08008c08 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8008c08:	4b04      	ldr	r3, [pc, #16]	; (8008c1c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8008c0a:	681b      	ldr	r3, [r3, #0]
 8008c0c:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8008c10:	4b03      	ldr	r3, [pc, #12]	; (8008c20 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8008c12:	681b      	ldr	r3, [r3, #0]
}
 8008c14:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8008c18:	4770      	bx	lr
 8008c1a:	bf00      	nop
 8008c1c:	2001acfc 	.word	0x2001acfc
 8008c20:	2001acf8 	.word	0x2001acf8

08008c24 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8008c24:	f240 1041 	movw	r0, #321	; 0x141
 8008c28:	4770      	bx	lr
	...

08008c2c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8008c2c:	4800      	ldr	r0, [pc, #0]	; (8008c30 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8008c2e:	4770      	bx	lr
 8008c30:	2001ad04 	.word	0x2001ad04

08008c34 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8008c34:	b510      	push	{r4, lr}
    &(getFont_verdana_15_4bpp()),
 8008c36:	f7ff feb5 	bl	80089a4 <_Z23getFont_verdana_15_4bppv>
};
 8008c3a:	4c04      	ldr	r4, [pc, #16]	; (8008c4c <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8008c3c:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8008c3e:	f7ff feed 	bl	8008a1c <_Z23getFont_verdana_40_4bppv>
};
 8008c42:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8008c44:	f7ff fe72 	bl	800892c <_Z23getFont_verdana_10_4bppv>
};
 8008c48:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8008c4a:	bd10      	pop	{r4, pc}
 8008c4c:	2001ad04 	.word	0x2001ad04

08008c50 <_ZN8touchgfx8CallbackI19ConfigListFilterLogsvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008c50:	4770      	bx	lr

08008c52 <_ZN8touchgfx8CallbackI19ConfigListFilterLogsvvE7executeEs>:
    virtual void execute(T1 t1)
 8008c52:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8008c54:	68c2      	ldr	r2, [r0, #12]
 8008c56:	6844      	ldr	r4, [r0, #4]
 8008c58:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8008c5a:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8008c5c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8008c60:	07d2      	lsls	r2, r2, #31
 8008c62:	bf48      	it	mi
 8008c64:	5962      	ldrmi	r2, [r4, r5]
 8008c66:	689b      	ldr	r3, [r3, #8]
    }
 8008c68:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8008c6a:	bf48      	it	mi
 8008c6c:	58d3      	ldrmi	r3, [r2, r3]
 8008c6e:	4718      	bx	r3

08008c70 <_ZNK8touchgfx8CallbackI19ConfigListFilterLogsvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8008c70:	6843      	ldr	r3, [r0, #4]
 8008c72:	b12b      	cbz	r3, 8008c80 <_ZNK8touchgfx8CallbackI19ConfigListFilterLogsvvE7isValidEv+0x10>
 8008c74:	6883      	ldr	r3, [r0, #8]
 8008c76:	b92b      	cbnz	r3, 8008c84 <_ZNK8touchgfx8CallbackI19ConfigListFilterLogsvvE7isValidEv+0x14>
 8008c78:	68c0      	ldr	r0, [r0, #12]
 8008c7a:	f000 0001 	and.w	r0, r0, #1
 8008c7e:	4770      	bx	lr
 8008c80:	4618      	mov	r0, r3
 8008c82:	4770      	bx	lr
 8008c84:	2001      	movs	r0, #1
    }
 8008c86:	4770      	bx	lr

08008c88 <_ZN8touchgfx8CallbackI19ConfigListFilterLogsvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008c88:	b510      	push	{r4, lr}
 8008c8a:	2110      	movs	r1, #16
 8008c8c:	4604      	mov	r4, r0
 8008c8e:	f01e fd49 	bl	8027724 <_ZdlPvj>
 8008c92:	4620      	mov	r0, r4
 8008c94:	bd10      	pop	{r4, pc}

08008c96 <_ZN19ConfigListFilterLog10initializeEv>:
{

}

void ConfigListFilterLog::initialize()
{
 8008c96:	b510      	push	{r4, lr}
 8008c98:	4604      	mov	r4, r0
	ConfigListFilterLogBase::initialize();
 8008c9a:	f7f9 fa77 	bl	800218c <_ZN23ConfigListFilterLogBase10initializeEv>

	scrollList.setItemSelectedCallback(scrollListItemSelectedCallback);
 8008c9e:	f104 0060 	add.w	r0, r4, #96	; 0x60
 8008ca2:	f504 5180 	add.w	r1, r4, #4096	; 0x1000
 8008ca6:	f00a f95f 	bl	8012f68 <_ZN8touchgfx10ScrollBase23setItemSelectedCallbackERNS_15GenericCallbackIsvvEE>
        visible = vis;
 8008caa:	2300      	movs	r3, #0
 8008cac:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25


	setVisible(false);
	invalidate();
 8008cb0:	6823      	ldr	r3, [r4, #0]
 8008cb2:	4620      	mov	r0, r4
 8008cb4:	695b      	ldr	r3, [r3, #20]

}
 8008cb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	invalidate();
 8008cba:	4718      	bx	r3

08008cbc <_ZN19ConfigListFilterLog20scrollListUpdateItemER8ListTiles>:
		currentIndex = (1<<itemIndex);
	}
}

void ConfigListFilterLog::scrollListUpdateItem(ListTile& item, int16_t itemIndex)
{
 8008cbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008cc0:	b091      	sub	sp, #68	; 0x44
 8008cc2:	4604      	mov	r4, r0
	UserUtils utils;
 8008cc4:	a803      	add	r0, sp, #12
{
 8008cc6:	460d      	mov	r5, r1
 8008cc8:	4616      	mov	r6, r2
	UserUtils utils;
 8008cca:	f002 fb75 	bl	800b3b8 <_ZN9UserUtilsC1Ev>
	char buf[16] = { 0 };
	Unicode::UnicodeChar item_text[16] = { 0 };
 8008cce:	2220      	movs	r2, #32
	char buf[16] = { 0 };
 8008cd0:	2100      	movs	r1, #0
	Unicode::UnicodeChar item_text[16] = { 0 };
 8008cd2:	eb0d 0002 	add.w	r0, sp, r2
	char buf[16] = { 0 };
 8008cd6:	e9cd 1104 	strd	r1, r1, [sp, #16]
 8008cda:	e9cd 1106 	strd	r1, r1, [sp, #24]
	Unicode::UnicodeChar item_text[16] = { 0 };
 8008cde:	f01e fefd 	bl	8027adc <memset>
	item.setIndex((uint8_t)itemIndex);
 8008ce2:	b2f1      	uxtb	r1, r6
 8008ce4:	4628      	mov	r0, r5
 8008ce6:	f001 f88a 	bl	8009dfe <_ZN8ListTile8setIndexEh>

//	for (int i = 0; i < scrollListListItems.getNumberOfDrawables(); i++)
//	{
		if (currentIndex & (1<<item.getIndex()))
 8008cea:	f241 0318 	movw	r3, #4120	; 0x1018
 8008cee:	18e7      	adds	r7, r4, r3
 8008cf0:	4628      	mov	r0, r5
 8008cf2:	f854 b003 	ldr.w	fp, [r4, r3]
 8008cf6:	f8d7 a004 	ldr.w	sl, [r7, #4]
 8008cfa:	f001 f883 	bl	8009e04 <_ZN8ListTile8getIndexEv>
 8008cfe:	2301      	movs	r3, #1
 8008d00:	fa03 f000 	lsl.w	r0, r3, r0
 8008d04:	ea4f 79e0 	mov.w	r9, r0, asr #31
 8008d08:	ea00 020b 	and.w	r2, r0, fp
 8008d0c:	ea09 030a 	and.w	r3, r9, sl
 8008d10:	4313      	orrs	r3, r2
 8008d12:	d01a      	beq.n	8008d4a <_ZN19ConfigListFilterLog20scrollListUpdateItemER8ListTiles+0x8e>
		{
			item.setSelected(scrollList.getWidth());
 8008d14:	f9b4 1068 	ldrsh.w	r1, [r4, #104]	; 0x68
 8008d18:	4628      	mov	r0, r5
 8008d1a:	f001 f876 	bl	8009e0a <_ZN8ListTile11setSelectedEi>
		{
			item.setUnselected();
		}
//	}

	if (list_id == ListID::list_channel)
 8008d1e:	f241 0324 	movw	r3, #4132	; 0x1024
 8008d22:	58e3      	ldr	r3, [r4, r3]
 8008d24:	2b01      	cmp	r3, #1
 8008d26:	d124      	bne.n	8008d72 <_ZN19ConfigListFilterLog20scrollListUpdateItemER8ListTiles+0xb6>
	{
		if(((itemIndex + 1) == 33) && (currentIndex == 0)){
 8008d28:	2e20      	cmp	r6, #32
 8008d2a:	d112      	bne.n	8008d52 <_ZN19ConfigListFilterLog20scrollListUpdateItemER8ListTiles+0x96>
 8008d2c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8008d30:	4313      	orrs	r3, r2
 8008d32:	d104      	bne.n	8008d3e <_ZN19ConfigListFilterLog20scrollListUpdateItemER8ListTiles+0x82>
			item.setSelected(scrollList.getWidth());
 8008d34:	f9b4 1068 	ldrsh.w	r1, [r4, #104]	; 0x68
 8008d38:	4628      	mov	r0, r5
 8008d3a:	f001 f866 	bl	8009e0a <_ZN8ListTile11setSelectedEi>
		}
		if((itemIndex + 1) <= 32){
			Unicode::snprintf(item_text, 16, "%d", itemIndex + 1);
		}
		else{
			Unicode::snprintf(item_text, 16, "All");
 8008d3e:	4a29      	ldr	r2, [pc, #164]	; (8008de4 <_ZN19ConfigListFilterLog20scrollListUpdateItemER8ListTiles+0x128>)
 8008d40:	2110      	movs	r1, #16
 8008d42:	a808      	add	r0, sp, #32
 8008d44:	f012 f9c2 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8008d48:	e00b      	b.n	8008d62 <_ZN19ConfigListFilterLog20scrollListUpdateItemER8ListTiles+0xa6>
			item.setUnselected();
 8008d4a:	4628      	mov	r0, r5
 8008d4c:	f001 f86a 	bl	8009e24 <_ZN8ListTile13setUnselectedEv>
 8008d50:	e7e5      	b.n	8008d1e <_ZN19ConfigListFilterLog20scrollListUpdateItemER8ListTiles+0x62>
		if((itemIndex + 1) <= 32){
 8008d52:	2e1f      	cmp	r6, #31
 8008d54:	dcf3      	bgt.n	8008d3e <_ZN19ConfigListFilterLog20scrollListUpdateItemER8ListTiles+0x82>
			Unicode::snprintf(item_text, 16, "%d", itemIndex + 1);
 8008d56:	4a24      	ldr	r2, [pc, #144]	; (8008de8 <_ZN19ConfigListFilterLog20scrollListUpdateItemER8ListTiles+0x12c>)
 8008d58:	1c73      	adds	r3, r6, #1
 8008d5a:	2110      	movs	r1, #16
 8008d5c:	a808      	add	r0, sp, #32
 8008d5e:	f012 f9b5 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		}
		item.updateText(item_text);
 8008d62:	a908      	add	r1, sp, #32
 8008d64:	4628      	mov	r0, r5
 8008d66:	f001 f83d 	bl	8009de4 <_ZN8ListTile10updateTextEPt>
		scrollList.setCircular(true);
 8008d6a:	2101      	movs	r1, #1
	{
		strcpy(buf, gas_formulas_list[itemIndex]);
		Unicode::snprintf(item_text, 16, buf);

		item.updateText(item_text);
		scrollList.setCircular(false);
 8008d6c:	f104 0060 	add.w	r0, r4, #96	; 0x60
 8008d70:	e01d      	b.n	8008dae <_ZN19ConfigListFilterLog20scrollListUpdateItemER8ListTiles+0xf2>
	else if(list_id == ListID::list_type_channel)
 8008d72:	1e9a      	subs	r2, r3, #2
 8008d74:	2a01      	cmp	r2, #1
 8008d76:	d801      	bhi.n	8008d7c <_ZN19ConfigListFilterLog20scrollListUpdateItemER8ListTiles+0xc0>
		scrollList.setCircular(false);
 8008d78:	2100      	movs	r1, #0
 8008d7a:	e7f7      	b.n	8008d6c <_ZN19ConfigListFilterLog20scrollListUpdateItemER8ListTiles+0xb0>
	else if (list_id == ListID::list_units)
 8008d7c:	2b04      	cmp	r3, #4
 8008d7e:	d11b      	bne.n	8008db8 <_ZN19ConfigListFilterLog20scrollListUpdateItemER8ListTiles+0xfc>
		strcpy(buf, units_list[itemIndex]);
 8008d80:	491a      	ldr	r1, [pc, #104]	; (8008dec <_ZN19ConfigListFilterLog20scrollListUpdateItemER8ListTiles+0x130>)
 8008d82:	a804      	add	r0, sp, #16
 8008d84:	eb01 1106 	add.w	r1, r1, r6, lsl #4
 8008d88:	f01f fb49 	bl	802841e <strcpy>
		Unicode::snprintf(item_text, 16, buf);
 8008d8c:	aa04      	add	r2, sp, #16
 8008d8e:	2110      	movs	r1, #16
 8008d90:	a808      	add	r0, sp, #32
 8008d92:	f012 f99b 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		item.updateText(item_text);
 8008d96:	a908      	add	r1, sp, #32
 8008d98:	4628      	mov	r0, r5
 8008d9a:	f001 f823 	bl	8009de4 <_ZN8ListTile10updateTextEPt>
		scrollList.setNumberOfItems(UNITS_SIZE);
 8008d9e:	f104 0060 	add.w	r0, r4, #96	; 0x60
 8008da2:	2105      	movs	r1, #5
 8008da4:	9001      	str	r0, [sp, #4]
 8008da6:	f00a f852 	bl	8012e4e <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs>
		scrollList.setCircular(false);
 8008daa:	9801      	ldr	r0, [sp, #4]
 8008dac:	2100      	movs	r1, #0
		scrollList.setCircular(false);
 8008dae:	f00a f9e9 	bl	8013184 <_ZN8touchgfx10ScrollBase11setCircularEb>
	}
}
 8008db2:	b011      	add	sp, #68	; 0x44
 8008db4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	else if(list_id == ListID::list_st_cur)
 8008db8:	1f5a      	subs	r2, r3, #5
 8008dba:	2a01      	cmp	r2, #1
 8008dbc:	d9dc      	bls.n	8008d78 <_ZN19ConfigListFilterLog20scrollListUpdateItemER8ListTiles+0xbc>
	else if (list_id == ListID::list_formula)
 8008dbe:	2b07      	cmp	r3, #7
 8008dc0:	d1f7      	bne.n	8008db2 <_ZN19ConfigListFilterLog20scrollListUpdateItemER8ListTiles+0xf6>
		strcpy(buf, gas_formulas_list[itemIndex]);
 8008dc2:	490b      	ldr	r1, [pc, #44]	; (8008df0 <_ZN19ConfigListFilterLog20scrollListUpdateItemER8ListTiles+0x134>)
 8008dc4:	a804      	add	r0, sp, #16
 8008dc6:	eb01 1106 	add.w	r1, r1, r6, lsl #4
 8008dca:	f01f fb28 	bl	802841e <strcpy>
		Unicode::snprintf(item_text, 16, buf);
 8008dce:	aa04      	add	r2, sp, #16
 8008dd0:	2110      	movs	r1, #16
 8008dd2:	a808      	add	r0, sp, #32
 8008dd4:	f012 f97a 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		item.updateText(item_text);
 8008dd8:	a908      	add	r1, sp, #32
 8008dda:	4628      	mov	r0, r5
 8008ddc:	f001 f802 	bl	8009de4 <_ZN8ListTile10updateTextEPt>
 8008de0:	e7ca      	b.n	8008d78 <_ZN19ConfigListFilterLog20scrollListUpdateItemER8ListTiles+0xbc>
 8008de2:	bf00      	nop
 8008de4:	0802a649 	.word	0x0802a649
 8008de8:	0802a646 	.word	0x0802a646
 8008dec:	08029190 	.word	0x08029190
 8008df0:	08029130 	.word	0x08029130

08008df4 <_ZN19ConfigListFilterLogC1Ev>:
ConfigListFilterLog::ConfigListFilterLog() :
 8008df4:	b510      	push	{r4, lr}
 8008df6:	4604      	mov	r4, r0
	scrollListItemSelectedCallback(this, &ConfigListFilterLog::scrollListItemSelectedHandler), previousIndex(100), currentIndex(0), highlighted_box_width(0)
 8008df8:	f7f9 fa00 	bl	80021fc <_ZN23ConfigListFilterLogBaseC1Ev>
 8008dfc:	4b10      	ldr	r3, [pc, #64]	; (8008e40 <_ZN19ConfigListFilterLogC1Ev+0x4c>)
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8008dfe:	4a11      	ldr	r2, [pc, #68]	; (8008e44 <_ZN19ConfigListFilterLogC1Ev+0x50>)
 8008e00:	6023      	str	r3, [r4, #0]
 8008e02:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008e06:	e9c3 2400 	strd	r2, r4, [r3]
 8008e0a:	f241 0308 	movw	r3, #4104	; 0x1008
 8008e0e:	4a0e      	ldr	r2, [pc, #56]	; (8008e48 <_ZN19ConfigListFilterLogC1Ev+0x54>)
 8008e10:	50e2      	str	r2, [r4, r3]
 8008e12:	f241 030c 	movw	r3, #4108	; 0x100c
 8008e16:	2200      	movs	r2, #0
 8008e18:	50e2      	str	r2, [r4, r3]
 8008e1a:	f241 0310 	movw	r3, #4112	; 0x1010
 8008e1e:	2164      	movs	r1, #100	; 0x64
 8008e20:	54e1      	strb	r1, [r4, r3]
 8008e22:	2000      	movs	r0, #0
 8008e24:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008e28:	2100      	movs	r1, #0
 8008e2a:	e9c3 0106 	strd	r0, r1, [r3, #24]
 8008e2e:	f504 5381 	add.w	r3, r4, #4128	; 0x1020
}
 8008e32:	4620      	mov	r0, r4
	scrollListItemSelectedCallback(this, &ConfigListFilterLog::scrollListItemSelectedHandler), previousIndex(100), currentIndex(0), highlighted_box_width(0)
 8008e34:	601a      	str	r2, [r3, #0]
 8008e36:	f241 0324 	movw	r3, #4132	; 0x1024
 8008e3a:	2201      	movs	r2, #1
 8008e3c:	50e2      	str	r2, [r4, r3]
}
 8008e3e:	bd10      	pop	{r4, pc}
 8008e40:	0802a6d4 	.word	0x0802a6d4
 8008e44:	0802a6bc 	.word	0x0802a6bc
 8008e48:	08008f19 	.word	0x08008f19

08008e4c <_ZN19ConfigListFilterLog14setHighlightedEs>:
	if(list_id == ListID::list_channel){
 8008e4c:	f241 0324 	movw	r3, #4132	; 0x1024
 8008e50:	58c3      	ldr	r3, [r0, r3]
 8008e52:	f500 5080 	add.w	r0, r0, #4096	; 0x1000
 8008e56:	2b01      	cmp	r3, #1
 8008e58:	f100 0018 	add.w	r0, r0, #24
 8008e5c:	d101      	bne.n	8008e62 <_ZN19ConfigListFilterLog14setHighlightedEs+0x16>
		if(itemIndex <= 31){
 8008e5e:	291f      	cmp	r1, #31
 8008e60:	dc07      	bgt.n	8008e72 <_ZN19ConfigListFilterLog14setHighlightedEs+0x26>
			currentIndex = (1<<itemIndex);
 8008e62:	2301      	movs	r3, #1
 8008e64:	fa03 f101 	lsl.w	r1, r3, r1
 8008e68:	460a      	mov	r2, r1
 8008e6a:	17cb      	asrs	r3, r1, #31
			currentIndex = 0;
 8008e6c:	e9c0 2300 	strd	r2, r3, [r0]
}
 8008e70:	4770      	bx	lr
			currentIndex = 0;
 8008e72:	2200      	movs	r2, #0
 8008e74:	2300      	movs	r3, #0
 8008e76:	e7f9      	b.n	8008e6c <_ZN19ConfigListFilterLog14setHighlightedEs+0x20>

08008e78 <_ZN19ConfigListFilterLog8resizeXYEii>:
{
	return 32 * scrollList.getNumberOfItems();
}

void ConfigListFilterLog::resizeXY(int x, int y)
{
 8008e78:	b513      	push	{r0, r1, r4, lr}
//	highlighted_box_width = x;
	boxBg.setWidthHeight(x, y);
 8008e7a:	b212      	sxth	r2, r2
{
 8008e7c:	4604      	mov	r4, r0
	boxBg.setWidthHeight(x, y);
 8008e7e:	b209      	sxth	r1, r1
 8008e80:	302c      	adds	r0, #44	; 0x2c
 8008e82:	e9cd 1200 	strd	r1, r2, [sp]
 8008e86:	f7f9 f9ac 	bl	80021e2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
	scrollList.setWidthHeight(x, y);
 8008e8a:	e9dd 1200 	ldrd	r1, r2, [sp]
 8008e8e:	f104 0060 	add.w	r0, r4, #96	; 0x60
 8008e92:	f7f9 f9a6 	bl	80021e2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
	setWidthHeight(x, y);
 8008e96:	e9dd 1200 	ldrd	r1, r2, [sp]
 8008e9a:	4620      	mov	r0, r4
 8008e9c:	f7f9 f9a1 	bl	80021e2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
}
 8008ea0:	b002      	add	sp, #8
 8008ea2:	bd10      	pop	{r4, pc}

08008ea4 <_ZN19ConfigListFilterLog14setContainerIDENS_6ListIDE>:

void ConfigListFilterLog::setContainerID(ListID id)
{
	list_id = static_cast<ListID>(id);
 8008ea4:	f241 0324 	movw	r3, #4132	; 0x1024

	if (list_id == ListID::list_channel){
 8008ea8:	2901      	cmp	r1, #1
{
 8008eaa:	b510      	push	{r4, lr}
	list_id = static_cast<ListID>(id);
 8008eac:	50c1      	str	r1, [r0, r3]
{
 8008eae:	4604      	mov	r4, r0
	if (list_id == ListID::list_channel){
 8008eb0:	d10a      	bne.n	8008ec8 <_ZN19ConfigListFilterLog14setContainerIDENS_6ListIDE+0x24>
		scrollList.setNumberOfItems(33);
 8008eb2:	2121      	movs	r1, #33	; 0x21
	else if (list_id == ListID::list_st_cur)
		scrollList.setNumberOfItems(3);
	else if (list_id == ListID::list_err)
		scrollList.setNumberOfItems(3);
	else if (list_id == ListID::list_formula)
		scrollList.setNumberOfItems(GAS_SIZE);
 8008eb4:	f104 0060 	add.w	r0, r4, #96	; 0x60
 8008eb8:	f009 ffc9 	bl	8012e4e <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs>

	invalidate();
 8008ebc:	6823      	ldr	r3, [r4, #0]
 8008ebe:	4620      	mov	r0, r4
 8008ec0:	695b      	ldr	r3, [r3, #20]
}
 8008ec2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	invalidate();
 8008ec6:	4718      	bx	r3
	else if (list_id == ListID::list_type_channel)
 8008ec8:	1e8b      	subs	r3, r1, #2
 8008eca:	2b01      	cmp	r3, #1
 8008ecc:	d801      	bhi.n	8008ed2 <_ZN19ConfigListFilterLog14setContainerIDENS_6ListIDE+0x2e>
		scrollList.setNumberOfItems(3);
 8008ece:	2103      	movs	r1, #3
 8008ed0:	e7f0      	b.n	8008eb4 <_ZN19ConfigListFilterLog14setContainerIDENS_6ListIDE+0x10>
	else if (list_id == ListID::list_units)
 8008ed2:	2904      	cmp	r1, #4
 8008ed4:	d101      	bne.n	8008eda <_ZN19ConfigListFilterLog14setContainerIDENS_6ListIDE+0x36>
		scrollList.setNumberOfItems(UNITS_SIZE);
 8008ed6:	2105      	movs	r1, #5
 8008ed8:	e7ec      	b.n	8008eb4 <_ZN19ConfigListFilterLog14setContainerIDENS_6ListIDE+0x10>
	else if (list_id == ListID::list_st_cur)
 8008eda:	1f4b      	subs	r3, r1, #5
 8008edc:	2b01      	cmp	r3, #1
 8008ede:	d9f6      	bls.n	8008ece <_ZN19ConfigListFilterLog14setContainerIDENS_6ListIDE+0x2a>
	else if (list_id == ListID::list_formula)
 8008ee0:	2907      	cmp	r1, #7
 8008ee2:	d1eb      	bne.n	8008ebc <_ZN19ConfigListFilterLog14setContainerIDENS_6ListIDE+0x18>
		scrollList.setNumberOfItems(GAS_SIZE);
 8008ee4:	2106      	movs	r1, #6
 8008ee6:	e7e5      	b.n	8008eb4 <_ZN19ConfigListFilterLog14setContainerIDENS_6ListIDE+0x10>

08008ee8 <_ZN19ConfigListFilterLog15setViewCallbackERN8touchgfx15GenericCallbackIhPS_vEE>:
	}
}

void ConfigListFilterLog::setViewCallback(GenericCallback<uint8_t, ConfigListFilterLog *>& callback)
{
	viewCallback = &callback;
 8008ee8:	f8c0 1ffc 	str.w	r1, [r0, #4092]	; 0xffc
}
 8008eec:	4770      	bx	lr
	...

08008ef0 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EEixEi>:
        assert(index >= 0 && index < SIZE);
 8008ef0:	290f      	cmp	r1, #15
    TYPE& operator[](int index)
 8008ef2:	b508      	push	{r3, lr}
        assert(index >= 0 && index < SIZE);
 8008ef4:	d905      	bls.n	8008f02 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EEixEi+0x12>
 8008ef6:	4b05      	ldr	r3, [pc, #20]	; (8008f0c <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EEixEi+0x1c>)
 8008ef8:	4a05      	ldr	r2, [pc, #20]	; (8008f10 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EEixEi+0x20>)
 8008efa:	4806      	ldr	r0, [pc, #24]	; (8008f14 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EEixEi+0x24>)
 8008efc:	2161      	movs	r1, #97	; 0x61
 8008efe:	f01e fc3f 	bl	8027780 <__assert_func>
        return element[index];
 8008f02:	23ec      	movs	r3, #236	; 0xec
 8008f04:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8008f08:	3004      	adds	r0, #4
 8008f0a:	bd08      	pop	{r3, pc}
 8008f0c:	080292a8 	.word	0x080292a8
 8008f10:	0802a64d 	.word	0x0802a64d
 8008f14:	08029350 	.word	0x08029350

08008f18 <_ZN19ConfigListFilterLog29scrollListItemSelectedHandlerEs>:
	if(list_id == ListID::list_channel){
 8008f18:	f241 0324 	movw	r3, #4132	; 0x1024
{
 8008f1c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if(list_id == ListID::list_channel){
 8008f20:	58c3      	ldr	r3, [r0, r3]
 8008f22:	f500 5580 	add.w	r5, r0, #4096	; 0x1000
 8008f26:	2b01      	cmp	r3, #1
{
 8008f28:	4604      	mov	r4, r0
 8008f2a:	460e      	mov	r6, r1
 8008f2c:	f241 0718 	movw	r7, #4120	; 0x1018
 8008f30:	f105 0518 	add.w	r5, r5, #24
	if(list_id == ListID::list_channel){
 8008f34:	d15f      	bne.n	8008ff6 <_ZN19ConfigListFilterLog29scrollListItemSelectedHandlerEs+0xde>
		if(itemSelected <= 31){
 8008f36:	291f      	cmp	r1, #31
 8008f38:	dc58      	bgt.n	8008fec <_ZN19ConfigListFilterLog29scrollListItemSelectedHandlerEs+0xd4>
			if(TESTBIT(currentIndex, itemSelected)){
 8008f3a:	f850 e007 	ldr.w	lr, [r0, r7]
 8008f3e:	f8d5 c004 	ldr.w	ip, [r5, #4]
 8008f42:	fa03 fa01 	lsl.w	sl, r3, r1
			if(TESTBIT(currentIndex, itemSelected)){
 8008f46:	4650      	mov	r0, sl
 8008f48:	17c1      	asrs	r1, r0, #31
 8008f4a:	ea0e 020a 	and.w	r2, lr, sl
 8008f4e:	ea0c 0301 	and.w	r3, ip, r1
 8008f52:	4313      	orrs	r3, r2
				CLRBIT(currentIndex, itemSelected);
 8008f54:	bf1f      	itttt	ne
 8008f56:	ea6f 0a0a 	mvnne.w	sl, sl
 8008f5a:	4650      	movne	r0, sl
 8008f5c:	17c1      	asrne	r1, r0, #31
 8008f5e:	ea0a 020e 	andne.w	r2, sl, lr
 8008f62:	bf12      	itee	ne
 8008f64:	ea01 030c 	andne.w	r3, r1, ip
				SETBIT(currentIndex, itemSelected);
 8008f68:	ea4e 020a 	orreq.w	r2, lr, sl
 8008f6c:	ea4c 0301 	orreq.w	r3, ip, r1
 8008f70:	51e2      	str	r2, [r4, r7]
 8008f72:	606b      	str	r3, [r5, #4]
{
 8008f74:	2700      	movs	r7, #0
	for (int i = 0; i < scrollListListItems.getNumberOfDrawables(); i++)
 8008f76:	f504 7a92 	add.w	sl, r4, #292	; 0x124
		if((currentIndex & (1 << scrollListListItems[i].getIndex()))){
 8008f7a:	f04f 0b01 	mov.w	fp, #1
	for (int i = 0; i < scrollListListItems.getNumberOfDrawables(); i++)
 8008f7e:	2f10      	cmp	r7, #16
 8008f80:	d04b      	beq.n	800901a <_ZN19ConfigListFilterLog29scrollListItemSelectedHandlerEs+0x102>
		if((currentIndex & (1 << scrollListListItems[i].getIndex()))){
 8008f82:	682a      	ldr	r2, [r5, #0]
 8008f84:	686b      	ldr	r3, [r5, #4]
 8008f86:	9201      	str	r2, [sp, #4]
 8008f88:	4639      	mov	r1, r7
 8008f8a:	4650      	mov	r0, sl
 8008f8c:	9300      	str	r3, [sp, #0]
 8008f8e:	f7ff ffaf 	bl	8008ef0 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EEixEi>
 8008f92:	f000 ff37 	bl	8009e04 <_ZN8ListTile8getIndexEv>
 8008f96:	fa0b fc00 	lsl.w	ip, fp, r0
 8008f9a:	9b00      	ldr	r3, [sp, #0]
 8008f9c:	9a01      	ldr	r2, [sp, #4]
 8008f9e:	4660      	mov	r0, ip
 8008fa0:	17c1      	asrs	r1, r0, #31
 8008fa2:	ea01 0903 	and.w	r9, r1, r3
 8008fa6:	ea0c 0802 	and.w	r8, ip, r2
 8008faa:	ea58 0309 	orrs.w	r3, r8, r9
			scrollListListItems[i].setSelected(scrollList.getWidth());
 8008fae:	4639      	mov	r1, r7
 8008fb0:	4650      	mov	r0, sl
		if((currentIndex & (1 << scrollListListItems[i].getIndex()))){
 8008fb2:	d02d      	beq.n	8009010 <_ZN19ConfigListFilterLog29scrollListItemSelectedHandlerEs+0xf8>
			scrollListListItems[i].setSelected(scrollList.getWidth());
 8008fb4:	f7ff ff9c 	bl	8008ef0 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EEixEi>
 8008fb8:	f9b4 1068 	ldrsh.w	r1, [r4, #104]	; 0x68
 8008fbc:	f000 ff25 	bl	8009e0a <_ZN8ListTile11setSelectedEi>
		if((currentIndex == 0) && (itemSelected == scrollListListItems[i].getIndex())){
 8008fc0:	e9d5 2300 	ldrd	r2, r3, [r5]
 8008fc4:	4313      	orrs	r3, r2
 8008fc6:	d10f      	bne.n	8008fe8 <_ZN19ConfigListFilterLog29scrollListItemSelectedHandlerEs+0xd0>
 8008fc8:	4639      	mov	r1, r7
 8008fca:	4650      	mov	r0, sl
 8008fcc:	f7ff ff90 	bl	8008ef0 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EEixEi>
 8008fd0:	f000 ff18 	bl	8009e04 <_ZN8ListTile8getIndexEv>
 8008fd4:	4286      	cmp	r6, r0
 8008fd6:	d107      	bne.n	8008fe8 <_ZN19ConfigListFilterLog29scrollListItemSelectedHandlerEs+0xd0>
			scrollListListItems[i].setSelected(scrollList.getWidth());
 8008fd8:	4639      	mov	r1, r7
 8008fda:	4650      	mov	r0, sl
 8008fdc:	f7ff ff88 	bl	8008ef0 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EEixEi>
 8008fe0:	f9b4 1068 	ldrsh.w	r1, [r4, #104]	; 0x68
 8008fe4:	f000 ff11 	bl	8009e0a <_ZN8ListTile11setSelectedEi>
	for (int i = 0; i < scrollListListItems.getNumberOfDrawables(); i++)
 8008fe8:	3701      	adds	r7, #1
 8008fea:	e7c8      	b.n	8008f7e <_ZN19ConfigListFilterLog29scrollListItemSelectedHandlerEs+0x66>
			currentIndex = 0;
 8008fec:	2200      	movs	r2, #0
			SETBIT(currentIndex, itemSelected);
 8008fee:	2300      	movs	r3, #0
 8008ff0:	e9c5 2300 	strd	r2, r3, [r5]
 8008ff4:	e7be      	b.n	8008f74 <_ZN19ConfigListFilterLog29scrollListItemSelectedHandlerEs+0x5c>
		if(itemSelected){
 8008ff6:	b149      	cbz	r1, 800900c <_ZN19ConfigListFilterLog29scrollListItemSelectedHandlerEs+0xf4>
			CLRBIT(currentIndex, 0);
 8008ff8:	59c3      	ldr	r3, [r0, r7]
 8008ffa:	f8d5 c004 	ldr.w	ip, [r5, #4]
			if(TESTBIT(currentIndex, itemSelected)){
 8008ffe:	f04f 0a01 	mov.w	sl, #1
			CLRBIT(currentIndex, 0);
 8009002:	f023 0e01 	bic.w	lr, r3, #1
			if(TESTBIT(currentIndex, itemSelected)){
 8009006:	fa0a fa01 	lsl.w	sl, sl, r1
 800900a:	e79c      	b.n	8008f46 <_ZN19ConfigListFilterLog29scrollListItemSelectedHandlerEs+0x2e>
			SETBIT(currentIndex, itemSelected);
 800900c:	2201      	movs	r2, #1
 800900e:	e7ee      	b.n	8008fee <_ZN19ConfigListFilterLog29scrollListItemSelectedHandlerEs+0xd6>
			scrollListListItems[i].setUnselected();
 8009010:	f7ff ff6e 	bl	8008ef0 <_ZN8touchgfx17DrawableListItemsI8ListTileLi16EEixEi>
 8009014:	f000 ff06 	bl	8009e24 <_ZN8ListTile13setUnselectedEv>
 8009018:	e7d2      	b.n	8008fc0 <_ZN19ConfigListFilterLog29scrollListItemSelectedHandlerEs+0xa8>
	if (viewCallback && viewCallback->isValid())
 800901a:	f8d4 0ffc 	ldr.w	r0, [r4, #4092]	; 0xffc
 800901e:	b168      	cbz	r0, 800903c <_ZN19ConfigListFilterLog29scrollListItemSelectedHandlerEs+0x124>
 8009020:	6803      	ldr	r3, [r0, #0]
 8009022:	68db      	ldr	r3, [r3, #12]
 8009024:	4798      	blx	r3
 8009026:	b148      	cbz	r0, 800903c <_ZN19ConfigListFilterLog29scrollListItemSelectedHandlerEs+0x124>
		viewCallback->execute((uint8_t)itemSelected, this);
 8009028:	f8d4 0ffc 	ldr.w	r0, [r4, #4092]	; 0xffc
 800902c:	6803      	ldr	r3, [r0, #0]
 800902e:	689b      	ldr	r3, [r3, #8]
 8009030:	4622      	mov	r2, r4
 8009032:	b2f1      	uxtb	r1, r6
}
 8009034:	b003      	add	sp, #12
 8009036:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		viewCallback->execute((uint8_t)itemSelected, this);
 800903a:	4718      	bx	r3
}
 800903c:	b003      	add	sp, #12
 800903e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08009042 <_ZN25CustomContainerButton_keyD1Ev>:

class CustomContainerButton_key : public CustomContainerButton_keyBase
{
public:
    CustomContainerButton_key();
    virtual ~CustomContainerButton_key() {}
 8009042:	4770      	bx	lr

08009044 <_ZN25CustomContainerButton_key19functionButtonClickEv>:
}

void CustomContainerButton_key::functionButtonClick()
{
	touchgfx_printf("function1 %s\n\r", flexButton_keyboardBuffer);
	data_ContainerTextArea[count_ContainerTextArea] = flexButton_keyboardBuffer[0];
 8009044:	4b03      	ldr	r3, [pc, #12]	; (8009054 <_ZN25CustomContainerButton_key19functionButtonClickEv+0x10>)
 8009046:	f8b0 10ec 	ldrh.w	r1, [r0, #236]	; 0xec
 800904a:	881a      	ldrh	r2, [r3, #0]
 800904c:	4b02      	ldr	r3, [pc, #8]	; (8009058 <_ZN25CustomContainerButton_key19functionButtonClickEv+0x14>)
 800904e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
}
 8009052:	4770      	bx	lr
 8009054:	2001ad10 	.word	0x2001ad10
 8009058:	2001ad12 	.word	0x2001ad12

0800905c <_ZN25CustomContainerButton_key10initializeEv>:
    CustomContainerButton_keyBase::initialize();
 800905c:	f7f9 b990 	b.w	8002380 <_ZN29CustomContainerButton_keyBase10initializeEv>

08009060 <_ZN25CustomContainerButton_keyD0Ev>:
 8009060:	b510      	push	{r4, lr}
 8009062:	f44f 718a 	mov.w	r1, #276	; 0x114
 8009066:	4604      	mov	r4, r0
 8009068:	f01e fb5c 	bl	8027724 <_ZdlPvj>
 800906c:	4620      	mov	r0, r4
 800906e:	bd10      	pop	{r4, pc}

08009070 <_ZN25CustomContainerButton_keyC1Ev>:
CustomContainerButton_key::CustomContainerButton_key()
 8009070:	b510      	push	{r4, lr}
 8009072:	4604      	mov	r4, r0
 8009074:	f7f9 fab2 	bl	80025dc <_ZN29CustomContainerButton_keyBaseC1Ev>
 8009078:	4b01      	ldr	r3, [pc, #4]	; (8009080 <_ZN25CustomContainerButton_keyC1Ev+0x10>)
 800907a:	6023      	str	r3, [r4, #0]
}
 800907c:	4620      	mov	r0, r4
 800907e:	bd10      	pop	{r4, pc}
 8009080:	0802a76c 	.word	0x0802a76c

08009084 <_ZN23CustomContainerKeyboardD1Ev>:

class CustomContainerKeyboard : public CustomContainerKeyboardBase
{
public:
    CustomContainerKeyboard();
    virtual ~CustomContainerKeyboard() {}
 8009084:	4770      	bx	lr

08009086 <_ZN23CustomContainerKeyboard16ClickButtonEnterEv>:
//	customContainer6_2.initialize_my(keyboard_mas[language_type][28]);
//	customContainer7_2.initialize_my(keyboard_mas[language_type][29]);
//	customContainer8_2.initialize_my(keyboard_mas[language_type][30]);
//	customContainer9_2.initialize_my(keyboard_mas[language_type][31]);
//	customContainer10_2.initialize_my(keyboard_mas[language_type][32]);
}
 8009086:	4770      	bx	lr

08009088 <_ZN23CustomContainerKeyboard16ClickButtonShiftEv>:
}

//==================================================================================================================
//When flexButton_shift clicked call virtual function
void CustomContainerKeyboard::ClickButtonShift() {
	if (capital_letters) {
 8009088:	f642 42eb 	movw	r2, #11499	; 0x2ceb
 800908c:	5c83      	ldrb	r3, [r0, r2]
 800908e:	fab3 f383 	clz	r3, r3
 8009092:	095b      	lsrs	r3, r3, #5
 8009094:	5483      	strb	r3, [r0, r2]
	}
	else {
		capital_letters = 1;
	}
	UpdateButtonKeyboard();
}
 8009096:	4770      	bx	lr

08009098 <_ZN23CustomContainerKeyboard24ClickButtonCloseKeyboardEv>:

//==================================================================================================================
//When flexButton_close clicked call virtual function
void CustomContainerKeyboard::ClickButtonCloseKeyboard() {
	count_ContainerTextArea = 0;
 8009098:	4b0d      	ldr	r3, [pc, #52]	; (80090d0 <_ZN23CustomContainerKeyboard24ClickButtonCloseKeyboardEv+0x38>)
void CustomContainerKeyboard::ClickButtonCloseKeyboard() {
 800909a:	b570      	push	{r4, r5, r6, lr}
	count_ContainerTextArea = 0;
 800909c:	2500      	movs	r5, #0
 800909e:	801d      	strh	r5, [r3, #0]
	setVisible(false);
	invalidate();
 80090a0:	6803      	ldr	r3, [r0, #0]
 80090a2:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
void CustomContainerKeyboard::ClickButtonCloseKeyboard() {
 80090a6:	4604      	mov	r4, r0
	invalidate();
 80090a8:	695b      	ldr	r3, [r3, #20]
 80090aa:	4798      	blx	r3
        setX(x);
 80090ac:	6823      	ldr	r3, [r4, #0]
 80090ae:	4629      	mov	r1, r5
 80090b0:	4620      	mov	r0, r4
 80090b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80090b4:	4798      	blx	r3
        setY(y);
 80090b6:	6823      	ldr	r3, [r4, #0]
 80090b8:	4620      	mov	r0, r4
 80090ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80090bc:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 80090c0:	4798      	blx	r3
	setXY(0, 480);
	invalidate();
 80090c2:	6823      	ldr	r3, [r4, #0]
 80090c4:	4620      	mov	r0, r4
 80090c6:	695b      	ldr	r3, [r3, #20]
}
 80090c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	invalidate();
 80090cc:	4718      	bx	r3
 80090ce:	bf00      	nop
 80090d0:	2001ad10 	.word	0x2001ad10

080090d4 <_ZN23CustomContainerKeyboard16ClickButtonSpaceEv>:
}

//==================================================================================================================
//When flexButton_space clicked call virtual function
void CustomContainerKeyboard::ClickButtonSpace() {
	data_ContainerTextArea[count_ContainerTextArea] = flexButton_spaceBuffer[0];
 80090d4:	f642 2274 	movw	r2, #10868	; 0x2a74
void CustomContainerKeyboard::ClickButtonSpace() {
 80090d8:	b410      	push	{r4}
	data_ContainerTextArea[count_ContainerTextArea] = flexButton_spaceBuffer[0];
 80090da:	5a84      	ldrh	r4, [r0, r2]
 80090dc:	4a05      	ldr	r2, [pc, #20]	; (80090f4 <_ZN23CustomContainerKeyboard16ClickButtonSpaceEv+0x20>)
	action1();
 80090de:	6803      	ldr	r3, [r0, #0]
	data_ContainerTextArea[count_ContainerTextArea] = flexButton_spaceBuffer[0];
 80090e0:	8811      	ldrh	r1, [r2, #0]
 80090e2:	4a05      	ldr	r2, [pc, #20]	; (80090f8 <_ZN23CustomContainerKeyboard16ClickButtonSpaceEv+0x24>)
	action1();
 80090e4:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
	data_ContainerTextArea[count_ContainerTextArea] = flexButton_spaceBuffer[0];
 80090e8:	f822 4011 	strh.w	r4, [r2, r1, lsl #1]
}
 80090ec:	f85d 4b04 	ldr.w	r4, [sp], #4
	action1();
 80090f0:	4718      	bx	r3
 80090f2:	bf00      	nop
 80090f4:	2001ad10 	.word	0x2001ad10
 80090f8:	2001ad12 	.word	0x2001ad12

080090fc <_ZN23CustomContainerKeyboard19ClickButtonLanguageEv>:
	if (language_type == LANG_RUS) {
 80090fc:	f642 42e9 	movw	r2, #11497	; 0x2ce9
 8009100:	5c83      	ldrb	r3, [r0, r2]
 8009102:	3b01      	subs	r3, #1
 8009104:	bf18      	it	ne
 8009106:	2301      	movne	r3, #1
 8009108:	5483      	strb	r3, [r0, r2]
	flexButton_language.invalidate();
 800910a:	f500 5009 	add.w	r0, r0, #8768	; 0x2240
 800910e:	3034      	adds	r0, #52	; 0x34
 8009110:	f00f badc 	b.w	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>

08009114 <_ZN23CustomContainerKeyboard17ClickButtonABC123Ev>:

}

//==================================================================================================================
//When flexButton_ABC_123 clicked call virtual function button_ABC_mas
void CustomContainerKeyboard::ClickButtonABC123() {
 8009114:	b510      	push	{r4, lr}
	if (keyboard_type == TYPE_ABC) {
 8009116:	f642 43ea 	movw	r3, #11498	; 0x2cea
void CustomContainerKeyboard::ClickButtonABC123() {
 800911a:	4604      	mov	r4, r0
	if (keyboard_type == TYPE_ABC) {
 800911c:	5cc2      	ldrb	r2, [r0, r3]
 800911e:	2a01      	cmp	r2, #1
 8009120:	d10f      	bne.n	8009142 <_ZN23CustomContainerKeyboard17ClickButtonABC123Ev+0x2e>
		keyboard_type = TYPE_123;
 8009122:	2200      	movs	r2, #0
 8009124:	54c2      	strb	r2, [r0, r3]
		Unicode::snprintf(flexButton_ABC_123Buffer, FLEXBUTTON_ABC_123_SIZE, "123");
 8009126:	f500 502a 	add.w	r0, r0, #10880	; 0x2a80
 800912a:	4a07      	ldr	r2, [pc, #28]	; (8009148 <_ZN23CustomContainerKeyboard17ClickButtonABC123Ev+0x34>)
 800912c:	210a      	movs	r1, #10
 800912e:	3030      	adds	r0, #48	; 0x30
 8009130:	f011 ffcc 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	}
	else {
		keyboard_type = TYPE_ABC;
		keyboard_mas_from_cp1251_to_utf8((char*) button_ABC_mas[language_type], &flexButton_ABC_123Buffer[0], sizeof(button_ABC_mas)/2);
	}
	flexButton_ABC_123.invalidate();
 8009134:	f504 5025 	add.w	r0, r4, #10560	; 0x2940
 8009138:	3024      	adds	r0, #36	; 0x24
	UpdateButtonKeyboard();
}
 800913a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	flexButton_ABC_123.invalidate();
 800913e:	f00f bac5 	b.w	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>
		keyboard_type = TYPE_ABC;
 8009142:	2201      	movs	r2, #1
 8009144:	54c2      	strb	r2, [r0, r3]
}
 8009146:	e7f5      	b.n	8009134 <_ZN23CustomContainerKeyboard17ClickButtonABC123Ev+0x20>
 8009148:	0802a800 	.word	0x0802a800

0800914c <_ZN23CustomContainerKeyboardD0Ev>:
 800914c:	b510      	push	{r4, lr}
 800914e:	f642 61a8 	movw	r1, #11944	; 0x2ea8
 8009152:	4604      	mov	r4, r0
 8009154:	f01e fae6 	bl	8027724 <_ZdlPvj>
 8009158:	4620      	mov	r0, r4
 800915a:	bd10      	pop	{r4, pc}

0800915c <_ZN23CustomContainerKeyboardC1Ev>:
CustomContainerKeyboard::CustomContainerKeyboard() {
 800915c:	b538      	push	{r3, r4, r5, lr}
 800915e:	4604      	mov	r4, r0
 8009160:	f7f9 fd4e 	bl	8002c00 <_ZN27CustomContainerKeyboardBaseC1Ev>
 8009164:	4b13      	ldr	r3, [pc, #76]	; (80091b4 <_ZN23CustomContainerKeyboardC1Ev+0x58>)
 8009166:	6023      	str	r3, [r4, #0]
 8009168:	f642 43e8 	movw	r3, #11496	; 0x2ce8
 800916c:	4a12      	ldr	r2, [pc, #72]	; (80091b8 <_ZN23CustomContainerKeyboardC1Ev+0x5c>)
 800916e:	50e2      	str	r2, [r4, r3]
 8009170:	f642 53f4 	movw	r3, #11764	; 0x2df4
 8009174:	2500      	movs	r5, #0
 8009176:	18e2      	adds	r2, r4, r3
 8009178:	50e5      	str	r5, [r4, r3]
 800917a:	f642 53fa 	movw	r3, #11770	; 0x2dfa
 800917e:	8095      	strh	r5, [r2, #4]
 8009180:	18e2      	adds	r2, r4, r3
 8009182:	50e5      	str	r5, [r4, r3]
 8009184:	4629      	mov	r1, r5
 8009186:	8095      	strh	r5, [r2, #4]
 8009188:	f504 5038 	add.w	r0, r4, #11776	; 0x2e00
 800918c:	2242      	movs	r2, #66	; 0x42
 800918e:	f01e fca5 	bl	8027adc <memset>
 8009192:	f504 5039 	add.w	r0, r4, #11840	; 0x2e40
 8009196:	4629      	mov	r1, r5
 8009198:	2242      	movs	r2, #66	; 0x42
 800919a:	3002      	adds	r0, #2
 800919c:	f01e fc9e 	bl	8027adc <memset>
 80091a0:	f504 503a 	add.w	r0, r4, #11904	; 0x2e80
 80091a4:	2221      	movs	r2, #33	; 0x21
 80091a6:	4629      	mov	r1, r5
 80091a8:	3004      	adds	r0, #4
 80091aa:	f01e fc97 	bl	8027adc <memset>
}
 80091ae:	4620      	mov	r0, r4
 80091b0:	bd38      	pop	{r3, r4, r5, pc}
 80091b2:	bf00      	nop
 80091b4:	0802a80c 	.word	0x0802a80c
 80091b8:	0101001e 	.word	0x0101001e

080091bc <_ZN23CustomContainerKeyboard10UpdateTextEv>:
	Unicode::snprintf(textArea1Buffer, count_ContainerTextArea + 1,
 80091bc:	4b09      	ldr	r3, [pc, #36]	; (80091e4 <_ZN23CustomContainerKeyboard10UpdateTextEv+0x28>)
 80091be:	4a0a      	ldr	r2, [pc, #40]	; (80091e8 <_ZN23CustomContainerKeyboard10UpdateTextEv+0x2c>)
 80091c0:	8819      	ldrh	r1, [r3, #0]
void CustomContainerKeyboard::UpdateText() {
 80091c2:	b510      	push	{r4, lr}
	Unicode::snprintf(textArea1Buffer, count_ContainerTextArea + 1,
 80091c4:	3101      	adds	r1, #1
void CustomContainerKeyboard::UpdateText() {
 80091c6:	4604      	mov	r4, r0
	Unicode::snprintf(textArea1Buffer, count_ContainerTextArea + 1,
 80091c8:	f500 5028 	add.w	r0, r0, #10752	; 0x2a00
 80091cc:	b289      	uxth	r1, r1
 80091ce:	3024      	adds	r0, #36	; 0x24
 80091d0:	f011 ff66 	bl	801b0a0 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
	textArea1.invalidate();
 80091d4:	f504 5002 	add.w	r0, r4, #8320	; 0x2080
 80091d8:	3038      	adds	r0, #56	; 0x38
}
 80091da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textArea1.invalidate();
 80091de:	f00f ba75 	b.w	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>
 80091e2:	bf00      	nop
 80091e4:	2001ad10 	.word	0x2001ad10
 80091e8:	2001ad12 	.word	0x2001ad12

080091ec <_ZN23CustomContainerKeyboard10initializeEv>:
void CustomContainerKeyboard::initialize() {
 80091ec:	b510      	push	{r4, lr}
 80091ee:	4604      	mov	r4, r0
	CustomContainerKeyboardBase::initialize();
 80091f0:	f7f9 fb75 	bl	80028de <_ZN27CustomContainerKeyboardBase10initializeEv>
	count_ContainerTextArea = 0; // Очистка буфера обмена элемента контейнера CustomContainerKeyboard
 80091f4:	4b05      	ldr	r3, [pc, #20]	; (800920c <_ZN23CustomContainerKeyboard10initializeEv+0x20>)
 80091f6:	2200      	movs	r2, #0
 80091f8:	801a      	strh	r2, [r3, #0]
	capital_letters = 1;			// Включение заглавных букв
 80091fa:	f642 43eb 	movw	r3, #11499	; 0x2ceb
 80091fe:	2201      	movs	r2, #1
 8009200:	54e2      	strb	r2, [r4, r3]
	UpdateText();
 8009202:	4620      	mov	r0, r4
}
 8009204:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	UpdateText();
 8009208:	f7ff bfd8 	b.w	80091bc <_ZN23CustomContainerKeyboard10UpdateTextEv>
 800920c:	2001ad10 	.word	0x2001ad10

08009210 <_ZN23CustomContainerKeyboard17ClickButtonDelPreEv>:
void CustomContainerKeyboard::ClickButtonDelPre() {
 8009210:	b538      	push	{r3, r4, r5, lr}
	if (count_ContainerTextArea) {
 8009212:	4d0a      	ldr	r5, [pc, #40]	; (800923c <_ZN23CustomContainerKeyboard17ClickButtonDelPreEv+0x2c>)
 8009214:	882b      	ldrh	r3, [r5, #0]
void CustomContainerKeyboard::ClickButtonDelPre() {
 8009216:	4604      	mov	r4, r0
	if (count_ContainerTextArea) {
 8009218:	b923      	cbnz	r3, 8009224 <_ZN23CustomContainerKeyboard17ClickButtonDelPreEv+0x14>
	if ((count_ContainerTextArea == 0) && (capital_letters == 0)) {
 800921a:	f642 43eb 	movw	r3, #11499	; 0x2ceb
 800921e:	5ce2      	ldrb	r2, [r4, r3]
 8009220:	b142      	cbz	r2, 8009234 <_ZN23CustomContainerKeyboard17ClickButtonDelPreEv+0x24>
}
 8009222:	bd38      	pop	{r3, r4, r5, pc}
		count_ContainerTextArea -= 1;
 8009224:	3b01      	subs	r3, #1
 8009226:	802b      	strh	r3, [r5, #0]
		UpdateText();
 8009228:	f7ff ffc8 	bl	80091bc <_ZN23CustomContainerKeyboard10UpdateTextEv>
	if ((count_ContainerTextArea == 0) && (capital_letters == 0)) {
 800922c:	882b      	ldrh	r3, [r5, #0]
 800922e:	2b00      	cmp	r3, #0
 8009230:	d1f7      	bne.n	8009222 <_ZN23CustomContainerKeyboard17ClickButtonDelPreEv+0x12>
 8009232:	e7f2      	b.n	800921a <_ZN23CustomContainerKeyboard17ClickButtonDelPreEv+0xa>
		capital_letters = 1;
 8009234:	2201      	movs	r2, #1
 8009236:	54e2      	strb	r2, [r4, r3]
}
 8009238:	e7f3      	b.n	8009222 <_ZN23CustomContainerKeyboard17ClickButtonDelPreEv+0x12>
 800923a:	bf00      	nop
 800923c:	2001ad10 	.word	0x2001ad10

08009240 <_ZN23CustomContainerKeyboard17ClickButtonDelAllEv>:
	count_ContainerTextArea = 0;
 8009240:	4b04      	ldr	r3, [pc, #16]	; (8009254 <_ZN23CustomContainerKeyboard17ClickButtonDelAllEv+0x14>)
 8009242:	2200      	movs	r2, #0
 8009244:	801a      	strh	r2, [r3, #0]
	capital_letters = 1;
 8009246:	f642 43eb 	movw	r3, #11499	; 0x2ceb
 800924a:	2201      	movs	r2, #1
 800924c:	54c2      	strb	r2, [r0, r3]
	UpdateText();
 800924e:	f7ff bfb5 	b.w	80091bc <_ZN23CustomContainerKeyboard10UpdateTextEv>
 8009252:	bf00      	nop
 8009254:	2001ad10 	.word	0x2001ad10

08009258 <_ZN23CustomContainerKeyboard7action1Ev>:

//==================================================================================================================
void CustomContainerKeyboard::action1() {
//	textArea1Buffer[] = data_ContainerTextArea[];
	count_ContainerTextArea++;
 8009258:	4a06      	ldr	r2, [pc, #24]	; (8009274 <_ZN23CustomContainerKeyboard7action1Ev+0x1c>)
 800925a:	8813      	ldrh	r3, [r2, #0]
 800925c:	3301      	adds	r3, #1
 800925e:	b29b      	uxth	r3, r3
	if (count_ContainerTextArea == 1) {
 8009260:	2b01      	cmp	r3, #1
	count_ContainerTextArea++;
 8009262:	8013      	strh	r3, [r2, #0]
		capital_letters = 0;
 8009264:	bf02      	ittt	eq
 8009266:	f642 43eb 	movweq	r3, #11499	; 0x2ceb
 800926a:	2200      	moveq	r2, #0
 800926c:	54c2      	strbeq	r2, [r0, r3]
	if (count_ContainerTextArea == count_Container) {
		count_ContainerTextArea = (count_Container);
	}
	//-----------------------------------------------------------

	UpdateText();
 800926e:	f7ff bfa5 	b.w	80091bc <_ZN23CustomContainerKeyboard10UpdateTextEv>
 8009272:	bf00      	nop
 8009274:	2001ad10 	.word	0x2001ad10

08009278 <_ZN27CustomContainerKeyboard_NumD1Ev>:

class CustomContainerKeyboard_Num : public CustomContainerKeyboard_NumBase
{
public:
    CustomContainerKeyboard_Num();
    virtual ~CustomContainerKeyboard_Num() {}
 8009278:	4770      	bx	lr

0800927a <_ZN27CustomContainerKeyboard_Num16ClickButtonEnterEv>:
//	customContainerButton_key8.initialize_my(keyboard_mas[7]);
//	customContainerButton_key9.initialize_my(keyboard_mas[8]);
//	customContainerButton_key10.initialize_my(keyboard_mas[9]);
//	customContainerButton_key11.initialize_my(keyboard_mas[10]);
//	customContainerButton_key12.initialize_my(keyboard_mas[11]);
}
 800927a:	4770      	bx	lr

0800927c <_ZN27CustomContainerKeyboard_Num24ClickButtonCloseKeyboardEv>:
}

//==================================================================================================================
//When flexButton_close clicked call virtual function
void CustomContainerKeyboard_Num::ClickButtonCloseKeyboard() {
	count_ContainerTextArea = 0;
 800927c:	4a0c      	ldr	r2, [pc, #48]	; (80092b0 <_ZN27CustomContainerKeyboard_Num24ClickButtonCloseKeyboardEv+0x34>)
 800927e:	2300      	movs	r3, #0
void CustomContainerKeyboard_Num::ClickButtonCloseKeyboard() {
 8009280:	b510      	push	{r4, lr}
	count_ContainerTextArea = 0;
 8009282:	8013      	strh	r3, [r2, #0]
        visible = vis;
 8009284:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
	setVisible(false);
	invalidate();
 8009288:	6803      	ldr	r3, [r0, #0]
void CustomContainerKeyboard_Num::ClickButtonCloseKeyboard() {
 800928a:	4604      	mov	r4, r0
	invalidate();
 800928c:	695b      	ldr	r3, [r3, #20]
 800928e:	4798      	blx	r3
        setX(x);
 8009290:	6823      	ldr	r3, [r4, #0]
 8009292:	4908      	ldr	r1, [pc, #32]	; (80092b4 <_ZN27CustomContainerKeyboard_Num24ClickButtonCloseKeyboardEv+0x38>)
 8009294:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009296:	4620      	mov	r0, r4
 8009298:	4798      	blx	r3
        setY(y);
 800929a:	6823      	ldr	r3, [r4, #0]
 800929c:	4620      	mov	r0, r4
 800929e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80092a0:	21b4      	movs	r1, #180	; 0xb4
 80092a2:	4798      	blx	r3
	setXY(-270, 180);
	invalidate();
 80092a4:	6823      	ldr	r3, [r4, #0]
 80092a6:	4620      	mov	r0, r4
 80092a8:	695b      	ldr	r3, [r3, #20]
}
 80092aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	invalidate();
 80092ae:	4718      	bx	r3
 80092b0:	2001ad10 	.word	0x2001ad10
 80092b4:	fffffef2 	.word	0xfffffef2

080092b8 <_ZN27CustomContainerKeyboard_Num10initializeEv>:
    CustomContainerKeyboard_NumBase::initialize();
 80092b8:	f7fa bd89 	b.w	8003dce <_ZN31CustomContainerKeyboard_NumBase10initializeEv>

080092bc <_ZN27CustomContainerKeyboard_NumD0Ev>:
 80092bc:	b510      	push	{r4, lr}
 80092be:	f241 01bc 	movw	r1, #4284	; 0x10bc
 80092c2:	4604      	mov	r4, r0
 80092c4:	f01e fa2e 	bl	8027724 <_ZdlPvj>
 80092c8:	4620      	mov	r0, r4
 80092ca:	bd10      	pop	{r4, pc}

080092cc <_ZN27CustomContainerKeyboard_NumC1Ev>:
CustomContainerKeyboard_Num::CustomContainerKeyboard_Num()
 80092cc:	b510      	push	{r4, lr}
 80092ce:	4604      	mov	r4, r0
 80092d0:	f7fa fdd4 	bl	8003e7c <_ZN31CustomContainerKeyboard_NumBaseC1Ev>
 80092d4:	4b08      	ldr	r3, [pc, #32]	; (80092f8 <_ZN27CustomContainerKeyboard_NumC1Ev+0x2c>)
 80092d6:	6023      	str	r3, [r4, #0]
 80092d8:	f241 03ac 	movw	r3, #4268	; 0x10ac
 80092dc:	2205      	movs	r2, #5
 80092de:	54e2      	strb	r2, [r4, r3]
 80092e0:	4a06      	ldr	r2, [pc, #24]	; (80092fc <_ZN27CustomContainerKeyboard_NumC1Ev+0x30>)
 80092e2:	f241 00ad 	movw	r0, #4269	; 0x10ad
 80092e6:	1821      	adds	r1, r4, r0
 80092e8:	6813      	ldr	r3, [r2, #0]
 80092ea:	5023      	str	r3, [r4, r0]
 80092ec:	6853      	ldr	r3, [r2, #4]
 80092ee:	604b      	str	r3, [r1, #4]
 80092f0:	6893      	ldr	r3, [r2, #8]
 80092f2:	608b      	str	r3, [r1, #8]
}
 80092f4:	4620      	mov	r0, r4
 80092f6:	bd10      	pop	{r4, pc}
 80092f8:	0802a8c4 	.word	0x0802a8c4
 80092fc:	080289c0 	.word	0x080289c0

08009300 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv>:
void CustomContainerKeyboard_Num::UpdateText() {
 8009300:	b538      	push	{r3, r4, r5, lr}
	Unicode::snprintf(textArea1Buffer, count_ContainerTextArea + 1,
 8009302:	4d14      	ldr	r5, [pc, #80]	; (8009354 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv+0x54>)
 8009304:	4a14      	ldr	r2, [pc, #80]	; (8009358 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv+0x58>)
 8009306:	8829      	ldrh	r1, [r5, #0]
 8009308:	3101      	adds	r1, #1
void CustomContainerKeyboard_Num::UpdateText() {
 800930a:	4604      	mov	r4, r0
	Unicode::snprintf(textArea1Buffer, count_ContainerTextArea + 1,
 800930c:	b289      	uxth	r1, r1
 800930e:	f600 70c4 	addw	r0, r0, #4036	; 0xfc4
 8009312:	f011 fec5 	bl	801b0a0 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
	if(count_ContainerTextArea == 1){
 8009316:	882b      	ldrh	r3, [r5, #0]
 8009318:	2b01      	cmp	r3, #1
 800931a:	d113      	bne.n	8009344 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv+0x44>
		if((textArea1Buffer[1] == button_123_mas[9]) || (textArea1Buffer[1] == button_123_mas[11])){
 800931c:	f241 02b6 	movw	r2, #4278	; 0x10b6
 8009320:	f8b4 3fc6 	ldrh.w	r3, [r4, #4038]	; 0xfc6
 8009324:	5ca2      	ldrb	r2, [r4, r2]
 8009326:	429a      	cmp	r2, r3
 8009328:	d004      	beq.n	8009334 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv+0x34>
 800932a:	f241 02b8 	movw	r2, #4280	; 0x10b8
 800932e:	5ca2      	ldrb	r2, [r4, r2]
 8009330:	429a      	cmp	r2, r3
 8009332:	d109      	bne.n	8009348 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv+0x48>
			count_ContainerTextArea = 0;
 8009334:	2300      	movs	r3, #0
 8009336:	802b      	strh	r3, [r5, #0]
		textArea1Buffer[0] = button_123_mas[10];
 8009338:	f241 03b7 	movw	r3, #4279	; 0x10b7
 800933c:	5ce3      	ldrb	r3, [r4, r3]
 800933e:	f8a4 3fc4 	strh.w	r3, [r4, #4036]	; 0xfc4
 8009342:	e001      	b.n	8009348 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv+0x48>
	if(count_ContainerTextArea == 0){
 8009344:	2b00      	cmp	r3, #0
 8009346:	d0f7      	beq.n	8009338 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv+0x38>
	textArea1.invalidate();
 8009348:	f504 70ec 	add.w	r0, r4, #472	; 0x1d8
}
 800934c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	textArea1.invalidate();
 8009350:	f00f b9bc 	b.w	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>
 8009354:	2001ad10 	.word	0x2001ad10
 8009358:	2001ad12 	.word	0x2001ad12

0800935c <_ZN27CustomContainerKeyboard_Num17ClickButtonDelPreEv>:
	if (count_ContainerTextArea) {
 800935c:	4a03      	ldr	r2, [pc, #12]	; (800936c <_ZN27CustomContainerKeyboard_Num17ClickButtonDelPreEv+0x10>)
 800935e:	8813      	ldrh	r3, [r2, #0]
 8009360:	b11b      	cbz	r3, 800936a <_ZN27CustomContainerKeyboard_Num17ClickButtonDelPreEv+0xe>
		count_ContainerTextArea -= 1;
 8009362:	3b01      	subs	r3, #1
 8009364:	8013      	strh	r3, [r2, #0]
		UpdateText();
 8009366:	f7ff bfcb 	b.w	8009300 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv>
}
 800936a:	4770      	bx	lr
 800936c:	2001ad10 	.word	0x2001ad10

08009370 <_ZN27CustomContainerKeyboard_Num7action1Ev>:

//==================================================================================================================
void CustomContainerKeyboard_Num::action1() {
 8009370:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
// textArea1Buffer[] = data_ContainerTextArea[];
	count_ContainerTextArea++;
 8009372:	4d3a      	ldr	r5, [pc, #232]	; (800945c <_ZN27CustomContainerKeyboard_Num7action1Ev+0xec>)

	//------------------------------------------------------------------------------
	// Проверка на одну запятую
	if((data_ContainerTextArea[count_ContainerTextArea - 1] == button_123_mas[11])){
 8009374:	4e3a      	ldr	r6, [pc, #232]	; (8009460 <_ZN27CustomContainerKeyboard_Num7action1Ev+0xf0>)
	count_ContainerTextArea++;
 8009376:	882b      	ldrh	r3, [r5, #0]
	if((data_ContainerTextArea[count_ContainerTextArea - 1] == button_123_mas[11])){
 8009378:	f241 02b8 	movw	r2, #4280	; 0x10b8
	count_ContainerTextArea++;
 800937c:	3301      	adds	r3, #1
 800937e:	b29b      	uxth	r3, r3
	if((data_ContainerTextArea[count_ContainerTextArea - 1] == button_123_mas[11])){
 8009380:	5c81      	ldrb	r1, [r0, r2]
	count_ContainerTextArea++;
 8009382:	802b      	strh	r3, [r5, #0]
	if((data_ContainerTextArea[count_ContainerTextArea - 1] == button_123_mas[11])){
 8009384:	1e5a      	subs	r2, r3, #1
void CustomContainerKeyboard_Num::action1() {
 8009386:	4604      	mov	r4, r0
	if((data_ContainerTextArea[count_ContainerTextArea - 1] == button_123_mas[11])){
 8009388:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 800938c:	428a      	cmp	r2, r1
 800938e:	460f      	mov	r7, r1
 8009390:	d116      	bne.n	80093c0 <_ZN27CustomContainerKeyboard_Num7action1Ev+0x50>
		if(count_ContainerTextArea == 1){
 8009392:	2b01      	cmp	r3, #1
 8009394:	d107      	bne.n	80093a6 <_ZN27CustomContainerKeyboard_Num7action1Ev+0x36>
			data_ContainerTextArea[1] = data_ContainerTextArea[0];
 8009396:	8833      	ldrh	r3, [r6, #0]
 8009398:	8073      	strh	r3, [r6, #2]
			data_ContainerTextArea[0] = button_123_mas[10];
 800939a:	f241 03b7 	movw	r3, #4279	; 0x10b7
 800939e:	5cc3      	ldrb	r3, [r0, r3]
 80093a0:	8033      	strh	r3, [r6, #0]
			count_ContainerTextArea += 1;
 80093a2:	2302      	movs	r3, #2
 80093a4:	802b      	strh	r3, [r5, #0]
		}
		char * str_no = (char*)memchr((char*)&textArea1Buffer[0], button_123_mas[11], 10);
 80093a6:	220a      	movs	r2, #10
 80093a8:	f604 70c4 	addw	r0, r4, #4036	; 0xfc4
 80093ac:	9101      	str	r1, [sp, #4]
 80093ae:	f7f6 ff27 	bl	8000200 <memchr>
		if(str_no != NULL){
 80093b2:	9901      	ldr	r1, [sp, #4]
 80093b4:	b120      	cbz	r0, 80093c0 <_ZN27CustomContainerKeyboard_Num7action1Ev+0x50>
			count_ContainerTextArea -= 1;
 80093b6:	882b      	ldrh	r3, [r5, #0]
 80093b8:	3b01      	subs	r3, #1
 80093ba:	802b      	strh	r3, [r5, #0]
	}

	UpdateText();


}
 80093bc:	b003      	add	sp, #12
 80093be:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if((textArea1Buffer[0] == button_123_mas[10]) &&
 80093c0:	f241 03b7 	movw	r3, #4279	; 0x10b7
 80093c4:	5ce2      	ldrb	r2, [r4, r3]
 80093c6:	f8b4 3fc4 	ldrh.w	r3, [r4, #4036]	; 0xfc4
 80093ca:	4293      	cmp	r3, r2
 80093cc:	d10b      	bne.n	80093e6 <_ZN27CustomContainerKeyboard_Num7action1Ev+0x76>
 80093ce:	882b      	ldrh	r3, [r5, #0]
 80093d0:	1e58      	subs	r0, r3, #1
 80093d2:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 80093d6:	42b8      	cmp	r0, r7
 80093d8:	d005      	beq.n	80093e6 <_ZN27CustomContainerKeyboard_Num7action1Ev+0x76>
			(data_ContainerTextArea[count_ContainerTextArea - 1] != button_123_mas[11]) &&
 80093da:	2b02      	cmp	r3, #2
			data_ContainerTextArea[0] = data_ContainerTextArea[1];
 80093dc:	bf01      	itttt	eq
 80093de:	8873      	ldrheq	r3, [r6, #2]
 80093e0:	8033      	strheq	r3, [r6, #0]
		count_ContainerTextArea = 1;
 80093e2:	2301      	moveq	r3, #1
 80093e4:	802b      	strheq	r3, [r5, #0]
	if((data_ContainerTextArea[count_ContainerTextArea - 1] == button_123_mas[9]) && (count_ContainerTextArea == 1)){
 80093e6:	8828      	ldrh	r0, [r5, #0]
 80093e8:	f241 03b6 	movw	r3, #4278	; 0x10b6
 80093ec:	1e47      	subs	r7, r0, #1
 80093ee:	5ce3      	ldrb	r3, [r4, r3]
 80093f0:	f836 7017 	ldrh.w	r7, [r6, r7, lsl #1]
 80093f4:	429f      	cmp	r7, r3
 80093f6:	d104      	bne.n	8009402 <_ZN27CustomContainerKeyboard_Num7action1Ev+0x92>
 80093f8:	2801      	cmp	r0, #1
		data_ContainerTextArea[1] = button_123_mas[10];
 80093fa:	bf02      	ittt	eq
 80093fc:	8072      	strheq	r2, [r6, #2]
		count_ContainerTextArea += 1;
 80093fe:	2202      	moveq	r2, #2
 8009400:	802a      	strheq	r2, [r5, #0]
	if((data_ContainerTextArea[count_ContainerTextArea - 1] == button_123_mas[9]) && (count_ContainerTextArea > 1)){
 8009402:	882f      	ldrh	r7, [r5, #0]
 8009404:	1e7a      	subs	r2, r7, #1
 8009406:	f836 0012 	ldrh.w	r0, [r6, r2, lsl #1]
 800940a:	4298      	cmp	r0, r3
 800940c:	d103      	bne.n	8009416 <_ZN27CustomContainerKeyboard_Num7action1Ev+0xa6>
 800940e:	2f01      	cmp	r7, #1
 8009410:	d901      	bls.n	8009416 <_ZN27CustomContainerKeyboard_Num7action1Ev+0xa6>
		count_ContainerTextArea -= 1;
 8009412:	802a      	strh	r2, [r5, #0]
		return;
 8009414:	e7d2      	b.n	80093bc <_ZN27CustomContainerKeyboard_Num7action1Ev+0x4c>
	count_Container = 5;
 8009416:	2005      	movs	r0, #5
 8009418:	f241 02ac 	movw	r2, #4268	; 0x10ac
	if (count_ContainerTextArea > 5) {
 800941c:	4287      	cmp	r7, r0
	count_Container = 5;
 800941e:	54a0      	strb	r0, [r4, r2]
	if (count_ContainerTextArea > 5) {
 8009420:	d915      	bls.n	800944e <_ZN27CustomContainerKeyboard_Num7action1Ev+0xde>
		if(data_ContainerTextArea[0] == button_123_mas[9]){
 8009422:	8830      	ldrh	r0, [r6, #0]
 8009424:	4298      	cmp	r0, r3
			count_Container += 1;
 8009426:	bf04      	itt	eq
 8009428:	2306      	moveq	r3, #6
 800942a:	54a3      	strbeq	r3, [r4, r2]
		char * str_no = (char*)memchr((char*)&textArea1Buffer[0], button_123_mas[11], 10);
 800942c:	f604 70c4 	addw	r0, r4, #4036	; 0xfc4
 8009430:	220a      	movs	r2, #10
 8009432:	f7f6 fee5 	bl	8000200 <memchr>
		if(str_no != NULL){
 8009436:	b120      	cbz	r0, 8009442 <_ZN27CustomContainerKeyboard_Num7action1Ev+0xd2>
			count_Container += 1;
 8009438:	f241 02ac 	movw	r2, #4268	; 0x10ac
 800943c:	5ca3      	ldrb	r3, [r4, r2]
 800943e:	3301      	adds	r3, #1
 8009440:	54a3      	strb	r3, [r4, r2]
		if(count_ContainerTextArea >= count_Container){
 8009442:	f241 03ac 	movw	r3, #4268	; 0x10ac
 8009446:	5ce3      	ldrb	r3, [r4, r3]
 8009448:	429f      	cmp	r7, r3
			count_ContainerTextArea = (count_Container);
 800944a:	bf28      	it	cs
 800944c:	802b      	strhcs	r3, [r5, #0]
	UpdateText();
 800944e:	4620      	mov	r0, r4
}
 8009450:	b003      	add	sp, #12
 8009452:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	UpdateText();
 8009456:	f7ff bf53 	b.w	8009300 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv>
 800945a:	bf00      	nop
 800945c:	2001ad10 	.word	0x2001ad10
 8009460:	2001ad12 	.word	0x2001ad12

08009464 <_ZN23CustomContainerTableLogD1Ev>:

class CustomContainerTableLog : public CustomContainerTableLogBase
{
public:
    CustomContainerTableLog();
    virtual ~CustomContainerTableLog() {}
 8009464:	4770      	bx	lr

08009466 <_ZN23CustomContainerTableLog10initializeEv>:

}

void CustomContainerTableLog::initialize()
{
    CustomContainerTableLogBase::initialize();
 8009466:	f7fb b856 	b.w	8004516 <_ZN27CustomContainerTableLogBase10initializeEv>

0800946a <_ZN23CustomContainerTableLogD0Ev>:
 800946a:	b510      	push	{r4, lr}
 800946c:	f44f 61ba 	mov.w	r1, #1488	; 0x5d0
 8009470:	4604      	mov	r4, r0
 8009472:	f01e f957 	bl	8027724 <_ZdlPvj>
 8009476:	4620      	mov	r0, r4
 8009478:	bd10      	pop	{r4, pc}
	...

0800947c <_ZN23CustomContainerTableLogC1Ev>:
CustomContainerTableLog::CustomContainerTableLog()
 800947c:	b570      	push	{r4, r5, r6, lr}
 800947e:	4604      	mov	r4, r0
 8009480:	f7fb f886 	bl	8004590 <_ZN27CustomContainerTableLogBaseC1Ev>
 8009484:	4b2b      	ldr	r3, [pc, #172]	; (8009534 <_ZN23CustomContainerTableLogC1Ev+0xb8>)
 8009486:	6023      	str	r3, [r4, #0]
 8009488:	2228      	movs	r2, #40	; 0x28
 800948a:	2100      	movs	r1, #0
 800948c:	f204 40fe 	addw	r0, r4, #1278	; 0x4fe
 8009490:	f01e fb24 	bl	8027adc <memset>
 8009494:	f240 431f 	movw	r3, #1055	; 0x41f
 8009498:	f8a4 34fe 	strh.w	r3, [r4, #1278]	; 0x4fe
 800949c:	4b26      	ldr	r3, [pc, #152]	; (8009538 <_ZN23CustomContainerTableLogC1Ev+0xbc>)
 800949e:	f8c4 3500 	str.w	r3, [r4, #1280]	; 0x500
 80094a2:	f503 2350 	add.w	r3, r3, #851968	; 0xd0000
 80094a6:	3306      	adds	r3, #6
 80094a8:	f8c4 3504 	str.w	r3, [r4, #1284]	; 0x504
 80094ac:	2228      	movs	r2, #40	; 0x28
 80094ae:	2100      	movs	r1, #0
 80094b0:	f204 5026 	addw	r0, r4, #1318	; 0x526
 80094b4:	f01e fb12 	bl	8027adc <memset>
 80094b8:	234b      	movs	r3, #75	; 0x4b
 80094ba:	f8a4 3528 	strh.w	r3, [r4, #1320]	; 0x528
 80094be:	f240 431e 	movw	r3, #1054	; 0x41e
 80094c2:	f8a4 353a 	strh.w	r3, [r4, #1338]	; 0x53a
 80094c6:	4b1d      	ldr	r3, [pc, #116]	; (800953c <_ZN23CustomContainerTableLogC1Ev+0xc0>)
 80094c8:	f8c4 353c 	str.w	r3, [r4, #1340]	; 0x53c
 80094cc:	f5a3 235f 	sub.w	r3, r3, #913408	; 0xdf000
 80094d0:	264f      	movs	r6, #79	; 0x4f
 80094d2:	f6a3 73e6 	subw	r3, r3, #4070	; 0xfe6
 80094d6:	f8c4 3540 	str.w	r3, [r4, #1344]	; 0x540
 80094da:	f8a4 6526 	strh.w	r6, [r4, #1318]	; 0x526
 80094de:	2228      	movs	r2, #40	; 0x28
 80094e0:	2100      	movs	r1, #0
 80094e2:	f204 504e 	addw	r0, r4, #1358	; 0x54e
 80094e6:	f01e faf9 	bl	8027adc <memset>
 80094ea:	234c      	movs	r3, #76	; 0x4c
 80094ec:	f8a4 354e 	strh.w	r3, [r4, #1358]	; 0x54e
 80094f0:	4b13      	ldr	r3, [pc, #76]	; (8009540 <_ZN23CustomContainerTableLogC1Ev+0xc4>)
 80094f2:	f8c4 3550 	str.w	r3, [r4, #1360]	; 0x550
 80094f6:	2356      	movs	r3, #86	; 0x56
 80094f8:	f8a4 3562 	strh.w	r3, [r4, #1378]	; 0x562
 80094fc:	4b11      	ldr	r3, [pc, #68]	; (8009544 <_ZN23CustomContainerTableLogC1Ev+0xc8>)
 80094fe:	f8c4 3564 	str.w	r3, [r4, #1380]	; 0x564
 8009502:	2500      	movs	r5, #0
 8009504:	234e      	movs	r3, #78	; 0x4e
 8009506:	f8a4 3576 	strh.w	r3, [r4, #1398]	; 0x576
 800950a:	4629      	mov	r1, r5
 800950c:	f8c4 557a 	str.w	r5, [r4, #1402]	; 0x57a
 8009510:	f8a4 557e 	strh.w	r5, [r4, #1406]	; 0x57e
 8009514:	f8a4 6578 	strh.w	r6, [r4, #1400]	; 0x578
 8009518:	2228      	movs	r2, #40	; 0x28
 800951a:	f504 60b0 	add.w	r0, r4, #1408	; 0x580
 800951e:	f01e fadd 	bl	8027adc <memset>
 8009522:	2228      	movs	r2, #40	; 0x28
 8009524:	4629      	mov	r1, r5
 8009526:	f504 60b5 	add.w	r0, r4, #1448	; 0x5a8
 800952a:	f01e fad7 	bl	8027adc <memset>
}
 800952e:	4620      	mov	r0, r4
 8009530:	bd70      	pop	{r4, r5, r6, pc}
 8009532:	bf00      	nop
 8009534:	0802a988 	.word	0x0802a988
 8009538:	04420435 	.word	0x04420435
 800953c:	04400431 	.word	0x04400431
 8009540:	004c0045 	.word	0x004c0045
 8009544:	004c004f 	.word	0x004c004f

08009548 <_ZN23CustomContainerTableLog9UpdateLogEP15TileInfoTypeDef>:
}

void CustomContainerTableLog::UpdateLog(TileInfoTypeDef * data)
{
 8009548:	b570      	push	{r4, r5, r6, lr}
        visible = vis;
 800954a:	2601      	movs	r6, #1
 800954c:	4604      	mov	r4, r0
 800954e:	f880 6025 	strb.w	r6, [r0, #37]	; 0x25
	setVisible(true);
	tmp = data->working_hours_log;
 8009552:	482a      	ldr	r0, [pc, #168]	; (80095fc <_ZN23CustomContainerTableLog9UpdateLogEP15TileInfoTypeDef+0xb4>)
 8009554:	680b      	ldr	r3, [r1, #0]
 8009556:	6003      	str	r3, [r0, #0]
{
 8009558:	b086      	sub	sp, #24
 800955a:	460d      	mov	r5, r1
	tm_ptr = *gmtime(&tmp);
 800955c:	f002 fcba 	bl	800bed4 <gmtime>
 8009560:	4a27      	ldr	r2, [pc, #156]	; (8009600 <_ZN23CustomContainerTableLog9UpdateLogEP15TileInfoTypeDef+0xb8>)
 8009562:	6803      	ldr	r3, [r0, #0]
 8009564:	6013      	str	r3, [r2, #0]
 8009566:	6843      	ldr	r3, [r0, #4]
 8009568:	6053      	str	r3, [r2, #4]
 800956a:	6883      	ldr	r3, [r0, #8]
	tm_ptr.tm_mon = 1;
	tm_ptr.tm_mday = 30;

	Unicode::snprintf(textAreaDataTimeBuffer, TEXTAREADATATIME_SIZE, "%.2d-%.2d-%4d %.2d:%.2d",
 800956c:	7851      	ldrb	r1, [r2, #1]
	tm_ptr = *gmtime(&tmp);
 800956e:	6093      	str	r3, [r2, #8]
	tm_ptr.tm_mday = 30;
 8009570:	231e      	movs	r3, #30
	tm_ptr.tm_mon = 1;
 8009572:	7156      	strb	r6, [r2, #5]
	tm_ptr.tm_mday = 30;
 8009574:	70d3      	strb	r3, [r2, #3]
	Unicode::snprintf(textAreaDataTimeBuffer, TEXTAREADATATIME_SIZE, "%.2d-%.2d-%4d %.2d:%.2d",
 8009576:	9103      	str	r1, [sp, #12]
 8009578:	7891      	ldrb	r1, [r2, #2]
 800957a:	9102      	str	r1, [sp, #8]
	tm_ptr.tm_mday, tm_ptr.tm_mon, tm_ptr.tm_year + 1900, tm_ptr.tm_hour, tm_ptr.tm_min);
 800957c:	88d2      	ldrh	r2, [r2, #6]
	Unicode::snprintf(textAreaDataTimeBuffer, TEXTAREADATATIME_SIZE, "%.2d-%.2d-%4d %.2d:%.2d",
 800957e:	f202 726c 	addw	r2, r2, #1900	; 0x76c
 8009582:	e9cd 6200 	strd	r6, r2, [sp]
 8009586:	2114      	movs	r1, #20
 8009588:	4a1e      	ldr	r2, [pc, #120]	; (8009604 <_ZN23CustomContainerTableLog9UpdateLogEP15TileInfoTypeDef+0xbc>)
 800958a:	f504 6088 	add.w	r0, r4, #1088	; 0x440
 800958e:	f011 fd9d 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

	Unicode::snprintf(textAreaNumChanBuffer, TEXTAREANUMCHAN_SIZE, "%d", data->channel_num);
 8009592:	7a2b      	ldrb	r3, [r5, #8]
 8009594:	4a1c      	ldr	r2, [pc, #112]	; (8009608 <_ZN23CustomContainerTableLog9UpdateLogEP15TileInfoTypeDef+0xc0>)
 8009596:	2105      	movs	r1, #5
 8009598:	f504 608d 	add.w	r0, r4, #1128	; 0x468
 800959c:	f011 fd96 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

	Unicode::snprintf(textAreaTypeChanBuffer, TEXTAREATYPECHAN_SIZE, "%s", NamesTypeChannel[data->ch_type]);
 80095a0:	7c6b      	ldrb	r3, [r5, #17]
 80095a2:	2214      	movs	r2, #20
 80095a4:	fb02 4303 	mla	r3, r2, r3, r4
 80095a8:	f203 43fe 	addw	r3, r3, #1278	; 0x4fe
 80095ac:	4a17      	ldr	r2, [pc, #92]	; (800960c <_ZN23CustomContainerTableLog9UpdateLogEP15TileInfoTypeDef+0xc4>)
 80095ae:	210a      	movs	r1, #10
 80095b0:	f204 4072 	addw	r0, r4, #1138	; 0x472
 80095b4:	f011 fd8a 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

//	Unicode::snprintf(textAreaStLoopBuffer, TEXTAREASTLOOP_SIZE, NamesStLoop[data->loop_state]);

	Unicode::snprintfFloat(textAreaConcBuffer, TEXTAREACONC_SIZE, "%.1f", data->concentration);
 80095b8:	68eb      	ldr	r3, [r5, #12]
 80095ba:	9305      	str	r3, [sp, #20]
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 80095bc:	4a14      	ldr	r2, [pc, #80]	; (8009610 <_ZN23CustomContainerTableLog9UpdateLogEP15TileInfoTypeDef+0xc8>)
 80095be:	ab05      	add	r3, sp, #20
 80095c0:	210a      	movs	r1, #10
 80095c2:	f204 409a 	addw	r0, r4, #1178	; 0x49a
 80095c6:	f011 ff41 	bl	801b44c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>

	Unicode::snprintf(textAreaUnitBuffer, TEXTAREAUNIT_SIZE, units_list[data->units]);
 80095ca:	7c2a      	ldrb	r2, [r5, #16]
 80095cc:	4b11      	ldr	r3, [pc, #68]	; (8009614 <_ZN23CustomContainerTableLog9UpdateLogEP15TileInfoTypeDef+0xcc>)
 80095ce:	210a      	movs	r1, #10
 80095d0:	eb03 1202 	add.w	r2, r3, r2, lsl #4
 80095d4:	f204 40ae 	addw	r0, r4, #1198	; 0x4ae
 80095d8:	f011 fd78 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

//	Unicode::snprintf(textAreaStCurBuffer, TEXTAREASTCUR_SIZE, NamesStCur[data->thld_state]);
//
//	Unicode::snprintf(textAreaErrBuffer, TEXTAREAERR_SIZE, NamesErr[data->error_state]);
//
	Unicode::snprintf(textAreaGasBuffer, TEXTAREAGAS_SIZE, gas_formulas_list[data->formula]);
 80095dc:	7daa      	ldrb	r2, [r5, #22]
 80095de:	4b0e      	ldr	r3, [pc, #56]	; (8009618 <_ZN23CustomContainerTableLog9UpdateLogEP15TileInfoTypeDef+0xd0>)
 80095e0:	210a      	movs	r1, #10
 80095e2:	eb03 1202 	add.w	r2, r3, r2, lsl #4
 80095e6:	f204 40ea 	addw	r0, r4, #1258	; 0x4ea
 80095ea:	f011 fd6f 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

	invalidate();
 80095ee:	6823      	ldr	r3, [r4, #0]
 80095f0:	4620      	mov	r0, r4
 80095f2:	695b      	ldr	r3, [r3, #20]
 80095f4:	4798      	blx	r3
}
 80095f6:	b006      	add	sp, #24
 80095f8:	bd70      	pop	{r4, r5, r6, pc}
 80095fa:	bf00      	nop
 80095fc:	2001ad64 	.word	0x2001ad64
 8009600:	2001ad68 	.word	0x2001ad68
 8009604:	0802a960 	.word	0x0802a960
 8009608:	0802a646 	.word	0x0802a646
 800960c:	08029581 	.word	0x08029581
 8009610:	0802a978 	.word	0x0802a978
 8009614:	08029190 	.word	0x08029190
 8009618:	08029130 	.word	0x08029130

0800961c <_ZN29CustomContainerTableLog_Type2D1Ev>:

class CustomContainerTableLog_Type2 : public CustomContainerTableLog_Type2Base
{
public:
    CustomContainerTableLog_Type2();
    virtual ~CustomContainerTableLog_Type2() {}
 800961c:	4770      	bx	lr

0800961e <_ZN29CustomContainerTableLog_Type210initializeEv>:

}

void CustomContainerTableLog_Type2::initialize()
{
    CustomContainerTableLog_Type2Base::initialize();
 800961e:	f7fb bafa 	b.w	8004c16 <_ZN33CustomContainerTableLog_Type2Base10initializeEv>

08009622 <_ZN29CustomContainerTableLog_Type2D0Ev>:
 8009622:	b510      	push	{r4, lr}
 8009624:	f240 5194 	movw	r1, #1428	; 0x594
 8009628:	4604      	mov	r4, r0
 800962a:	f01e f87b 	bl	8027724 <_ZdlPvj>
 800962e:	4620      	mov	r0, r4
 8009630:	bd10      	pop	{r4, pc}
	...

08009634 <_ZN29CustomContainerTableLog_Type2C1Ev>:
CustomContainerTableLog_Type2::CustomContainerTableLog_Type2()
 8009634:	b510      	push	{r4, lr}
 8009636:	4604      	mov	r4, r0
 8009638:	f7fb faf6 	bl	8004c28 <_ZN33CustomContainerTableLog_Type2BaseC1Ev>
 800963c:	4b01      	ldr	r3, [pc, #4]	; (8009644 <_ZN29CustomContainerTableLog_Type2C1Ev+0x10>)
 800963e:	6023      	str	r3, [r4, #0]
}
 8009640:	4620      	mov	r0, r4
 8009642:	bd10      	pop	{r4, pc}
 8009644:	0802aa18 	.word	0x0802aa18

08009648 <_ZN29CustomContainerTableLog_Type29UpdateLogEP20ContainerInfoTypeDef>:
	setVisible(false);
	invalidate();
}

void CustomContainerTableLog_Type2::UpdateLog(ContainerInfoTypeDef * data)
{
 8009648:	b570      	push	{r4, r5, r6, lr}
 800964a:	2601      	movs	r6, #1
 800964c:	4604      	mov	r4, r0
 800964e:	f880 6025 	strb.w	r6, [r0, #37]	; 0x25
	char buf[16] = { 0 };
	setVisible(true);
	tmp = data->working_hours_log;
 8009652:	483a      	ldr	r0, [pc, #232]	; (800973c <_ZN29CustomContainerTableLog_Type29UpdateLogEP20ContainerInfoTypeDef+0xf4>)
 8009654:	680b      	ldr	r3, [r1, #0]
 8009656:	6003      	str	r3, [r0, #0]
{
 8009658:	b086      	sub	sp, #24
 800965a:	460d      	mov	r5, r1
	tm_ptr = *gmtime(&tmp);
 800965c:	f002 fc3a 	bl	800bed4 <gmtime>
 8009660:	4a37      	ldr	r2, [pc, #220]	; (8009740 <_ZN29CustomContainerTableLog_Type29UpdateLogEP20ContainerInfoTypeDef+0xf8>)
 8009662:	6803      	ldr	r3, [r0, #0]
 8009664:	6013      	str	r3, [r2, #0]
 8009666:	6843      	ldr	r3, [r0, #4]
 8009668:	6053      	str	r3, [r2, #4]
 800966a:	6883      	ldr	r3, [r0, #8]
	tm_ptr.tm_mon = 1;
	tm_ptr.tm_mday = 30;

	Unicode::snprintf(textAreaDataTimeBuffer, TEXTAREADATATIME_SIZE, "%.2d-%.2d-%4d %.2d:%.2d",
 800966c:	7851      	ldrb	r1, [r2, #1]
	tm_ptr = *gmtime(&tmp);
 800966e:	6093      	str	r3, [r2, #8]
	tm_ptr.tm_mday = 30;
 8009670:	231e      	movs	r3, #30
	tm_ptr.tm_mon = 1;
 8009672:	7156      	strb	r6, [r2, #5]
	tm_ptr.tm_mday = 30;
 8009674:	70d3      	strb	r3, [r2, #3]
	Unicode::snprintf(textAreaDataTimeBuffer, TEXTAREADATATIME_SIZE, "%.2d-%.2d-%4d %.2d:%.2d",
 8009676:	9103      	str	r1, [sp, #12]
 8009678:	7891      	ldrb	r1, [r2, #2]
 800967a:	9102      	str	r1, [sp, #8]
	tm_ptr.tm_mday, tm_ptr.tm_mon, tm_ptr.tm_year + 1900, tm_ptr.tm_hour, tm_ptr.tm_min);
 800967c:	88d2      	ldrh	r2, [r2, #6]
	Unicode::snprintf(textAreaDataTimeBuffer, TEXTAREADATATIME_SIZE, "%.2d-%.2d-%4d %.2d:%.2d",
 800967e:	f202 726c 	addw	r2, r2, #1900	; 0x76c
 8009682:	e9cd 6200 	strd	r6, r2, [sp]
 8009686:	2114      	movs	r1, #20
 8009688:	4a2e      	ldr	r2, [pc, #184]	; (8009744 <_ZN29CustomContainerTableLog_Type29UpdateLogEP20ContainerInfoTypeDef+0xfc>)
 800968a:	f204 40b4 	addw	r0, r4, #1204	; 0x4b4
 800968e:	f011 fd1d 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

	Unicode::snprintf(textAreaNumChanBuffer, TEXTAREANUMCHAN_SIZE, "%d", data->channel_num);
 8009692:	7b2b      	ldrb	r3, [r5, #12]
 8009694:	4a2c      	ldr	r2, [pc, #176]	; (8009748 <_ZN29CustomContainerTableLog_Type29UpdateLogEP20ContainerInfoTypeDef+0x100>)
 8009696:	2105      	movs	r1, #5
 8009698:	f204 40dc 	addw	r0, r4, #1244	; 0x4dc
 800969c:	f011 fd16 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

	Unicode::snprintfFloat(textAreaThreshold_1Buffer, TEXTAREATHRESHOLD_1_SIZE, "%.1f", data->threshold_1);
 80096a0:	696b      	ldr	r3, [r5, #20]
 80096a2:	9305      	str	r3, [sp, #20]
 80096a4:	4a29      	ldr	r2, [pc, #164]	; (800974c <_ZN29CustomContainerTableLog_Type29UpdateLogEP20ContainerInfoTypeDef+0x104>)
 80096a6:	ab05      	add	r3, sp, #20
 80096a8:	210a      	movs	r1, #10
 80096aa:	f204 40e6 	addw	r0, r4, #1254	; 0x4e6
 80096ae:	f011 fecd 	bl	801b44c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>

	Unicode::snprintfFloat(textAreaThreshold_2Buffer, TEXTAREATHRESHOLD_2_SIZE, "%.1f", data->threshold_2);
 80096b2:	69ab      	ldr	r3, [r5, #24]
 80096b4:	9305      	str	r3, [sp, #20]
 80096b6:	4a25      	ldr	r2, [pc, #148]	; (800974c <_ZN29CustomContainerTableLog_Type29UpdateLogEP20ContainerInfoTypeDef+0x104>)
 80096b8:	ab05      	add	r3, sp, #20
 80096ba:	210a      	movs	r1, #10
 80096bc:	f204 40fa 	addw	r0, r4, #1274	; 0x4fa
 80096c0:	f011 fec4 	bl	801b44c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>

	Unicode::snprintfFloat(textAreaThreshold_3Buffer, TEXTAREATHRESHOLD_3_SIZE, "%.1f", data->threshold_3);
 80096c4:	69eb      	ldr	r3, [r5, #28]
 80096c6:	9305      	str	r3, [sp, #20]
 80096c8:	4a20      	ldr	r2, [pc, #128]	; (800974c <_ZN29CustomContainerTableLog_Type29UpdateLogEP20ContainerInfoTypeDef+0x104>)
 80096ca:	ab05      	add	r3, sp, #20
 80096cc:	210a      	movs	r1, #10
 80096ce:	f204 500e 	addw	r0, r4, #1294	; 0x50e
 80096d2:	f011 febb 	bl	801b44c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>

	Unicode::snprintfFloat(textAreaFullScaleBuffer, TEXTAREAFULLSCALE_SIZE, "%.1f", data->full_scale);
 80096d6:	6a2b      	ldr	r3, [r5, #32]
 80096d8:	9305      	str	r3, [sp, #20]
 80096da:	4a1c      	ldr	r2, [pc, #112]	; (800974c <_ZN29CustomContainerTableLog_Type29UpdateLogEP20ContainerInfoTypeDef+0x104>)
 80096dc:	ab05      	add	r3, sp, #20
 80096de:	210a      	movs	r1, #10
 80096e0:	f204 5022 	addw	r0, r4, #1314	; 0x522
 80096e4:	f011 feb2 	bl	801b44c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>

	Unicode::snprintfFloat(textAreaFullHysteresisBuffer, TEXTAREAFULLHYSTERESIS_SIZE, "%.1f", data->hysteresis);
 80096e8:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80096ea:	9305      	str	r3, [sp, #20]
 80096ec:	4a17      	ldr	r2, [pc, #92]	; (800974c <_ZN29CustomContainerTableLog_Type29UpdateLogEP20ContainerInfoTypeDef+0x104>)
 80096ee:	ab05      	add	r3, sp, #20
 80096f0:	210a      	movs	r1, #10
 80096f2:	f204 5036 	addw	r0, r4, #1334	; 0x536
 80096f6:	f011 fea9 	bl	801b44c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>

	Unicode::snprintf(textAreaUnitBuffer, TEXTAREAUNIT_SIZE, units_list[data->units]);
 80096fa:	f895 2028 	ldrb.w	r2, [r5, #40]	; 0x28
 80096fe:	4b14      	ldr	r3, [pc, #80]	; (8009750 <_ZN29CustomContainerTableLog_Type29UpdateLogEP20ContainerInfoTypeDef+0x108>)
 8009700:	210a      	movs	r1, #10
 8009702:	eb03 1202 	add.w	r2, r3, r2, lsl #4
 8009706:	f204 504a 	addw	r0, r4, #1354	; 0x54a
 800970a:	f011 fcdf 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

	Unicode::snprintf(textAreaGasBuffer, TEXTAREAGAS_SIZE, gas_formulas_list[data->formula]);
 800970e:	4b11      	ldr	r3, [pc, #68]	; (8009754 <_ZN29CustomContainerTableLog_Type29UpdateLogEP20ContainerInfoTypeDef+0x10c>)
 8009710:	f895 202e 	ldrb.w	r2, [r5, #46]	; 0x2e
 8009714:	210a      	movs	r1, #10
 8009716:	eb03 1202 	add.w	r2, r3, r2, lsl #4
 800971a:	f204 505e 	addw	r0, r4, #1374	; 0x55e
 800971e:	f011 fcd5 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

	Unicode::snprintf(textAreaTagBuffer, TEXTAREATAG_SIZE, data->buf_tag);
 8009722:	f105 022f 	add.w	r2, r5, #47	; 0x2f
 8009726:	2110      	movs	r1, #16
 8009728:	f204 5072 	addw	r0, r4, #1394	; 0x572
 800972c:	f011 fcce 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

	invalidate();
 8009730:	6823      	ldr	r3, [r4, #0]
 8009732:	4620      	mov	r0, r4
 8009734:	695b      	ldr	r3, [r3, #20]
 8009736:	4798      	blx	r3
}
 8009738:	b006      	add	sp, #24
 800973a:	bd70      	pop	{r4, r5, r6, pc}
 800973c:	2001ad74 	.word	0x2001ad74
 8009740:	2001ad78 	.word	0x2001ad78
 8009744:	0802a960 	.word	0x0802a960
 8009748:	0802a646 	.word	0x0802a646
 800974c:	0802a978 	.word	0x0802a978
 8009750:	08029190 	.word	0x08029190
 8009754:	08029130 	.word	0x08029130

08009758 <_ZN8touchgfx8CallbackI10DatePickerRK13WheelSelectorRKivED1Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 8009758:	4770      	bx	lr

0800975a <_ZN8touchgfx8CallbackI10DatePickerRK13WheelSelectorRKivE7executeES4_S6_>:
    virtual void execute(T1 t1, T2 t2)
 800975a:	b470      	push	{r4, r5, r6}
        (pobject->*pmemfun_2)(t1, t2);
 800975c:	68c4      	ldr	r4, [r0, #12]
 800975e:	6845      	ldr	r5, [r0, #4]
 8009760:	1066      	asrs	r6, r4, #1
    virtual void execute(T1 t1, T2 t2)
 8009762:	4603      	mov	r3, r0
        (pobject->*pmemfun_2)(t1, t2);
 8009764:	eb05 0064 	add.w	r0, r5, r4, asr #1
 8009768:	07e4      	lsls	r4, r4, #31
 800976a:	bf48      	it	mi
 800976c:	59ac      	ldrmi	r4, [r5, r6]
 800976e:	689b      	ldr	r3, [r3, #8]
 8009770:	bf48      	it	mi
 8009772:	58e3      	ldrmi	r3, [r4, r3]
    }
 8009774:	bc70      	pop	{r4, r5, r6}
        (pobject->*pmemfun_2)(t1, t2);
 8009776:	4718      	bx	r3

08009778 <_ZNK8touchgfx8CallbackI10DatePickerRK13WheelSelectorRKivE7isValidEv>:
        return (pobject != 0) && (pmemfun_2 != 0);
 8009778:	6843      	ldr	r3, [r0, #4]
 800977a:	b12b      	cbz	r3, 8009788 <_ZNK8touchgfx8CallbackI10DatePickerRK13WheelSelectorRKivE7isValidEv+0x10>
 800977c:	6883      	ldr	r3, [r0, #8]
 800977e:	b92b      	cbnz	r3, 800978c <_ZNK8touchgfx8CallbackI10DatePickerRK13WheelSelectorRKivE7isValidEv+0x14>
 8009780:	68c0      	ldr	r0, [r0, #12]
 8009782:	f000 0001 	and.w	r0, r0, #1
 8009786:	4770      	bx	lr
 8009788:	4618      	mov	r0, r3
 800978a:	4770      	bx	lr
 800978c:	2001      	movs	r0, #1
    }
 800978e:	4770      	bx	lr

08009790 <_ZN8touchgfx8CallbackI10DatePickerRK13WheelSelectorRKivED0Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 8009790:	b510      	push	{r4, lr}
 8009792:	2110      	movs	r1, #16
 8009794:	4604      	mov	r4, r0
 8009796:	f01d ffc5 	bl	8027724 <_ZdlPvj>
 800979a:	4620      	mov	r0, r4
 800979c:	bd10      	pop	{r4, pc}
	...

080097a0 <_ZN10DatePickerC1Ev>:
#include <gui/settings_screen/DatePicker.hpp>
#include <touchgfx/Color.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <texts/TextKeysAndLanguages.hpp>

DatePicker::DatePicker() :
 80097a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    onSelectedElementChanged(this, &DatePicker::selectedElementChangedHandler)
 80097a4:	4681      	mov	r9, r0
        : x(0), y(0), width(0), height(0)
 80097a6:	2500      	movs	r5, #0
 80097a8:	4ab5      	ldr	r2, [pc, #724]	; (8009a80 <_ZN10DatePickerC1Ev+0x2e0>)
 80097aa:	6285      	str	r5, [r0, #40]	; 0x28
          visible(true)
 80097ac:	f44f 7380 	mov.w	r3, #256	; 0x100
DatePicker::DatePicker() :
 80097b0:	4604      	mov	r4, r0
 80097b2:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80097b6:	e9c0 5503 	strd	r5, r5, [r0, #12]
 80097ba:	e9c0 5505 	strd	r5, r5, [r0, #20]
 80097be:	e9c0 5507 	strd	r5, r5, [r0, #28]
 80097c2:	8483      	strh	r3, [r0, #36]	; 0x24
    onSelectedElementChanged(this, &DatePicker::selectedElementChangedHandler)
 80097c4:	f849 2b2c 	str.w	r2, [r9], #44
 80097c8:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
        : Widget(), alpha(255), color(0)
 80097cc:	23ff      	movs	r3, #255	; 0xff
 80097ce:	f880 3052 	strb.w	r3, [r0, #82]	; 0x52
 80097d2:	f100 0860 	add.w	r8, r0, #96	; 0x60
        : Box(), borderColor(0), borderSize(0)
 80097d6:	4bab      	ldr	r3, [pc, #684]	; (8009a84 <_ZN10DatePickerC1Ev+0x2e4>)
 80097d8:	62c3      	str	r3, [r0, #44]	; 0x2c
 80097da:	f504 56cd 	add.w	r6, r4, #6560	; 0x19a0
DatePicker::DatePicker() :
 80097de:	b088      	sub	sp, #32
 80097e0:	e9c0 550c 	strd	r5, r5, [r0, #48]	; 0x30
 80097e4:	e9c0 550e 	strd	r5, r5, [r0, #56]	; 0x38
 80097e8:	e9c0 5510 	strd	r5, r5, [r0, #64]	; 0x40
 80097ec:	e9c0 5512 	strd	r5, r5, [r0, #72]	; 0x48
        : color(col)
 80097f0:	6545      	str	r5, [r0, #84]	; 0x54
 80097f2:	6585      	str	r5, [r0, #88]	; 0x58
 80097f4:	f8a0 505c 	strh.w	r5, [r0, #92]	; 0x5c
    onSelectedElementChanged(this, &DatePicker::selectedElementChangedHandler)
 80097f8:	360c      	adds	r6, #12
 80097fa:	4640      	mov	r0, r8
 80097fc:	f504 574b 	add.w	r7, r4, #12992	; 0x32c0
 8009800:	f001 fee0 	bl	800b5c4 <_ZN13WheelSelectorC1Ev>
 8009804:	3738      	adds	r7, #56	; 0x38
 8009806:	4630      	mov	r0, r6
 8009808:	f001 fedc 	bl	800b5c4 <_ZN13WheelSelectorC1Ev>
 800980c:	4638      	mov	r0, r7
 800980e:	f001 fed9 	bl	800b5c4 <_ZN13WheelSelectorC1Ev>
        : pobject(pobject), pmemfun_2(pmemfun_2)
 8009812:	f644 4344 	movw	r3, #19524	; 0x4c44
 8009816:	4a9c      	ldr	r2, [pc, #624]	; (8009a88 <_ZN10DatePickerC1Ev+0x2e8>)
 8009818:	50e2      	str	r2, [r4, r3]
 800981a:	eb04 0a03 	add.w	sl, r4, r3
 800981e:	f644 434c 	movw	r3, #19532	; 0x4c4c
 8009822:	4a9a      	ldr	r2, [pc, #616]	; (8009a8c <_ZN10DatePickerC1Ev+0x2ec>)
 8009824:	f8ca 4004 	str.w	r4, [sl, #4]
 8009828:	50e2      	str	r2, [r4, r3]
 800982a:	f644 4350 	movw	r3, #19536	; 0x4c50
        setXY(x, y);
 800982e:	462a      	mov	r2, r5
 8009830:	50e5      	str	r5, [r4, r3]
 8009832:	4629      	mov	r1, r5
 8009834:	4648      	mov	r0, r9
 8009836:	f7f8 fe67 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800983a:	4648      	mov	r0, r9
 800983c:	21e6      	movs	r1, #230	; 0xe6
 800983e:	f7f8 fbfb 	bl	8002038 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8009842:	4648      	mov	r0, r9
 8009844:	2182      	movs	r1, #130	; 0x82
 8009846:	f7f8 fbf9 	bl	800203c <_ZN8touchgfx8Drawable9setHeightEs>
        borderColor = color;
 800984a:	4a91      	ldr	r2, [pc, #580]	; (8009a90 <_ZN10DatePickerC1Ev+0x2f0>)
 800984c:	4b91      	ldr	r3, [pc, #580]	; (8009a94 <_ZN10DatePickerC1Ev+0x2f4>)
 800984e:	e9c4 2315 	strd	r2, r3, [r4, #84]	; 0x54
        borderSize = size;
 8009852:	2303      	movs	r3, #3
 8009854:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
//    add(background);
	background.setPosition(0, 0, 230, 130);
	background.setColor(touchgfx::Color::getColorFromRGB(0, 102, 53));
	background.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 102));
	background.setBorderSize(3);
	add(background);
 8009858:	4649      	mov	r1, r9
 800985a:	4620      	mov	r0, r4
 800985c:	f009 fe08 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>

	months.setXY(10, 20);
 8009860:	2214      	movs	r2, #20
 8009862:	210a      	movs	r1, #10
 8009864:	4630      	mov	r0, r6
 8009866:	f7f8 fe4f 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
    virtual void handleDragEvent(const DragEvent& evt);
    virtual void handleGestureEvent(const GestureEvent& evt);

    void setElementSelectedCallback(touchgfx::GenericCallback<const WheelSelector&, const int&>& callback)
    {
        elementSelectedAction = &callback;
 800986a:	f243 23f0 	movw	r3, #13040	; 0x32f0
	months.setElementSelectedCallback(onSelectedElementChanged);
	add(months);
 800986e:	4631      	mov	r1, r6
 8009870:	f844 a003 	str.w	sl, [r4, r3]
 8009874:	4620      	mov	r0, r4
 8009876:	f009 fdfb 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>

    days.setXY(80, 20);
 800987a:	2214      	movs	r2, #20
 800987c:	2150      	movs	r1, #80	; 0x50
 800987e:	4640      	mov	r0, r8
 8009880:	f7f8 fe42 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
    add(days);
 8009884:	4641      	mov	r1, r8
 8009886:	4620      	mov	r0, r4
 8009888:	f009 fdf2 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>

    years.setXY(150, 20);
 800988c:	2214      	movs	r2, #20
 800988e:	2196      	movs	r1, #150	; 0x96
 8009890:	4638      	mov	r0, r7
 8009892:	f7f8 fe39 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 8009896:	f644 433c 	movw	r3, #19516	; 0x4c3c
    years.setElementSelectedCallback(onSelectedElementChanged);
    add(years);
 800989a:	4639      	mov	r1, r7
 800989c:	f844 a003 	str.w	sl, [r4, r3]
 80098a0:	4620      	mov	r0, r4
 80098a2:	f009 fde5 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.width = width;
 80098a6:	4b7c      	ldr	r3, [pc, #496]	; (8009a98 <_ZN10DatePickerC1Ev+0x2f8>)
 80098a8:	60a3      	str	r3, [r4, #8]
    setWidth(230);
    setHeight(130);

    // Setup the year wheel. The overlay image used covers all three wheels, so
    // a negative x value is used to place the overlay correctly inside the wheel
    years.setup(BITMAP_DATE_PICKER_SHADOW_TOP_ID, 70, 90, 30, 2, -14, 30);
 80098aa:	f06f 020d 	mvn.w	r2, #13
 80098ae:	231e      	movs	r3, #30
 80098b0:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80098b4:	2202      	movs	r2, #2
 80098b6:	e9cd 3200 	strd	r3, r2, [sp]
 80098ba:	2107      	movs	r1, #7
 80098bc:	235a      	movs	r3, #90	; 0x5a
 80098be:	2246      	movs	r2, #70	; 0x46
 80098c0:	4638      	mov	r0, r7
 80098c2:	f001 ff31 	bl	800b728 <_ZN13WheelSelector5setupEtiiiiii>
    for (int i = START_YEAR; i < STOP_YEAR; i++)
    {
        Unicode::UnicodeChar temp[6];
        Unicode::snprintf(temp, 6, "%d", i);
 80098c6:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8009aa0 <_ZN10DatePickerC1Ev+0x300>
    for (int i = START_YEAR; i < STOP_YEAR; i++)
 80098ca:	f240 75e4 	movw	r5, #2020	; 0x7e4
        Unicode::snprintf(temp, 6, "%d", i);
 80098ce:	462b      	mov	r3, r5
 80098d0:	464a      	mov	r2, r9
 80098d2:	2106      	movs	r1, #6
 80098d4:	a805      	add	r0, sp, #20
 80098d6:	f011 fbf9 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        years.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 80098da:	ab05      	add	r3, sp, #20
 80098dc:	2247      	movs	r2, #71	; 0x47
 80098de:	2146      	movs	r1, #70	; 0x46
 80098e0:	4638      	mov	r0, r7
 80098e2:	f001 ffa7 	bl	800b834 <_ZN13WheelSelector7addTextEttPKt>
    for (int i = START_YEAR; i < STOP_YEAR; i++)
 80098e6:	3501      	adds	r5, #1
 80098e8:	f640 0302 	movw	r3, #2050	; 0x802
 80098ec:	429d      	cmp	r5, r3
 80098ee:	d1ee      	bne.n	80098ce <_ZN10DatePickerC1Ev+0x12e>
    }
    years.setSelectedItem(1, 20);
 80098f0:	4638      	mov	r0, r7
 80098f2:	4b6a      	ldr	r3, [pc, #424]	; (8009a9c <_ZN10DatePickerC1Ev+0x2fc>)
    // a negative x value is used to place the overlay correctly inside the wheel
    days.setup(BITMAP_DATE_PICKER_SHADOW_TOP_ID, 70, 90, 30, 2, -14, 30);
    for (int i = 1; i < 32; i++)
    {
        Unicode::UnicodeChar temp[3];
        Unicode::snprintf(temp, 3, "%d", i);
 80098f4:	4f6a      	ldr	r7, [pc, #424]	; (8009aa0 <_ZN10DatePickerC1Ev+0x300>)
    years.setSelectedItem(1, 20);
 80098f6:	2214      	movs	r2, #20
 80098f8:	2101      	movs	r1, #1
 80098fa:	f002 fa35 	bl	800bd68 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>
    days.setup(BITMAP_DATE_PICKER_SHADOW_TOP_ID, 70, 90, 30, 2, -14, 30);
 80098fe:	231e      	movs	r3, #30
 8009900:	f06f 020d 	mvn.w	r2, #13
 8009904:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8009908:	2202      	movs	r2, #2
 800990a:	e9cd 3200 	strd	r3, r2, [sp]
 800990e:	2107      	movs	r1, #7
 8009910:	235a      	movs	r3, #90	; 0x5a
 8009912:	2246      	movs	r2, #70	; 0x46
 8009914:	4640      	mov	r0, r8
 8009916:	f001 ff07 	bl	800b728 <_ZN13WheelSelector5setupEtiiiiii>
    for (int i = 1; i < 32; i++)
 800991a:	2501      	movs	r5, #1
        Unicode::snprintf(temp, 3, "%d", i);
 800991c:	462b      	mov	r3, r5
 800991e:	463a      	mov	r2, r7
 8009920:	2103      	movs	r1, #3
 8009922:	a805      	add	r0, sp, #20
 8009924:	f011 fbd2 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    for (int i = 1; i < 32; i++)
 8009928:	3501      	adds	r5, #1
        days.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 800992a:	ab05      	add	r3, sp, #20
 800992c:	2247      	movs	r2, #71	; 0x47
 800992e:	2146      	movs	r1, #70	; 0x46
 8009930:	4640      	mov	r0, r8
 8009932:	f001 ff7f 	bl	800b834 <_ZN13WheelSelector7addTextEttPKt>
    for (int i = 1; i < 32; i++)
 8009936:	2d20      	cmp	r5, #32
 8009938:	d1f0      	bne.n	800991c <_ZN10DatePickerC1Ev+0x17c>
    }
    days.setSelectedItem(1, 20);
 800993a:	4640      	mov	r0, r8
 800993c:	4b57      	ldr	r3, [pc, #348]	; (8009a9c <_ZN10DatePickerC1Ev+0x2fc>)
 800993e:	2214      	movs	r2, #20
 8009940:	2101      	movs	r1, #1
 8009942:	f002 fa11 	bl	800bd68 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>

    // Setup the month wheel. The overlay image used covers all three wheels, so
    // a negative x value is used to place the overlay correctly inside the wheel
    months.setup(BITMAP_DATE_PICKER_SHADOW_TOP_ID, 70, 90, 30, 2, -14, 30);
 8009946:	231e      	movs	r3, #30
 8009948:	f06f 020d 	mvn.w	r2, #13
 800994c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8009950:	2202      	movs	r2, #2
 8009952:	e9cd 3200 	strd	r3, r2, [sp]
 8009956:	4630      	mov	r0, r6
 8009958:	235a      	movs	r3, #90	; 0x5a
 800995a:	2246      	movs	r2, #70	; 0x46
 800995c:	2107      	movs	r1, #7
 800995e:	f001 fee3 	bl	800b728 <_ZN13WheelSelector5setupEtiiiiii>
    Unicode::UnicodeChar temp[5];

    Unicode::snprintf(temp, 5, "JAN");
 8009962:	4a50      	ldr	r2, [pc, #320]	; (8009aa4 <_ZN10DatePickerC1Ev+0x304>)
 8009964:	2105      	movs	r1, #5
 8009966:	a805      	add	r0, sp, #20
 8009968:	f011 fbb0 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 800996c:	ab05      	add	r3, sp, #20
 800996e:	4630      	mov	r0, r6
 8009970:	2247      	movs	r2, #71	; 0x47
 8009972:	2146      	movs	r1, #70	; 0x46
 8009974:	f001 ff5e 	bl	800b834 <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "FEB");
 8009978:	4a4b      	ldr	r2, [pc, #300]	; (8009aa8 <_ZN10DatePickerC1Ev+0x308>)
 800997a:	2105      	movs	r1, #5
 800997c:	a805      	add	r0, sp, #20
 800997e:	f011 fba5 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 8009982:	ab05      	add	r3, sp, #20
 8009984:	4630      	mov	r0, r6
 8009986:	2247      	movs	r2, #71	; 0x47
 8009988:	2146      	movs	r1, #70	; 0x46
 800998a:	f001 ff53 	bl	800b834 <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "MAR");
 800998e:	4a47      	ldr	r2, [pc, #284]	; (8009aac <_ZN10DatePickerC1Ev+0x30c>)
 8009990:	2105      	movs	r1, #5
 8009992:	a805      	add	r0, sp, #20
 8009994:	f011 fb9a 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 8009998:	ab05      	add	r3, sp, #20
 800999a:	4630      	mov	r0, r6
 800999c:	2247      	movs	r2, #71	; 0x47
 800999e:	2146      	movs	r1, #70	; 0x46
 80099a0:	f001 ff48 	bl	800b834 <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "APR");
 80099a4:	4a42      	ldr	r2, [pc, #264]	; (8009ab0 <_ZN10DatePickerC1Ev+0x310>)
 80099a6:	2105      	movs	r1, #5
 80099a8:	a805      	add	r0, sp, #20
 80099aa:	f011 fb8f 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 80099ae:	ab05      	add	r3, sp, #20
 80099b0:	4630      	mov	r0, r6
 80099b2:	2247      	movs	r2, #71	; 0x47
 80099b4:	2146      	movs	r1, #70	; 0x46
 80099b6:	f001 ff3d 	bl	800b834 <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "MAY");
 80099ba:	4a3e      	ldr	r2, [pc, #248]	; (8009ab4 <_ZN10DatePickerC1Ev+0x314>)
 80099bc:	2105      	movs	r1, #5
 80099be:	a805      	add	r0, sp, #20
 80099c0:	f011 fb84 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 80099c4:	ab05      	add	r3, sp, #20
 80099c6:	4630      	mov	r0, r6
 80099c8:	2247      	movs	r2, #71	; 0x47
 80099ca:	2146      	movs	r1, #70	; 0x46
 80099cc:	f001 ff32 	bl	800b834 <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "JUN");
 80099d0:	4a39      	ldr	r2, [pc, #228]	; (8009ab8 <_ZN10DatePickerC1Ev+0x318>)
 80099d2:	2105      	movs	r1, #5
 80099d4:	a805      	add	r0, sp, #20
 80099d6:	f011 fb79 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 80099da:	ab05      	add	r3, sp, #20
 80099dc:	4630      	mov	r0, r6
 80099de:	2247      	movs	r2, #71	; 0x47
 80099e0:	2146      	movs	r1, #70	; 0x46
 80099e2:	f001 ff27 	bl	800b834 <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "JUL");
 80099e6:	4a35      	ldr	r2, [pc, #212]	; (8009abc <_ZN10DatePickerC1Ev+0x31c>)
 80099e8:	2105      	movs	r1, #5
 80099ea:	a805      	add	r0, sp, #20
 80099ec:	f011 fb6e 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 80099f0:	ab05      	add	r3, sp, #20
 80099f2:	4630      	mov	r0, r6
 80099f4:	2247      	movs	r2, #71	; 0x47
 80099f6:	2146      	movs	r1, #70	; 0x46
 80099f8:	f001 ff1c 	bl	800b834 <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "AUG");
 80099fc:	4a30      	ldr	r2, [pc, #192]	; (8009ac0 <_ZN10DatePickerC1Ev+0x320>)
 80099fe:	2105      	movs	r1, #5
 8009a00:	a805      	add	r0, sp, #20
 8009a02:	f011 fb63 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 8009a06:	ab05      	add	r3, sp, #20
 8009a08:	4630      	mov	r0, r6
 8009a0a:	2247      	movs	r2, #71	; 0x47
 8009a0c:	2146      	movs	r1, #70	; 0x46
 8009a0e:	f001 ff11 	bl	800b834 <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "SEP");
 8009a12:	4a2c      	ldr	r2, [pc, #176]	; (8009ac4 <_ZN10DatePickerC1Ev+0x324>)
 8009a14:	2105      	movs	r1, #5
 8009a16:	a805      	add	r0, sp, #20
 8009a18:	f011 fb58 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 8009a1c:	ab05      	add	r3, sp, #20
 8009a1e:	4630      	mov	r0, r6
 8009a20:	2247      	movs	r2, #71	; 0x47
 8009a22:	2146      	movs	r1, #70	; 0x46
 8009a24:	f001 ff06 	bl	800b834 <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "OCT");
 8009a28:	4a27      	ldr	r2, [pc, #156]	; (8009ac8 <_ZN10DatePickerC1Ev+0x328>)
 8009a2a:	2105      	movs	r1, #5
 8009a2c:	a805      	add	r0, sp, #20
 8009a2e:	f011 fb4d 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 8009a32:	ab05      	add	r3, sp, #20
 8009a34:	4630      	mov	r0, r6
 8009a36:	2247      	movs	r2, #71	; 0x47
 8009a38:	2146      	movs	r1, #70	; 0x46
 8009a3a:	f001 fefb 	bl	800b834 <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "NOV");
 8009a3e:	4a23      	ldr	r2, [pc, #140]	; (8009acc <_ZN10DatePickerC1Ev+0x32c>)
 8009a40:	2105      	movs	r1, #5
 8009a42:	a805      	add	r0, sp, #20
 8009a44:	f011 fb42 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 8009a48:	ab05      	add	r3, sp, #20
 8009a4a:	4630      	mov	r0, r6
 8009a4c:	2247      	movs	r2, #71	; 0x47
 8009a4e:	2146      	movs	r1, #70	; 0x46
 8009a50:	f001 fef0 	bl	800b834 <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "DEC");
 8009a54:	4a1e      	ldr	r2, [pc, #120]	; (8009ad0 <_ZN10DatePickerC1Ev+0x330>)
 8009a56:	2105      	movs	r1, #5
 8009a58:	a805      	add	r0, sp, #20
 8009a5a:	f011 fb37 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 8009a5e:	ab05      	add	r3, sp, #20
 8009a60:	4630      	mov	r0, r6
 8009a62:	2247      	movs	r2, #71	; 0x47
 8009a64:	2146      	movs	r1, #70	; 0x46
 8009a66:	f001 fee5 	bl	800b834 <_ZN13WheelSelector7addTextEttPKt>

    months.setSelectedItem(1, 20);
 8009a6a:	4630      	mov	r0, r6
 8009a6c:	4b0b      	ldr	r3, [pc, #44]	; (8009a9c <_ZN10DatePickerC1Ev+0x2fc>)
 8009a6e:	2214      	movs	r2, #20
 8009a70:	2101      	movs	r1, #1
 8009a72:	f002 f979 	bl	800bd68 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>
}
 8009a76:	4620      	mov	r0, r4
 8009a78:	b008      	add	sp, #32
 8009a7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009a7e:	bf00      	nop
 8009a80:	0802aaf0 	.word	0x0802aaf0
 8009a84:	0802c4c8 	.word	0x0802c4c8
 8009a88:	0802aad8 	.word	0x0802aad8
 8009a8c:	08009b69 	.word	0x08009b69
 8009a90:	ff006635 	.word	0xff006635
 8009a94:	ff000066 	.word	0xff000066
 8009a98:	008200e6 	.word	0x008200e6
 8009a9c:	08018f6d 	.word	0x08018f6d
 8009aa0:	0802a646 	.word	0x0802a646
 8009aa4:	0802aaa0 	.word	0x0802aaa0
 8009aa8:	0802aaa4 	.word	0x0802aaa4
 8009aac:	0802aaa8 	.word	0x0802aaa8
 8009ab0:	0802aaac 	.word	0x0802aaac
 8009ab4:	0802aab0 	.word	0x0802aab0
 8009ab8:	0802aab4 	.word	0x0802aab4
 8009abc:	0802aab8 	.word	0x0802aab8
 8009ac0:	0802aabc 	.word	0x0802aabc
 8009ac4:	0802aac0 	.word	0x0802aac0
 8009ac8:	0802aac4 	.word	0x0802aac4
 8009acc:	0802aac8 	.word	0x0802aac8
 8009ad0:	0802aacc 	.word	0x0802aacc

08009ad4 <_ZN10DatePicker6setDayEiiPFstsstE>:
{
}

void DatePicker::setDay(int index, int duration, EasingEquation equation)
{
    days.setSelectedItem(index, duration, equation);
 8009ad4:	3060      	adds	r0, #96	; 0x60
 8009ad6:	f002 b947 	b.w	800bd68 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>

08009ada <_ZN10DatePicker8setMonthEiiPFstsstE>:
}

void DatePicker::setMonth(int index, int duration, EasingEquation equation)
{
    months.setSelectedItem(index, duration, equation);
 8009ada:	f500 50cd 	add.w	r0, r0, #6560	; 0x19a0
 8009ade:	300c      	adds	r0, #12
 8009ae0:	f002 b942 	b.w	800bd68 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>

08009ae4 <_ZN10DatePicker7setYearEiiPFstsstE>:
}

void DatePicker::setYear(int index, int duration, EasingEquation equation)
{
    years.setSelectedItem(index, duration, equation);
 8009ae4:	f500 504b 	add.w	r0, r0, #12992	; 0x32c0
 8009ae8:	3038      	adds	r0, #56	; 0x38
 8009aea:	f002 b93d 	b.w	800bd68 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>

08009aee <_ZN10DatePicker6getDayEv>:
}

int DatePicker::getDay()
{
    return days.getSelectedItem();
 8009aee:	3060      	adds	r0, #96	; 0x60
 8009af0:	f001 bf44 	b.w	800b97c <_ZN13WheelSelector15getSelectedItemEv>

08009af4 <_ZN10DatePicker8getMonthEv>:
}

int DatePicker::getMonth()
{
    return months.getSelectedItem();
 8009af4:	f500 50cd 	add.w	r0, r0, #6560	; 0x19a0
 8009af8:	300c      	adds	r0, #12
 8009afa:	f001 bf3f 	b.w	800b97c <_ZN13WheelSelector15getSelectedItemEv>

08009afe <_ZN10DatePicker7getYearEv>:
}

int DatePicker::getYear()
{
    return years.getSelectedItem();
 8009afe:	f500 504b 	add.w	r0, r0, #12992	; 0x32c0
 8009b02:	3038      	adds	r0, #56	; 0x38
 8009b04:	f001 bf3a 	b.w	800b97c <_ZN13WheelSelector15getSelectedItemEv>

08009b08 <_ZN10DatePicker15getNumberOfDaysEtt>:
}

uint16_t DatePicker::getNumberOfDays(uint16_t month, uint16_t year)
{
    uint16_t result = 0;
    if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12)
 8009b08:	290c      	cmp	r1, #12
 8009b0a:	d804      	bhi.n	8009b16 <_ZN10DatePicker15getNumberOfDaysEtt+0xe>
 8009b0c:	f241 53aa 	movw	r3, #5546	; 0x15aa
 8009b10:	40cb      	lsrs	r3, r1
 8009b12:	07db      	lsls	r3, r3, #31
 8009b14:	d41d      	bmi.n	8009b52 <_ZN10DatePicker15getNumberOfDaysEtt+0x4a>
    {
        result = 31;
    }
    else if (month == 4 || month == 6 || month == 9 || month == 11)
 8009b16:	f021 0302 	bic.w	r3, r1, #2
 8009b1a:	2b04      	cmp	r3, #4
 8009b1c:	b298      	uxth	r0, r3
 8009b1e:	d01a      	beq.n	8009b56 <_ZN10DatePicker15getNumberOfDaysEtt+0x4e>
 8009b20:	2809      	cmp	r0, #9
 8009b22:	d018      	beq.n	8009b56 <_ZN10DatePicker15getNumberOfDaysEtt+0x4e>
    {
        result = 30;
    }
    else if (month == 2)
 8009b24:	2902      	cmp	r1, #2
 8009b26:	d118      	bne.n	8009b5a <_ZN10DatePicker15getNumberOfDaysEtt+0x52>
    {
        result = 28;
        if (year % 400 == 0)
 8009b28:	f44f 71c8 	mov.w	r1, #400	; 0x190
 8009b2c:	fbb2 f3f1 	udiv	r3, r2, r1
 8009b30:	fb01 2313 	mls	r3, r1, r3, r2
 8009b34:	b29b      	uxth	r3, r3
 8009b36:	b193      	cbz	r3, 8009b5e <_ZN10DatePicker15getNumberOfDaysEtt+0x56>
        {
            result++;
        }
        else if (year % 100 == 0)
 8009b38:	2164      	movs	r1, #100	; 0x64
 8009b3a:	fbb2 f3f1 	udiv	r3, r2, r1
 8009b3e:	fb01 2313 	mls	r3, r1, r3, r2
 8009b42:	b29b      	uxth	r3, r3
 8009b44:	b16b      	cbz	r3, 8009b62 <_ZN10DatePicker15getNumberOfDaysEtt+0x5a>
        {
        }
        else if (year % 4 == 0)
 8009b46:	f012 0f03 	tst.w	r2, #3
            result++;
 8009b4a:	bf14      	ite	ne
 8009b4c:	201c      	movne	r0, #28
 8009b4e:	201d      	moveq	r0, #29
 8009b50:	4770      	bx	lr
        result = 31;
 8009b52:	201f      	movs	r0, #31
 8009b54:	4770      	bx	lr
        result = 30;
 8009b56:	201e      	movs	r0, #30
 8009b58:	4770      	bx	lr
    uint16_t result = 0;
 8009b5a:	2000      	movs	r0, #0
 8009b5c:	4770      	bx	lr
            result++;
 8009b5e:	201d      	movs	r0, #29
 8009b60:	4770      	bx	lr
        result = 28;
 8009b62:	201c      	movs	r0, #28
        {
            result++;
        }
    }
    return result;
}
 8009b64:	4770      	bx	lr
	...

08009b68 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi>:
{
 8009b68:	b570      	push	{r4, r5, r6, lr}
 8009b6a:	4604      	mov	r4, r0
    int numberOfDaysInMonth = getNumberOfDays(months.getSelectedItem() + 1, START_YEAR + years.getSelectedItem());
 8009b6c:	f500 50cd 	add.w	r0, r0, #6560	; 0x19a0
 8009b70:	300c      	adds	r0, #12
 8009b72:	f001 ff03 	bl	800b97c <_ZN13WheelSelector15getSelectedItemEv>
 8009b76:	4605      	mov	r5, r0
 8009b78:	f504 504b 	add.w	r0, r4, #12992	; 0x32c0
 8009b7c:	3038      	adds	r0, #56	; 0x38
 8009b7e:	f001 fefd 	bl	800b97c <_ZN13WheelSelector15getSelectedItemEv>
 8009b82:	1c69      	adds	r1, r5, #1
 8009b84:	f200 70e4 	addw	r0, r0, #2020	; 0x7e4
 8009b88:	b282      	uxth	r2, r0
 8009b8a:	b289      	uxth	r1, r1
 8009b8c:	4620      	mov	r0, r4
 8009b8e:	f7ff ffbb 	bl	8009b08 <_ZN10DatePicker15getNumberOfDaysEtt>
    if (numberOfDaysInMonth == 28)
 8009b92:	281c      	cmp	r0, #28
 8009b94:	f104 0460 	add.w	r4, r4, #96	; 0x60
 8009b98:	d110      	bne.n	8009bbc <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x54>
        days.hideBottomElements(3);
 8009b9a:	2103      	movs	r1, #3
 8009b9c:	4620      	mov	r0, r4
 8009b9e:	f001 ffe5 	bl	800bb6c <_ZN13WheelSelector18hideBottomElementsEi>
        if (days.getSelectedItem() > 27)
 8009ba2:	4620      	mov	r0, r4
 8009ba4:	f001 feea 	bl	800b97c <_ZN13WheelSelector15getSelectedItemEv>
 8009ba8:	281b      	cmp	r0, #27
 8009baa:	dd2b      	ble.n	8009c04 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x9c>
            days.setSelectedItem(27, 20);
 8009bac:	4b16      	ldr	r3, [pc, #88]	; (8009c08 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0xa0>)
 8009bae:	2214      	movs	r2, #20
 8009bb0:	211b      	movs	r1, #27
            days.setSelectedItem(28, 20);
 8009bb2:	4620      	mov	r0, r4
}
 8009bb4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            days.setSelectedItem(28, 20);
 8009bb8:	f002 b8d6 	b.w	800bd68 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>
    else if (numberOfDaysInMonth == 29)
 8009bbc:	281d      	cmp	r0, #29
 8009bbe:	d10c      	bne.n	8009bda <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x72>
        days.hideBottomElements(2);
 8009bc0:	2102      	movs	r1, #2
 8009bc2:	4620      	mov	r0, r4
 8009bc4:	f001 ffd2 	bl	800bb6c <_ZN13WheelSelector18hideBottomElementsEi>
        if (days.getSelectedItem() > 28)
 8009bc8:	4620      	mov	r0, r4
 8009bca:	f001 fed7 	bl	800b97c <_ZN13WheelSelector15getSelectedItemEv>
 8009bce:	281c      	cmp	r0, #28
 8009bd0:	dd18      	ble.n	8009c04 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x9c>
            days.setSelectedItem(28, 20);
 8009bd2:	4b0d      	ldr	r3, [pc, #52]	; (8009c08 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0xa0>)
 8009bd4:	2214      	movs	r2, #20
 8009bd6:	211c      	movs	r1, #28
 8009bd8:	e7eb      	b.n	8009bb2 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x4a>
    else if (numberOfDaysInMonth == 30)
 8009bda:	281e      	cmp	r0, #30
 8009bdc:	d10c      	bne.n	8009bf8 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x90>
        days.hideBottomElements(1);
 8009bde:	2101      	movs	r1, #1
 8009be0:	4620      	mov	r0, r4
 8009be2:	f001 ffc3 	bl	800bb6c <_ZN13WheelSelector18hideBottomElementsEi>
        if (days.getSelectedItem() > 29)
 8009be6:	4620      	mov	r0, r4
 8009be8:	f001 fec8 	bl	800b97c <_ZN13WheelSelector15getSelectedItemEv>
 8009bec:	281d      	cmp	r0, #29
 8009bee:	dd09      	ble.n	8009c04 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x9c>
            days.setSelectedItem(29, 20);
 8009bf0:	4b05      	ldr	r3, [pc, #20]	; (8009c08 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0xa0>)
 8009bf2:	2214      	movs	r2, #20
 8009bf4:	211d      	movs	r1, #29
 8009bf6:	e7dc      	b.n	8009bb2 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x4a>
        days.hideBottomElements(0);
 8009bf8:	4620      	mov	r0, r4
 8009bfa:	2100      	movs	r1, #0
}
 8009bfc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        days.hideBottomElements(0);
 8009c00:	f001 bfb4 	b.w	800bb6c <_ZN13WheelSelector18hideBottomElementsEi>
}
 8009c04:	bd70      	pop	{r4, r5, r6, pc}
 8009c06:	bf00      	nop
 8009c08:	08018f6d 	.word	0x08018f6d

08009c0c <_ZN13WheelSelectorD1Ev>:
class WheelSelector : public Container
 8009c0c:	4b0c      	ldr	r3, [pc, #48]	; (8009c40 <_ZN13WheelSelectorD1Ev+0x34>)
 8009c0e:	b570      	push	{r4, r5, r6, lr}
 8009c10:	4604      	mov	r4, r0
 8009c12:	6003      	str	r3, [r0, #0]
 8009c14:	f241 7518 	movw	r5, #5912	; 0x1718
 8009c18:	f640 4698 	movw	r6, #3224	; 0xc98
 8009c1c:	5963      	ldr	r3, [r4, r5]
 8009c1e:	1960      	adds	r0, r4, r5
 8009c20:	681b      	ldr	r3, [r3, #0]
 8009c22:	3d54      	subs	r5, #84	; 0x54
 8009c24:	4798      	blx	r3
 8009c26:	42b5      	cmp	r5, r6
 8009c28:	d1f8      	bne.n	8009c1c <_ZN13WheelSelectorD1Ev+0x10>
 8009c2a:	f44f 652d 	mov.w	r5, #2768	; 0xad0
 8009c2e:	5963      	ldr	r3, [r4, r5]
 8009c30:	1960      	adds	r0, r4, r5
 8009c32:	681b      	ldr	r3, [r3, #0]
 8009c34:	3d54      	subs	r5, #84	; 0x54
 8009c36:	4798      	blx	r3
 8009c38:	2d50      	cmp	r5, #80	; 0x50
 8009c3a:	d1f8      	bne.n	8009c2e <_ZN13WheelSelectorD1Ev+0x22>
 8009c3c:	4620      	mov	r0, r4
 8009c3e:	bd70      	pop	{r4, r5, r6, pc}
 8009c40:	0802afc8 	.word	0x0802afc8

08009c44 <_ZN10DatePickerD1Ev>:
DatePicker::~DatePicker()
 8009c44:	4b09      	ldr	r3, [pc, #36]	; (8009c6c <_ZN10DatePickerD1Ev+0x28>)
 8009c46:	b510      	push	{r4, lr}
 8009c48:	4604      	mov	r4, r0
 8009c4a:	6003      	str	r3, [r0, #0]
 8009c4c:	f500 504b 	add.w	r0, r0, #12992	; 0x32c0
 8009c50:	3038      	adds	r0, #56	; 0x38
 8009c52:	f7ff ffdb 	bl	8009c0c <_ZN13WheelSelectorD1Ev>
 8009c56:	f504 50cd 	add.w	r0, r4, #6560	; 0x19a0
 8009c5a:	300c      	adds	r0, #12
 8009c5c:	f7ff ffd6 	bl	8009c0c <_ZN13WheelSelectorD1Ev>
 8009c60:	f104 0060 	add.w	r0, r4, #96	; 0x60
 8009c64:	f7ff ffd2 	bl	8009c0c <_ZN13WheelSelectorD1Ev>
}
 8009c68:	4620      	mov	r0, r4
 8009c6a:	bd10      	pop	{r4, pc}
 8009c6c:	0802aaf0 	.word	0x0802aaf0

08009c70 <_ZN10DatePickerD0Ev>:
DatePicker::~DatePicker()
 8009c70:	b510      	push	{r4, lr}
 8009c72:	4604      	mov	r4, r0
}
 8009c74:	f7ff ffe6 	bl	8009c44 <_ZN10DatePickerD1Ev>
 8009c78:	4620      	mov	r0, r4
 8009c7a:	f644 4154 	movw	r1, #19540	; 0x4c54
 8009c7e:	f01d fd51 	bl	8027724 <_ZdlPvj>
 8009c82:	4620      	mov	r0, r4
 8009c84:	bd10      	pop	{r4, pc}

08009c86 <_ZN13WheelSelectorD0Ev>:
 8009c86:	b510      	push	{r4, lr}
 8009c88:	4604      	mov	r4, r0
 8009c8a:	f7ff ffbf 	bl	8009c0c <_ZN13WheelSelectorD1Ev>
 8009c8e:	4620      	mov	r0, r4
 8009c90:	f641 114c 	movw	r1, #6476	; 0x194c
 8009c94:	f01d fd46 	bl	8027724 <_ZdlPvj>
 8009c98:	4620      	mov	r0, r4
 8009c9a:	bd10      	pop	{r4, pc}

08009c9c <_ZN21DateSelectorContainerC1Ev>:
#include <gui/settings_screen/DateSelectorContainer.hpp>

DateSelectorContainer::DateSelectorContainer()
 8009c9c:	b570      	push	{r4, r5, r6, lr}
          visible(true)
 8009c9e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8009ca2:	4606      	mov	r6, r0
        : x(0), y(0), width(0), height(0)
 8009ca4:	2500      	movs	r5, #0
 8009ca6:	8483      	strh	r3, [r0, #36]	; 0x24
 8009ca8:	4b0b      	ldr	r3, [pc, #44]	; (8009cd8 <_ZN21DateSelectorContainerC1Ev+0x3c>)
 8009caa:	6285      	str	r5, [r0, #40]	; 0x28
 8009cac:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8009cb0:	e9c0 5503 	strd	r5, r5, [r0, #12]
 8009cb4:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8009cb8:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8009cbc:	f846 3b2c 	str.w	r3, [r6], #44
 8009cc0:	4604      	mov	r4, r0
 8009cc2:	4630      	mov	r0, r6
 8009cc4:	f7ff fd6c 	bl	80097a0 <_ZN10DatePickerC1Ev>
{
    datePicker.setXY(0, 0);
    add(datePicker);
 8009cc8:	4620      	mov	r0, r4
        rect.x = x;
 8009cca:	6325      	str	r5, [r4, #48]	; 0x30
 8009ccc:	4631      	mov	r1, r6
 8009cce:	f009 fbcf 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8009cd2:	4620      	mov	r0, r4
 8009cd4:	bd70      	pop	{r4, r5, r6, pc}
 8009cd6:	bf00      	nop
 8009cd8:	0802ab7c 	.word	0x0802ab7c

08009cdc <_ZN21DateSelectorContainer7setDateEthh>:
DateSelectorContainer::~DateSelectorContainer()
{
}

void DateSelectorContainer::setDate(uint16_t year, uint8_t month, uint8_t day)
{
 8009cdc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009cde:	460c      	mov	r4, r1
 8009ce0:	4619      	mov	r1, r3
 8009ce2:	4615      	mov	r5, r2
    datePicker.setDay((day - 1), 16, EasingEquations::backEaseOut);
 8009ce4:	302c      	adds	r0, #44	; 0x2c
 8009ce6:	4b0d      	ldr	r3, [pc, #52]	; (8009d1c <_ZN21DateSelectorContainer7setDateEthh+0x40>)
 8009ce8:	9001      	str	r0, [sp, #4]
 8009cea:	2210      	movs	r2, #16
 8009cec:	3901      	subs	r1, #1
 8009cee:	f7ff fef1 	bl	8009ad4 <_ZN10DatePicker6setDayEiiPFstsstE>
    datePicker.setMonth(month, 16, EasingEquations::backEaseOut);
 8009cf2:	4629      	mov	r1, r5
 8009cf4:	9801      	ldr	r0, [sp, #4]
 8009cf6:	4b09      	ldr	r3, [pc, #36]	; (8009d1c <_ZN21DateSelectorContainer7setDateEthh+0x40>)
 8009cf8:	2210      	movs	r2, #16
 8009cfa:	f7ff feee 	bl	8009ada <_ZN10DatePicker8setMonthEiiPFstsstE>
    if(year >= 120){
 8009cfe:	2c77      	cmp	r4, #119	; 0x77
    	datePicker.setYear(year - 120, 16, EasingEquations::backEaseOut);
 8009d00:	4b06      	ldr	r3, [pc, #24]	; (8009d1c <_ZN21DateSelectorContainer7setDateEthh+0x40>)
    if(year >= 120){
 8009d02:	9801      	ldr	r0, [sp, #4]
    	datePicker.setYear(year - 120, 16, EasingEquations::backEaseOut);
 8009d04:	f04f 0210 	mov.w	r2, #16
 8009d08:	bf8c      	ite	hi
 8009d0a:	f1a4 0178 	subhi.w	r1, r4, #120	; 0x78
    }
    else{
    	datePicker.setYear(0, 16, EasingEquations::backEaseOut);
 8009d0e:	2100      	movls	r1, #0
    }
}
 8009d10:	b003      	add	sp, #12
 8009d12:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    	datePicker.setYear(0, 16, EasingEquations::backEaseOut);
 8009d16:	f7ff bee5 	b.w	8009ae4 <_ZN10DatePicker7setYearEiiPFstsstE>
 8009d1a:	bf00      	nop
 8009d1c:	08018f6d 	.word	0x08018f6d

08009d20 <_ZN21DateSelectorContainer7getYearEv>:

uint16_t DateSelectorContainer::getYear()
{
 8009d20:	b508      	push	{r3, lr}
    return (datePicker.getYear() + 120);
 8009d22:	302c      	adds	r0, #44	; 0x2c
 8009d24:	f7ff feeb 	bl	8009afe <_ZN10DatePicker7getYearEv>
 8009d28:	3078      	adds	r0, #120	; 0x78
}
 8009d2a:	b280      	uxth	r0, r0
 8009d2c:	bd08      	pop	{r3, pc}

08009d2e <_ZN21DateSelectorContainer8getMonthEv>:

uint8_t DateSelectorContainer::getMonth()
{
 8009d2e:	b508      	push	{r3, lr}
    return datePicker.getMonth();
 8009d30:	302c      	adds	r0, #44	; 0x2c
 8009d32:	f7ff fedf 	bl	8009af4 <_ZN10DatePicker8getMonthEv>
}
 8009d36:	b2c0      	uxtb	r0, r0
 8009d38:	bd08      	pop	{r3, pc}

08009d3a <_ZN21DateSelectorContainer6getDayEv>:

uint8_t DateSelectorContainer::getDay()
{
 8009d3a:	b508      	push	{r3, lr}
    return (datePicker.getDay() + 1);
 8009d3c:	302c      	adds	r0, #44	; 0x2c
 8009d3e:	f7ff fed6 	bl	8009aee <_ZN10DatePicker6getDayEv>
 8009d42:	3001      	adds	r0, #1
}
 8009d44:	b2c0      	uxtb	r0, r0
 8009d46:	bd08      	pop	{r3, pc}

08009d48 <_ZN21DateSelectorContainerD1Ev>:
DateSelectorContainer::~DateSelectorContainer()
 8009d48:	b510      	push	{r4, lr}
 8009d4a:	4b04      	ldr	r3, [pc, #16]	; (8009d5c <_ZN21DateSelectorContainerD1Ev+0x14>)
 8009d4c:	4604      	mov	r4, r0
 8009d4e:	f840 3b2c 	str.w	r3, [r0], #44
 8009d52:	f7ff ff77 	bl	8009c44 <_ZN10DatePickerD1Ev>
}
 8009d56:	4620      	mov	r0, r4
 8009d58:	bd10      	pop	{r4, pc}
 8009d5a:	bf00      	nop
 8009d5c:	0802ab7c 	.word	0x0802ab7c

08009d60 <_ZN21DateSelectorContainerD0Ev>:
DateSelectorContainer::~DateSelectorContainer()
 8009d60:	b510      	push	{r4, lr}
 8009d62:	4604      	mov	r4, r0
}
 8009d64:	f7ff fff0 	bl	8009d48 <_ZN21DateSelectorContainerD1Ev>
 8009d68:	4620      	mov	r0, r4
 8009d6a:	f44f 4199 	mov.w	r1, #19584	; 0x4c80
 8009d6e:	f01d fcd9 	bl	8027724 <_ZdlPvj>
 8009d72:	4620      	mov	r0, r4
 8009d74:	bd10      	pop	{r4, pc}

08009d76 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8009d76:	4770      	bx	lr

08009d78 <_ZN19FrontendApplicationD0Ev>:
 8009d78:	b510      	push	{r4, lr}
 8009d7a:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8009d7e:	4604      	mov	r4, r0
 8009d80:	f01d fcd0 	bl	8027724 <_ZdlPvj>
 8009d84:	4620      	mov	r0, r4
 8009d86:	bd10      	pop	{r4, pc}

08009d88 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8009d88:	b510      	push	{r4, lr}
 8009d8a:	4604      	mov	r4, r0
    {
        model.tick();
 8009d8c:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8009d90:	f000 f856 	bl	8009e40 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8009d94:	4620      	mov	r0, r4
    }
 8009d96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8009d9a:	f00d bbc3 	b.w	8017524 <_ZN8touchgfx11Application15handleTickEventEv>
	...

08009da0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8009da0:	b510      	push	{r4, lr}
 8009da2:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8009da4:	f7fb fb26 	bl	80053f4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8009da8:	4b01      	ldr	r3, [pc, #4]	; (8009db0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8009daa:	6023      	str	r3, [r4, #0]
{

}
 8009dac:	4620      	mov	r0, r4
 8009dae:	bd10      	pop	{r4, pc}
 8009db0:	0802ac08 	.word	0x0802ac08

08009db4 <_ZN8ListTileD1Ev>:

class ListTile : public ListTileBase
{
public:
    ListTile();
    virtual ~ListTile() {}
 8009db4:	4770      	bx	lr

08009db6 <_ZN8ListTile10initializeEv>:

}

void ListTile::initialize()
{
    ListTileBase::initialize();
 8009db6:	f7fb bd45 	b.w	8005844 <_ZN12ListTileBase10initializeEv>

08009dba <_ZN8ListTileD0Ev>:
 8009dba:	b510      	push	{r4, lr}
 8009dbc:	21ec      	movs	r1, #236	; 0xec
 8009dbe:	4604      	mov	r4, r0
 8009dc0:	f01d fcb0 	bl	8027724 <_ZdlPvj>
 8009dc4:	4620      	mov	r0, r4
 8009dc6:	bd10      	pop	{r4, pc}

08009dc8 <_ZN8ListTileC1Ev>:
ListTile::ListTile() :
 8009dc8:	b510      	push	{r4, lr}
 8009dca:	4604      	mov	r4, r0
    index(0), selected(false)
 8009dcc:	f7fb fd42 	bl	8005854 <_ZN12ListTileBaseC1Ev>
 8009dd0:	4b03      	ldr	r3, [pc, #12]	; (8009de0 <_ZN8ListTileC1Ev+0x18>)
 8009dd2:	6023      	str	r3, [r4, #0]
 8009dd4:	2300      	movs	r3, #0
 8009dd6:	f8a4 30e8 	strh.w	r3, [r4, #232]	; 0xe8
}
 8009dda:	4620      	mov	r0, r4
 8009ddc:	bd10      	pop	{r4, pc}
 8009dde:	bf00      	nop
 8009de0:	0802ac4c 	.word	0x0802ac4c

08009de4 <_ZN8ListTile10updateTextEPt>:
}

void ListTile::updateText(Unicode::UnicodeChar* buf)
{
 8009de4:	b510      	push	{r4, lr}
 8009de6:	460a      	mov	r2, r1
 8009de8:	4604      	mov	r4, r0
    Unicode::snprintf(textBuffer, TEXT_SIZE, buf);
 8009dea:	2110      	movs	r1, #16
 8009dec:	30c4      	adds	r0, #196	; 0xc4
 8009dee:	f011 f957 	bl	801b0a0 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
    text.invalidate();
 8009df2:	f104 0084 	add.w	r0, r4, #132	; 0x84
}
 8009df6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    text.invalidate();
 8009dfa:	f00e bc67 	b.w	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>

08009dfe <_ZN8ListTile8setIndexEh>:

void ListTile::setIndex(uint8_t ind)
{
    index = ind;
 8009dfe:	f880 10e8 	strb.w	r1, [r0, #232]	; 0xe8
}
 8009e02:	4770      	bx	lr

08009e04 <_ZN8ListTile8getIndexEv>:

uint8_t ListTile::getIndex()
{
    return index;
}
 8009e04:	f890 00e8 	ldrb.w	r0, [r0, #232]	; 0xe8
 8009e08:	4770      	bx	lr

08009e0a <_ZN8ListTile11setSelectedEi>:

void ListTile::setSelected(int x)
{
 8009e0a:	b538      	push	{r3, r4, r5, lr}
    boxBg.setWidth(x);
    boxBg.setVisible(true);
    invalidate();
 8009e0c:	6803      	ldr	r3, [r0, #0]
    boxBg.setWidth(x);
 8009e0e:	f8a0 1060 	strh.w	r1, [r0, #96]	; 0x60
{
 8009e12:	4604      	mov	r4, r0
        visible = vis;
 8009e14:	2501      	movs	r5, #1
    invalidate();
 8009e16:	695b      	ldr	r3, [r3, #20]
 8009e18:	f880 507d 	strb.w	r5, [r0, #125]	; 0x7d
 8009e1c:	4798      	blx	r3
    selected = true;
 8009e1e:	f884 50e9 	strb.w	r5, [r4, #233]	; 0xe9
}
 8009e22:	bd38      	pop	{r3, r4, r5, pc}

08009e24 <_ZN8ListTile13setUnselectedEv>:

void ListTile::setUnselected()
{
 8009e24:	b538      	push	{r3, r4, r5, lr}
    boxBg.setVisible(false);
    invalidate();
 8009e26:	6803      	ldr	r3, [r0, #0]
{
 8009e28:	4604      	mov	r4, r0
 8009e2a:	2500      	movs	r5, #0
    invalidate();
 8009e2c:	695b      	ldr	r3, [r3, #20]
 8009e2e:	f880 507d 	strb.w	r5, [r0, #125]	; 0x7d
 8009e32:	4798      	blx	r3
    selected = false;
 8009e34:	f884 50e9 	strb.w	r5, [r4, #233]	; 0xe9
}
 8009e38:	bd38      	pop	{r3, r4, r5, pc}

08009e3a <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8009e3a:	2200      	movs	r2, #0
 8009e3c:	6002      	str	r2, [r0, #0]
{

}
 8009e3e:	4770      	bx	lr

08009e40 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8009e40:	4770      	bx	lr

08009e42 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8009e42:	4770      	bx	lr

08009e44 <_ZThn4_N16Screen1PresenterD1Ev>:
 8009e44:	3804      	subs	r0, #4
 8009e46:	4770      	bx	lr

08009e48 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8009e48:	4770      	bx	lr

08009e4a <_ZN16Screen1PresenterD0Ev>:
 8009e4a:	b510      	push	{r4, lr}
 8009e4c:	2110      	movs	r1, #16
 8009e4e:	4604      	mov	r4, r0
 8009e50:	f01d fc68 	bl	8027724 <_ZdlPvj>
 8009e54:	4620      	mov	r0, r4
 8009e56:	bd10      	pop	{r4, pc}

08009e58 <_ZThn4_N16Screen1PresenterD0Ev>:
 8009e58:	f1a0 0004 	sub.w	r0, r0, #4
 8009e5c:	e7f5      	b.n	8009e4a <_ZN16Screen1PresenterD0Ev>
	...

08009e60 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8009e60:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8009e62:	2200      	movs	r2, #0
 8009e64:	6082      	str	r2, [r0, #8]
    : view(v)
 8009e66:	4a04      	ldr	r2, [pc, #16]	; (8009e78 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8009e68:	60c1      	str	r1, [r0, #12]
 8009e6a:	f102 0408 	add.w	r4, r2, #8
 8009e6e:	3220      	adds	r2, #32
 8009e70:	6004      	str	r4, [r0, #0]
 8009e72:	6042      	str	r2, [r0, #4]
}
 8009e74:	bd10      	pop	{r4, pc}
 8009e76:	bf00      	nop
 8009e78:	0802acd8 	.word	0x0802acd8

08009e7c <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8009e7c:	4770      	bx	lr

08009e7e <_ZN8touchgfx8CallbackI11Screen1ViewhP19ConfigListFilterLogvED1Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 8009e7e:	4770      	bx	lr

08009e80 <_ZN8touchgfx8CallbackI11Screen1ViewhP19ConfigListFilterLogvE7executeEhS3_>:
    virtual void execute(T1 t1, T2 t2)
 8009e80:	b470      	push	{r4, r5, r6}
        (pobject->*pmemfun_2)(t1, t2);
 8009e82:	68c4      	ldr	r4, [r0, #12]
 8009e84:	6845      	ldr	r5, [r0, #4]
 8009e86:	1066      	asrs	r6, r4, #1
    virtual void execute(T1 t1, T2 t2)
 8009e88:	4603      	mov	r3, r0
        (pobject->*pmemfun_2)(t1, t2);
 8009e8a:	eb05 0064 	add.w	r0, r5, r4, asr #1
 8009e8e:	07e4      	lsls	r4, r4, #31
 8009e90:	bf48      	it	mi
 8009e92:	59ac      	ldrmi	r4, [r5, r6]
 8009e94:	689b      	ldr	r3, [r3, #8]
 8009e96:	bf48      	it	mi
 8009e98:	58e3      	ldrmi	r3, [r4, r3]
    }
 8009e9a:	bc70      	pop	{r4, r5, r6}
        (pobject->*pmemfun_2)(t1, t2);
 8009e9c:	4718      	bx	r3

08009e9e <_ZNK8touchgfx8CallbackI11Screen1ViewhP19ConfigListFilterLogvE7isValidEv>:
        return (pobject != 0) && (pmemfun_2 != 0);
 8009e9e:	6843      	ldr	r3, [r0, #4]
 8009ea0:	b12b      	cbz	r3, 8009eae <_ZNK8touchgfx8CallbackI11Screen1ViewhP19ConfigListFilterLogvE7isValidEv+0x10>
 8009ea2:	6883      	ldr	r3, [r0, #8]
 8009ea4:	b92b      	cbnz	r3, 8009eb2 <_ZNK8touchgfx8CallbackI11Screen1ViewhP19ConfigListFilterLogvE7isValidEv+0x14>
 8009ea6:	68c0      	ldr	r0, [r0, #12]
 8009ea8:	f000 0001 	and.w	r0, r0, #1
 8009eac:	4770      	bx	lr
 8009eae:	4618      	mov	r0, r3
 8009eb0:	4770      	bx	lr
 8009eb2:	2001      	movs	r0, #1
    }
 8009eb4:	4770      	bx	lr

08009eb6 <_ZN8touchgfx8CallbackI11Screen1ViewhP19ConfigListFilterLogvED0Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 8009eb6:	b510      	push	{r4, lr}
 8009eb8:	2110      	movs	r1, #16
 8009eba:	4604      	mov	r4, r0
 8009ebc:	f01d fc32 	bl	8027724 <_ZdlPvj>
 8009ec0:	4620      	mov	r0, r4
 8009ec2:	bd10      	pop	{r4, pc}

08009ec4 <_ZN11Screen1View18functionFilterDateEv>:
	modalWindow1.setVisible(false);
	invalidate();
}

void Screen1View::functionFilterDate(void)
{
 8009ec4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	static time_p tmp;
	static struct tm timeptr;
	tmp = time_stop_fil;
 8009ec6:	4e1b      	ldr	r6, [pc, #108]	; (8009f34 <_ZN11Screen1View18functionFilterDateEv+0x70>)
	timeptr = *gmtime(&tmp);
 8009ec8:	4c1b      	ldr	r4, [pc, #108]	; (8009f38 <_ZN11Screen1View18functionFilterDateEv+0x74>)
	tmp = time_stop_fil;
 8009eca:	f500 37cd 	add.w	r7, r0, #104960	; 0x19a00
{
 8009ece:	4605      	mov	r5, r0
	tmp = time_stop_fil;
 8009ed0:	f8d7 3198 	ldr.w	r3, [r7, #408]	; 0x198
 8009ed4:	6033      	str	r3, [r6, #0]
	timeptr = *gmtime(&tmp);
 8009ed6:	4630      	mov	r0, r6
 8009ed8:	f001 fffc 	bl	800bed4 <gmtime>
 8009edc:	6803      	ldr	r3, [r0, #0]
 8009ede:	6023      	str	r3, [r4, #0]
 8009ee0:	6843      	ldr	r3, [r0, #4]
 8009ee2:	6063      	str	r3, [r4, #4]
 8009ee4:	6883      	ldr	r3, [r0, #8]
	dateSelectorContainerStop.setDate(timeptr.tm_year, timeptr.tm_mon, timeptr.tm_mday);
 8009ee6:	7962      	ldrb	r2, [r4, #5]
 8009ee8:	88e1      	ldrh	r1, [r4, #6]
	timeptr = *gmtime(&tmp);
 8009eea:	60a3      	str	r3, [r4, #8]
	dateSelectorContainerStop.setDate(timeptr.tm_year, timeptr.tm_mon, timeptr.tm_mday);
 8009eec:	f505 30a7 	add.w	r0, r5, #85504	; 0x14e00
 8009ef0:	78e3      	ldrb	r3, [r4, #3]
 8009ef2:	30a0      	adds	r0, #160	; 0xa0
 8009ef4:	f7ff fef2 	bl	8009cdc <_ZN21DateSelectorContainer7setDateEthh>

	tmp = time_start_fil;
 8009ef8:	f8d7 3194 	ldr.w	r3, [r7, #404]	; 0x194
 8009efc:	6033      	str	r3, [r6, #0]
	timeptr = *gmtime(&tmp);
 8009efe:	4630      	mov	r0, r6
 8009f00:	f001 ffe8 	bl	800bed4 <gmtime>
 8009f04:	6803      	ldr	r3, [r0, #0]
 8009f06:	6023      	str	r3, [r4, #0]
 8009f08:	6843      	ldr	r3, [r0, #4]
 8009f0a:	6063      	str	r3, [r4, #4]
 8009f0c:	6883      	ldr	r3, [r0, #8]
	dateSelectorContainerStart.setDate(timeptr.tm_year, timeptr.tm_mon, timeptr.tm_mday);
 8009f0e:	7962      	ldrb	r2, [r4, #5]
	timeptr = *gmtime(&tmp);
 8009f10:	60a3      	str	r3, [r4, #8]
	dateSelectorContainerStart.setDate(timeptr.tm_year, timeptr.tm_mon, timeptr.tm_mday);
 8009f12:	f505 3081 	add.w	r0, r5, #66048	; 0x10200
 8009f16:	78e3      	ldrb	r3, [r4, #3]
 8009f18:	88e1      	ldrh	r1, [r4, #6]
 8009f1a:	3020      	adds	r0, #32
 8009f1c:	f7ff fede 	bl	8009cdc <_ZN21DateSelectorContainer7setDateEthh>
 8009f20:	f64f 13e5 	movw	r3, #63973	; 0xf9e5
 8009f24:	2201      	movs	r2, #1
 8009f26:	54ea      	strb	r2, [r5, r3]
     *
     * @see Container::invalidate
     */
    void invalidate() const
    {
        container.invalidate();
 8009f28:	1d28      	adds	r0, r5, #4


	modalWindow1.setVisible(true);
	invalidate();
}
 8009f2a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8009f2e:	f00e bbcd 	b.w	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>
 8009f32:	bf00      	nop
 8009f34:	2001ad94 	.word	0x2001ad94
 8009f38:	2001ad98 	.word	0x2001ad98

08009f3c <_ZN11Screen1View21functionOkFilDataTimeEv>:
{
 8009f3c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
	timeptrStart.tm_year = dateSelectorContainerStart.getYear();
 8009f40:	f500 3481 	add.w	r4, r0, #66048	; 0x10200
 8009f44:	3420      	adds	r4, #32
{
 8009f46:	4606      	mov	r6, r0
	timeptrStart.tm_year = dateSelectorContainerStart.getYear();
 8009f48:	4620      	mov	r0, r4
 8009f4a:	f7ff fee9 	bl	8009d20 <_ZN21DateSelectorContainer7getYearEv>
 8009f4e:	4d2c      	ldr	r5, [pc, #176]	; (800a000 <_ZN11Screen1View21functionOkFilDataTimeEv+0xc4>)
 8009f50:	80e8      	strh	r0, [r5, #6]
	timeptrStart.tm_mon = dateSelectorContainerStart.getMonth();
 8009f52:	4620      	mov	r0, r4
 8009f54:	f7ff feeb 	bl	8009d2e <_ZN21DateSelectorContainer8getMonthEv>
 8009f58:	7168      	strb	r0, [r5, #5]
	timeptrStart.tm_mday = dateSelectorContainerStart.getDay();
 8009f5a:	4620      	mov	r0, r4
 8009f5c:	f7ff feed 	bl	8009d3a <_ZN21DateSelectorContainer6getDayEv>
 8009f60:	70e8      	strb	r0, [r5, #3]
	time_start_fil 	= (uint32_t)mktime(&timeptrStart);
 8009f62:	4628      	mov	r0, r5
 8009f64:	f002 f8bc 	bl	800c0e0 <mktime>
 8009f68:	f506 38cd 	add.w	r8, r6, #104960	; 0x19a00
	timeptrStop.tm_year = dateSelectorContainerStop.getYear();
 8009f6c:	f506 37a7 	add.w	r7, r6, #85504	; 0x14e00
 8009f70:	37a0      	adds	r7, #160	; 0xa0
	time_start_fil 	= (uint32_t)mktime(&timeptrStart);
 8009f72:	f8c8 0194 	str.w	r0, [r8, #404]	; 0x194
	timeptrStop.tm_year = dateSelectorContainerStop.getYear();
 8009f76:	4638      	mov	r0, r7
 8009f78:	f7ff fed2 	bl	8009d20 <_ZN21DateSelectorContainer7getYearEv>
 8009f7c:	4c21      	ldr	r4, [pc, #132]	; (800a004 <_ZN11Screen1View21functionOkFilDataTimeEv+0xc8>)
 8009f7e:	80e0      	strh	r0, [r4, #6]
	timeptrStop.tm_mon 	= dateSelectorContainerStop.getMonth();
 8009f80:	4638      	mov	r0, r7
 8009f82:	f7ff fed4 	bl	8009d2e <_ZN21DateSelectorContainer8getMonthEv>
 8009f86:	7160      	strb	r0, [r4, #5]
	timeptrStop.tm_mday = dateSelectorContainerStop.getDay();
 8009f88:	4638      	mov	r0, r7
 8009f8a:	f7ff fed6 	bl	8009d3a <_ZN21DateSelectorContainer6getDayEv>
 8009f8e:	70e0      	strb	r0, [r4, #3]
	time_stop_fil 	= (uint32_t)mktime(&timeptrStop);
 8009f90:	4620      	mov	r0, r4
 8009f92:	f002 f8a5 	bl	800c0e0 <mktime>
	if(time_stop_fil < time_start_fil){
 8009f96:	f8d8 3194 	ldr.w	r3, [r8, #404]	; 0x194
	time_stop_fil 	= (uint32_t)mktime(&timeptrStop);
 8009f9a:	f8c8 0198 	str.w	r0, [r8, #408]	; 0x198
	if(time_stop_fil < time_start_fil){
 8009f9e:	4298      	cmp	r0, r3
 8009fa0:	462b      	mov	r3, r5
 8009fa2:	d205      	bcs.n	8009fb0 <_ZN11Screen1View21functionOkFilDataTimeEv+0x74>
		timeptrStop = timeptrStart;
 8009fa4:	682a      	ldr	r2, [r5, #0]
 8009fa6:	6022      	str	r2, [r4, #0]
 8009fa8:	686a      	ldr	r2, [r5, #4]
 8009faa:	6062      	str	r2, [r4, #4]
 8009fac:	68aa      	ldr	r2, [r5, #8]
 8009fae:	60a2      	str	r2, [r4, #8]
	Unicode::snprintf(textAreaStartDateBuffer, TEXTAREASTARTDATE_SIZE, "%.2d-%.2d-%4d", timeptrStart.tm_mday, timeptrStart.tm_mon + 1, timeptrStart.tm_year + 1900);
 8009fb0:	88da      	ldrh	r2, [r3, #6]
 8009fb2:	f202 726c 	addw	r2, r2, #1900	; 0x76c
 8009fb6:	9201      	str	r2, [sp, #4]
 8009fb8:	795a      	ldrb	r2, [r3, #5]
 8009fba:	3201      	adds	r2, #1
 8009fbc:	9200      	str	r2, [sp, #0]
 8009fbe:	f506 407d 	add.w	r0, r6, #64768	; 0xfd00
 8009fc2:	78db      	ldrb	r3, [r3, #3]
 8009fc4:	4a10      	ldr	r2, [pc, #64]	; (800a008 <_ZN11Screen1View21functionOkFilDataTimeEv+0xcc>)
 8009fc6:	210c      	movs	r1, #12
 8009fc8:	30e0      	adds	r0, #224	; 0xe0
 8009fca:	f011 f87f 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaStopDateBuffer, TEXTAREASTOPDATE_SIZE, "%.2d-%.2d-%4d", timeptrStop.tm_mday, timeptrStop.tm_mon + 1, timeptrStop.tm_year + 1900);
 8009fce:	88e3      	ldrh	r3, [r4, #6]
 8009fd0:	4a0d      	ldr	r2, [pc, #52]	; (800a008 <_ZN11Screen1View21functionOkFilDataTimeEv+0xcc>)
 8009fd2:	f203 736c 	addw	r3, r3, #1900	; 0x76c
 8009fd6:	9301      	str	r3, [sp, #4]
 8009fd8:	7963      	ldrb	r3, [r4, #5]
 8009fda:	3301      	adds	r3, #1
 8009fdc:	9300      	str	r3, [sp, #0]
 8009fde:	f506 407d 	add.w	r0, r6, #64768	; 0xfd00
 8009fe2:	78e3      	ldrb	r3, [r4, #3]
 8009fe4:	210c      	movs	r1, #12
 8009fe6:	30f8      	adds	r0, #248	; 0xf8
 8009fe8:	f011 f870 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8009fec:	f64f 13e5 	movw	r3, #63973	; 0xf9e5
 8009ff0:	2200      	movs	r2, #0
 8009ff2:	1d30      	adds	r0, r6, #4
 8009ff4:	54f2      	strb	r2, [r6, r3]
}
 8009ff6:	b002      	add	sp, #8
 8009ff8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8009ffc:	f00e bb66 	b.w	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>
 800a000:	2001adb0 	.word	0x2001adb0
 800a004:	2001ada4 	.word	0x2001ada4
 800a008:	0802ad00 	.word	0x0802ad00

0800a00c <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog>:
//	functionReadLog();
}
//=================================================================================================
void Screen1View::handleListItemSelected(uint8_t list_item, ConfigListFilterLog* list)
{
	if(list == &ListFilterLog_Num){
 800a00c:	f500 4369 	add.w	r3, r0, #59648	; 0xe900
 800a010:	3318      	adds	r3, #24
 800a012:	429a      	cmp	r2, r3
{
 800a014:	b510      	push	{r4, lr}
	if(list == &ListFilterLog_Num){
 800a016:	d111      	bne.n	800a03c <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x30>
		if(list_item <= 31){
 800a018:	291f      	cmp	r1, #31
 800a01a:	f500 30cd 	add.w	r0, r0, #104960	; 0x19a00
 800a01e:	d80b      	bhi.n	800a038 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x2c>
			if(TESTBIT(channel_num_fil, list_item)){
 800a020:	f8d0 31a0 	ldr.w	r3, [r0, #416]	; 0x1a0
 800a024:	2201      	movs	r2, #1
 800a026:	fa02 f101 	lsl.w	r1, r2, r1
 800a02a:	420b      	tst	r3, r1
				CLRBIT(channel_num_fil, list_item);
 800a02c:	bf14      	ite	ne
 800a02e:	438b      	bicne	r3, r1
			}
			else{
				SETBIT(channel_num_fil, list_item);
 800a030:	430b      	orreq	r3, r1
 800a032:	f8c0 31a0 	str.w	r3, [r0, #416]	; 0x1a0
			formula_fil = list_item;
		}
	}
//	list->moveTo(800, 0);
//	list->invalidate();
}
 800a036:	bd10      	pop	{r4, pc}
			channel_num_fil = 0;
 800a038:	2300      	movs	r3, #0
 800a03a:	e7fa      	b.n	800a032 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x26>
	else if(list == &ListFilterLog_TypeChan){
 800a03c:	f500 4358 	add.w	r3, r0, #55296	; 0xd800
 800a040:	33f0      	adds	r3, #240	; 0xf0
 800a042:	429a      	cmp	r2, r3
 800a044:	d115      	bne.n	800a072 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x66>
		if(list_item){
 800a046:	f500 30cd 	add.w	r0, r0, #104960	; 0x19a00
 800a04a:	b179      	cbz	r1, 800a06c <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x60>
			if(TESTBIT(ch_type_fil, list_item)){
 800a04c:	f890 41a4 	ldrb.w	r4, [r0, #420]	; 0x1a4
 800a050:	f990 31a4 	ldrsb.w	r3, [r0, #420]	; 0x1a4
 800a054:	2201      	movs	r2, #1
 800a056:	408a      	lsls	r2, r1
 800a058:	fa44 f101 	asr.w	r1, r4, r1
 800a05c:	b252      	sxtb	r2, r2
 800a05e:	07cc      	lsls	r4, r1, #31
				CLRBIT(ch_type_fil, list_item);
 800a060:	bf4c      	ite	mi
 800a062:	4393      	bicmi	r3, r2
				SETBIT(ch_type_fil, list_item);
 800a064:	4313      	orrpl	r3, r2
 800a066:	f880 31a4 	strb.w	r3, [r0, #420]	; 0x1a4
 800a06a:	e7e4      	b.n	800a036 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x2a>
			ch_type_fil = list_item;
 800a06c:	f880 11a4 	strb.w	r1, [r0, #420]	; 0x1a4
 800a070:	e7e1      	b.n	800a036 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x2a>
	else if(list == &ListFilterLog_StLoop){
 800a072:	f500 4348 	add.w	r3, r0, #51200	; 0xc800
 800a076:	33c8      	adds	r3, #200	; 0xc8
 800a078:	429a      	cmp	r2, r3
 800a07a:	d115      	bne.n	800a0a8 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x9c>
		if(list_item){
 800a07c:	f500 30cd 	add.w	r0, r0, #104960	; 0x19a00
 800a080:	b179      	cbz	r1, 800a0a2 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x96>
			if(TESTBIT(loop_state_fil, list_item)){
 800a082:	f890 41a5 	ldrb.w	r4, [r0, #421]	; 0x1a5
 800a086:	f990 31a5 	ldrsb.w	r3, [r0, #421]	; 0x1a5
 800a08a:	2201      	movs	r2, #1
 800a08c:	408a      	lsls	r2, r1
 800a08e:	fa44 f101 	asr.w	r1, r4, r1
 800a092:	b252      	sxtb	r2, r2
 800a094:	07c9      	lsls	r1, r1, #31
				CLRBIT(loop_state_fil, list_item);
 800a096:	bf4c      	ite	mi
 800a098:	4393      	bicmi	r3, r2
				SETBIT(loop_state_fil, list_item);
 800a09a:	4313      	orrpl	r3, r2
 800a09c:	f880 31a5 	strb.w	r3, [r0, #421]	; 0x1a5
 800a0a0:	e7c9      	b.n	800a036 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x2a>
			loop_state_fil = list_item;
 800a0a2:	f880 11a5 	strb.w	r1, [r0, #421]	; 0x1a5
 800a0a6:	e7c6      	b.n	800a036 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x2a>
	else if(list == &ListFilterLog_Unit){
 800a0a8:	f500 4338 	add.w	r3, r0, #47104	; 0xb800
 800a0ac:	33a0      	adds	r3, #160	; 0xa0
 800a0ae:	429a      	cmp	r2, r3
 800a0b0:	d115      	bne.n	800a0de <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0xd2>
		if(list_item){
 800a0b2:	f500 30cd 	add.w	r0, r0, #104960	; 0x19a00
 800a0b6:	b179      	cbz	r1, 800a0d8 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0xcc>
			if(TESTBIT(units_fil, list_item)){
 800a0b8:	f890 41a6 	ldrb.w	r4, [r0, #422]	; 0x1a6
 800a0bc:	f990 31a6 	ldrsb.w	r3, [r0, #422]	; 0x1a6
 800a0c0:	2201      	movs	r2, #1
 800a0c2:	408a      	lsls	r2, r1
 800a0c4:	fa44 f101 	asr.w	r1, r4, r1
 800a0c8:	b252      	sxtb	r2, r2
 800a0ca:	07cc      	lsls	r4, r1, #31
				CLRBIT(units_fil, list_item);
 800a0cc:	bf4c      	ite	mi
 800a0ce:	4393      	bicmi	r3, r2
				SETBIT(units_fil, list_item);
 800a0d0:	4313      	orrpl	r3, r2
 800a0d2:	f880 31a6 	strb.w	r3, [r0, #422]	; 0x1a6
 800a0d6:	e7ae      	b.n	800a036 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x2a>
			units_fil = list_item;
 800a0d8:	f880 11a6 	strb.w	r1, [r0, #422]	; 0x1a6
 800a0dc:	e7ab      	b.n	800a036 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x2a>
	else if(list == &ListFilterLog_StCur){
 800a0de:	f500 4328 	add.w	r3, r0, #43008	; 0xa800
 800a0e2:	3378      	adds	r3, #120	; 0x78
 800a0e4:	429a      	cmp	r2, r3
 800a0e6:	d115      	bne.n	800a114 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x108>
		if(list_item){
 800a0e8:	f500 30cd 	add.w	r0, r0, #104960	; 0x19a00
 800a0ec:	b179      	cbz	r1, 800a10e <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x102>
			if(TESTBIT(thld_state_fil, list_item)){
 800a0ee:	f890 41a7 	ldrb.w	r4, [r0, #423]	; 0x1a7
 800a0f2:	f990 31a7 	ldrsb.w	r3, [r0, #423]	; 0x1a7
 800a0f6:	2201      	movs	r2, #1
 800a0f8:	408a      	lsls	r2, r1
 800a0fa:	fa44 f101 	asr.w	r1, r4, r1
 800a0fe:	b252      	sxtb	r2, r2
 800a100:	07c9      	lsls	r1, r1, #31
				CLRBIT(thld_state_fil, list_item);
 800a102:	bf4c      	ite	mi
 800a104:	4393      	bicmi	r3, r2
				SETBIT(thld_state_fil, list_item);
 800a106:	4313      	orrpl	r3, r2
 800a108:	f880 31a7 	strb.w	r3, [r0, #423]	; 0x1a7
 800a10c:	e793      	b.n	800a036 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x2a>
			thld_state_fil = list_item;
 800a10e:	f880 11a7 	strb.w	r1, [r0, #423]	; 0x1a7
 800a112:	e790      	b.n	800a036 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x2a>
	else if(list == &ListFilterLog_Err){
 800a114:	f500 4318 	add.w	r3, r0, #38912	; 0x9800
 800a118:	3350      	adds	r3, #80	; 0x50
 800a11a:	429a      	cmp	r2, r3
 800a11c:	d115      	bne.n	800a14a <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x13e>
		if(list_item){
 800a11e:	f500 30cd 	add.w	r0, r0, #104960	; 0x19a00
 800a122:	b179      	cbz	r1, 800a144 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x138>
			if(TESTBIT(err_state_fil, list_item)){
 800a124:	f8b0 41a8 	ldrh.w	r4, [r0, #424]	; 0x1a8
 800a128:	f9b0 31a8 	ldrsh.w	r3, [r0, #424]	; 0x1a8
 800a12c:	2201      	movs	r2, #1
 800a12e:	408a      	lsls	r2, r1
 800a130:	fa44 f101 	asr.w	r1, r4, r1
 800a134:	b212      	sxth	r2, r2
 800a136:	07cc      	lsls	r4, r1, #31
				CLRBIT(err_state_fil, list_item);
 800a138:	bf4c      	ite	mi
 800a13a:	4393      	bicmi	r3, r2
				SETBIT(err_state_fil, list_item);
 800a13c:	4313      	orrpl	r3, r2
 800a13e:	f8a0 31a8 	strh.w	r3, [r0, #424]	; 0x1a8
 800a142:	e778      	b.n	800a036 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x2a>
			err_state_fil = list_item;
 800a144:	f8a0 11a8 	strh.w	r1, [r0, #424]	; 0x1a8
 800a148:	e775      	b.n	800a036 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x2a>
	else if(list == &ListFilterLog_Gas){
 800a14a:	f500 4308 	add.w	r3, r0, #34816	; 0x8800
 800a14e:	3328      	adds	r3, #40	; 0x28
 800a150:	429a      	cmp	r2, r3
 800a152:	f47f af70 	bne.w	800a036 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x2a>
		if(list_item){
 800a156:	f500 30cd 	add.w	r0, r0, #104960	; 0x19a00
 800a15a:	b179      	cbz	r1, 800a17c <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x170>
			if(TESTBIT(formula_fil, list_item)){
 800a15c:	f890 41aa 	ldrb.w	r4, [r0, #426]	; 0x1aa
 800a160:	f990 31aa 	ldrsb.w	r3, [r0, #426]	; 0x1aa
 800a164:	2201      	movs	r2, #1
 800a166:	408a      	lsls	r2, r1
 800a168:	fa44 f101 	asr.w	r1, r4, r1
 800a16c:	b252      	sxtb	r2, r2
 800a16e:	07c9      	lsls	r1, r1, #31
				CLRBIT(formula_fil, list_item);
 800a170:	bf4c      	ite	mi
 800a172:	4393      	bicmi	r3, r2
				SETBIT(formula_fil, list_item);
 800a174:	4313      	orrpl	r3, r2
 800a176:	f880 31aa 	strb.w	r3, [r0, #426]	; 0x1aa
 800a17a:	e75c      	b.n	800a036 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x2a>
			formula_fil = list_item;
 800a17c:	f880 11aa 	strb.w	r1, [r0, #426]	; 0x1aa
}
 800a180:	e759      	b.n	800a036 <_ZN11Screen1View22handleListItemSelectedEhP19ConfigListFilterLog+0x2a>
	...

0800a184 <_ZN11Screen1View11setupScreenEv>:
{
 800a184:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a188:	4604      	mov	r4, r0
 800a18a:	b085      	sub	sp, #20
    read_start_stop_state_archiv(&time_start_fil, &time_stop_fil);
 800a18c:	f504 37cd 	add.w	r7, r4, #104960	; 0x19a00
    tmp = time_stop_fil;
 800a190:	f8df b1cc 	ldr.w	fp, [pc, #460]	; 800a360 <_ZN11Screen1View11setupScreenEv+0x1dc>
	timeptr = *gmtime(&tmp);
 800a194:	4d71      	ldr	r5, [pc, #452]	; (800a35c <_ZN11Screen1View11setupScreenEv+0x1d8>)
    Screen1ViewBase::setupScreen();
 800a196:	f7fb fc92 	bl	8005abe <_ZN15Screen1ViewBase11setupScreenEv>
    read_start_stop_state_archiv(&time_start_fil, &time_stop_fil);
 800a19a:	f507 71cc 	add.w	r1, r7, #408	; 0x198
 800a19e:	f507 70ca 	add.w	r0, r7, #404	; 0x194
 800a1a2:	f7f7 fbf0 	bl	8001986 <read_start_stop_state_archiv>
    tmp = time_stop_fil;
 800a1a6:	f8d7 3198 	ldr.w	r3, [r7, #408]	; 0x198
 800a1aa:	f8cb 3000 	str.w	r3, [fp]
	timeptr = *gmtime(&tmp);
 800a1ae:	4658      	mov	r0, fp
 800a1b0:	f001 fe90 	bl	800bed4 <gmtime>
 800a1b4:	6803      	ldr	r3, [r0, #0]
 800a1b6:	602b      	str	r3, [r5, #0]
	dateSelectorContainerStop.setPosition(250, 50, modalWindow1.getWidth(), modalWindow1.getHeight());
 800a1b8:	f64f 1aca 	movw	sl, #63946	; 0xf9ca
	timeptr = *gmtime(&tmp);
 800a1bc:	6843      	ldr	r3, [r0, #4]
 800a1be:	606b      	str	r3, [r5, #4]
	dateSelectorContainerStop.setPosition(250, 50, modalWindow1.getWidth(), modalWindow1.getHeight());
 800a1c0:	f64f 19c8 	movw	r9, #63944	; 0xf9c8
	timeptr = *gmtime(&tmp);
 800a1c4:	6883      	ldr	r3, [r0, #8]
 800a1c6:	60ab      	str	r3, [r5, #8]
	dateSelectorContainerStop.setPosition(250, 50, modalWindow1.getWidth(), modalWindow1.getHeight());
 800a1c8:	f504 36a7 	add.w	r6, r4, #85504	; 0x14e00
 800a1cc:	36a0      	adds	r6, #160	; 0xa0
 800a1ce:	f934 300a 	ldrsh.w	r3, [r4, sl]
 800a1d2:	9300      	str	r3, [sp, #0]
 800a1d4:	4630      	mov	r0, r6
 800a1d6:	f934 3009 	ldrsh.w	r3, [r4, r9]
 800a1da:	2232      	movs	r2, #50	; 0x32
 800a1dc:	21fa      	movs	r1, #250	; 0xfa
	modalWindow1.add(dateSelectorContainerStop);
 800a1de:	f504 4879 	add.w	r8, r4, #63744	; 0xf900
	dateSelectorContainerStop.setPosition(250, 50, modalWindow1.getWidth(), modalWindow1.getHeight());
 800a1e2:	f7f8 fc65 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
	modalWindow1.add(dateSelectorContainerStop);
 800a1e6:	f108 08c0 	add.w	r8, r8, #192	; 0xc0
	dateSelectorContainerStop.setDate(timeptr.tm_year, timeptr.tm_mon, timeptr.tm_mday);
 800a1ea:	796a      	ldrb	r2, [r5, #5]
 800a1ec:	78eb      	ldrb	r3, [r5, #3]
 800a1ee:	88e9      	ldrh	r1, [r5, #6]
 800a1f0:	4630      	mov	r0, r6
 800a1f2:	f7ff fd73 	bl	8009cdc <_ZN21DateSelectorContainer7setDateEthh>
	modalWindow1.add(dateSelectorContainerStop);
 800a1f6:	4631      	mov	r1, r6
 800a1f8:	4640      	mov	r0, r8
 800a1fa:	f008 fff2 	bl	80131e2 <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    tmp = time_start_fil;
 800a1fe:	f8d7 3194 	ldr.w	r3, [r7, #404]	; 0x194
 800a202:	f8cb 3000 	str.w	r3, [fp]
    timeptr = *gmtime(&tmp);
 800a206:	4658      	mov	r0, fp
 800a208:	f001 fe64 	bl	800bed4 <gmtime>
 800a20c:	6803      	ldr	r3, [r0, #0]
 800a20e:	602b      	str	r3, [r5, #0]
 800a210:	6843      	ldr	r3, [r0, #4]
 800a212:	606b      	str	r3, [r5, #4]
    dateSelectorContainerStart.setPosition(0, 50, modalWindow1.getWidth(), modalWindow1.getHeight());
 800a214:	f504 3681 	add.w	r6, r4, #66048	; 0x10200
    timeptr = *gmtime(&tmp);
 800a218:	6883      	ldr	r3, [r0, #8]
 800a21a:	60ab      	str	r3, [r5, #8]
    dateSelectorContainerStart.setPosition(0, 50, modalWindow1.getWidth(), modalWindow1.getHeight());
 800a21c:	f106 0b20 	add.w	fp, r6, #32
 800a220:	f934 300a 	ldrsh.w	r3, [r4, sl]
 800a224:	9300      	str	r3, [sp, #0]
 800a226:	2232      	movs	r2, #50	; 0x32
 800a228:	f934 3009 	ldrsh.w	r3, [r4, r9]
 800a22c:	2100      	movs	r1, #0
 800a22e:	4658      	mov	r0, fp
 800a230:	f7f8 fc3e 	bl	8002ab0 <_ZN8touchgfx8Drawable11setPositionEssss>
    dateSelectorContainerStart.setDate(timeptr.tm_year, timeptr.tm_mon, timeptr.tm_mday);
 800a234:	796a      	ldrb	r2, [r5, #5]
 800a236:	78eb      	ldrb	r3, [r5, #3]
 800a238:	88e9      	ldrh	r1, [r5, #6]
 800a23a:	4658      	mov	r0, fp
 800a23c:	f7ff fd4e 	bl	8009cdc <_ZN21DateSelectorContainer7setDateEthh>
    modalWindow1.add(dateSelectorContainerStart);
 800a240:	4659      	mov	r1, fp
 800a242:	4640      	mov	r0, r8
 800a244:	f008 ffcd 	bl	80131e2 <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    functionOkFilDataTime();
 800a248:	6823      	ldr	r3, [r4, #0]
 800a24a:	4620      	mov	r0, r4
 800a24c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800a24e:	4798      	blx	r3
    for(uint8_t i = 0; i < 10; i++){
 800a250:	f507 72da 	add.w	r2, r7, #436	; 0x1b4
 800a254:	f507 71ee 	add.w	r1, r7, #476	; 0x1dc
 800a258:	2300      	movs	r3, #0
		mas_ContainerTableLog[i]->setVisible(false);
 800a25a:	f852 0b04 	ldr.w	r0, [r2], #4
    for(uint8_t i = 0; i < 10; i++){
 800a25e:	428a      	cmp	r2, r1
 800a260:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 800a264:	d1f9      	bne.n	800a25a <_ZN11Screen1View11setupScreenEv+0xd6>
    ListFilterLog_Num.		setViewCallback(CallbackListItemSelected);
 800a266:	f504 4b69 	add.w	fp, r4, #59648	; 0xe900
 800a26a:	f10b 0b18 	add.w	fp, fp, #24
    ListFilterLog_TypeChan.	setViewCallback(CallbackListItemSelected);
 800a26e:	f504 4a58 	add.w	sl, r4, #55296	; 0xd800
    ch_type_fil 	= 0;
 800a272:	e9c7 3368 	strd	r3, r3, [r7, #416]	; 0x1a0
    err_state_fil 	= 0;
 800a276:	f8a7 31a8 	strh.w	r3, [r7, #424]	; 0x1a8
    formula_fil 	= 0;
 800a27a:	f887 31aa 	strb.w	r3, [r7, #426]	; 0x1aa
    ListFilterLog_Num.		setViewCallback(CallbackListItemSelected);
 800a27e:	f106 0110 	add.w	r1, r6, #16
    ListFilterLog_TypeChan.	setViewCallback(CallbackListItemSelected);
 800a282:	f10a 0af0 	add.w	sl, sl, #240	; 0xf0
    ListFilterLog_Num.		setViewCallback(CallbackListItemSelected);
 800a286:	4658      	mov	r0, fp
    ListFilterLog_StLoop.	setViewCallback(CallbackListItemSelected);
 800a288:	f504 4948 	add.w	r9, r4, #51200	; 0xc800
 800a28c:	f109 09c8 	add.w	r9, r9, #200	; 0xc8
    ListFilterLog_Num.		setViewCallback(CallbackListItemSelected);
 800a290:	9103      	str	r1, [sp, #12]
    ListFilterLog_Unit.		setViewCallback(CallbackListItemSelected);
 800a292:	f504 4838 	add.w	r8, r4, #47104	; 0xb800
    ListFilterLog_Num.		setViewCallback(CallbackListItemSelected);
 800a296:	f7fe fe27 	bl	8008ee8 <_ZN19ConfigListFilterLog15setViewCallbackERN8touchgfx15GenericCallbackIhPS_vEE>
    ListFilterLog_TypeChan.	setViewCallback(CallbackListItemSelected);
 800a29a:	9903      	ldr	r1, [sp, #12]
 800a29c:	4650      	mov	r0, sl
 800a29e:	f7fe fe23 	bl	8008ee8 <_ZN19ConfigListFilterLog15setViewCallbackERN8touchgfx15GenericCallbackIhPS_vEE>
    ListFilterLog_Unit.		setViewCallback(CallbackListItemSelected);
 800a2a2:	f108 08a0 	add.w	r8, r8, #160	; 0xa0
    ListFilterLog_StLoop.	setViewCallback(CallbackListItemSelected);
 800a2a6:	9903      	ldr	r1, [sp, #12]
 800a2a8:	4648      	mov	r0, r9
    ListFilterLog_StCur.	setViewCallback(CallbackListItemSelected);
 800a2aa:	f504 4728 	add.w	r7, r4, #43008	; 0xa800
    ListFilterLog_StLoop.	setViewCallback(CallbackListItemSelected);
 800a2ae:	f7fe fe1b 	bl	8008ee8 <_ZN19ConfigListFilterLog15setViewCallbackERN8touchgfx15GenericCallbackIhPS_vEE>
    ListFilterLog_StCur.	setViewCallback(CallbackListItemSelected);
 800a2b2:	3778      	adds	r7, #120	; 0x78
    ListFilterLog_Unit.		setViewCallback(CallbackListItemSelected);
 800a2b4:	9903      	ldr	r1, [sp, #12]
 800a2b6:	4640      	mov	r0, r8
    ListFilterLog_Err.		setViewCallback(CallbackListItemSelected);
 800a2b8:	f504 4618 	add.w	r6, r4, #38912	; 0x9800
    ListFilterLog_Unit.		setViewCallback(CallbackListItemSelected);
 800a2bc:	f7fe fe14 	bl	8008ee8 <_ZN19ConfigListFilterLog15setViewCallbackERN8touchgfx15GenericCallbackIhPS_vEE>
    ListFilterLog_Err.		setViewCallback(CallbackListItemSelected);
 800a2c0:	3650      	adds	r6, #80	; 0x50
    ListFilterLog_StCur.	setViewCallback(CallbackListItemSelected);
 800a2c2:	9903      	ldr	r1, [sp, #12]
 800a2c4:	4638      	mov	r0, r7
    ListFilterLog_Gas.		setViewCallback(CallbackListItemSelected);
 800a2c6:	f504 4508 	add.w	r5, r4, #34816	; 0x8800
    ListFilterLog_StCur.	setViewCallback(CallbackListItemSelected);
 800a2ca:	f7fe fe0d 	bl	8008ee8 <_ZN19ConfigListFilterLog15setViewCallbackERN8touchgfx15GenericCallbackIhPS_vEE>
    ListFilterLog_Gas.		setViewCallback(CallbackListItemSelected);
 800a2ce:	3528      	adds	r5, #40	; 0x28
    ListFilterLog_Err.		setViewCallback(CallbackListItemSelected);
 800a2d0:	9903      	ldr	r1, [sp, #12]
 800a2d2:	4630      	mov	r0, r6
 800a2d4:	f7fe fe08 	bl	8008ee8 <_ZN19ConfigListFilterLog15setViewCallbackERN8touchgfx15GenericCallbackIhPS_vEE>
    ListFilterLog_Gas.		setViewCallback(CallbackListItemSelected);
 800a2d8:	9903      	ldr	r1, [sp, #12]
 800a2da:	4628      	mov	r0, r5
 800a2dc:	f7fe fe04 	bl	8008ee8 <_ZN19ConfigListFilterLog15setViewCallbackERN8touchgfx15GenericCallbackIhPS_vEE>
	ListFilterLog_Num.		setContainerID(ConfigListFilterLog::ListID::list_channel);
 800a2e0:	4658      	mov	r0, fp
 800a2e2:	2101      	movs	r1, #1
 800a2e4:	f7fe fdde 	bl	8008ea4 <_ZN19ConfigListFilterLog14setContainerIDENS_6ListIDE>
	ListFilterLog_TypeChan.	setContainerID(ConfigListFilterLog::ListID::list_type_channel);
 800a2e8:	4650      	mov	r0, sl
 800a2ea:	2102      	movs	r1, #2
 800a2ec:	f7fe fdda 	bl	8008ea4 <_ZN19ConfigListFilterLog14setContainerIDENS_6ListIDE>
	ListFilterLog_StLoop.	setContainerID(ConfigListFilterLog::ListID::list_st_loop);
 800a2f0:	4648      	mov	r0, r9
 800a2f2:	2103      	movs	r1, #3
 800a2f4:	f7fe fdd6 	bl	8008ea4 <_ZN19ConfigListFilterLog14setContainerIDENS_6ListIDE>
	ListFilterLog_Unit.		setContainerID(ConfigListFilterLog::ListID::list_units);
 800a2f8:	4640      	mov	r0, r8
 800a2fa:	2104      	movs	r1, #4
 800a2fc:	f7fe fdd2 	bl	8008ea4 <_ZN19ConfigListFilterLog14setContainerIDENS_6ListIDE>
	ListFilterLog_StCur.	setContainerID(ConfigListFilterLog::ListID::list_st_cur);
 800a300:	4638      	mov	r0, r7
 800a302:	2105      	movs	r1, #5
 800a304:	f7fe fdce 	bl	8008ea4 <_ZN19ConfigListFilterLog14setContainerIDENS_6ListIDE>
	ListFilterLog_Err.		setContainerID(ConfigListFilterLog::ListID::list_err);
 800a308:	4630      	mov	r0, r6
 800a30a:	2106      	movs	r1, #6
 800a30c:	f7fe fdca 	bl	8008ea4 <_ZN19ConfigListFilterLog14setContainerIDENS_6ListIDE>
	ListFilterLog_Gas.		setContainerID(ConfigListFilterLog::ListID::list_formula);
 800a310:	4628      	mov	r0, r5
 800a312:	2107      	movs	r1, #7
 800a314:	f7fe fdc6 	bl	8008ea4 <_ZN19ConfigListFilterLog14setContainerIDENS_6ListIDE>
	ListFilterLog_Num.		setHighlighted(32);
 800a318:	4658      	mov	r0, fp
 800a31a:	2120      	movs	r1, #32
 800a31c:	f7fe fd96 	bl	8008e4c <_ZN19ConfigListFilterLog14setHighlightedEs>
	ListFilterLog_TypeChan.	setHighlighted(2);
 800a320:	4650      	mov	r0, sl
 800a322:	2102      	movs	r1, #2
 800a324:	f7fe fd92 	bl	8008e4c <_ZN19ConfigListFilterLog14setHighlightedEs>
	ListFilterLog_StLoop.	setHighlighted(0);
 800a328:	4648      	mov	r0, r9
 800a32a:	2100      	movs	r1, #0
 800a32c:	f7fe fd8e 	bl	8008e4c <_ZN19ConfigListFilterLog14setHighlightedEs>
	ListFilterLog_Unit.		setHighlighted(0);
 800a330:	4640      	mov	r0, r8
 800a332:	2100      	movs	r1, #0
 800a334:	f7fe fd8a 	bl	8008e4c <_ZN19ConfigListFilterLog14setHighlightedEs>
	ListFilterLog_StCur.	setHighlighted(0);
 800a338:	4638      	mov	r0, r7
 800a33a:	2100      	movs	r1, #0
 800a33c:	f7fe fd86 	bl	8008e4c <_ZN19ConfigListFilterLog14setHighlightedEs>
	ListFilterLog_Err.		setHighlighted(0);
 800a340:	4630      	mov	r0, r6
 800a342:	2100      	movs	r1, #0
 800a344:	f7fe fd82 	bl	8008e4c <_ZN19ConfigListFilterLog14setHighlightedEs>
	ListFilterLog_Gas.		setHighlighted(0);
 800a348:	4628      	mov	r0, r5
 800a34a:	2100      	movs	r1, #0
 800a34c:	f7fe fd7e 	bl	8008e4c <_ZN19ConfigListFilterLog14setHighlightedEs>
 800a350:	1d20      	adds	r0, r4, #4
}
 800a352:	b005      	add	sp, #20
 800a354:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a358:	f00e b9b8 	b.w	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>
 800a35c:	2001ad88 	.word	0x2001ad88
 800a360:	2001ad84 	.word	0x2001ad84

0800a364 <_ZN11Screen1View17functionFilterNumEv>:
{
 800a364:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a366:	4604      	mov	r4, r0
	if(list->isVisible() == false)
 800a368:	f64e 153d 	movw	r5, #59709	; 0xe93d
	ConfigListFilterLog *list = &ListFilterLog_Num;
 800a36c:	f500 4069 	add.w	r0, r0, #59648	; 0xe900
	if(list->isVisible() == false)
 800a370:	5d63      	ldrb	r3, [r4, r5]
	ConfigListFilterLog *list = &ListFilterLog_Num;
 800a372:	3018      	adds	r0, #24
	if(list->isVisible() == false)
 800a374:	bb7b      	cbnz	r3, 800a3d6 <_ZN11Screen1View17functionFilterNumEv+0x72>
		list->moveTo(listButton->getX() + button->getX(), listButton->getY() + listButton->getHeight());
 800a376:	f248 131e 	movw	r3, #33054	; 0x811e
 800a37a:	9001      	str	r0, [sp, #4]
 800a37c:	5ae2      	ldrh	r2, [r4, r3]
 800a37e:	f248 1322 	movw	r3, #33058	; 0x8122
 800a382:	5ae3      	ldrh	r3, [r4, r3]
 800a384:	441a      	add	r2, r3
 800a386:	f248 131c 	movw	r3, #33052	; 0x811c
 800a38a:	b212      	sxth	r2, r2
 800a38c:	5ae1      	ldrh	r1, [r4, r3]
 800a38e:	f248 230c 	movw	r3, #33292	; 0x820c
 800a392:	5ae3      	ldrh	r3, [r4, r3]
 800a394:	4419      	add	r1, r3
 800a396:	b209      	sxth	r1, r1
 800a398:	f7f7 fe57 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
		list->resizeXY(button->getWidth(), listTable->getHeight());
 800a39c:	f643 03a2 	movw	r3, #14498	; 0x38a2
 800a3a0:	9801      	ldr	r0, [sp, #4]
 800a3a2:	5ee2      	ldrsh	r2, [r4, r3]
 800a3a4:	f248 2310 	movw	r3, #33296	; 0x8210
 800a3a8:	5ee1      	ldrsh	r1, [r4, r3]
 800a3aa:	f7fe fd65 	bl	8008e78 <_ZN19ConfigListFilterLog8resizeXYEii>
 800a3ae:	2301      	movs	r3, #1
 800a3b0:	5563      	strb	r3, [r4, r5]
 800a3b2:	9801      	ldr	r0, [sp, #4]
	list->invalidate();
 800a3b4:	f00e f98a 	bl	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>
	if(channel_num_fil){
 800a3b8:	f504 3080 	add.w	r0, r4, #65536	; 0x10000
 800a3bc:	f504 34cd 	add.w	r4, r4, #104960	; 0x19a00
 800a3c0:	3090      	adds	r0, #144	; 0x90
 800a3c2:	f8d4 31a0 	ldr.w	r3, [r4, #416]	; 0x1a0
 800a3c6:	b173      	cbz	r3, 800a3e6 <_ZN11Screen1View17functionFilterNumEv+0x82>
		Unicode::snprintf(flexButtonFilterNumBuffer2, FLEXBUTTONFILTERNUMBUFFER2_SIZE, "+");
 800a3c8:	4a08      	ldr	r2, [pc, #32]	; (800a3ec <_ZN11Screen1View17functionFilterNumEv+0x88>)
		Unicode::snprintf(flexButtonFilterNumBuffer2, FLEXBUTTONFILTERNUMBUFFER2_SIZE, " ");
 800a3ca:	210a      	movs	r1, #10
}
 800a3cc:	b003      	add	sp, #12
 800a3ce:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		Unicode::snprintf(flexButtonFilterNumBuffer2, FLEXBUTTONFILTERNUMBUFFER2_SIZE, " ");
 800a3d2:	f010 be7b 	b.w	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		list->moveTo(800, 0);
 800a3d6:	2200      	movs	r2, #0
 800a3d8:	f44f 7148 	mov.w	r1, #800	; 0x320
 800a3dc:	9001      	str	r0, [sp, #4]
 800a3de:	f7f7 fe34 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
 800a3e2:	2300      	movs	r3, #0
 800a3e4:	e7e4      	b.n	800a3b0 <_ZN11Screen1View17functionFilterNumEv+0x4c>
		Unicode::snprintf(flexButtonFilterNumBuffer2, FLEXBUTTONFILTERNUMBUFFER2_SIZE, " ");
 800a3e6:	4a02      	ldr	r2, [pc, #8]	; (800a3f0 <_ZN11Screen1View17functionFilterNumEv+0x8c>)
 800a3e8:	e7ef      	b.n	800a3ca <_ZN11Screen1View17functionFilterNumEv+0x66>
 800a3ea:	bf00      	nop
 800a3ec:	0802ad0e 	.word	0x0802ad0e
 800a3f0:	0802dd68 	.word	0x0802dd68

0800a3f4 <_ZN11Screen1View23functionFilterNum_Type2Ev>:
{
 800a3f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a3f6:	4604      	mov	r4, r0
	if(list->isVisible() == false)
 800a3f8:	f64e 153d 	movw	r5, #59709	; 0xe93d
	ConfigListFilterLog *list = &ListFilterLog_Num;
 800a3fc:	f500 4069 	add.w	r0, r0, #59648	; 0xe900
	if(list->isVisible() == false)
 800a400:	5d63      	ldrb	r3, [r4, r5]
	ConfigListFilterLog *list = &ListFilterLog_Num;
 800a402:	3018      	adds	r0, #24
	if(list->isVisible() == false)
 800a404:	bb73      	cbnz	r3, 800a464 <_ZN11Screen1View23functionFilterNum_Type2Ev+0x70>
		list->moveTo(listButton->getX() + button->getX(), listButton->getY() + listButton->getHeight());
 800a406:	f647 134e 	movw	r3, #31054	; 0x794e
 800a40a:	9001      	str	r0, [sp, #4]
 800a40c:	5ae2      	ldrh	r2, [r4, r3]
 800a40e:	f647 1352 	movw	r3, #31058	; 0x7952
 800a412:	5ae3      	ldrh	r3, [r4, r3]
 800a414:	441a      	add	r2, r3
 800a416:	f647 134c 	movw	r3, #31052	; 0x794c
 800a41a:	b212      	sxth	r2, r2
 800a41c:	5ae1      	ldrh	r1, [r4, r3]
 800a41e:	f647 233c 	movw	r3, #31292	; 0x7a3c
 800a422:	5ae3      	ldrh	r3, [r4, r3]
 800a424:	4419      	add	r1, r3
 800a426:	b209      	sxth	r1, r1
 800a428:	f7f7 fe0f 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
		list->resizeXY(button->getWidth(), listTable->getHeight());
 800a42c:	f647 2340 	movw	r3, #31296	; 0x7a40
 800a430:	f9b4 20aa 	ldrsh.w	r2, [r4, #170]	; 0xaa
 800a434:	5ee1      	ldrsh	r1, [r4, r3]
 800a436:	9801      	ldr	r0, [sp, #4]
 800a438:	f7fe fd1e 	bl	8008e78 <_ZN19ConfigListFilterLog8resizeXYEii>
 800a43c:	2301      	movs	r3, #1
 800a43e:	5563      	strb	r3, [r4, r5]
 800a440:	9801      	ldr	r0, [sp, #4]
	list->invalidate();
 800a442:	f00e f943 	bl	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>
	if(channel_num_fil){
 800a446:	f504 407e 	add.w	r0, r4, #65024	; 0xfe00
 800a44a:	f504 34cd 	add.w	r4, r4, #104960	; 0x19a00
 800a44e:	30f6      	adds	r0, #246	; 0xf6
 800a450:	f8d4 31a0 	ldr.w	r3, [r4, #416]	; 0x1a0
 800a454:	b173      	cbz	r3, 800a474 <_ZN11Screen1View23functionFilterNum_Type2Ev+0x80>
		Unicode::snprintf(flexButtonFilterNum_Type2Buffer2, FLEXBUTTONFILTERNUM_TYPE2BUFFER2_SIZE, "+");
 800a456:	4a08      	ldr	r2, [pc, #32]	; (800a478 <_ZN11Screen1View23functionFilterNum_Type2Ev+0x84>)
		Unicode::snprintf(flexButtonFilterNum_Type2Buffer2, FLEXBUTTONFILTERNUM_TYPE2BUFFER2_SIZE, " ");
 800a458:	210a      	movs	r1, #10
}
 800a45a:	b003      	add	sp, #12
 800a45c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		Unicode::snprintf(flexButtonFilterNum_Type2Buffer2, FLEXBUTTONFILTERNUM_TYPE2BUFFER2_SIZE, " ");
 800a460:	f010 be34 	b.w	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		list->moveTo(800, 0);
 800a464:	2200      	movs	r2, #0
 800a466:	f44f 7148 	mov.w	r1, #800	; 0x320
 800a46a:	9001      	str	r0, [sp, #4]
 800a46c:	f7f7 fded 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
 800a470:	2300      	movs	r3, #0
 800a472:	e7e4      	b.n	800a43e <_ZN11Screen1View23functionFilterNum_Type2Ev+0x4a>
		Unicode::snprintf(flexButtonFilterNum_Type2Buffer2, FLEXBUTTONFILTERNUM_TYPE2BUFFER2_SIZE, " ");
 800a474:	4a01      	ldr	r2, [pc, #4]	; (800a47c <_ZN11Screen1View23functionFilterNum_Type2Ev+0x88>)
 800a476:	e7ef      	b.n	800a458 <_ZN11Screen1View23functionFilterNum_Type2Ev+0x64>
 800a478:	0802ad0e 	.word	0x0802ad0e
 800a47c:	0802dd68 	.word	0x0802dd68

0800a480 <_ZN11Screen1View25functionFilterTypeChannelEv>:
{
 800a480:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a482:	4604      	mov	r4, r0
	if(list->isVisible() == false)
 800a484:	f64d 1515 	movw	r5, #55573	; 0xd915
	ConfigListFilterLog *list = &ListFilterLog_TypeChan;
 800a488:	f500 4058 	add.w	r0, r0, #55296	; 0xd800
	if(list->isVisible() == false)
 800a48c:	5d63      	ldrb	r3, [r4, r5]
	ConfigListFilterLog *list = &ListFilterLog_TypeChan;
 800a48e:	30f0      	adds	r0, #240	; 0xf0
	if(list->isVisible() == false)
 800a490:	bb7b      	cbnz	r3, 800a4f2 <_ZN11Screen1View25functionFilterTypeChannelEv+0x72>
		list->moveTo(listButton->getX() + button->getX(), listButton->getY() + listButton->getHeight());
 800a492:	f248 131e 	movw	r3, #33054	; 0x811e
 800a496:	9001      	str	r0, [sp, #4]
 800a498:	5ae2      	ldrh	r2, [r4, r3]
 800a49a:	f248 1322 	movw	r3, #33058	; 0x8122
 800a49e:	5ae3      	ldrh	r3, [r4, r3]
 800a4a0:	441a      	add	r2, r3
 800a4a2:	f248 131c 	movw	r3, #33052	; 0x811c
 800a4a6:	b212      	sxth	r2, r2
 800a4a8:	5ae1      	ldrh	r1, [r4, r3]
 800a4aa:	f248 23d0 	movw	r3, #33488	; 0x82d0
 800a4ae:	5ae3      	ldrh	r3, [r4, r3]
 800a4b0:	4419      	add	r1, r3
 800a4b2:	b209      	sxth	r1, r1
 800a4b4:	f7f7 fdc9 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
		list->resizeXY(button->getWidth(), listTable->getHeight());
 800a4b8:	f643 03a2 	movw	r3, #14498	; 0x38a2
 800a4bc:	9801      	ldr	r0, [sp, #4]
 800a4be:	5ee2      	ldrsh	r2, [r4, r3]
 800a4c0:	f248 23d4 	movw	r3, #33492	; 0x82d4
 800a4c4:	5ee1      	ldrsh	r1, [r4, r3]
 800a4c6:	f7fe fcd7 	bl	8008e78 <_ZN19ConfigListFilterLog8resizeXYEii>
 800a4ca:	2301      	movs	r3, #1
 800a4cc:	5563      	strb	r3, [r4, r5]
 800a4ce:	9801      	ldr	r0, [sp, #4]
	list->invalidate();
 800a4d0:	f00e f8fc 	bl	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>
	if(ch_type_fil){
 800a4d4:	f504 3080 	add.w	r0, r4, #65536	; 0x10000
 800a4d8:	f504 34cd 	add.w	r4, r4, #104960	; 0x19a00
 800a4dc:	30c2      	adds	r0, #194	; 0xc2
 800a4de:	f894 31a4 	ldrb.w	r3, [r4, #420]	; 0x1a4
 800a4e2:	b173      	cbz	r3, 800a502 <_ZN11Screen1View25functionFilterTypeChannelEv+0x82>
		Unicode::snprintf(flexButtonFilterTypeChannelBuffer2, FLEXBUTTONFILTERTYPECHANNELBUFFER2_SIZE, "+");
 800a4e4:	4a08      	ldr	r2, [pc, #32]	; (800a508 <_ZN11Screen1View25functionFilterTypeChannelEv+0x88>)
		Unicode::snprintf(flexButtonFilterTypeChannelBuffer2, FLEXBUTTONFILTERTYPECHANNELBUFFER2_SIZE, " ");
 800a4e6:	210a      	movs	r1, #10
}
 800a4e8:	b003      	add	sp, #12
 800a4ea:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		Unicode::snprintf(flexButtonFilterTypeChannelBuffer2, FLEXBUTTONFILTERTYPECHANNELBUFFER2_SIZE, " ");
 800a4ee:	f010 bded 	b.w	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		list->moveTo(800, 0);
 800a4f2:	2200      	movs	r2, #0
 800a4f4:	f44f 7148 	mov.w	r1, #800	; 0x320
 800a4f8:	9001      	str	r0, [sp, #4]
 800a4fa:	f7f7 fda6 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
 800a4fe:	2300      	movs	r3, #0
 800a500:	e7e4      	b.n	800a4cc <_ZN11Screen1View25functionFilterTypeChannelEv+0x4c>
		Unicode::snprintf(flexButtonFilterTypeChannelBuffer2, FLEXBUTTONFILTERTYPECHANNELBUFFER2_SIZE, " ");
 800a502:	4a02      	ldr	r2, [pc, #8]	; (800a50c <_ZN11Screen1View25functionFilterTypeChannelEv+0x8c>)
 800a504:	e7ef      	b.n	800a4e6 <_ZN11Screen1View25functionFilterTypeChannelEv+0x66>
 800a506:	bf00      	nop
 800a508:	0802ad0e 	.word	0x0802ad0e
 800a50c:	0802dd68 	.word	0x0802dd68

0800a510 <_ZN11Screen1View20functionFilterStLoopEv>:
{
 800a510:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a512:	4604      	mov	r4, r0
	if(list->isVisible() == false)
 800a514:	f64c 05ed 	movw	r5, #51437	; 0xc8ed
	ConfigListFilterLog *list = &ListFilterLog_StLoop;
 800a518:	f500 4048 	add.w	r0, r0, #51200	; 0xc800
	if(list->isVisible() == false)
 800a51c:	5d63      	ldrb	r3, [r4, r5]
	ConfigListFilterLog *list = &ListFilterLog_StLoop;
 800a51e:	30c8      	adds	r0, #200	; 0xc8
	if(list->isVisible() == false)
 800a520:	bb7b      	cbnz	r3, 800a582 <_ZN11Screen1View20functionFilterStLoopEv+0x72>
		list->moveTo(listButton->getX() + button->getX(), listButton->getY() + listButton->getHeight());
 800a522:	f248 131e 	movw	r3, #33054	; 0x811e
 800a526:	9001      	str	r0, [sp, #4]
 800a528:	5ae2      	ldrh	r2, [r4, r3]
 800a52a:	f248 1322 	movw	r3, #33058	; 0x8122
 800a52e:	5ae3      	ldrh	r3, [r4, r3]
 800a530:	441a      	add	r2, r3
 800a532:	f248 131c 	movw	r3, #33052	; 0x811c
 800a536:	b212      	sxth	r2, r2
 800a538:	5ae1      	ldrh	r1, [r4, r3]
 800a53a:	f248 3394 	movw	r3, #33684	; 0x8394
 800a53e:	5ae3      	ldrh	r3, [r4, r3]
 800a540:	4419      	add	r1, r3
 800a542:	b209      	sxth	r1, r1
 800a544:	f7f7 fd81 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
		list->resizeXY(button->getWidth(), listTable->getHeight());
 800a548:	f643 03a2 	movw	r3, #14498	; 0x38a2
 800a54c:	9801      	ldr	r0, [sp, #4]
 800a54e:	5ee2      	ldrsh	r2, [r4, r3]
 800a550:	f248 3398 	movw	r3, #33688	; 0x8398
 800a554:	5ee1      	ldrsh	r1, [r4, r3]
 800a556:	f7fe fc8f 	bl	8008e78 <_ZN19ConfigListFilterLog8resizeXYEii>
 800a55a:	2301      	movs	r3, #1
 800a55c:	5563      	strb	r3, [r4, r5]
 800a55e:	9801      	ldr	r0, [sp, #4]
	list->invalidate();
 800a560:	f00e f8b4 	bl	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>
	if(loop_state_fil){
 800a564:	f504 3080 	add.w	r0, r4, #65536	; 0x10000
 800a568:	f504 34cd 	add.w	r4, r4, #104960	; 0x19a00
 800a56c:	30f4      	adds	r0, #244	; 0xf4
 800a56e:	f894 31a5 	ldrb.w	r3, [r4, #421]	; 0x1a5
 800a572:	b173      	cbz	r3, 800a592 <_ZN11Screen1View20functionFilterStLoopEv+0x82>
		Unicode::snprintf(flexButtonFilterStLoopBuffer2, FLEXBUTTONFILTERSTLOOPBUFFER2_SIZE, "+");
 800a574:	4a08      	ldr	r2, [pc, #32]	; (800a598 <_ZN11Screen1View20functionFilterStLoopEv+0x88>)
		Unicode::snprintf(flexButtonFilterStLoopBuffer2, FLEXBUTTONFILTERSTLOOPBUFFER2_SIZE, " ");
 800a576:	210a      	movs	r1, #10
}
 800a578:	b003      	add	sp, #12
 800a57a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		Unicode::snprintf(flexButtonFilterStLoopBuffer2, FLEXBUTTONFILTERSTLOOPBUFFER2_SIZE, " ");
 800a57e:	f010 bda5 	b.w	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		list->moveTo(800, 0);
 800a582:	2200      	movs	r2, #0
 800a584:	f44f 7148 	mov.w	r1, #800	; 0x320
 800a588:	9001      	str	r0, [sp, #4]
 800a58a:	f7f7 fd5e 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
 800a58e:	2300      	movs	r3, #0
 800a590:	e7e4      	b.n	800a55c <_ZN11Screen1View20functionFilterStLoopEv+0x4c>
		Unicode::snprintf(flexButtonFilterStLoopBuffer2, FLEXBUTTONFILTERSTLOOPBUFFER2_SIZE, " ");
 800a592:	4a02      	ldr	r2, [pc, #8]	; (800a59c <_ZN11Screen1View20functionFilterStLoopEv+0x8c>)
 800a594:	e7ef      	b.n	800a576 <_ZN11Screen1View20functionFilterStLoopEv+0x66>
 800a596:	bf00      	nop
 800a598:	0802ad0e 	.word	0x0802ad0e
 800a59c:	0802dd68 	.word	0x0802dd68

0800a5a0 <_ZN11Screen1View18functionFilterUnitEv>:
{
 800a5a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a5a2:	4604      	mov	r4, r0
	if(list->isVisible() == false)
 800a5a4:	f64b 05c5 	movw	r5, #47301	; 0xb8c5
	ConfigListFilterLog *list = &ListFilterLog_Unit;
 800a5a8:	f500 4038 	add.w	r0, r0, #47104	; 0xb800
	if(list->isVisible() == false)
 800a5ac:	5d63      	ldrb	r3, [r4, r5]
	ConfigListFilterLog *list = &ListFilterLog_Unit;
 800a5ae:	30a0      	adds	r0, #160	; 0xa0
	if(list->isVisible() == false)
 800a5b0:	bb83      	cbnz	r3, 800a614 <_ZN11Screen1View18functionFilterUnitEv+0x74>
		list->moveTo(listButton->getX() + button->getX(), listButton->getY() + listButton->getHeight());
 800a5b2:	f248 131e 	movw	r3, #33054	; 0x811e
 800a5b6:	9001      	str	r0, [sp, #4]
 800a5b8:	5ae2      	ldrh	r2, [r4, r3]
 800a5ba:	f248 1322 	movw	r3, #33058	; 0x8122
 800a5be:	5ae3      	ldrh	r3, [r4, r3]
 800a5c0:	441a      	add	r2, r3
 800a5c2:	f248 131c 	movw	r3, #33052	; 0x811c
 800a5c6:	b212      	sxth	r2, r2
 800a5c8:	5ae1      	ldrh	r1, [r4, r3]
 800a5ca:	f248 5318 	movw	r3, #34072	; 0x8518
 800a5ce:	5ae3      	ldrh	r3, [r4, r3]
 800a5d0:	4419      	add	r1, r3
 800a5d2:	b209      	sxth	r1, r1
 800a5d4:	f7f7 fd39 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
		list->resizeXY(button->getWidth(), listTable->getHeight());
 800a5d8:	f643 03a2 	movw	r3, #14498	; 0x38a2
 800a5dc:	9801      	ldr	r0, [sp, #4]
 800a5de:	5ee2      	ldrsh	r2, [r4, r3]
 800a5e0:	f248 531c 	movw	r3, #34076	; 0x851c
 800a5e4:	5ee1      	ldrsh	r1, [r4, r3]
 800a5e6:	f7fe fc47 	bl	8008e78 <_ZN19ConfigListFilterLog8resizeXYEii>
 800a5ea:	2301      	movs	r3, #1
 800a5ec:	5563      	strb	r3, [r4, r5]
 800a5ee:	9801      	ldr	r0, [sp, #4]
	list->invalidate();
 800a5f0:	f00e f86c 	bl	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>
	if(units_fil){
 800a5f4:	f504 3080 	add.w	r0, r4, #65536	; 0x10000
 800a5f8:	f504 34cd 	add.w	r4, r4, #104960	; 0x19a00
 800a5fc:	f500 70a2 	add.w	r0, r0, #324	; 0x144
 800a600:	f894 31a6 	ldrb.w	r3, [r4, #422]	; 0x1a6
 800a604:	b173      	cbz	r3, 800a624 <_ZN11Screen1View18functionFilterUnitEv+0x84>
		Unicode::snprintf(flexButtonFilterUnitBuffer2, FLEXBUTTONFILTERUNITBUFFER2_SIZE, "+");
 800a606:	4a08      	ldr	r2, [pc, #32]	; (800a628 <_ZN11Screen1View18functionFilterUnitEv+0x88>)
		Unicode::snprintf(flexButtonFilterUnitBuffer2, FLEXBUTTONFILTERUNITBUFFER2_SIZE, " ");
 800a608:	210a      	movs	r1, #10
}
 800a60a:	b003      	add	sp, #12
 800a60c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		Unicode::snprintf(flexButtonFilterUnitBuffer2, FLEXBUTTONFILTERUNITBUFFER2_SIZE, " ");
 800a610:	f010 bd5c 	b.w	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		list->moveTo(800, 0);
 800a614:	2200      	movs	r2, #0
 800a616:	f44f 7148 	mov.w	r1, #800	; 0x320
 800a61a:	9001      	str	r0, [sp, #4]
 800a61c:	f7f7 fd15 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
 800a620:	2300      	movs	r3, #0
 800a622:	e7e3      	b.n	800a5ec <_ZN11Screen1View18functionFilterUnitEv+0x4c>
		Unicode::snprintf(flexButtonFilterUnitBuffer2, FLEXBUTTONFILTERUNITBUFFER2_SIZE, " ");
 800a624:	4a01      	ldr	r2, [pc, #4]	; (800a62c <_ZN11Screen1View18functionFilterUnitEv+0x8c>)
 800a626:	e7ef      	b.n	800a608 <_ZN11Screen1View18functionFilterUnitEv+0x68>
 800a628:	0802ad0e 	.word	0x0802ad0e
 800a62c:	0802dd68 	.word	0x0802dd68

0800a630 <_ZN11Screen1View24functionFilterUnit_Type2Ev>:
{
 800a630:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a632:	4604      	mov	r4, r0
	if(list->isVisible() == false)
 800a634:	f64b 05c5 	movw	r5, #47301	; 0xb8c5
	ConfigListFilterLog *list = &ListFilterLog_Unit;
 800a638:	f500 4038 	add.w	r0, r0, #47104	; 0xb800
	if(list->isVisible() == false)
 800a63c:	5d63      	ldrb	r3, [r4, r5]
	ConfigListFilterLog *list = &ListFilterLog_Unit;
 800a63e:	30a0      	adds	r0, #160	; 0xa0
	if(list->isVisible() == false)
 800a640:	bb73      	cbnz	r3, 800a6a0 <_ZN11Screen1View24functionFilterUnit_Type2Ev+0x70>
		list->moveTo(listButton->getX() + button->getX(), listButton->getY() + listButton->getHeight());
 800a642:	f647 134e 	movw	r3, #31054	; 0x794e
 800a646:	9001      	str	r0, [sp, #4]
 800a648:	5ae2      	ldrh	r2, [r4, r3]
 800a64a:	f647 1352 	movw	r3, #31058	; 0x7952
 800a64e:	5ae3      	ldrh	r3, [r4, r3]
 800a650:	441a      	add	r2, r3
 800a652:	f647 134c 	movw	r3, #31052	; 0x794c
 800a656:	b212      	sxth	r2, r2
 800a658:	5ae1      	ldrh	r1, [r4, r3]
 800a65a:	f647 63d0 	movw	r3, #32464	; 0x7ed0
 800a65e:	5ae3      	ldrh	r3, [r4, r3]
 800a660:	4419      	add	r1, r3
 800a662:	b209      	sxth	r1, r1
 800a664:	f7f7 fcf1 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
		list->resizeXY(button->getWidth(), listTable->getHeight());
 800a668:	f647 63d4 	movw	r3, #32468	; 0x7ed4
 800a66c:	f9b4 20aa 	ldrsh.w	r2, [r4, #170]	; 0xaa
 800a670:	5ee1      	ldrsh	r1, [r4, r3]
 800a672:	9801      	ldr	r0, [sp, #4]
 800a674:	f7fe fc00 	bl	8008e78 <_ZN19ConfigListFilterLog8resizeXYEii>
 800a678:	2301      	movs	r3, #1
 800a67a:	5563      	strb	r3, [r4, r5]
 800a67c:	9801      	ldr	r0, [sp, #4]
	list->invalidate();
 800a67e:	f00e f825 	bl	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>
	if(units_fil){
 800a682:	f504 407f 	add.w	r0, r4, #65280	; 0xff00
 800a686:	f504 34cd 	add.w	r4, r4, #104960	; 0x19a00
 800a68a:	30e6      	adds	r0, #230	; 0xe6
 800a68c:	f894 31a6 	ldrb.w	r3, [r4, #422]	; 0x1a6
 800a690:	b173      	cbz	r3, 800a6b0 <_ZN11Screen1View24functionFilterUnit_Type2Ev+0x80>
		Unicode::snprintf(flexButtonFilterUnit_Type2Buffer2, FLEXBUTTONFILTERUNIT_TYPE2BUFFER2_SIZE, "+");
 800a692:	4a08      	ldr	r2, [pc, #32]	; (800a6b4 <_ZN11Screen1View24functionFilterUnit_Type2Ev+0x84>)
		Unicode::snprintf(flexButtonFilterUnit_Type2Buffer2, FLEXBUTTONFILTERUNIT_TYPE2BUFFER2_SIZE, " ");
 800a694:	210a      	movs	r1, #10
}
 800a696:	b003      	add	sp, #12
 800a698:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		Unicode::snprintf(flexButtonFilterUnit_Type2Buffer2, FLEXBUTTONFILTERUNIT_TYPE2BUFFER2_SIZE, " ");
 800a69c:	f010 bd16 	b.w	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		list->moveTo(800, 0);
 800a6a0:	2200      	movs	r2, #0
 800a6a2:	f44f 7148 	mov.w	r1, #800	; 0x320
 800a6a6:	9001      	str	r0, [sp, #4]
 800a6a8:	f7f7 fccf 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
 800a6ac:	2300      	movs	r3, #0
 800a6ae:	e7e4      	b.n	800a67a <_ZN11Screen1View24functionFilterUnit_Type2Ev+0x4a>
		Unicode::snprintf(flexButtonFilterUnit_Type2Buffer2, FLEXBUTTONFILTERUNIT_TYPE2BUFFER2_SIZE, " ");
 800a6b0:	4a01      	ldr	r2, [pc, #4]	; (800a6b8 <_ZN11Screen1View24functionFilterUnit_Type2Ev+0x88>)
 800a6b2:	e7ef      	b.n	800a694 <_ZN11Screen1View24functionFilterUnit_Type2Ev+0x64>
 800a6b4:	0802ad0e 	.word	0x0802ad0e
 800a6b8:	0802dd68 	.word	0x0802dd68

0800a6bc <_ZN11Screen1View23functionFilterThresholdEv>:
{
 800a6bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a6be:	4604      	mov	r4, r0
	if(list->isVisible() == false)
 800a6c0:	f64a 059d 	movw	r5, #43165	; 0xa89d
	ConfigListFilterLog *list = &ListFilterLog_StCur;
 800a6c4:	f500 4028 	add.w	r0, r0, #43008	; 0xa800
	if(list->isVisible() == false)
 800a6c8:	5d63      	ldrb	r3, [r4, r5]
	ConfigListFilterLog *list = &ListFilterLog_StCur;
 800a6ca:	3078      	adds	r0, #120	; 0x78
	if(list->isVisible() == false)
 800a6cc:	bb83      	cbnz	r3, 800a730 <_ZN11Screen1View23functionFilterThresholdEv+0x74>
		list->moveTo(listButton->getX() + button->getX(), listButton->getY() + listButton->getHeight());
 800a6ce:	f248 131e 	movw	r3, #33054	; 0x811e
 800a6d2:	9001      	str	r0, [sp, #4]
 800a6d4:	5ae2      	ldrh	r2, [r4, r3]
 800a6d6:	f248 1322 	movw	r3, #33058	; 0x8122
 800a6da:	5ae3      	ldrh	r3, [r4, r3]
 800a6dc:	441a      	add	r2, r3
 800a6de:	f248 131c 	movw	r3, #33052	; 0x811c
 800a6e2:	b212      	sxth	r2, r2
 800a6e4:	5ae1      	ldrh	r1, [r4, r3]
 800a6e6:	f248 53dc 	movw	r3, #34268	; 0x85dc
 800a6ea:	5ae3      	ldrh	r3, [r4, r3]
 800a6ec:	4419      	add	r1, r3
 800a6ee:	b209      	sxth	r1, r1
 800a6f0:	f7f7 fcab 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
		list->resizeXY(button->getWidth(), listTable->getHeight());
 800a6f4:	f643 03a2 	movw	r3, #14498	; 0x38a2
 800a6f8:	9801      	ldr	r0, [sp, #4]
 800a6fa:	5ee2      	ldrsh	r2, [r4, r3]
 800a6fc:	f248 53e0 	movw	r3, #34272	; 0x85e0
 800a700:	5ee1      	ldrsh	r1, [r4, r3]
 800a702:	f7fe fbb9 	bl	8008e78 <_ZN19ConfigListFilterLog8resizeXYEii>
 800a706:	2301      	movs	r3, #1
 800a708:	5563      	strb	r3, [r4, r5]
 800a70a:	9801      	ldr	r0, [sp, #4]
	list->invalidate();
 800a70c:	f00d ffde 	bl	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>
	if(thld_state_fil){
 800a710:	f504 3080 	add.w	r0, r4, #65536	; 0x10000
 800a714:	f504 34cd 	add.w	r4, r4, #104960	; 0x19a00
 800a718:	f500 70bb 	add.w	r0, r0, #374	; 0x176
 800a71c:	f894 31a7 	ldrb.w	r3, [r4, #423]	; 0x1a7
 800a720:	b173      	cbz	r3, 800a740 <_ZN11Screen1View23functionFilterThresholdEv+0x84>
		Unicode::snprintf(flexButtonFilterThresholdBuffer2, FLEXBUTTONFILTERTHRESHOLDBUFFER2_SIZE, "+");
 800a722:	4a08      	ldr	r2, [pc, #32]	; (800a744 <_ZN11Screen1View23functionFilterThresholdEv+0x88>)
		Unicode::snprintf(flexButtonFilterThresholdBuffer2, FLEXBUTTONFILTERTHRESHOLDBUFFER2_SIZE, " ");
 800a724:	210a      	movs	r1, #10
}
 800a726:	b003      	add	sp, #12
 800a728:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		Unicode::snprintf(flexButtonFilterThresholdBuffer2, FLEXBUTTONFILTERTHRESHOLDBUFFER2_SIZE, " ");
 800a72c:	f010 bcce 	b.w	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		list->moveTo(800, 0);
 800a730:	2200      	movs	r2, #0
 800a732:	f44f 7148 	mov.w	r1, #800	; 0x320
 800a736:	9001      	str	r0, [sp, #4]
 800a738:	f7f7 fc87 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
 800a73c:	2300      	movs	r3, #0
 800a73e:	e7e3      	b.n	800a708 <_ZN11Screen1View23functionFilterThresholdEv+0x4c>
		Unicode::snprintf(flexButtonFilterThresholdBuffer2, FLEXBUTTONFILTERTHRESHOLDBUFFER2_SIZE, " ");
 800a740:	4a01      	ldr	r2, [pc, #4]	; (800a748 <_ZN11Screen1View23functionFilterThresholdEv+0x8c>)
 800a742:	e7ef      	b.n	800a724 <_ZN11Screen1View23functionFilterThresholdEv+0x68>
 800a744:	0802ad0e 	.word	0x0802ad0e
 800a748:	0802dd68 	.word	0x0802dd68

0800a74c <_ZN11Screen1View17functionFilterErrEv>:
{
 800a74c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a74e:	4604      	mov	r4, r0
	if(list->isVisible() == false)
 800a750:	f649 0575 	movw	r5, #39029	; 0x9875
	ConfigListFilterLog *list = &ListFilterLog_Err;
 800a754:	f500 4018 	add.w	r0, r0, #38912	; 0x9800
	if(list->isVisible() == false)
 800a758:	5d63      	ldrb	r3, [r4, r5]
	ConfigListFilterLog *list = &ListFilterLog_Err;
 800a75a:	3050      	adds	r0, #80	; 0x50
	if(list->isVisible() == false)
 800a75c:	bb83      	cbnz	r3, 800a7c0 <_ZN11Screen1View17functionFilterErrEv+0x74>
		list->moveTo(listButton->getX() + button->getX(), listButton->getY() + listButton->getHeight());
 800a75e:	f248 131e 	movw	r3, #33054	; 0x811e
 800a762:	9001      	str	r0, [sp, #4]
 800a764:	5ae2      	ldrh	r2, [r4, r3]
 800a766:	f248 1322 	movw	r3, #33058	; 0x8122
 800a76a:	5ae3      	ldrh	r3, [r4, r3]
 800a76c:	441a      	add	r2, r3
 800a76e:	f248 131c 	movw	r3, #33052	; 0x811c
 800a772:	b212      	sxth	r2, r2
 800a774:	5ae1      	ldrh	r1, [r4, r3]
 800a776:	f248 63a0 	movw	r3, #34464	; 0x86a0
 800a77a:	5ae3      	ldrh	r3, [r4, r3]
 800a77c:	4419      	add	r1, r3
 800a77e:	b209      	sxth	r1, r1
 800a780:	f7f7 fc63 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
		list->resizeXY(button->getWidth(), listTable->getHeight());
 800a784:	f643 03a2 	movw	r3, #14498	; 0x38a2
 800a788:	9801      	ldr	r0, [sp, #4]
 800a78a:	5ee2      	ldrsh	r2, [r4, r3]
 800a78c:	f248 63a4 	movw	r3, #34468	; 0x86a4
 800a790:	5ee1      	ldrsh	r1, [r4, r3]
 800a792:	f7fe fb71 	bl	8008e78 <_ZN19ConfigListFilterLog8resizeXYEii>
 800a796:	2301      	movs	r3, #1
 800a798:	5563      	strb	r3, [r4, r5]
 800a79a:	9801      	ldr	r0, [sp, #4]
	list->invalidate();
 800a79c:	f00d ff96 	bl	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>
	if(err_state_fil){
 800a7a0:	f504 3080 	add.w	r0, r4, #65536	; 0x10000
 800a7a4:	f504 34cd 	add.w	r4, r4, #104960	; 0x19a00
 800a7a8:	f500 70d4 	add.w	r0, r0, #424	; 0x1a8
 800a7ac:	f8b4 31a8 	ldrh.w	r3, [r4, #424]	; 0x1a8
 800a7b0:	b173      	cbz	r3, 800a7d0 <_ZN11Screen1View17functionFilterErrEv+0x84>
		Unicode::snprintf(flexButtonFilterErrBuffer2, FLEXBUTTONFILTERERRBUFFER2_SIZE, "+");
 800a7b2:	4a08      	ldr	r2, [pc, #32]	; (800a7d4 <_ZN11Screen1View17functionFilterErrEv+0x88>)
		Unicode::snprintf(flexButtonFilterErrBuffer2, FLEXBUTTONFILTERERRBUFFER2_SIZE, " ");
 800a7b4:	210a      	movs	r1, #10
}
 800a7b6:	b003      	add	sp, #12
 800a7b8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		Unicode::snprintf(flexButtonFilterErrBuffer2, FLEXBUTTONFILTERERRBUFFER2_SIZE, " ");
 800a7bc:	f010 bc86 	b.w	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		list->moveTo(800, 0);
 800a7c0:	2200      	movs	r2, #0
 800a7c2:	f44f 7148 	mov.w	r1, #800	; 0x320
 800a7c6:	9001      	str	r0, [sp, #4]
 800a7c8:	f7f7 fc3f 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
 800a7cc:	2300      	movs	r3, #0
 800a7ce:	e7e3      	b.n	800a798 <_ZN11Screen1View17functionFilterErrEv+0x4c>
		Unicode::snprintf(flexButtonFilterErrBuffer2, FLEXBUTTONFILTERERRBUFFER2_SIZE, " ");
 800a7d0:	4a01      	ldr	r2, [pc, #4]	; (800a7d8 <_ZN11Screen1View17functionFilterErrEv+0x8c>)
 800a7d2:	e7ef      	b.n	800a7b4 <_ZN11Screen1View17functionFilterErrEv+0x68>
 800a7d4:	0802ad0e 	.word	0x0802ad0e
 800a7d8:	0802dd68 	.word	0x0802dd68

0800a7dc <_ZN11Screen1View17functionFilterGasEv>:
{
 800a7dc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a7de:	4604      	mov	r4, r0
	if(list->isVisible() == false)
 800a7e0:	f648 054d 	movw	r5, #34893	; 0x884d
	ConfigListFilterLog *list = &ListFilterLog_Gas;
 800a7e4:	f500 4008 	add.w	r0, r0, #34816	; 0x8800
	if(list->isVisible() == false)
 800a7e8:	5d63      	ldrb	r3, [r4, r5]
	ConfigListFilterLog *list = &ListFilterLog_Gas;
 800a7ea:	3028      	adds	r0, #40	; 0x28
	if(list->isVisible() == false)
 800a7ec:	bb83      	cbnz	r3, 800a850 <_ZN11Screen1View17functionFilterGasEv+0x74>
		list->moveTo(listButton->getX() + button->getX(), listButton->getY() + listButton->getHeight());
 800a7ee:	f248 131e 	movw	r3, #33054	; 0x811e
 800a7f2:	9001      	str	r0, [sp, #4]
 800a7f4:	5ae2      	ldrh	r2, [r4, r3]
 800a7f6:	f248 1322 	movw	r3, #33058	; 0x8122
 800a7fa:	5ae3      	ldrh	r3, [r4, r3]
 800a7fc:	441a      	add	r2, r3
 800a7fe:	f248 131c 	movw	r3, #33052	; 0x811c
 800a802:	b212      	sxth	r2, r2
 800a804:	5ae1      	ldrh	r1, [r4, r3]
 800a806:	f248 7364 	movw	r3, #34660	; 0x8764
 800a80a:	5ae3      	ldrh	r3, [r4, r3]
 800a80c:	4419      	add	r1, r3
 800a80e:	b209      	sxth	r1, r1
 800a810:	f7f7 fc1b 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
		list->resizeXY(button->getWidth(), listTable->getHeight());
 800a814:	f643 03a2 	movw	r3, #14498	; 0x38a2
 800a818:	9801      	ldr	r0, [sp, #4]
 800a81a:	5ee2      	ldrsh	r2, [r4, r3]
 800a81c:	f248 7368 	movw	r3, #34664	; 0x8768
 800a820:	5ee1      	ldrsh	r1, [r4, r3]
 800a822:	f7fe fb29 	bl	8008e78 <_ZN19ConfigListFilterLog8resizeXYEii>
 800a826:	2301      	movs	r3, #1
 800a828:	5563      	strb	r3, [r4, r5]
 800a82a:	9801      	ldr	r0, [sp, #4]
	list->invalidate();
 800a82c:	f00d ff4e 	bl	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>
	if(formula_fil){
 800a830:	f504 3080 	add.w	r0, r4, #65536	; 0x10000
 800a834:	f504 34cd 	add.w	r4, r4, #104960	; 0x19a00
 800a838:	f500 70ed 	add.w	r0, r0, #474	; 0x1da
 800a83c:	f894 31aa 	ldrb.w	r3, [r4, #426]	; 0x1aa
 800a840:	b173      	cbz	r3, 800a860 <_ZN11Screen1View17functionFilterGasEv+0x84>
		Unicode::snprintf(flexButtonFilterGasBuffer2, FLEXBUTTONFILTERGASBUFFER2_SIZE, "+");
 800a842:	4a08      	ldr	r2, [pc, #32]	; (800a864 <_ZN11Screen1View17functionFilterGasEv+0x88>)
		Unicode::snprintf(flexButtonFilterGasBuffer2, FLEXBUTTONFILTERGASBUFFER2_SIZE, " ");
 800a844:	210a      	movs	r1, #10
}
 800a846:	b003      	add	sp, #12
 800a848:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		Unicode::snprintf(flexButtonFilterGasBuffer2, FLEXBUTTONFILTERGASBUFFER2_SIZE, " ");
 800a84c:	f010 bc3e 	b.w	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		list->moveTo(800, 0);
 800a850:	2200      	movs	r2, #0
 800a852:	f44f 7148 	mov.w	r1, #800	; 0x320
 800a856:	9001      	str	r0, [sp, #4]
 800a858:	f7f7 fbf7 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
 800a85c:	2300      	movs	r3, #0
 800a85e:	e7e3      	b.n	800a828 <_ZN11Screen1View17functionFilterGasEv+0x4c>
		Unicode::snprintf(flexButtonFilterGasBuffer2, FLEXBUTTONFILTERGASBUFFER2_SIZE, " ");
 800a860:	4a01      	ldr	r2, [pc, #4]	; (800a868 <_ZN11Screen1View17functionFilterGasEv+0x8c>)
 800a862:	e7ef      	b.n	800a844 <_ZN11Screen1View17functionFilterGasEv+0x68>
 800a864:	0802ad0e 	.word	0x0802ad0e
 800a868:	0802dd68 	.word	0x0802dd68

0800a86c <_ZN11Screen1View23functionFilterGas_Type2Ev>:
{
 800a86c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a86e:	4604      	mov	r4, r0
	if(list->isVisible() == false)
 800a870:	f648 054d 	movw	r5, #34893	; 0x884d
	ConfigListFilterLog *list = &ListFilterLog_Gas;
 800a874:	f500 4008 	add.w	r0, r0, #34816	; 0x8800
	if(list->isVisible() == false)
 800a878:	5d63      	ldrb	r3, [r4, r5]
	ConfigListFilterLog *list = &ListFilterLog_Gas;
 800a87a:	3028      	adds	r0, #40	; 0x28
	if(list->isVisible() == false)
 800a87c:	bb73      	cbnz	r3, 800a8dc <_ZN11Screen1View23functionFilterGas_Type2Ev+0x70>
		list->moveTo(listButton->getX() + button->getX(), listButton->getY() + listButton->getHeight());
 800a87e:	f647 134e 	movw	r3, #31054	; 0x794e
 800a882:	9001      	str	r0, [sp, #4]
 800a884:	5ae2      	ldrh	r2, [r4, r3]
 800a886:	f647 1352 	movw	r3, #31058	; 0x7952
 800a88a:	5ae3      	ldrh	r3, [r4, r3]
 800a88c:	441a      	add	r2, r3
 800a88e:	f647 134c 	movw	r3, #31052	; 0x794c
 800a892:	b212      	sxth	r2, r2
 800a894:	5ae1      	ldrh	r1, [r4, r3]
 800a896:	f647 7394 	movw	r3, #32660	; 0x7f94
 800a89a:	5ae3      	ldrh	r3, [r4, r3]
 800a89c:	4419      	add	r1, r3
 800a89e:	b209      	sxth	r1, r1
 800a8a0:	f7f7 fbd3 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
		list->resizeXY(button->getWidth(), listTable->getHeight());
 800a8a4:	f647 7398 	movw	r3, #32664	; 0x7f98
 800a8a8:	f9b4 20aa 	ldrsh.w	r2, [r4, #170]	; 0xaa
 800a8ac:	5ee1      	ldrsh	r1, [r4, r3]
 800a8ae:	9801      	ldr	r0, [sp, #4]
 800a8b0:	f7fe fae2 	bl	8008e78 <_ZN19ConfigListFilterLog8resizeXYEii>
 800a8b4:	2301      	movs	r3, #1
 800a8b6:	5563      	strb	r3, [r4, r5]
 800a8b8:	9801      	ldr	r0, [sp, #4]
	list->invalidate();
 800a8ba:	f00d ff07 	bl	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>
	if(formula_fil){
 800a8be:	f504 3080 	add.w	r0, r4, #65536	; 0x10000
 800a8c2:	f504 34cd 	add.w	r4, r4, #104960	; 0x19a00
 800a8c6:	3018      	adds	r0, #24
 800a8c8:	f894 31aa 	ldrb.w	r3, [r4, #426]	; 0x1aa
 800a8cc:	b173      	cbz	r3, 800a8ec <_ZN11Screen1View23functionFilterGas_Type2Ev+0x80>
		Unicode::snprintf(flexButtonFilterGas_Type2Buffer2, FLEXBUTTONFILTERGAS_TYPE2BUFFER2_SIZE, "+");
 800a8ce:	4a08      	ldr	r2, [pc, #32]	; (800a8f0 <_ZN11Screen1View23functionFilterGas_Type2Ev+0x84>)
		Unicode::snprintf(flexButtonFilterGas_Type2Buffer2, FLEXBUTTONFILTERGAS_TYPE2BUFFER2_SIZE, " ");
 800a8d0:	210a      	movs	r1, #10
}
 800a8d2:	b003      	add	sp, #12
 800a8d4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		Unicode::snprintf(flexButtonFilterGas_Type2Buffer2, FLEXBUTTONFILTERGAS_TYPE2BUFFER2_SIZE, " ");
 800a8d8:	f010 bbf8 	b.w	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		list->moveTo(800, 0);
 800a8dc:	2200      	movs	r2, #0
 800a8de:	f44f 7148 	mov.w	r1, #800	; 0x320
 800a8e2:	9001      	str	r0, [sp, #4]
 800a8e4:	f7f7 fbb1 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
 800a8e8:	2300      	movs	r3, #0
 800a8ea:	e7e4      	b.n	800a8b6 <_ZN11Screen1View23functionFilterGas_Type2Ev+0x4a>
		Unicode::snprintf(flexButtonFilterGas_Type2Buffer2, FLEXBUTTONFILTERGAS_TYPE2BUFFER2_SIZE, " ");
 800a8ec:	4a01      	ldr	r2, [pc, #4]	; (800a8f4 <_ZN11Screen1View23functionFilterGas_Type2Ev+0x88>)
 800a8ee:	e7ef      	b.n	800a8d0 <_ZN11Screen1View23functionFilterGas_Type2Ev+0x64>
 800a8f0:	0802ad0e 	.word	0x0802ad0e
 800a8f4:	0802dd68 	.word	0x0802dd68

0800a8f8 <_ZN11Screen1View16functionTurnLog1Ev>:
{
 800a8f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	type_log_fil = TYPE_LOG_READINGS;
 800a8fa:	f500 36cd 	add.w	r6, r0, #104960	; 0x19a00
 800a8fe:	f64f 438d 	movw	r3, #64653	; 0xfc8d
 800a902:	2500      	movs	r5, #0
 800a904:	f886 518c 	strb.w	r5, [r6, #396]	; 0x18c
 800a908:	54c5      	strb	r5, [r0, r3]
 800a90a:	f64f 5349 	movw	r3, #64841	; 0xfd49
 800a90e:	2701      	movs	r7, #1
{
 800a910:	4604      	mov	r4, r0
 800a912:	54c7      	strb	r7, [r0, r3]
	listLayoutButtonFilter		.moveTo(32, 141);
 800a914:	f500 4001 	add.w	r0, r0, #33024	; 0x8100
 800a918:	228d      	movs	r2, #141	; 0x8d
 800a91a:	2120      	movs	r1, #32
 800a91c:	3018      	adds	r0, #24
 800a91e:	f7f7 fb94 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
	listLayoutLogTable			.moveTo(32, 200);
 800a922:	f504 5062 	add.w	r0, r4, #14464	; 0x3880
 800a926:	22c8      	movs	r2, #200	; 0xc8
 800a928:	2120      	movs	r1, #32
 800a92a:	3018      	adds	r0, #24
 800a92c:	f7f7 fb8d 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
 800a930:	f248 133d 	movw	r3, #33085	; 0x813d
	listLayoutButtonFilter_Type2.moveTo(32, 480);
 800a934:	f504 40f2 	add.w	r0, r4, #30976	; 0x7900
 800a938:	54e7      	strb	r7, [r4, r3]
 800a93a:	f643 03bd 	movw	r3, #14525	; 0x38bd
 800a93e:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 800a942:	54e7      	strb	r7, [r4, r3]
 800a944:	2120      	movs	r1, #32
 800a946:	3048      	adds	r0, #72	; 0x48
 800a948:	f7f7 fb7f 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
	listLayoutLogTable_Type2	.moveTo(32, 540);
 800a94c:	f44f 7207 	mov.w	r2, #540	; 0x21c
 800a950:	2120      	movs	r1, #32
 800a952:	f104 00a0 	add.w	r0, r4, #160	; 0xa0
 800a956:	f7f7 fb78 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
 800a95a:	f647 136d 	movw	r3, #31085	; 0x796d
	ListFilterLog_Num			.moveTo(800, 0);
 800a95e:	f504 4069 	add.w	r0, r4, #59648	; 0xe900
 800a962:	54e5      	strb	r5, [r4, r3]
 800a964:	462a      	mov	r2, r5
 800a966:	f44f 7148 	mov.w	r1, #800	; 0x320
 800a96a:	3018      	adds	r0, #24
 800a96c:	f884 50c5 	strb.w	r5, [r4, #197]	; 0xc5
 800a970:	f7f7 fb6b 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
	ListFilterLog_TypeChan		.moveTo(800, 0);
 800a974:	f504 4058 	add.w	r0, r4, #55296	; 0xd800
 800a978:	462a      	mov	r2, r5
 800a97a:	f44f 7148 	mov.w	r1, #800	; 0x320
 800a97e:	30f0      	adds	r0, #240	; 0xf0
 800a980:	f7f7 fb63 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
	ListFilterLog_StLoop		.moveTo(800, 0);
 800a984:	f504 4048 	add.w	r0, r4, #51200	; 0xc800
 800a988:	462a      	mov	r2, r5
 800a98a:	f44f 7148 	mov.w	r1, #800	; 0x320
 800a98e:	30c8      	adds	r0, #200	; 0xc8
 800a990:	f7f7 fb5b 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
	ListFilterLog_Unit			.moveTo(800, 0);
 800a994:	f504 4038 	add.w	r0, r4, #47104	; 0xb800
 800a998:	462a      	mov	r2, r5
 800a99a:	f44f 7148 	mov.w	r1, #800	; 0x320
 800a99e:	30a0      	adds	r0, #160	; 0xa0
 800a9a0:	f7f7 fb53 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
	ListFilterLog_StCur			.moveTo(800, 0);
 800a9a4:	f504 4028 	add.w	r0, r4, #43008	; 0xa800
 800a9a8:	462a      	mov	r2, r5
 800a9aa:	f44f 7148 	mov.w	r1, #800	; 0x320
 800a9ae:	3078      	adds	r0, #120	; 0x78
 800a9b0:	f7f7 fb4b 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
	ListFilterLog_Err			.moveTo(800, 0);
 800a9b4:	f504 4018 	add.w	r0, r4, #38912	; 0x9800
 800a9b8:	462a      	mov	r2, r5
 800a9ba:	f44f 7148 	mov.w	r1, #800	; 0x320
 800a9be:	3050      	adds	r0, #80	; 0x50
 800a9c0:	f7f7 fb43 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
	ListFilterLog_Gas			.moveTo(800, 0);
 800a9c4:	f504 4008 	add.w	r0, r4, #34816	; 0x8800
 800a9c8:	462a      	mov	r2, r5
 800a9ca:	f44f 7148 	mov.w	r1, #800	; 0x320
 800a9ce:	3028      	adds	r0, #40	; 0x28
 800a9d0:	f7f7 fb3b 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
 800a9d4:	f64e 133d 	movw	r3, #59709	; 0xe93d
 800a9d8:	54e5      	strb	r5, [r4, r3]
 800a9da:	f64d 1315 	movw	r3, #55573	; 0xd915
 800a9de:	54e5      	strb	r5, [r4, r3]
 800a9e0:	f64c 03ed 	movw	r3, #51437	; 0xc8ed
 800a9e4:	54e5      	strb	r5, [r4, r3]
 800a9e6:	f64b 03c5 	movw	r3, #47301	; 0xb8c5
 800a9ea:	54e5      	strb	r5, [r4, r3]
 800a9ec:	f64a 039d 	movw	r3, #43165	; 0xa89d
 800a9f0:	54e5      	strb	r5, [r4, r3]
 800a9f2:	f649 0375 	movw	r3, #39029	; 0x9875
 800a9f6:	54e5      	strb	r5, [r4, r3]
 800a9f8:	f648 034d 	movw	r3, #34893	; 0x884d
 800a9fc:	54e5      	strb	r5, [r4, r3]
	for(uint8_t i = 0; i < 10; i++){
 800a9fe:	f506 73da 	add.w	r3, r6, #436	; 0x1b4
 800aa02:	f506 76ee 	add.w	r6, r6, #476	; 0x1dc
		mas_ContainerTableLog[i]->setVisible(false);
 800aa06:	f853 2b04 	ldr.w	r2, [r3], #4
	for(uint8_t i = 0; i < 10; i++){
 800aa0a:	42b3      	cmp	r3, r6
 800aa0c:	f882 5025 	strb.w	r5, [r2, #37]	; 0x25
 800aa10:	d1f9      	bne.n	800aa06 <_ZN11Screen1View16functionTurnLog1Ev+0x10e>
 800aa12:	1d20      	adds	r0, r4, #4
}
 800aa14:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800aa18:	f00d be58 	b.w	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>

0800aa1c <_ZN11Screen1View16functionTurnLog2Ev>:
{
 800aa1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	type_log_fil = TYPE_LOG_PARAM_UPDATE;
 800aa1e:	f500 36cd 	add.w	r6, r0, #104960	; 0x19a00
 800aa22:	f64f 438d 	movw	r3, #64653	; 0xfc8d
 800aa26:	2701      	movs	r7, #1
 800aa28:	f886 718c 	strb.w	r7, [r6, #396]	; 0x18c
 800aa2c:	54c7      	strb	r7, [r0, r3]
 800aa2e:	f64f 5349 	movw	r3, #64841	; 0xfd49
 800aa32:	2500      	movs	r5, #0
{
 800aa34:	4604      	mov	r4, r0
 800aa36:	54c5      	strb	r5, [r0, r3]
	listLayoutButtonFilter_Type2.moveTo(32, 141);
 800aa38:	f500 40f2 	add.w	r0, r0, #30976	; 0x7900
 800aa3c:	228d      	movs	r2, #141	; 0x8d
 800aa3e:	2120      	movs	r1, #32
 800aa40:	3048      	adds	r0, #72	; 0x48
 800aa42:	f7f7 fb02 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
	listLayoutLogTable_Type2	.moveTo(32, 200);
 800aa46:	22c8      	movs	r2, #200	; 0xc8
 800aa48:	2120      	movs	r1, #32
 800aa4a:	f104 00a0 	add.w	r0, r4, #160	; 0xa0
 800aa4e:	f7f7 fafc 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
 800aa52:	f647 136d 	movw	r3, #31085	; 0x796d
	listLayoutButtonFilter		.moveTo(32, 480);
 800aa56:	f504 4001 	add.w	r0, r4, #33024	; 0x8100
 800aa5a:	54e7      	strb	r7, [r4, r3]
 800aa5c:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 800aa60:	2120      	movs	r1, #32
 800aa62:	3018      	adds	r0, #24
 800aa64:	f884 70c5 	strb.w	r7, [r4, #197]	; 0xc5
 800aa68:	f7f7 faef 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
	listLayoutLogTable			.moveTo(32, 540);
 800aa6c:	f504 5062 	add.w	r0, r4, #14464	; 0x3880
 800aa70:	f44f 7207 	mov.w	r2, #540	; 0x21c
 800aa74:	2120      	movs	r1, #32
 800aa76:	3018      	adds	r0, #24
 800aa78:	f7f7 fae7 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
 800aa7c:	f248 133d 	movw	r3, #33085	; 0x813d
	ListFilterLog_Num			.moveTo(800, 0);
 800aa80:	f504 4069 	add.w	r0, r4, #59648	; 0xe900
 800aa84:	54e5      	strb	r5, [r4, r3]
 800aa86:	f643 03bd 	movw	r3, #14525	; 0x38bd
 800aa8a:	462a      	mov	r2, r5
 800aa8c:	54e5      	strb	r5, [r4, r3]
 800aa8e:	f44f 7148 	mov.w	r1, #800	; 0x320
 800aa92:	3018      	adds	r0, #24
 800aa94:	f7f7 fad9 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
	ListFilterLog_TypeChan		.moveTo(800, 0);
 800aa98:	f504 4058 	add.w	r0, r4, #55296	; 0xd800
 800aa9c:	462a      	mov	r2, r5
 800aa9e:	f44f 7148 	mov.w	r1, #800	; 0x320
 800aaa2:	30f0      	adds	r0, #240	; 0xf0
 800aaa4:	f7f7 fad1 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
	ListFilterLog_StLoop		.moveTo(800, 0);
 800aaa8:	f504 4048 	add.w	r0, r4, #51200	; 0xc800
 800aaac:	462a      	mov	r2, r5
 800aaae:	f44f 7148 	mov.w	r1, #800	; 0x320
 800aab2:	30c8      	adds	r0, #200	; 0xc8
 800aab4:	f7f7 fac9 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
	ListFilterLog_Unit			.moveTo(800, 0);
 800aab8:	f504 4038 	add.w	r0, r4, #47104	; 0xb800
 800aabc:	462a      	mov	r2, r5
 800aabe:	f44f 7148 	mov.w	r1, #800	; 0x320
 800aac2:	30a0      	adds	r0, #160	; 0xa0
 800aac4:	f7f7 fac1 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
	ListFilterLog_StCur			.moveTo(800, 0);
 800aac8:	f504 4028 	add.w	r0, r4, #43008	; 0xa800
 800aacc:	462a      	mov	r2, r5
 800aace:	f44f 7148 	mov.w	r1, #800	; 0x320
 800aad2:	3078      	adds	r0, #120	; 0x78
 800aad4:	f7f7 fab9 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
	ListFilterLog_Err			.moveTo(800, 0);
 800aad8:	f504 4018 	add.w	r0, r4, #38912	; 0x9800
 800aadc:	462a      	mov	r2, r5
 800aade:	f44f 7148 	mov.w	r1, #800	; 0x320
 800aae2:	3050      	adds	r0, #80	; 0x50
 800aae4:	f7f7 fab1 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
	ListFilterLog_Gas			.moveTo(800, 0);
 800aae8:	f504 4008 	add.w	r0, r4, #34816	; 0x8800
 800aaec:	462a      	mov	r2, r5
 800aaee:	f44f 7148 	mov.w	r1, #800	; 0x320
 800aaf2:	3028      	adds	r0, #40	; 0x28
 800aaf4:	f7f7 faa9 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
 800aaf8:	f64e 133d 	movw	r3, #59709	; 0xe93d
 800aafc:	f504 32ce 	add.w	r2, r4, #105472	; 0x19c00
 800ab00:	54e5      	strb	r5, [r4, r3]
 800ab02:	f64d 1315 	movw	r3, #55573	; 0xd915
 800ab06:	3204      	adds	r2, #4
 800ab08:	54e5      	strb	r5, [r4, r3]
 800ab0a:	f64c 03ed 	movw	r3, #51437	; 0xc8ed
 800ab0e:	54e5      	strb	r5, [r4, r3]
 800ab10:	f64b 03c5 	movw	r3, #47301	; 0xb8c5
 800ab14:	54e5      	strb	r5, [r4, r3]
 800ab16:	f64a 039d 	movw	r3, #43165	; 0xa89d
 800ab1a:	54e5      	strb	r5, [r4, r3]
 800ab1c:	f649 0375 	movw	r3, #39029	; 0x9875
 800ab20:	54e5      	strb	r5, [r4, r3]
 800ab22:	f648 034d 	movw	r3, #34893	; 0x884d
 800ab26:	54e5      	strb	r5, [r4, r3]
	for(uint8_t i = 0; i < 10; i++){
 800ab28:	f506 73ee 	add.w	r3, r6, #476	; 0x1dc
		mas_ContainerTableLog_Type2[i]->setVisible(false);
 800ab2c:	f853 1b04 	ldr.w	r1, [r3], #4
	for(uint8_t i = 0; i < 10; i++){
 800ab30:	4293      	cmp	r3, r2
 800ab32:	f881 5025 	strb.w	r5, [r1, #37]	; 0x25
 800ab36:	d1f9      	bne.n	800ab2c <_ZN11Screen1View16functionTurnLog2Ev+0x110>
 800ab38:	1d20      	adds	r0, r4, #4
}
 800ab3a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800ab3e:	f00d bdc5 	b.w	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>
	...

0800ab44 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View():
 800ab44:	b510      	push	{r4, lr}
 800ab46:	4604      	mov	r4, r0
CallbackListItemSelected(this, &Screen1View::handleListItemSelected)
 800ab48:	f7fb f9be 	bl	8005ec8 <_ZN15Screen1ViewBaseC1Ev>
 800ab4c:	4b41      	ldr	r3, [pc, #260]	; (800ac54 <_ZN11Screen1ViewC1Ev+0x110>)
 800ab4e:	6023      	str	r3, [r4, #0]
        : pobject(pobject), pmemfun_2(pmemfun_2)
 800ab50:	4b41      	ldr	r3, [pc, #260]	; (800ac58 <_ZN11Screen1ViewC1Ev+0x114>)
 800ab52:	f504 3081 	add.w	r0, r4, #66048	; 0x10200
 800ab56:	e9c0 3404 	strd	r3, r4, [r0, #16]
 800ab5a:	4b40      	ldr	r3, [pc, #256]	; (800ac5c <_ZN11Screen1ViewC1Ev+0x118>)
 800ab5c:	6183      	str	r3, [r0, #24]
 800ab5e:	2300      	movs	r3, #0
 800ab60:	61c3      	str	r3, [r0, #28]
 800ab62:	3020      	adds	r0, #32
 800ab64:	f7ff f89a 	bl	8009c9c <_ZN21DateSelectorContainerC1Ev>
 800ab68:	f504 30a7 	add.w	r0, r4, #85504	; 0x14e00
 800ab6c:	30a0      	adds	r0, #160	; 0xa0
 800ab6e:	f7ff f895 	bl	8009c9c <_ZN21DateSelectorContainerC1Ev>
 800ab72:	f504 33cd 	add.w	r3, r4, #104960	; 0x19a00
 800ab76:	f04f 1201 	mov.w	r2, #65537	; 0x10001
 800ab7a:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184
 800ab7e:	2201      	movs	r2, #1
 800ab80:	f8a3 2188 	strh.w	r2, [r3, #392]	; 0x188
 800ab84:	f503 7290 	add.w	r2, r3, #288	; 0x120
 800ab88:	e9c3 226b 	strd	r2, r2, [r3, #428]	; 0x1ac
 800ab8c:	f504 5263 	add.w	r2, r4, #14528	; 0x38c0
 800ab90:	3208      	adds	r2, #8
 800ab92:	f8c3 21b4 	str.w	r2, [r3, #436]	; 0x1b4
 800ab96:	f504 527a 	add.w	r2, r4, #16000	; 0x3e80
 800ab9a:	3218      	adds	r2, #24
 800ab9c:	f8c3 21b8 	str.w	r2, [r3, #440]	; 0x1b8
 800aba0:	f504 4288 	add.w	r2, r4, #17408	; 0x4400
 800aba4:	3268      	adds	r2, #104	; 0x68
 800aba6:	f8c3 21bc 	str.w	r2, [r3, #444]	; 0x1bc
 800abaa:	f504 4294 	add.w	r2, r4, #18944	; 0x4a00
 800abae:	3238      	adds	r2, #56	; 0x38
 800abb0:	f8c3 21c0 	str.w	r2, [r3, #448]	; 0x1c0
 800abb4:	f504 42a0 	add.w	r2, r4, #20480	; 0x5000
 800abb8:	3208      	adds	r2, #8
 800abba:	f8c3 21c4 	str.w	r2, [r3, #452]	; 0x1c4
 800abbe:	f504 42ab 	add.w	r2, r4, #21888	; 0x5580
 800abc2:	3258      	adds	r2, #88	; 0x58
 800abc4:	f8c3 21c8 	str.w	r2, [r3, #456]	; 0x1c8
 800abc8:	f504 42b7 	add.w	r2, r4, #23424	; 0x5b80
 800abcc:	3228      	adds	r2, #40	; 0x28
 800abce:	f8c3 21cc 	str.w	r2, [r3, #460]	; 0x1cc
 800abd2:	f504 42c2 	add.w	r2, r4, #24832	; 0x6100
 800abd6:	3278      	adds	r2, #120	; 0x78
 800abd8:	f8c3 21d0 	str.w	r2, [r3, #464]	; 0x1d0
 800abdc:	f504 42ce 	add.w	r2, r4, #26368	; 0x6700
 800abe0:	3248      	adds	r2, #72	; 0x48
 800abe2:	f8c3 21d4 	str.w	r2, [r3, #468]	; 0x1d4
 800abe6:	f504 42da 	add.w	r2, r4, #27904	; 0x6d00
 800abea:	3218      	adds	r2, #24
 800abec:	f8c3 21d8 	str.w	r2, [r3, #472]	; 0x1d8
 800abf0:	f104 02d0 	add.w	r2, r4, #208	; 0xd0
 800abf4:	f8c3 21dc 	str.w	r2, [r3, #476]	; 0x1dc
 800abf8:	f204 6264 	addw	r2, r4, #1636	; 0x664
 800abfc:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
 800ac00:	f604 32f8 	addw	r2, r4, #3064	; 0xbf8
 800ac04:	f8c3 21e4 	str.w	r2, [r3, #484]	; 0x1e4
 800ac08:	f504 528c 	add.w	r2, r4, #4480	; 0x1180
 800ac0c:	320c      	adds	r2, #12
 800ac0e:	f8c3 21e8 	str.w	r2, [r3, #488]	; 0x1e8
 800ac12:	f504 52b9 	add.w	r2, r4, #5920	; 0x1720
 800ac16:	f8c3 21ec 	str.w	r2, [r3, #492]	; 0x1ec
 800ac1a:	f504 52e5 	add.w	r2, r4, #7328	; 0x1ca0
 800ac1e:	3214      	adds	r2, #20
 800ac20:	f8c3 21f0 	str.w	r2, [r3, #496]	; 0x1f0
 800ac24:	f504 5209 	add.w	r2, r4, #8768	; 0x2240
 800ac28:	3208      	adds	r2, #8
 800ac2a:	f8c3 21f4 	str.w	r2, [r3, #500]	; 0x1f4
 800ac2e:	f504 521f 	add.w	r2, r4, #10176	; 0x27c0
 800ac32:	321c      	adds	r2, #28
 800ac34:	f8c3 21f8 	str.w	r2, [r3, #504]	; 0x1f8
 800ac38:	f504 5235 	add.w	r2, r4, #11584	; 0x2d40
 800ac3c:	3230      	adds	r2, #48	; 0x30
 800ac3e:	f8c3 21fc 	str.w	r2, [r3, #508]	; 0x1fc
 800ac42:	f504 32ce 	add.w	r2, r4, #105472	; 0x19c00
 800ac46:	f504 534c 	add.w	r3, r4, #13056	; 0x3300
 800ac4a:	3304      	adds	r3, #4
 800ac4c:	6013      	str	r3, [r2, #0]
}
 800ac4e:	4620      	mov	r0, r4
 800ac50:	bd10      	pop	{r4, pc}
 800ac52:	bf00      	nop
 800ac54:	0802ad30 	.word	0x0802ad30
 800ac58:	0802ad18 	.word	0x0802ad18
 800ac5c:	0800a00d 	.word	0x0800a00d

0800ac60 <_ZN11Screen1View11PageRefreshEv>:
{
 800ac60:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	touchgfx::Unicode::itoa((first_page_table), 		flexButtonPage_1Buffer, FLEXBUTTONPAGE_1_SIZE, 10);
 800ac64:	f500 35cd 	add.w	r5, r0, #104960	; 0x19a00
 800ac68:	230a      	movs	r3, #10
 800ac6a:	f500 417e 	add.w	r1, r0, #65024	; 0xfe00
{
 800ac6e:	4604      	mov	r4, r0
	touchgfx::Unicode::itoa((first_page_table), 		flexButtonPage_1Buffer, FLEXBUTTONPAGE_1_SIZE, 10);
 800ac70:	461a      	mov	r2, r3
 800ac72:	f8b5 0186 	ldrh.w	r0, [r5, #390]	; 0x186
 800ac76:	314c      	adds	r1, #76	; 0x4c
 800ac78:	f00f fecc 	bl	801aa14 <_ZN8touchgfx7Unicode4itoaElPtti>
	touchgfx::Unicode::itoa((first_page_table + 1), 	flexButtonPage_2Buffer, FLEXBUTTONPAGE_2_SIZE, 10);
 800ac7c:	f8b5 0186 	ldrh.w	r0, [r5, #390]	; 0x186
 800ac80:	230a      	movs	r3, #10
 800ac82:	f504 417e 	add.w	r1, r4, #65024	; 0xfe00
 800ac86:	461a      	mov	r2, r3
 800ac88:	3160      	adds	r1, #96	; 0x60
 800ac8a:	3001      	adds	r0, #1
 800ac8c:	f00f fec2 	bl	801aa14 <_ZN8touchgfx7Unicode4itoaElPtti>
	touchgfx::Unicode::itoa((first_page_table + 2), 	flexButtonPage_3Buffer, FLEXBUTTONPAGE_3_SIZE, 10);
 800ac90:	f8b5 0186 	ldrh.w	r0, [r5, #390]	; 0x186
 800ac94:	230a      	movs	r3, #10
 800ac96:	f504 417e 	add.w	r1, r4, #65024	; 0xfe00
 800ac9a:	461a      	mov	r2, r3
 800ac9c:	3174      	adds	r1, #116	; 0x74
 800ac9e:	3002      	adds	r0, #2
 800aca0:	f00f feb8 	bl	801aa14 <_ZN8touchgfx7Unicode4itoaElPtti>
	touchgfx::Unicode::itoa((first_page_table + 3), 	flexButtonPage_4Buffer, FLEXBUTTONPAGE_4_SIZE, 10);
 800aca4:	f8b5 0186 	ldrh.w	r0, [r5, #390]	; 0x186
 800aca8:	230a      	movs	r3, #10
 800acaa:	f504 417e 	add.w	r1, r4, #65024	; 0xfe00
 800acae:	461a      	mov	r2, r3
 800acb0:	3188      	adds	r1, #136	; 0x88
 800acb2:	3003      	adds	r0, #3
 800acb4:	f00f feae 	bl	801aa14 <_ZN8touchgfx7Unicode4itoaElPtti>
	touchgfx::Unicode::itoa((first_page_table + 4), 	flexButtonPage_5Buffer, FLEXBUTTONPAGE_5_SIZE, 10);
 800acb8:	f8b5 0186 	ldrh.w	r0, [r5, #390]	; 0x186
 800acbc:	230a      	movs	r3, #10
 800acbe:	f504 417e 	add.w	r1, r4, #65024	; 0xfe00
 800acc2:	461a      	mov	r2, r3
 800acc4:	319c      	adds	r1, #156	; 0x9c
 800acc6:	3004      	adds	r0, #4
 800acc8:	f00f fea4 	bl	801aa14 <_ZN8touchgfx7Unicode4itoaElPtti>
	if(current_page_table == 1){
 800accc:	f8b5 3188 	ldrh.w	r3, [r5, #392]	; 0x188
 800acd0:	f247 422d 	movw	r2, #29741	; 0x742d
 800acd4:	1e59      	subs	r1, r3, #1
 800acd6:	bf18      	it	ne
 800acd8:	2101      	movne	r1, #1
 800acda:	54a1      	strb	r1, [r4, r2]
	if((current_page_table*10) > search_count_log){
 800acdc:	220a      	movs	r2, #10
 800acde:	435a      	muls	r2, r3
 800ace0:	f8b5 318a 	ldrh.w	r3, [r5, #394]	; 0x18a
 800ace4:	429a      	cmp	r2, r3
 800ace6:	dd4a      	ble.n	800ad7e <_ZN11Screen1View11PageRefreshEv+0x11e>
		search_count_log += 10;
 800ace8:	330a      	adds	r3, #10
 800acea:	b29b      	uxth	r3, r3
		if((current_page_table*10) != search_count_log){
 800acec:	429a      	cmp	r2, r3
		search_count_log += 10;
 800acee:	f8a5 318a 	strh.w	r3, [r5, #394]	; 0x18a
		if((current_page_table*10) != search_count_log){
 800acf2:	d044      	beq.n	800ad7e <_ZN11Screen1View11PageRefreshEv+0x11e>
 800acf4:	f647 03ad 	movw	r3, #30893	; 0x78ad
 800acf8:	2200      	movs	r2, #0
	flexButtonPage_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 800acfa:	f504 4be9 	add.w	fp, r4, #29824	; 0x7480
 800acfe:	4e54      	ldr	r6, [pc, #336]	; (800ae50 <_ZN11Screen1View11PageRefreshEv+0x1f0>)
 800ad00:	54e2      	strb	r2, [r4, r3]
 800ad02:	f10b 0b48 	add.w	fp, fp, #72	; 0x48
	flexButtonPage_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 800ad06:	f504 4aeb 	add.w	sl, r4, #30080	; 0x7580
	flexButtonPage_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 800ad0a:	4b52      	ldr	r3, [pc, #328]	; (800ae54 <_ZN11Screen1View11PageRefreshEv+0x1f4>)
 800ad0c:	4a52      	ldr	r2, [pc, #328]	; (800ae58 <_ZN11Screen1View11PageRefreshEv+0x1f8>)
 800ad0e:	4953      	ldr	r1, [pc, #332]	; (800ae5c <_ZN11Screen1View11PageRefreshEv+0x1fc>)
 800ad10:	9600      	str	r6, [sp, #0]
 800ad12:	4658      	mov	r0, fp
	flexButtonPage_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 800ad14:	f10a 0a08 	add.w	sl, sl, #8
	flexButtonPage_3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 800ad18:	f504 49ec 	add.w	r9, r4, #30208	; 0x7600
	flexButtonPage_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 800ad1c:	f7f7 ff04 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
	flexButtonPage_3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 800ad20:	f109 0948 	add.w	r9, r9, #72	; 0x48
	flexButtonPage_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 800ad24:	4b4b      	ldr	r3, [pc, #300]	; (800ae54 <_ZN11Screen1View11PageRefreshEv+0x1f4>)
 800ad26:	4a4c      	ldr	r2, [pc, #304]	; (800ae58 <_ZN11Screen1View11PageRefreshEv+0x1f8>)
 800ad28:	494c      	ldr	r1, [pc, #304]	; (800ae5c <_ZN11Screen1View11PageRefreshEv+0x1fc>)
 800ad2a:	9600      	str	r6, [sp, #0]
 800ad2c:	4650      	mov	r0, sl
	flexButtonPage_4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 800ad2e:	f504 48ee 	add.w	r8, r4, #30464	; 0x7700
	flexButtonPage_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 800ad32:	f7f7 fef9 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
	flexButtonPage_4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 800ad36:	f108 0808 	add.w	r8, r8, #8
	flexButtonPage_3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 800ad3a:	4b46      	ldr	r3, [pc, #280]	; (800ae54 <_ZN11Screen1View11PageRefreshEv+0x1f4>)
 800ad3c:	4a46      	ldr	r2, [pc, #280]	; (800ae58 <_ZN11Screen1View11PageRefreshEv+0x1f8>)
 800ad3e:	4947      	ldr	r1, [pc, #284]	; (800ae5c <_ZN11Screen1View11PageRefreshEv+0x1fc>)
 800ad40:	9600      	str	r6, [sp, #0]
 800ad42:	4648      	mov	r0, r9
	flexButtonPage_5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 800ad44:	f504 47ef 	add.w	r7, r4, #30592	; 0x7780
	flexButtonPage_3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 800ad48:	f7f7 feee 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
	flexButtonPage_5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 800ad4c:	3748      	adds	r7, #72	; 0x48
	flexButtonPage_4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 800ad4e:	4b41      	ldr	r3, [pc, #260]	; (800ae54 <_ZN11Screen1View11PageRefreshEv+0x1f4>)
 800ad50:	4a41      	ldr	r2, [pc, #260]	; (800ae58 <_ZN11Screen1View11PageRefreshEv+0x1f8>)
 800ad52:	4942      	ldr	r1, [pc, #264]	; (800ae5c <_ZN11Screen1View11PageRefreshEv+0x1fc>)
 800ad54:	9600      	str	r6, [sp, #0]
 800ad56:	4640      	mov	r0, r8
 800ad58:	f7f7 fee6 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
	flexButtonPage_5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 800ad5c:	4b3d      	ldr	r3, [pc, #244]	; (800ae54 <_ZN11Screen1View11PageRefreshEv+0x1f4>)
 800ad5e:	4a3e      	ldr	r2, [pc, #248]	; (800ae58 <_ZN11Screen1View11PageRefreshEv+0x1f8>)
 800ad60:	493e      	ldr	r1, [pc, #248]	; (800ae5c <_ZN11Screen1View11PageRefreshEv+0x1fc>)
 800ad62:	9600      	str	r6, [sp, #0]
 800ad64:	4638      	mov	r0, r7
 800ad66:	f7f7 fedf 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
	switch(current_button_table){
 800ad6a:	f8b5 3184 	ldrh.w	r3, [r5, #388]	; 0x184
 800ad6e:	3b01      	subs	r3, #1
 800ad70:	2b04      	cmp	r3, #4
 800ad72:	d810      	bhi.n	800ad96 <_ZN11Screen1View11PageRefreshEv+0x136>
 800ad74:	e8df f003 	tbb	[pc, r3]
 800ad78:	47403907 	.word	0x47403907
 800ad7c:	4e          	.byte	0x4e
 800ad7d:	00          	.byte	0x00
 800ad7e:	f647 03ad 	movw	r3, #30893	; 0x78ad
 800ad82:	2201      	movs	r2, #1
 800ad84:	e7b9      	b.n	800acfa <_ZN11Screen1View11PageRefreshEv+0x9a>
    colortype(uint32_t col)
 800ad86:	4b36      	ldr	r3, [pc, #216]	; (800ae60 <_ZN11Screen1View11PageRefreshEv+0x200>)
		flexButtonPage_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(153, 0, 0), touchgfx::Color::getColorFromRGB(204, 0, 0),
 800ad88:	9300      	str	r3, [sp, #0]
 800ad8a:	4a36      	ldr	r2, [pc, #216]	; (800ae64 <_ZN11Screen1View11PageRefreshEv+0x204>)
 800ad8c:	4b36      	ldr	r3, [pc, #216]	; (800ae68 <_ZN11Screen1View11PageRefreshEv+0x208>)
 800ad8e:	4937      	ldr	r1, [pc, #220]	; (800ae6c <_ZN11Screen1View11PageRefreshEv+0x20c>)
 800ad90:	4658      	mov	r0, fp
		flexButtonPage_5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(153, 0, 0), touchgfx::Color::getColorFromRGB(204, 0, 0),
 800ad92:	f7f7 fec9 	bl	8002b28 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
	break;
 800ad96:	f504 37cd 	add.w	r7, r4, #104960	; 0x19a00
 800ad9a:	f505 79da 	add.w	r9, r5, #436	; 0x1b4
{
 800ad9e:	2600      	movs	r6, #0
		if(parce_found_logs(data_log, ((current_page_table - 1)*10) + i)){
 800ada0:	f505 7890 	add.w	r8, r5, #288	; 0x120
 800ada4:	f507 77c6 	add.w	r7, r7, #396	; 0x18c
 800ada8:	f8b5 1188 	ldrh.w	r1, [r5, #392]	; 0x188
 800adac:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 800adb0:	eb06 0141 	add.w	r1, r6, r1, lsl #1
 800adb4:	390a      	subs	r1, #10
 800adb6:	b289      	uxth	r1, r1
 800adb8:	4640      	mov	r0, r8
 800adba:	f7f6 fde2 	bl	8001982 <parce_found_logs>
			if(type_log_fil == TYPE_LOG_READINGS){
 800adbe:	783b      	ldrb	r3, [r7, #0]
		if(parce_found_logs(data_log, ((current_page_table - 1)*10) + i)){
 800adc0:	2800      	cmp	r0, #0
 800adc2:	d037      	beq.n	800ae34 <_ZN11Screen1View11PageRefreshEv+0x1d4>
			if(type_log_fil == TYPE_LOG_READINGS){
 800adc4:	2b00      	cmp	r3, #0
 800adc6:	d12c      	bne.n	800ae22 <_ZN11Screen1View11PageRefreshEv+0x1c2>
				mas_ContainerTableLog[i]->UpdateLog(Event_log_readings_ptr);
 800adc8:	f8d5 11ac 	ldr.w	r1, [r5, #428]	; 0x1ac
 800adcc:	f8d9 0000 	ldr.w	r0, [r9]
 800add0:	f7fe fbba 	bl	8009548 <_ZN23CustomContainerTableLog9UpdateLogEP15TileInfoTypeDef>
	for(uint8_t i = 0; i < 10; i++){
 800add4:	3601      	adds	r6, #1
 800add6:	2e0a      	cmp	r6, #10
 800add8:	f109 0904 	add.w	r9, r9, #4
 800addc:	d1e4      	bne.n	800ada8 <_ZN11Screen1View11PageRefreshEv+0x148>
 800adde:	1d20      	adds	r0, r4, #4
}
 800ade0:	b003      	add	sp, #12
 800ade2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ade6:	f00d bc71 	b.w	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>
 800adea:	4b1d      	ldr	r3, [pc, #116]	; (800ae60 <_ZN11Screen1View11PageRefreshEv+0x200>)
		flexButtonPage_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(153, 0, 0), touchgfx::Color::getColorFromRGB(204, 0, 0),
 800adec:	9300      	str	r3, [sp, #0]
 800adee:	4a1d      	ldr	r2, [pc, #116]	; (800ae64 <_ZN11Screen1View11PageRefreshEv+0x204>)
 800adf0:	4b1d      	ldr	r3, [pc, #116]	; (800ae68 <_ZN11Screen1View11PageRefreshEv+0x208>)
 800adf2:	491e      	ldr	r1, [pc, #120]	; (800ae6c <_ZN11Screen1View11PageRefreshEv+0x20c>)
 800adf4:	4650      	mov	r0, sl
 800adf6:	e7cc      	b.n	800ad92 <_ZN11Screen1View11PageRefreshEv+0x132>
 800adf8:	4b19      	ldr	r3, [pc, #100]	; (800ae60 <_ZN11Screen1View11PageRefreshEv+0x200>)
		flexButtonPage_3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(153, 0, 0), touchgfx::Color::getColorFromRGB(204, 0, 0),
 800adfa:	9300      	str	r3, [sp, #0]
 800adfc:	4a19      	ldr	r2, [pc, #100]	; (800ae64 <_ZN11Screen1View11PageRefreshEv+0x204>)
 800adfe:	4b1a      	ldr	r3, [pc, #104]	; (800ae68 <_ZN11Screen1View11PageRefreshEv+0x208>)
 800ae00:	491a      	ldr	r1, [pc, #104]	; (800ae6c <_ZN11Screen1View11PageRefreshEv+0x20c>)
 800ae02:	4648      	mov	r0, r9
 800ae04:	e7c5      	b.n	800ad92 <_ZN11Screen1View11PageRefreshEv+0x132>
 800ae06:	4b16      	ldr	r3, [pc, #88]	; (800ae60 <_ZN11Screen1View11PageRefreshEv+0x200>)
		flexButtonPage_4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(153, 0, 0), touchgfx::Color::getColorFromRGB(204, 0, 0),
 800ae08:	9300      	str	r3, [sp, #0]
 800ae0a:	4a16      	ldr	r2, [pc, #88]	; (800ae64 <_ZN11Screen1View11PageRefreshEv+0x204>)
 800ae0c:	4b16      	ldr	r3, [pc, #88]	; (800ae68 <_ZN11Screen1View11PageRefreshEv+0x208>)
 800ae0e:	4917      	ldr	r1, [pc, #92]	; (800ae6c <_ZN11Screen1View11PageRefreshEv+0x20c>)
 800ae10:	4640      	mov	r0, r8
 800ae12:	e7be      	b.n	800ad92 <_ZN11Screen1View11PageRefreshEv+0x132>
 800ae14:	4b12      	ldr	r3, [pc, #72]	; (800ae60 <_ZN11Screen1View11PageRefreshEv+0x200>)
		flexButtonPage_5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(153, 0, 0), touchgfx::Color::getColorFromRGB(204, 0, 0),
 800ae16:	9300      	str	r3, [sp, #0]
 800ae18:	4a12      	ldr	r2, [pc, #72]	; (800ae64 <_ZN11Screen1View11PageRefreshEv+0x204>)
 800ae1a:	4b13      	ldr	r3, [pc, #76]	; (800ae68 <_ZN11Screen1View11PageRefreshEv+0x208>)
 800ae1c:	4913      	ldr	r1, [pc, #76]	; (800ae6c <_ZN11Screen1View11PageRefreshEv+0x20c>)
 800ae1e:	4638      	mov	r0, r7
 800ae20:	e7b7      	b.n	800ad92 <_ZN11Screen1View11PageRefreshEv+0x132>
			else if(type_log_fil == TYPE_LOG_PARAM_UPDATE){
 800ae22:	2b01      	cmp	r3, #1
 800ae24:	d1d6      	bne.n	800add4 <_ZN11Screen1View11PageRefreshEv+0x174>
				mas_ContainerTableLog_Type2[i]->UpdateLog(Event_log_param_update_ptr);
 800ae26:	f8d5 11b0 	ldr.w	r1, [r5, #432]	; 0x1b0
 800ae2a:	f8d9 0028 	ldr.w	r0, [r9, #40]	; 0x28
 800ae2e:	f7fe fc0b 	bl	8009648 <_ZN29CustomContainerTableLog_Type29UpdateLogEP20ContainerInfoTypeDef>
 800ae32:	e7cf      	b.n	800add4 <_ZN11Screen1View11PageRefreshEv+0x174>
			if(type_log_fil == TYPE_LOG_READINGS){
 800ae34:	b923      	cbnz	r3, 800ae40 <_ZN11Screen1View11PageRefreshEv+0x1e0>
 800ae36:	f8d9 2000 	ldr.w	r2, [r9]
 800ae3a:	f882 3025 	strb.w	r3, [r2, #37]	; 0x25
    }
 800ae3e:	e7c9      	b.n	800add4 <_ZN11Screen1View11PageRefreshEv+0x174>
			else if(type_log_fil == TYPE_LOG_PARAM_UPDATE){
 800ae40:	2b01      	cmp	r3, #1
        visible = vis;
 800ae42:	bf04      	itt	eq
 800ae44:	f8d9 3028 	ldreq.w	r3, [r9, #40]	; 0x28
 800ae48:	f883 0025 	strbeq.w	r0, [r3, #37]	; 0x25
    }
 800ae4c:	e7c2      	b.n	800add4 <_ZN11Screen1View11PageRefreshEv+0x174>
 800ae4e:	bf00      	nop
 800ae50:	ff336699 	.word	0xff336699
 800ae54:	ff003366 	.word	0xff003366
 800ae58:	ff0099cc 	.word	0xff0099cc
 800ae5c:	ff006699 	.word	0xff006699
 800ae60:	ff993535 	.word	0xff993535
 800ae64:	ffcc0000 	.word	0xffcc0000
 800ae68:	ff660000 	.word	0xff660000
 800ae6c:	ff990000 	.word	0xff990000

0800ae70 <_ZN11Screen1View15functionReadLogEv>:
	position = 0;
 800ae70:	f500 32cd 	add.w	r2, r0, #104960	; 0x19a00
{
 800ae74:	b410      	push	{r4}
	time_start_back = time_start_fil;
 800ae76:	f8d2 4194 	ldr.w	r4, [r2, #404]	; 0x194
 800ae7a:	f8c2 4190 	str.w	r4, [r2, #400]	; 0x190
	current_button_table = 1;
 800ae7e:	f04f 1401 	mov.w	r4, #65537	; 0x10001
 800ae82:	f8c2 4184 	str.w	r4, [r2, #388]	; 0x184
	current_page_table = 1;
 800ae86:	f504 1444 	add.w	r4, r4, #3211264	; 0x310000
 800ae8a:	f8c2 4188 	str.w	r4, [r2, #392]	; 0x188
	position = 0;
 800ae8e:	2100      	movs	r1, #0
        visible = vis;
 800ae90:	f247 34fd 	movw	r4, #29693	; 0x73fd
 800ae94:	f8a2 119c 	strh.w	r1, [r2, #412]	; 0x19c
 800ae98:	2201      	movs	r2, #1
 800ae9a:	5502      	strb	r2, [r0, r4]
 800ae9c:	f643 04bd 	movw	r4, #14525	; 0x38bd
 800aea0:	5502      	strb	r2, [r0, r4]
 800aea2:	f247 442d 	movw	r4, #29741	; 0x742d
 800aea6:	5501      	strb	r1, [r0, r4]
 800aea8:	f647 04ad 	movw	r4, #30893	; 0x78ad
 800aeac:	5501      	strb	r1, [r0, r4]
 800aeae:	f247 71ed 	movw	r1, #30701	; 0x77ed
}
 800aeb2:	f85d 4b04 	ldr.w	r4, [sp], #4
 800aeb6:	5442      	strb	r2, [r0, r1]
 800aeb8:	f247 712d 	movw	r1, #30509	; 0x772d
 800aebc:	5442      	strb	r2, [r0, r1]
 800aebe:	f247 616d 	movw	r1, #30317	; 0x766d
 800aec2:	5442      	strb	r2, [r0, r1]
 800aec4:	f247 51ad 	movw	r1, #30125	; 0x75ad
 800aec8:	5442      	strb	r2, [r0, r1]
		PageRefresh();
 800aeca:	f7ff bec9 	b.w	800ac60 <_ZN11Screen1View11PageRefreshEv>

0800aece <_ZN11Screen1View16functionPageBackEv>:
	if(current_page_table > 1){
 800aece:	f500 33cd 	add.w	r3, r0, #104960	; 0x19a00
 800aed2:	f8b3 2188 	ldrh.w	r2, [r3, #392]	; 0x188
	if(first_page_table > current_page_table){
 800aed6:	f8b3 1186 	ldrh.w	r1, [r3, #390]	; 0x186
	if(current_page_table > 1){
 800aeda:	2a01      	cmp	r2, #1
		current_page_table--;
 800aedc:	bf84      	itt	hi
 800aede:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800aee2:	f8a3 2188 	strhhi.w	r2, [r3, #392]	; 0x188
	if(current_button_table > 1){
 800aee6:	f8b3 2184 	ldrh.w	r2, [r3, #388]	; 0x184
 800aeea:	2a01      	cmp	r2, #1
		current_button_table--;
 800aeec:	bf84      	itt	hi
 800aeee:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800aef2:	f8a3 2184 	strhhi.w	r2, [r3, #388]	; 0x184
	if(first_page_table > current_page_table){
 800aef6:	f8b3 2188 	ldrh.w	r2, [r3, #392]	; 0x188
 800aefa:	4291      	cmp	r1, r2
		first_page_table = current_page_table;
 800aefc:	bf88      	it	hi
 800aefe:	f8a3 2186 	strhhi.w	r2, [r3, #390]	; 0x186
	PageRefresh();
 800af02:	f7ff bead 	b.w	800ac60 <_ZN11Screen1View11PageRefreshEv>

0800af06 <_ZN11Screen1View19functionPageForwardEv>:
	current_page_table++;
 800af06:	f500 32cd 	add.w	r2, r0, #104960	; 0x19a00
	if(current_button_table < 5){
 800af0a:	f8b2 1184 	ldrh.w	r1, [r2, #388]	; 0x184
	current_page_table++;
 800af0e:	f8b2 3188 	ldrh.w	r3, [r2, #392]	; 0x188
	if(current_button_table < 5){
 800af12:	2904      	cmp	r1, #4
		current_button_table++;
 800af14:	bf9c      	itt	ls
 800af16:	3101      	addls	r1, #1
 800af18:	f8a2 1184 	strhls.w	r1, [r2, #388]	; 0x184
	current_page_table++;
 800af1c:	3301      	adds	r3, #1
	if((current_page_table - first_page_table) >= 5){
 800af1e:	f8b2 1186 	ldrh.w	r1, [r2, #390]	; 0x186
	current_page_table++;
 800af22:	b29b      	uxth	r3, r3
 800af24:	f8a2 3188 	strh.w	r3, [r2, #392]	; 0x188
	if((current_page_table - first_page_table) >= 5){
 800af28:	1a5b      	subs	r3, r3, r1
 800af2a:	2b04      	cmp	r3, #4
		first_page_table += 1;
 800af2c:	bfc4      	itt	gt
 800af2e:	3101      	addgt	r1, #1
 800af30:	f8a2 1186 	strhgt.w	r1, [r2, #390]	; 0x186
	PageRefresh();
 800af34:	f7ff be94 	b.w	800ac60 <_ZN11Screen1View11PageRefreshEv>

0800af38 <_ZN11Screen1View14functionPage_1Ev>:
{
 800af38:	b538      	push	{r3, r4, r5, lr}
	current_button_table = 1;
 800af3a:	f500 35cd 	add.w	r5, r0, #104960	; 0x19a00
{
 800af3e:	4604      	mov	r4, r0
	current_button_table = 1;
 800af40:	2301      	movs	r3, #1
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_1Buffer);
 800af42:	f500 407e 	add.w	r0, r0, #65024	; 0xfe00
	current_button_table = 1;
 800af46:	f8a5 3184 	strh.w	r3, [r5, #388]	; 0x184
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_1Buffer);
 800af4a:	304c      	adds	r0, #76	; 0x4c
 800af4c:	f00f fd94 	bl	801aa78 <_ZN8touchgfx7Unicode4atoiEPKt>
 800af50:	f8a5 0188 	strh.w	r0, [r5, #392]	; 0x188
	PageRefresh();
 800af54:	4620      	mov	r0, r4
}
 800af56:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	PageRefresh();
 800af5a:	f7ff be81 	b.w	800ac60 <_ZN11Screen1View11PageRefreshEv>

0800af5e <_ZN11Screen1View14functionPage_2Ev>:
{
 800af5e:	b538      	push	{r3, r4, r5, lr}
	current_button_table = 2;
 800af60:	f500 35cd 	add.w	r5, r0, #104960	; 0x19a00
{
 800af64:	4604      	mov	r4, r0
	current_button_table = 2;
 800af66:	2302      	movs	r3, #2
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_2Buffer);
 800af68:	f500 407e 	add.w	r0, r0, #65024	; 0xfe00
	current_button_table = 2;
 800af6c:	f8a5 3184 	strh.w	r3, [r5, #388]	; 0x184
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_2Buffer);
 800af70:	3060      	adds	r0, #96	; 0x60
 800af72:	f00f fd81 	bl	801aa78 <_ZN8touchgfx7Unicode4atoiEPKt>
 800af76:	f8a5 0188 	strh.w	r0, [r5, #392]	; 0x188
	PageRefresh();
 800af7a:	4620      	mov	r0, r4
}
 800af7c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	PageRefresh();
 800af80:	f7ff be6e 	b.w	800ac60 <_ZN11Screen1View11PageRefreshEv>

0800af84 <_ZN11Screen1View14functionPage_3Ev>:
{
 800af84:	b538      	push	{r3, r4, r5, lr}
	current_button_table = 3;
 800af86:	f500 35cd 	add.w	r5, r0, #104960	; 0x19a00
{
 800af8a:	4604      	mov	r4, r0
	current_button_table = 3;
 800af8c:	2303      	movs	r3, #3
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_3Buffer);
 800af8e:	f500 407e 	add.w	r0, r0, #65024	; 0xfe00
	current_button_table = 3;
 800af92:	f8a5 3184 	strh.w	r3, [r5, #388]	; 0x184
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_3Buffer);
 800af96:	3074      	adds	r0, #116	; 0x74
 800af98:	f00f fd6e 	bl	801aa78 <_ZN8touchgfx7Unicode4atoiEPKt>
 800af9c:	f8a5 0188 	strh.w	r0, [r5, #392]	; 0x188
	PageRefresh();
 800afa0:	4620      	mov	r0, r4
}
 800afa2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	PageRefresh();
 800afa6:	f7ff be5b 	b.w	800ac60 <_ZN11Screen1View11PageRefreshEv>

0800afaa <_ZN11Screen1View14functionPage_4Ev>:
{
 800afaa:	b538      	push	{r3, r4, r5, lr}
	current_button_table = 4;
 800afac:	f500 35cd 	add.w	r5, r0, #104960	; 0x19a00
{
 800afb0:	4604      	mov	r4, r0
	current_button_table = 4;
 800afb2:	2304      	movs	r3, #4
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_4Buffer);
 800afb4:	f500 407e 	add.w	r0, r0, #65024	; 0xfe00
	current_button_table = 4;
 800afb8:	f8a5 3184 	strh.w	r3, [r5, #388]	; 0x184
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_4Buffer);
 800afbc:	3088      	adds	r0, #136	; 0x88
 800afbe:	f00f fd5b 	bl	801aa78 <_ZN8touchgfx7Unicode4atoiEPKt>
 800afc2:	f8a5 0188 	strh.w	r0, [r5, #392]	; 0x188
	PageRefresh();
 800afc6:	4620      	mov	r0, r4
}
 800afc8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	PageRefresh();
 800afcc:	f7ff be48 	b.w	800ac60 <_ZN11Screen1View11PageRefreshEv>

0800afd0 <_ZN11Screen1View14functionPage_5Ev>:
{
 800afd0:	b538      	push	{r3, r4, r5, lr}
	current_button_table = 5;
 800afd2:	f500 35cd 	add.w	r5, r0, #104960	; 0x19a00
{
 800afd6:	4604      	mov	r4, r0
	current_button_table = 5;
 800afd8:	2305      	movs	r3, #5
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_5Buffer);
 800afda:	f500 407e 	add.w	r0, r0, #65024	; 0xfe00
	current_button_table = 5;
 800afde:	f8a5 3184 	strh.w	r3, [r5, #388]	; 0x184
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_5Buffer);
 800afe2:	309c      	adds	r0, #156	; 0x9c
 800afe4:	f00f fd48 	bl	801aa78 <_ZN8touchgfx7Unicode4atoiEPKt>
 800afe8:	f8a5 0188 	strh.w	r0, [r5, #392]	; 0x188
	PageRefresh();
 800afec:	4620      	mov	r0, r4
}
 800afee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	PageRefresh();
 800aff2:	f7ff be35 	b.w	800ac60 <_ZN11Screen1View11PageRefreshEv>
	...

0800aff8 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 800aff8:	4b09      	ldr	r3, [pc, #36]	; (800b020 <_ZN11Screen1ViewD1Ev+0x28>)
 800affa:	b510      	push	{r4, lr}
 800affc:	4604      	mov	r4, r0
 800affe:	6003      	str	r3, [r0, #0]
 800b000:	f500 30a7 	add.w	r0, r0, #85504	; 0x14e00
 800b004:	30a0      	adds	r0, #160	; 0xa0
 800b006:	f7fe fe9f 	bl	8009d48 <_ZN21DateSelectorContainerD1Ev>
 800b00a:	f504 3081 	add.w	r0, r4, #66048	; 0x10200
 800b00e:	3020      	adds	r0, #32
 800b010:	f7fe fe9a 	bl	8009d48 <_ZN21DateSelectorContainerD1Ev>
 800b014:	4620      	mov	r0, r4
 800b016:	f7fa fedd 	bl	8005dd4 <_ZN15Screen1ViewBaseD1Ev>
 800b01a:	4620      	mov	r0, r4
 800b01c:	bd10      	pop	{r4, pc}
 800b01e:	bf00      	nop
 800b020:	0802ad30 	.word	0x0802ad30

0800b024 <_ZN11Screen1ViewD0Ev>:
 800b024:	b510      	push	{r4, lr}
 800b026:	4604      	mov	r4, r0
 800b028:	f7ff ffe6 	bl	800aff8 <_ZN11Screen1ViewD1Ev>
 800b02c:	4620      	mov	r0, r4
 800b02e:	4902      	ldr	r1, [pc, #8]	; (800b038 <_ZN11Screen1ViewD0Ev+0x14>)
 800b030:	f01c fb78 	bl	8027724 <_ZdlPvj>
 800b034:	4620      	mov	r0, r4
 800b036:	bd10      	pop	{r4, pc}
 800b038:	00019c08 	.word	0x00019c08

0800b03c <_ZN16Screen2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen2Presenter() {};
 800b03c:	4770      	bx	lr

0800b03e <_ZThn4_N16Screen2PresenterD1Ev>:
 800b03e:	3804      	subs	r0, #4
 800b040:	4770      	bx	lr

0800b042 <_ZN16Screen2Presenter10deactivateEv>:
}

void Screen2Presenter::activate()
{

}
 800b042:	4770      	bx	lr

0800b044 <_ZN16Screen2PresenterD0Ev>:
 800b044:	b510      	push	{r4, lr}
 800b046:	2110      	movs	r1, #16
 800b048:	4604      	mov	r4, r0
 800b04a:	f01c fb6b 	bl	8027724 <_ZdlPvj>
 800b04e:	4620      	mov	r0, r4
 800b050:	bd10      	pop	{r4, pc}

0800b052 <_ZThn4_N16Screen2PresenterD0Ev>:
 800b052:	f1a0 0004 	sub.w	r0, r0, #4
 800b056:	e7f5      	b.n	800b044 <_ZN16Screen2PresenterD0Ev>

0800b058 <_ZN16Screen2PresenterC1ER11Screen2View>:
Screen2Presenter::Screen2Presenter(Screen2View& v)
 800b058:	b510      	push	{r4, lr}
 800b05a:	2200      	movs	r2, #0
 800b05c:	6082      	str	r2, [r0, #8]
    : view(v)
 800b05e:	4a04      	ldr	r2, [pc, #16]	; (800b070 <_ZN16Screen2PresenterC1ER11Screen2View+0x18>)
 800b060:	60c1      	str	r1, [r0, #12]
 800b062:	f102 0408 	add.w	r4, r2, #8
 800b066:	3220      	adds	r2, #32
 800b068:	6004      	str	r4, [r0, #0]
 800b06a:	6042      	str	r2, [r0, #4]
}
 800b06c:	bd10      	pop	{r4, pc}
 800b06e:	bf00      	nop
 800b070:	0802adb8 	.word	0x0802adb8

0800b074 <_ZN11Screen2ViewD1Ev>:

class Screen2View : public Screen2ViewBase
{
public:
    Screen2View();
    virtual ~Screen2View() {}
 800b074:	4770      	bx	lr

0800b076 <_ZN11Screen2View14tearDownScreenEv>:
}

void Screen2View::tearDownScreen()
{
    Screen2ViewBase::tearDownScreen();
}
 800b076:	4770      	bx	lr

0800b078 <_ZN11Screen2View20functionSaveSettingsEv>:
 800b078:	f244 2395 	movw	r3, #17045	; 0x4295
 800b07c:	2201      	movs	r2, #1
 800b07e:	54c2      	strb	r2, [r0, r3]
//==================================================================================================================
// Кнопка сохранить
void Screen2View::functionSaveSettings()
{
	modalWindow1.setVisible(true);
	modalWindow1.invalidate();
 800b080:	f500 4084 	add.w	r0, r0, #16896	; 0x4200
 800b084:	3070      	adds	r0, #112	; 0x70
 800b086:	f00d bb21 	b.w	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>

0800b08a <_ZN11Screen2View23functionSaveModalWindowEv>:
 800b08a:	f244 2395 	movw	r3, #17045	; 0x4295
 800b08e:	2200      	movs	r2, #0
 800b090:	54c2      	strb	r2, [r0, r3]
//==================================================================================================================
// Кнопка сохранить (да\нет)
void Screen2View::functionSaveModalWindow()
{
	modalWindow1.setVisible(false);
	modalWindow1.invalidate();
 800b092:	f500 4084 	add.w	r0, r0, #16896	; 0x4200
 800b096:	3070      	adds	r0, #112	; 0x70
 800b098:	f00d bb18 	b.w	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>

0800b09c <_ZN11Screen2View11setupScreenEv>:
{
 800b09c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b09e:	4604      	mov	r4, r0
 800b0a0:	2600      	movs	r6, #0
    Screen2ViewBase::setupScreen();
 800b0a2:	f7fd f83b 	bl	800811c <_ZN15Screen2ViewBase11setupScreenEv>
    customContainerKeyboard_Num1.initialize();
 800b0a6:	f504 5540 	add.w	r5, r4, #12288	; 0x3000
    customContainerKeyboard1.initialize();
 800b0aa:	f104 00a0 	add.w	r0, r4, #160	; 0xa0
 800b0ae:	9001      	str	r0, [sp, #4]
    customContainerKeyboard_Num1.initialize();
 800b0b0:	3538      	adds	r5, #56	; 0x38
    customContainerKeyboard1.initialize();
 800b0b2:	f7fe f89b 	bl	80091ec <_ZN23CustomContainerKeyboard10initializeEv>
    customContainerKeyboard1.invalidate();
 800b0b6:	9801      	ldr	r0, [sp, #4]
 800b0b8:	f884 60c5 	strb.w	r6, [r4, #197]	; 0xc5
 800b0bc:	f00d fb06 	bl	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>
    customContainerKeyboard_Num1.initialize();
 800b0c0:	4628      	mov	r0, r5
 800b0c2:	f7fe f8f9 	bl	80092b8 <_ZN27CustomContainerKeyboard_Num10initializeEv>
 800b0c6:	f243 035d 	movw	r3, #12381	; 0x305d
    customContainerKeyboard_Num1.invalidate();
 800b0ca:	4628      	mov	r0, r5
 800b0cc:	54e6      	strb	r6, [r4, r3]
 800b0ce:	f00d fafd 	bl	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>
 800b0d2:	f244 2395 	movw	r3, #17045	; 0x4295
    modalWindow1.invalidate();
 800b0d6:	f504 4084 	add.w	r0, r4, #16896	; 0x4200
 800b0da:	3070      	adds	r0, #112	; 0x70
 800b0dc:	54e6      	strb	r6, [r4, r3]
}
 800b0de:	b002      	add	sp, #8
 800b0e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    modalWindow1.invalidate();
 800b0e4:	f00d baf2 	b.w	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>

0800b0e8 <_ZN11Screen2View31CallbackcustomContainerKeyboardEv>:
	count_flexButton_text_outBuffer = count_ContainerTextArea;
 800b0e8:	4b0a      	ldr	r3, [pc, #40]	; (800b114 <_ZN11Screen2View31CallbackcustomContainerKeyboardEv+0x2c>)
	Unicode::snprintf(flexButton_text_outBuffer, count_ContainerTextArea+1, data_ContainerTextArea);
 800b0ea:	4a0b      	ldr	r2, [pc, #44]	; (800b118 <_ZN11Screen2View31CallbackcustomContainerKeyboardEv+0x30>)
	count_flexButton_text_outBuffer = count_ContainerTextArea;
 800b0ec:	8819      	ldrh	r1, [r3, #0]
{
 800b0ee:	b510      	push	{r4, lr}
	count_flexButton_text_outBuffer = count_ContainerTextArea;
 800b0f0:	f244 5378 	movw	r3, #17784	; 0x4578
{
 800b0f4:	4604      	mov	r4, r0
	count_flexButton_text_outBuffer = count_ContainerTextArea;
 800b0f6:	52c1      	strh	r1, [r0, r3]
	Unicode::snprintf(flexButton_text_outBuffer, count_ContainerTextArea+1, data_ContainerTextArea);
 800b0f8:	3101      	adds	r1, #1
 800b0fa:	f500 4089 	add.w	r0, r0, #17536	; 0x4480
 800b0fe:	b289      	uxth	r1, r1
 800b100:	3054      	adds	r0, #84	; 0x54
 800b102:	f00f ffcd 	bl	801b0a0 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
	flexButton_text_out.invalidate();
 800b106:	f504 503d 	add.w	r0, r4, #12096	; 0x2f40
 800b10a:	3008      	adds	r0, #8
}
 800b10c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	flexButton_text_out.invalidate();
 800b110:	f00d badc 	b.w	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>
 800b114:	2001ad10 	.word	0x2001ad10
 800b118:	2001ad12 	.word	0x2001ad12

0800b11c <_ZN11Screen2View35CallbackcustomContainerKeyboard_NumEv>:
	if(data_ContainerTextArea[count_ContainerTextArea - 1] == '.'){
 800b11c:	4b0e      	ldr	r3, [pc, #56]	; (800b158 <_ZN11Screen2View35CallbackcustomContainerKeyboard_NumEv+0x3c>)
 800b11e:	490f      	ldr	r1, [pc, #60]	; (800b15c <_ZN11Screen2View35CallbackcustomContainerKeyboard_NumEv+0x40>)
 800b120:	881a      	ldrh	r2, [r3, #0]
 800b122:	3a01      	subs	r2, #1
{
 800b124:	b510      	push	{r4, lr}
	if(data_ContainerTextArea[count_ContainerTextArea - 1] == '.'){
 800b126:	f831 1012 	ldrh.w	r1, [r1, r2, lsl #1]
 800b12a:	292e      	cmp	r1, #46	; 0x2e
		count_ContainerTextArea -= 1;
 800b12c:	bf08      	it	eq
 800b12e:	801a      	strheq	r2, [r3, #0]
	count_flexButton_text_outBuffer_num = count_ContainerTextArea;
 800b130:	8819      	ldrh	r1, [r3, #0]
	Unicode::snprintf(flexButton_text_out_NumBuffer, count_ContainerTextArea+1, data_ContainerTextArea);
 800b132:	4a0a      	ldr	r2, [pc, #40]	; (800b15c <_ZN11Screen2View35CallbackcustomContainerKeyboard_NumEv+0x40>)
	count_flexButton_text_outBuffer_num = count_ContainerTextArea;
 800b134:	f244 537a 	movw	r3, #17786	; 0x457a
{
 800b138:	4604      	mov	r4, r0
	count_flexButton_text_outBuffer_num = count_ContainerTextArea;
 800b13a:	52c1      	strh	r1, [r0, r3]
	Unicode::snprintf(flexButton_text_out_NumBuffer, count_ContainerTextArea+1, data_ContainerTextArea);
 800b13c:	3101      	adds	r1, #1
 800b13e:	f500 408a 	add.w	r0, r0, #17664	; 0x4500
 800b142:	b289      	uxth	r1, r1
 800b144:	3024      	adds	r0, #36	; 0x24
 800b146:	f00f ffab 	bl	801b0a0 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
	flexButton_text_out_Num.invalidate();
 800b14a:	f504 4081 	add.w	r0, r4, #16512	; 0x4080
 800b14e:	3074      	adds	r0, #116	; 0x74
}
 800b150:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	flexButton_text_out_Num.invalidate();
 800b154:	f00d baba 	b.w	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>
 800b158:	2001ad10 	.word	0x2001ad10
 800b15c:	2001ad12 	.word	0x2001ad12

0800b160 <_ZN11Screen2ViewD0Ev>:
 800b160:	b510      	push	{r4, lr}
 800b162:	f244 517c 	movw	r1, #17788	; 0x457c
 800b166:	4604      	mov	r4, r0
 800b168:	f01c fadc 	bl	8027724 <_ZdlPvj>
 800b16c:	4620      	mov	r0, r4
 800b16e:	bd10      	pop	{r4, pc}

0800b170 <_ZN11Screen2View9function3Ev>:
{
 800b170:	b570      	push	{r4, r5, r6, lr}
	customContainerKeyboard_Num1.initialize();
 800b172:	f500 5540 	add.w	r5, r0, #12288	; 0x3000
{
 800b176:	4604      	mov	r4, r0
	customContainerKeyboard_Num1.initialize();
 800b178:	3538      	adds	r5, #56	; 0x38
	Unicode::snprintf(data_ContainerTextArea, count_flexButton_text_outBuffer_num+1, flexButton_text_out_NumBuffer);
 800b17a:	f244 567a 	movw	r6, #17786	; 0x457a
	customContainerKeyboard_Num1.initialize();
 800b17e:	4628      	mov	r0, r5
 800b180:	f7fe f89a 	bl	80092b8 <_ZN27CustomContainerKeyboard_Num10initializeEv>
	Unicode::snprintf(data_ContainerTextArea, count_flexButton_text_outBuffer_num+1, flexButton_text_out_NumBuffer);
 800b184:	5ba1      	ldrh	r1, [r4, r6]
 800b186:	4815      	ldr	r0, [pc, #84]	; (800b1dc <_ZN11Screen2View9function3Ev+0x6c>)
 800b188:	3101      	adds	r1, #1
 800b18a:	f504 428a 	add.w	r2, r4, #17664	; 0x4500
 800b18e:	b289      	uxth	r1, r1
 800b190:	3224      	adds	r2, #36	; 0x24
 800b192:	f00f ff85 	bl	801b0a0 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
	customContainerKeyboard_Num1.count_Container = 5;				// Установка максимальной длины контейнера
 800b196:	f244 03e4 	movw	r3, #16612	; 0x40e4
 800b19a:	2205      	movs	r2, #5
 800b19c:	54e2      	strb	r2, [r4, r3]
	count_ContainerTextArea = count_flexButton_text_outBuffer_num; 	// Установка длины буффера обмена элемента экрана
 800b19e:	4b10      	ldr	r3, [pc, #64]	; (800b1e0 <_ZN11Screen2View9function3Ev+0x70>)
 800b1a0:	5ba2      	ldrh	r2, [r4, r6]
 800b1a2:	801a      	strh	r2, [r3, #0]
	customContainerKeyboard_Num1.UpdateText();						// Обновление текста в контейнере CustomContainerKeyboard
 800b1a4:	4628      	mov	r0, r5
 800b1a6:	f7fe f8ab 	bl	8009300 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv>
 800b1aa:	f243 035d 	movw	r3, #12381	; 0x305d
 800b1ae:	2201      	movs	r2, #1
 800b1b0:	54e2      	strb	r2, [r4, r3]
        rect.x = x;
 800b1b2:	f243 033c 	movw	r3, #12348	; 0x303c
 800b1b6:	4a0b      	ldr	r2, [pc, #44]	; (800b1e4 <_ZN11Screen2View9function3Ev+0x74>)
 800b1b8:	50e2      	str	r2, [r4, r3]
	customContainerKeyboard_Num1.invalidate();
 800b1ba:	4628      	mov	r0, r5
 800b1bc:	f00d fa86 	bl	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>
	if(customContainerKeyboard1.isVisible()){
 800b1c0:	f894 30c5 	ldrb.w	r3, [r4, #197]	; 0xc5
 800b1c4:	b143      	cbz	r3, 800b1d8 <_ZN11Screen2View9function3Ev+0x68>
        visible = vis;
 800b1c6:	2300      	movs	r3, #0
 800b1c8:	f884 30c5 	strb.w	r3, [r4, #197]	; 0xc5
		customContainerKeyboard1.invalidate();
 800b1cc:	f104 00a0 	add.w	r0, r4, #160	; 0xa0
}
 800b1d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		customContainerKeyboard1.invalidate();
 800b1d4:	f00d ba7a 	b.w	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800b1d8:	bd70      	pop	{r4, r5, r6, pc}
 800b1da:	bf00      	nop
 800b1dc:	2001ad12 	.word	0x2001ad12
 800b1e0:	2001ad10 	.word	0x2001ad10
 800b1e4:	00b40104 	.word	0x00b40104

0800b1e8 <_ZN11Screen2View9function2Ev>:
{
 800b1e8:	b570      	push	{r4, r5, r6, lr}
 800b1ea:	4604      	mov	r4, r0
	customContainerKeyboard1.initialize();
 800b1ec:	f100 05a0 	add.w	r5, r0, #160	; 0xa0
	Unicode::snprintf(data_ContainerTextArea, count_flexButton_text_outBuffer+1, flexButton_text_outBuffer);
 800b1f0:	f244 5678 	movw	r6, #17784	; 0x4578
	customContainerKeyboard1.initialize();
 800b1f4:	4628      	mov	r0, r5
 800b1f6:	f7fd fff9 	bl	80091ec <_ZN23CustomContainerKeyboard10initializeEv>
	Unicode::snprintf(data_ContainerTextArea, count_flexButton_text_outBuffer+1, flexButton_text_outBuffer);
 800b1fa:	5ba1      	ldrh	r1, [r4, r6]
 800b1fc:	4814      	ldr	r0, [pc, #80]	; (800b250 <_ZN11Screen2View9function2Ev+0x68>)
 800b1fe:	3101      	adds	r1, #1
 800b200:	f504 4289 	add.w	r2, r4, #17536	; 0x4480
 800b204:	b289      	uxth	r1, r1
 800b206:	3254      	adds	r2, #84	; 0x54
 800b208:	f00f ff4a 	bl	801b0a0 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
	customContainerKeyboard1.count_Container = 30;				// Установка максимальной длины контейнера
 800b20c:	f642 5388 	movw	r3, #11656	; 0x2d88
 800b210:	221e      	movs	r2, #30
 800b212:	54e2      	strb	r2, [r4, r3]
	count_ContainerTextArea = count_flexButton_text_outBuffer; 	// Установка длины буффера обмена элемента экрана
 800b214:	4b0f      	ldr	r3, [pc, #60]	; (800b254 <_ZN11Screen2View9function2Ev+0x6c>)
 800b216:	5ba2      	ldrh	r2, [r4, r6]
 800b218:	801a      	strh	r2, [r3, #0]
	customContainerKeyboard1.UpdateText();						// Обновление текста в контейнере CustomContainerKeyboard
 800b21a:	4628      	mov	r0, r5
 800b21c:	f7fd ffce 	bl	80091bc <_ZN23CustomContainerKeyboard10UpdateTextEv>
 800b220:	2301      	movs	r3, #1
 800b222:	f884 30c5 	strb.w	r3, [r4, #197]	; 0xc5
        rect.x = x;
 800b226:	f44f 0334 	mov.w	r3, #11796480	; 0xb40000
 800b22a:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
	customContainerKeyboard1.invalidate();
 800b22e:	4628      	mov	r0, r5
 800b230:	f00d fa4c 	bl	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>
	if(customContainerKeyboard_Num1.isVisible()){
 800b234:	f243 035d 	movw	r3, #12381	; 0x305d
 800b238:	5ce2      	ldrb	r2, [r4, r3]
 800b23a:	b142      	cbz	r2, 800b24e <_ZN11Screen2View9function2Ev+0x66>
		customContainerKeyboard_Num1.invalidate();
 800b23c:	f504 5040 	add.w	r0, r4, #12288	; 0x3000
        visible = vis;
 800b240:	2200      	movs	r2, #0
 800b242:	54e2      	strb	r2, [r4, r3]
 800b244:	3038      	adds	r0, #56	; 0x38
}
 800b246:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		customContainerKeyboard_Num1.invalidate();
 800b24a:	f00d ba3f 	b.w	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800b24e:	bd70      	pop	{r4, r5, r6, pc}
 800b250:	2001ad12 	.word	0x2001ad12
 800b254:	2001ad10 	.word	0x2001ad10

0800b258 <_ZN11Screen2ViewC1Ev>:
Screen2View::Screen2View()
 800b258:	b510      	push	{r4, lr}
 800b25a:	4604      	mov	r4, r0
 800b25c:	f7fc ffca 	bl	80081f4 <_ZN15Screen2ViewBaseC1Ev>
 800b260:	4b03      	ldr	r3, [pc, #12]	; (800b270 <_ZN11Screen2ViewC1Ev+0x18>)
 800b262:	6023      	str	r3, [r4, #0]
 800b264:	f244 5378 	movw	r3, #17784	; 0x4578
 800b268:	2200      	movs	r2, #0
 800b26a:	50e2      	str	r2, [r4, r3]
}
 800b26c:	4620      	mov	r0, r4
 800b26e:	bd10      	pop	{r4, pc}
 800b270:	0802ade8 	.word	0x0802ade8

0800b274 <_ZN9UserUtilsD1Ev>:

class UserUtils
{
public:
	UserUtils();
    virtual ~UserUtils() {}
 800b274:	4770      	bx	lr
	...

0800b278 <_ZN9UserUtils18gasNameFromFormulaEPtS0_>:
{

}

void UserUtils::gasNameFromFormula(Unicode::UnicodeChar *formula, Unicode::UnicodeChar *name)
{
 800b278:	b530      	push	{r4, r5, lr}
 800b27a:	b09b      	sub	sp, #108	; 0x6c
 800b27c:	460d      	mov	r5, r1
 800b27e:	4614      	mov	r4, r2
	 Unicode::UnicodeChar ch4[10] = {0}, c2h6[10] = {0}, c3h8[10] = {0}, c4h10[10] = {0}, c2h5oh[10] = {0};
 800b280:	2100      	movs	r1, #0
 800b282:	2214      	movs	r2, #20
 800b284:	a801      	add	r0, sp, #4
 800b286:	f01c fc29 	bl	8027adc <memset>
 800b28a:	2214      	movs	r2, #20
 800b28c:	2100      	movs	r1, #0
 800b28e:	a806      	add	r0, sp, #24
 800b290:	f01c fc24 	bl	8027adc <memset>
 800b294:	2214      	movs	r2, #20
 800b296:	2100      	movs	r1, #0
 800b298:	a80b      	add	r0, sp, #44	; 0x2c
 800b29a:	f01c fc1f 	bl	8027adc <memset>
 800b29e:	2214      	movs	r2, #20
 800b2a0:	2100      	movs	r1, #0
 800b2a2:	a810      	add	r0, sp, #64	; 0x40
 800b2a4:	f01c fc1a 	bl	8027adc <memset>
 800b2a8:	2214      	movs	r2, #20
 800b2aa:	2100      	movs	r1, #0
 800b2ac:	a815      	add	r0, sp, #84	; 0x54
 800b2ae:	f01c fc15 	bl	8027adc <memset>

	 Unicode::snprintf(ch4, 10,  "CH4");
 800b2b2:	4a24      	ldr	r2, [pc, #144]	; (800b344 <_ZN9UserUtils18gasNameFromFormulaEPtS0_+0xcc>)
 800b2b4:	210a      	movs	r1, #10
 800b2b6:	a801      	add	r0, sp, #4
 800b2b8:	f00f ff08 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	 Unicode::snprintf(c2h6, 10,  "C2H6");
 800b2bc:	4a22      	ldr	r2, [pc, #136]	; (800b348 <_ZN9UserUtils18gasNameFromFormulaEPtS0_+0xd0>)
 800b2be:	210a      	movs	r1, #10
 800b2c0:	a806      	add	r0, sp, #24
 800b2c2:	f00f ff03 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	 Unicode::snprintf(c3h8, 10,  "C3H8");
 800b2c6:	4a21      	ldr	r2, [pc, #132]	; (800b34c <_ZN9UserUtils18gasNameFromFormulaEPtS0_+0xd4>)
 800b2c8:	210a      	movs	r1, #10
 800b2ca:	a80b      	add	r0, sp, #44	; 0x2c
 800b2cc:	f00f fefe 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	 Unicode::snprintf(c4h10, 10,  "C4H10");
 800b2d0:	4a1f      	ldr	r2, [pc, #124]	; (800b350 <_ZN9UserUtils18gasNameFromFormulaEPtS0_+0xd8>)
 800b2d2:	210a      	movs	r1, #10
 800b2d4:	a810      	add	r0, sp, #64	; 0x40
 800b2d6:	f00f fef9 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	 Unicode::snprintf(c2h5oh, 10,  "C2H5OH");
 800b2da:	4a1e      	ldr	r2, [pc, #120]	; (800b354 <_ZN9UserUtils18gasNameFromFormulaEPtS0_+0xdc>)
 800b2dc:	210a      	movs	r1, #10
 800b2de:	a815      	add	r0, sp, #84	; 0x54
 800b2e0:	f00f fef4 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

	if (!Unicode::strncmp_ignore_whitespace(ch4, formula, 24))
 800b2e4:	2218      	movs	r2, #24
 800b2e6:	4629      	mov	r1, r5
 800b2e8:	a801      	add	r0, sp, #4
 800b2ea:	f010 f8c9 	bl	801b480 <_ZN8touchgfx7Unicode25strncmp_ignore_whitespaceEPKtS2_t>
 800b2ee:	b930      	cbnz	r0, 800b2fe <_ZN9UserUtils18gasNameFromFormulaEPtS0_+0x86>
			Unicode::snprintf(name, 24, "Methane");
 800b2f0:	4a19      	ldr	r2, [pc, #100]	; (800b358 <_ZN9UserUtils18gasNameFromFormulaEPtS0_+0xe0>)
			Unicode::snprintf(name, 24, "Propane");
	else if (!Unicode::strncmp_ignore_whitespace(c4h10, formula, 10))
			Unicode::snprintf(name, 24, "Butane");
	else if (!Unicode::strncmp_ignore_whitespace(c2h5oh, formula, 10))
			Unicode::snprintf(name, 24, "Alcohol");
	else Unicode::snprintf(name, 24, "Unknown");
 800b2f2:	2118      	movs	r1, #24
 800b2f4:	4620      	mov	r0, r4
 800b2f6:	f00f fee9 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
}
 800b2fa:	b01b      	add	sp, #108	; 0x6c
 800b2fc:	bd30      	pop	{r4, r5, pc}
	else if (!Unicode::strncmp_ignore_whitespace(c2h6, formula, 10))
 800b2fe:	220a      	movs	r2, #10
 800b300:	4629      	mov	r1, r5
 800b302:	a806      	add	r0, sp, #24
 800b304:	f010 f8bc 	bl	801b480 <_ZN8touchgfx7Unicode25strncmp_ignore_whitespaceEPKtS2_t>
 800b308:	b908      	cbnz	r0, 800b30e <_ZN9UserUtils18gasNameFromFormulaEPtS0_+0x96>
			Unicode::snprintf(name, 24, "Ethane");
 800b30a:	4a14      	ldr	r2, [pc, #80]	; (800b35c <_ZN9UserUtils18gasNameFromFormulaEPtS0_+0xe4>)
 800b30c:	e7f1      	b.n	800b2f2 <_ZN9UserUtils18gasNameFromFormulaEPtS0_+0x7a>
	else if (!Unicode::strncmp_ignore_whitespace(c3h8, formula, 10))
 800b30e:	220a      	movs	r2, #10
 800b310:	4629      	mov	r1, r5
 800b312:	a80b      	add	r0, sp, #44	; 0x2c
 800b314:	f010 f8b4 	bl	801b480 <_ZN8touchgfx7Unicode25strncmp_ignore_whitespaceEPKtS2_t>
 800b318:	b908      	cbnz	r0, 800b31e <_ZN9UserUtils18gasNameFromFormulaEPtS0_+0xa6>
			Unicode::snprintf(name, 24, "Propane");
 800b31a:	4a11      	ldr	r2, [pc, #68]	; (800b360 <_ZN9UserUtils18gasNameFromFormulaEPtS0_+0xe8>)
 800b31c:	e7e9      	b.n	800b2f2 <_ZN9UserUtils18gasNameFromFormulaEPtS0_+0x7a>
	else if (!Unicode::strncmp_ignore_whitespace(c4h10, formula, 10))
 800b31e:	220a      	movs	r2, #10
 800b320:	4629      	mov	r1, r5
 800b322:	a810      	add	r0, sp, #64	; 0x40
 800b324:	f010 f8ac 	bl	801b480 <_ZN8touchgfx7Unicode25strncmp_ignore_whitespaceEPKtS2_t>
 800b328:	b908      	cbnz	r0, 800b32e <_ZN9UserUtils18gasNameFromFormulaEPtS0_+0xb6>
			Unicode::snprintf(name, 24, "Butane");
 800b32a:	4a0e      	ldr	r2, [pc, #56]	; (800b364 <_ZN9UserUtils18gasNameFromFormulaEPtS0_+0xec>)
 800b32c:	e7e1      	b.n	800b2f2 <_ZN9UserUtils18gasNameFromFormulaEPtS0_+0x7a>
	else if (!Unicode::strncmp_ignore_whitespace(c2h5oh, formula, 10))
 800b32e:	220a      	movs	r2, #10
 800b330:	4629      	mov	r1, r5
 800b332:	a815      	add	r0, sp, #84	; 0x54
 800b334:	f010 f8a4 	bl	801b480 <_ZN8touchgfx7Unicode25strncmp_ignore_whitespaceEPKtS2_t>
 800b338:	b908      	cbnz	r0, 800b33e <_ZN9UserUtils18gasNameFromFormulaEPtS0_+0xc6>
			Unicode::snprintf(name, 24, "Alcohol");
 800b33a:	4a0b      	ldr	r2, [pc, #44]	; (800b368 <_ZN9UserUtils18gasNameFromFormulaEPtS0_+0xf0>)
 800b33c:	e7d9      	b.n	800b2f2 <_ZN9UserUtils18gasNameFromFormulaEPtS0_+0x7a>
	else Unicode::snprintf(name, 24, "Unknown");
 800b33e:	4a0b      	ldr	r2, [pc, #44]	; (800b36c <_ZN9UserUtils18gasNameFromFormulaEPtS0_+0xf4>)
 800b340:	e7d7      	b.n	800b2f2 <_ZN9UserUtils18gasNameFromFormulaEPtS0_+0x7a>
 800b342:	bf00      	nop
 800b344:	0802ae2c 	.word	0x0802ae2c
 800b348:	0802ae30 	.word	0x0802ae30
 800b34c:	0802ae35 	.word	0x0802ae35
 800b350:	0802ae3a 	.word	0x0802ae3a
 800b354:	0802ae40 	.word	0x0802ae40
 800b358:	0802ae47 	.word	0x0802ae47
 800b35c:	0802ae4f 	.word	0x0802ae4f
 800b360:	0802ae56 	.word	0x0802ae56
 800b364:	0802ae5e 	.word	0x0802ae5e
 800b368:	0802ae65 	.word	0x0802ae65
 800b36c:	0802ae6d 	.word	0x0802ae6d

0800b370 <_ZN9UserUtilsD0Ev>:
 800b370:	b510      	push	{r4, lr}
 800b372:	2104      	movs	r1, #4
 800b374:	4604      	mov	r4, r0
 800b376:	f01c f9d5 	bl	8027724 <_ZdlPvj>
 800b37a:	4620      	mov	r0, r4
 800b37c:	bd10      	pop	{r4, pc}
	...

0800b380 <_ZN9UserUtils18getBufferToDisplayEPtfh>:

void UserUtils::getBufferToDisplay(Unicode::UnicodeChar* buffer, float value, uint8_t units)
{
	//int size = Unicode::strlen(buffer);

	if (units == UNITS_VOLUME_FRACTION)
 800b380:	2a04      	cmp	r2, #4
{
 800b382:	b507      	push	{r0, r1, r2, lr}
 800b384:	4608      	mov	r0, r1
	if (units == UNITS_VOLUME_FRACTION)
 800b386:	d109      	bne.n	800b39c <_ZN9UserUtils18getBufferToDisplayEPtfh+0x1c>
 800b388:	4a09      	ldr	r2, [pc, #36]	; (800b3b0 <_ZN9UserUtils18getBufferToDisplayEPtfh+0x30>)
 800b38a:	ed8d 0a01 	vstr	s0, [sp, #4]
 800b38e:	ab01      	add	r3, sp, #4
 800b390:	2106      	movs	r1, #6
 800b392:	f010 f85b 	bl	801b44c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
		Unicode::snprintfFloat(buffer, 6, "%.2f", value);
	else
		Unicode::snprintf(buffer, 6, "%d", (int)value);
}
 800b396:	b003      	add	sp, #12
 800b398:	f85d fb04 	ldr.w	pc, [sp], #4
		Unicode::snprintf(buffer, 6, "%d", (int)value);
 800b39c:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800b3a0:	4a04      	ldr	r2, [pc, #16]	; (800b3b4 <_ZN9UserUtils18getBufferToDisplayEPtfh+0x34>)
 800b3a2:	ee17 3a90 	vmov	r3, s15
 800b3a6:	2106      	movs	r1, #6
 800b3a8:	f00f fe90 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
}
 800b3ac:	e7f3      	b.n	800b396 <_ZN9UserUtils18getBufferToDisplayEPtfh+0x16>
 800b3ae:	bf00      	nop
 800b3b0:	0802ae75 	.word	0x0802ae75
 800b3b4:	0802a646 	.word	0x0802a646

0800b3b8 <_ZN9UserUtilsC1Ev>:
UserUtils::UserUtils()
 800b3b8:	4b01      	ldr	r3, [pc, #4]	; (800b3c0 <_ZN9UserUtilsC1Ev+0x8>)
 800b3ba:	6003      	str	r3, [r0, #0]
}
 800b3bc:	4770      	bx	lr
 800b3be:	bf00      	nop
 800b3c0:	0802ae84 	.word	0x0802ae84

0800b3c4 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
     * @param  y      The y coordinate.
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
        : x(x), y(y), width(width), height(height)
 800b3c4:	2200      	movs	r2, #0
 800b3c6:	8002      	strh	r2, [r0, #0]
 800b3c8:	8042      	strh	r2, [r0, #2]
 800b3ca:	8082      	strh	r2, [r0, #4]
 800b3cc:	80c2      	strh	r2, [r0, #6]
    }
 800b3ce:	4770      	bx	lr

0800b3d0 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800b3d0:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800b3d2:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800b3d4:	4604      	mov	r4, r0
        setX(x);
 800b3d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800b3d8:	4615      	mov	r5, r2
        setX(x);
 800b3da:	4798      	blx	r3
        setBaselineY(baselineY);
 800b3dc:	6823      	ldr	r3, [r4, #0]
 800b3de:	4629      	mov	r1, r5
 800b3e0:	4620      	mov	r0, r4
 800b3e2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
    }
 800b3e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 800b3e8:	4718      	bx	r3

0800b3ea <_ZN8touchgfx8CallbackI13WheelSelectorRKNS_12MoveAnimatorINS_9ContainerEEEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800b3ea:	4770      	bx	lr

0800b3ec <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEED1Ev>:
 * 'uint8_t getAlpha()' method.
 *
 * @tparam T specifies the type to extend with the FadeAnimator behavior.
 */
template <class T>
class FadeAnimator : public T
 800b3ec:	4770      	bx	lr

0800b3ee <_ZN8touchgfx12MoveAnimatorINS_9ContainerEED1Ev>:
 * callback when the animation has finished.
 *
 * This mixin can be used on any Drawable.
 */
template <class T>
class MoveAnimator : public T
 800b3ee:	4770      	bx	lr

0800b3f0 <_ZN8touchgfx8CallbackI13WheelSelectorRKNS_12MoveAnimatorINS_9ContainerEEEvvE7executeES6_>:
    virtual void execute(T1 t1)
 800b3f0:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800b3f2:	68c2      	ldr	r2, [r0, #12]
 800b3f4:	6844      	ldr	r4, [r0, #4]
 800b3f6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800b3f8:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 800b3fa:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800b3fe:	07d2      	lsls	r2, r2, #31
 800b400:	bf48      	it	mi
 800b402:	5962      	ldrmi	r2, [r4, r5]
 800b404:	689b      	ldr	r3, [r3, #8]
    }
 800b406:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800b408:	bf48      	it	mi
 800b40a:	58d3      	ldrmi	r3, [r2, r3]
 800b40c:	4718      	bx	r3

0800b40e <_ZNK8touchgfx8CallbackI13WheelSelectorRKNS_12MoveAnimatorINS_9ContainerEEEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 800b40e:	6843      	ldr	r3, [r0, #4]
 800b410:	b12b      	cbz	r3, 800b41e <_ZNK8touchgfx8CallbackI13WheelSelectorRKNS_12MoveAnimatorINS_9ContainerEEEvvE7isValidEv+0x10>
 800b412:	6883      	ldr	r3, [r0, #8]
 800b414:	b92b      	cbnz	r3, 800b422 <_ZNK8touchgfx8CallbackI13WheelSelectorRKNS_12MoveAnimatorINS_9ContainerEEEvvE7isValidEv+0x14>
 800b416:	68c0      	ldr	r0, [r0, #12]
 800b418:	f000 0001 	and.w	r0, r0, #1
 800b41c:	4770      	bx	lr
 800b41e:	4618      	mov	r0, r3
 800b420:	4770      	bx	lr
 800b422:	2001      	movs	r0, #1
    }
 800b424:	4770      	bx	lr

0800b426 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21setFadeAnimationDelayEt>:
     *
     * @see getFadeAnimationDelay
     */
    virtual void setFadeAnimationDelay(uint16_t delay)
    {
        fadeAnimationDelay = delay;
 800b426:	f8a0 1044 	strh.w	r1, [r0, #68]	; 0x44
    }
 800b42a:	4770      	bx	lr

0800b42c <_ZNK8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21getFadeAnimationDelayEv>:
     * @see setFadeAnimationDelay
     */
    virtual uint16_t getFadeAnimationDelay() const
    {
        return fadeAnimationDelay;
    }
 800b42c:	f8b0 0044 	ldrh.w	r0, [r0, #68]	; 0x44
 800b430:	4770      	bx	lr

0800b432 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21setMoveAnimationDelayEt>:
     *
     * @see getMoveAnimationDelay
     */
    virtual void setMoveAnimationDelay(uint16_t delay)
    {
        moveAnimationDelay = delay;
 800b432:	8601      	strh	r1, [r0, #48]	; 0x30
    }
 800b434:	4770      	bx	lr

0800b436 <_ZNK8touchgfx12MoveAnimatorINS_9ContainerEE21getMoveAnimationDelayEv>:
     * @see setMoveAnimationDelay
     */
    virtual uint16_t getMoveAnimationDelay() const
    {
        return moveAnimationDelay;
    }
 800b436:	8e00      	ldrh	r0, [r0, #48]	; 0x30
 800b438:	4770      	bx	lr

0800b43a <_ZN8touchgfx12MoveAnimatorINS_9ContainerEED0Ev>:
class MoveAnimator : public T
 800b43a:	b510      	push	{r4, lr}
 800b43c:	2148      	movs	r1, #72	; 0x48
 800b43e:	4604      	mov	r4, r0
 800b440:	f01c f970 	bl	8027724 <_ZdlPvj>
 800b444:	4620      	mov	r0, r4
 800b446:	bd10      	pop	{r4, pc}

0800b448 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEED0Ev>:
class FadeAnimator : public T
 800b448:	b510      	push	{r4, lr}
 800b44a:	2154      	movs	r1, #84	; 0x54
 800b44c:	4604      	mov	r4, r0
 800b44e:	f01c f969 	bl	8027724 <_ZdlPvj>
 800b452:	4620      	mov	r0, r4
 800b454:	bd10      	pop	{r4, pc}

0800b456 <_ZN8touchgfx8CallbackI13WheelSelectorRKNS_12MoveAnimatorINS_9ContainerEEEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800b456:	b510      	push	{r4, lr}
 800b458:	2110      	movs	r1, #16
 800b45a:	4604      	mov	r4, r0
 800b45c:	f01c f962 	bl	8027724 <_ZdlPvj>
 800b460:	4620      	mov	r0, r4
 800b462:	bd10      	pop	{r4, pc}

0800b464 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 800b464:	6803      	ldr	r3, [r0, #0]
class TypedText
 800b466:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
    virtual void setBaselineY(int16_t baselineY)
 800b468:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 800b46a:	6b1e      	ldr	r6, [r3, #48]	; 0x30
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800b46c:	4b11      	ldr	r3, [pc, #68]	; (800b4b4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 800b46e:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 800b470:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 800b472:	b28d      	uxth	r5, r1
 800b474:	b92b      	cbnz	r3, 800b482 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 800b476:	4b10      	ldr	r3, [pc, #64]	; (800b4b8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800b478:	4a10      	ldr	r2, [pc, #64]	; (800b4bc <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800b47a:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800b47c:	4810      	ldr	r0, [pc, #64]	; (800b4c0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 800b47e:	f01c f97f 	bl	8027780 <__assert_func>
 800b482:	4910      	ldr	r1, [pc, #64]	; (800b4c4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800b484:	8809      	ldrh	r1, [r1, #0]
 800b486:	4291      	cmp	r1, r2
 800b488:	d803      	bhi.n	800b492 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800b48a:	4b0f      	ldr	r3, [pc, #60]	; (800b4c8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 800b48c:	4a0b      	ldr	r2, [pc, #44]	; (800b4bc <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800b48e:	21af      	movs	r1, #175	; 0xaf
 800b490:	e7f4      	b.n	800b47c <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
        return fonts[typedTexts[typedTextId].fontIdx];
 800b492:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800b496:	4b0d      	ldr	r3, [pc, #52]	; (800b4cc <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800b498:	681b      	ldr	r3, [r3, #0]
 800b49a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800b49e:	6803      	ldr	r3, [r0, #0]
 800b4a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b4a2:	4798      	blx	r3
 800b4a4:	1a28      	subs	r0, r5, r0
 800b4a6:	b201      	sxth	r1, r0
 800b4a8:	4633      	mov	r3, r6
 800b4aa:	4620      	mov	r0, r4
    }
 800b4ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 800b4b0:	4718      	bx	r3
 800b4b2:	bf00      	nop
 800b4b4:	2002bd84 	.word	0x2002bd84
 800b4b8:	08029478 	.word	0x08029478
 800b4bc:	080294ba 	.word	0x080294ba
 800b4c0:	080294e8 	.word	0x080294e8
 800b4c4:	2002bd88 	.word	0x2002bd88
 800b4c8:	0802952f 	.word	0x0802952f
 800b4cc:	2002bd8c 	.word	0x2002bd8c

0800b4d0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv>:
    virtual uint16_t getTextWidth() const
 800b4d0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
        return typedTextId != TYPED_TEXT_INVALID;
 800b4d2:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
        return typedText.hasValidId() ? typedText.getFont()->getStringWidth(typedText.getTextDirection(), typedText.getText(), wildcard, 0) : 0;
 800b4d4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b4d8:	4299      	cmp	r1, r3
    virtual uint16_t getTextWidth() const
 800b4da:	4604      	mov	r4, r0
        return typedText.hasValidId() ? typedText.getFont()->getStringWidth(typedText.getTextDirection(), typedText.getText(), wildcard, 0) : 0;
 800b4dc:	d02a      	beq.n	800b534 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x64>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800b4de:	4b16      	ldr	r3, [pc, #88]	; (800b538 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x68>)
 800b4e0:	681b      	ldr	r3, [r3, #0]
 800b4e2:	b92b      	cbnz	r3, 800b4f0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x20>
 800b4e4:	4b15      	ldr	r3, [pc, #84]	; (800b53c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x6c>)
 800b4e6:	4a16      	ldr	r2, [pc, #88]	; (800b540 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 800b4e8:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800b4ea:	4816      	ldr	r0, [pc, #88]	; (800b544 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x74>)
 800b4ec:	f01c f948 	bl	8027780 <__assert_func>
 800b4f0:	4a15      	ldr	r2, [pc, #84]	; (800b548 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x78>)
 800b4f2:	8812      	ldrh	r2, [r2, #0]
 800b4f4:	428a      	cmp	r2, r1
 800b4f6:	d803      	bhi.n	800b500 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x30>
 800b4f8:	4b14      	ldr	r3, [pc, #80]	; (800b54c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x7c>)
 800b4fa:	4a11      	ldr	r2, [pc, #68]	; (800b540 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 800b4fc:	21af      	movs	r1, #175	; 0xaf
 800b4fe:	e7f4      	b.n	800b4ea <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x1a>
        return fonts[typedTexts[typedTextId].fontIdx];
 800b500:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800b504:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800b508:	4b11      	ldr	r3, [pc, #68]	; (800b550 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x80>)
        return typedTexts[typedTextId].direction;
 800b50a:	7855      	ldrb	r5, [r2, #1]
        return fonts[typedTexts[typedTextId].fontIdx];
 800b50c:	681b      	ldr	r3, [r3, #0]
 800b50e:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800b512:	6833      	ldr	r3, [r6, #0]
 800b514:	69df      	ldr	r7, [r3, #28]
        return texts->getText(typedTextId);
 800b516:	4b0f      	ldr	r3, [pc, #60]	; (800b554 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x84>)
 800b518:	6818      	ldr	r0, [r3, #0]
 800b51a:	f7fd fb75 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
        return typedTexts[typedTextId].direction;
 800b51e:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800b522:	2300      	movs	r3, #0
        return texts->getText(typedTextId);
 800b524:	4602      	mov	r2, r0
 800b526:	9300      	str	r3, [sp, #0]
 800b528:	4629      	mov	r1, r5
 800b52a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b52c:	4630      	mov	r0, r6
 800b52e:	47b8      	blx	r7
    }
 800b530:	b003      	add	sp, #12
 800b532:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return typedText.hasValidId() ? typedText.getFont()->getStringWidth(typedText.getTextDirection(), typedText.getText(), wildcard, 0) : 0;
 800b534:	2000      	movs	r0, #0
 800b536:	e7fb      	b.n	800b530 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x60>
 800b538:	2002bd84 	.word	0x2002bd84
 800b53c:	08029478 	.word	0x08029478
 800b540:	080294ba 	.word	0x080294ba
 800b544:	080294e8 	.word	0x080294e8
 800b548:	2002bd88 	.word	0x2002bd88
 800b54c:	0802952f 	.word	0x0802952f
 800b550:	2002bd8c 	.word	0x2002bd8c
 800b554:	2002bd90 	.word	0x2002bd90

0800b558 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv>:
        return typedTextId != TYPED_TEXT_INVALID;
 800b558:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
        return typedText.hasValidId() ? calculateTextHeight(typedText.getText(), wildcard, 0) : 0;
 800b55a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b55e:	4299      	cmp	r1, r3
    virtual int16_t getTextHeight()
 800b560:	b570      	push	{r4, r5, r6, lr}
 800b562:	4604      	mov	r4, r0
        return typedText.hasValidId() ? calculateTextHeight(typedText.getText(), wildcard, 0) : 0;
 800b564:	d01e      	beq.n	800b5a4 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x4c>
 800b566:	6803      	ldr	r3, [r0, #0]
 800b568:	6edd      	ldr	r5, [r3, #108]	; 0x6c
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800b56a:	4b0f      	ldr	r3, [pc, #60]	; (800b5a8 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x50>)
 800b56c:	681b      	ldr	r3, [r3, #0]
 800b56e:	b92b      	cbnz	r3, 800b57c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x24>
 800b570:	4b0e      	ldr	r3, [pc, #56]	; (800b5ac <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x54>)
 800b572:	4a0f      	ldr	r2, [pc, #60]	; (800b5b0 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 800b574:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800b576:	480f      	ldr	r0, [pc, #60]	; (800b5b4 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x5c>)
 800b578:	f01c f902 	bl	8027780 <__assert_func>
 800b57c:	4b0e      	ldr	r3, [pc, #56]	; (800b5b8 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x60>)
 800b57e:	881b      	ldrh	r3, [r3, #0]
 800b580:	428b      	cmp	r3, r1
 800b582:	d803      	bhi.n	800b58c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x34>
 800b584:	4b0d      	ldr	r3, [pc, #52]	; (800b5bc <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x64>)
 800b586:	4a0a      	ldr	r2, [pc, #40]	; (800b5b0 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 800b588:	21af      	movs	r1, #175	; 0xaf
 800b58a:	e7f4      	b.n	800b576 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x1e>
        return texts->getText(typedTextId);
 800b58c:	4b0c      	ldr	r3, [pc, #48]	; (800b5c0 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x68>)
 800b58e:	6818      	ldr	r0, [r3, #0]
 800b590:	f7fd fb3a 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 800b594:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800b596:	4601      	mov	r1, r0
 800b598:	46ac      	mov	ip, r5
 800b59a:	4620      	mov	r0, r4
 800b59c:	2300      	movs	r3, #0
    }
 800b59e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return typedText.hasValidId() ? calculateTextHeight(typedText.getText(), wildcard, 0) : 0;
 800b5a2:	4760      	bx	ip
    }
 800b5a4:	2000      	movs	r0, #0
 800b5a6:	bd70      	pop	{r4, r5, r6, pc}
 800b5a8:	2002bd84 	.word	0x2002bd84
 800b5ac:	08029478 	.word	0x08029478
 800b5b0:	080294ba 	.word	0x080294ba
 800b5b4:	080294e8 	.word	0x080294e8
 800b5b8:	2002bd88 	.word	0x2002bd88
 800b5bc:	0802952f 	.word	0x0802952f
 800b5c0:	2002bd90 	.word	0x2002bd90

0800b5c4 <_ZN13WheelSelectorC1Ev>:
#include <touchgfx/events/ClickEvent.hpp>
#include <touchgfx/events/GestureEvent.hpp>
#include <touchgfx/events/DragEvent.hpp>
#include <stdlib.h>

WheelSelector::WheelSelector() :
 800b5c4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800b5c8:	4604      	mov	r4, r0
 800b5ca:	f7f6 ff8b 	bl	80024e4 <_ZN8touchgfx8DrawableC1Ev>
    currentAnimationState(NO_ANIMATION),
    textsIndex(0),
    animationEndedCallback(this, &WheelSelector::animationEndedHandler),
    elementSelectedAction(0)
 800b5ce:	4b4f      	ldr	r3, [pc, #316]	; (800b70c <_ZN13WheelSelectorC1Ev+0x148>)
 800b5d0:	6023      	str	r3, [r4, #0]
 800b5d2:	2500      	movs	r5, #0
 800b5d4:	2303      	movs	r3, #3
 800b5d6:	f104 0630 	add.w	r6, r4, #48	; 0x30
        : Widget(), bitmap(bitmap), alpha(255)
 800b5da:	2226      	movs	r2, #38	; 0x26
 800b5dc:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800b5e0:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800b5e4:	4629      	mov	r1, r5
 800b5e6:	4630      	mov	r0, r6
 800b5e8:	62a5      	str	r5, [r4, #40]	; 0x28
 800b5ea:	f8ad 7004 	strh.w	r7, [sp, #4]
 800b5ee:	f01c fa75 	bl	8027adc <memset>
 800b5f2:	4630      	mov	r0, r6
 800b5f4:	f7f6 ff76 	bl	80024e4 <_ZN8touchgfx8DrawableC1Ev>
 800b5f8:	4b45      	ldr	r3, [pc, #276]	; (800b710 <_ZN13WheelSelectorC1Ev+0x14c>)
 800b5fa:	6323      	str	r3, [r4, #48]	; 0x30
 800b5fc:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b600:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
        Image::setBitmap(bitmap);
 800b604:	4630      	mov	r0, r6
        : Widget(), bitmap(bitmap), alpha(255)
 800b606:	f884 7058 	strb.w	r7, [r4, #88]	; 0x58
        Image::setBitmap(bitmap);
 800b60a:	a901      	add	r1, sp, #4
 800b60c:	f009 fffa 	bl	8015604 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800b610:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800b614:	f7f6 ff66 	bl	80024e4 <_ZN8touchgfx8DrawableC1Ev>
          fadeAnimationEndedCallback(0)
 800b618:	f8df 9108 	ldr.w	r9, [pc, #264]	; 800b724 <_ZN13WheelSelectorC1Ev+0x160>
          moveAnimationEndedCallback(0)
 800b61c:	4f3d      	ldr	r7, [pc, #244]	; (800b714 <_ZN13WheelSelectorC1Ev+0x150>)
 800b61e:	f8c4 5084 	str.w	r5, [r4, #132]	; 0x84
 800b622:	e9c4 5523 	strd	r5, r5, [r4, #140]	; 0x8c
 800b626:	e9c4 5525 	strd	r5, r5, [r4, #148]	; 0x94
 800b62a:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800b62e:	65e7      	str	r7, [r4, #92]	; 0x5c
 800b630:	f884 5088 	strb.w	r5, [r4, #136]	; 0x88
 800b634:	f8a4 508a 	strh.w	r5, [r4, #138]	; 0x8a
 800b638:	f104 06a4 	add.w	r6, r4, #164	; 0xa4
 800b63c:	f604 3a24 	addw	sl, r4, #2852	; 0xb24
 800b640:	46c8      	mov	r8, r9
        : TextArea(), wildcard(0)
 800b642:	4630      	mov	r0, r6
 800b644:	f7f7 fa54 	bl	8002af0 <_ZN8touchgfx8TextAreaC1Ev>
 800b648:	3654      	adds	r6, #84	; 0x54
 800b64a:	f846 5c18 	str.w	r5, [r6, #-24]
 800b64e:	f846 9c54 	str.w	r9, [r6, #-84]
 800b652:	f806 5c14 	strb.w	r5, [r6, #-20]
 800b656:	f826 5c12 	strh.w	r5, [r6, #-18]
 800b65a:	f826 5c10 	strh.w	r5, [r6, #-16]
 800b65e:	f846 5c04 	str.w	r5, [r6, #-4]
 800b662:	4556      	cmp	r6, sl
 800b664:	d1ed      	bne.n	800b642 <_ZN13WheelSelectorC1Ev+0x7e>
 800b666:	f604 40a4 	addw	r0, r4, #3236	; 0xca4
 800b66a:	f7f6 ff3b 	bl	80024e4 <_ZN8touchgfx8DrawableC1Ev>
 800b66e:	f8c4 7ca4 	str.w	r7, [r4, #3236]	; 0xca4
 800b672:	f04f 0300 	mov.w	r3, #0
 800b676:	f504 57bb 	add.w	r7, r4, #5984	; 0x1760
 800b67a:	f8c4 5ccc 	str.w	r5, [r4, #3276]	; 0xccc
 800b67e:	f8a4 5cd2 	strh.w	r5, [r4, #3282]	; 0xcd2
 800b682:	f8c4 5cd4 	str.w	r5, [r4, #3284]	; 0xcd4
 800b686:	f8c4 5cd8 	str.w	r5, [r4, #3288]	; 0xcd8
 800b68a:	f8c4 5cdc 	str.w	r5, [r4, #3292]	; 0xcdc
 800b68e:	f8c4 5ce0 	str.w	r5, [r4, #3296]	; 0xce0
 800b692:	f8c4 5ce4 	str.w	r5, [r4, #3300]	; 0xce4
 800b696:	f8c4 5ce8 	str.w	r5, [r4, #3304]	; 0xce8
 800b69a:	f884 3cd0 	strb.w	r3, [r4, #3280]	; 0xcd0
 800b69e:	f604 45ec 	addw	r5, r4, #3308	; 0xcec
 800b6a2:	370c      	adds	r7, #12
 800b6a4:	2600      	movs	r6, #0
 800b6a6:	4628      	mov	r0, r5
 800b6a8:	f7f7 fa22 	bl	8002af0 <_ZN8touchgfx8TextAreaC1Ev>
 800b6ac:	3554      	adds	r5, #84	; 0x54
 800b6ae:	f845 6c18 	str.w	r6, [r5, #-24]
 800b6b2:	f845 8c54 	str.w	r8, [r5, #-84]
 800b6b6:	f805 6c14 	strb.w	r6, [r5, #-20]
 800b6ba:	f825 6c12 	strh.w	r6, [r5, #-18]
 800b6be:	f825 6c10 	strh.w	r6, [r5, #-16]
 800b6c2:	f845 6c04 	str.w	r6, [r5, #-4]
 800b6c6:	42bd      	cmp	r5, r7
 800b6c8:	d1ed      	bne.n	800b6a6 <_ZN13WheelSelectorC1Ev+0xe2>
 800b6ca:	f641 07ec 	movw	r7, #6380	; 0x18ec
 800b6ce:	19e5      	adds	r5, r4, r7
 800b6d0:	4628      	mov	r0, r5
 800b6d2:	f7f6 ff07 	bl	80024e4 <_ZN8touchgfx8DrawableC1Ev>
 800b6d6:	4b10      	ldr	r3, [pc, #64]	; (800b718 <_ZN13WheelSelectorC1Ev+0x154>)
 800b6d8:	51e3      	str	r3, [r4, r7]
 800b6da:	f641 1324 	movw	r3, #6436	; 0x1924
 800b6de:	62ae      	str	r6, [r5, #40]	; 0x28
 800b6e0:	50e6      	str	r6, [r4, r3]
        : pobject(pobject), pmemfun_1(pmemfun_1)
 800b6e2:	f641 1334 	movw	r3, #6452	; 0x1934
 800b6e6:	18e2      	adds	r2, r4, r3
 800b6e8:	490c      	ldr	r1, [pc, #48]	; (800b71c <_ZN13WheelSelectorC1Ev+0x158>)
 800b6ea:	50e1      	str	r1, [r4, r3]
 800b6ec:	f641 133c 	movw	r3, #6460	; 0x193c
 800b6f0:	6054      	str	r4, [r2, #4]
 800b6f2:	4a0b      	ldr	r2, [pc, #44]	; (800b720 <_ZN13WheelSelectorC1Ev+0x15c>)
 800b6f4:	50e2      	str	r2, [r4, r3]
 800b6f6:	f504 53ca 	add.w	r3, r4, #6464	; 0x1940
{
}
 800b6fa:	4620      	mov	r0, r4
 800b6fc:	601e      	str	r6, [r3, #0]
    elementSelectedAction(0)
 800b6fe:	f641 1344 	movw	r3, #6468	; 0x1944
 800b702:	50e6      	str	r6, [r4, r3]
}
 800b704:	b002      	add	sp, #8
 800b706:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b70a:	bf00      	nop
 800b70c:	0802afc8 	.word	0x0802afc8
 800b710:	0802c52c 	.word	0x0802c52c
 800b714:	0802ae9c 	.word	0x0802ae9c
 800b718:	0802b7d4 	.word	0x0802b7d4
 800b71c:	0802afb0 	.word	0x0802afb0
 800b720:	0800b99b 	.word	0x0800b99b
 800b724:	0802af30 	.word	0x0802af30

0800b728 <_ZN13WheelSelector5setupEtiiiiii>:

void WheelSelector::setup(BitmapId overlay_, int width, int height, int textHeight_, int textYOffsetInOffset_, int overlayX, int overlayY)
{
 800b728:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b72c:	461f      	mov	r7, r3
        touchable = touch;
 800b72e:	2301      	movs	r3, #1
 800b730:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
    setTouchable(true);

    textYOffsetInOffset = textYOffsetInOffset_;
 800b734:	f641 131c 	movw	r3, #6428	; 0x191c
{
 800b738:	4616      	mov	r6, r2

    centerOverlay.setBitmap(Bitmap(overlay_));
 800b73a:	f100 0530 	add.w	r5, r0, #48	; 0x30
    textYOffsetInOffset = textYOffsetInOffset_;
 800b73e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800b740:	50c2      	str	r2, [r0, r3]
{
 800b742:	4604      	mov	r4, r0
    textsWidth = width;
 800b744:	f641 1828 	movw	r8, #6440	; 0x1928
 800b748:	f8ad 1004 	strh.w	r1, [sp, #4]
    centerOverlay.setBitmap(Bitmap(overlay_));
 800b74c:	4628      	mov	r0, r5
 800b74e:	a901      	add	r1, sp, #4
    textsHeight = textHeight_;
 800b750:	f641 1a2c 	movw	sl, #6444	; 0x192c
    centerOverlay.setBitmap(Bitmap(overlay_));
 800b754:	f009 ff56 	bl	8015604 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    textsHeight = textHeight_;
 800b758:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    textsWidth = width;
 800b75a:	f844 6008 	str.w	r6, [r4, r8]
    centerOverlay.setXY(overlayX, overlayY);
 800b75e:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
    textsHeight = textHeight_;
 800b762:	f844 300a 	str.w	r3, [r4, sl]
    centerOverlay.setXY(overlayX, overlayY);
 800b766:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 800b76a:	4628      	mov	r0, r5
 800b76c:	f7f6 fecc 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>

    textContainer.setPosition(0, 0, textsWidth, 0);
 800b770:	f104 095c 	add.w	r9, r4, #92	; 0x5c
 800b774:	f934 b008 	ldrsh.w	fp, [r4, r8]
        setXY(x, y);
 800b778:	2200      	movs	r2, #0
 800b77a:	4611      	mov	r1, r2
 800b77c:	4648      	mov	r0, r9
 800b77e:	f7f6 fec3 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 800b782:	2200      	movs	r2, #0
 800b784:	4659      	mov	r1, fp
 800b786:	4648      	mov	r0, r9
 800b788:	f7f6 fd2b 	bl	80021e2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    textContainer.setMoveAnimationEndedAction(animationEndedCallback);
 800b78c:	f504 53c9 	add.w	r3, r4, #6432	; 0x1920
 800b790:	3314      	adds	r3, #20
        moveAnimationEndedCallback = &callback;
 800b792:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
    add(textContainer);
 800b796:	6823      	ldr	r3, [r4, #0]
 800b798:	4649      	mov	r1, r9
 800b79a:	4620      	mov	r0, r4
 800b79c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800b79e:	4798      	blx	r3

    add(centerOverlay);
 800b7a0:	6823      	ldr	r3, [r4, #0]
 800b7a2:	4629      	mov	r1, r5
 800b7a4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800b7a6:	4620      	mov	r0, r4

    centerTextViewPort.setPosition(0, centerOverlay.getY(), centerOverlay.getWidth(), textsHeight);
 800b7a8:	f504 55c7 	add.w	r5, r4, #6368	; 0x18e0
    add(centerOverlay);
 800b7ac:	4798      	blx	r3
    centerTextViewPort.setPosition(0, centerOverlay.getY(), centerOverlay.getWidth(), textsHeight);
 800b7ae:	350c      	adds	r5, #12
 800b7b0:	f9b4 9038 	ldrsh.w	r9, [r4, #56]	; 0x38
 800b7b4:	f934 a00a 	ldrsh.w	sl, [r4, sl]
        setXY(x, y);
 800b7b8:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800b7bc:	4628      	mov	r0, r5
 800b7be:	2100      	movs	r1, #0
 800b7c0:	f7f6 fea2 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 800b7c4:	4652      	mov	r2, sl
 800b7c6:	4649      	mov	r1, r9
 800b7c8:	4628      	mov	r0, r5
 800b7ca:	f7f6 fd0a 	bl	80021e2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    add(centerTextViewPort);
 800b7ce:	6823      	ldr	r3, [r4, #0]
 800b7d0:	4629      	mov	r1, r5
 800b7d2:	4620      	mov	r0, r4
 800b7d4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800b7d6:	4798      	blx	r3

    centerTextContainerYOffset = centerTextViewPort.getY();
 800b7d8:	f641 03f2 	movw	r3, #6386	; 0x18f2
 800b7dc:	f641 1218 	movw	r2, #6424	; 0x1918
 800b7e0:	5ee3      	ldrsh	r3, [r4, r3]
 800b7e2:	50a3      	str	r3, [r4, r2]

    centerTextContainer.setXY(textContainer.getX(), textContainer.getY() - centerTextContainerYOffset);
 800b7e4:	f8b4 2062 	ldrh.w	r2, [r4, #98]	; 0x62
 800b7e8:	f9b4 1060 	ldrsh.w	r1, [r4, #96]	; 0x60
 800b7ec:	f604 49a4 	addw	r9, r4, #3236	; 0xca4
 800b7f0:	1ad2      	subs	r2, r2, r3
 800b7f2:	b212      	sxth	r2, r2
 800b7f4:	4648      	mov	r0, r9
 800b7f6:	f7f6 fe87 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
    centerTextContainer.setWidth(textsWidth);
 800b7fa:	f854 3008 	ldr.w	r3, [r4, r8]
 800b7fe:	f8a4 3cac 	strh.w	r3, [r4, #3244]	; 0xcac
        rect.height = height;
 800b802:	f04f 0800 	mov.w	r8, #0
    centerTextContainer.setHeight(0);
    centerTextViewPort.add(centerTextContainer);
 800b806:	4649      	mov	r1, r9
 800b808:	4628      	mov	r0, r5
 800b80a:	f8a4 8cae 	strh.w	r8, [r4, #3246]	; 0xcae
 800b80e:	f007 fe2f 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>

    hiddenElements = 0;
 800b812:	f641 1330 	movw	r3, #6448	; 0x1930

    setWidth(width);
 800b816:	b231      	sxth	r1, r6
    hiddenElements = 0;
 800b818:	f844 8003 	str.w	r8, [r4, r3]
    setWidth(width);
 800b81c:	6823      	ldr	r3, [r4, #0]
 800b81e:	4620      	mov	r0, r4
 800b820:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b822:	4798      	blx	r3
    setHeight(height);
 800b824:	6823      	ldr	r3, [r4, #0]
 800b826:	b239      	sxth	r1, r7
 800b828:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b82a:	4620      	mov	r0, r4
 800b82c:	4798      	blx	r3
}
 800b82e:	b003      	add	sp, #12
 800b830:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b834 <_ZN13WheelSelector7addTextEttPKt>:

void WheelSelector::addText(TypedTextId textId, TypedTextId selectedTextId, const Unicode::UnicodeChar* newText)
{
 800b834:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    Unicode::snprintf(textbuf[textsIndex], MAX_TEXT_SIZE, "%s", newText);
 800b838:	f641 1524 	movw	r5, #6436	; 0x1924
{
 800b83c:	4604      	mov	r4, r0
    Unicode::snprintf(textbuf[textsIndex], MAX_TEXT_SIZE, "%s", newText);
 800b83e:	5940      	ldr	r0, [r0, r5]
{
 800b840:	b085      	sub	sp, #20
    Unicode::snprintf(textbuf[textsIndex], MAX_TEXT_SIZE, "%s", newText);
 800b842:	270c      	movs	r7, #12
 800b844:	fb07 4000 	mla	r0, r7, r0, r4
{
 800b848:	4688      	mov	r8, r1
 800b84a:	9201      	str	r2, [sp, #4]
    Unicode::snprintf(textbuf[textsIndex], MAX_TEXT_SIZE, "%s", newText);
 800b84c:	2106      	movs	r1, #6
 800b84e:	4a49      	ldr	r2, [pc, #292]	; (800b974 <_ZN13WheelSelector7addTextEttPKt+0x140>)
 800b850:	f600 3024 	addw	r0, r0, #2852	; 0xb24
 800b854:	f00f fc3a 	bl	801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    texts[textsIndex].setTypedText(TypedText(textId));
 800b858:	5960      	ldr	r0, [r4, r5]
        : typedTextId(id)
 800b85a:	4b47      	ldr	r3, [pc, #284]	; (800b978 <_ZN13WheelSelector7addTextEttPKt+0x144>)
 800b85c:	9302      	str	r3, [sp, #8]
 800b85e:	2654      	movs	r6, #84	; 0x54
 800b860:	fb06 4000 	mla	r0, r6, r0, r4
 800b864:	a902      	add	r1, sp, #8
 800b866:	30a4      	adds	r0, #164	; 0xa4
 800b868:	f8ad 800c 	strh.w	r8, [sp, #12]
 800b86c:	f009 fb97 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    texts[textsIndex].setWildcard(textbuf[textsIndex]);
 800b870:	f854 c005 	ldr.w	ip, [r4, r5]
 800b874:	fb06 f10c 	mul.w	r1, r6, ip
 800b878:	f101 00a4 	add.w	r0, r1, #164	; 0xa4
 800b87c:	fb07 420c 	mla	r2, r7, ip, r4
    texts[textsIndex].setColor(Color::getColorFrom24BitRGB(0xFF, 0xFF, 0xFF));
    texts[textsIndex].setXY(0, textsIndex * textsHeight + textYOffsetInOffset);
 800b880:	f641 182c 	movw	r8, #6444	; 0x192c
    texts[textsIndex].setWildcard(textbuf[textsIndex]);
 800b884:	4420      	add	r0, r4
        this->color = color;
 800b886:	4421      	add	r1, r4
    texts[textsIndex].setXY(0, textsIndex * textsHeight + textYOffsetInOffset);
 800b888:	f641 1a1c 	movw	sl, #6428	; 0x191c
 800b88c:	f04f 3bff 	mov.w	fp, #4294967295
    texts[textsIndex].setWildcard(textbuf[textsIndex]);
 800b890:	f602 3224 	addw	r2, r2, #2852	; 0xb24
        wildcard = value;
 800b894:	63c2      	str	r2, [r0, #60]	; 0x3c
    texts[textsIndex].setXY(0, textsIndex * textsHeight + textYOffsetInOffset);
 800b896:	f854 2008 	ldr.w	r2, [r4, r8]
 800b89a:	f8c1 b0d4 	str.w	fp, [r1, #212]	; 0xd4
 800b89e:	f854 100a 	ldr.w	r1, [r4, sl]
 800b8a2:	fb12 120c 	smlabb	r2, r2, ip, r1
 800b8a6:	b212      	sxth	r2, r2
 800b8a8:	2100      	movs	r1, #0
 800b8aa:	f7f6 fe2d 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
    texts[textsIndex].setWidth(textsWidth);
 800b8ae:	5962      	ldr	r2, [r4, r5]
 800b8b0:	4372      	muls	r2, r6
 800b8b2:	f102 00a4 	add.w	r0, r2, #164	; 0xa4
 800b8b6:	4422      	add	r2, r4
 800b8b8:	f641 1928 	movw	r9, #6440	; 0x1928
 800b8bc:	f8d2 20a4 	ldr.w	r2, [r2, #164]	; 0xa4
 800b8c0:	f934 1009 	ldrsh.w	r1, [r4, r9]
 800b8c4:	6b52      	ldr	r2, [r2, #52]	; 0x34
 800b8c6:	4420      	add	r0, r4
 800b8c8:	4790      	blx	r2
    textContainer.add(texts[textsIndex]);
 800b8ca:	5961      	ldr	r1, [r4, r5]
 800b8cc:	fb06 4101 	mla	r1, r6, r1, r4
 800b8d0:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800b8d4:	31a4      	adds	r1, #164	; 0xa4
 800b8d6:	f007 fdcb 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textContainer.setHeight((textsIndex + 1) * textsHeight);
 800b8da:	5960      	ldr	r0, [r4, r5]
 800b8dc:	f854 1008 	ldr.w	r1, [r4, r8]
 800b8e0:	4b25      	ldr	r3, [pc, #148]	; (800b978 <_ZN13WheelSelector7addTextEttPKt+0x144>)
 800b8e2:	9302      	str	r3, [sp, #8]
 800b8e4:	1c42      	adds	r2, r0, #1
 800b8e6:	fb12 f201 	smulbb	r2, r2, r1

    centerTexts[textsIndex].setTypedText(TypedText(selectedTextId));
 800b8ea:	fb06 4000 	mla	r0, r6, r0, r4
 800b8ee:	9b01      	ldr	r3, [sp, #4]
 800b8f0:	f8a4 2066 	strh.w	r2, [r4, #102]	; 0x66
 800b8f4:	a902      	add	r1, sp, #8
 800b8f6:	f600 40ec 	addw	r0, r0, #3308	; 0xcec
 800b8fa:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b8fe:	f009 fb4e 	bl	8014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    centerTexts[textsIndex].setWildcard(textbuf[textsIndex]);
 800b902:	5962      	ldr	r2, [r4, r5]
    centerTexts[textsIndex].setColor(Color::getColorFrom24BitRGB(0xFF, 0xFF, 0xFF));
    centerTexts[textsIndex].setXY(0, textsIndex * textsHeight + textYOffsetInOffset);
 800b904:	f854 100a 	ldr.w	r1, [r4, sl]
 800b908:	fb06 f302 	mul.w	r3, r6, r2
    centerTexts[textsIndex].setWildcard(textbuf[textsIndex]);
 800b90c:	f603 40ec 	addw	r0, r3, #3308	; 0xcec
 800b910:	4420      	add	r0, r4
 800b912:	fb07 4702 	mla	r7, r7, r2, r4
 800b916:	4423      	add	r3, r4
 800b918:	f607 3724 	addw	r7, r7, #2852	; 0xb24
 800b91c:	63c7      	str	r7, [r0, #60]	; 0x3c
 800b91e:	f8c3 bd1c 	str.w	fp, [r3, #3356]	; 0xd1c
    centerTexts[textsIndex].setXY(0, textsIndex * textsHeight + textYOffsetInOffset);
 800b922:	f854 3008 	ldr.w	r3, [r4, r8]
 800b926:	fb13 1202 	smlabb	r2, r3, r2, r1
 800b92a:	b212      	sxth	r2, r2
 800b92c:	2100      	movs	r1, #0
 800b92e:	f7f6 fdeb 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
    centerTexts[textsIndex].setWidth(textsWidth);
 800b932:	5963      	ldr	r3, [r4, r5]
 800b934:	f934 1009 	ldrsh.w	r1, [r4, r9]
 800b938:	4373      	muls	r3, r6
 800b93a:	f603 40ec 	addw	r0, r3, #3308	; 0xcec
 800b93e:	4423      	add	r3, r4
 800b940:	4420      	add	r0, r4
 800b942:	f8d3 3cec 	ldr.w	r3, [r3, #3308]	; 0xcec
 800b946:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b948:	4798      	blx	r3
    centerTextContainer.add(centerTexts[textsIndex]);
 800b94a:	5961      	ldr	r1, [r4, r5]
 800b94c:	fb06 4101 	mla	r1, r6, r1, r4
 800b950:	f601 41ec 	addw	r1, r1, #3308	; 0xcec
 800b954:	f604 40a4 	addw	r0, r4, #3236	; 0xca4
 800b958:	f007 fd8a 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    centerTextContainer.setHeight((textsIndex + 1) * textsHeight);
 800b95c:	5963      	ldr	r3, [r4, r5]
 800b95e:	f854 2008 	ldr.w	r2, [r4, r8]
 800b962:	3301      	adds	r3, #1
 800b964:	fb12 f203 	smulbb	r2, r2, r3
 800b968:	f8a4 2cae 	strh.w	r2, [r4, #3246]	; 0xcae

    textsIndex++;
 800b96c:	5163      	str	r3, [r4, r5]
}
 800b96e:	b005      	add	sp, #20
 800b970:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b974:	08029581 	.word	0x08029581
 800b978:	0802958c 	.word	0x0802958c

0800b97c <_ZN13WheelSelector15getSelectedItemEv>:
    animateMoveText(calculateSnapPosition(centerTextCenter - accumHeight), duration, EasingEquations::backEaseOut);
}

int WheelSelector::getSelectedItem()
{
    int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 800b97c:	f641 132c 	movw	r3, #6444	; 0x192c
 800b980:	58c2      	ldr	r2, [r0, r3]
 800b982:	f9b0 3036 	ldrsh.w	r3, [r0, #54]	; 0x36
    int foo = centerTextCenter - textContainer.getY();
 800b986:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
    int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 800b98a:	eb02 71d2 	add.w	r1, r2, r2, lsr #31
 800b98e:	eb03 0361 	add.w	r3, r3, r1, asr #1
    int foo = centerTextCenter - textContainer.getY();
 800b992:	1a18      	subs	r0, r3, r0
    return foo / textsHeight;
}
 800b994:	fb90 f0f2 	sdiv	r0, r0, r2
 800b998:	4770      	bx	lr

0800b99a <_ZN13WheelSelector21animationEndedHandlerERKN8touchgfx12MoveAnimatorINS0_9ContainerEEE>:

    hiddenElements = numberOfElementsToHide;
}

void WheelSelector::animationEndedHandler(const MoveAnimator<Container>& source)
{
 800b99a:	b573      	push	{r0, r1, r4, r5, r6, lr}
    currentAnimationState = NO_ANIMATION;

    if (elementSelectedAction != 0 && elementSelectedAction->isValid())
 800b99c:	f641 1544 	movw	r5, #6468	; 0x1944
    currentAnimationState = NO_ANIMATION;
 800b9a0:	2303      	movs	r3, #3
{
 800b9a2:	4604      	mov	r4, r0
    currentAnimationState = NO_ANIMATION;
 800b9a4:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
    if (elementSelectedAction != 0 && elementSelectedAction->isValid())
 800b9a8:	5940      	ldr	r0, [r0, r5]
 800b9aa:	b170      	cbz	r0, 800b9ca <_ZN13WheelSelector21animationEndedHandlerERKN8touchgfx12MoveAnimatorINS0_9ContainerEEE+0x30>
 800b9ac:	6803      	ldr	r3, [r0, #0]
 800b9ae:	68db      	ldr	r3, [r3, #12]
 800b9b0:	4798      	blx	r3
 800b9b2:	b150      	cbz	r0, 800b9ca <_ZN13WheelSelector21animationEndedHandlerERKN8touchgfx12MoveAnimatorINS0_9ContainerEEE+0x30>
    {
        elementSelectedAction->execute(*this, getSelectedItem());
 800b9b4:	5965      	ldr	r5, [r4, r5]
 800b9b6:	682b      	ldr	r3, [r5, #0]
 800b9b8:	4620      	mov	r0, r4
 800b9ba:	689e      	ldr	r6, [r3, #8]
 800b9bc:	f7ff ffde 	bl	800b97c <_ZN13WheelSelector15getSelectedItemEv>
 800b9c0:	aa01      	add	r2, sp, #4
 800b9c2:	9001      	str	r0, [sp, #4]
 800b9c4:	4621      	mov	r1, r4
 800b9c6:	4628      	mov	r0, r5
 800b9c8:	47b0      	blx	r6
    }
}
 800b9ca:	b002      	add	sp, #8
 800b9cc:	bd70      	pop	{r4, r5, r6, pc}

0800b9ce <_ZN13WheelSelector21calculateSnapPositionEi>:
    centerTextContainer.startMoveAnimation(centerTextContainer.getX(), newYPosition - centerTextContainerYOffset, duration, equation, equation);
}

int WheelSelector::calculateSnapPosition(int newYPosition)
{
    int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 800b9ce:	f641 132c 	movw	r3, #6444	; 0x192c
{
 800b9d2:	b510      	push	{r4, lr}
    int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 800b9d4:	f9b0 4036 	ldrsh.w	r4, [r0, #54]	; 0x36
 800b9d8:	58c0      	ldr	r0, [r0, r3]
 800b9da:	eb00 73d0 	add.w	r3, r0, r0, lsr #31
 800b9de:	eb04 0363 	add.w	r3, r4, r3, asr #1
    int index = (centerTextCenter - newYPosition) / textsHeight;
 800b9e2:	1a59      	subs	r1, r3, r1
 800b9e4:	fb91 f1f0 	sdiv	r1, r1, r0
    return centerTextCenter - (textsHeight * index + textsHeight / 2);
}
 800b9e8:	fb00 4011 	mls	r0, r0, r1, r4
 800b9ec:	bd10      	pop	{r4, pc}

0800b9ee <_ZN13WheelSelector29getTextContainerVisibleHeightEv>:
    animateMoveText(calculateSnapPosition(textContainer.getY()), duration, EasingEquations::backEaseInOut);
}

int WheelSelector::getTextContainerVisibleHeight()
{
    return (textsHeight * (textsIndex - hiddenElements - 1));
 800b9ee:	f641 1324 	movw	r3, #6436	; 0x1924
 800b9f2:	f641 1230 	movw	r2, #6448	; 0x1930
 800b9f6:	58c3      	ldr	r3, [r0, r3]
 800b9f8:	5882      	ldr	r2, [r0, r2]
 800b9fa:	1a9b      	subs	r3, r3, r2
 800b9fc:	f641 122c 	movw	r2, #6444	; 0x192c
 800ba00:	3b01      	subs	r3, #1
 800ba02:	5880      	ldr	r0, [r0, r2]
}
 800ba04:	4358      	muls	r0, r3
 800ba06:	4770      	bx	lr

0800ba08 <_ZN13WheelSelector19adjustForBoundariesERi>:
    if (newYPosition > centerOverlay.getY() + cutoff)
 800ba08:	680b      	ldr	r3, [r1, #0]
{
 800ba0a:	b510      	push	{r4, lr}
    if (newYPosition > centerOverlay.getY() + cutoff)
 800ba0c:	f9b0 4036 	ldrsh.w	r4, [r0, #54]	; 0x36
 800ba10:	42a3      	cmp	r3, r4
        newYPosition = centerOverlay.getY() + cutoff;
 800ba12:	bfc8      	it	gt
 800ba14:	600c      	strgt	r4, [r1, #0]
    if (newYPosition < centerOverlay.getY() - (getTextContainerVisibleHeight() + cutoff))
 800ba16:	f7ff ffea 	bl	800b9ee <_ZN13WheelSelector29getTextContainerVisibleHeightEv>
 800ba1a:	680b      	ldr	r3, [r1, #0]
 800ba1c:	1a20      	subs	r0, r4, r0
 800ba1e:	4283      	cmp	r3, r0
        newYPosition = centerOverlay.getY() - (getTextContainerVisibleHeight() + cutoff);
 800ba20:	bfb8      	it	lt
 800ba22:	6008      	strlt	r0, [r1, #0]
}
 800ba24:	bd10      	pop	{r4, pc}

0800ba26 <_ZN13WheelSelector8moveTextEi>:
{
 800ba26:	b513      	push	{r0, r1, r4, lr}
 800ba28:	4604      	mov	r4, r0
 800ba2a:	9101      	str	r1, [sp, #4]
    adjustForBoundaries(newYPosition);
 800ba2c:	a901      	add	r1, sp, #4
 800ba2e:	f7ff ffeb 	bl	800ba08 <_ZN13WheelSelector19adjustForBoundariesERi>
    textContainer.moveTo(textContainer.getX(), newYPosition);
 800ba32:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 800ba36:	f9b4 1060 	ldrsh.w	r1, [r4, #96]	; 0x60
 800ba3a:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800ba3e:	f7f6 fb04 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
    centerTextContainer.moveTo(centerTextContainer.getX(), newYPosition - centerTextContainerYOffset);
 800ba42:	f641 1318 	movw	r3, #6424	; 0x1918
 800ba46:	9a01      	ldr	r2, [sp, #4]
 800ba48:	58e3      	ldr	r3, [r4, r3]
 800ba4a:	f9b4 1ca8 	ldrsh.w	r1, [r4, #3240]	; 0xca8
 800ba4e:	1ad2      	subs	r2, r2, r3
 800ba50:	b212      	sxth	r2, r2
 800ba52:	f604 40a4 	addw	r0, r4, #3236	; 0xca4
 800ba56:	f7f6 faf8 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>
}
 800ba5a:	b002      	add	sp, #8
 800ba5c:	bd10      	pop	{r4, pc}

0800ba5e <_ZN13WheelSelector15handleDragEventERKN8touchgfx9DragEventE>:
    currentAnimationState = ANIMATING_DRAG;
 800ba5e:	2202      	movs	r2, #2
 800ba60:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
     *
     * @return The distance of this drag event.
     */
    int16_t getDeltaY() const
    {
        return dragToY - dragFromY;
 800ba64:	898a      	ldrh	r2, [r1, #12]
 800ba66:	8909      	ldrh	r1, [r1, #8]
 800ba68:	1a52      	subs	r2, r2, r1
    moveText(textContainer.getY() + evt.getDeltaY());
 800ba6a:	f9b0 1062 	ldrsh.w	r1, [r0, #98]	; 0x62
 800ba6e:	fa01 f182 	sxtah	r1, r1, r2
 800ba72:	f7ff bfd8 	b.w	800ba26 <_ZN13WheelSelector8moveTextEi>

0800ba76 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE19cancelMoveAnimationEv>:
     * Cancel move animation and leave the Drawable in its current position. If the
     * animation is not running, nothing is done.
     */
    void cancelMoveAnimation()
    {
        if (moveAnimationRunning)
 800ba76:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    void cancelMoveAnimation()
 800ba7a:	b510      	push	{r4, lr}
 800ba7c:	4604      	mov	r4, r0
        if (moveAnimationRunning)
 800ba7e:	b13b      	cbz	r3, 800ba90 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE19cancelMoveAnimationEv+0x1a>
        {
            Application::getInstance()->unregisterTimerWidget(this);
 800ba80:	f00b fe7c 	bl	801777c <_ZN8touchgfx11Application11getInstanceEv>
 800ba84:	4621      	mov	r1, r4
 800ba86:	f00b feb1 	bl	80177ec <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
            moveAnimationRunning = false;
 800ba8a:	2300      	movs	r3, #0
 800ba8c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        }
    }
 800ba90:	bd10      	pop	{r4, pc}

0800ba92 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv>:

protected:
    /** Execute next step in fade animation and stop the timer if necessary. */
    void nextFadeAnimationStep()
    {
        if (fadeAnimationRunning)
 800ba92:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
    void nextFadeAnimationStep()
 800ba96:	b570      	push	{r4, r5, r6, lr}
 800ba98:	4604      	mov	r4, r0
        if (fadeAnimationRunning)
 800ba9a:	2b00      	cmp	r3, #0
 800ba9c:	d03e      	beq.n	800bb1c <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv+0x8a>
        {
            fadeAnimationCounter++;
 800ba9e:	f8b0 0042 	ldrh.w	r0, [r0, #66]	; 0x42
            if (fadeAnimationCounter >= fadeAnimationDelay)
 800baa2:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
            fadeAnimationCounter++;
 800baa6:	3001      	adds	r0, #1
 800baa8:	b280      	uxth	r0, r0
            if (fadeAnimationCounter >= fadeAnimationDelay)
 800baaa:	4298      	cmp	r0, r3
            fadeAnimationCounter++;
 800baac:	f8a4 0042 	strh.w	r0, [r4, #66]	; 0x42
            if (fadeAnimationCounter >= fadeAnimationDelay)
 800bab0:	d334      	bcc.n	800bb1c <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv+0x8a>
            {
                // Adjust the used animationCounter for the startup delay
                uint32_t actualAnimationCounter = fadeAnimationCounter - fadeAnimationDelay;

                int16_t deltaAlpha = (int16_t)fadeAnimationAlphaEquation(actualAnimationCounter, 0, fadeAnimationEndAlpha - fadeAnimationStartAlpha, fadeAnimationDuration);
 800bab2:	f8b4 1048 	ldrh.w	r1, [r4, #72]	; 0x48
 800bab6:	f8b4 204a 	ldrh.w	r2, [r4, #74]	; 0x4a
 800baba:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 800babc:	1a52      	subs	r2, r2, r1
 800babe:	1ac0      	subs	r0, r0, r3
 800bac0:	b212      	sxth	r2, r2
 800bac2:	2100      	movs	r1, #0
 800bac4:	f8b4 3046 	ldrh.w	r3, [r4, #70]	; 0x46
 800bac8:	b280      	uxth	r0, r0
 800baca:	47a8      	blx	r5

                T::setAlpha(fadeAnimationStartAlpha + deltaAlpha);
 800bacc:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 800bad0:	4418      	add	r0, r3
        alpha = newAlpha;
 800bad2:	f884 0036 	strb.w	r0, [r4, #54]	; 0x36
                T::invalidate();
 800bad6:	4620      	mov	r0, r4
 800bad8:	f00c fdf8 	bl	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>

                if (fadeAnimationCounter >= (uint32_t)(fadeAnimationDelay + fadeAnimationDuration))
 800badc:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800bae0:	f8b4 1046 	ldrh.w	r1, [r4, #70]	; 0x46
 800bae4:	f8b4 2042 	ldrh.w	r2, [r4, #66]	; 0x42
 800bae8:	440b      	add	r3, r1
 800baea:	429a      	cmp	r2, r3
 800baec:	d316      	bcc.n	800bb1c <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv+0x8a>
                {
                    // End of animation
                    fadeAnimationRunning = false;
 800baee:	2300      	movs	r3, #0
 800baf0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
                    fadeAnimationDuration = 0;
 800baf4:	f8a4 3046 	strh.w	r3, [r4, #70]	; 0x46
                    Application::getInstance()->unregisterTimerWidget(this);
 800baf8:	f00b fe40 	bl	801777c <_ZN8touchgfx11Application11getInstanceEv>
 800bafc:	4621      	mov	r1, r4
 800bafe:	f00b fe75 	bl	80177ec <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>

                    if (fadeAnimationEndedCallback && fadeAnimationEndedCallback->isValid())
 800bb02:	6d20      	ldr	r0, [r4, #80]	; 0x50
 800bb04:	b150      	cbz	r0, 800bb1c <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv+0x8a>
 800bb06:	6803      	ldr	r3, [r0, #0]
 800bb08:	68db      	ldr	r3, [r3, #12]
 800bb0a:	4798      	blx	r3
 800bb0c:	b130      	cbz	r0, 800bb1c <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv+0x8a>
                    {
                        fadeAnimationEndedCallback->execute(*this);
 800bb0e:	6d20      	ldr	r0, [r4, #80]	; 0x50
 800bb10:	6803      	ldr	r3, [r0, #0]
 800bb12:	4621      	mov	r1, r4
 800bb14:	689b      	ldr	r3, [r3, #8]
                    }
                }
            }
        }
    }
 800bb16:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                        fadeAnimationEndedCallback->execute(*this);
 800bb1a:	4718      	bx	r3
    }
 800bb1c:	bd70      	pop	{r4, r5, r6, pc}

0800bb1e <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE15handleTickEventEv>:
    virtual void handleTickEvent()
 800bb1e:	b508      	push	{r3, lr}
        nextFadeAnimationStep();
 800bb20:	f7ff ffb7 	bl	800ba92 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv>
    }
 800bb24:	bd08      	pop	{r3, pc}

0800bb26 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE18startFadeAnimationEhtPFstsstE>:
    void startFadeAnimation(uint8_t endAlpha, uint16_t duration, EasingEquation alphaProgressionEquation = &EasingEquations::linearEaseNone)
 800bb26:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bb28:	461d      	mov	r5, r3
        if (!fadeAnimationRunning)
 800bb2a:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
    void startFadeAnimation(uint8_t endAlpha, uint16_t duration, EasingEquation alphaProgressionEquation = &EasingEquations::linearEaseNone)
 800bb2e:	4604      	mov	r4, r0
 800bb30:	460f      	mov	r7, r1
 800bb32:	4616      	mov	r6, r2
        if (!fadeAnimationRunning)
 800bb34:	b923      	cbnz	r3, 800bb40 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE18startFadeAnimationEhtPFstsstE+0x1a>
            Application::getInstance()->registerTimerWidget(this);
 800bb36:	f00b fe21 	bl	801777c <_ZN8touchgfx11Application11getInstanceEv>
 800bb3a:	4621      	mov	r1, r4
 800bb3c:	f00b fe24 	bl	8017788 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
        fadeAnimationCounter = 0;
 800bb40:	2300      	movs	r3, #0
 800bb42:	f8a4 3042 	strh.w	r3, [r4, #66]	; 0x42
        fadeAnimationStartAlpha = T::getAlpha();
 800bb46:	f894 3036 	ldrb.w	r3, [r4, #54]	; 0x36
 800bb4a:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
        fadeAnimationDuration = duration;
 800bb4e:	f8a4 6046 	strh.w	r6, [r4, #70]	; 0x46
        fadeAnimationRunning = true;
 800bb52:	2301      	movs	r3, #1
 800bb54:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        if (fadeAnimationDelay == 0 && fadeAnimationDuration == 0)
 800bb58:	6c63      	ldr	r3, [r4, #68]	; 0x44
        fadeAnimationEndAlpha = endAlpha;
 800bb5a:	f8a4 704a 	strh.w	r7, [r4, #74]	; 0x4a
        fadeAnimationAlphaEquation = alphaProgressionEquation;
 800bb5e:	64e5      	str	r5, [r4, #76]	; 0x4c
        if (fadeAnimationDelay == 0 && fadeAnimationDuration == 0)
 800bb60:	b913      	cbnz	r3, 800bb68 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE18startFadeAnimationEhtPFstsstE+0x42>
            nextFadeAnimationStep(); // Set end alpha and shut down
 800bb62:	4620      	mov	r0, r4
 800bb64:	f7ff ff95 	bl	800ba92 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv>
    }
 800bb68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800bb6c <_ZN13WheelSelector18hideBottomElementsEi>:
{
 800bb6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    for (int i = 0; i < textsIndex - numberOfElementsToHide; i++)
 800bb70:	f500 58c9 	add.w	r8, r0, #6432	; 0x1920
            texts[i].startFadeAnimation(255, 12);
 800bb74:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800bc04 <_ZN13WheelSelector18hideBottomElementsEi+0x98>
{
 800bb78:	4606      	mov	r6, r0
 800bb7a:	460f      	mov	r7, r1
 800bb7c:	f100 04a4 	add.w	r4, r0, #164	; 0xa4
    for (int i = 0; i < textsIndex - numberOfElementsToHide; i++)
 800bb80:	f04f 0900 	mov.w	r9, #0
 800bb84:	f108 0804 	add.w	r8, r8, #4
 800bb88:	f8d8 5000 	ldr.w	r5, [r8]
 800bb8c:	1bed      	subs	r5, r5, r7
 800bb8e:	454d      	cmp	r5, r9
 800bb90:	dc1d      	bgt.n	800bbce <_ZN13WheelSelector18hideBottomElementsEi+0x62>
 800bb92:	2454      	movs	r4, #84	; 0x54
            texts[i].startFadeAnimation(0, 12);
 800bb94:	f8df 906c 	ldr.w	r9, [pc, #108]	; 800bc04 <_ZN13WheelSelector18hideBottomElementsEi+0x98>
 800bb98:	fb04 6405 	mla	r4, r4, r5, r6
    for (int i = textsIndex - numberOfElementsToHide; i < textsIndex; i++)
 800bb9c:	f8d8 3000 	ldr.w	r3, [r8]
 800bba0:	42ab      	cmp	r3, r5
 800bba2:	dd29      	ble.n	800bbf8 <_ZN13WheelSelector18hideBottomElementsEi+0x8c>
        if (texts[i].getAlpha() == 255)
 800bba4:	f894 30da 	ldrb.w	r3, [r4, #218]	; 0xda
 800bba8:	2bff      	cmp	r3, #255	; 0xff
 800bbaa:	f104 00a4 	add.w	r0, r4, #164	; 0xa4
 800bbae:	d10b      	bne.n	800bbc8 <_ZN13WheelSelector18hideBottomElementsEi+0x5c>
            texts[i].startFadeAnimation(0, 12);
 800bbb0:	464b      	mov	r3, r9
 800bbb2:	220c      	movs	r2, #12
 800bbb4:	2100      	movs	r1, #0
 800bbb6:	f7ff ffb6 	bl	800bb26 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE18startFadeAnimationEhtPFstsstE>
            centerTexts[i].startFadeAnimation(0, 12);
 800bbba:	464b      	mov	r3, r9
 800bbbc:	220c      	movs	r2, #12
 800bbbe:	2100      	movs	r1, #0
 800bbc0:	f604 40ec 	addw	r0, r4, #3308	; 0xcec
 800bbc4:	f7ff ffaf 	bl	800bb26 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE18startFadeAnimationEhtPFstsstE>
    for (int i = textsIndex - numberOfElementsToHide; i < textsIndex; i++)
 800bbc8:	3501      	adds	r5, #1
 800bbca:	3454      	adds	r4, #84	; 0x54
 800bbcc:	e7e6      	b.n	800bb9c <_ZN13WheelSelector18hideBottomElementsEi+0x30>
        if (texts[i].getAlpha() != 255)
 800bbce:	f894 3036 	ldrb.w	r3, [r4, #54]	; 0x36
 800bbd2:	2bff      	cmp	r3, #255	; 0xff
 800bbd4:	d00c      	beq.n	800bbf0 <_ZN13WheelSelector18hideBottomElementsEi+0x84>
            texts[i].startFadeAnimation(255, 12);
 800bbd6:	4653      	mov	r3, sl
 800bbd8:	220c      	movs	r2, #12
 800bbda:	21ff      	movs	r1, #255	; 0xff
 800bbdc:	4620      	mov	r0, r4
 800bbde:	f7ff ffa2 	bl	800bb26 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE18startFadeAnimationEhtPFstsstE>
            centerTexts[i].startFadeAnimation(255, 12);
 800bbe2:	4653      	mov	r3, sl
 800bbe4:	220c      	movs	r2, #12
 800bbe6:	21ff      	movs	r1, #255	; 0xff
 800bbe8:	f604 4048 	addw	r0, r4, #3144	; 0xc48
 800bbec:	f7ff ff9b 	bl	800bb26 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE18startFadeAnimationEhtPFstsstE>
    for (int i = 0; i < textsIndex - numberOfElementsToHide; i++)
 800bbf0:	f109 0901 	add.w	r9, r9, #1
 800bbf4:	3454      	adds	r4, #84	; 0x54
 800bbf6:	e7c7      	b.n	800bb88 <_ZN13WheelSelector18hideBottomElementsEi+0x1c>
    hiddenElements = numberOfElementsToHide;
 800bbf8:	f641 1330 	movw	r3, #6448	; 0x1930
 800bbfc:	50f7      	str	r7, [r6, r3]
}
 800bbfe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800bc02:	bf00      	nop
 800bc04:	08019095 	.word	0x08019095

0800bc08 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv>:

protected:
    /** Execute next step in move animation and stop the timer if the animation has finished. */
    void nextMoveAnimationStep()
    {
        if (moveAnimationRunning)
 800bc08:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    void nextMoveAnimationStep()
 800bc0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bc10:	4604      	mov	r4, r0
        if (moveAnimationRunning)
 800bc12:	2b00      	cmp	r3, #0
 800bc14:	d040      	beq.n	800bc98 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv+0x90>
        {
            moveAnimationCounter++;
 800bc16:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
            if (moveAnimationCounter >= moveAnimationDelay)
 800bc18:	8e05      	ldrh	r5, [r0, #48]	; 0x30
            moveAnimationCounter++;
 800bc1a:	3301      	adds	r3, #1
 800bc1c:	b29b      	uxth	r3, r3
            if (moveAnimationCounter >= moveAnimationDelay)
 800bc1e:	42ab      	cmp	r3, r5
            moveAnimationCounter++;
 800bc20:	85c3      	strh	r3, [r0, #46]	; 0x2e
            if (moveAnimationCounter >= moveAnimationDelay)
 800bc22:	d339      	bcc.n	800bc98 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv+0x90>
            {
                // Adjust the used animationCounter for the startup delay
                uint32_t actualAnimationCounter = moveAnimationCounter - moveAnimationDelay;

                int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 800bc24:	1b5b      	subs	r3, r3, r5
 800bc26:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 800bc28:	6bc6      	ldr	r6, [r0, #60]	; 0x3c
 800bc2a:	b29d      	uxth	r5, r3
 800bc2c:	8e83      	ldrh	r3, [r0, #52]	; 0x34
 800bc2e:	1ad2      	subs	r2, r2, r3
 800bc30:	b212      	sxth	r2, r2
 800bc32:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 800bc34:	2100      	movs	r1, #0
 800bc36:	4628      	mov	r0, r5
 800bc38:	47b0      	blx	r6
                int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 800bc3a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bc3c:	8f62      	ldrh	r2, [r4, #58]	; 0x3a
 800bc3e:	6c27      	ldr	r7, [r4, #64]	; 0x40
 800bc40:	1ad2      	subs	r2, r2, r3
                int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 800bc42:	4606      	mov	r6, r0
                int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 800bc44:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 800bc46:	b212      	sxth	r2, r2
 800bc48:	2100      	movs	r1, #0
 800bc4a:	4628      	mov	r0, r5
 800bc4c:	47b8      	blx	r7

                T::moveTo(moveAnimationStartX + deltaX, moveAnimationStartY + deltaY);
 800bc4e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800bc50:	8ea1      	ldrh	r1, [r4, #52]	; 0x34
 800bc52:	4402      	add	r2, r0
 800bc54:	4431      	add	r1, r6
 800bc56:	b212      	sxth	r2, r2
 800bc58:	b209      	sxth	r1, r1
 800bc5a:	4620      	mov	r0, r4
 800bc5c:	f7f6 f9f5 	bl	800204a <_ZN8touchgfx8Drawable6moveToEss>

                if (moveAnimationCounter >= (uint32_t)(moveAnimationDelay + moveAnimationDuration))
 800bc60:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800bc62:	8e61      	ldrh	r1, [r4, #50]	; 0x32
 800bc64:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800bc66:	440b      	add	r3, r1
 800bc68:	429a      	cmp	r2, r3
 800bc6a:	d315      	bcc.n	800bc98 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv+0x90>
                {
                    // End of animation
                    moveAnimationRunning = false;
 800bc6c:	2300      	movs	r3, #0
 800bc6e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
                    moveAnimationCounter = 0;
 800bc72:	85e3      	strh	r3, [r4, #46]	; 0x2e
                    Application::getInstance()->unregisterTimerWidget(this);
 800bc74:	f00b fd82 	bl	801777c <_ZN8touchgfx11Application11getInstanceEv>
 800bc78:	4621      	mov	r1, r4
 800bc7a:	f00b fdb7 	bl	80177ec <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>

                    if (moveAnimationEndedCallback && moveAnimationEndedCallback->isValid())
 800bc7e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800bc80:	b150      	cbz	r0, 800bc98 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv+0x90>
 800bc82:	6803      	ldr	r3, [r0, #0]
 800bc84:	68db      	ldr	r3, [r3, #12]
 800bc86:	4798      	blx	r3
 800bc88:	b130      	cbz	r0, 800bc98 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv+0x90>
                    {
                        moveAnimationEndedCallback->execute(*this);
 800bc8a:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800bc8c:	6803      	ldr	r3, [r0, #0]
 800bc8e:	4621      	mov	r1, r4
 800bc90:	689b      	ldr	r3, [r3, #8]
                    }
                }
            }
        }
    }
 800bc92:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
                        moveAnimationEndedCallback->execute(*this);
 800bc96:	4718      	bx	r3
    }
 800bc98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bc9c <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE15handleTickEventEv>:
    virtual void handleTickEvent()
 800bc9c:	b508      	push	{r3, lr}
        nextMoveAnimationStep();
 800bc9e:	f7ff ffb3 	bl	800bc08 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv>
    }
 800bca2:	bd08      	pop	{r3, pc}

0800bca4 <_ZN13WheelSelector15animateMoveTextEiiPFstsstE>:
{
 800bca4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bca8:	461e      	mov	r6, r3
        if (!moveAnimationRunning)
 800bcaa:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
    textContainer.startMoveAnimation(textContainer.getX(), newYPosition, duration, equation, equation);
 800bcae:	f9b0 a060 	ldrsh.w	sl, [r0, #96]	; 0x60
{
 800bcb2:	4604      	mov	r4, r0
 800bcb4:	460d      	mov	r5, r1
    textContainer.startMoveAnimation(textContainer.getX(), newYPosition, duration, equation, equation);
 800bcb6:	f100 085c 	add.w	r8, r0, #92	; 0x5c
 800bcba:	fa0f f981 	sxth.w	r9, r1
 800bcbe:	b297      	uxth	r7, r2
 800bcc0:	b923      	cbnz	r3, 800bccc <_ZN13WheelSelector15animateMoveTextEiiPFstsstE+0x28>
            Application::getInstance()->registerTimerWidget(this);
 800bcc2:	f00b fd5b 	bl	801777c <_ZN8touchgfx11Application11getInstanceEv>
 800bcc6:	4641      	mov	r1, r8
 800bcc8:	f00b fd5e 	bl	8017788 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
        moveAnimationCounter = 0;
 800bccc:	2300      	movs	r3, #0
 800bcce:	f8a4 308a 	strh.w	r3, [r4, #138]	; 0x8a
        moveAnimationStartX = T::getX();
 800bcd2:	f8b4 3060 	ldrh.w	r3, [r4, #96]	; 0x60
 800bcd6:	f8a4 3090 	strh.w	r3, [r4, #144]	; 0x90
        moveAnimationStartY = T::getY();
 800bcda:	f8b4 3062 	ldrh.w	r3, [r4, #98]	; 0x62
 800bcde:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        moveAnimationDuration = duration;
 800bce2:	f8a4 708e 	strh.w	r7, [r4, #142]	; 0x8e
        moveAnimationRunning = true;
 800bce6:	2301      	movs	r3, #1
 800bce8:	f884 3088 	strb.w	r3, [r4, #136]	; 0x88
        if (moveAnimationDelay == 0 && moveAnimationDuration == 0)
 800bcec:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
        moveAnimationEndX = endX;
 800bcf0:	f8a4 a094 	strh.w	sl, [r4, #148]	; 0x94
        moveAnimationYEquation = yProgressionEquation;
 800bcf4:	e9c4 6626 	strd	r6, r6, [r4, #152]	; 0x98
        moveAnimationEndY = endY;
 800bcf8:	f8a4 9096 	strh.w	r9, [r4, #150]	; 0x96
        if (moveAnimationDelay == 0 && moveAnimationDuration == 0)
 800bcfc:	b913      	cbnz	r3, 800bd04 <_ZN13WheelSelector15animateMoveTextEiiPFstsstE+0x60>
            nextMoveAnimationStep(); // Set end position and shut down
 800bcfe:	4640      	mov	r0, r8
 800bd00:	f7ff ff82 	bl	800bc08 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv>
    centerTextContainer.startMoveAnimation(centerTextContainer.getX(), newYPosition - centerTextContainerYOffset, duration, equation, equation);
 800bd04:	f641 1318 	movw	r3, #6424	; 0x1918
 800bd08:	f9b4 9ca8 	ldrsh.w	r9, [r4, #3240]	; 0xca8
 800bd0c:	58e1      	ldr	r1, [r4, r3]
        if (!moveAnimationRunning)
 800bd0e:	f894 3cd0 	ldrb.w	r3, [r4, #3280]	; 0xcd0
 800bd12:	1a6d      	subs	r5, r5, r1
 800bd14:	f604 48a4 	addw	r8, r4, #3236	; 0xca4
 800bd18:	b22d      	sxth	r5, r5
 800bd1a:	b923      	cbnz	r3, 800bd26 <_ZN13WheelSelector15animateMoveTextEiiPFstsstE+0x82>
            Application::getInstance()->registerTimerWidget(this);
 800bd1c:	f00b fd2e 	bl	801777c <_ZN8touchgfx11Application11getInstanceEv>
 800bd20:	4641      	mov	r1, r8
 800bd22:	f00b fd31 	bl	8017788 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
        moveAnimationCounter = 0;
 800bd26:	2300      	movs	r3, #0
 800bd28:	f8a4 3cd2 	strh.w	r3, [r4, #3282]	; 0xcd2
        moveAnimationStartX = T::getX();
 800bd2c:	f8b4 3ca8 	ldrh.w	r3, [r4, #3240]	; 0xca8
 800bd30:	f8a4 3cd8 	strh.w	r3, [r4, #3288]	; 0xcd8
        moveAnimationStartY = T::getY();
 800bd34:	f8b4 3caa 	ldrh.w	r3, [r4, #3242]	; 0xcaa
 800bd38:	f8a4 3cda 	strh.w	r3, [r4, #3290]	; 0xcda
        moveAnimationDuration = duration;
 800bd3c:	f8a4 7cd6 	strh.w	r7, [r4, #3286]	; 0xcd6
        moveAnimationRunning = true;
 800bd40:	2301      	movs	r3, #1
 800bd42:	f884 3cd0 	strb.w	r3, [r4, #3280]	; 0xcd0
        if (moveAnimationDelay == 0 && moveAnimationDuration == 0)
 800bd46:	f8d4 3cd4 	ldr.w	r3, [r4, #3284]	; 0xcd4
        moveAnimationEndX = endX;
 800bd4a:	f8a4 9cdc 	strh.w	r9, [r4, #3292]	; 0xcdc
        moveAnimationEndY = endY;
 800bd4e:	f8a4 5cde 	strh.w	r5, [r4, #3294]	; 0xcde
        moveAnimationXEquation = xProgressionEquation;
 800bd52:	f8c4 6ce0 	str.w	r6, [r4, #3296]	; 0xce0
        moveAnimationYEquation = yProgressionEquation;
 800bd56:	f8c4 6ce4 	str.w	r6, [r4, #3300]	; 0xce4
        if (moveAnimationDelay == 0 && moveAnimationDuration == 0)
 800bd5a:	b913      	cbnz	r3, 800bd62 <_ZN13WheelSelector15animateMoveTextEiiPFstsstE+0xbe>
            nextMoveAnimationStep(); // Set end position and shut down
 800bd5c:	4640      	mov	r0, r8
 800bd5e:	f7ff ff53 	bl	800bc08 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv>
}
 800bd62:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0800bd68 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>:
    int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 800bd68:	f641 132c 	movw	r3, #6444	; 0x192c
{
 800bd6c:	b570      	push	{r4, r5, r6, lr}
    int accumHeight = textsHeight * index + textsHeight / 2;
 800bd6e:	58c3      	ldr	r3, [r0, r3]
    int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 800bd70:	f9b0 5036 	ldrsh.w	r5, [r0, #54]	; 0x36
    animateMoveText(calculateSnapPosition(centerTextCenter - accumHeight), duration, EasingEquations::backEaseOut);
 800bd74:	fb03 5111 	mls	r1, r3, r1, r5
{
 800bd78:	4604      	mov	r4, r0
    animateMoveText(calculateSnapPosition(centerTextCenter - accumHeight), duration, EasingEquations::backEaseOut);
 800bd7a:	f7ff fe28 	bl	800b9ce <_ZN13WheelSelector21calculateSnapPositionEi>
 800bd7e:	4b03      	ldr	r3, [pc, #12]	; (800bd8c <_ZN13WheelSelector15setSelectedItemEiiPFstsstE+0x24>)
 800bd80:	4601      	mov	r1, r0
 800bd82:	4620      	mov	r0, r4
}
 800bd84:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    animateMoveText(calculateSnapPosition(centerTextCenter - accumHeight), duration, EasingEquations::backEaseOut);
 800bd88:	f7ff bf8c 	b.w	800bca4 <_ZN13WheelSelector15animateMoveTextEiiPFstsstE>
 800bd8c:	08018f6d 	.word	0x08018f6d

0800bd90 <_ZN13WheelSelector18handleGestureEventERKN8touchgfx12GestureEventE>:
    if (evt.getType() == GestureEvent::SWIPE_VERTICAL)
 800bd90:	790b      	ldrb	r3, [r1, #4]
 800bd92:	2b01      	cmp	r3, #1
{
 800bd94:	b513      	push	{r0, r1, r4, lr}
 800bd96:	4604      	mov	r4, r0
    if (evt.getType() == GestureEvent::SWIPE_VERTICAL)
 800bd98:	d121      	bne.n	800bdde <_ZN13WheelSelector18handleGestureEventERKN8touchgfx12GestureEventE+0x4e>
        currentAnimationState = ANIMATING_GESTURE;
 800bd9a:	2300      	movs	r3, #0
        int newYPosition = textContainer.getY() + delta;
 800bd9c:	f9b0 2062 	ldrsh.w	r2, [r0, #98]	; 0x62
        currentAnimationState = ANIMATING_GESTURE;
 800bda0:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
        int newYPosition = textContainer.getY() + delta;
 800bda4:	88cb      	ldrh	r3, [r1, #6]
 800bda6:	2105      	movs	r1, #5
 800bda8:	fb13 2301 	smlabb	r3, r3, r1, r2
        adjustForBoundaries(newYPosition);
 800bdac:	a901      	add	r1, sp, #4
        int newYPosition = textContainer.getY() + delta;
 800bdae:	9301      	str	r3, [sp, #4]
        adjustForBoundaries(newYPosition);
 800bdb0:	f7ff fe2a 	bl	800ba08 <_ZN13WheelSelector19adjustForBoundariesERi>
        int distanceToMove = newYPosition - textContainer.getY();
 800bdb4:	9901      	ldr	r1, [sp, #4]
 800bdb6:	f9b4 2062 	ldrsh.w	r2, [r4, #98]	; 0x62
 800bdba:	1a8a      	subs	r2, r1, r2
        int distanceToMoveABS = (distanceToMove > 0) ? distanceToMove : -distanceToMove;
 800bdbc:	2a00      	cmp	r2, #0
        animateMoveText(calculateSnapPosition(newYPosition), duration, EasingEquations::backEaseOut);
 800bdbe:	4620      	mov	r0, r4
        int distanceToMoveABS = (distanceToMove > 0) ? distanceToMove : -distanceToMove;
 800bdc0:	bfb8      	it	lt
 800bdc2:	4252      	neglt	r2, r2
        int duration = distanceToMoveABS / 10;
 800bdc4:	230a      	movs	r3, #10
 800bdc6:	fbb2 f2f3 	udiv	r2, r2, r3
        animateMoveText(calculateSnapPosition(newYPosition), duration, EasingEquations::backEaseOut);
 800bdca:	f7ff fe00 	bl	800b9ce <_ZN13WheelSelector21calculateSnapPositionEi>
 800bdce:	2a03      	cmp	r2, #3
 800bdd0:	4601      	mov	r1, r0
 800bdd2:	4b04      	ldr	r3, [pc, #16]	; (800bde4 <_ZN13WheelSelector18handleGestureEventERKN8touchgfx12GestureEventE+0x54>)
 800bdd4:	bfb8      	it	lt
 800bdd6:	2203      	movlt	r2, #3
 800bdd8:	4620      	mov	r0, r4
 800bdda:	f7ff ff63 	bl	800bca4 <_ZN13WheelSelector15animateMoveTextEiiPFstsstE>
}
 800bdde:	b002      	add	sp, #8
 800bde0:	bd10      	pop	{r4, pc}
 800bde2:	bf00      	nop
 800bde4:	08018f6d 	.word	0x08018f6d

0800bde8 <_ZN13WheelSelector4snapEv>:
{
 800bde8:	b510      	push	{r4, lr}
    animateMoveText(calculateSnapPosition(textContainer.getY()), duration, EasingEquations::backEaseInOut);
 800bdea:	f9b0 1062 	ldrsh.w	r1, [r0, #98]	; 0x62
{
 800bdee:	4604      	mov	r4, r0
    animateMoveText(calculateSnapPosition(textContainer.getY()), duration, EasingEquations::backEaseInOut);
 800bdf0:	f7ff fded 	bl	800b9ce <_ZN13WheelSelector21calculateSnapPositionEi>
 800bdf4:	4b03      	ldr	r3, [pc, #12]	; (800be04 <_ZN13WheelSelector4snapEv+0x1c>)
 800bdf6:	4601      	mov	r1, r0
 800bdf8:	2218      	movs	r2, #24
 800bdfa:	4620      	mov	r0, r4
}
 800bdfc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    animateMoveText(calculateSnapPosition(textContainer.getY()), duration, EasingEquations::backEaseInOut);
 800be00:	f7ff bf50 	b.w	800bca4 <_ZN13WheelSelector15animateMoveTextEiiPFstsstE>
 800be04:	08018fe9 	.word	0x08018fe9

0800be08 <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE>:
    if (evt.getType() == ClickEvent::PRESSED)
 800be08:	790b      	ldrb	r3, [r1, #4]
{
 800be0a:	b570      	push	{r4, r5, r6, lr}
 800be0c:	4604      	mov	r4, r0
 800be0e:	460d      	mov	r5, r1
    if (evt.getType() == ClickEvent::PRESSED)
 800be10:	b9c3      	cbnz	r3, 800be44 <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0x3c>
        if (currentAnimationState != NO_ANIMATION)
 800be12:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800be16:	2b03      	cmp	r3, #3
 800be18:	d006      	beq.n	800be28 <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0x20>
            textContainer.cancelMoveAnimation();
 800be1a:	305c      	adds	r0, #92	; 0x5c
 800be1c:	f7ff fe2b 	bl	800ba76 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE19cancelMoveAnimationEv>
            centerTextContainer.cancelMoveAnimation();
 800be20:	f604 40a4 	addw	r0, r4, #3236	; 0xca4
 800be24:	f7ff fe27 	bl	800ba76 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE19cancelMoveAnimationEv>
        xClick = evt.getX();
 800be28:	f641 1348 	movw	r3, #6472	; 0x1948
 800be2c:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 800be30:	52e2      	strh	r2, [r4, r3]
        yClick = evt.getY();
 800be32:	f641 134a 	movw	r3, #6474	; 0x194a
 800be36:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800be3a:	52e2      	strh	r2, [r4, r3]
        currentAnimationState = NO_ANIMATION;
 800be3c:	2303      	movs	r3, #3
 800be3e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
}
 800be42:	bd70      	pop	{r4, r5, r6, pc}
    else if (evt.getType() == ClickEvent::RELEASED)
 800be44:	2b01      	cmp	r3, #1
 800be46:	d1fc      	bne.n	800be42 <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0x3a>
        if ((currentAnimationState == NO_ANIMATION) ||
 800be48:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800be4c:	2b03      	cmp	r3, #3
 800be4e:	d017      	beq.n	800be80 <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0x78>
 800be50:	2b02      	cmp	r3, #2
 800be52:	d1f6      	bne.n	800be42 <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0x3a>
                (currentAnimationState == ANIMATING_DRAG && abs(xClick - evt.getX()) < 10 && abs(yClick - evt.getY()) < 10))
 800be54:	f641 1348 	movw	r3, #6472	; 0x1948
 800be58:	f9b1 2006 	ldrsh.w	r2, [r1, #6]
 800be5c:	5ec3      	ldrsh	r3, [r0, r3]
 800be5e:	1a9b      	subs	r3, r3, r2
 800be60:	2b00      	cmp	r3, #0
 800be62:	bfb8      	it	lt
 800be64:	425b      	neglt	r3, r3
 800be66:	2b09      	cmp	r3, #9
 800be68:	dc2d      	bgt.n	800bec6 <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0xbe>
 800be6a:	f641 134a 	movw	r3, #6474	; 0x194a
 800be6e:	f9b1 2008 	ldrsh.w	r2, [r1, #8]
 800be72:	5ec3      	ldrsh	r3, [r0, r3]
 800be74:	1a9b      	subs	r3, r3, r2
 800be76:	2b00      	cmp	r3, #0
 800be78:	bfb8      	it	lt
 800be7a:	425b      	neglt	r3, r3
 800be7c:	2b09      	cmp	r3, #9
 800be7e:	dc22      	bgt.n	800bec6 <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0xbe>
            int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 800be80:	f641 132c 	movw	r3, #6444	; 0x192c
 800be84:	f9b4 5036 	ldrsh.w	r5, [r4, #54]	; 0x36
 800be88:	58e3      	ldr	r3, [r4, r3]
            int newYPosition = calculateSnapPosition(textContainer.getY() - (yClick - centerTextCenter));
 800be8a:	f9b4 1062 	ldrsh.w	r1, [r4, #98]	; 0x62
            int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 800be8e:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 800be92:	eb05 0563 	add.w	r5, r5, r3, asr #1
            int newYPosition = calculateSnapPosition(textContainer.getY() - (yClick - centerTextCenter));
 800be96:	f641 134a 	movw	r3, #6474	; 0x194a
 800be9a:	4620      	mov	r0, r4
 800be9c:	5ee3      	ldrsh	r3, [r4, r3]
 800be9e:	1b5b      	subs	r3, r3, r5
 800bea0:	1ac9      	subs	r1, r1, r3
 800bea2:	f7ff fd94 	bl	800b9ce <_ZN13WheelSelector21calculateSnapPositionEi>
 800bea6:	4601      	mov	r1, r0
            if (newYPosition + getTextContainerVisibleHeight() < centerTextCenter ||
 800bea8:	4620      	mov	r0, r4
 800beaa:	f7ff fda0 	bl	800b9ee <_ZN13WheelSelector29getTextContainerVisibleHeightEv>
 800beae:	4408      	add	r0, r1
 800beb0:	4285      	cmp	r5, r0
 800beb2:	dcc6      	bgt.n	800be42 <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0x3a>
 800beb4:	428d      	cmp	r5, r1
 800beb6:	dbc4      	blt.n	800be42 <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0x3a>
                animateMoveText(newYPosition, duration, EasingEquations::backEaseOut);
 800beb8:	4620      	mov	r0, r4
 800beba:	4b05      	ldr	r3, [pc, #20]	; (800bed0 <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0xc8>)
}
 800bebc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                animateMoveText(newYPosition, duration, EasingEquations::backEaseOut);
 800bec0:	221a      	movs	r2, #26
 800bec2:	f7ff beef 	b.w	800bca4 <_ZN13WheelSelector15animateMoveTextEiiPFstsstE>
            snap();
 800bec6:	4620      	mov	r0, r4
}
 800bec8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            snap();
 800becc:	f7ff bf8c 	b.w	800bde8 <_ZN13WheelSelector4snapEv>
 800bed0:	08018f6d 	.word	0x08018f6d

0800bed4 <gmtime>:
#include "time.h"

extern struct tm __tm_store;

struct tm * gmtime(const time_p * timeptr)
{
 800bed4:	b510      	push	{r4, lr}
	gmtime_r(timeptr, &__tm_store);
 800bed6:	4c03      	ldr	r4, [pc, #12]	; (800bee4 <gmtime+0x10>)
 800bed8:	4621      	mov	r1, r4
 800beda:	f000 f805 	bl	800bee8 <gmtime_r>
	return &__tm_store;
}
 800bede:	4620      	mov	r0, r4
 800bee0:	bd10      	pop	{r4, pc}
 800bee2:	bf00      	nop
 800bee4:	2002c204 	.word	0x2002c204

0800bee8 <gmtime_r>:
    ldiv_t          lresult;
    div_t           result;
    uint16_t        days, n, leapyear, years;

    time_p timer1 = *timer;
    if(timer1 < UNIX_OFFSET){
 800bee8:	4b48      	ldr	r3, [pc, #288]	; (800c00c <gmtime_r+0x124>)
    time_p timer1 = *timer;
 800beea:	6802      	ldr	r2, [r0, #0]
{
 800beec:	b530      	push	{r4, r5, lr}
    if(timer1 < UNIX_OFFSET){
 800beee:	429a      	cmp	r2, r3
    	timer1 = UNIX_OFFSET;
    }
    else{
    	timer1 = timer1 - UNIX_OFFSET;
 800bef0:	bf8c      	ite	hi
 800bef2:	4b47      	ldrhi	r3, [pc, #284]	; (800c010 <gmtime_r+0x128>)
    	timer1 = UNIX_OFFSET;
 800bef4:	4b47      	ldrls	r3, [pc, #284]	; (800c014 <gmtime_r+0x12c>)
{
 800bef6:	460d      	mov	r5, r1
    }
    /* break down timer into whole and fractional parts of 1 day */
    days = timer1 / 86400UL;
 800bef8:	4947      	ldr	r1, [pc, #284]	; (800c018 <gmtime_r+0x130>)
{
 800befa:	b085      	sub	sp, #20
    	timer1 = timer1 - UNIX_OFFSET;
 800befc:	bf88      	it	hi
 800befe:	189b      	addhi	r3, r3, r2
    fract = timer1 % 86400UL;

    /*
            Extract hour, minute, and second from the fractional day
        */
    lresult = ldiv(fract, 60L);
 800bf00:	4668      	mov	r0, sp
    days = timer1 / 86400UL;
 800bf02:	fbb3 f4f1 	udiv	r4, r3, r1
    lresult = ldiv(fract, 60L);
 800bf06:	223c      	movs	r2, #60	; 0x3c
 800bf08:	fb01 3114 	mls	r1, r1, r4, r3
 800bf0c:	f01b fdb0 	bl	8027a70 <ldiv>
    timeptr->tm_sec = lresult.rem;
 800bf10:	9b01      	ldr	r3, [sp, #4]
    result = div(lresult.quot, 60);
 800bf12:	9900      	ldr	r1, [sp, #0]
    timeptr->tm_sec = lresult.rem;
 800bf14:	702b      	strb	r3, [r5, #0]
    result = div(lresult.quot, 60);
 800bf16:	223c      	movs	r2, #60	; 0x3c
 800bf18:	a802      	add	r0, sp, #8
 800bf1a:	f01b fc63 	bl	80277e4 <div>
    timeptr->tm_min = result.rem;
 800bf1e:	9b03      	ldr	r3, [sp, #12]
 800bf20:	706b      	strb	r3, [r5, #1]
    timeptr->tm_hour = result.quot;
 800bf22:	9b02      	ldr	r3, [sp, #8]
 800bf24:	70ab      	strb	r3, [r5, #2]

    /* Determine day of week ( the epoch was a Saturday ) */
    n = days + SATURDAY;
 800bf26:	1da3      	adds	r3, r4, #6
 800bf28:	b29b      	uxth	r3, r3
    n %= 7;
 800bf2a:	2207      	movs	r2, #7
 800bf2c:	fbb3 f2f2 	udiv	r2, r3, r2
 800bf30:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
 800bf34:	1a9b      	subs	r3, r3, r2
    timeptr->tm_wday = n;
 800bf36:	712b      	strb	r3, [r5, #4]
        * Using this property, we can easily 'map' the time stamp into the leap cycles, quickly
        * deriving the year and day of year, along with the fact of whether it is a leap year.
        */

    /* map into a 100 year cycle */
    lresult = ldiv((long) days, 36525L);
 800bf38:	4621      	mov	r1, r4
 800bf3a:	f648 62ad 	movw	r2, #36525	; 0x8ead
 800bf3e:	4668      	mov	r0, sp
 800bf40:	f01b fd96 	bl	8027a70 <ldiv>
    years = 100 * lresult.quot;
 800bf44:	9c00      	ldr	r4, [sp, #0]

    /* map into a 4 year cycle */
    lresult = ldiv(lresult.rem, 1461L);
 800bf46:	9901      	ldr	r1, [sp, #4]
    years = 100 * lresult.quot;
 800bf48:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 800bf4c:	eb04 0484 	add.w	r4, r4, r4, lsl #2
    lresult = ldiv(lresult.rem, 1461L);
 800bf50:	f240 52b5 	movw	r2, #1461	; 0x5b5
 800bf54:	4668      	mov	r0, sp
 800bf56:	f01b fd8b 	bl	8027a70 <ldiv>
    years = 100 * lresult.quot;
 800bf5a:	00a4      	lsls	r4, r4, #2
    years += 4 * lresult.quot;
 800bf5c:	9b00      	ldr	r3, [sp, #0]
    days = lresult.rem;
 800bf5e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
    years = 100 * lresult.quot;
 800bf62:	b2a4      	uxth	r4, r4
    years += 4 * lresult.quot;
 800bf64:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800bf68:	b2a4      	uxth	r4, r4
    if (years > 100)
 800bf6a:	2c64      	cmp	r4, #100	; 0x64
 800bf6c:	d92b      	bls.n	800bfc6 <gmtime_r+0xde>
        days++;
 800bf6e:	3101      	adds	r1, #1
 800bf70:	b289      	uxth	r1, r1

    /*
         * 'years' is now at the first year of a 4 year leap cycle, which will always be a leap year,
         * unless it is 100. 'days' is now an index into that cycle.
         */
    leapyear = 1;
 800bf72:	2301      	movs	r3, #1
    if (years == 100)
        leapyear = 0;

    /* compute length, in days, of first year of this cycle */
    n = 364 + leapyear;
 800bf74:	2b00      	cmp	r3, #0
 800bf76:	f240 126d 	movw	r2, #365	; 0x16d

    /*
     * if the number of days remaining is greater than the length of the
     * first year, we make one more division.
     */
    if (days > n) {
 800bf7a:	bf14      	ite	ne
 800bf7c:	4610      	movne	r0, r2
 800bf7e:	f44f 70b6 	moveq.w	r0, #364	; 0x16c
 800bf82:	4288      	cmp	r0, r1
 800bf84:	d20a      	bcs.n	800bf9c <gmtime_r+0xb4>
        days -= leapyear;
 800bf86:	1ac9      	subs	r1, r1, r3
        leapyear = 0;
        result = div(days, 365);
 800bf88:	b289      	uxth	r1, r1
 800bf8a:	a802      	add	r0, sp, #8
 800bf8c:	f01b fc2a 	bl	80277e4 <div>
        years += result.quot;
 800bf90:	9b02      	ldr	r3, [sp, #8]
        days = result.rem;
 800bf92:	f8bd 100c 	ldrh.w	r1, [sp, #12]
        years += result.quot;
 800bf96:	441c      	add	r4, r3
 800bf98:	b2a4      	uxth	r4, r4
        leapyear = 0;
 800bf9a:	2300      	movs	r3, #0
    /*
            Given the year, day of year, and leap year indicator, we can break down the
            month and day of month. If the day of year is less than 59 (or 60 if a leap year), then
            we handle the Jan/Feb month pair as an exception.
        */
    n = 59 + leapyear;
 800bf9c:	333b      	adds	r3, #59	; 0x3b
    timeptr->tm_year = 100 + years;
 800bf9e:	3464      	adds	r4, #100	; 0x64
    if (days < n) {
 800bfa0:	4299      	cmp	r1, r3
    timeptr->tm_year = 100 + years;
 800bfa2:	80ec      	strh	r4, [r5, #6]
    timeptr->tm_yday = days;
 800bfa4:	8129      	strh	r1, [r5, #8]
    if (days < n) {
 800bfa6:	d212      	bcs.n	800bfce <gmtime_r+0xe6>
        /* special case: Jan/Feb month pair */
        result = div(days, 31);
 800bfa8:	221f      	movs	r2, #31
 800bfaa:	a802      	add	r0, sp, #8
 800bfac:	f01b fc1a 	bl	80277e4 <div>
        timeptr->tm_mon = result.quot;
 800bfb0:	9b02      	ldr	r3, [sp, #8]
        result = div(result.rem, 61);
        timeptr->tm_mon += result.quot * 2;

        /* map into a month */
        result = div(result.rem, 31);
        timeptr->tm_mon += result.quot;
 800bfb2:	716b      	strb	r3, [r5, #5]
        timeptr->tm_mday = result.rem;
 800bfb4:	9b03      	ldr	r3, [sp, #12]
 800bfb6:	70eb      	strb	r3, [r5, #3]
    }

    /*
            Cleanup and return
        */
    timeptr->tm_isdst = 0;  /* gmt is never in DST */
 800bfb8:	2300      	movs	r3, #0
 800bfba:	816b      	strh	r3, [r5, #10]
    timeptr->tm_mday++; /* tm_mday is 1 based */
 800bfbc:	78eb      	ldrb	r3, [r5, #3]
 800bfbe:	3301      	adds	r3, #1
 800bfc0:	70eb      	strb	r3, [r5, #3]

}
 800bfc2:	b005      	add	sp, #20
 800bfc4:	bd30      	pop	{r4, r5, pc}
        leapyear = 0;
 800bfc6:	bf14      	ite	ne
 800bfc8:	2301      	movne	r3, #1
 800bfca:	2300      	moveq	r3, #0
 800bfcc:	e7d2      	b.n	800bf74 <gmtime_r+0x8c>
        days -= n;
 800bfce:	1ac9      	subs	r1, r1, r3
        result = div(days, 153);
 800bfd0:	2299      	movs	r2, #153	; 0x99
 800bfd2:	b289      	uxth	r1, r1
 800bfd4:	a802      	add	r0, sp, #8
 800bfd6:	f01b fc05 	bl	80277e4 <div>
        timeptr->tm_mon = 2 + result.quot * 5;
 800bfda:	9b02      	ldr	r3, [sp, #8]
        result = div(result.rem, 61);
 800bfdc:	9903      	ldr	r1, [sp, #12]
        timeptr->tm_mon = 2 + result.quot * 5;
 800bfde:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800bfe2:	3302      	adds	r3, #2
 800bfe4:	716b      	strb	r3, [r5, #5]
        result = div(result.rem, 61);
 800bfe6:	223d      	movs	r2, #61	; 0x3d
 800bfe8:	a802      	add	r0, sp, #8
 800bfea:	f01b fbfb 	bl	80277e4 <div>
        timeptr->tm_mon += result.quot * 2;
 800bfee:	796b      	ldrb	r3, [r5, #5]
 800bff0:	9a02      	ldr	r2, [sp, #8]
        result = div(result.rem, 31);
 800bff2:	9903      	ldr	r1, [sp, #12]
        timeptr->tm_mon += result.quot * 2;
 800bff4:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800bff8:	716b      	strb	r3, [r5, #5]
        result = div(result.rem, 31);
 800bffa:	221f      	movs	r2, #31
 800bffc:	a802      	add	r0, sp, #8
 800bffe:	f01b fbf1 	bl	80277e4 <div>
        timeptr->tm_mon += result.quot;
 800c002:	796b      	ldrb	r3, [r5, #5]
 800c004:	9a02      	ldr	r2, [sp, #8]
 800c006:	4413      	add	r3, r2
 800c008:	e7d3      	b.n	800bfb2 <gmtime_r+0xca>
 800c00a:	bf00      	nop
 800c00c:	386d437f 	.word	0x386d437f
 800c010:	c792bc80 	.word	0xc792bc80
 800c014:	386d4380 	.word	0x386d4380
 800c018:	00015180 	.word	0x00015180

0800c01c <mk_gmtime>:

#include "time.h"

time_p
mk_gmtime(const struct tm * timeptr)
{
 800c01c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

    /*
        Determine elapsed whole days since the epoch to the beginning of this year. Since our epoch is
        at a conjunction of the leap cycles, we can do this rather quickly.
        */
    n = timeptr->tm_year - 100;
 800c01e:	88c7      	ldrh	r7, [r0, #6]
 800c020:	f1a7 0364 	sub.w	r3, r7, #100	; 0x64
 800c024:	b21b      	sxth	r3, r3
{
 800c026:	4605      	mov	r5, r0
    leaps = 0;
    if (n) {
 800c028:	b1cb      	cbz	r3, 800c05e <mk_gmtime+0x42>
        m = n - 1;
 800c02a:	f1a7 0465 	sub.w	r4, r7, #101	; 0x65
 800c02e:	b224      	sxth	r4, r4
        leaps = m / 4;
 800c030:	2c00      	cmp	r4, #0
 800c032:	4621      	mov	r1, r4
 800c034:	bfb8      	it	lt
 800c036:	1ce1      	addlt	r1, r4, #3
 800c038:	108a      	asrs	r2, r1, #2
        leaps -= m / (100);
        leaps++;
 800c03a:	3201      	adds	r2, #1
        leaps -= m / (100);
 800c03c:	2664      	movs	r6, #100	; 0x64
 800c03e:	fb94 f4f6 	sdiv	r4, r4, r6
        leaps++;
 800c042:	1b12      	subs	r2, r2, r4
 800c044:	b212      	sxth	r2, r2
    }
    tmp = 365UL * n + leaps;
 800c046:	f240 166d 	movw	r6, #365	; 0x16d
 800c04a:	fb13 2606 	smlabb	r6, r3, r6, r2
                account for a 'phase change' between July and August (153 days after March 1).
            */
    d = timeptr->tm_mday - 1;   /* tm_mday is one based */

    /* handle Jan/Feb as a special case */
    if (timeptr->tm_mon < 2) {
 800c04e:	796b      	ldrb	r3, [r5, #5]
    d = timeptr->tm_mday - 1;   /* tm_mday is one based */
 800c050:	78ec      	ldrb	r4, [r5, #3]
    if (timeptr->tm_mon < 2) {
 800c052:	2b01      	cmp	r3, #1
 800c054:	d818      	bhi.n	800c088 <mk_gmtime+0x6c>
        if (timeptr->tm_mon)
 800c056:	b923      	cbnz	r3, 800c062 <mk_gmtime+0x46>
    d = timeptr->tm_mday - 1;   /* tm_mday is one based */
 800c058:	1e63      	subs	r3, r4, #1
        /*
         * if n is odd, we are in the second half of the
         * month pair
         */
        if (n & 1)
            d += 31;
 800c05a:	b21b      	sxth	r3, r3
 800c05c:	e003      	b.n	800c066 <mk_gmtime+0x4a>
    leaps = 0;
 800c05e:	461a      	mov	r2, r3
 800c060:	e7f1      	b.n	800c046 <mk_gmtime+0x2a>
            d += 31;
 800c062:	f104 031e 	add.w	r3, r4, #30

    /* compute 'fractional' day */
    tmp = timeptr->tm_hour;
    tmp *= ONE_HOUR;
    tmp += timeptr->tm_min * 60UL;
    tmp += timeptr->tm_sec;
 800c066:	782c      	ldrb	r4, [r5, #0]

    ret += tmp;

    return (ret + UNIX_OFFSET);
 800c068:	4a1b      	ldr	r2, [pc, #108]	; (800c0d8 <mk_gmtime+0xbc>)
    tmp = timeptr->tm_hour;
 800c06a:	78a8      	ldrb	r0, [r5, #2]
    return (ret + UNIX_OFFSET);
 800c06c:	7869      	ldrb	r1, [r5, #1]
 800c06e:	4422      	add	r2, r4
 800c070:	f44f 6461 	mov.w	r4, #3600	; 0xe10
 800c074:	fb04 2000 	mla	r0, r4, r0, r2
 800c078:	223c      	movs	r2, #60	; 0x3c
 800c07a:	fb12 0201 	smlabb	r2, r2, r1, r0
}
 800c07e:	4817      	ldr	r0, [pc, #92]	; (800c0dc <mk_gmtime+0xc0>)
    tmp += d;
 800c080:	4433      	add	r3, r6
}
 800c082:	fb00 2003 	mla	r0, r0, r3, r2
 800c086:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        n = 59 + is_leap_year(timeptr->tm_year + 1900);
 800c088:	f207 706c 	addw	r0, r7, #1900	; 0x76c
 800c08c:	b280      	uxth	r0, r0
 800c08e:	f006 f977 	bl	8012380 <is_leap_year>
        d += n;
 800c092:	f104 033a 	add.w	r3, r4, #58	; 0x3a
 800c096:	181c      	adds	r4, r3, r0
        n = timeptr->tm_mon - MARCH;
 800c098:	796b      	ldrb	r3, [r5, #5]
 800c09a:	3b02      	subs	r3, #2
        if (n > (JULY - MARCH))
 800c09c:	2b04      	cmp	r3, #4
        n = timeptr->tm_mon - MARCH;
 800c09e:	b21a      	sxth	r2, r3
        n %= 5;
 800c0a0:	f04f 0305 	mov.w	r3, #5
 800c0a4:	fb92 f3f3 	sdiv	r3, r2, r3
 800c0a8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800c0ac:	eba2 0203 	sub.w	r2, r2, r3
        m = n / 2;
 800c0b0:	eb02 73d2 	add.w	r3, r2, r2, lsr #31
        d += n;
 800c0b4:	b2a4      	uxth	r4, r4
        m = n / 2;
 800c0b6:	ea4f 0363 	mov.w	r3, r3, asr #1
            d += 153;
 800c0ba:	bfc8      	it	gt
 800c0bc:	3499      	addgt	r4, #153	; 0x99
        m *= 61;
 800c0be:	ebc3 1103 	rsb	r1, r3, r3, lsl #4
            d += 153;
 800c0c2:	bfc8      	it	gt
 800c0c4:	b2a4      	uxthgt	r4, r4
        m *= 61;
 800c0c6:	eb03 0381 	add.w	r3, r3, r1, lsl #2
        d += m;
 800c0ca:	4423      	add	r3, r4
 800c0cc:	b29b      	uxth	r3, r3
        if (n & 1)
 800c0ce:	07d2      	lsls	r2, r2, #31
            d += 31;
 800c0d0:	bf48      	it	mi
 800c0d2:	331f      	addmi	r3, #31
 800c0d4:	e7c1      	b.n	800c05a <mk_gmtime+0x3e>
 800c0d6:	bf00      	nop
 800c0d8:	386d4380 	.word	0x386d4380
 800c0dc:	00015180 	.word	0x00015180

0800c0e0 <mktime>:

extern int16_t      (*__dst_ptr) (const time_p *, int32_t *);

time_p
mktime(struct tm * timeptr)
{
 800c0e0:	b513      	push	{r0, r1, r4, lr}
 800c0e2:	4604      	mov	r4, r0
	time_p          ret;

	ret = mk_gmtime(timeptr);
 800c0e4:	f7ff ff9a 	bl	800c01c <mk_gmtime>

	if (timeptr->tm_isdst < 0) {
 800c0e8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
	ret = mk_gmtime(timeptr);
 800c0ec:	9001      	str	r0, [sp, #4]
	if (timeptr->tm_isdst < 0) {
 800c0ee:	2b00      	cmp	r3, #0
 800c0f0:	da06      	bge.n	800c100 <mktime+0x20>
		if (__dst_ptr)
 800c0f2:	4b0a      	ldr	r3, [pc, #40]	; (800c11c <mktime+0x3c>)
 800c0f4:	681b      	ldr	r3, [r3, #0]
 800c0f6:	b11b      	cbz	r3, 800c100 <mktime+0x20>
			timeptr->tm_isdst = __dst_ptr(&ret, &__utc_offset);
 800c0f8:	4909      	ldr	r1, [pc, #36]	; (800c120 <mktime+0x40>)
 800c0fa:	a801      	add	r0, sp, #4
 800c0fc:	4798      	blx	r3
 800c0fe:	8160      	strh	r0, [r4, #10]
	}
	if (timeptr->tm_isdst > 0)
 800c100:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800c104:	2a00      	cmp	r2, #0
		ret -= timeptr->tm_isdst;
 800c106:	bfc2      	ittt	gt
 800c108:	9b01      	ldrgt	r3, [sp, #4]
 800c10a:	1a9b      	subgt	r3, r3, r2
 800c10c:	9301      	strgt	r3, [sp, #4]

	ret -= __utc_offset;
 800c10e:	4b04      	ldr	r3, [pc, #16]	; (800c120 <mktime+0x40>)

	//localtime_r(&ret, timeptr);

	return ret;
}
 800c110:	9801      	ldr	r0, [sp, #4]
	ret -= __utc_offset;
 800c112:	681b      	ldr	r3, [r3, #0]
}
 800c114:	1ac0      	subs	r0, r0, r3
 800c116:	b002      	add	sp, #8
 800c118:	bd10      	pop	{r4, pc}
 800c11a:	bf00      	nop
 800c11c:	2002c200 	.word	0x2002c200
 800c120:	2002c210 	.word	0x2002c210

0800c124 <ft6x06_Reset>:
  */
void ft6x06_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT6206 IC */
}
 800c124:	4770      	bx	lr

0800c126 <ft6x06_TS_ITStatus>:
  */
uint8_t ft6x06_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT6206 */
  return 0;
}
 800c126:	2000      	movs	r0, #0
 800c128:	4770      	bx	lr

0800c12a <ft6x06_ReadID>:
{
 800c12a:	b510      	push	{r4, lr}
 800c12c:	4604      	mov	r4, r0
  TS_IO_Init();
 800c12e:	f000 fb7d 	bl	800c82c <TS_IO_Init>
  return (TS_IO_Read(DeviceAddr, FT6206_CHIP_ID_REG));
 800c132:	21a8      	movs	r1, #168	; 0xa8
 800c134:	b2e0      	uxtb	r0, r4
 800c136:	f000 fb93 	bl	800c860 <TS_IO_Read>
}
 800c13a:	b280      	uxth	r0, r0
 800c13c:	bd10      	pop	{r4, pc}
	...

0800c140 <ft6x06_TS_DetectTouch>:
{
 800c140:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 800c142:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 800c144:	2102      	movs	r1, #2
 800c146:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 800c148:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 800c14c:	f000 fb88 	bl	800c860 <TS_IO_Read>
 800c150:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT6206_TD_STAT_MASK;
 800c154:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800c158:	f003 030f 	and.w	r3, r3, #15
 800c15c:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT6206_MAX_DETECTABLE_TOUCH)
 800c160:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800c164:	2b02      	cmp	r3, #2
    nbTouch = 0;
 800c166:	bf88      	it	hi
 800c168:	f88d 4007 	strbhi.w	r4, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 800c16c:	4b04      	ldr	r3, [pc, #16]	; (800c180 <ft6x06_TS_DetectTouch+0x40>)
 800c16e:	f89d 2007 	ldrb.w	r2, [sp, #7]
  return(nbTouch);
 800c172:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 800c176:	705a      	strb	r2, [r3, #1]
  ft6x06_handle.currActiveTouchIdx = 0;
 800c178:	2200      	movs	r2, #0
 800c17a:	709a      	strb	r2, [r3, #2]
}
 800c17c:	b002      	add	sp, #8
 800c17e:	bd10      	pop	{r4, pc}
 800c180:	2001adbe 	.word	0x2001adbe

0800c184 <ft6x06_TS_GetXY>:
{
 800c184:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 800c186:	4c15      	ldr	r4, [pc, #84]	; (800c1dc <ft6x06_TS_GetXY+0x58>)
{
 800c188:	4615      	mov	r5, r2
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 800c18a:	78a3      	ldrb	r3, [r4, #2]
 800c18c:	7862      	ldrb	r2, [r4, #1]
 800c18e:	429a      	cmp	r2, r3
{
 800c190:	460e      	mov	r6, r1
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 800c192:	d91f      	bls.n	800c1d4 <ft6x06_TS_GetXY+0x50>
    switch(ft6x06_handle.currActiveTouchIdx)
 800c194:	b303      	cbz	r3, 800c1d8 <ft6x06_TS_GetXY+0x54>
      regAddress = FT6206_P2_XH_REG; 
 800c196:	2b01      	cmp	r3, #1
 800c198:	bf14      	ite	ne
 800c19a:	2100      	movne	r1, #0
 800c19c:	2109      	moveq	r1, #9
    TS_IO_ReadMultiple(DeviceAddr, regAddress, dataxy, sizeof(dataxy)); 
 800c19e:	2304      	movs	r3, #4
 800c1a0:	eb0d 0203 	add.w	r2, sp, r3
 800c1a4:	b2c0      	uxtb	r0, r0
 800c1a6:	f000 fb77 	bl	800c898 <TS_IO_ReadMultiple>
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 800c1aa:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800c1ae:	f89d 2005 	ldrb.w	r2, [sp, #5]
 800c1b2:	021b      	lsls	r3, r3, #8
 800c1b4:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 800c1b8:	4313      	orrs	r3, r2
 800c1ba:	8033      	strh	r3, [r6, #0]
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 800c1bc:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800c1c0:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800c1c4:	021b      	lsls	r3, r3, #8
 800c1c6:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 800c1ca:	4313      	orrs	r3, r2
 800c1cc:	802b      	strh	r3, [r5, #0]
    ft6x06_handle.currActiveTouchIdx++;
 800c1ce:	78a3      	ldrb	r3, [r4, #2]
 800c1d0:	3301      	adds	r3, #1
 800c1d2:	70a3      	strb	r3, [r4, #2]
}
 800c1d4:	b002      	add	sp, #8
 800c1d6:	bd70      	pop	{r4, r5, r6, pc}
    switch(ft6x06_handle.currActiveTouchIdx)
 800c1d8:	2103      	movs	r1, #3
 800c1da:	e7e0      	b.n	800c19e <ft6x06_TS_GetXY+0x1a>
 800c1dc:	2001adbe 	.word	0x2001adbe

0800c1e0 <ft6x06_TS_EnableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 800c1e0:	2201      	movs	r2, #1
 800c1e2:	21a4      	movs	r1, #164	; 0xa4
 800c1e4:	b2c0      	uxtb	r0, r0
 800c1e6:	f000 bb23 	b.w	800c830 <TS_IO_Write>

0800c1ea <ft6x06_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 800c1ea:	2200      	movs	r2, #0
 800c1ec:	21a4      	movs	r1, #164	; 0xa4
 800c1ee:	b2c0      	uxtb	r0, r0
 800c1f0:	f000 bb1e 	b.w	800c830 <TS_IO_Write>

0800c1f4 <ft6x06_TS_Start>:
  ft6x06_TS_DisableIT(DeviceAddr);
 800c1f4:	f7ff bff9 	b.w	800c1ea <ft6x06_TS_DisableIT>

0800c1f8 <ft6x06_TS_ClearIT>:
 800c1f8:	4770      	bx	lr
	...

0800c1fc <ft6x06_Init>:
{  
 800c1fc:	b410      	push	{r4}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
  {
    if(ft6x06[idx] == DeviceAddr)
 800c1fe:	4b09      	ldr	r3, [pc, #36]	; (800c224 <ft6x06_Init+0x28>)
 800c200:	781a      	ldrb	r2, [r3, #0]
 800c202:	4290      	cmp	r0, r2
 800c204:	d00a      	beq.n	800c21c <ft6x06_Init+0x20>
 800c206:	7859      	ldrb	r1, [r3, #1]
 800c208:	4288      	cmp	r0, r1
 800c20a:	d007      	beq.n	800c21c <ft6x06_Init+0x20>
 800c20c:	b10a      	cbz	r2, 800c212 <ft6x06_Init+0x16>
 800c20e:	b929      	cbnz	r1, 800c21c <ft6x06_Init+0x20>
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 800c210:	2201      	movs	r2, #1
      ft6x06[empty] = DeviceAddr;
 800c212:	5498      	strb	r0, [r3, r2]
}
 800c214:	f85d 4b04 	ldr.w	r4, [sp], #4
      TS_IO_Init(); 
 800c218:	f000 bb08 	b.w	800c82c <TS_IO_Init>
}
 800c21c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c220:	4770      	bx	lr
 800c222:	bf00      	nop
 800c224:	2001adbc 	.word	0x2001adbc

0800c228 <OTM8009A_Init>:
  * @param  hdsi_eval : pointer on DSI configuration structure
  * @param  hdsivideo_handle : pointer on DSI video mode configuration structure
  * @retval Status
  */
uint8_t OTM8009A_Init(uint32_t ColorCoding, uint32_t orientation)
{
 800c228:	b538      	push	{r3, r4, r5, lr}
 800c22a:	4604      	mov	r4, r0
 800c22c:	460d      	mov	r5, r1
  /* Enable CMD2 to access vendor specific commands                               */
  /* Enter in command 2 mode and set EXTC to enable address shift function (0x00) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800c22e:	2000      	movs	r0, #0
 800c230:	49cb      	ldr	r1, [pc, #812]	; (800c560 <OTM8009A_Init+0x338>)
 800c232:	f7f4 fc07 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData1);
 800c236:	49cb      	ldr	r1, [pc, #812]	; (800c564 <OTM8009A_Init+0x33c>)
 800c238:	2003      	movs	r0, #3
 800c23a:	f7f4 fc03 	bl	8000a44 <DSI_IO_WriteCmd>

  /* Enter ORISE Command 2 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2); /* Shift address to 0x80 */
 800c23e:	49ca      	ldr	r1, [pc, #808]	; (800c568 <OTM8009A_Init+0x340>)
 800c240:	2000      	movs	r0, #0
 800c242:	f7f4 fbff 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData2);
 800c246:	49c9      	ldr	r1, [pc, #804]	; (800c56c <OTM8009A_Init+0x344>)
 800c248:	2002      	movs	r0, #2
 800c24a:	f7f4 fbfb 	bl	8000a44 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////
  /* SD_PCH_CTRL - 0xC480h - 129th parameter - Default 0x00          */
  /* Set SD_PT                                                       */
  /* -> Source output level during porch and non-display area to GND */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 800c24e:	49c6      	ldr	r1, [pc, #792]	; (800c568 <OTM8009A_Init+0x340>)
 800c250:	2000      	movs	r0, #0
 800c252:	f7f4 fbf7 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData3);
 800c256:	49c6      	ldr	r1, [pc, #792]	; (800c570 <OTM8009A_Init+0x348>)
 800c258:	2000      	movs	r0, #0
 800c25a:	f7f4 fbf3 	bl	8000a44 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 800c25e:	200a      	movs	r0, #10
 800c260:	f000 fb30 	bl	800c8c4 <OTM8009A_IO_Delay>
  /* Not documented */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData4);
 800c264:	49c3      	ldr	r1, [pc, #780]	; (800c574 <OTM8009A_Init+0x34c>)
 800c266:	2000      	movs	r0, #0
 800c268:	f7f4 fbec 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData5);
 800c26c:	49c2      	ldr	r1, [pc, #776]	; (800c578 <OTM8009A_Init+0x350>)
 800c26e:	2000      	movs	r0, #0
 800c270:	f7f4 fbe8 	bl	8000a44 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 800c274:	200a      	movs	r0, #10
 800c276:	f000 fb25 	bl	800c8c4 <OTM8009A_IO_Delay>
  /////////////////////////////////////////////////////////////////////

  /* PWR_CTRL4 - 0xC4B0h - 178th parameter - Default 0xA8 */
  /* Set gvdd_en_test                                     */
  /* -> enable GVDD test mode !!!                         */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData6);
 800c27a:	49c0      	ldr	r1, [pc, #768]	; (800c57c <OTM8009A_Init+0x354>)
 800c27c:	2000      	movs	r0, #0
 800c27e:	f7f4 fbe1 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData7);
 800c282:	49bf      	ldr	r1, [pc, #764]	; (800c580 <OTM8009A_Init+0x358>)
 800c284:	2000      	movs	r0, #0
 800c286:	f7f4 fbdd 	bl	8000a44 <DSI_IO_WriteCmd>
  /* PWR_CTRL2 - 0xC590h - 146th parameter - Default 0x79      */
  /* Set pump 4 vgh voltage                                    */
  /* -> from 15.0v down to 13.0v                               */
  /* Set pump 5 vgh voltage                                    */
  /* -> from -12.0v downto -9.0v                               */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData8);
 800c28a:	49be      	ldr	r1, [pc, #760]	; (800c584 <OTM8009A_Init+0x35c>)
 800c28c:	2000      	movs	r0, #0
 800c28e:	f7f4 fbd9 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 800c292:	49bd      	ldr	r1, [pc, #756]	; (800c588 <OTM8009A_Init+0x360>)
 800c294:	2000      	movs	r0, #0
 800c296:	f7f4 fbd5 	bl	8000a44 <DSI_IO_WriteCmd>

  /* P_DRV_M - 0xC0B4h - 181th parameter - Default 0x00 */
  /* -> Column inversion                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData10);
 800c29a:	49bc      	ldr	r1, [pc, #752]	; (800c58c <OTM8009A_Init+0x364>)
 800c29c:	2000      	movs	r0, #0
 800c29e:	f7f4 fbd1 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData11);
 800c2a2:	49bb      	ldr	r1, [pc, #748]	; (800c590 <OTM8009A_Init+0x368>)
 800c2a4:	2000      	movs	r0, #0
 800c2a6:	f7f4 fbcd 	bl	8000a44 <DSI_IO_WriteCmd>

  /* VCOMDC - 0xD900h - 1st parameter - Default 0x39h */
  /* VCOM Voltage settings                            */
  /* -> from -1.0000v downto -1.2625v                 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800c2aa:	49ad      	ldr	r1, [pc, #692]	; (800c560 <OTM8009A_Init+0x338>)
 800c2ac:	2000      	movs	r0, #0
 800c2ae:	f7f4 fbc9 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData12);
 800c2b2:	49b8      	ldr	r1, [pc, #736]	; (800c594 <OTM8009A_Init+0x36c>)
 800c2b4:	2000      	movs	r0, #0
 800c2b6:	f7f4 fbc5 	bl	8000a44 <DSI_IO_WriteCmd>

  /* Oscillator adjustment for Idle/Normal mode (LPDT only) set to 65Hz (default is 60Hz) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 800c2ba:	49b7      	ldr	r1, [pc, #732]	; (800c598 <OTM8009A_Init+0x370>)
 800c2bc:	2000      	movs	r0, #0
 800c2be:	f7f4 fbc1 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData14);
 800c2c2:	49b6      	ldr	r1, [pc, #728]	; (800c59c <OTM8009A_Init+0x374>)
 800c2c4:	2000      	movs	r0, #0
 800c2c6:	f7f4 fbbd 	bl	8000a44 <DSI_IO_WriteCmd>

  /* Video mode internal */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 800c2ca:	49b5      	ldr	r1, [pc, #724]	; (800c5a0 <OTM8009A_Init+0x378>)
 800c2cc:	2000      	movs	r0, #0
 800c2ce:	f7f4 fbb9 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData16);
 800c2d2:	49b4      	ldr	r1, [pc, #720]	; (800c5a4 <OTM8009A_Init+0x37c>)
 800c2d4:	2000      	movs	r0, #0
 800c2d6:	f7f4 fbb5 	bl	8000a44 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 147h parameter - Default 0x00 */
  /* Set pump 4&5 x6                                     */
  /* -> ONLY VALID when PUMP4_EN_ASDM_HV = "0"           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData17);
 800c2da:	49b3      	ldr	r1, [pc, #716]	; (800c5a8 <OTM8009A_Init+0x380>)
 800c2dc:	2000      	movs	r0, #0
 800c2de:	f7f4 fbb1 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData18);
 800c2e2:	49b2      	ldr	r1, [pc, #712]	; (800c5ac <OTM8009A_Init+0x384>)
 800c2e4:	2000      	movs	r0, #0
 800c2e6:	f7f4 fbad 	bl	8000a44 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 150th parameter - Default 0x33h */
  /* Change pump4 clock ratio                              */
  /* -> from 1 line to 1/2 line                            */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData19);
 800c2ea:	49b1      	ldr	r1, [pc, #708]	; (800c5b0 <OTM8009A_Init+0x388>)
 800c2ec:	2000      	movs	r0, #0
 800c2ee:	f7f4 fba9 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 800c2f2:	49a5      	ldr	r1, [pc, #660]	; (800c588 <OTM8009A_Init+0x360>)
 800c2f4:	2000      	movs	r0, #0
 800c2f6:	f7f4 fba5 	bl	8000a44 <DSI_IO_WriteCmd>

  /* GVDD/NGVDD settings */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800c2fa:	4999      	ldr	r1, [pc, #612]	; (800c560 <OTM8009A_Init+0x338>)
 800c2fc:	2000      	movs	r0, #0
 800c2fe:	f7f4 fba1 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData5);
 800c302:	49ac      	ldr	r1, [pc, #688]	; (800c5b4 <OTM8009A_Init+0x38c>)
 800c304:	2002      	movs	r0, #2
 800c306:	f7f4 fb9d 	bl	8000a44 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 149th parameter - Default 0x33h */
  /* Rewrite the default value !                           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData20);
 800c30a:	49ab      	ldr	r1, [pc, #684]	; (800c5b8 <OTM8009A_Init+0x390>)
 800c30c:	2000      	movs	r0, #0
 800c30e:	f7f4 fb99 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData21);
 800c312:	49aa      	ldr	r1, [pc, #680]	; (800c5bc <OTM8009A_Init+0x394>)
 800c314:	2000      	movs	r0, #0
 800c316:	f7f4 fb95 	bl	8000a44 <DSI_IO_WriteCmd>

  /* Panel display timing Setting 3 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData22);
 800c31a:	49a9      	ldr	r1, [pc, #676]	; (800c5c0 <OTM8009A_Init+0x398>)
 800c31c:	2000      	movs	r0, #0
 800c31e:	f7f4 fb91 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData23);
 800c322:	49a8      	ldr	r1, [pc, #672]	; (800c5c4 <OTM8009A_Init+0x39c>)
 800c324:	2000      	movs	r0, #0
 800c326:	f7f4 fb8d 	bl	8000a44 <DSI_IO_WriteCmd>

  /* Power control 1 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData24);
 800c32a:	49a7      	ldr	r1, [pc, #668]	; (800c5c8 <OTM8009A_Init+0x3a0>)
 800c32c:	2000      	movs	r0, #0
 800c32e:	f7f4 fb89 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData25);
 800c332:	49a6      	ldr	r1, [pc, #664]	; (800c5cc <OTM8009A_Init+0x3a4>)
 800c334:	2000      	movs	r0, #0
 800c336:	f7f4 fb85 	bl	8000a44 <DSI_IO_WriteCmd>

  /* Source driver precharge */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 800c33a:	4997      	ldr	r1, [pc, #604]	; (800c598 <OTM8009A_Init+0x370>)
 800c33c:	2000      	movs	r0, #0
 800c33e:	f7f4 fb81 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData26);
 800c342:	49a3      	ldr	r1, [pc, #652]	; (800c5d0 <OTM8009A_Init+0x3a8>)
 800c344:	2000      	movs	r0, #0
 800c346:	f7f4 fb7d 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 800c34a:	4995      	ldr	r1, [pc, #596]	; (800c5a0 <OTM8009A_Init+0x378>)
 800c34c:	2000      	movs	r0, #0
 800c34e:	f7f4 fb79 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData27);
 800c352:	49a0      	ldr	r1, [pc, #640]	; (800c5d4 <OTM8009A_Init+0x3ac>)
 800c354:	2000      	movs	r0, #0
 800c356:	f7f4 fb75 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData28);
 800c35a:	499f      	ldr	r1, [pc, #636]	; (800c5d8 <OTM8009A_Init+0x3b0>)
 800c35c:	2000      	movs	r0, #0
 800c35e:	f7f4 fb71 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData6);
 800c362:	499e      	ldr	r1, [pc, #632]	; (800c5dc <OTM8009A_Init+0x3b4>)
 800c364:	2002      	movs	r0, #2
 800c366:	f7f4 fb6d 	bl	8000a44 <DSI_IO_WriteCmd>

  /* GOAVST */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 800c36a:	497f      	ldr	r1, [pc, #508]	; (800c568 <OTM8009A_Init+0x340>)
 800c36c:	2000      	movs	r0, #0
 800c36e:	f7f4 fb69 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 6, (uint8_t *)lcdRegData7);
 800c372:	499b      	ldr	r1, [pc, #620]	; (800c5e0 <OTM8009A_Init+0x3b8>)
 800c374:	2006      	movs	r0, #6
 800c376:	f7f4 fb65 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 800c37a:	499a      	ldr	r1, [pc, #616]	; (800c5e4 <OTM8009A_Init+0x3bc>)
 800c37c:	2000      	movs	r0, #0
 800c37e:	f7f4 fb61 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData8);
 800c382:	4999      	ldr	r1, [pc, #612]	; (800c5e8 <OTM8009A_Init+0x3c0>)
 800c384:	200e      	movs	r0, #14
 800c386:	f7f4 fb5d 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 800c38a:	4998      	ldr	r1, [pc, #608]	; (800c5ec <OTM8009A_Init+0x3c4>)
 800c38c:	2000      	movs	r0, #0
 800c38e:	f7f4 fb59 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData9);
 800c392:	4997      	ldr	r1, [pc, #604]	; (800c5f0 <OTM8009A_Init+0x3c8>)
 800c394:	200e      	movs	r0, #14
 800c396:	f7f4 fb55 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 800c39a:	4996      	ldr	r1, [pc, #600]	; (800c5f4 <OTM8009A_Init+0x3cc>)
 800c39c:	2000      	movs	r0, #0
 800c39e:	f7f4 fb51 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData10);
 800c3a2:	4995      	ldr	r1, [pc, #596]	; (800c5f8 <OTM8009A_Init+0x3d0>)
 800c3a4:	200a      	movs	r0, #10
 800c3a6:	f7f4 fb4d 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 800c3aa:	4994      	ldr	r1, [pc, #592]	; (800c5fc <OTM8009A_Init+0x3d4>)
 800c3ac:	2000      	movs	r0, #0
 800c3ae:	f7f4 fb49 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData46);
 800c3b2:	4993      	ldr	r1, [pc, #588]	; (800c600 <OTM8009A_Init+0x3d8>)
 800c3b4:	2000      	movs	r0, #0
 800c3b6:	f7f4 fb45 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 800c3ba:	496b      	ldr	r1, [pc, #428]	; (800c568 <OTM8009A_Init+0x340>)
 800c3bc:	2000      	movs	r0, #0
 800c3be:	f7f4 fb41 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData11);
 800c3c2:	4990      	ldr	r1, [pc, #576]	; (800c604 <OTM8009A_Init+0x3dc>)
 800c3c4:	200a      	movs	r0, #10
 800c3c6:	f7f4 fb3d 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 800c3ca:	498f      	ldr	r1, [pc, #572]	; (800c608 <OTM8009A_Init+0x3e0>)
 800c3cc:	2000      	movs	r0, #0
 800c3ce:	f7f4 fb39 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData12);
 800c3d2:	498e      	ldr	r1, [pc, #568]	; (800c60c <OTM8009A_Init+0x3e4>)
 800c3d4:	200f      	movs	r0, #15
 800c3d6:	f7f4 fb35 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 800c3da:	4982      	ldr	r1, [pc, #520]	; (800c5e4 <OTM8009A_Init+0x3bc>)
 800c3dc:	2000      	movs	r0, #0
 800c3de:	f7f4 fb31 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData13);
 800c3e2:	498b      	ldr	r1, [pc, #556]	; (800c610 <OTM8009A_Init+0x3e8>)
 800c3e4:	200f      	movs	r0, #15
 800c3e6:	f7f4 fb2d 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 800c3ea:	4980      	ldr	r1, [pc, #512]	; (800c5ec <OTM8009A_Init+0x3c4>)
 800c3ec:	2000      	movs	r0, #0
 800c3ee:	f7f4 fb29 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData14);
 800c3f2:	4988      	ldr	r1, [pc, #544]	; (800c614 <OTM8009A_Init+0x3ec>)
 800c3f4:	200a      	movs	r0, #10
 800c3f6:	f7f4 fb25 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 800c3fa:	497e      	ldr	r1, [pc, #504]	; (800c5f4 <OTM8009A_Init+0x3cc>)
 800c3fc:	2000      	movs	r0, #0
 800c3fe:	f7f4 fb21 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData15);
 800c402:	4985      	ldr	r1, [pc, #532]	; (800c618 <OTM8009A_Init+0x3f0>)
 800c404:	200f      	movs	r0, #15
 800c406:	f7f4 fb1d 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 800c40a:	497c      	ldr	r1, [pc, #496]	; (800c5fc <OTM8009A_Init+0x3d4>)
 800c40c:	2000      	movs	r0, #0
 800c40e:	f7f4 fb19 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData16);
 800c412:	4982      	ldr	r1, [pc, #520]	; (800c61c <OTM8009A_Init+0x3f4>)
 800c414:	200f      	movs	r0, #15
 800c416:	f7f4 fb15 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData34);
 800c41a:	4981      	ldr	r1, [pc, #516]	; (800c620 <OTM8009A_Init+0x3f8>)
 800c41c:	2000      	movs	r0, #0
 800c41e:	f7f4 fb11 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData17);
 800c422:	4980      	ldr	r1, [pc, #512]	; (800c624 <OTM8009A_Init+0x3fc>)
 800c424:	200a      	movs	r0, #10
 800c426:	f7f4 fb0d 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData35);
 800c42a:	497f      	ldr	r1, [pc, #508]	; (800c628 <OTM8009A_Init+0x400>)
 800c42c:	2000      	movs	r0, #0
 800c42e:	f7f4 fb09 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData18);
 800c432:	497e      	ldr	r1, [pc, #504]	; (800c62c <OTM8009A_Init+0x404>)
 800c434:	200a      	movs	r0, #10
 800c436:	f7f4 fb05 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 800c43a:	494b      	ldr	r1, [pc, #300]	; (800c568 <OTM8009A_Init+0x340>)
 800c43c:	2000      	movs	r0, #0
 800c43e:	f7f4 fb01 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData19);
 800c442:	497b      	ldr	r1, [pc, #492]	; (800c630 <OTM8009A_Init+0x408>)
 800c444:	200a      	movs	r0, #10
 800c446:	f7f4 fafd 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 800c44a:	496f      	ldr	r1, [pc, #444]	; (800c608 <OTM8009A_Init+0x3e0>)
 800c44c:	2000      	movs	r0, #0
 800c44e:	f7f4 faf9 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData20);
 800c452:	4978      	ldr	r1, [pc, #480]	; (800c634 <OTM8009A_Init+0x40c>)
 800c454:	200f      	movs	r0, #15
 800c456:	f7f4 faf5 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 800c45a:	4962      	ldr	r1, [pc, #392]	; (800c5e4 <OTM8009A_Init+0x3bc>)
 800c45c:	2000      	movs	r0, #0
 800c45e:	f7f4 faf1 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData21);
 800c462:	4975      	ldr	r1, [pc, #468]	; (800c638 <OTM8009A_Init+0x410>)
 800c464:	200f      	movs	r0, #15
 800c466:	f7f4 faed 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 800c46a:	4960      	ldr	r1, [pc, #384]	; (800c5ec <OTM8009A_Init+0x3c4>)
 800c46c:	2000      	movs	r0, #0
 800c46e:	f7f4 fae9 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData22);
 800c472:	4972      	ldr	r1, [pc, #456]	; (800c63c <OTM8009A_Init+0x414>)
 800c474:	200a      	movs	r0, #10
 800c476:	f7f4 fae5 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 800c47a:	495e      	ldr	r1, [pc, #376]	; (800c5f4 <OTM8009A_Init+0x3cc>)
 800c47c:	2000      	movs	r0, #0
 800c47e:	f7f4 fae1 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData23);
 800c482:	496f      	ldr	r1, [pc, #444]	; (800c640 <OTM8009A_Init+0x418>)
 800c484:	200f      	movs	r0, #15
 800c486:	f7f4 fadd 	bl	8000a44 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 800c48a:	495c      	ldr	r1, [pc, #368]	; (800c5fc <OTM8009A_Init+0x3d4>)
 800c48c:	2000      	movs	r0, #0
 800c48e:	f7f4 fad9 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData24);
 800c492:	496c      	ldr	r1, [pc, #432]	; (800c644 <OTM8009A_Init+0x41c>)
 800c494:	200f      	movs	r0, #15
 800c496:	f7f4 fad5 	bl	8000a44 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////////////
  /* PWR_CTRL1 - 0xc580h - 130th parameter - default 0x00 */
  /* Pump 1 min and max DM                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 800c49a:	493f      	ldr	r1, [pc, #252]	; (800c598 <OTM8009A_Init+0x370>)
 800c49c:	2000      	movs	r0, #0
 800c49e:	f7f4 fad1 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData47);
 800c4a2:	4969      	ldr	r1, [pc, #420]	; (800c648 <OTM8009A_Init+0x420>)
 800c4a4:	2000      	movs	r0, #0
 800c4a6:	f7f4 facd 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData48);
 800c4aa:	4968      	ldr	r1, [pc, #416]	; (800c64c <OTM8009A_Init+0x424>)
 800c4ac:	2000      	movs	r0, #0
 800c4ae:	f7f4 fac9 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData49);
 800c4b2:	4967      	ldr	r1, [pc, #412]	; (800c650 <OTM8009A_Init+0x428>)
 800c4b4:	2000      	movs	r0, #0
 800c4b6:	f7f4 fac5 	bl	8000a44 <DSI_IO_WriteCmd>
  /////////////////////////////////////////////////////////////////////////////

  /* CABC LEDPWM frequency adjusted to 19,5kHz */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData50);
 800c4ba:	4966      	ldr	r1, [pc, #408]	; (800c654 <OTM8009A_Init+0x42c>)
 800c4bc:	2000      	movs	r0, #0
 800c4be:	f7f4 fac1 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData51);
 800c4c2:	4965      	ldr	r1, [pc, #404]	; (800c658 <OTM8009A_Init+0x430>)
 800c4c4:	2000      	movs	r0, #0
 800c4c6:	f7f4 fabd 	bl	8000a44 <DSI_IO_WriteCmd>
  
  /* Exit CMD2 mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800c4ca:	4925      	ldr	r1, [pc, #148]	; (800c560 <OTM8009A_Init+0x338>)
 800c4cc:	2000      	movs	r0, #0
 800c4ce:	f7f4 fab9 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData25);
 800c4d2:	4962      	ldr	r1, [pc, #392]	; (800c65c <OTM8009A_Init+0x434>)
 800c4d4:	2003      	movs	r0, #3
 800c4d6:	f7f4 fab5 	bl	8000a44 <DSI_IO_WriteCmd>
  /*************************************************************************** */
  /* Standard DCS Initialization TO KEEP CAN BE DONE IN HSDT                   */
  /*************************************************************************** */

  /* NOP - goes back to DCS std command ? */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800c4da:	4921      	ldr	r1, [pc, #132]	; (800c560 <OTM8009A_Init+0x338>)
 800c4dc:	2000      	movs	r0, #0
 800c4de:	f7f4 fab1 	bl	8000a44 <DSI_IO_WriteCmd>
          
  /* Gamma correction 2.2+ table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800c4e2:	491f      	ldr	r1, [pc, #124]	; (800c560 <OTM8009A_Init+0x338>)
 800c4e4:	2000      	movs	r0, #0
 800c4e6:	f7f4 faad 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData3);
 800c4ea:	495d      	ldr	r1, [pc, #372]	; (800c660 <OTM8009A_Init+0x438>)
 800c4ec:	2010      	movs	r0, #16
 800c4ee:	f7f4 faa9 	bl	8000a44 <DSI_IO_WriteCmd>
  
  /* Gamma correction 2.2- table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800c4f2:	491b      	ldr	r1, [pc, #108]	; (800c560 <OTM8009A_Init+0x338>)
 800c4f4:	2000      	movs	r0, #0
 800c4f6:	f7f4 faa5 	bl	8000a44 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData4);
 800c4fa:	495a      	ldr	r1, [pc, #360]	; (800c664 <OTM8009A_Init+0x43c>)
 800c4fc:	2010      	movs	r0, #16
 800c4fe:	f7f4 faa1 	bl	8000a44 <DSI_IO_WriteCmd>
          
  /* Send Sleep Out command to display : no parameter */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData36);
 800c502:	2000      	movs	r0, #0
 800c504:	4958      	ldr	r1, [pc, #352]	; (800c668 <OTM8009A_Init+0x440>)
 800c506:	f7f4 fa9d 	bl	8000a44 <DSI_IO_WriteCmd>
  
  /* Wait for sleep out exit */
  OTM8009A_IO_Delay(120);
 800c50a:	2078      	movs	r0, #120	; 0x78
 800c50c:	f000 f9da 	bl	800c8c4 <OTM8009A_IO_Delay>

  switch(ColorCoding)
 800c510:	2c00      	cmp	r4, #0
 800c512:	f000 80c9 	beq.w	800c6a8 <OTM8009A_Init+0x480>
 800c516:	2c02      	cmp	r4, #2
 800c518:	d103      	bne.n	800c522 <OTM8009A_Init+0x2fa>
  {
  case OTM8009A_FORMAT_RBG565 :
    /* Set Pixel color format to RGB565 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData37);
 800c51a:	4954      	ldr	r1, [pc, #336]	; (800c66c <OTM8009A_Init+0x444>)
 800c51c:	2000      	movs	r0, #0
    break;
  case OTM8009A_FORMAT_RGB888 :
    /* Set Pixel color format to RGB888 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 800c51e:	f7f4 fa91 	bl	8000a44 <DSI_IO_WriteCmd>
    break;
  }

  /* Send command to configure display in landscape orientation mode. By default
      the orientation mode is portrait  */
  if(orientation == OTM8009A_ORIENTATION_LANDSCAPE)
 800c522:	2d01      	cmp	r5, #1
 800c524:	d10b      	bne.n	800c53e <OTM8009A_Init+0x316>
  {
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData39);
 800c526:	4952      	ldr	r1, [pc, #328]	; (800c670 <OTM8009A_Init+0x448>)
 800c528:	2000      	movs	r0, #0
 800c52a:	f7f4 fa8b 	bl	8000a44 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData27);
 800c52e:	4951      	ldr	r1, [pc, #324]	; (800c674 <OTM8009A_Init+0x44c>)
 800c530:	2004      	movs	r0, #4
 800c532:	f7f4 fa87 	bl	8000a44 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData28);
 800c536:	4950      	ldr	r1, [pc, #320]	; (800c678 <OTM8009A_Init+0x450>)
 800c538:	2004      	movs	r0, #4
 800c53a:	f7f4 fa83 	bl	8000a44 <DSI_IO_WriteCmd>
  }

  /** CABC : Content Adaptive Backlight Control section start >> */
  /* Note : defaut is 0 (lowest Brightness), 0xFF is highest Brightness, try 0x7F : intermediate value */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData40);
 800c53e:	494f      	ldr	r1, [pc, #316]	; (800c67c <OTM8009A_Init+0x454>)
 800c540:	2000      	movs	r0, #0
 800c542:	f7f4 fa7f 	bl	8000a44 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData41);
 800c546:	494e      	ldr	r1, [pc, #312]	; (800c680 <OTM8009A_Init+0x458>)
 800c548:	2000      	movs	r0, #0
 800c54a:	f7f4 fa7b 	bl	8000a44 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData42);
 800c54e:	494d      	ldr	r1, [pc, #308]	; (800c684 <OTM8009A_Init+0x45c>)
 800c550:	2000      	movs	r0, #0
 800c552:	f7f4 fa77 	bl	8000a44 <DSI_IO_WriteCmd>

  /* defaut is 0 (lowest Brightness), 0xFF is highest Brightness */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData43);
 800c556:	494c      	ldr	r1, [pc, #304]	; (800c688 <OTM8009A_Init+0x460>)
 800c558:	2000      	movs	r0, #0
 800c55a:	f7f4 fa73 	bl	8000a44 <DSI_IO_WriteCmd>
 800c55e:	e095      	b.n	800c68c <OTM8009A_Init+0x464>
 800c560:	0802b04c 	.word	0x0802b04c
 800c564:	0802b0b2 	.word	0x0802b0b2
 800c568:	0802b062 	.word	0x0802b062
 800c56c:	0802b138 	.word	0x0802b138
 800c570:	0802b078 	.word	0x0802b078
 800c574:	0802b08e 	.word	0x0802b08e
 800c578:	0802b0a4 	.word	0x0802b0a4
 800c57c:	0802b0aa 	.word	0x0802b0aa
 800c580:	0802b0ac 	.word	0x0802b0ac
 800c584:	0802b0ae 	.word	0x0802b0ae
 800c588:	0802b0b0 	.word	0x0802b0b0
 800c58c:	0802b04e 	.word	0x0802b04e
 800c590:	0802b050 	.word	0x0802b050
 800c594:	0802b052 	.word	0x0802b052
 800c598:	0802b054 	.word	0x0802b054
 800c59c:	0802b056 	.word	0x0802b056
 800c5a0:	0802b058 	.word	0x0802b058
 800c5a4:	0802b05a 	.word	0x0802b05a
 800c5a8:	0802b05c 	.word	0x0802b05c
 800c5ac:	0802b05e 	.word	0x0802b05e
 800c5b0:	0802b060 	.word	0x0802b060
 800c5b4:	0802b1b6 	.word	0x0802b1b6
 800c5b8:	0802b064 	.word	0x0802b064
 800c5bc:	0802b066 	.word	0x0802b066
 800c5c0:	0802b068 	.word	0x0802b068
 800c5c4:	0802b06a 	.word	0x0802b06a
 800c5c8:	0802b06c 	.word	0x0802b06c
 800c5cc:	0802b06e 	.word	0x0802b06e
 800c5d0:	0802b070 	.word	0x0802b070
 800c5d4:	0802b072 	.word	0x0802b072
 800c5d8:	0802b074 	.word	0x0802b074
 800c5dc:	0802b1b9 	.word	0x0802b1b9
 800c5e0:	0802b1bc 	.word	0x0802b1bc
 800c5e4:	0802b076 	.word	0x0802b076
 800c5e8:	0802b1c3 	.word	0x0802b1c3
 800c5ec:	0802b07a 	.word	0x0802b07a
 800c5f0:	0802b1d2 	.word	0x0802b1d2
 800c5f4:	0802b07c 	.word	0x0802b07c
 800c5f8:	0802b0b6 	.word	0x0802b0b6
 800c5fc:	0802b07e 	.word	0x0802b07e
 800c600:	0802b09c 	.word	0x0802b09c
 800c604:	0802b0c1 	.word	0x0802b0c1
 800c608:	0802b080 	.word	0x0802b080
 800c60c:	0802b0cc 	.word	0x0802b0cc
 800c610:	0802b0dc 	.word	0x0802b0dc
 800c614:	0802b0ec 	.word	0x0802b0ec
 800c618:	0802b0f7 	.word	0x0802b0f7
 800c61c:	0802b107 	.word	0x0802b107
 800c620:	0802b082 	.word	0x0802b082
 800c624:	0802b117 	.word	0x0802b117
 800c628:	0802b084 	.word	0x0802b084
 800c62c:	0802b122 	.word	0x0802b122
 800c630:	0802b12d 	.word	0x0802b12d
 800c634:	0802b13b 	.word	0x0802b13b
 800c638:	0802b14b 	.word	0x0802b14b
 800c63c:	0802b15b 	.word	0x0802b15b
 800c640:	0802b166 	.word	0x0802b166
 800c644:	0802b176 	.word	0x0802b176
 800c648:	0802b09e 	.word	0x0802b09e
 800c64c:	0802b0a0 	.word	0x0802b0a0
 800c650:	0802b0a2 	.word	0x0802b0a2
 800c654:	0802b0a6 	.word	0x0802b0a6
 800c658:	0802b0a8 	.word	0x0802b0a8
 800c65c:	0802b186 	.word	0x0802b186
 800c660:	0802b194 	.word	0x0802b194
 800c664:	0802b1a5 	.word	0x0802b1a5
 800c668:	0802b086 	.word	0x0802b086
 800c66c:	0802b088 	.word	0x0802b088
 800c670:	0802b08c 	.word	0x0802b08c
 800c674:	0802b18a 	.word	0x0802b18a
 800c678:	0802b18f 	.word	0x0802b18f
 800c67c:	0802b090 	.word	0x0802b090
 800c680:	0802b092 	.word	0x0802b092
 800c684:	0802b094 	.word	0x0802b094
 800c688:	0802b096 	.word	0x0802b096

  /** CABC : Content Adaptive Backlight Control section end << */

  /* Send Command Display On */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData44);
 800c68c:	4908      	ldr	r1, [pc, #32]	; (800c6b0 <OTM8009A_Init+0x488>)
 800c68e:	2000      	movs	r0, #0
 800c690:	f7f4 f9d8 	bl	8000a44 <DSI_IO_WriteCmd>

  /* NOP command */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800c694:	4907      	ldr	r1, [pc, #28]	; (800c6b4 <OTM8009A_Init+0x48c>)
 800c696:	2000      	movs	r0, #0
 800c698:	f7f4 f9d4 	bl	8000a44 <DSI_IO_WriteCmd>

  /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI commands sent by */
  /* DSI host from LTDC incoming pixels in video mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData45);
 800c69c:	4906      	ldr	r1, [pc, #24]	; (800c6b8 <OTM8009A_Init+0x490>)
 800c69e:	2000      	movs	r0, #0
 800c6a0:	f7f4 f9d0 	bl	8000a44 <DSI_IO_WriteCmd>

  return 0;
}
 800c6a4:	2000      	movs	r0, #0
 800c6a6:	bd38      	pop	{r3, r4, r5, pc}
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 800c6a8:	4904      	ldr	r1, [pc, #16]	; (800c6bc <OTM8009A_Init+0x494>)
 800c6aa:	4620      	mov	r0, r4
 800c6ac:	e737      	b.n	800c51e <OTM8009A_Init+0x2f6>
 800c6ae:	bf00      	nop
 800c6b0:	0802b098 	.word	0x0802b098
 800c6b4:	0802b04c 	.word	0x0802b04c
 800c6b8:	0802b09a 	.word	0x0802b09a
 800c6bc:	0802b08a 	.word	0x0802b08a

0800c6c0 <I2C1_Init>:

/**
  * @brief  Initializes I2C HAL.
  */
static void I2C1_Init(void)
{
 800c6c0:	b570      	push	{r4, r5, r6, lr}
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 800c6c2:	4d2e      	ldr	r5, [pc, #184]	; (800c77c <I2C1_Init+0xbc>)
{
 800c6c4:	b088      	sub	sp, #32
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 800c6c6:	4628      	mov	r0, r5
 800c6c8:	f002 f96a 	bl	800e9a0 <HAL_I2C_GetState>
 800c6cc:	4604      	mov	r4, r0
 800c6ce:	2800      	cmp	r0, #0
 800c6d0:	d151      	bne.n	800c776 <I2C1_Init+0xb6>
  {
    heval_I2c1.Instance = I2C1;
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 800c6d2:	4a2b      	ldr	r2, [pc, #172]	; (800c780 <I2C1_Init+0xc0>)
 800c6d4:	4b2b      	ldr	r3, [pc, #172]	; (800c784 <I2C1_Init+0xc4>)
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 800c6d6:	4e2c      	ldr	r6, [pc, #176]	; (800c788 <I2C1_Init+0xc8>)
 800c6d8:	9001      	str	r0, [sp, #4]
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 800c6da:	e9c5 2300 	strd	r2, r3, [r5]
    heval_I2c1.Init.DutyCycle       = I2C_DUTYCYCLE_2;
    heval_I2c1.Init.OwnAddress1     = 0;
    heval_I2c1.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
 800c6de:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    heval_I2c1.Init.OwnAddress1     = 0;
 800c6e2:	e9c5 0002 	strd	r0, r0, [r5, #8]
    heval_I2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800c6e6:	e9c5 3004 	strd	r3, r0, [r5, #16]
    heval_I2c1.Init.OwnAddress2     = 0;
    heval_I2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800c6ea:	e9c5 0006 	strd	r0, r0, [r5, #24]
    heval_I2c1.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
 800c6ee:	6228      	str	r0, [r5, #32]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 800c6f0:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800c6f2:	f043 0302 	orr.w	r3, r3, #2
 800c6f6:	6333      	str	r3, [r6, #48]	; 0x30
 800c6f8:	6b33      	ldr	r3, [r6, #48]	; 0x30
  gpio_init_structure.Pull = GPIO_NOPULL;
 800c6fa:	9005      	str	r0, [sp, #20]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 800c6fc:	f003 0302 	and.w	r3, r3, #2
 800c700:	9301      	str	r3, [sp, #4]
 800c702:	9b01      	ldr	r3, [sp, #4]
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 800c704:	f44f 7180 	mov.w	r1, #256	; 0x100
 800c708:	2312      	movs	r3, #18
 800c70a:	e9cd 1303 	strd	r1, r3, [sp, #12]
  gpio_init_structure.Alternate = DISCO_I2C1_SCL_SDA_AF;
 800c70e:	2002      	movs	r0, #2
 800c710:	2304      	movs	r3, #4
 800c712:	e9cd 0306 	strd	r0, r3, [sp, #24]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 800c716:	a903      	add	r1, sp, #12
 800c718:	481c      	ldr	r0, [pc, #112]	; (800c78c <I2C1_Init+0xcc>)
 800c71a:	f001 fb6f 	bl	800ddfc <HAL_GPIO_Init>
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 800c71e:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 800c722:	481a      	ldr	r0, [pc, #104]	; (800c78c <I2C1_Init+0xcc>)
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 800c724:	9303      	str	r3, [sp, #12]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 800c726:	a903      	add	r1, sp, #12
 800c728:	f001 fb68 	bl	800ddfc <HAL_GPIO_Init>
  DISCO_I2C1_CLK_ENABLE();
 800c72c:	9402      	str	r4, [sp, #8]
 800c72e:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800c730:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800c734:	6433      	str	r3, [r6, #64]	; 0x40
 800c736:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800c738:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800c73c:	9302      	str	r3, [sp, #8]
 800c73e:	9b02      	ldr	r3, [sp, #8]
  DISCO_I2C1_FORCE_RESET();
 800c740:	6a33      	ldr	r3, [r6, #32]
 800c742:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800c746:	6233      	str	r3, [r6, #32]
  DISCO_I2C1_RELEASE_RESET();
 800c748:	6a33      	ldr	r3, [r6, #32]
 800c74a:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800c74e:	6233      	str	r3, [r6, #32]
  HAL_NVIC_SetPriority(DISCO_I2C1_EV_IRQn, 0x05, 0);
 800c750:	4622      	mov	r2, r4
 800c752:	2105      	movs	r1, #5
 800c754:	201f      	movs	r0, #31
 800c756:	f000 fd1d 	bl	800d194 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_EV_IRQn);
 800c75a:	201f      	movs	r0, #31
 800c75c:	f000 fd4c 	bl	800d1f8 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DISCO_I2C1_ER_IRQn, 0x05, 0);
 800c760:	4622      	mov	r2, r4
 800c762:	2105      	movs	r1, #5
 800c764:	2020      	movs	r0, #32
 800c766:	f000 fd15 	bl	800d194 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_ER_IRQn);
 800c76a:	2020      	movs	r0, #32
 800c76c:	f000 fd44 	bl	800d1f8 <HAL_NVIC_EnableIRQ>

    /* Init the I2C */
    I2C1_MspInit();
    HAL_I2C_Init(&heval_I2c1);
 800c770:	4628      	mov	r0, r5
 800c772:	f001 febb 	bl	800e4ec <HAL_I2C_Init>
  }
}
 800c776:	b008      	add	sp, #32
 800c778:	bd70      	pop	{r4, r5, r6, pc}
 800c77a:	bf00      	nop
 800c77c:	2001adc4 	.word	0x2001adc4
 800c780:	40005400 	.word	0x40005400
 800c784:	00061a80 	.word	0x00061a80
 800c788:	40023800 	.word	0x40023800
 800c78c:	40020400 	.word	0x40020400

0800c790 <I2C1_Error.isra.0>:

/**
  * @brief  Manages error callback by re-initializing I2C.
  * @param  Addr: I2C Address
  */
static void I2C1_Error(uint8_t Addr)
 800c790:	b508      	push	{r3, lr}
{
  /* De-initialize the I2C comunication bus */
  HAL_I2C_DeInit(&heval_I2c1);
 800c792:	4803      	ldr	r0, [pc, #12]	; (800c7a0 <I2C1_Error.isra.0+0x10>)
 800c794:	f001 ff52 	bl	800e63c <HAL_I2C_DeInit>

  /* Re-Initiaize the I2C comunication bus */
  I2C1_Init();
}
 800c798:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  I2C1_Init();
 800c79c:	f7ff bf90 	b.w	800c6c0 <I2C1_Init>
 800c7a0:	2001adc4 	.word	0x2001adc4

0800c7a4 <BSP_PB_Init>:
{
 800c7a4:	b510      	push	{r4, lr}
 800c7a6:	b086      	sub	sp, #24
  BUTTON_GPIO_CLK_ENABLE();
 800c7a8:	4b19      	ldr	r3, [pc, #100]	; (800c810 <BSP_PB_Init+0x6c>)
 800c7aa:	2400      	movs	r4, #0
 800c7ac:	9400      	str	r4, [sp, #0]
 800c7ae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800c7b0:	f042 0201 	orr.w	r2, r2, #1
 800c7b4:	631a      	str	r2, [r3, #48]	; 0x30
 800c7b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c7b8:	f003 0301 	and.w	r3, r3, #1
 800c7bc:	9300      	str	r3, [sp, #0]
 800c7be:	9b00      	ldr	r3, [sp, #0]
  if(Button_Mode == BUTTON_MODE_GPIO)
 800c7c0:	b969      	cbnz	r1, 800c7de <BSP_PB_Init+0x3a>
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 800c7c2:	2301      	movs	r3, #1
    gpio_init_structure.Mode = GPIO_MODE_INPUT;
 800c7c4:	e9cd 3101 	strd	r3, r1, [sp, #4]
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 800c7c8:	2302      	movs	r3, #2
 800c7ca:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 800c7cc:	4b11      	ldr	r3, [pc, #68]	; (800c814 <BSP_PB_Init+0x70>)
    gpio_init_structure.Pull = GPIO_NOPULL;
 800c7ce:	9103      	str	r1, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 800c7d0:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800c7d4:	a901      	add	r1, sp, #4
 800c7d6:	f001 fb11 	bl	800ddfc <HAL_GPIO_Init>
}
 800c7da:	b006      	add	sp, #24
 800c7dc:	bd10      	pop	{r4, pc}
  if(Button_Mode == BUTTON_MODE_EXTI)
 800c7de:	2901      	cmp	r1, #1
 800c7e0:	d1fb      	bne.n	800c7da <BSP_PB_Init+0x36>
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 800c7e2:	2302      	movs	r3, #2
 800c7e4:	9304      	str	r3, [sp, #16]
    gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 800c7e6:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 800c7ea:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 800c7ec:	4b09      	ldr	r3, [pc, #36]	; (800c814 <BSP_PB_Init+0x70>)
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 800c7ee:	9101      	str	r1, [sp, #4]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 800c7f0:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    gpio_init_structure.Pull = GPIO_NOPULL;
 800c7f4:	9403      	str	r4, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 800c7f6:	a901      	add	r1, sp, #4
 800c7f8:	f001 fb00 	bl	800ddfc <HAL_GPIO_Init>
    HAL_NVIC_SetPriority((IRQn_Type)(BUTTON_IRQn[Button]), 0x0F, 0x00);
 800c7fc:	4622      	mov	r2, r4
 800c7fe:	210f      	movs	r1, #15
 800c800:	2006      	movs	r0, #6
 800c802:	f000 fcc7 	bl	800d194 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 800c806:	2006      	movs	r0, #6
 800c808:	f000 fcf6 	bl	800d1f8 <HAL_NVIC_EnableIRQ>
}
 800c80c:	e7e5      	b.n	800c7da <BSP_PB_Init+0x36>
 800c80e:	bf00      	nop
 800c810:	40023800 	.word	0x40023800
 800c814:	20000048 	.word	0x20000048

0800c818 <BSP_PB_GetState>:
{
 800c818:	b508      	push	{r3, lr}
  return HAL_GPIO_ReadPin(BUTTON_PORT[Button], BUTTON_PIN[Button]);
 800c81a:	4b03      	ldr	r3, [pc, #12]	; (800c828 <BSP_PB_GetState+0x10>)
 800c81c:	2101      	movs	r1, #1
 800c81e:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800c822:	f001 fc73 	bl	800e10c <HAL_GPIO_ReadPin>
}
 800c826:	bd08      	pop	{r3, pc}
 800c828:	20000048 	.word	0x20000048

0800c82c <TS_IO_Init>:
 800c82c:	f7ff bf48 	b.w	800c6c0 <I2C1_Init>

0800c830 <TS_IO_Write>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @param  Value: Data to be written
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 800c830:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&heval_I2c1,
 800c832:	2301      	movs	r3, #1
 800c834:	f88d 2017 	strb.w	r2, [sp, #23]
 800c838:	2264      	movs	r2, #100	; 0x64
 800c83a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800c83e:	f10d 0217 	add.w	r2, sp, #23
 800c842:	9200      	str	r2, [sp, #0]
 800c844:	460a      	mov	r2, r1
 800c846:	4601      	mov	r1, r0
 800c848:	4804      	ldr	r0, [pc, #16]	; (800c85c <TS_IO_Write+0x2c>)
 800c84a:	f001 ff11 	bl	800e670 <HAL_I2C_Mem_Write>
  if(status != HAL_OK)
 800c84e:	b108      	cbz	r0, 800c854 <TS_IO_Write+0x24>
    I2C1_Error(Addr);
 800c850:	f7ff ff9e 	bl	800c790 <I2C1_Error.isra.0>
  I2C1_Write(Addr, Reg, Value);
}
 800c854:	b007      	add	sp, #28
 800c856:	f85d fb04 	ldr.w	pc, [sp], #4
 800c85a:	bf00      	nop
 800c85c:	2001adc4 	.word	0x2001adc4

0800c860 <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @retval Read data
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 800c860:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t Value = 0;
 800c862:	2300      	movs	r3, #0
{
 800c864:	460a      	mov	r2, r1
  uint8_t Value = 0;
 800c866:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 800c86a:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800c86e:	2301      	movs	r3, #1
 800c870:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800c874:	f10d 0117 	add.w	r1, sp, #23
 800c878:	9100      	str	r1, [sp, #0]
 800c87a:	4601      	mov	r1, r0
 800c87c:	4805      	ldr	r0, [pc, #20]	; (800c894 <TS_IO_Read+0x34>)
 800c87e:	f001 ff87 	bl	800e790 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 800c882:	b108      	cbz	r0, 800c888 <TS_IO_Read+0x28>
    I2C1_Error(Addr);
 800c884:	f7ff ff84 	bl	800c790 <I2C1_Error.isra.0>
  return I2C1_Read(Addr, Reg);
}
 800c888:	f89d 0017 	ldrb.w	r0, [sp, #23]
 800c88c:	b007      	add	sp, #28
 800c88e:	f85d fb04 	ldr.w	pc, [sp], #4
 800c892:	bf00      	nop
 800c894:	2001adc4 	.word	0x2001adc4

0800c898 <TS_IO_ReadMultiple>:
  * @param  Buffer: Pointer to data buffer
  * @param  Length: Length of the data
  * @retval Number of read data
  */
uint16_t TS_IO_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *Buffer, uint16_t Length)
{
 800c898:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 800c89a:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 800c89e:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800c8a2:	9200      	str	r2, [sp, #0]
 800c8a4:	2301      	movs	r3, #1
 800c8a6:	460a      	mov	r2, r1
 800c8a8:	4601      	mov	r1, r0
 800c8aa:	4805      	ldr	r0, [pc, #20]	; (800c8c0 <TS_IO_ReadMultiple+0x28>)
 800c8ac:	f001 ff70 	bl	800e790 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 800c8b0:	4604      	mov	r4, r0
 800c8b2:	b108      	cbz	r0, 800c8b8 <TS_IO_ReadMultiple+0x20>
    I2C1_Error(Addr);
 800c8b4:	f7ff ff6c 	bl	800c790 <I2C1_Error.isra.0>
 return I2C1_ReadMultiple(Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, Buffer, Length);
}
 800c8b8:	b2a0      	uxth	r0, r4
 800c8ba:	b004      	add	sp, #16
 800c8bc:	bd10      	pop	{r4, pc}
 800c8be:	bf00      	nop
 800c8c0:	2001adc4 	.word	0x2001adc4

0800c8c4 <OTM8009A_IO_Delay>:
 800c8c4:	f000 bc40 	b.w	800d148 <HAL_Delay>

0800c8c8 <QSPI_AutoPollingMemReady.constprop.0>:
/**
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout: timeout value before returning an error
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 800c8c8:	b500      	push	{lr}
 800c8ca:	b095      	sub	sp, #84	; 0x54
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800c8cc:	f44f 7280 	mov.w	r2, #256	; 0x100
 800c8d0:	920c      	str	r2, [sp, #48]	; 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 800c8d2:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  s_command.Instruction       = READ_STATUS_REG_CMD;
 800c8d6:	2205      	movs	r2, #5
 800c8d8:	9206      	str	r2, [sp, #24]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 800c8da:	910f      	str	r1, [sp, #60]	; 0x3c
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 800c8dc:	2200      	movs	r2, #0
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 800c8de:	2101      	movs	r1, #1
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
 800c8e0:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800c8e4:	e9cd 220d 	strd	r2, r2, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800c8e8:	e9cd 2211 	strd	r2, r2, [sp, #68]	; 0x44
  s_command.DummyCycles       = 0;
 800c8ec:	920b      	str	r2, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800c8ee:	9213      	str	r2, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 800c8f0:	9200      	str	r2, [sp, #0]
  s_config.Interval        = 0x10;
 800c8f2:	2210      	movs	r2, #16
 800c8f4:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 800c8f6:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 800c8fa:	4603      	mov	r3, r0
  s_config.Mask            = N25Q128A_SR_WIP;
 800c8fc:	9101      	str	r1, [sp, #4]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 800c8fe:	9205      	str	r2, [sp, #20]

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 800c900:	a906      	add	r1, sp, #24
 800c902:	466a      	mov	r2, sp
 800c904:	4804      	ldr	r0, [pc, #16]	; (800c918 <QSPI_AutoPollingMemReady.constprop.0+0x50>)
 800c906:	f002 fbce 	bl	800f0a6 <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 800c90a:	3800      	subs	r0, #0
 800c90c:	bf18      	it	ne
 800c90e:	2001      	movne	r0, #1
 800c910:	b015      	add	sp, #84	; 0x54
 800c912:	f85d fb04 	ldr.w	pc, [sp], #4
 800c916:	bf00      	nop
 800c918:	2002c214 	.word	0x2002c214

0800c91c <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 800c91c:	b500      	push	{lr}
 800c91e:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800c920:	f44f 7380 	mov.w	r3, #256	; 0x100
 800c924:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 800c926:	2306      	movs	r3, #6
 800c928:	9306      	str	r3, [sp, #24]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800c92a:	4817      	ldr	r0, [pc, #92]	; (800c988 <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 800c92c:	2300      	movs	r3, #0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800c92e:	f241 3288 	movw	r2, #5000	; 0x1388
 800c932:	a906      	add	r1, sp, #24
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800c934:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800c938:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_command.DataMode          = QSPI_DATA_NONE;
 800c93c:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 800c93e:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800c940:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800c942:	f002 fb6c 	bl	800f01e <HAL_QSPI_Command>
 800c946:	b9e0      	cbnz	r0, 800c982 <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 800c948:	2302      	movs	r3, #2
  s_config.Mask            = N25Q128A_SR_WREN;
 800c94a:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 800c94e:	2201      	movs	r2, #1
 800c950:	2310      	movs	r3, #16
 800c952:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 800c956:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 800c95a:	2305      	movs	r3, #5
 800c95c:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 800c960:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 800c964:	9004      	str	r0, [sp, #16]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 800c966:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800c968:	4807      	ldr	r0, [pc, #28]	; (800c988 <QSPI_WriteEnable.constprop.0+0x6c>)
 800c96a:	f241 3388 	movw	r3, #5000	; 0x1388
 800c96e:	466a      	mov	r2, sp
 800c970:	a906      	add	r1, sp, #24
 800c972:	f002 fb98 	bl	800f0a6 <HAL_QSPI_AutoPolling>
    return QSPI_ERROR;
 800c976:	3800      	subs	r0, #0
 800c978:	bf18      	it	ne
 800c97a:	2001      	movne	r0, #1
}
 800c97c:	b015      	add	sp, #84	; 0x54
 800c97e:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 800c982:	2001      	movs	r0, #1
 800c984:	e7fa      	b.n	800c97c <QSPI_WriteEnable.constprop.0+0x60>
 800c986:	bf00      	nop
 800c988:	2002c214 	.word	0x2002c214

0800c98c <BSP_QSPI_EnableMemoryMappedMode>:
{
 800c98c:	b500      	push	{lr}
 800c98e:	b091      	sub	sp, #68	; 0x44
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800c990:	f44f 7380 	mov.w	r3, #256	; 0x100
 800c994:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 800c996:	23eb      	movs	r3, #235	; 0xeb
 800c998:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 800c99a:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 800c99e:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 800c9a0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800c9a4:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 800c9a6:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
 800c9aa:	2300      	movs	r3, #0
 800c9ac:	e9cd 320a 	strd	r3, r2, [sp, #40]	; 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 800c9b0:	220a      	movs	r2, #10
 800c9b2:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 800c9b4:	a902      	add	r1, sp, #8
 800c9b6:	466a      	mov	r2, sp
 800c9b8:	4806      	ldr	r0, [pc, #24]	; (800c9d4 <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800c9ba:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800c9bc:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
 800c9c0:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 800c9c2:	f002 fbc0 	bl	800f146 <HAL_QSPI_MemoryMapped>
}
 800c9c6:	3800      	subs	r0, #0
 800c9c8:	bf18      	it	ne
 800c9ca:	2001      	movne	r0, #1
 800c9cc:	b011      	add	sp, #68	; 0x44
 800c9ce:	f85d fb04 	ldr.w	pc, [sp], #4
 800c9d2:	bf00      	nop
 800c9d4:	2002c214 	.word	0x2002c214

0800c9d8 <BSP_QSPI_MspInit>:
{
 800c9d8:	b570      	push	{r4, r5, r6, lr}
 800c9da:	b088      	sub	sp, #32
  QSPI_CLK_ENABLE();
 800c9dc:	4b2c      	ldr	r3, [pc, #176]	; (800ca90 <BSP_QSPI_MspInit+0xb8>)
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 800c9de:	482d      	ldr	r0, [pc, #180]	; (800ca94 <BSP_QSPI_MspInit+0xbc>)
  QSPI_CLK_ENABLE();
 800c9e0:	2400      	movs	r4, #0
 800c9e2:	9400      	str	r4, [sp, #0]
 800c9e4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800c9e6:	f042 0202 	orr.w	r2, r2, #2
 800c9ea:	639a      	str	r2, [r3, #56]	; 0x38
 800c9ec:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800c9ee:	f002 0202 	and.w	r2, r2, #2
 800c9f2:	9200      	str	r2, [sp, #0]
 800c9f4:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 800c9f6:	699a      	ldr	r2, [r3, #24]
 800c9f8:	f042 0202 	orr.w	r2, r2, #2
 800c9fc:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 800c9fe:	699a      	ldr	r2, [r3, #24]
 800ca00:	f022 0202 	bic.w	r2, r2, #2
 800ca04:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 800ca06:	9401      	str	r4, [sp, #4]
 800ca08:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800ca0a:	f042 0202 	orr.w	r2, r2, #2
 800ca0e:	631a      	str	r2, [r3, #48]	; 0x30
 800ca10:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800ca12:	f002 0202 	and.w	r2, r2, #2
 800ca16:	9201      	str	r2, [sp, #4]
 800ca18:	9a01      	ldr	r2, [sp, #4]
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 800ca1a:	9402      	str	r4, [sp, #8]
 800ca1c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800ca1e:	f042 0220 	orr.w	r2, r2, #32
 800ca22:	631a      	str	r2, [r3, #48]	; 0x30
 800ca24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ca26:	f003 0320 	and.w	r3, r3, #32
 800ca2a:	9302      	str	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 800ca2c:	2240      	movs	r2, #64	; 0x40
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 800ca2e:	9b02      	ldr	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 800ca30:	2302      	movs	r3, #2
 800ca32:	e9cd 2303 	strd	r2, r3, [sp, #12]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 800ca36:	2101      	movs	r1, #1
 800ca38:	2303      	movs	r3, #3
 800ca3a:	e9cd 1305 	strd	r1, r3, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 800ca3e:	260a      	movs	r6, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 800ca40:	a903      	add	r1, sp, #12
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 800ca42:	2509      	movs	r5, #9
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 800ca44:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 800ca46:	f001 f9d9 	bl	800ddfc <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 800ca4a:	f44f 6380 	mov.w	r3, #1024	; 0x400
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 800ca4e:	a903      	add	r1, sp, #12
 800ca50:	4811      	ldr	r0, [pc, #68]	; (800ca98 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 800ca52:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 800ca54:	9405      	str	r4, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 800ca56:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 800ca58:	f001 f9d0 	bl	800ddfc <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 800ca5c:	f44f 7340 	mov.w	r3, #768	; 0x300
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 800ca60:	a903      	add	r1, sp, #12
 800ca62:	480d      	ldr	r0, [pc, #52]	; (800ca98 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 800ca64:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 800ca66:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 800ca68:	f001 f9c8 	bl	800ddfc <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 800ca6c:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 800ca6e:	a903      	add	r1, sp, #12
 800ca70:	4809      	ldr	r0, [pc, #36]	; (800ca98 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 800ca72:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 800ca74:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 800ca76:	f001 f9c1 	bl	800ddfc <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 800ca7a:	4622      	mov	r2, r4
 800ca7c:	210f      	movs	r1, #15
 800ca7e:	205b      	movs	r0, #91	; 0x5b
 800ca80:	f000 fb88 	bl	800d194 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 800ca84:	205b      	movs	r0, #91	; 0x5b
 800ca86:	f000 fbb7 	bl	800d1f8 <HAL_NVIC_EnableIRQ>
}
 800ca8a:	b008      	add	sp, #32
 800ca8c:	bd70      	pop	{r4, r5, r6, pc}
 800ca8e:	bf00      	nop
 800ca90:	40023800 	.word	0x40023800
 800ca94:	40020400 	.word	0x40020400
 800ca98:	40021400 	.word	0x40021400

0800ca9c <BSP_QSPI_Init>:
{
 800ca9c:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 800ca9e:	4c48      	ldr	r4, [pc, #288]	; (800cbc0 <BSP_QSPI_Init+0x124>)
 800caa0:	4b48      	ldr	r3, [pc, #288]	; (800cbc4 <BSP_QSPI_Init+0x128>)
 800caa2:	6023      	str	r3, [r4, #0]
{
 800caa4:	b091      	sub	sp, #68	; 0x44
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 800caa6:	4620      	mov	r0, r4
 800caa8:	f002 faa6 	bl	800eff8 <HAL_QSPI_DeInit>
 800caac:	4605      	mov	r5, r0
 800caae:	b110      	cbz	r0, 800cab6 <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 800cab0:	2001      	movs	r0, #1
}
 800cab2:	b011      	add	sp, #68	; 0x44
 800cab4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 800cab6:	4601      	mov	r1, r0
 800cab8:	4620      	mov	r0, r4
 800caba:	f7ff ff8d 	bl	800c9d8 <BSP_QSPI_MspInit>
  QSPIHandle.Init.ClockPrescaler     = 1; /* QSPI Freq= 180 MHz / (1+1) = 90 MHz */
 800cabe:	2601      	movs	r6, #1
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 800cac0:	2310      	movs	r3, #16
  QSPIHandle.Init.FifoThreshold      = 1;
 800cac2:	e9c4 6601 	strd	r6, r6, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 800cac6:	60e3      	str	r3, [r4, #12]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800cac8:	f04f 7780 	mov.w	r7, #16777216	; 0x1000000
 800cacc:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 800cad0:	fab3 f383 	clz	r3, r3
 800cad4:	3b01      	subs	r3, #1
 800cad6:	6123      	str	r3, [r4, #16]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 800cad8:	4620      	mov	r0, r4
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 800cada:	f44f 6380 	mov.w	r3, #1024	; 0x400
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 800cade:	e9c4 3505 	strd	r3, r5, [r4, #20]
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 800cae2:	e9c4 5507 	strd	r5, r5, [r4, #28]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 800cae6:	f002 fa33 	bl	800ef50 <HAL_QSPI_Init>
 800caea:	2800      	cmp	r0, #0
 800caec:	d1e0      	bne.n	800cab0 <BSP_QSPI_Init+0x14>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800caee:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800caf2:	e9cd 000d 	strd	r0, r0, [sp, #52]	; 0x34
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800caf6:	f44f 7580 	mov.w	r5, #256	; 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 800cafa:	2366      	movs	r3, #102	; 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 800cafc:	900b      	str	r0, [sp, #44]	; 0x2c
  s_command.DummyCycles       = 0;
 800cafe:	9007      	str	r0, [sp, #28]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800cb00:	900f      	str	r0, [sp, #60]	; 0x3c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800cb02:	f241 3288 	movw	r2, #5000	; 0x1388
 800cb06:	a902      	add	r1, sp, #8
 800cb08:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800cb0a:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 800cb0c:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800cb0e:	f002 fa86 	bl	800f01e <HAL_QSPI_Command>
 800cb12:	b108      	cbz	r0, 800cb18 <BSP_QSPI_Init+0x7c>
    return QSPI_NOT_SUPPORTED;
 800cb14:	2004      	movs	r0, #4
 800cb16:	e7cc      	b.n	800cab2 <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 800cb18:	2399      	movs	r3, #153	; 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800cb1a:	f241 3288 	movw	r2, #5000	; 0x1388
 800cb1e:	a902      	add	r1, sp, #8
 800cb20:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 800cb22:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800cb24:	f002 fa7b 	bl	800f01e <HAL_QSPI_Command>
 800cb28:	2800      	cmp	r0, #0
 800cb2a:	d1f3      	bne.n	800cb14 <BSP_QSPI_Init+0x78>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 800cb2c:	f241 3088 	movw	r0, #5000	; 0x1388
 800cb30:	f7ff feca 	bl	800c8c8 <QSPI_AutoPollingMemReady.constprop.0>
 800cb34:	2800      	cmp	r0, #0
 800cb36:	d1ed      	bne.n	800cb14 <BSP_QSPI_Init+0x78>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800cb38:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 800cb3c:	e9cd 600c 	strd	r6, r0, [sp, #48]	; 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800cb40:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 800cb44:	2385      	movs	r3, #133	; 0x85
  s_command.DummyCycles       = 0;
 800cb46:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800cb48:	f241 3288 	movw	r2, #5000	; 0x1388
 800cb4c:	a902      	add	r1, sp, #8
 800cb4e:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800cb50:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 800cb52:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 800cb54:	970b      	str	r7, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800cb56:	f002 fa62 	bl	800f01e <HAL_QSPI_Command>
 800cb5a:	2800      	cmp	r0, #0
 800cb5c:	d1da      	bne.n	800cb14 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800cb5e:	f241 3288 	movw	r2, #5000	; 0x1388
 800cb62:	f10d 0107 	add.w	r1, sp, #7
 800cb66:	4620      	mov	r0, r4
 800cb68:	f002 fbcc 	bl	800f304 <HAL_QSPI_Receive>
 800cb6c:	2800      	cmp	r0, #0
 800cb6e:	d1d1      	bne.n	800cb14 <BSP_QSPI_Init+0x78>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 800cb70:	f7ff fed4 	bl	800c91c <QSPI_WriteEnable.constprop.0>
 800cb74:	2800      	cmp	r0, #0
 800cb76:	d1cd      	bne.n	800cb14 <BSP_QSPI_Init+0x78>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 800cb78:	2381      	movs	r3, #129	; 0x81
 800cb7a:	9302      	str	r3, [sp, #8]
 800cb7c:	22f0      	movs	r2, #240	; 0xf0
 800cb7e:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 800cb82:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800cb86:	210a      	movs	r1, #10
 800cb88:	fab2 f282 	clz	r2, r2
 800cb8c:	fa01 f202 	lsl.w	r2, r1, r2
 800cb90:	f003 030f 	and.w	r3, r3, #15
 800cb94:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800cb96:	a902      	add	r1, sp, #8
 800cb98:	f241 3288 	movw	r2, #5000	; 0x1388
 800cb9c:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 800cb9e:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800cba2:	f002 fa3c 	bl	800f01e <HAL_QSPI_Command>
 800cba6:	2800      	cmp	r0, #0
 800cba8:	d1b4      	bne.n	800cb14 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800cbaa:	f241 3288 	movw	r2, #5000	; 0x1388
 800cbae:	f10d 0107 	add.w	r1, sp, #7
 800cbb2:	4620      	mov	r0, r4
 800cbb4:	f002 fb4a 	bl	800f24c <HAL_QSPI_Transmit>
 800cbb8:	2800      	cmp	r0, #0
 800cbba:	f43f af7a 	beq.w	800cab2 <BSP_QSPI_Init+0x16>
 800cbbe:	e7a9      	b.n	800cb14 <BSP_QSPI_Init+0x78>
 800cbc0:	2002c214 	.word	0x2002c214
 800cbc4:	a0001000 	.word	0xa0001000

0800cbc8 <BSP_QSPI_MspDeInit>:
{
 800cbc8:	b508      	push	{r3, lr}
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 800cbca:	205b      	movs	r0, #91	; 0x5b
 800cbcc:	f000 fb22 	bl	800d214 <HAL_NVIC_DisableIRQ>
  HAL_GPIO_DeInit(QSPI_CS_GPIO_PORT, QSPI_CS_PIN);
 800cbd0:	4814      	ldr	r0, [pc, #80]	; (800cc24 <BSP_QSPI_MspDeInit+0x5c>)
 800cbd2:	2140      	movs	r1, #64	; 0x40
 800cbd4:	f001 f9f8 	bl	800dfc8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 800cbd8:	4813      	ldr	r0, [pc, #76]	; (800cc28 <BSP_QSPI_MspDeInit+0x60>)
 800cbda:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800cbde:	f001 f9f3 	bl	800dfc8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D0_PIN);
 800cbe2:	4811      	ldr	r0, [pc, #68]	; (800cc28 <BSP_QSPI_MspDeInit+0x60>)
 800cbe4:	f44f 7180 	mov.w	r1, #256	; 0x100
 800cbe8:	f001 f9ee 	bl	800dfc8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D1_PIN);
 800cbec:	480e      	ldr	r0, [pc, #56]	; (800cc28 <BSP_QSPI_MspDeInit+0x60>)
 800cbee:	f44f 7100 	mov.w	r1, #512	; 0x200
 800cbf2:	f001 f9e9 	bl	800dfc8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D2_PIN);
 800cbf6:	480c      	ldr	r0, [pc, #48]	; (800cc28 <BSP_QSPI_MspDeInit+0x60>)
 800cbf8:	2180      	movs	r1, #128	; 0x80
 800cbfa:	f001 f9e5 	bl	800dfc8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D3_PIN);
 800cbfe:	480a      	ldr	r0, [pc, #40]	; (800cc28 <BSP_QSPI_MspDeInit+0x60>)
 800cc00:	2140      	movs	r1, #64	; 0x40
 800cc02:	f001 f9e1 	bl	800dfc8 <HAL_GPIO_DeInit>
  QSPI_FORCE_RESET();
 800cc06:	4b09      	ldr	r3, [pc, #36]	; (800cc2c <BSP_QSPI_MspDeInit+0x64>)
 800cc08:	699a      	ldr	r2, [r3, #24]
 800cc0a:	f042 0202 	orr.w	r2, r2, #2
 800cc0e:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 800cc10:	699a      	ldr	r2, [r3, #24]
 800cc12:	f022 0202 	bic.w	r2, r2, #2
 800cc16:	619a      	str	r2, [r3, #24]
  QSPI_CLK_DISABLE();
 800cc18:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800cc1a:	f022 0202 	bic.w	r2, r2, #2
 800cc1e:	639a      	str	r2, [r3, #56]	; 0x38
}
 800cc20:	bd08      	pop	{r3, pc}
 800cc22:	bf00      	nop
 800cc24:	40020400 	.word	0x40020400
 800cc28:	40021400 	.word	0x40021400
 800cc2c:	40023800 	.word	0x40023800

0800cc30 <BSP_QSPI_DeInit>:
{
 800cc30:	b538      	push	{r3, r4, r5, lr}
  QSPIHandle.Instance = QUADSPI;
 800cc32:	4d08      	ldr	r5, [pc, #32]	; (800cc54 <BSP_QSPI_DeInit+0x24>)
 800cc34:	4b08      	ldr	r3, [pc, #32]	; (800cc58 <BSP_QSPI_DeInit+0x28>)
 800cc36:	602b      	str	r3, [r5, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 800cc38:	4628      	mov	r0, r5
 800cc3a:	f002 f9dd 	bl	800eff8 <HAL_QSPI_DeInit>
 800cc3e:	4604      	mov	r4, r0
 800cc40:	b928      	cbnz	r0, 800cc4e <BSP_QSPI_DeInit+0x1e>
  BSP_QSPI_MspDeInit(&QSPIHandle, NULL);
 800cc42:	4601      	mov	r1, r0
 800cc44:	4628      	mov	r0, r5
 800cc46:	f7ff ffbf 	bl	800cbc8 <BSP_QSPI_MspDeInit>
}
 800cc4a:	4620      	mov	r0, r4
 800cc4c:	bd38      	pop	{r3, r4, r5, pc}
    return QSPI_ERROR;
 800cc4e:	2401      	movs	r4, #1
 800cc50:	e7fb      	b.n	800cc4a <BSP_QSPI_DeInit+0x1a>
 800cc52:	bf00      	nop
 800cc54:	2002c214 	.word	0x2002c214
 800cc58:	a0001000 	.word	0xa0001000

0800cc5c <BSP_SDRAM_Initialization_sequence>:
/**
  * @brief  Programs the SDRAM device.
  * @param  RefreshCount: SDRAM refresh counter value
  */
void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount)
{
 800cc5c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t tmpmrd = 0;

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 800cc60:	4c21      	ldr	r4, [pc, #132]	; (800cce8 <BSP_SDRAM_Initialization_sequence+0x8c>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800cc62:	4d22      	ldr	r5, [pc, #136]	; (800ccec <BSP_SDRAM_Initialization_sequence+0x90>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800cc64:	2601      	movs	r6, #1
  __IO uint32_t tmpmrd = 0;
 800cc66:	f04f 0800 	mov.w	r8, #0
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800cc6a:	2710      	movs	r7, #16
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800cc6c:	4621      	mov	r1, r4
{
 800cc6e:	4681      	mov	r9, r0
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800cc70:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800cc74:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800cc76:	e9c4 6700 	strd	r6, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 800cc7a:	e9c4 6802 	strd	r6, r8, [r4, #8]
  __IO uint32_t tmpmrd = 0;
 800cc7e:	f8cd 8004 	str.w	r8, [sp, #4]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800cc82:	f002 ffdf 	bl	800fc44 <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(1);
 800cc86:	4630      	mov	r0, r6
 800cc88:	f000 fa5e 	bl	800d148 <HAL_Delay>

  /* Step 3: Configure a PALL (precharge all) command */
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 800cc8c:	2302      	movs	r3, #2
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800cc8e:	4621      	mov	r1, r4
 800cc90:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800cc94:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800cc96:	e9c4 3700 	strd	r3, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 800cc9a:	e9c4 6802 	strd	r6, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800cc9e:	f002 ffd1 	bl	800fc44 <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 800cca2:	2303      	movs	r3, #3
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800cca4:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800cca8:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 8;
 800ccaa:	2308      	movs	r3, #8
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800ccac:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ccb0:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = 0;
 800ccb2:	e9c4 3802 	strd	r3, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800ccb6:	f002 ffc5 	bl	800fc44 <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 800ccba:	f44f 730c 	mov.w	r3, #560	; 0x230
 800ccbe:	9301      	str	r3, [sp, #4]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 800ccc0:	2304      	movs	r3, #4
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800ccc2:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800ccc6:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = tmpmrd;
 800ccc8:	9b01      	ldr	r3, [sp, #4]
  Command.AutoRefreshNumber      = 1;
 800ccca:	60a6      	str	r6, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800cccc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ccd0:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = tmpmrd;
 800ccd2:	60e3      	str	r3, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800ccd4:	f002 ffb6 	bl	800fc44 <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 800ccd8:	4649      	mov	r1, r9
 800ccda:	4628      	mov	r0, r5
}
 800ccdc:	b003      	add	sp, #12
 800ccde:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 800cce2:	f002 bfc6 	b.w	800fc72 <HAL_SDRAM_ProgramRefreshRate>
 800cce6:	bf00      	nop
 800cce8:	2001ae18 	.word	0x2001ae18
 800ccec:	2001af04 	.word	0x2001af04

0800ccf0 <BSP_SDRAM_MspInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 800ccf0:	b570      	push	{r4, r5, r6, lr}
  static DMA_HandleTypeDef dma_handle;
  GPIO_InitTypeDef gpio_init_structure;

  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 800ccf2:	4606      	mov	r6, r0
{
 800ccf4:	b08e      	sub	sp, #56	; 0x38
  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 800ccf6:	2800      	cmp	r0, #0
 800ccf8:	f000 80bd 	beq.w	800ce76 <BSP_SDRAM_MspInit+0x186>
  {
    /* Enable FMC clock */
    __HAL_RCC_FMC_CLK_ENABLE();
 800ccfc:	4b5f      	ldr	r3, [pc, #380]	; (800ce7c <BSP_SDRAM_MspInit+0x18c>)
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
    gpio_init_structure.Alternate = GPIO_AF12_FMC;

    /* GPIOC configuration : PC0 is SDNWE */
    gpio_init_structure.Pin   = GPIO_PIN_0;
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 800ccfe:	4860      	ldr	r0, [pc, #384]	; (800ce80 <BSP_SDRAM_MspInit+0x190>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
                                GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_9 | GPIO_PIN_10;
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);

    /* Configure common DMA parameters */
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 800cd00:	4c60      	ldr	r4, [pc, #384]	; (800ce84 <BSP_SDRAM_MspInit+0x194>)
    __HAL_RCC_FMC_CLK_ENABLE();
 800cd02:	2500      	movs	r5, #0
 800cd04:	9500      	str	r5, [sp, #0]
 800cd06:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800cd08:	f042 0201 	orr.w	r2, r2, #1
 800cd0c:	639a      	str	r2, [r3, #56]	; 0x38
 800cd0e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800cd10:	f002 0201 	and.w	r2, r2, #1
 800cd14:	9200      	str	r2, [sp, #0]
 800cd16:	9a00      	ldr	r2, [sp, #0]
    __DMAx_CLK_ENABLE();
 800cd18:	9501      	str	r5, [sp, #4]
 800cd1a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800cd1c:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 800cd20:	631a      	str	r2, [r3, #48]	; 0x30
 800cd22:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800cd24:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 800cd28:	9201      	str	r2, [sp, #4]
 800cd2a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800cd2c:	9502      	str	r5, [sp, #8]
 800cd2e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800cd30:	f042 0204 	orr.w	r2, r2, #4
 800cd34:	631a      	str	r2, [r3, #48]	; 0x30
 800cd36:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800cd38:	f002 0204 	and.w	r2, r2, #4
 800cd3c:	9202      	str	r2, [sp, #8]
 800cd3e:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800cd40:	9503      	str	r5, [sp, #12]
 800cd42:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800cd44:	f042 0208 	orr.w	r2, r2, #8
 800cd48:	631a      	str	r2, [r3, #48]	; 0x30
 800cd4a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800cd4c:	f002 0208 	and.w	r2, r2, #8
 800cd50:	9203      	str	r2, [sp, #12]
 800cd52:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 800cd54:	9504      	str	r5, [sp, #16]
 800cd56:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800cd58:	f042 0210 	orr.w	r2, r2, #16
 800cd5c:	631a      	str	r2, [r3, #48]	; 0x30
 800cd5e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800cd60:	f002 0210 	and.w	r2, r2, #16
 800cd64:	9204      	str	r2, [sp, #16]
 800cd66:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800cd68:	9505      	str	r5, [sp, #20]
 800cd6a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800cd6c:	f042 0220 	orr.w	r2, r2, #32
 800cd70:	631a      	str	r2, [r3, #48]	; 0x30
 800cd72:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800cd74:	f002 0220 	and.w	r2, r2, #32
 800cd78:	9205      	str	r2, [sp, #20]
 800cd7a:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800cd7c:	9506      	str	r5, [sp, #24]
 800cd7e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800cd80:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800cd84:	631a      	str	r2, [r3, #48]	; 0x30
 800cd86:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800cd88:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800cd8c:	9206      	str	r2, [sp, #24]
 800cd8e:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 800cd90:	9507      	str	r5, [sp, #28]
 800cd92:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800cd94:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800cd98:	631a      	str	r2, [r3, #48]	; 0x30
 800cd9a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800cd9c:	f002 0280 	and.w	r2, r2, #128	; 0x80
 800cda0:	9207      	str	r2, [sp, #28]
 800cda2:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 800cda4:	9508      	str	r5, [sp, #32]
 800cda6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800cda8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800cdac:	631a      	str	r2, [r3, #48]	; 0x30
 800cdae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cdb0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800cdb4:	9308      	str	r3, [sp, #32]
    gpio_init_structure.Pull      = GPIO_PULLUP;
 800cdb6:	2202      	movs	r2, #2
    __HAL_RCC_GPIOI_CLK_ENABLE();
 800cdb8:	9b08      	ldr	r3, [sp, #32]
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
 800cdba:	920c      	str	r2, [sp, #48]	; 0x30
    gpio_init_structure.Pull      = GPIO_PULLUP;
 800cdbc:	2301      	movs	r3, #1
 800cdbe:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 800cdc2:	a909      	add	r1, sp, #36	; 0x24
    gpio_init_structure.Alternate = GPIO_AF12_FMC;
 800cdc4:	220c      	movs	r2, #12
 800cdc6:	920d      	str	r2, [sp, #52]	; 0x34
    gpio_init_structure.Pin   = GPIO_PIN_0;
 800cdc8:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 800cdca:	f001 f817 	bl	800ddfc <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 800cdce:	f24c 7303 	movw	r3, #50947	; 0xc703
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 800cdd2:	482d      	ldr	r0, [pc, #180]	; (800ce88 <BSP_SDRAM_MspInit+0x198>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 800cdd4:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 800cdd6:	a909      	add	r1, sp, #36	; 0x24
 800cdd8:	f001 f810 	bl	800ddfc <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 800cddc:	f64f 7383 	movw	r3, #65411	; 0xff83
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 800cde0:	482a      	ldr	r0, [pc, #168]	; (800ce8c <BSP_SDRAM_MspInit+0x19c>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 800cde2:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 800cde4:	a909      	add	r1, sp, #36	; 0x24
 800cde6:	f001 f809 	bl	800ddfc <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 800cdea:	f64f 033f 	movw	r3, #63551	; 0xf83f
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 800cdee:	4828      	ldr	r0, [pc, #160]	; (800ce90 <BSP_SDRAM_MspInit+0x1a0>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 800cdf0:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 800cdf2:	a909      	add	r1, sp, #36	; 0x24
 800cdf4:	f001 f802 	bl	800ddfc <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 800cdf8:	f248 1333 	movw	r3, #33075	; 0x8133
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 800cdfc:	4825      	ldr	r0, [pc, #148]	; (800ce94 <BSP_SDRAM_MspInit+0x1a4>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 800cdfe:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 800ce00:	a909      	add	r1, sp, #36	; 0x24
 800ce02:	f000 fffb 	bl	800ddfc <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 800ce06:	f64f 730c 	movw	r3, #65292	; 0xff0c
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 800ce0a:	4823      	ldr	r0, [pc, #140]	; (800ce98 <BSP_SDRAM_MspInit+0x1a8>)
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 800ce0c:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 800ce0e:	a909      	add	r1, sp, #36	; 0x24
 800ce10:	f000 fff4 	bl	800ddfc <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 800ce14:	f240 63ff 	movw	r3, #1791	; 0x6ff
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 800ce18:	4820      	ldr	r0, [pc, #128]	; (800ce9c <BSP_SDRAM_MspInit+0x1ac>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 800ce1a:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 800ce1c:	a909      	add	r1, sp, #36	; 0x24
 800ce1e:	f000 ffed 	bl	800ddfc <HAL_GPIO_Init>
    dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
    dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
 800ce22:	2280      	movs	r2, #128	; 0x80
 800ce24:	f44f 7300 	mov.w	r3, #512	; 0x200
 800ce28:	e9c4 2302 	strd	r2, r3, [r4, #8]
    dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
    dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 800ce2c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800ce30:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800ce34:	e9c4 1304 	strd	r1, r3, [r4, #16]
    dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 800ce38:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    dma_handle.Init.Mode                = DMA_NORMAL;
 800ce3c:	e9c4 3506 	strd	r3, r5, [r4, #24]
    dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
 800ce40:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 800ce44:	e9c4 3508 	strd	r3, r5, [r4, #32]
    dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 800ce48:	2303      	movs	r3, #3
    dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 800ce4a:	e9c4 350a 	strd	r3, r5, [r4, #40]	; 0x28
    dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;
 800ce4e:	6325      	str	r5, [r4, #48]	; 0x30

    dma_handle.Instance = SDRAM_DMAx_STREAM;
 800ce50:	4b13      	ldr	r3, [pc, #76]	; (800cea0 <BSP_SDRAM_MspInit+0x1b0>)

    /* Associate the DMA handle */
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 800ce52:	6334      	str	r4, [r6, #48]	; 0x30

    /* Deinitialize the stream for new transfer */
    HAL_DMA_DeInit(&dma_handle);
 800ce54:	4620      	mov	r0, r4
    dma_handle.Instance = SDRAM_DMAx_STREAM;
 800ce56:	6023      	str	r3, [r4, #0]
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 800ce58:	6065      	str	r5, [r4, #4]
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 800ce5a:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_DMA_DeInit(&dma_handle);
 800ce5c:	f000 fa94 	bl	800d388 <HAL_DMA_DeInit>

    /* Configure the DMA stream */
    HAL_DMA_Init(&dma_handle);
 800ce60:	4620      	mov	r0, r4
 800ce62:	f000 fa11 	bl	800d288 <HAL_DMA_Init>

    /* NVIC configuration for DMA transfer complete interrupt */
    HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 5, 0);
 800ce66:	2038      	movs	r0, #56	; 0x38
 800ce68:	462a      	mov	r2, r5
 800ce6a:	2105      	movs	r1, #5
 800ce6c:	f000 f992 	bl	800d194 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
 800ce70:	2038      	movs	r0, #56	; 0x38
 800ce72:	f000 f9c1 	bl	800d1f8 <HAL_NVIC_EnableIRQ>

  } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 800ce76:	b00e      	add	sp, #56	; 0x38
 800ce78:	bd70      	pop	{r4, r5, r6, pc}
 800ce7a:	bf00      	nop
 800ce7c:	40023800 	.word	0x40023800
 800ce80:	40020800 	.word	0x40020800
 800ce84:	2001ae44 	.word	0x2001ae44
 800ce88:	40020c00 	.word	0x40020c00
 800ce8c:	40021000 	.word	0x40021000
 800ce90:	40021400 	.word	0x40021400
 800ce94:	40021800 	.word	0x40021800
 800ce98:	40021c00 	.word	0x40021c00
 800ce9c:	40022000 	.word	0x40022000
 800cea0:	40026410 	.word	0x40026410

0800cea4 <BSP_SDRAM_Init>:
{
 800cea4:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 800cea6:	4c19      	ldr	r4, [pc, #100]	; (800cf0c <BSP_SDRAM_Init+0x68>)
  Timing.LoadToActiveDelay    = 2;
 800cea8:	4d19      	ldr	r5, [pc, #100]	; (800cf10 <BSP_SDRAM_Init+0x6c>)
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 800ceaa:	4b1a      	ldr	r3, [pc, #104]	; (800cf14 <BSP_SDRAM_Init+0x70>)
 800ceac:	6023      	str	r3, [r4, #0]
  Timing.ExitSelfRefreshDelay = 7;
 800ceae:	2107      	movs	r1, #7
 800ceb0:	2302      	movs	r3, #2
  Timing.SelfRefreshTime      = 4;
 800ceb2:	2204      	movs	r2, #4
  Timing.ExitSelfRefreshDelay = 7;
 800ceb4:	e9c5 3100 	strd	r3, r1, [r5]
  Timing.RowCycleDelay        = 7;
 800ceb8:	e9c5 2102 	strd	r2, r1, [r5, #8]
  Timing.RPDelay              = 2;
 800cebc:	e9c5 3304 	strd	r3, r3, [r5, #16]
  Timing.RCDDelay             = 2;
 800cec0:	61ab      	str	r3, [r5, #24]
  sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
 800cec2:	60e2      	str	r2, [r4, #12]
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800cec4:	2340      	movs	r3, #64	; 0x40
 800cec6:	2220      	movs	r2, #32
 800cec8:	e9c4 2304 	strd	r2, r3, [r4, #16]
  sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
 800cecc:	2100      	movs	r1, #0
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 800cece:	f44f 73c0 	mov.w	r3, #384	; 0x180
  sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800ced2:	e9c4 3106 	strd	r3, r1, [r4, #24]
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 800ced6:	f44f 6000 	mov.w	r0, #2048	; 0x800
 800ceda:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800cede:	e9c4 0308 	strd	r0, r3, [r4, #32]
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 800cee2:	4620      	mov	r0, r4
  sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
 800cee4:	e9c4 1101 	strd	r1, r1, [r4, #4]
  sdramHandle.Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 800cee8:	62a1      	str	r1, [r4, #40]	; 0x28
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 800ceea:	f7ff ff01 	bl	800ccf0 <BSP_SDRAM_MspInit>
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 800ceee:	4629      	mov	r1, r5
 800cef0:	4620      	mov	r0, r4
 800cef2:	f002 fe79 	bl	800fbe8 <HAL_SDRAM_Init>
 800cef6:	4c08      	ldr	r4, [pc, #32]	; (800cf18 <BSP_SDRAM_Init+0x74>)
 800cef8:	3800      	subs	r0, #0
 800cefa:	bf18      	it	ne
 800cefc:	2001      	movne	r0, #1
 800cefe:	7020      	strb	r0, [r4, #0]
  BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
 800cf00:	f240 5069 	movw	r0, #1385	; 0x569
 800cf04:	f7ff feaa 	bl	800cc5c <BSP_SDRAM_Initialization_sequence>
}
 800cf08:	7820      	ldrb	r0, [r4, #0]
 800cf0a:	bd38      	pop	{r3, r4, r5, pc}
 800cf0c:	2001af04 	.word	0x2001af04
 800cf10:	2001ae28 	.word	0x2001ae28
 800cf14:	a0000140 	.word	0xa0000140
 800cf18:	2000004c 	.word	0x2000004c

0800cf1c <BSP_SDRAM_MspDeInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspDeInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 800cf1c:	b508      	push	{r3, lr}
    static DMA_HandleTypeDef dma_handle;

    if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 800cf1e:	b148      	cbz	r0, 800cf34 <BSP_SDRAM_MspDeInit+0x18>
    {
      /* Disable NVIC configuration for DMA interrupt */
      HAL_NVIC_DisableIRQ(SDRAM_DMAx_IRQn);
 800cf20:	2038      	movs	r0, #56	; 0x38
 800cf22:	f000 f977 	bl	800d214 <HAL_NVIC_DisableIRQ>

      /* Deinitialize the stream for new transfer */
      dma_handle.Instance = SDRAM_DMAx_STREAM;
 800cf26:	4804      	ldr	r0, [pc, #16]	; (800cf38 <BSP_SDRAM_MspDeInit+0x1c>)
 800cf28:	4b04      	ldr	r3, [pc, #16]	; (800cf3c <BSP_SDRAM_MspDeInit+0x20>)
 800cf2a:	6003      	str	r3, [r0, #0]

      /* GPIO pins clock, FMC clock and DMA clock can be shut down in the application
       by surcharging this __weak function */

    } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 800cf2c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      HAL_DMA_DeInit(&dma_handle);
 800cf30:	f000 ba2a 	b.w	800d388 <HAL_DMA_DeInit>
}
 800cf34:	bd08      	pop	{r3, pc}
 800cf36:	bf00      	nop
 800cf38:	2001aea4 	.word	0x2001aea4
 800cf3c:	40026410 	.word	0x40026410

0800cf40 <BSP_SDRAM_DeInit>:
{
 800cf40:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 800cf42:	4c07      	ldr	r4, [pc, #28]	; (800cf60 <BSP_SDRAM_DeInit+0x20>)
 800cf44:	4b07      	ldr	r3, [pc, #28]	; (800cf64 <BSP_SDRAM_DeInit+0x24>)
 800cf46:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_DeInit(&sdramHandle) == HAL_OK)
 800cf48:	4620      	mov	r0, r4
 800cf4a:	f002 fe6d 	bl	800fc28 <HAL_SDRAM_DeInit>
 800cf4e:	4d06      	ldr	r5, [pc, #24]	; (800cf68 <BSP_SDRAM_DeInit+0x28>)
 800cf50:	4601      	mov	r1, r0
 800cf52:	b918      	cbnz	r0, 800cf5c <BSP_SDRAM_DeInit+0x1c>
    sdramstatus = SDRAM_OK;
 800cf54:	7028      	strb	r0, [r5, #0]
   BSP_SDRAM_MspDeInit(&sdramHandle, (void *)NULL);
 800cf56:	4620      	mov	r0, r4
 800cf58:	f7ff ffe0 	bl	800cf1c <BSP_SDRAM_MspDeInit>
}
 800cf5c:	7828      	ldrb	r0, [r5, #0]
 800cf5e:	bd38      	pop	{r3, r4, r5, pc}
 800cf60:	2001af04 	.word	0x2001af04
 800cf64:	a0000140 	.word	0xa0000140
 800cf68:	2000004d 	.word	0x2000004d

0800cf6c <BSP_TS_Init>:
  * @param  ts_SizeX : Maximum X size of the TS area on LCD
  * @param  ts_SizeY : Maximum Y size of the TS area on LCD
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
{
 800cf6c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  /* Note : I2C_Address is un-initialized here, but is not used at all in init function */
  /* but the prototype of Init() is like that in template and should be respected       */

  /* Initialize the communication channel to sensor (I2C) if necessary */
  /* that is initialization is done only once after a power up         */
  ft6x06_ts_drv.Init(I2C_Address);
 800cf70:	4d19      	ldr	r5, [pc, #100]	; (800cfd8 <BSP_TS_Init+0x6c>)
 800cf72:	f8df 8070 	ldr.w	r8, [pc, #112]	; 800cfe4 <BSP_TS_Init+0x78>
 800cf76:	682b      	ldr	r3, [r5, #0]
{
 800cf78:	4604      	mov	r4, r0
  ft6x06_ts_drv.Init(I2C_Address);
 800cf7a:	f898 0000 	ldrb.w	r0, [r8]
{
 800cf7e:	460f      	mov	r7, r1
  ft6x06_ts_drv.Init(I2C_Address);
 800cf80:	4798      	blx	r3

  ts_id1 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS);
 800cf82:	686b      	ldr	r3, [r5, #4]
 800cf84:	2054      	movs	r0, #84	; 0x54
 800cf86:	4798      	blx	r3
  if(ts_id1 != FT6206_ID_VALUE)
 800cf88:	b2c0      	uxtb	r0, r0
 800cf8a:	2811      	cmp	r0, #17
 800cf8c:	4646      	mov	r6, r8
 800cf8e:	46a9      	mov	r9, r5
 800cf90:	d00b      	beq.n	800cfaa <BSP_TS_Init+0x3e>
  {
    ts_id2 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS_A02);
 800cf92:	686b      	ldr	r3, [r5, #4]
 800cf94:	2070      	movs	r0, #112	; 0x70
 800cf96:	4798      	blx	r3
    I2C_Address    = TS_I2C_ADDRESS;    
  }
  
  /* Scan FT6xx6 TouchScreen IC controller ID register by I2C Read       */
  /* Verify this is a FT6206 or FT6336G, otherwise this is an error case */
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 800cf98:	b2c0      	uxtb	r0, r0
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 800cf9a:	2370      	movs	r3, #112	; 0x70
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 800cf9c:	2811      	cmp	r0, #17
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 800cf9e:	f888 3000 	strb.w	r3, [r8]
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 800cfa2:	d005      	beq.n	800cfb0 <BSP_TS_Init+0x44>

    } /* of if(ts_status == TS_OK) */
  }
  else
  {
    ts_status = TS_DEVICE_NOT_FOUND;
 800cfa4:	2003      	movs	r0, #3
  }

  return (ts_status);
}
 800cfa6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    I2C_Address    = TS_I2C_ADDRESS;    
 800cfaa:	2354      	movs	r3, #84	; 0x54
 800cfac:	f888 3000 	strb.w	r3, [r8]
    ts_driver = &ft6x06_ts_drv;
 800cfb0:	4b0a      	ldr	r3, [pc, #40]	; (800cfdc <BSP_TS_Init+0x70>)
 800cfb2:	4d0b      	ldr	r5, [pc, #44]	; (800cfe0 <BSP_TS_Init+0x74>)
      ts_driver->Reset(I2C_Address);
 800cfb4:	7830      	ldrb	r0, [r6, #0]
    ts_driver = &ft6x06_ts_drv;
 800cfb6:	f8c5 9000 	str.w	r9, [r5]
      ts_orientation = TS_SWAP_XY | TS_SWAP_Y;                 
 800cfba:	42bc      	cmp	r4, r7
 800cfbc:	bf34      	ite	cc
 800cfbe:	2101      	movcc	r1, #1
 800cfc0:	210c      	movcs	r1, #12
 800cfc2:	7019      	strb	r1, [r3, #0]
      ts_driver->Reset(I2C_Address);
 800cfc4:	f8d9 3008 	ldr.w	r3, [r9, #8]
 800cfc8:	4798      	blx	r3
      ts_driver->Start(I2C_Address);
 800cfca:	682b      	ldr	r3, [r5, #0]
 800cfcc:	7830      	ldrb	r0, [r6, #0]
 800cfce:	68db      	ldr	r3, [r3, #12]
 800cfd0:	4798      	blx	r3
  uint8_t ts_status = TS_OK;
 800cfd2:	2000      	movs	r0, #0
 800cfd4:	e7e7      	b.n	800cfa6 <BSP_TS_Init+0x3a>
 800cfd6:	bf00      	nop
 800cfd8:	20000020 	.word	0x20000020
 800cfdc:	2001af50 	.word	0x2001af50
 800cfe0:	2001af4c 	.word	0x2001af4c
 800cfe4:	2001af38 	.word	0x2001af38

0800cfe8 <BSP_TS_GetState>:
  * @brief  Returns status and positions of the touch screen.
  * @param  TS_State: Pointer to touch screen current state structure
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_GetState(TS_StateTypeDef *TS_State)
{
 800cfe8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t area = 0;
  uint32_t event = 0;
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  /* Check and update the number of touches active detected */
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 800cfec:	4c34      	ldr	r4, [pc, #208]	; (800d0c0 <BSP_TS_GetState+0xd8>)
 800cfee:	4d35      	ldr	r5, [pc, #212]	; (800d0c4 <BSP_TS_GetState+0xdc>)
 800cff0:	6823      	ldr	r3, [r4, #0]
{
 800cff2:	b085      	sub	sp, #20
 800cff4:	4606      	mov	r6, r0
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 800cff6:	691b      	ldr	r3, [r3, #16]
 800cff8:	7828      	ldrb	r0, [r5, #0]
 800cffa:	4798      	blx	r3
 800cffc:	46a1      	mov	r9, r4
 800cffe:	7030      	strb	r0, [r6, #0]
  if(TS_State->touchDetected)
 800d000:	9501      	str	r5, [sp, #4]
 800d002:	b158      	cbz	r0, 800d01c <BSP_TS_GetState+0x34>
 800d004:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800d0d0 <BSP_TS_GetState+0xe8>
 800d008:	4f2f      	ldr	r7, [pc, #188]	; (800d0c8 <BSP_TS_GetState+0xe0>)
 800d00a:	f106 0b02 	add.w	fp, r6, #2
 800d00e:	ad03      	add	r5, sp, #12
 800d010:	a902      	add	r1, sp, #8
  {
    for(index=0; index < TS_State->touchDetected; index++)
 800d012:	f04f 0a00 	mov.w	sl, #0
 800d016:	7833      	ldrb	r3, [r6, #0]
 800d018:	4553      	cmp	r3, sl
 800d01a:	d803      	bhi.n	800d024 <BSP_TS_GetState+0x3c>
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  } /* end of if(TS_State->touchDetected != 0) */

  return (ts_status);
}
 800d01c:	2000      	movs	r0, #0
 800d01e:	b005      	add	sp, #20
 800d020:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      ts_driver->GetXY(I2C_Address, &(Raw_x[index]), &(Raw_y[index]));
 800d024:	f8d9 3000 	ldr.w	r3, [r9]
 800d028:	9801      	ldr	r0, [sp, #4]
 800d02a:	695b      	ldr	r3, [r3, #20]
 800d02c:	7800      	ldrb	r0, [r0, #0]
 800d02e:	9100      	str	r1, [sp, #0]
 800d030:	462a      	mov	r2, r5
 800d032:	4798      	blx	r3
      if(ts_orientation & TS_SWAP_XY)
 800d034:	4b25      	ldr	r3, [pc, #148]	; (800d0cc <BSP_TS_GetState+0xe4>)
 800d036:	9900      	ldr	r1, [sp, #0]
 800d038:	781b      	ldrb	r3, [r3, #0]
 800d03a:	f013 0f08 	tst.w	r3, #8
        tmp = Raw_x[index];
 800d03e:	bf1f      	itttt	ne
 800d040:	880a      	ldrhne	r2, [r1, #0]
        Raw_x[index] = Raw_y[index]; 
 800d042:	8828      	ldrhne	r0, [r5, #0]
 800d044:	8008      	strhne	r0, [r1, #0]
        Raw_y[index] = tmp;
 800d046:	802a      	strhne	r2, [r5, #0]
      if(ts_orientation & TS_SWAP_X)
 800d048:	079a      	lsls	r2, r3, #30
        Raw_x[index] = FT_6206_MAX_WIDTH - 1 - Raw_x[index];
 800d04a:	bf41      	itttt	mi
 800d04c:	880a      	ldrhmi	r2, [r1, #0]
 800d04e:	f5c2 7247 	rsbmi	r2, r2, #796	; 0x31c
 800d052:	3203      	addmi	r2, #3
 800d054:	800a      	strhmi	r2, [r1, #0]
      if(ts_orientation & TS_SWAP_Y)
 800d056:	075b      	lsls	r3, r3, #29
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 800d058:	bf48      	it	mi
 800d05a:	882b      	ldrhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 800d05c:	f8d8 2000 	ldr.w	r2, [r8]
 800d060:	f831 0b02 	ldrh.w	r0, [r1], #2
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 800d064:	bf42      	ittt	mi
 800d066:	f5c3 73ef 	rsbmi	r3, r3, #478	; 0x1de
 800d06a:	3301      	addmi	r3, #1
 800d06c:	802b      	strhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 800d06e:	b293      	uxth	r3, r2
 800d070:	4290      	cmp	r0, r2
 800d072:	bf8c      	ite	hi
 800d074:	1ac3      	subhi	r3, r0, r3
 800d076:	1a1b      	subls	r3, r3, r0
 800d078:	b29b      	uxth	r3, r3
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 800d07a:	f835 2b02 	ldrh.w	r2, [r5], #2
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 800d07e:	9300      	str	r3, [sp, #0]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 800d080:	683b      	ldr	r3, [r7, #0]
 800d082:	b29c      	uxth	r4, r3
 800d084:	429a      	cmp	r2, r3
 800d086:	bf88      	it	hi
 800d088:	1b14      	subhi	r4, r2, r4
      if ((xDiff + yDiff) > 5)
 800d08a:	9b00      	ldr	r3, [sp, #0]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 800d08c:	bf98      	it	ls
 800d08e:	1aa4      	subls	r4, r4, r2
 800d090:	b2a4      	uxth	r4, r4
      if ((xDiff + yDiff) > 5)
 800d092:	441c      	add	r4, r3
 800d094:	46c4      	mov	ip, r8
 800d096:	2c05      	cmp	r4, #5
        _x[index] = Raw_x[index];
 800d098:	bfc8      	it	gt
 800d09a:	f8c8 0000 	strgt.w	r0, [r8]
      TS_State->touchX[index] = _x[index];
 800d09e:	f8dc 3000 	ldr.w	r3, [ip]
        _y[index] = Raw_y[index];
 800d0a2:	bfc8      	it	gt
 800d0a4:	603a      	strgt	r2, [r7, #0]
      TS_State->touchX[index] = _x[index];
 800d0a6:	46be      	mov	lr, r7
 800d0a8:	f82b 3b02 	strh.w	r3, [fp], #2
      TS_State->touchY[index] = _y[index];
 800d0ac:	f8de 3000 	ldr.w	r3, [lr]
 800d0b0:	f8ab 3002 	strh.w	r3, [fp, #2]
    for(index=0; index < TS_State->touchDetected; index++)
 800d0b4:	f108 0804 	add.w	r8, r8, #4
 800d0b8:	3704      	adds	r7, #4
 800d0ba:	f10a 0a01 	add.w	sl, sl, #1
 800d0be:	e7aa      	b.n	800d016 <BSP_TS_GetState+0x2e>
 800d0c0:	2001af4c 	.word	0x2001af4c
 800d0c4:	2001af38 	.word	0x2001af38
 800d0c8:	2001af44 	.word	0x2001af44
 800d0cc:	2001af50 	.word	0x2001af50
 800d0d0:	2001af3c 	.word	0x2001af3c

0800d0d4 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800d0d4:	4b05      	ldr	r3, [pc, #20]	; (800d0ec <SystemInit+0x18>)
 800d0d6:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 800d0da:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800d0de:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800d0e2:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800d0e6:	609a      	str	r2, [r3, #8]
#endif
}
 800d0e8:	4770      	bx	lr
 800d0ea:	bf00      	nop
 800d0ec:	e000ed00 	.word	0xe000ed00

0800d0f0 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800d0f0:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800d0f2:	4b0b      	ldr	r3, [pc, #44]	; (800d120 <HAL_Init+0x30>)
 800d0f4:	681a      	ldr	r2, [r3, #0]
 800d0f6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800d0fa:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800d0fc:	681a      	ldr	r2, [r3, #0]
 800d0fe:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800d102:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800d104:	681a      	ldr	r2, [r3, #0]
 800d106:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800d10a:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800d10c:	2003      	movs	r0, #3
 800d10e:	f000 f82f 	bl	800d170 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800d112:	2000      	movs	r0, #0
 800d114:	f7f4 fe9a 	bl	8001e4c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800d118:	f7f4 fc3a 	bl	8001990 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800d11c:	2000      	movs	r0, #0
 800d11e:	bd08      	pop	{r3, pc}
 800d120:	40023c00 	.word	0x40023c00

0800d124 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800d124:	4a03      	ldr	r2, [pc, #12]	; (800d134 <HAL_IncTick+0x10>)
 800d126:	4b04      	ldr	r3, [pc, #16]	; (800d138 <HAL_IncTick+0x14>)
 800d128:	6811      	ldr	r1, [r2, #0]
 800d12a:	781b      	ldrb	r3, [r3, #0]
 800d12c:	440b      	add	r3, r1
 800d12e:	6013      	str	r3, [r2, #0]
}
 800d130:	4770      	bx	lr
 800d132:	bf00      	nop
 800d134:	2002c260 	.word	0x2002c260
 800d138:	20000054 	.word	0x20000054

0800d13c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800d13c:	4b01      	ldr	r3, [pc, #4]	; (800d144 <HAL_GetTick+0x8>)
 800d13e:	6818      	ldr	r0, [r3, #0]
}
 800d140:	4770      	bx	lr
 800d142:	bf00      	nop
 800d144:	2002c260 	.word	0x2002c260

0800d148 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800d148:	b538      	push	{r3, r4, r5, lr}
 800d14a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800d14c:	f7ff fff6 	bl	800d13c <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800d150:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 800d152:	bf1c      	itt	ne
 800d154:	4b05      	ldrne	r3, [pc, #20]	; (800d16c <HAL_Delay+0x24>)
 800d156:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 800d158:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 800d15a:	bf18      	it	ne
 800d15c:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800d15e:	f7ff ffed 	bl	800d13c <HAL_GetTick>
 800d162:	1b43      	subs	r3, r0, r5
 800d164:	42a3      	cmp	r3, r4
 800d166:	d3fa      	bcc.n	800d15e <HAL_Delay+0x16>
  {
  }
}
 800d168:	bd38      	pop	{r3, r4, r5, pc}
 800d16a:	bf00      	nop
 800d16c:	20000054 	.word	0x20000054

0800d170 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800d170:	4907      	ldr	r1, [pc, #28]	; (800d190 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800d172:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800d174:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800d178:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800d17a:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800d17c:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800d180:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800d182:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800d184:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800d188:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 800d18c:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800d18e:	4770      	bx	lr
 800d190:	e000ed00 	.word	0xe000ed00

0800d194 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800d194:	4b16      	ldr	r3, [pc, #88]	; (800d1f0 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800d196:	b530      	push	{r4, r5, lr}
 800d198:	68dc      	ldr	r4, [r3, #12]
 800d19a:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800d19e:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800d1a2:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800d1a4:	2d04      	cmp	r5, #4
 800d1a6:	bf28      	it	cs
 800d1a8:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800d1aa:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800d1ac:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800d1b0:	bf8c      	ite	hi
 800d1b2:	3c03      	subhi	r4, #3
 800d1b4:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800d1b6:	fa03 f505 	lsl.w	r5, r3, r5
 800d1ba:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800d1be:	40a3      	lsls	r3, r4
 800d1c0:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800d1c4:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 800d1c6:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800d1c8:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800d1cc:	bfac      	ite	ge
 800d1ce:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800d1d2:	4a08      	ldrlt	r2, [pc, #32]	; (800d1f4 <HAL_NVIC_SetPriority+0x60>)
 800d1d4:	ea4f 1303 	mov.w	r3, r3, lsl #4
 800d1d8:	bfb8      	it	lt
 800d1da:	f000 000f 	andlt.w	r0, r0, #15
 800d1de:	b2db      	uxtb	r3, r3
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800d1e0:	bfaa      	itet	ge
 800d1e2:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800d1e6:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800d1e8:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800d1ec:	bd30      	pop	{r4, r5, pc}
 800d1ee:	bf00      	nop
 800d1f0:	e000ed00 	.word	0xe000ed00
 800d1f4:	e000ed14 	.word	0xe000ed14

0800d1f8 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800d1f8:	2800      	cmp	r0, #0
 800d1fa:	db08      	blt.n	800d20e <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800d1fc:	0942      	lsrs	r2, r0, #5
 800d1fe:	2301      	movs	r3, #1
 800d200:	f000 001f 	and.w	r0, r0, #31
 800d204:	fa03 f000 	lsl.w	r0, r3, r0
 800d208:	4b01      	ldr	r3, [pc, #4]	; (800d210 <HAL_NVIC_EnableIRQ+0x18>)
 800d20a:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800d20e:	4770      	bx	lr
 800d210:	e000e100 	.word	0xe000e100

0800d214 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800d214:	2800      	cmp	r0, #0
 800d216:	db0d      	blt.n	800d234 <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800d218:	0943      	lsrs	r3, r0, #5
 800d21a:	2201      	movs	r2, #1
 800d21c:	f000 001f 	and.w	r0, r0, #31
 800d220:	fa02 f000 	lsl.w	r0, r2, r0
 800d224:	3320      	adds	r3, #32
 800d226:	4a04      	ldr	r2, [pc, #16]	; (800d238 <HAL_NVIC_DisableIRQ+0x24>)
 800d228:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 800d22c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800d230:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 800d234:	4770      	bx	lr
 800d236:	bf00      	nop
 800d238:	e000e100 	.word	0xe000e100

0800d23c <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 800d23c:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800d23e:	4604      	mov	r4, r0
 800d240:	b150      	cbz	r0, 800d258 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800d242:	7943      	ldrb	r3, [r0, #5]
 800d244:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800d248:	b913      	cbnz	r3, 800d250 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800d24a:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 800d24c:	f7f4 fbc0 	bl	80019d0 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800d250:	2301      	movs	r3, #1
 800d252:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800d254:	2000      	movs	r0, #0
}
 800d256:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800d258:	2001      	movs	r0, #1
 800d25a:	e7fc      	b.n	800d256 <HAL_CRC_Init+0x1a>

0800d25c <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 800d25c:	6803      	ldr	r3, [r0, #0]
{
 800d25e:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 800d260:	4c08      	ldr	r4, [pc, #32]	; (800d284 <DMA_CalcBaseAndBitshift+0x28>)
{
 800d262:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 800d264:	b2d9      	uxtb	r1, r3
 800d266:	3910      	subs	r1, #16
 800d268:	2018      	movs	r0, #24
 800d26a:	fbb1 f0f0 	udiv	r0, r1, r0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 800d26e:	5c20      	ldrb	r0, [r4, r0]
 800d270:	65d0      	str	r0, [r2, #92]	; 0x5c
  
  if (stream_number > 3U)
 800d272:	f423 707f 	bic.w	r0, r3, #1020	; 0x3fc
 800d276:	f020 0003 	bic.w	r0, r0, #3
 800d27a:	295f      	cmp	r1, #95	; 0x5f
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 800d27c:	bf88      	it	hi
 800d27e:	3004      	addhi	r0, #4
 800d280:	6590      	str	r0, [r2, #88]	; 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
 800d282:	bd10      	pop	{r4, pc}
 800d284:	0802b1f9 	.word	0x0802b1f9

0800d288 <HAL_DMA_Init>:
{
 800d288:	b570      	push	{r4, r5, r6, lr}
 800d28a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800d28c:	f7ff ff56 	bl	800d13c <HAL_GetTick>
 800d290:	4605      	mov	r5, r0
  if(hdma == NULL)
 800d292:	2c00      	cmp	r4, #0
 800d294:	d073      	beq.n	800d37e <HAL_DMA_Init+0xf6>
  hdma->State = HAL_DMA_STATE_BUSY;
 800d296:	2302      	movs	r3, #2
 800d298:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 800d29c:	6822      	ldr	r2, [r4, #0]
  __HAL_UNLOCK(hdma);
 800d29e:	2300      	movs	r3, #0
 800d2a0:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 800d2a4:	6813      	ldr	r3, [r2, #0]
 800d2a6:	f023 0301 	bic.w	r3, r3, #1
 800d2aa:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 800d2ac:	6821      	ldr	r1, [r4, #0]
 800d2ae:	680b      	ldr	r3, [r1, #0]
 800d2b0:	07d8      	lsls	r0, r3, #31
 800d2b2:	d42f      	bmi.n	800d314 <HAL_DMA_Init+0x8c>
  tmp = hdma->Instance->CR;
 800d2b4:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 800d2b6:	4d33      	ldr	r5, [pc, #204]	; (800d384 <HAL_DMA_Init+0xfc>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800d2b8:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 800d2ba:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 800d2bc:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 800d2c0:	4313      	orrs	r3, r2
 800d2c2:	68e2      	ldr	r2, [r4, #12]
 800d2c4:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800d2c6:	6922      	ldr	r2, [r4, #16]
 800d2c8:	4313      	orrs	r3, r2
 800d2ca:	6962      	ldr	r2, [r4, #20]
 800d2cc:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800d2ce:	69e2      	ldr	r2, [r4, #28]
 800d2d0:	4303      	orrs	r3, r0
 800d2d2:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 800d2d4:	6a22      	ldr	r2, [r4, #32]
 800d2d6:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800d2d8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d2da:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 800d2dc:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 800d2e0:	bf02      	ittt	eq
 800d2e2:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 800d2e6:	4335      	orreq	r5, r6
 800d2e8:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 800d2ea:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 800d2ec:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800d2ee:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 800d2f0:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 800d2f4:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800d2f8:	d133      	bne.n	800d362 <HAL_DMA_Init+0xda>
    tmp |= hdma->Init.FIFOThreshold;
 800d2fa:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 800d2fc:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 800d2fe:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 800d300:	b37d      	cbz	r5, 800d362 <HAL_DMA_Init+0xda>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 800d302:	b990      	cbnz	r0, 800d32a <HAL_DMA_Init+0xa2>
  {
    switch (tmp)
 800d304:	2a01      	cmp	r2, #1
 800d306:	d021      	beq.n	800d34c <HAL_DMA_Init+0xc4>
 800d308:	f032 0202 	bics.w	r2, r2, #2
 800d30c:	d129      	bne.n	800d362 <HAL_DMA_Init+0xda>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 800d30e:	01ea      	lsls	r2, r5, #7
 800d310:	d527      	bpl.n	800d362 <HAL_DMA_Init+0xda>
 800d312:	e01e      	b.n	800d352 <HAL_DMA_Init+0xca>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800d314:	f7ff ff12 	bl	800d13c <HAL_GetTick>
 800d318:	1b40      	subs	r0, r0, r5
 800d31a:	2805      	cmp	r0, #5
 800d31c:	d9c6      	bls.n	800d2ac <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800d31e:	2320      	movs	r3, #32
 800d320:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 800d322:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 800d324:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 800d328:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 800d32a:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 800d32e:	d114      	bne.n	800d35a <HAL_DMA_Init+0xd2>
    switch (tmp)
 800d330:	2a03      	cmp	r2, #3
 800d332:	d816      	bhi.n	800d362 <HAL_DMA_Init+0xda>
 800d334:	a001      	add	r0, pc, #4	; (adr r0, 800d33c <HAL_DMA_Init+0xb4>)
 800d336:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 800d33a:	bf00      	nop
 800d33c:	0800d353 	.word	0x0800d353
 800d340:	0800d30f 	.word	0x0800d30f
 800d344:	0800d353 	.word	0x0800d353
 800d348:	0800d34d 	.word	0x0800d34d
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 800d34c:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 800d350:	d107      	bne.n	800d362 <HAL_DMA_Init+0xda>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 800d352:	2340      	movs	r3, #64	; 0x40
 800d354:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 800d356:	2001      	movs	r0, #1
 800d358:	e7e4      	b.n	800d324 <HAL_DMA_Init+0x9c>
    switch (tmp)
 800d35a:	2a02      	cmp	r2, #2
 800d35c:	d9f9      	bls.n	800d352 <HAL_DMA_Init+0xca>
 800d35e:	2a03      	cmp	r2, #3
 800d360:	d0d5      	beq.n	800d30e <HAL_DMA_Init+0x86>
  hdma->Instance->FCR = tmp;
 800d362:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 800d364:	4620      	mov	r0, r4
 800d366:	f7ff ff79 	bl	800d25c <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800d36a:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 800d36c:	233f      	movs	r3, #63	; 0x3f
 800d36e:	4093      	lsls	r3, r2
 800d370:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800d372:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 800d374:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800d376:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 800d378:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 800d37c:	e7d4      	b.n	800d328 <HAL_DMA_Init+0xa0>
    return HAL_ERROR;
 800d37e:	2001      	movs	r0, #1
 800d380:	e7d2      	b.n	800d328 <HAL_DMA_Init+0xa0>
 800d382:	bf00      	nop
 800d384:	f010803f 	.word	0xf010803f

0800d388 <HAL_DMA_DeInit>:
{
 800d388:	b538      	push	{r3, r4, r5, lr}
  if(hdma == NULL)
 800d38a:	4605      	mov	r5, r0
 800d38c:	b320      	cbz	r0, 800d3d8 <HAL_DMA_DeInit+0x50>
  if(hdma->State == HAL_DMA_STATE_BUSY)
 800d38e:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800d392:	2b02      	cmp	r3, #2
 800d394:	b2dc      	uxtb	r4, r3
 800d396:	d01d      	beq.n	800d3d4 <HAL_DMA_DeInit+0x4c>
  __HAL_DMA_DISABLE(hdma);
 800d398:	6803      	ldr	r3, [r0, #0]
 800d39a:	681a      	ldr	r2, [r3, #0]
 800d39c:	f022 0201 	bic.w	r2, r2, #1
  hdma->Instance->CR   = 0U;
 800d3a0:	2400      	movs	r4, #0
  __HAL_DMA_DISABLE(hdma);
 800d3a2:	601a      	str	r2, [r3, #0]
  hdma->Instance->FCR  = 0x00000021U;
 800d3a4:	2221      	movs	r2, #33	; 0x21
  hdma->Instance->CR   = 0U;
 800d3a6:	601c      	str	r4, [r3, #0]
  hdma->Instance->NDTR = 0U;
 800d3a8:	605c      	str	r4, [r3, #4]
  hdma->Instance->PAR  = 0U;
 800d3aa:	609c      	str	r4, [r3, #8]
  hdma->Instance->M0AR = 0U;
 800d3ac:	60dc      	str	r4, [r3, #12]
  hdma->Instance->M1AR = 0U;
 800d3ae:	611c      	str	r4, [r3, #16]
  hdma->Instance->FCR  = 0x00000021U;
 800d3b0:	615a      	str	r2, [r3, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 800d3b2:	f7ff ff53 	bl	800d25c <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800d3b6:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 800d3b8:	233f      	movs	r3, #63	; 0x3f
 800d3ba:	4093      	lsls	r3, r2
  hdma->XferHalfCpltCallback = NULL;
 800d3bc:	e9c5 440f 	strd	r4, r4, [r5, #60]	; 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
 800d3c0:	e9c5 4411 	strd	r4, r4, [r5, #68]	; 0x44
  hdma->XferAbortCallback = NULL;
 800d3c4:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800d3c8:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800d3ca:	656c      	str	r4, [r5, #84]	; 0x54
  __HAL_UNLOCK(hdma);
 800d3cc:	f885 4034 	strb.w	r4, [r5, #52]	; 0x34
  hdma->State = HAL_DMA_STATE_RESET;
 800d3d0:	f885 4035 	strb.w	r4, [r5, #53]	; 0x35
}
 800d3d4:	4620      	mov	r0, r4
 800d3d6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800d3d8:	2401      	movs	r4, #1
 800d3da:	e7fb      	b.n	800d3d4 <HAL_DMA_DeInit+0x4c>

0800d3dc <HAL_DMA_Abort>:
{
 800d3dc:	b570      	push	{r4, r5, r6, lr}
 800d3de:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 800d3e0:	6d86      	ldr	r6, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 800d3e2:	f7ff feab 	bl	800d13c <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800d3e6:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 800d3ea:	2b02      	cmp	r3, #2
  uint32_t tickstart = HAL_GetTick();
 800d3ec:	4605      	mov	r5, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800d3ee:	d006      	beq.n	800d3fe <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800d3f0:	2380      	movs	r3, #128	; 0x80
 800d3f2:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 800d3f4:	2300      	movs	r3, #0
 800d3f6:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    return HAL_ERROR;
 800d3fa:	2001      	movs	r0, #1
}
 800d3fc:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 800d3fe:	6823      	ldr	r3, [r4, #0]
 800d400:	681a      	ldr	r2, [r3, #0]
 800d402:	f022 0216 	bic.w	r2, r2, #22
 800d406:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 800d408:	695a      	ldr	r2, [r3, #20]
 800d40a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800d40e:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 800d410:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d412:	b90a      	cbnz	r2, 800d418 <HAL_DMA_Abort+0x3c>
 800d414:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800d416:	b11a      	cbz	r2, 800d420 <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 800d418:	681a      	ldr	r2, [r3, #0]
 800d41a:	f022 0208 	bic.w	r2, r2, #8
 800d41e:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 800d420:	681a      	ldr	r2, [r3, #0]
 800d422:	f022 0201 	bic.w	r2, r2, #1
 800d426:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 800d428:	6823      	ldr	r3, [r4, #0]
 800d42a:	681b      	ldr	r3, [r3, #0]
 800d42c:	f013 0301 	ands.w	r3, r3, #1
 800d430:	d10a      	bne.n	800d448 <HAL_DMA_Abort+0x6c>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 800d432:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 800d434:	223f      	movs	r2, #63	; 0x3f
 800d436:	408a      	lsls	r2, r1
 800d438:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 800d43a:	2201      	movs	r2, #1
 800d43c:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 800d440:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  return HAL_OK;
 800d444:	4618      	mov	r0, r3
 800d446:	e7d9      	b.n	800d3fc <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800d448:	f7ff fe78 	bl	800d13c <HAL_GetTick>
 800d44c:	1b40      	subs	r0, r0, r5
 800d44e:	2805      	cmp	r0, #5
 800d450:	d9ea      	bls.n	800d428 <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800d452:	2320      	movs	r3, #32
 800d454:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800d456:	2003      	movs	r0, #3
        __HAL_UNLOCK(hdma);
 800d458:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800d45a:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 800d45e:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 800d462:	e7cb      	b.n	800d3fc <HAL_DMA_Abort+0x20>

0800d464 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800d464:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 800d466:	4604      	mov	r4, r0
 800d468:	b330      	cbz	r0, 800d4b8 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 800d46a:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800d46e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800d472:	b91b      	cbnz	r3, 800d47c <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800d474:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 800d478:	f7f4 fac2 	bl	8001a00 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800d47c:	6822      	ldr	r2, [r4, #0]
 800d47e:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800d480:	2302      	movs	r3, #2
 800d482:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800d486:	6813      	ldr	r3, [r2, #0]
 800d488:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800d48c:	430b      	orrs	r3, r1
 800d48e:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800d490:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800d492:	68a1      	ldr	r1, [r4, #8]
 800d494:	f023 0307 	bic.w	r3, r3, #7
 800d498:	430b      	orrs	r3, r1
 800d49a:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800d49c:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800d49e:	68e1      	ldr	r1, [r4, #12]
 800d4a0:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800d4a4:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800d4a8:	430b      	orrs	r3, r1
 800d4aa:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800d4ac:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800d4ae:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800d4b0:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800d4b2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 800d4b6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800d4b8:	2001      	movs	r0, #1
 800d4ba:	e7fc      	b.n	800d4b6 <HAL_DMA2D_Init+0x52>

0800d4bc <HAL_DMA2D_LineEventCallback>:
 800d4bc:	4770      	bx	lr

0800d4be <HAL_DMA2D_CLUTLoadingCpltCallback>:
 800d4be:	4770      	bx	lr

0800d4c0 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800d4c0:	6803      	ldr	r3, [r0, #0]
{
 800d4c2:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800d4c4:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800d4c6:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800d4c8:	07f2      	lsls	r2, r6, #31
{
 800d4ca:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800d4cc:	d514      	bpl.n	800d4f8 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 800d4ce:	05e9      	lsls	r1, r5, #23
 800d4d0:	d512      	bpl.n	800d4f8 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 800d4d2:	681a      	ldr	r2, [r3, #0]
 800d4d4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800d4d8:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 800d4da:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 800d4dc:	f042 0201 	orr.w	r2, r2, #1
 800d4e0:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800d4e2:	2201      	movs	r2, #1
 800d4e4:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800d4e6:	2304      	movs	r3, #4
 800d4e8:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800d4ec:	2300      	movs	r3, #0
 800d4ee:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800d4f2:	6943      	ldr	r3, [r0, #20]
 800d4f4:	b103      	cbz	r3, 800d4f8 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800d4f6:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 800d4f8:	06b2      	lsls	r2, r6, #26
 800d4fa:	d516      	bpl.n	800d52a <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 800d4fc:	04ab      	lsls	r3, r5, #18
 800d4fe:	d514      	bpl.n	800d52a <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 800d500:	6823      	ldr	r3, [r4, #0]
 800d502:	681a      	ldr	r2, [r3, #0]
 800d504:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800d508:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 800d50a:	2220      	movs	r2, #32
 800d50c:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 800d50e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d510:	f043 0302 	orr.w	r3, r3, #2
 800d514:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800d516:	2304      	movs	r3, #4
 800d518:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800d51c:	2300      	movs	r3, #0
 800d51e:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800d522:	6963      	ldr	r3, [r4, #20]
 800d524:	b10b      	cbz	r3, 800d52a <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800d526:	4620      	mov	r0, r4
 800d528:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 800d52a:	0730      	lsls	r0, r6, #28
 800d52c:	d516      	bpl.n	800d55c <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 800d52e:	0529      	lsls	r1, r5, #20
 800d530:	d514      	bpl.n	800d55c <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800d532:	6823      	ldr	r3, [r4, #0]
 800d534:	681a      	ldr	r2, [r3, #0]
 800d536:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800d53a:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 800d53c:	2208      	movs	r2, #8
 800d53e:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800d540:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d542:	f043 0304 	orr.w	r3, r3, #4
 800d546:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800d548:	2304      	movs	r3, #4
 800d54a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800d54e:	2300      	movs	r3, #0
 800d550:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800d554:	6963      	ldr	r3, [r4, #20]
 800d556:	b10b      	cbz	r3, 800d55c <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800d558:	4620      	mov	r0, r4
 800d55a:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 800d55c:	0772      	lsls	r2, r6, #29
 800d55e:	d50b      	bpl.n	800d578 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 800d560:	056b      	lsls	r3, r5, #21
 800d562:	d509      	bpl.n	800d578 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800d564:	6823      	ldr	r3, [r4, #0]
 800d566:	681a      	ldr	r2, [r3, #0]
 800d568:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d56c:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800d56e:	2204      	movs	r2, #4
 800d570:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 800d572:	4620      	mov	r0, r4
 800d574:	f7ff ffa2 	bl	800d4bc <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 800d578:	07b0      	lsls	r0, r6, #30
 800d57a:	d514      	bpl.n	800d5a6 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 800d57c:	05a9      	lsls	r1, r5, #22
 800d57e:	d512      	bpl.n	800d5a6 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800d580:	6823      	ldr	r3, [r4, #0]
 800d582:	681a      	ldr	r2, [r3, #0]
 800d584:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800d588:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 800d58a:	2202      	movs	r2, #2
 800d58c:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800d58e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d590:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800d592:	2301      	movs	r3, #1
 800d594:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800d598:	2300      	movs	r3, #0
 800d59a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 800d59e:	6923      	ldr	r3, [r4, #16]
 800d5a0:	b10b      	cbz	r3, 800d5a6 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 800d5a2:	4620      	mov	r0, r4
 800d5a4:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 800d5a6:	06f2      	lsls	r2, r6, #27
 800d5a8:	d513      	bpl.n	800d5d2 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 800d5aa:	04eb      	lsls	r3, r5, #19
 800d5ac:	d511      	bpl.n	800d5d2 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800d5ae:	6823      	ldr	r3, [r4, #0]
 800d5b0:	681a      	ldr	r2, [r3, #0]
 800d5b2:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800d5b6:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 800d5b8:	2210      	movs	r2, #16
 800d5ba:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800d5bc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d5be:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800d5c0:	2301      	movs	r3, #1
 800d5c2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800d5c6:	2300      	movs	r3, #0
 800d5c8:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 800d5cc:	4620      	mov	r0, r4
 800d5ce:	f7ff ff76 	bl	800d4be <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 800d5d2:	bd70      	pop	{r4, r5, r6, pc}

0800d5d4 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 800d5d4:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800d5d6:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800d5da:	2b01      	cmp	r3, #1
 800d5dc:	f04f 0302 	mov.w	r3, #2
 800d5e0:	d02b      	beq.n	800d63a <HAL_DMA2D_ConfigLayer+0x66>
 800d5e2:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800d5e4:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 800d5e8:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800d5ec:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 800d5f0:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 800d5f4:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 800d5f6:	4f18      	ldr	r7, [pc, #96]	; (800d658 <HAL_DMA2D_ConfigLayer+0x84>)
 800d5f8:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800d5fc:	3c09      	subs	r4, #9
 800d5fe:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800d600:	bf9c      	itt	ls
 800d602:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 800d606:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800d608:	ea4f 1601 	mov.w	r6, r1, lsl #4
 800d60c:	6803      	ldr	r3, [r0, #0]
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 800d60e:	bf88      	it	hi
 800d610:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 800d614:	b999      	cbnz	r1, 800d63e <HAL_DMA2D_ConfigLayer+0x6a>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800d616:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800d618:	4039      	ands	r1, r7
 800d61a:	430a      	orrs	r2, r1
 800d61c:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800d61e:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800d620:	6982      	ldr	r2, [r0, #24]
 800d622:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800d624:	d803      	bhi.n	800d62e <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800d626:	6a42      	ldr	r2, [r0, #36]	; 0x24
 800d628:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 800d62c:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800d62e:	2301      	movs	r3, #1
 800d630:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800d634:	2300      	movs	r3, #0
 800d636:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 800d63a:	4618      	mov	r0, r3

  return HAL_OK;
}
 800d63c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800d63e:	69d9      	ldr	r1, [r3, #28]
 800d640:	4039      	ands	r1, r7
 800d642:	430a      	orrs	r2, r1
 800d644:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800d646:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800d648:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800d64a:	6992      	ldr	r2, [r2, #24]
 800d64c:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 800d64e:	bf9c      	itt	ls
 800d650:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 800d654:	621d      	strls	r5, [r3, #32]
 800d656:	e7ea      	b.n	800d62e <HAL_DMA2D_ConfigLayer+0x5a>
 800d658:	00fcfff0 	.word	0x00fcfff0

0800d65c <DSI_ShortWrite>:
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                        uint32_t ChannelID,
                                        uint32_t Mode,
                                        uint32_t Param1,
                                        uint32_t Param2)
{
 800d65c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d660:	4607      	mov	r7, r0
 800d662:	460d      	mov	r5, r1
 800d664:	4614      	mov	r4, r2
 800d666:	461e      	mov	r6, r3
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 800d668:	f7ff fd68 	bl	800d13c <HAL_GetTick>
 800d66c:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800d66e:	683a      	ldr	r2, [r7, #0]
 800d670:	6f53      	ldr	r3, [r2, #116]	; 0x74
 800d672:	07db      	lsls	r3, r3, #31
 800d674:	d50a      	bpl.n	800d68c <DSI_ShortWrite+0x30>
    }
  }

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 800d676:	ea44 2306 	orr.w	r3, r4, r6, lsl #8
 800d67a:	9c06      	ldr	r4, [sp, #24]
 800d67c:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 800d680:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 800d684:	66d4      	str	r4, [r2, #108]	; 0x6c

  return HAL_OK;
 800d686:	2000      	movs	r0, #0
}
 800d688:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((HAL_GetTick() - tickstart ) > DSI_TIMEOUT_VALUE)
 800d68c:	f7ff fd56 	bl	800d13c <HAL_GetTick>
 800d690:	eba0 0008 	sub.w	r0, r0, r8
 800d694:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800d698:	d9e9      	bls.n	800d66e <DSI_ShortWrite+0x12>
      return HAL_TIMEOUT;
 800d69a:	2003      	movs	r0, #3
 800d69c:	e7f4      	b.n	800d688 <DSI_ShortWrite+0x2c>

0800d69e <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800d69e:	7c03      	ldrb	r3, [r0, #16]
 800d6a0:	2b01      	cmp	r3, #1
 800d6a2:	d05d      	beq.n	800d760 <HAL_DSI_ConfigErrorMonitor+0xc2>

  hdsi->Instance->IER[0U] = 0U;
 800d6a4:	6803      	ldr	r3, [r0, #0]
 800d6a6:	2200      	movs	r2, #0
 800d6a8:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 800d6ac:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 800d6b0:	07ca      	lsls	r2, r1, #31
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 800d6b2:	bf48      	it	mi
 800d6b4:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
  hdsi->ErrorMsk = ActiveErrors;
 800d6b8:	6181      	str	r1, [r0, #24]
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 800d6ba:	bf42      	ittt	mi
 800d6bc:	ea6f 4212 	mvnmi.w	r2, r2, lsr #16
 800d6c0:	ea6f 4202 	mvnmi.w	r2, r2, lsl #16
 800d6c4:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 800d6c8:	078a      	lsls	r2, r1, #30
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 800d6ca:	bf42      	ittt	mi
 800d6cc:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
 800d6d0:	f442 12f8 	orrmi.w	r2, r2, #2031616	; 0x1f0000
 800d6d4:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 800d6d8:	074a      	lsls	r2, r1, #29
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 800d6da:	bf42      	ittt	mi
 800d6dc:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800d6e0:	f042 0201 	orrmi.w	r2, r2, #1
 800d6e4:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 800d6e8:	070a      	lsls	r2, r1, #28
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 800d6ea:	bf42      	ittt	mi
 800d6ec:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800d6f0:	f042 0202 	orrmi.w	r2, r2, #2
 800d6f4:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 800d6f8:	06ca      	lsls	r2, r1, #27
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 800d6fa:	bf42      	ittt	mi
 800d6fc:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800d700:	f042 020c 	orrmi.w	r2, r2, #12
 800d704:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 800d708:	068a      	lsls	r2, r1, #26
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 800d70a:	bf42      	ittt	mi
 800d70c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800d710:	f042 0210 	orrmi.w	r2, r2, #16
 800d714:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 800d718:	064a      	lsls	r2, r1, #25
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 800d71a:	bf42      	ittt	mi
 800d71c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800d720:	f042 0220 	orrmi.w	r2, r2, #32
 800d724:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 800d728:	060a      	lsls	r2, r1, #24
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 800d72a:	bf42      	ittt	mi
 800d72c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800d730:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 800d734:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 800d738:	05ca      	lsls	r2, r1, #23
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 800d73a:	bf42      	ittt	mi
 800d73c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800d740:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 800d744:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 800d748:	058a      	lsls	r2, r1, #22
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 800d74a:	bf42      	ittt	mi
 800d74c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800d750:	f442 52f8 	orrmi.w	r2, r2, #7936	; 0x1f00
 800d754:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 800d758:	2300      	movs	r3, #0
 800d75a:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800d75c:	4618      	mov	r0, r3
 800d75e:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800d760:	2002      	movs	r0, #2
}
 800d762:	4770      	bx	lr

0800d764 <HAL_DSI_Init>:
{
 800d764:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d766:	460d      	mov	r5, r1
  if (hdsi == NULL)
 800d768:	4604      	mov	r4, r0
 800d76a:	2800      	cmp	r0, #0
 800d76c:	f000 80a7 	beq.w	800d8be <HAL_DSI_Init+0x15a>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 800d770:	7c43      	ldrb	r3, [r0, #17]
 800d772:	b90b      	cbnz	r3, 800d778 <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 800d774:	f7f4 f966 	bl	8001a44 <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 800d778:	2303      	movs	r3, #3
 800d77a:	7463      	strb	r3, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 800d77c:	2300      	movs	r3, #0
 800d77e:	9300      	str	r3, [sp, #0]
 800d780:	6823      	ldr	r3, [r4, #0]
 800d782:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 800d786:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800d78a:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 800d78e:	f8d3 3430 	ldr.w	r3, [r3, #1072]	; 0x430
 800d792:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800d796:	9300      	str	r3, [sp, #0]
 800d798:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 800d79a:	f7ff fccf 	bl	800d13c <HAL_GetTick>
 800d79e:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 800d7a0:	6822      	ldr	r2, [r4, #0]
 800d7a2:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 800d7a6:	04d9      	lsls	r1, r3, #19
 800d7a8:	d578      	bpl.n	800d89c <HAL_DSI_Init+0x138>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 800d7aa:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800d7ae:	f423 335e 	bic.w	r3, r3, #227328	; 0x37800
 800d7b2:	f423 73fe 	bic.w	r3, r3, #508	; 0x1fc
 800d7b6:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << 2U) | ((PLLInit->PLLIDF) << 11U) | ((PLLInit->PLLODF) << 16U));
 800d7ba:	e9d5 0300 	ldrd	r0, r3, [r5]
 800d7be:	02db      	lsls	r3, r3, #11
 800d7c0:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
 800d7c4:	68a8      	ldr	r0, [r5, #8]
 800d7c6:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
 800d7ca:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800d7ce:	430b      	orrs	r3, r1
 800d7d0:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 800d7d4:	2300      	movs	r3, #0
 800d7d6:	9301      	str	r3, [sp, #4]
 800d7d8:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800d7dc:	f043 0301 	orr.w	r3, r3, #1
 800d7e0:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
 800d7e4:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800d7e8:	f003 0301 	and.w	r3, r3, #1
 800d7ec:	9301      	str	r3, [sp, #4]
 800d7ee:	9b01      	ldr	r3, [sp, #4]
  tickstart = HAL_GetTick();
 800d7f0:	f7ff fca4 	bl	800d13c <HAL_GetTick>
 800d7f4:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 800d7f6:	6823      	ldr	r3, [r4, #0]
 800d7f8:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800d7fc:	05d2      	lsls	r2, r2, #23
 800d7fe:	d557      	bpl.n	800d8b0 <HAL_DSI_Init+0x14c>
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 800d800:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 800d804:	6861      	ldr	r1, [r4, #4]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 800d806:	6828      	ldr	r0, [r5, #0]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 800d808:	f042 0206 	orr.w	r2, r2, #6
 800d80c:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 800d810:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 800d814:	f022 0203 	bic.w	r2, r2, #3
 800d818:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 800d81c:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 800d820:	430a      	orrs	r2, r1
 800d822:	f042 0201 	orr.w	r2, r2, #1
 800d826:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 800d82a:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 800d82e:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 800d830:	f022 0203 	bic.w	r2, r2, #3
 800d834:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 800d838:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800d83c:	430a      	orrs	r2, r1
 800d83e:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 800d842:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 800d844:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 800d846:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800d84a:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 800d84c:	689a      	ldr	r2, [r3, #8]
 800d84e:	430a      	orrs	r2, r1
 800d850:	609a      	str	r2, [r3, #8]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 800d852:	686a      	ldr	r2, [r5, #4]
 800d854:	2a01      	cmp	r2, #1
 800d856:	bf38      	it	cc
 800d858:	2201      	movcc	r2, #1
 800d85a:	4611      	mov	r1, r2
 800d85c:	4a19      	ldr	r2, [pc, #100]	; (800d8c4 <HAL_DSI_Init+0x160>)
 800d85e:	434a      	muls	r2, r1
 800d860:	68a9      	ldr	r1, [r5, #8]
 800d862:	f001 0103 	and.w	r1, r1, #3
 800d866:	408a      	lsls	r2, r1
 800d868:	f44f 51fa 	mov.w	r1, #8000	; 0x1f40
 800d86c:	4341      	muls	r1, r0
 800d86e:	fbb2 f2f1 	udiv	r2, r2, r1
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 800d872:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 800d876:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800d87a:	f8c3 1418 	str.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 800d87e:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 800d882:	2000      	movs	r0, #0
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 800d884:	430a      	orrs	r2, r1
 800d886:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 800d88a:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 800d88e:	f8c3 00c8 	str.w	r0, [r3, #200]	; 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 800d892:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 800d894:	6160      	str	r0, [r4, #20]
  hdsi->ErrorMsk = 0U;
 800d896:	61a0      	str	r0, [r4, #24]
  hdsi->State = HAL_DSI_STATE_READY;
 800d898:	7463      	strb	r3, [r4, #17]
  return HAL_OK;
 800d89a:	e007      	b.n	800d8ac <HAL_DSI_Init+0x148>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800d89c:	f7ff fc4e 	bl	800d13c <HAL_GetTick>
 800d8a0:	1b80      	subs	r0, r0, r6
 800d8a2:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800d8a6:	f67f af7b 	bls.w	800d7a0 <HAL_DSI_Init+0x3c>
      return HAL_TIMEOUT;
 800d8aa:	2003      	movs	r0, #3
}
 800d8ac:	b002      	add	sp, #8
 800d8ae:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800d8b0:	f7ff fc44 	bl	800d13c <HAL_GetTick>
 800d8b4:	1b80      	subs	r0, r0, r6
 800d8b6:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800d8ba:	d99c      	bls.n	800d7f6 <HAL_DSI_Init+0x92>
 800d8bc:	e7f5      	b.n	800d8aa <HAL_DSI_Init+0x146>
    return HAL_ERROR;
 800d8be:	2001      	movs	r0, #1
 800d8c0:	e7f4      	b.n	800d8ac <HAL_DSI_Init+0x148>
 800d8c2:	bf00      	nop
 800d8c4:	003d0900 	.word	0x003d0900

0800d8c8 <HAL_DSI_ErrorCallback>:
 800d8c8:	4770      	bx	lr

0800d8ca <HAL_DSI_IRQHandler>:
void HAL_DSI_IRQHandler(DSI_HandleTypeDef *hdsi)
{
  uint32_t ErrorStatus0, ErrorStatus1;

  /* Tearing Effect Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800d8ca:	6803      	ldr	r3, [r0, #0]
 800d8cc:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800d8d0:	07d1      	lsls	r1, r2, #31
{
 800d8d2:	b510      	push	{r4, lr}
 800d8d4:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800d8d6:	d508      	bpl.n	800d8ea <HAL_DSI_IRQHandler+0x20>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 800d8d8:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800d8dc:	07d2      	lsls	r2, r2, #31
 800d8de:	d504      	bpl.n	800d8ea <HAL_DSI_IRQHandler+0x20>
    {
      /* Clear the Tearing Effect Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 800d8e0:	2201      	movs	r2, #1
 800d8e2:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Tearing Effect callback */
      hdsi->TearingEffectCallback(hdsi);
#else
      /*Call legacy Tearing Effect callback*/
      HAL_DSI_TearingEffectCallback(hdsi);
 800d8e6:	f7f3 f901 	bl	8000aec <HAL_DSI_TearingEffectCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* End of Refresh Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 800d8ea:	6823      	ldr	r3, [r4, #0]
 800d8ec:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800d8f0:	0791      	lsls	r1, r2, #30
 800d8f2:	d509      	bpl.n	800d908 <HAL_DSI_IRQHandler+0x3e>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 800d8f4:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800d8f8:	0792      	lsls	r2, r2, #30
 800d8fa:	d505      	bpl.n	800d908 <HAL_DSI_IRQHandler+0x3e>
    {
      /* Clear the End of Refresh Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 800d8fc:	2202      	movs	r2, #2
 800d8fe:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered End of refresh callback */
      hdsi->EndOfRefreshCallback(hdsi);
#else
      /*Call Legacy End of refresh callback */
      HAL_DSI_EndOfRefreshCallback(hdsi);
 800d902:	4620      	mov	r0, r4
 800d904:	f7f3 f926 	bl	8000b54 <HAL_DSI_EndOfRefreshCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* Error Interrupts management ***********************************************/
  if (hdsi->ErrorMsk != 0U)
 800d908:	69a3      	ldr	r3, [r4, #24]
 800d90a:	2b00      	cmp	r3, #0
 800d90c:	d04e      	beq.n	800d9ac <HAL_DSI_IRQHandler+0xe2>
  {
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 800d90e:	6821      	ldr	r1, [r4, #0]
 800d910:	f8d1 20bc 	ldr.w	r2, [r1, #188]	; 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 800d914:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 800d918:	f8d1 00c0 	ldr.w	r0, [r1, #192]	; 0xc0
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 800d91c:	401a      	ands	r2, r3
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 800d91e:	f8d1 30c8 	ldr.w	r3, [r1, #200]	; 0xc8

    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 800d922:	b291      	uxth	r1, r2
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 800d924:	4003      	ands	r3, r0
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 800d926:	b119      	cbz	r1, 800d930 <HAL_DSI_IRQHandler+0x66>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 800d928:	6961      	ldr	r1, [r4, #20]
 800d92a:	f041 0101 	orr.w	r1, r1, #1
 800d92e:	6161      	str	r1, [r4, #20]
    }

    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 800d930:	f412 1ff8 	tst.w	r2, #2031616	; 0x1f0000
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 800d934:	bf1e      	ittt	ne
 800d936:	6962      	ldrne	r2, [r4, #20]
 800d938:	f042 0202 	orrne.w	r2, r2, #2
 800d93c:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 800d93e:	07d8      	lsls	r0, r3, #31
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 800d940:	bf42      	ittt	mi
 800d942:	6962      	ldrmi	r2, [r4, #20]
 800d944:	f042 0204 	orrmi.w	r2, r2, #4
 800d948:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 800d94a:	0799      	lsls	r1, r3, #30
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 800d94c:	bf42      	ittt	mi
 800d94e:	6962      	ldrmi	r2, [r4, #20]
 800d950:	f042 0208 	orrmi.w	r2, r2, #8
 800d954:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 800d956:	f013 0f0c 	tst.w	r3, #12
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 800d95a:	bf1e      	ittt	ne
 800d95c:	6962      	ldrne	r2, [r4, #20]
 800d95e:	f042 0210 	orrne.w	r2, r2, #16
 800d962:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 800d964:	06da      	lsls	r2, r3, #27
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 800d966:	bf42      	ittt	mi
 800d968:	6962      	ldrmi	r2, [r4, #20]
 800d96a:	f042 0220 	orrmi.w	r2, r2, #32
 800d96e:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 800d970:	0698      	lsls	r0, r3, #26
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 800d972:	bf42      	ittt	mi
 800d974:	6962      	ldrmi	r2, [r4, #20]
 800d976:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 800d97a:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 800d97c:	0659      	lsls	r1, r3, #25
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 800d97e:	bf42      	ittt	mi
 800d980:	6962      	ldrmi	r2, [r4, #20]
 800d982:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 800d986:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 800d988:	061a      	lsls	r2, r3, #24
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 800d98a:	bf42      	ittt	mi
 800d98c:	6962      	ldrmi	r2, [r4, #20]
 800d98e:	f442 7280 	orrmi.w	r2, r2, #256	; 0x100
 800d992:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 800d994:	f413 5ff8 	tst.w	r3, #7936	; 0x1f00
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 800d998:	bf1e      	ittt	ne
 800d99a:	6963      	ldrne	r3, [r4, #20]
 800d99c:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 800d9a0:	6163      	strne	r3, [r4, #20]
    }

    /* Check only selected errors */
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 800d9a2:	6963      	ldr	r3, [r4, #20]
 800d9a4:	b113      	cbz	r3, 800d9ac <HAL_DSI_IRQHandler+0xe2>
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Error callback */
      hdsi->ErrorCallback(hdsi);
#else
      /*Call Legacy Error callback */
      HAL_DSI_ErrorCallback(hdsi);
 800d9a6:	4620      	mov	r0, r4
 800d9a8:	f7ff ff8e 	bl	800d8c8 <HAL_DSI_ErrorCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }
}
 800d9ac:	bd10      	pop	{r4, pc}

0800d9ae <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800d9ae:	7c03      	ldrb	r3, [r0, #16]
 800d9b0:	2b01      	cmp	r3, #1
 800d9b2:	d00b      	beq.n	800d9cc <HAL_DSI_SetGenericVCID+0x1e>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 800d9b4:	6803      	ldr	r3, [r0, #0]
 800d9b6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800d9b8:	f022 0203 	bic.w	r2, r2, #3
 800d9bc:	631a      	str	r2, [r3, #48]	; 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 800d9be:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800d9c0:	4311      	orrs	r1, r2
 800d9c2:	6319      	str	r1, [r3, #48]	; 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800d9c4:	2300      	movs	r3, #0
 800d9c6:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800d9c8:	4618      	mov	r0, r3
 800d9ca:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800d9cc:	2002      	movs	r0, #2
}
 800d9ce:	4770      	bx	lr

0800d9d0 <HAL_DSI_ConfigAdaptedCommandMode>:
  * @param  CmdCfg  pointer to a DSI_CmdCfgTypeDef structure that contains
  *                 the DSI command mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
 800d9d0:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800d9d2:	7c03      	ldrb	r3, [r0, #16]
 800d9d4:	2b01      	cmp	r3, #1
 800d9d6:	d06a      	beq.n	800daae <HAL_DSI_ConfigAdaptedCommandMode+0xde>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 800d9d8:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 800d9da:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 800d9dc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d9de:	f042 0201 	orr.w	r2, r2, #1
 800d9e2:	635a      	str	r2, [r3, #52]	; 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 800d9e4:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800d9e8:	f022 0201 	bic.w	r2, r2, #1
 800d9ec:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 800d9f0:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800d9f4:	f042 0201 	orr.w	r2, r2, #1
 800d9f8:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 800d9fc:	68da      	ldr	r2, [r3, #12]
 800d9fe:	f022 0203 	bic.w	r2, r2, #3
 800da02:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 800da04:	68da      	ldr	r2, [r3, #12]
 800da06:	4322      	orrs	r2, r4
 800da08:	60da      	str	r2, [r3, #12]

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 800da0a:	695a      	ldr	r2, [r3, #20]
 800da0c:	f022 0207 	bic.w	r2, r2, #7
 800da10:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 800da12:	e9d1 5206 	ldrd	r5, r2, [r1, #24]
 800da16:	432a      	orrs	r2, r5
 800da18:	694d      	ldr	r5, [r1, #20]
 800da1a:	695c      	ldr	r4, [r3, #20]
 800da1c:	432a      	orrs	r2, r5
 800da1e:	4322      	orrs	r2, r4
 800da20:	615a      	str	r2, [r3, #20]

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 800da22:	691a      	ldr	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 800da24:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 800da26:	f022 020f 	bic.w	r2, r2, #15
 800da2a:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 800da2c:	691c      	ldr	r4, [r3, #16]
 800da2e:	432c      	orrs	r4, r5
 800da30:	611c      	str	r4, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 800da32:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 800da36:	f024 040e 	bic.w	r4, r4, #14
 800da3a:	f8c3 4400 	str.w	r4, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 800da3e:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 800da42:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 800da44:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 800da48:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 800da4c:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800da4e:	0c12      	lsrs	r2, r2, #16
 800da50:	0412      	lsls	r2, r2, #16
 800da52:	665a      	str	r2, [r3, #100]	; 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 800da54:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800da56:	4322      	orrs	r2, r4
 800da58:	665a      	str	r2, [r3, #100]	; 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 800da5a:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800da5e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800da62:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 800da66:	e9d1 2503 	ldrd	r2, r5, [r1, #12]
 800da6a:	432a      	orrs	r2, r5
 800da6c:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 800da6e:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 800da72:	432a      	orrs	r2, r5
 800da74:	6a0d      	ldr	r5, [r1, #32]
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 800da76:	6a89      	ldr	r1, [r1, #40]	; 0x28
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 800da78:	432a      	orrs	r2, r5
 800da7a:	4322      	orrs	r2, r4
 800da7c:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 800da80:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800da82:	f022 0201 	bic.w	r2, r2, #1
 800da86:	669a      	str	r2, [r3, #104]	; 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 800da88:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800da8a:	430a      	orrs	r2, r1
 800da8c:	669a      	str	r2, [r3, #104]	; 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 800da8e:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800da92:	f042 0201 	orr.w	r2, r2, #1
 800da96:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 800da9a:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800da9e:	f042 0202 	orr.w	r2, r2, #2
 800daa2:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800daa6:	2300      	movs	r3, #0
 800daa8:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800daaa:	4618      	mov	r0, r3
}
 800daac:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800daae:	2002      	movs	r0, #2
 800dab0:	e7fc      	b.n	800daac <HAL_DSI_ConfigAdaptedCommandMode+0xdc>
	...

0800dab4 <HAL_DSI_ConfigCommand>:
  * @param  LPCmd  pointer to a DSI_LPCmdTypeDef structure that contains
  *                the DSI command transmission mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
 800dab4:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800dab6:	7c03      	ldrb	r3, [r0, #16]
 800dab8:	2b01      	cmp	r3, #1
 800daba:	d02a      	beq.n	800db12 <HAL_DSI_ConfigCommand+0x5e>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 800dabc:	6802      	ldr	r2, [r0, #0]
 800dabe:	4b16      	ldr	r3, [pc, #88]	; (800db18 <HAL_DSI_ConfigCommand+0x64>)
 800dac0:	6e94      	ldr	r4, [r2, #104]	; 0x68
 800dac2:	4023      	ands	r3, r4
 800dac4:	6693      	str	r3, [r2, #104]	; 0x68
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800dac6:	e9d1 3500 	ldrd	r3, r5, [r1]
 800daca:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 800dacc:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800dace:	6e94      	ldr	r4, [r2, #104]	; 0x68
                           LPCmd->LPGenShortWriteOneP | \
 800dad0:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 800dad2:	68cd      	ldr	r5, [r1, #12]
 800dad4:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 800dad6:	690d      	ldr	r5, [r1, #16]
 800dad8:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 800dada:	694d      	ldr	r5, [r1, #20]
 800dadc:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 800dade:	698d      	ldr	r5, [r1, #24]
 800dae0:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 800dae2:	69cd      	ldr	r5, [r1, #28]
 800dae4:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 800dae6:	6a0d      	ldr	r5, [r1, #32]
 800dae8:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 800daea:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 800daec:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 800daee:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800daf0:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 800daf2:	6acd      	ldr	r5, [r1, #44]	; 0x2c
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 800daf4:	6b09      	ldr	r1, [r1, #48]	; 0x30
                           LPCmd->LPDcsLongWrite      | \
 800daf6:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800daf8:	4323      	orrs	r3, r4
 800dafa:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 800dafc:	6e93      	ldr	r3, [r2, #104]	; 0x68
 800dafe:	f023 0302 	bic.w	r3, r3, #2
 800db02:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 800db04:	6e93      	ldr	r3, [r2, #104]	; 0x68
 800db06:	430b      	orrs	r3, r1
 800db08:	6693      	str	r3, [r2, #104]	; 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800db0a:	2300      	movs	r3, #0
 800db0c:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800db0e:	4618      	mov	r0, r3
}
 800db10:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800db12:	2002      	movs	r0, #2
 800db14:	e7fc      	b.n	800db10 <HAL_DSI_ConfigCommand+0x5c>
 800db16:	bf00      	nop
 800db18:	fef080ff 	.word	0xfef080ff

0800db1c <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800db1c:	7c03      	ldrb	r3, [r0, #16]
 800db1e:	2b01      	cmp	r3, #1
 800db20:	d00b      	beq.n	800db3a <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 800db22:	6803      	ldr	r3, [r0, #0]
 800db24:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800db26:	f022 021f 	bic.w	r2, r2, #31
 800db2a:	62da      	str	r2, [r3, #44]	; 0x2c
  hdsi->Instance->PCR |= FlowControl;
 800db2c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800db2e:	4311      	orrs	r1, r2
 800db30:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800db32:	2300      	movs	r3, #0
 800db34:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800db36:	4618      	mov	r0, r3
 800db38:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800db3a:	2002      	movs	r0, #2
}
 800db3c:	4770      	bx	lr

0800db3e <HAL_DSI_ConfigPhyTimer>:
  * @param  PhyTimers  DSI_PHY_TimerTypeDef structure that contains
  *                    the DSI PHY timing parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
 800db3e:	b530      	push	{r4, r5, lr}
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 800db40:	7c03      	ldrb	r3, [r0, #16]
 800db42:	2b01      	cmp	r3, #1
 800db44:	d035      	beq.n	800dbb2 <HAL_DSI_ConfigPhyTimer+0x74>

  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 800db46:	e9d1 2400 	ldrd	r2, r4, [r1]
     This timings are configured by the HS2LP_TIME and LP2HS_TIME in the DSI Host Clock Lane Timer Configuration Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 800db4a:	6803      	ldr	r3, [r0, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 800db4c:	4294      	cmp	r4, r2
 800db4e:	bf38      	it	cc
 800db50:	4614      	movcc	r4, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 800db52:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 800db56:	f002 22fc 	and.w	r2, r2, #4227922944	; 0xfc00fc00
 800db5a:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 800db5e:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 800db62:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800db66:	4322      	orrs	r2, r4
 800db68:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 800db6c:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 800db70:	f402 4200 	and.w	r2, r2, #32768	; 0x8000
 800db74:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 800db78:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 800db7c:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800db7e:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 800db82:	690d      	ldr	r5, [r1, #16]
 800db84:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 800db88:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800db8a:	432a      	orrs	r2, r5
 800db8c:	4322      	orrs	r2, r4
 800db8e:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 800db92:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800db96:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800db9a:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 800db9e:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800dba2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800dba6:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800dbaa:	2300      	movs	r3, #0
 800dbac:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800dbae:	4618      	mov	r0, r3
}
 800dbb0:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800dbb2:	2002      	movs	r0, #2
 800dbb4:	e7fc      	b.n	800dbb0 <HAL_DSI_ConfigPhyTimer+0x72>
	...

0800dbb8 <HAL_DSI_ConfigHostTimeouts>:
  * @param  HostTimeouts  DSI_HOST_TimeoutTypeDef structure that contains
  *                       the DSI host timeout parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
 800dbb8:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800dbba:	7c03      	ldrb	r3, [r0, #16]
 800dbbc:	2b01      	cmp	r3, #1
 800dbbe:	d05c      	beq.n	800dc7a <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800dbc0:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800dbc2:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800dbc4:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800dbc6:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800dbc8:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800dbcc:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800dbce:	689a      	ldr	r2, [r3, #8]
 800dbd0:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 800dbd4:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 800dbd6:	6f9a      	ldr	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 800dbd8:	684c      	ldr	r4, [r1, #4]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 800dbda:	b292      	uxth	r2, r2
 800dbdc:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 800dbde:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 800dbe0:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800dbe4:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 800dbe6:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 800dbe8:	4a25      	ldr	r2, [pc, #148]	; (800dc80 <HAL_DSI_ConfigHostTimeouts+0xc8>)
 800dbea:	4014      	ands	r4, r2
 800dbec:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800dbee:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 800dbf0:	432c      	orrs	r4, r5
 800dbf2:	679c      	str	r4, [r3, #120]	; 0x78

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 800dbf4:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800dbf6:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 800dbf8:	4014      	ands	r4, r2
 800dbfa:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800dbfc:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 800dbfe:	432c      	orrs	r4, r5
 800dc00:	67dc      	str	r4, [r3, #124]	; 0x7c

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 800dc02:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800dc06:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 800dc08:	4014      	ands	r4, r2
 800dc0a:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800dc0e:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 800dc12:	432c      	orrs	r4, r5
 800dc14:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 800dc18:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 800dc1c:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 800dc1e:	4014      	ands	r4, r2
 800dc20:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 800dc24:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800dc28:	432c      	orrs	r4, r5
 800dc2a:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 800dc2e:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800dc32:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 800dc36:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 800dc3a:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800dc3e:	698d      	ldr	r5, [r1, #24]
 800dc40:	432c      	orrs	r4, r5
 800dc42:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 800dc46:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 800dc4a:	69cd      	ldr	r5, [r1, #28]

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 800dc4c:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 800dc4e:	4014      	ands	r4, r2
 800dc50:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 800dc54:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 800dc58:	432c      	orrs	r4, r5
 800dc5a:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 800dc5e:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 800dc62:	4022      	ands	r2, r4
 800dc64:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 800dc68:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 800dc6c:	430a      	orrs	r2, r1
 800dc6e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800dc72:	2300      	movs	r3, #0
 800dc74:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800dc76:	4618      	mov	r0, r3
}
 800dc78:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800dc7a:	2002      	movs	r0, #2
 800dc7c:	e7fc      	b.n	800dc78 <HAL_DSI_ConfigHostTimeouts+0xc0>
 800dc7e:	bf00      	nop
 800dc80:	ffff0000 	.word	0xffff0000

0800dc84 <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800dc84:	7c03      	ldrb	r3, [r0, #16]
 800dc86:	2b01      	cmp	r3, #1
{
 800dc88:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 800dc8a:	d01c      	beq.n	800dcc6 <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 800dc8c:	6802      	ldr	r2, [r0, #0]
 800dc8e:	2300      	movs	r3, #0
 800dc90:	9300      	str	r3, [sp, #0]
 800dc92:	6851      	ldr	r1, [r2, #4]
 800dc94:	f041 0101 	orr.w	r1, r1, #1
 800dc98:	6051      	str	r1, [r2, #4]
 800dc9a:	6851      	ldr	r1, [r2, #4]
 800dc9c:	f001 0101 	and.w	r1, r1, #1
 800dca0:	9100      	str	r1, [sp, #0]
 800dca2:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 800dca4:	9301      	str	r3, [sp, #4]
 800dca6:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
 800dcaa:	f041 0108 	orr.w	r1, r1, #8
 800dcae:	f8c2 1404 	str.w	r1, [r2, #1028]	; 0x404
 800dcb2:	f8d2 2404 	ldr.w	r2, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800dcb6:	7403      	strb	r3, [r0, #16]
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 800dcb8:	f002 0208 	and.w	r2, r2, #8
 800dcbc:	9201      	str	r2, [sp, #4]
 800dcbe:	9a01      	ldr	r2, [sp, #4]

  return HAL_OK;
 800dcc0:	4618      	mov	r0, r3
}
 800dcc2:	b002      	add	sp, #8
 800dcc4:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800dcc6:	2002      	movs	r0, #2
 800dcc8:	e7fb      	b.n	800dcc2 <HAL_DSI_Start+0x3e>

0800dcca <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800dcca:	7c03      	ldrb	r3, [r0, #16]
 800dccc:	2b01      	cmp	r3, #1

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 800dcce:	bf1f      	itttt	ne
 800dcd0:	6802      	ldrne	r2, [r0, #0]
 800dcd2:	f8d2 3404 	ldrne.w	r3, [r2, #1028]	; 0x404
 800dcd6:	f043 0304 	orrne.w	r3, r3, #4
 800dcda:	f8c2 3404 	strne.w	r3, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800dcde:	bf1d      	ittte	ne
 800dce0:	2300      	movne	r3, #0
 800dce2:	7403      	strbne	r3, [r0, #16]

  return HAL_OK;
 800dce4:	4618      	movne	r0, r3
  __HAL_LOCK(hdsi);
 800dce6:	2002      	moveq	r0, #2
}
 800dce8:	4770      	bx	lr

0800dcea <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 800dcea:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 800dcec:	7c05      	ldrb	r5, [r0, #16]
 800dcee:	2d01      	cmp	r5, #1
{
 800dcf0:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 800dcf2:	d009      	beq.n	800dd08 <HAL_DSI_ShortWrite+0x1e>
 800dcf4:	2501      	movs	r5, #1
 800dcf6:	7405      	strb	r5, [r0, #16]

   status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 800dcf8:	9d06      	ldr	r5, [sp, #24]
 800dcfa:	9500      	str	r5, [sp, #0]
 800dcfc:	f7ff fcae 	bl	800d65c <DSI_ShortWrite>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800dd00:	2300      	movs	r3, #0
 800dd02:	7423      	strb	r3, [r4, #16]

  return status;
}
 800dd04:	b003      	add	sp, #12
 800dd06:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800dd08:	2002      	movs	r0, #2
 800dd0a:	e7fb      	b.n	800dd04 <HAL_DSI_ShortWrite+0x1a>

0800dd0c <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 800dd0c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd10:	461c      	mov	r4, r3
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 800dd12:	7c03      	ldrb	r3, [r0, #16]
 800dd14:	2b01      	cmp	r3, #1
{
 800dd16:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	; 0x28
 800dd1a:	4606      	mov	r6, r0
 800dd1c:	460f      	mov	r7, r1
 800dd1e:	4615      	mov	r5, r2
  __HAL_LOCK(hdsi);
 800dd20:	d053      	beq.n	800ddca <HAL_DSI_LongWrite+0xbe>
 800dd22:	2301      	movs	r3, #1
 800dd24:	7403      	strb	r3, [r0, #16]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 800dd26:	f7ff fa09 	bl	800d13c <HAL_GetTick>
 800dd2a:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800dd2c:	6832      	ldr	r2, [r6, #0]
 800dd2e:	6f53      	ldr	r3, [r2, #116]	; 0x74
 800dd30:	f013 0a01 	ands.w	sl, r3, #1
 800dd34:	d01a      	beq.n	800dd6c <HAL_DSI_LongWrite+0x60>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 800dd36:	2c03      	cmp	r4, #3
 800dd38:	4621      	mov	r1, r4

  for (count = 0U; count < nbBytes; count++)
 800dd3a:	f04f 0000 	mov.w	r0, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 800dd3e:	bf28      	it	cs
 800dd40:	2103      	movcs	r1, #3
  for (count = 0U; count < nbBytes; count++)
 800dd42:	4288      	cmp	r0, r1
 800dd44:	d11e      	bne.n	800dd84 <HAL_DSI_LongWrite+0x78>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 800dd46:	1a23      	subs	r3, r4, r0
  hdsi->Instance->GPDR = fifoword;
 800dd48:	f8c2 9070 	str.w	r9, [r2, #112]	; 0x70
  pparams += nbBytes;
 800dd4c:	4440      	add	r0, r8
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 800dd4e:	bb1b      	cbnz	r3, 800dd98 <HAL_DSI_LongWrite+0x8c>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 800dd50:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 800dd52:	ea45 1187 	orr.w	r1, r5, r7, lsl #6
 800dd56:	0225      	lsls	r5, r4, #8
 800dd58:	b2ad      	uxth	r5, r5
 800dd5a:	0224      	lsls	r4, r4, #8
 800dd5c:	430d      	orrs	r5, r1
 800dd5e:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 800dd62:	432c      	orrs	r4, r5
 800dd64:	66d4      	str	r4, [r2, #108]	; 0x6c
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
 800dd66:	4618      	mov	r0, r3
  __HAL_UNLOCK(hdsi);
 800dd68:	7433      	strb	r3, [r6, #16]
  return HAL_OK;
 800dd6a:	e009      	b.n	800dd80 <HAL_DSI_LongWrite+0x74>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800dd6c:	f7ff f9e6 	bl	800d13c <HAL_GetTick>
 800dd70:	eba0 000b 	sub.w	r0, r0, fp
 800dd74:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800dd78:	d9d8      	bls.n	800dd2c <HAL_DSI_LongWrite+0x20>
      __HAL_UNLOCK(hdsi);
 800dd7a:	f886 a010 	strb.w	sl, [r6, #16]
      return HAL_TIMEOUT;
 800dd7e:	2003      	movs	r0, #3
}
 800dd80:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 800dd84:	f818 3000 	ldrb.w	r3, [r8, r0]
 800dd88:	3001      	adds	r0, #1
 800dd8a:	ea4f 0cc0 	mov.w	ip, r0, lsl #3
 800dd8e:	fa03 f30c 	lsl.w	r3, r3, ip
 800dd92:	ea49 0903 	orr.w	r9, r9, r3
  for (count = 0U; count < nbBytes; count++)
 800dd96:	e7d4      	b.n	800dd42 <HAL_DSI_LongWrite+0x36>
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800dd98:	2b04      	cmp	r3, #4
    fifoword = 0U;
 800dd9a:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800dd9e:	469e      	mov	lr, r3
    for (count = 0U; count < nbBytes; count++)
 800dda0:	4661      	mov	r1, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800dda2:	bf28      	it	cs
 800dda4:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800dda8:	f810 8001 	ldrb.w	r8, [r0, r1]
 800ddac:	ea4f 09c1 	mov.w	r9, r1, lsl #3
    for (count = 0U; count < nbBytes; count++)
 800ddb0:	3101      	adds	r1, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800ddb2:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 800ddb6:	458e      	cmp	lr, r1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800ddb8:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 800ddbc:	d1f4      	bne.n	800dda8 <HAL_DSI_LongWrite+0x9c>
    hdsi->Instance->GPDR = fifoword;
 800ddbe:	f8c2 c070 	str.w	ip, [r2, #112]	; 0x70
    uicounter -= nbBytes;
 800ddc2:	eba3 030e 	sub.w	r3, r3, lr
    pparams += nbBytes;
 800ddc6:	4470      	add	r0, lr
 800ddc8:	e7c1      	b.n	800dd4e <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 800ddca:	2002      	movs	r0, #2
 800ddcc:	e7d8      	b.n	800dd80 <HAL_DSI_LongWrite+0x74>

0800ddce <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800ddce:	7c03      	ldrb	r3, [r0, #16]
 800ddd0:	2b01      	cmp	r3, #1
 800ddd2:	d010      	beq.n	800ddf6 <HAL_DSI_SetLowPowerRXFilter+0x28>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 800ddd4:	6803      	ldr	r3, [r0, #0]
 800ddd6:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 800ddda:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 800ddde:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 800dde2:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 800dde6:	ea42 6141 	orr.w	r1, r2, r1, lsl #25
 800ddea:	f8c3 141c 	str.w	r1, [r3, #1052]	; 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800ddee:	2300      	movs	r3, #0
 800ddf0:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800ddf2:	4618      	mov	r0, r3
 800ddf4:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800ddf6:	2002      	movs	r0, #2
}
 800ddf8:	4770      	bx	lr
	...

0800ddfc <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800ddfc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800de00:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 800dfc4 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800de04:	4a6d      	ldr	r2, [pc, #436]	; (800dfbc <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 800de06:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800de08:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 800de0a:	2401      	movs	r4, #1
 800de0c:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800de0e:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 800de12:	43ac      	bics	r4, r5
 800de14:	f040 80b9 	bne.w	800df8a <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800de18:	684d      	ldr	r5, [r1, #4]
 800de1a:	f005 0403 	and.w	r4, r5, #3
 800de1e:	ea4f 0843 	mov.w	r8, r3, lsl #1
 800de22:	2603      	movs	r6, #3
 800de24:	1e67      	subs	r7, r4, #1
 800de26:	fa06 f608 	lsl.w	r6, r6, r8
 800de2a:	2f01      	cmp	r7, #1
 800de2c:	ea6f 0606 	mvn.w	r6, r6
 800de30:	d834      	bhi.n	800de9c <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 800de32:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800de34:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 800de38:	68cf      	ldr	r7, [r1, #12]
 800de3a:	fa07 f708 	lsl.w	r7, r7, r8
 800de3e:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800de42:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800de44:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800de46:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800de4a:	f3c5 1700 	ubfx	r7, r5, #4, #1
 800de4e:	409f      	lsls	r7, r3
 800de50:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 800de54:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800de56:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800de58:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800de5c:	688f      	ldr	r7, [r1, #8]
 800de5e:	fa07 f708 	lsl.w	r7, r7, r8
 800de62:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800de66:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 800de68:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800de6a:	d119      	bne.n	800dea0 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 800de6c:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 800de70:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800de74:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800de78:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800de7c:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 800de80:	f04f 0e0f 	mov.w	lr, #15
 800de84:	fa0e fe0b 	lsl.w	lr, lr, fp
 800de88:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800de8c:	690f      	ldr	r7, [r1, #16]
 800de8e:	fa07 f70b 	lsl.w	r7, r7, fp
 800de92:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 800de96:	f8ca 7020 	str.w	r7, [sl, #32]
 800de9a:	e001      	b.n	800dea0 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800de9c:	2c03      	cmp	r4, #3
 800de9e:	d1da      	bne.n	800de56 <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 800dea0:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800dea2:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800dea6:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800dea8:	4326      	orrs	r6, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800deaa:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 800deae:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800deb0:	d06b      	beq.n	800df8a <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800deb2:	f04f 0a00 	mov.w	sl, #0
 800deb6:	f8cd a004 	str.w	sl, [sp, #4]
 800deba:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800debe:	4c40      	ldr	r4, [pc, #256]	; (800dfc0 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800dec0:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 800dec4:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 800dec8:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 800decc:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 800ded0:	9601      	str	r6, [sp, #4]
 800ded2:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 800ded4:	f023 0603 	bic.w	r6, r3, #3
 800ded8:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 800dedc:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800dee0:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800dee4:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800dee8:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800deec:	270f      	movs	r7, #15
 800deee:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800def2:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800def4:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800def8:	d04e      	beq.n	800df98 <HAL_GPIO_Init+0x19c>
 800defa:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800defe:	42a0      	cmp	r0, r4
 800df00:	d04c      	beq.n	800df9c <HAL_GPIO_Init+0x1a0>
 800df02:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800df06:	42a0      	cmp	r0, r4
 800df08:	d04a      	beq.n	800dfa0 <HAL_GPIO_Init+0x1a4>
 800df0a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800df0e:	42a0      	cmp	r0, r4
 800df10:	d048      	beq.n	800dfa4 <HAL_GPIO_Init+0x1a8>
 800df12:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800df16:	42a0      	cmp	r0, r4
 800df18:	d046      	beq.n	800dfa8 <HAL_GPIO_Init+0x1ac>
 800df1a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800df1e:	42a0      	cmp	r0, r4
 800df20:	d044      	beq.n	800dfac <HAL_GPIO_Init+0x1b0>
 800df22:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800df26:	42a0      	cmp	r0, r4
 800df28:	d042      	beq.n	800dfb0 <HAL_GPIO_Init+0x1b4>
 800df2a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800df2e:	42a0      	cmp	r0, r4
 800df30:	d040      	beq.n	800dfb4 <HAL_GPIO_Init+0x1b8>
 800df32:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800df36:	42a0      	cmp	r0, r4
 800df38:	d03e      	beq.n	800dfb8 <HAL_GPIO_Init+0x1bc>
 800df3a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800df3e:	42a0      	cmp	r0, r4
 800df40:	bf0c      	ite	eq
 800df42:	2409      	moveq	r4, #9
 800df44:	240a      	movne	r4, #10
 800df46:	fa04 f40e 	lsl.w	r4, r4, lr
 800df4a:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800df4c:	60b4      	str	r4, [r6, #8]
        temp = EXTI->IMR;
 800df4e:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 800df50:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800df54:	03ef      	lsls	r7, r5, #15
        temp &= ~((uint32_t)iocurrent);
 800df56:	bf54      	ite	pl
 800df58:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800df5a:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 800df5e:	6014      	str	r4, [r2, #0]

        temp = EXTI->EMR;
 800df60:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800df62:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 800df64:	bf54      	ite	pl
 800df66:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800df68:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 800df6c:	6054      	str	r4, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800df6e:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800df70:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 800df72:	bf54      	ite	pl
 800df74:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800df76:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 800df7a:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 800df7c:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800df7e:	02ad      	lsls	r5, r5, #10
        temp &= ~((uint32_t)iocurrent);
 800df80:	bf54      	ite	pl
 800df82:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800df84:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 800df88:	60d4      	str	r4, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800df8a:	3301      	adds	r3, #1
 800df8c:	2b10      	cmp	r3, #16
 800df8e:	f47f af3b 	bne.w	800de08 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 800df92:	b003      	add	sp, #12
 800df94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800df98:	4654      	mov	r4, sl
 800df9a:	e7d4      	b.n	800df46 <HAL_GPIO_Init+0x14a>
 800df9c:	2401      	movs	r4, #1
 800df9e:	e7d2      	b.n	800df46 <HAL_GPIO_Init+0x14a>
 800dfa0:	2402      	movs	r4, #2
 800dfa2:	e7d0      	b.n	800df46 <HAL_GPIO_Init+0x14a>
 800dfa4:	2403      	movs	r4, #3
 800dfa6:	e7ce      	b.n	800df46 <HAL_GPIO_Init+0x14a>
 800dfa8:	2404      	movs	r4, #4
 800dfaa:	e7cc      	b.n	800df46 <HAL_GPIO_Init+0x14a>
 800dfac:	2405      	movs	r4, #5
 800dfae:	e7ca      	b.n	800df46 <HAL_GPIO_Init+0x14a>
 800dfb0:	2406      	movs	r4, #6
 800dfb2:	e7c8      	b.n	800df46 <HAL_GPIO_Init+0x14a>
 800dfb4:	2407      	movs	r4, #7
 800dfb6:	e7c6      	b.n	800df46 <HAL_GPIO_Init+0x14a>
 800dfb8:	2408      	movs	r4, #8
 800dfba:	e7c4      	b.n	800df46 <HAL_GPIO_Init+0x14a>
 800dfbc:	40013c00 	.word	0x40013c00
 800dfc0:	40020000 	.word	0x40020000
 800dfc4:	40023800 	.word	0x40023800

0800dfc8 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 800dfc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 800dfcc:	4c4a      	ldr	r4, [pc, #296]	; (800e0f8 <HAL_GPIO_DeInit+0x130>)
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800dfce:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800e100 <HAL_GPIO_DeInit+0x138>
 800dfd2:	f8df a130 	ldr.w	sl, [pc, #304]	; 800e104 <HAL_GPIO_DeInit+0x13c>
 800dfd6:	f8df b130 	ldr.w	fp, [pc, #304]	; 800e108 <HAL_GPIO_DeInit+0x140>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800dfda:	2200      	movs	r2, #0
    ioposition = 0x01U << position;
 800dfdc:	2301      	movs	r3, #1
 800dfde:	fa03 fe02 	lsl.w	lr, r3, r2
    if(iocurrent == ioposition)
 800dfe2:	ea3e 0301 	bics.w	r3, lr, r1
    iocurrent = (GPIO_Pin) & ioposition;
 800dfe6:	ea0e 0701 	and.w	r7, lr, r1
    if(iocurrent == ioposition)
 800dfea:	d16e      	bne.n	800e0ca <HAL_GPIO_DeInit+0x102>
      tmp = SYSCFG->EXTICR[position >> 2U];
 800dfec:	f022 0503 	bic.w	r5, r2, #3
 800dff0:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 800dff4:	f505 359c 	add.w	r5, r5, #79872	; 0x13800
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800dff8:	4b40      	ldr	r3, [pc, #256]	; (800e0fc <HAL_GPIO_DeInit+0x134>)
      tmp = SYSCFG->EXTICR[position >> 2U];
 800dffa:	f8d5 8008 	ldr.w	r8, [r5, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 800dffe:	f002 0c03 	and.w	ip, r2, #3
 800e002:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800e006:	260f      	movs	r6, #15
 800e008:	fa06 f60c 	lsl.w	r6, r6, ip
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800e00c:	4298      	cmp	r0, r3
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 800e00e:	ea06 0808 	and.w	r8, r6, r8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800e012:	d05f      	beq.n	800e0d4 <HAL_GPIO_DeInit+0x10c>
 800e014:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800e018:	4298      	cmp	r0, r3
 800e01a:	d05d      	beq.n	800e0d8 <HAL_GPIO_DeInit+0x110>
 800e01c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800e020:	4298      	cmp	r0, r3
 800e022:	d05b      	beq.n	800e0dc <HAL_GPIO_DeInit+0x114>
 800e024:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800e028:	4298      	cmp	r0, r3
 800e02a:	d059      	beq.n	800e0e0 <HAL_GPIO_DeInit+0x118>
 800e02c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800e030:	4298      	cmp	r0, r3
 800e032:	d057      	beq.n	800e0e4 <HAL_GPIO_DeInit+0x11c>
 800e034:	4548      	cmp	r0, r9
 800e036:	d057      	beq.n	800e0e8 <HAL_GPIO_DeInit+0x120>
 800e038:	4550      	cmp	r0, sl
 800e03a:	d057      	beq.n	800e0ec <HAL_GPIO_DeInit+0x124>
 800e03c:	4558      	cmp	r0, fp
 800e03e:	d057      	beq.n	800e0f0 <HAL_GPIO_DeInit+0x128>
 800e040:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e044:	4298      	cmp	r0, r3
 800e046:	d055      	beq.n	800e0f4 <HAL_GPIO_DeInit+0x12c>
 800e048:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800e04c:	4298      	cmp	r0, r3
 800e04e:	bf0c      	ite	eq
 800e050:	2309      	moveq	r3, #9
 800e052:	230a      	movne	r3, #10
 800e054:	fa03 f30c 	lsl.w	r3, r3, ip
 800e058:	4543      	cmp	r3, r8
 800e05a:	d113      	bne.n	800e084 <HAL_GPIO_DeInit+0xbc>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 800e05c:	6823      	ldr	r3, [r4, #0]
 800e05e:	ea23 0307 	bic.w	r3, r3, r7
 800e062:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 800e064:	6863      	ldr	r3, [r4, #4]
 800e066:	ea23 0307 	bic.w	r3, r3, r7
 800e06a:	6063      	str	r3, [r4, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 800e06c:	68a3      	ldr	r3, [r4, #8]
 800e06e:	ea23 0307 	bic.w	r3, r3, r7
 800e072:	60a3      	str	r3, [r4, #8]
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 800e074:	68e3      	ldr	r3, [r4, #12]
 800e076:	ea23 0707 	bic.w	r7, r3, r7
 800e07a:	60e7      	str	r7, [r4, #12]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 800e07c:	68ab      	ldr	r3, [r5, #8]
 800e07e:	ea23 0606 	bic.w	r6, r3, r6
 800e082:	60ae      	str	r6, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800e084:	6805      	ldr	r5, [r0, #0]
 800e086:	2603      	movs	r6, #3
 800e088:	0053      	lsls	r3, r2, #1
 800e08a:	fa06 f303 	lsl.w	r3, r6, r3
 800e08e:	ea25 0503 	bic.w	r5, r5, r3
 800e092:	6005      	str	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800e094:	fa22 f506 	lsr.w	r5, r2, r6
 800e098:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 800e09c:	f002 0c07 	and.w	ip, r2, #7
 800e0a0:	6a2e      	ldr	r6, [r5, #32]
 800e0a2:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800e0a6:	270f      	movs	r7, #15
 800e0a8:	fa07 f70c 	lsl.w	r7, r7, ip
 800e0ac:	ea26 0707 	bic.w	r7, r6, r7
 800e0b0:	622f      	str	r7, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800e0b2:	68c5      	ldr	r5, [r0, #12]
 800e0b4:	ea25 0503 	bic.w	r5, r5, r3
 800e0b8:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 800e0ba:	6845      	ldr	r5, [r0, #4]
 800e0bc:	ea25 050e 	bic.w	r5, r5, lr
 800e0c0:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800e0c2:	6885      	ldr	r5, [r0, #8]
 800e0c4:	ea25 0303 	bic.w	r3, r5, r3
 800e0c8:	6083      	str	r3, [r0, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800e0ca:	3201      	adds	r2, #1
 800e0cc:	2a10      	cmp	r2, #16
 800e0ce:	d185      	bne.n	800dfdc <HAL_GPIO_DeInit+0x14>
    }
  }
}
 800e0d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800e0d4:	2300      	movs	r3, #0
 800e0d6:	e7bd      	b.n	800e054 <HAL_GPIO_DeInit+0x8c>
 800e0d8:	2301      	movs	r3, #1
 800e0da:	e7bb      	b.n	800e054 <HAL_GPIO_DeInit+0x8c>
 800e0dc:	2302      	movs	r3, #2
 800e0de:	e7b9      	b.n	800e054 <HAL_GPIO_DeInit+0x8c>
 800e0e0:	2303      	movs	r3, #3
 800e0e2:	e7b7      	b.n	800e054 <HAL_GPIO_DeInit+0x8c>
 800e0e4:	2304      	movs	r3, #4
 800e0e6:	e7b5      	b.n	800e054 <HAL_GPIO_DeInit+0x8c>
 800e0e8:	2305      	movs	r3, #5
 800e0ea:	e7b3      	b.n	800e054 <HAL_GPIO_DeInit+0x8c>
 800e0ec:	2306      	movs	r3, #6
 800e0ee:	e7b1      	b.n	800e054 <HAL_GPIO_DeInit+0x8c>
 800e0f0:	2307      	movs	r3, #7
 800e0f2:	e7af      	b.n	800e054 <HAL_GPIO_DeInit+0x8c>
 800e0f4:	2308      	movs	r3, #8
 800e0f6:	e7ad      	b.n	800e054 <HAL_GPIO_DeInit+0x8c>
 800e0f8:	40013c00 	.word	0x40013c00
 800e0fc:	40020000 	.word	0x40020000
 800e100:	40021400 	.word	0x40021400
 800e104:	40021800 	.word	0x40021800
 800e108:	40021c00 	.word	0x40021c00

0800e10c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800e10c:	6903      	ldr	r3, [r0, #16]
 800e10e:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800e110:	bf14      	ite	ne
 800e112:	2001      	movne	r0, #1
 800e114:	2000      	moveq	r0, #0
 800e116:	4770      	bx	lr

0800e118 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800e118:	b10a      	cbz	r2, 800e11e <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800e11a:	6181      	str	r1, [r0, #24]
  }
}
 800e11c:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800e11e:	0409      	lsls	r1, r1, #16
 800e120:	e7fb      	b.n	800e11a <HAL_GPIO_WritePin+0x2>

0800e122 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Ouput Data Register value */
  odr = GPIOx->ODR;
 800e122:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800e124:	ea01 0203 	and.w	r2, r1, r3
 800e128:	ea21 0103 	bic.w	r1, r1, r3
 800e12c:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800e130:	6181      	str	r1, [r0, #24]
}
 800e132:	4770      	bx	lr

0800e134 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800e134:	6801      	ldr	r1, [r0, #0]
 800e136:	694b      	ldr	r3, [r1, #20]
 800e138:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 800e13c:	f04f 0200 	mov.w	r2, #0
 800e140:	d010      	beq.n	800e164 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800e142:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800e146:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 800e148:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 800e14a:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800e14c:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800e150:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800e154:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800e156:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800e15a:	f043 0304 	orr.w	r3, r3, #4
 800e15e:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 800e160:	2001      	movs	r0, #1
 800e162:	4770      	bx	lr
  }
  return HAL_OK;
 800e164:	4618      	mov	r0, r3
}
 800e166:	4770      	bx	lr

0800e168 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 800e168:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e16c:	4604      	mov	r4, r0
 800e16e:	460f      	mov	r7, r1
 800e170:	4616      	mov	r6, r2
 800e172:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800e174:	6825      	ldr	r5, [r4, #0]
 800e176:	6968      	ldr	r0, [r5, #20]
 800e178:	ea27 0000 	bic.w	r0, r7, r0
 800e17c:	b280      	uxth	r0, r0
 800e17e:	b1b8      	cbz	r0, 800e1b0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800e180:	696b      	ldr	r3, [r5, #20]
 800e182:	055a      	lsls	r2, r3, #21
 800e184:	d516      	bpl.n	800e1b4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800e186:	682b      	ldr	r3, [r5, #0]
 800e188:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800e18c:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800e18e:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800e192:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800e194:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800e196:	2300      	movs	r3, #0
 800e198:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800e19a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800e19e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800e1a2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e1a4:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800e1a8:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800e1aa:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 800e1ae:	2001      	movs	r0, #1
}
 800e1b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 800e1b4:	1c73      	adds	r3, r6, #1
 800e1b6:	d0de      	beq.n	800e176 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800e1b8:	f7fe ffc0 	bl	800d13c <HAL_GetTick>
 800e1bc:	eba0 0008 	sub.w	r0, r0, r8
 800e1c0:	42b0      	cmp	r0, r6
 800e1c2:	d801      	bhi.n	800e1c8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 800e1c4:	2e00      	cmp	r6, #0
 800e1c6:	d1d5      	bne.n	800e174 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800e1c8:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800e1ca:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800e1cc:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800e1ce:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800e1d2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800e1d6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e1d8:	f042 0220 	orr.w	r2, r2, #32
 800e1dc:	e7e4      	b.n	800e1a8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

0800e1de <I2C_WaitOnBTFFlagUntilTimeout>:
{
 800e1de:	b570      	push	{r4, r5, r6, lr}
 800e1e0:	4604      	mov	r4, r0
 800e1e2:	460d      	mov	r5, r1
 800e1e4:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800e1e6:	6823      	ldr	r3, [r4, #0]
 800e1e8:	695b      	ldr	r3, [r3, #20]
 800e1ea:	075b      	lsls	r3, r3, #29
 800e1ec:	d501      	bpl.n	800e1f2 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 800e1ee:	2000      	movs	r0, #0
}
 800e1f0:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800e1f2:	4620      	mov	r0, r4
 800e1f4:	f7ff ff9e 	bl	800e134 <I2C_IsAcknowledgeFailed>
 800e1f8:	b9a8      	cbnz	r0, 800e226 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800e1fa:	1c6a      	adds	r2, r5, #1
 800e1fc:	d0f3      	beq.n	800e1e6 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800e1fe:	f7fe ff9d 	bl	800d13c <HAL_GetTick>
 800e202:	1b80      	subs	r0, r0, r6
 800e204:	42a8      	cmp	r0, r5
 800e206:	d801      	bhi.n	800e20c <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 800e208:	2d00      	cmp	r5, #0
 800e20a:	d1ec      	bne.n	800e1e6 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800e20c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800e20e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800e210:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800e212:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800e216:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800e21a:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800e21c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800e220:	f042 0220 	orr.w	r2, r2, #32
 800e224:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800e226:	2001      	movs	r0, #1
 800e228:	e7e2      	b.n	800e1f0 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

0800e22a <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 800e22a:	b570      	push	{r4, r5, r6, lr}
 800e22c:	4604      	mov	r4, r0
 800e22e:	460d      	mov	r5, r1
 800e230:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800e232:	6821      	ldr	r1, [r4, #0]
 800e234:	694b      	ldr	r3, [r1, #20]
 800e236:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 800e23a:	d001      	beq.n	800e240 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 800e23c:	2000      	movs	r0, #0
 800e23e:	e010      	b.n	800e262 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800e240:	694a      	ldr	r2, [r1, #20]
 800e242:	06d2      	lsls	r2, r2, #27
 800e244:	d50e      	bpl.n	800e264 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800e246:	f06f 0210 	mvn.w	r2, #16
 800e24a:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800e24c:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800e24e:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800e250:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800e254:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800e258:	6c22      	ldr	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800e25a:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800e25c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 800e260:	2001      	movs	r0, #1
}
 800e262:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800e264:	f7fe ff6a 	bl	800d13c <HAL_GetTick>
 800e268:	1b80      	subs	r0, r0, r6
 800e26a:	42a8      	cmp	r0, r5
 800e26c:	d801      	bhi.n	800e272 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 800e26e:	2d00      	cmp	r5, #0
 800e270:	d1df      	bne.n	800e232 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800e272:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800e274:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800e276:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800e278:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800e27c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800e280:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e282:	f042 0220 	orr.w	r2, r2, #32
 800e286:	e7e8      	b.n	800e25a <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

0800e288 <I2C_WaitOnFlagUntilTimeout>:
{
 800e288:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 800e28c:	4606      	mov	r6, r0
 800e28e:	460f      	mov	r7, r1
 800e290:	4691      	mov	r9, r2
 800e292:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800e294:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800e298:	6833      	ldr	r3, [r6, #0]
 800e29a:	f1ba 0f01 	cmp.w	sl, #1
 800e29e:	bf0c      	ite	eq
 800e2a0:	695c      	ldreq	r4, [r3, #20]
 800e2a2:	699c      	ldrne	r4, [r3, #24]
 800e2a4:	ea27 0404 	bic.w	r4, r7, r4
 800e2a8:	b2a4      	uxth	r4, r4
 800e2aa:	fab4 f484 	clz	r4, r4
 800e2ae:	0964      	lsrs	r4, r4, #5
 800e2b0:	45a1      	cmp	r9, r4
 800e2b2:	d001      	beq.n	800e2b8 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 800e2b4:	2000      	movs	r0, #0
 800e2b6:	e017      	b.n	800e2e8 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 800e2b8:	1c6a      	adds	r2, r5, #1
 800e2ba:	d0ee      	beq.n	800e29a <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800e2bc:	f7fe ff3e 	bl	800d13c <HAL_GetTick>
 800e2c0:	9b08      	ldr	r3, [sp, #32]
 800e2c2:	1ac0      	subs	r0, r0, r3
 800e2c4:	42a8      	cmp	r0, r5
 800e2c6:	d801      	bhi.n	800e2cc <I2C_WaitOnFlagUntilTimeout+0x44>
 800e2c8:	2d00      	cmp	r5, #0
 800e2ca:	d1e5      	bne.n	800e298 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800e2cc:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800e2ce:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800e2d0:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800e2d2:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800e2d6:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800e2da:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800e2dc:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800e2e0:	f042 0220 	orr.w	r2, r2, #32
 800e2e4:	6432      	str	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800e2e6:	2001      	movs	r0, #1
}
 800e2e8:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

0800e2ec <I2C_WaitOnTXEFlagUntilTimeout>:
{
 800e2ec:	b570      	push	{r4, r5, r6, lr}
 800e2ee:	4604      	mov	r4, r0
 800e2f0:	460d      	mov	r5, r1
 800e2f2:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800e2f4:	6823      	ldr	r3, [r4, #0]
 800e2f6:	695b      	ldr	r3, [r3, #20]
 800e2f8:	061b      	lsls	r3, r3, #24
 800e2fa:	d501      	bpl.n	800e300 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 800e2fc:	2000      	movs	r0, #0
}
 800e2fe:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800e300:	4620      	mov	r0, r4
 800e302:	f7ff ff17 	bl	800e134 <I2C_IsAcknowledgeFailed>
 800e306:	b9a8      	cbnz	r0, 800e334 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800e308:	1c6a      	adds	r2, r5, #1
 800e30a:	d0f3      	beq.n	800e2f4 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800e30c:	f7fe ff16 	bl	800d13c <HAL_GetTick>
 800e310:	1b80      	subs	r0, r0, r6
 800e312:	42a8      	cmp	r0, r5
 800e314:	d801      	bhi.n	800e31a <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 800e316:	2d00      	cmp	r5, #0
 800e318:	d1ec      	bne.n	800e2f4 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800e31a:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800e31c:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800e31e:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800e320:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800e324:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800e328:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800e32a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800e32e:	f042 0220 	orr.w	r2, r2, #32
 800e332:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800e334:	2001      	movs	r0, #1
 800e336:	e7e2      	b.n	800e2fe <I2C_WaitOnTXEFlagUntilTimeout+0x12>

0800e338 <I2C_RequestMemoryWrite>:
{
 800e338:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e33c:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800e33e:	6802      	ldr	r2, [r0, #0]
{
 800e340:	b085      	sub	sp, #20
 800e342:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 800e346:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800e348:	6813      	ldr	r3, [r2, #0]
 800e34a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800e34e:	6013      	str	r3, [r2, #0]
{
 800e350:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800e352:	463b      	mov	r3, r7
 800e354:	f8cd 8000 	str.w	r8, [sp]
 800e358:	2200      	movs	r2, #0
 800e35a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800e35e:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800e360:	f7ff ff92 	bl	800e288 <I2C_WaitOnFlagUntilTimeout>
 800e364:	6823      	ldr	r3, [r4, #0]
 800e366:	b138      	cbz	r0, 800e378 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800e368:	681b      	ldr	r3, [r3, #0]
 800e36a:	05db      	lsls	r3, r3, #23
 800e36c:	d502      	bpl.n	800e374 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800e36e:	f44f 7300 	mov.w	r3, #512	; 0x200
 800e372:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800e374:	2003      	movs	r0, #3
 800e376:	e00a      	b.n	800e38e <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800e378:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800e37c:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800e37e:	4919      	ldr	r1, [pc, #100]	; (800e3e4 <I2C_RequestMemoryWrite+0xac>)
 800e380:	4643      	mov	r3, r8
 800e382:	463a      	mov	r2, r7
 800e384:	4620      	mov	r0, r4
 800e386:	f7ff feef 	bl	800e168 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800e38a:	b118      	cbz	r0, 800e394 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 800e38c:	2001      	movs	r0, #1
}
 800e38e:	b005      	add	sp, #20
 800e390:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800e394:	6823      	ldr	r3, [r4, #0]
 800e396:	9003      	str	r0, [sp, #12]
 800e398:	695a      	ldr	r2, [r3, #20]
 800e39a:	9203      	str	r2, [sp, #12]
 800e39c:	699b      	ldr	r3, [r3, #24]
 800e39e:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800e3a0:	4642      	mov	r2, r8
 800e3a2:	4639      	mov	r1, r7
 800e3a4:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800e3a6:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800e3a8:	f7ff ffa0 	bl	800e2ec <I2C_WaitOnTXEFlagUntilTimeout>
 800e3ac:	b140      	cbz	r0, 800e3c0 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800e3ae:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800e3b0:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800e3b2:	bf01      	itttt	eq
 800e3b4:	6822      	ldreq	r2, [r4, #0]
 800e3b6:	6813      	ldreq	r3, [r2, #0]
 800e3b8:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800e3bc:	6013      	streq	r3, [r2, #0]
 800e3be:	e7e5      	b.n	800e38c <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800e3c0:	f1b9 0f01 	cmp.w	r9, #1
 800e3c4:	6823      	ldr	r3, [r4, #0]
 800e3c6:	d102      	bne.n	800e3ce <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800e3c8:	b2ed      	uxtb	r5, r5
 800e3ca:	611d      	str	r5, [r3, #16]
 800e3cc:	e7df      	b.n	800e38e <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800e3ce:	0a2a      	lsrs	r2, r5, #8
 800e3d0:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800e3d2:	4639      	mov	r1, r7
 800e3d4:	4642      	mov	r2, r8
 800e3d6:	4620      	mov	r0, r4
 800e3d8:	f7ff ff88 	bl	800e2ec <I2C_WaitOnTXEFlagUntilTimeout>
 800e3dc:	2800      	cmp	r0, #0
 800e3de:	d1e6      	bne.n	800e3ae <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800e3e0:	6823      	ldr	r3, [r4, #0]
 800e3e2:	e7f1      	b.n	800e3c8 <I2C_RequestMemoryWrite+0x90>
 800e3e4:	00010002 	.word	0x00010002

0800e3e8 <I2C_RequestMemoryRead>:
{
 800e3e8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800e3ec:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800e3ee:	6803      	ldr	r3, [r0, #0]
{
 800e3f0:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800e3f2:	681a      	ldr	r2, [r3, #0]
 800e3f4:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800e3f8:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800e3fa:	681a      	ldr	r2, [r3, #0]
{
 800e3fc:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800e400:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800e404:	601a      	str	r2, [r3, #0]
{
 800e406:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800e408:	463b      	mov	r3, r7
 800e40a:	f8cd 8000 	str.w	r8, [sp]
 800e40e:	2200      	movs	r2, #0
 800e410:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800e414:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800e416:	f7ff ff37 	bl	800e288 <I2C_WaitOnFlagUntilTimeout>
 800e41a:	6823      	ldr	r3, [r4, #0]
 800e41c:	b148      	cbz	r0, 800e432 <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800e41e:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800e420:	05db      	lsls	r3, r3, #23
 800e422:	d502      	bpl.n	800e42a <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800e424:	f44f 7300 	mov.w	r3, #512	; 0x200
 800e428:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800e42a:	2003      	movs	r0, #3
}
 800e42c:	b004      	add	sp, #16
 800e42e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800e432:	fa5f f986 	uxtb.w	r9, r6
 800e436:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800e43a:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800e43c:	492a      	ldr	r1, [pc, #168]	; (800e4e8 <I2C_RequestMemoryRead+0x100>)
 800e43e:	4643      	mov	r3, r8
 800e440:	463a      	mov	r2, r7
 800e442:	4620      	mov	r0, r4
 800e444:	f7ff fe90 	bl	800e168 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800e448:	b108      	cbz	r0, 800e44e <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 800e44a:	2001      	movs	r0, #1
 800e44c:	e7ee      	b.n	800e42c <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800e44e:	6823      	ldr	r3, [r4, #0]
 800e450:	9003      	str	r0, [sp, #12]
 800e452:	695a      	ldr	r2, [r3, #20]
 800e454:	9203      	str	r2, [sp, #12]
 800e456:	699b      	ldr	r3, [r3, #24]
 800e458:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800e45a:	4642      	mov	r2, r8
 800e45c:	4639      	mov	r1, r7
 800e45e:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800e460:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800e462:	f7ff ff43 	bl	800e2ec <I2C_WaitOnTXEFlagUntilTimeout>
 800e466:	b140      	cbz	r0, 800e47a <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800e468:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800e46a:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800e46c:	bf01      	itttt	eq
 800e46e:	6822      	ldreq	r2, [r4, #0]
 800e470:	6813      	ldreq	r3, [r2, #0]
 800e472:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800e476:	6013      	streq	r3, [r2, #0]
 800e478:	e7e7      	b.n	800e44a <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800e47a:	f1ba 0f01 	cmp.w	sl, #1
 800e47e:	6823      	ldr	r3, [r4, #0]
 800e480:	d11a      	bne.n	800e4b8 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800e482:	b2ed      	uxtb	r5, r5
 800e484:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800e486:	4642      	mov	r2, r8
 800e488:	4639      	mov	r1, r7
 800e48a:	4620      	mov	r0, r4
 800e48c:	f7ff ff2e 	bl	800e2ec <I2C_WaitOnTXEFlagUntilTimeout>
 800e490:	2800      	cmp	r0, #0
 800e492:	d1e9      	bne.n	800e468 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800e494:	6822      	ldr	r2, [r4, #0]
 800e496:	6813      	ldr	r3, [r2, #0]
 800e498:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800e49c:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800e49e:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800e4a2:	4602      	mov	r2, r0
 800e4a4:	f8cd 8000 	str.w	r8, [sp]
 800e4a8:	463b      	mov	r3, r7
 800e4aa:	4620      	mov	r0, r4
 800e4ac:	f7ff feec 	bl	800e288 <I2C_WaitOnFlagUntilTimeout>
 800e4b0:	6822      	ldr	r2, [r4, #0]
 800e4b2:	b160      	cbz	r0, 800e4ce <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800e4b4:	6813      	ldr	r3, [r2, #0]
 800e4b6:	e7b3      	b.n	800e420 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800e4b8:	0a2a      	lsrs	r2, r5, #8
 800e4ba:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800e4bc:	4639      	mov	r1, r7
 800e4be:	4642      	mov	r2, r8
 800e4c0:	4620      	mov	r0, r4
 800e4c2:	f7ff ff13 	bl	800e2ec <I2C_WaitOnTXEFlagUntilTimeout>
 800e4c6:	2800      	cmp	r0, #0
 800e4c8:	d1ce      	bne.n	800e468 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800e4ca:	6823      	ldr	r3, [r4, #0]
 800e4cc:	e7d9      	b.n	800e482 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800e4ce:	f049 0301 	orr.w	r3, r9, #1
 800e4d2:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800e4d4:	4904      	ldr	r1, [pc, #16]	; (800e4e8 <I2C_RequestMemoryRead+0x100>)
 800e4d6:	4643      	mov	r3, r8
 800e4d8:	463a      	mov	r2, r7
 800e4da:	4620      	mov	r0, r4
 800e4dc:	f7ff fe44 	bl	800e168 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 800e4e0:	3800      	subs	r0, #0
 800e4e2:	bf18      	it	ne
 800e4e4:	2001      	movne	r0, #1
 800e4e6:	e7a1      	b.n	800e42c <I2C_RequestMemoryRead+0x44>
 800e4e8:	00010002 	.word	0x00010002

0800e4ec <HAL_I2C_Init>:
{
 800e4ec:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 800e4ee:	4604      	mov	r4, r0
 800e4f0:	b908      	cbnz	r0, 800e4f6 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 800e4f2:	2001      	movs	r0, #1
}
 800e4f4:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800e4f6:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800e4fa:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800e4fe:	b91b      	cbnz	r3, 800e508 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 800e500:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800e504:	f7f3 fadc 	bl	8001ac0 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 800e508:	2324      	movs	r3, #36	; 0x24
 800e50a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800e50e:	6823      	ldr	r3, [r4, #0]
 800e510:	681a      	ldr	r2, [r3, #0]
 800e512:	f022 0201 	bic.w	r2, r2, #1
 800e516:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800e518:	681a      	ldr	r2, [r3, #0]
 800e51a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800e51e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800e520:	681a      	ldr	r2, [r3, #0]
 800e522:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800e526:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800e528:	f001 f818 	bl	800f55c <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800e52c:	4a3f      	ldr	r2, [pc, #252]	; (800e62c <HAL_I2C_Init+0x140>)
 800e52e:	6863      	ldr	r3, [r4, #4]
 800e530:	4293      	cmp	r3, r2
 800e532:	bf94      	ite	ls
 800e534:	4a3e      	ldrls	r2, [pc, #248]	; (800e630 <HAL_I2C_Init+0x144>)
 800e536:	4a3f      	ldrhi	r2, [pc, #252]	; (800e634 <HAL_I2C_Init+0x148>)
 800e538:	4290      	cmp	r0, r2
 800e53a:	bf8c      	ite	hi
 800e53c:	2200      	movhi	r2, #0
 800e53e:	2201      	movls	r2, #1
 800e540:	2a00      	cmp	r2, #0
 800e542:	d1d6      	bne.n	800e4f2 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800e544:	6821      	ldr	r1, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800e546:	4e3c      	ldr	r6, [pc, #240]	; (800e638 <HAL_I2C_Init+0x14c>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800e548:	684a      	ldr	r2, [r1, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800e54a:	fbb0 f6f6 	udiv	r6, r0, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800e54e:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
 800e552:	4332      	orrs	r2, r6
 800e554:	604a      	str	r2, [r1, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800e556:	4a35      	ldr	r2, [pc, #212]	; (800e62c <HAL_I2C_Init+0x140>)
 800e558:	6a0d      	ldr	r5, [r1, #32]
 800e55a:	4293      	cmp	r3, r2
 800e55c:	bf84      	itt	hi
 800e55e:	f44f 7296 	movhi.w	r2, #300	; 0x12c
 800e562:	4372      	mulhi	r2, r6
 800e564:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 800e568:	bf91      	iteee	ls
 800e56a:	1c72      	addls	r2, r6, #1
 800e56c:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 800e570:	fbb2 f2f6 	udivhi	r2, r2, r6
 800e574:	3201      	addhi	r2, #1
 800e576:	432a      	orrs	r2, r5
 800e578:	620a      	str	r2, [r1, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800e57a:	69cd      	ldr	r5, [r1, #28]
 800e57c:	1e42      	subs	r2, r0, #1
 800e57e:	482b      	ldr	r0, [pc, #172]	; (800e62c <HAL_I2C_Init+0x140>)
 800e580:	f425 454f 	bic.w	r5, r5, #52992	; 0xcf00
 800e584:	4283      	cmp	r3, r0
 800e586:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 800e58a:	d832      	bhi.n	800e5f2 <HAL_I2C_Init+0x106>
 800e58c:	005b      	lsls	r3, r3, #1
 800e58e:	fbb2 f3f3 	udiv	r3, r2, r3
 800e592:	f640 72fc 	movw	r2, #4092	; 0xffc
 800e596:	3301      	adds	r3, #1
 800e598:	4213      	tst	r3, r2
 800e59a:	d042      	beq.n	800e622 <HAL_I2C_Init+0x136>
 800e59c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800e5a0:	432b      	orrs	r3, r5
 800e5a2:	61cb      	str	r3, [r1, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800e5a4:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800e5a8:	680a      	ldr	r2, [r1, #0]
 800e5aa:	4303      	orrs	r3, r0
 800e5ac:	f022 02c0 	bic.w	r2, r2, #192	; 0xc0
 800e5b0:	4313      	orrs	r3, r2
 800e5b2:	600b      	str	r3, [r1, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800e5b4:	688a      	ldr	r2, [r1, #8]
 800e5b6:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800e5ba:	f422 4203 	bic.w	r2, r2, #33536	; 0x8300
 800e5be:	4303      	orrs	r3, r0
 800e5c0:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800e5c4:	4313      	orrs	r3, r2
 800e5c6:	608b      	str	r3, [r1, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800e5c8:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800e5cc:	68ca      	ldr	r2, [r1, #12]
 800e5ce:	4303      	orrs	r3, r0
 800e5d0:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800e5d4:	4313      	orrs	r3, r2
 800e5d6:	60cb      	str	r3, [r1, #12]
  __HAL_I2C_ENABLE(hi2c);
 800e5d8:	680b      	ldr	r3, [r1, #0]
 800e5da:	f043 0301 	orr.w	r3, r3, #1
 800e5de:	600b      	str	r3, [r1, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800e5e0:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 800e5e2:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800e5e4:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800e5e6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800e5ea:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800e5ec:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 800e5f0:	e780      	b.n	800e4f4 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800e5f2:	68a0      	ldr	r0, [r4, #8]
 800e5f4:	b950      	cbnz	r0, 800e60c <HAL_I2C_Init+0x120>
 800e5f6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800e5fa:	fbb2 f3f3 	udiv	r3, r2, r3
 800e5fe:	3301      	adds	r3, #1
 800e600:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800e604:	b17b      	cbz	r3, 800e626 <HAL_I2C_Init+0x13a>
 800e606:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800e60a:	e7c9      	b.n	800e5a0 <HAL_I2C_Init+0xb4>
 800e60c:	2019      	movs	r0, #25
 800e60e:	4343      	muls	r3, r0
 800e610:	fbb2 f3f3 	udiv	r3, r2, r3
 800e614:	3301      	adds	r3, #1
 800e616:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800e61a:	b123      	cbz	r3, 800e626 <HAL_I2C_Init+0x13a>
 800e61c:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800e620:	e7be      	b.n	800e5a0 <HAL_I2C_Init+0xb4>
 800e622:	2304      	movs	r3, #4
 800e624:	e7bc      	b.n	800e5a0 <HAL_I2C_Init+0xb4>
 800e626:	2301      	movs	r3, #1
 800e628:	e7ba      	b.n	800e5a0 <HAL_I2C_Init+0xb4>
 800e62a:	bf00      	nop
 800e62c:	000186a0 	.word	0x000186a0
 800e630:	001e847f 	.word	0x001e847f
 800e634:	003d08ff 	.word	0x003d08ff
 800e638:	000f4240 	.word	0x000f4240

0800e63c <HAL_I2C_DeInit>:
{
 800e63c:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 800e63e:	4604      	mov	r4, r0
 800e640:	b198      	cbz	r0, 800e66a <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 800e642:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800e644:	2324      	movs	r3, #36	; 0x24
 800e646:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800e64a:	6813      	ldr	r3, [r2, #0]
 800e64c:	f023 0301 	bic.w	r3, r3, #1
 800e650:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 800e652:	f7f3 fa79 	bl	8001b48 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800e656:	2000      	movs	r0, #0
 800e658:	6420      	str	r0, [r4, #64]	; 0x40
  __HAL_UNLOCK(hi2c);
 800e65a:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
  hi2c->State         = HAL_I2C_STATE_RESET;
 800e65e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800e662:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode          = HAL_I2C_MODE_NONE;
 800e664:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
}
 800e668:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800e66a:	2001      	movs	r0, #1
 800e66c:	e7fc      	b.n	800e668 <HAL_I2C_DeInit+0x2c>
	...

0800e670 <HAL_I2C_Mem_Write>:
{
 800e670:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800e674:	4604      	mov	r4, r0
 800e676:	4699      	mov	r9, r3
 800e678:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800e67a:	460f      	mov	r7, r1
 800e67c:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800e67e:	f7fe fd5d 	bl	800d13c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800e682:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800e686:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800e688:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800e68a:	d003      	beq.n	800e694 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 800e68c:	2002      	movs	r0, #2
}
 800e68e:	b003      	add	sp, #12
 800e690:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800e694:	9000      	str	r0, [sp, #0]
 800e696:	493c      	ldr	r1, [pc, #240]	; (800e788 <HAL_I2C_Mem_Write+0x118>)
 800e698:	2319      	movs	r3, #25
 800e69a:	2201      	movs	r2, #1
 800e69c:	4620      	mov	r0, r4
 800e69e:	f7ff fdf3 	bl	800e288 <I2C_WaitOnFlagUntilTimeout>
 800e6a2:	2800      	cmp	r0, #0
 800e6a4:	d1f2      	bne.n	800e68c <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 800e6a6:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800e6aa:	2b01      	cmp	r3, #1
 800e6ac:	d0ee      	beq.n	800e68c <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800e6ae:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800e6b0:	2301      	movs	r3, #1
 800e6b2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800e6b6:	6803      	ldr	r3, [r0, #0]
 800e6b8:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800e6ba:	bf5e      	ittt	pl
 800e6bc:	6803      	ldrpl	r3, [r0, #0]
 800e6be:	f043 0301 	orrpl.w	r3, r3, #1
 800e6c2:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800e6c4:	6803      	ldr	r3, [r0, #0]
 800e6c6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800e6ca:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800e6cc:	2321      	movs	r3, #33	; 0x21
 800e6ce:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800e6d2:	2340      	movs	r3, #64	; 0x40
 800e6d4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800e6d8:	2300      	movs	r3, #0
 800e6da:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 800e6dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e6de:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 800e6e0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800e6e4:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800e6e6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800e6e8:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800e6ea:	4b28      	ldr	r3, [pc, #160]	; (800e78c <HAL_I2C_Mem_Write+0x11c>)
 800e6ec:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800e6ee:	e9cd 6500 	strd	r6, r5, [sp]
 800e6f2:	464b      	mov	r3, r9
 800e6f4:	4642      	mov	r2, r8
 800e6f6:	4639      	mov	r1, r7
 800e6f8:	4620      	mov	r0, r4
 800e6fa:	f7ff fe1d 	bl	800e338 <I2C_RequestMemoryWrite>
 800e6fe:	2800      	cmp	r0, #0
 800e700:	d02a      	beq.n	800e758 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 800e702:	2001      	movs	r0, #1
 800e704:	e7c3      	b.n	800e68e <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800e706:	f7ff fdf1 	bl	800e2ec <I2C_WaitOnTXEFlagUntilTimeout>
 800e70a:	b140      	cbz	r0, 800e71e <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800e70c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800e70e:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800e710:	bf01      	itttt	eq
 800e712:	6822      	ldreq	r2, [r4, #0]
 800e714:	6813      	ldreq	r3, [r2, #0]
 800e716:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800e71a:	6013      	streq	r3, [r2, #0]
 800e71c:	e7f1      	b.n	800e702 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800e71e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e720:	6827      	ldr	r7, [r4, #0]
 800e722:	461a      	mov	r2, r3
 800e724:	f812 1b01 	ldrb.w	r1, [r2], #1
 800e728:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 800e72a:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800e72c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800e72e:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 800e730:	3a01      	subs	r2, #1
 800e732:	b292      	uxth	r2, r2
 800e734:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800e736:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 800e738:	1e48      	subs	r0, r1, #1
 800e73a:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800e73c:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 800e73e:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800e740:	d50a      	bpl.n	800e758 <HAL_I2C_Mem_Write+0xe8>
 800e742:	b148      	cbz	r0, 800e758 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800e744:	785a      	ldrb	r2, [r3, #1]
 800e746:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 800e748:	3302      	adds	r3, #2
 800e74a:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800e74c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800e74e:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 800e750:	3902      	subs	r1, #2
        hi2c->XferCount--;
 800e752:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 800e754:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800e756:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800e758:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800e75a:	462a      	mov	r2, r5
 800e75c:	4631      	mov	r1, r6
 800e75e:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 800e760:	2b00      	cmp	r3, #0
 800e762:	d1d0      	bne.n	800e706 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800e764:	f7ff fd3b 	bl	800e1de <I2C_WaitOnBTFFlagUntilTimeout>
 800e768:	2800      	cmp	r0, #0
 800e76a:	d1cf      	bne.n	800e70c <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800e76c:	6822      	ldr	r2, [r4, #0]
 800e76e:	6813      	ldr	r3, [r2, #0]
 800e770:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800e774:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800e776:	2320      	movs	r3, #32
 800e778:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800e77c:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800e780:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 800e784:	e783      	b.n	800e68e <HAL_I2C_Mem_Write+0x1e>
 800e786:	bf00      	nop
 800e788:	00100002 	.word	0x00100002
 800e78c:	ffff0000 	.word	0xffff0000

0800e790 <HAL_I2C_Mem_Read>:
{
 800e790:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e794:	4604      	mov	r4, r0
 800e796:	b087      	sub	sp, #28
 800e798:	4699      	mov	r9, r3
 800e79a:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800e79c:	460d      	mov	r5, r1
 800e79e:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800e7a0:	f7fe fccc 	bl	800d13c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800e7a4:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800e7a8:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800e7aa:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800e7ac:	d004      	beq.n	800e7b8 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 800e7ae:	2502      	movs	r5, #2
}
 800e7b0:	4628      	mov	r0, r5
 800e7b2:	b007      	add	sp, #28
 800e7b4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800e7b8:	9000      	str	r0, [sp, #0]
 800e7ba:	4976      	ldr	r1, [pc, #472]	; (800e994 <HAL_I2C_Mem_Read+0x204>)
 800e7bc:	2319      	movs	r3, #25
 800e7be:	2201      	movs	r2, #1
 800e7c0:	4620      	mov	r0, r4
 800e7c2:	f7ff fd61 	bl	800e288 <I2C_WaitOnFlagUntilTimeout>
 800e7c6:	2800      	cmp	r0, #0
 800e7c8:	d1f1      	bne.n	800e7ae <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 800e7ca:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800e7ce:	2b01      	cmp	r3, #1
 800e7d0:	d0ed      	beq.n	800e7ae <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800e7d2:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800e7d4:	2301      	movs	r3, #1
 800e7d6:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800e7da:	6803      	ldr	r3, [r0, #0]
 800e7dc:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800e7de:	bf5e      	ittt	pl
 800e7e0:	6803      	ldrpl	r3, [r0, #0]
 800e7e2:	f043 0301 	orrpl.w	r3, r3, #1
 800e7e6:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800e7e8:	6803      	ldr	r3, [r0, #0]
 800e7ea:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800e7ee:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800e7f0:	2322      	movs	r3, #34	; 0x22
 800e7f2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800e7f6:	2340      	movs	r3, #64	; 0x40
 800e7f8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800e7fc:	2300      	movs	r3, #0
 800e7fe:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 800e800:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e802:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 800e804:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800e808:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800e80a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800e80c:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800e80e:	4b62      	ldr	r3, [pc, #392]	; (800e998 <HAL_I2C_Mem_Read+0x208>)
 800e810:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800e812:	4629      	mov	r1, r5
 800e814:	e9cd 7600 	strd	r7, r6, [sp]
 800e818:	464b      	mov	r3, r9
 800e81a:	4642      	mov	r2, r8
 800e81c:	4620      	mov	r0, r4
 800e81e:	f7ff fde3 	bl	800e3e8 <I2C_RequestMemoryRead>
 800e822:	4605      	mov	r5, r0
 800e824:	b108      	cbz	r0, 800e82a <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 800e826:	2501      	movs	r5, #1
 800e828:	e7c2      	b.n	800e7b0 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 800e82a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800e82c:	6823      	ldr	r3, [r4, #0]
 800e82e:	b9b2      	cbnz	r2, 800e85e <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800e830:	9002      	str	r0, [sp, #8]
 800e832:	695a      	ldr	r2, [r3, #20]
 800e834:	9202      	str	r2, [sp, #8]
 800e836:	699a      	ldr	r2, [r3, #24]
 800e838:	9202      	str	r2, [sp, #8]
 800e83a:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800e83c:	681a      	ldr	r2, [r3, #0]
 800e83e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800e842:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800e844:	f8df 8154 	ldr.w	r8, [pc, #340]	; 800e99c <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 800e848:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800e84a:	2b00      	cmp	r3, #0
 800e84c:	d12c      	bne.n	800e8a8 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 800e84e:	2220      	movs	r2, #32
 800e850:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800e854:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800e858:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800e85c:	e7a8      	b.n	800e7b0 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 800e85e:	2a01      	cmp	r2, #1
 800e860:	d10a      	bne.n	800e878 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800e862:	681a      	ldr	r2, [r3, #0]
 800e864:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800e868:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800e86a:	9003      	str	r0, [sp, #12]
 800e86c:	695a      	ldr	r2, [r3, #20]
 800e86e:	9203      	str	r2, [sp, #12]
 800e870:	699a      	ldr	r2, [r3, #24]
 800e872:	9203      	str	r2, [sp, #12]
 800e874:	9a03      	ldr	r2, [sp, #12]
 800e876:	e7e1      	b.n	800e83c <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 800e878:	2a02      	cmp	r2, #2
 800e87a:	d10e      	bne.n	800e89a <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800e87c:	681a      	ldr	r2, [r3, #0]
 800e87e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800e882:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800e884:	681a      	ldr	r2, [r3, #0]
 800e886:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800e88a:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800e88c:	9004      	str	r0, [sp, #16]
 800e88e:	695a      	ldr	r2, [r3, #20]
 800e890:	9204      	str	r2, [sp, #16]
 800e892:	699b      	ldr	r3, [r3, #24]
 800e894:	9304      	str	r3, [sp, #16]
 800e896:	9b04      	ldr	r3, [sp, #16]
 800e898:	e7d4      	b.n	800e844 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800e89a:	9005      	str	r0, [sp, #20]
 800e89c:	695a      	ldr	r2, [r3, #20]
 800e89e:	9205      	str	r2, [sp, #20]
 800e8a0:	699b      	ldr	r3, [r3, #24]
 800e8a2:	9305      	str	r3, [sp, #20]
 800e8a4:	9b05      	ldr	r3, [sp, #20]
 800e8a6:	e7cd      	b.n	800e844 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 800e8a8:	2b03      	cmp	r3, #3
 800e8aa:	d856      	bhi.n	800e95a <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 800e8ac:	2b01      	cmp	r3, #1
 800e8ae:	d115      	bne.n	800e8dc <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800e8b0:	4632      	mov	r2, r6
 800e8b2:	4639      	mov	r1, r7
 800e8b4:	4620      	mov	r0, r4
 800e8b6:	f7ff fcb8 	bl	800e22a <I2C_WaitOnRXNEFlagUntilTimeout>
 800e8ba:	2800      	cmp	r0, #0
 800e8bc:	d1b3      	bne.n	800e826 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800e8be:	6823      	ldr	r3, [r4, #0]
 800e8c0:	691a      	ldr	r2, [r3, #16]
 800e8c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e8c4:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800e8c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e8c8:	3301      	adds	r3, #1
 800e8ca:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800e8cc:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800e8ce:	3b01      	subs	r3, #1
 800e8d0:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800e8d2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800e8d4:	3b01      	subs	r3, #1
 800e8d6:	b29b      	uxth	r3, r3
 800e8d8:	8563      	strh	r3, [r4, #42]	; 0x2a
 800e8da:	e7b5      	b.n	800e848 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 800e8dc:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800e8de:	9600      	str	r6, [sp, #0]
 800e8e0:	463b      	mov	r3, r7
 800e8e2:	f04f 0200 	mov.w	r2, #0
 800e8e6:	4641      	mov	r1, r8
 800e8e8:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 800e8ea:	d119      	bne.n	800e920 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800e8ec:	f7ff fccc 	bl	800e288 <I2C_WaitOnFlagUntilTimeout>
 800e8f0:	2800      	cmp	r0, #0
 800e8f2:	d198      	bne.n	800e826 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800e8f4:	6823      	ldr	r3, [r4, #0]
 800e8f6:	681a      	ldr	r2, [r3, #0]
 800e8f8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800e8fc:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800e8fe:	691a      	ldr	r2, [r3, #16]
 800e900:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e902:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800e904:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800e906:	1c53      	adds	r3, r2, #1
 800e908:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800e90a:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800e90c:	3b01      	subs	r3, #1
 800e90e:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800e910:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800e912:	3b01      	subs	r3, #1
 800e914:	b29b      	uxth	r3, r3
 800e916:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800e918:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800e91a:	691b      	ldr	r3, [r3, #16]
 800e91c:	7053      	strb	r3, [r2, #1]
 800e91e:	e7d2      	b.n	800e8c6 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800e920:	f7ff fcb2 	bl	800e288 <I2C_WaitOnFlagUntilTimeout>
 800e924:	2800      	cmp	r0, #0
 800e926:	f47f af7e 	bne.w	800e826 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800e92a:	6823      	ldr	r3, [r4, #0]
 800e92c:	681a      	ldr	r2, [r3, #0]
 800e92e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800e932:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800e934:	691a      	ldr	r2, [r3, #16]
 800e936:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e938:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800e93a:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800e93c:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 800e93e:	3301      	adds	r3, #1
 800e940:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800e942:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800e944:	3b01      	subs	r3, #1
 800e946:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800e948:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800e94a:	3b01      	subs	r3, #1
 800e94c:	b29b      	uxth	r3, r3
 800e94e:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800e950:	4602      	mov	r2, r0
 800e952:	463b      	mov	r3, r7
 800e954:	4641      	mov	r1, r8
 800e956:	4620      	mov	r0, r4
 800e958:	e7c8      	b.n	800e8ec <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800e95a:	4632      	mov	r2, r6
 800e95c:	4639      	mov	r1, r7
 800e95e:	4620      	mov	r0, r4
 800e960:	f7ff fc63 	bl	800e22a <I2C_WaitOnRXNEFlagUntilTimeout>
 800e964:	2800      	cmp	r0, #0
 800e966:	f47f af5e 	bne.w	800e826 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800e96a:	6823      	ldr	r3, [r4, #0]
 800e96c:	691a      	ldr	r2, [r3, #16]
 800e96e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e970:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 800e972:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800e974:	1c53      	adds	r3, r2, #1
 800e976:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 800e978:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800e97a:	3b01      	subs	r3, #1
 800e97c:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800e97e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800e980:	3b01      	subs	r3, #1
 800e982:	b29b      	uxth	r3, r3
 800e984:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800e986:	6823      	ldr	r3, [r4, #0]
 800e988:	6959      	ldr	r1, [r3, #20]
 800e98a:	0749      	lsls	r1, r1, #29
 800e98c:	f57f af5c 	bpl.w	800e848 <HAL_I2C_Mem_Read+0xb8>
 800e990:	e7c3      	b.n	800e91a <HAL_I2C_Mem_Read+0x18a>
 800e992:	bf00      	nop
 800e994:	00100002 	.word	0x00100002
 800e998:	ffff0000 	.word	0xffff0000
 800e99c:	00010004 	.word	0x00010004

0800e9a0 <HAL_I2C_GetState>:
  return hi2c->State;
 800e9a0:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
}
 800e9a4:	4770      	bx	lr

0800e9a6 <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 800e9a6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800e9aa:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800e9ac:	6804      	ldr	r4, [r0, #0]
 800e9ae:	684f      	ldr	r7, [r1, #4]
 800e9b0:	68e5      	ldr	r5, [r4, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800e9b2:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800e9b6:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800e9ba:	3284      	adds	r2, #132	; 0x84
 800e9bc:	18a3      	adds	r3, r4, r2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800e9be:	f10c 0601 	add.w	r6, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800e9c2:	6858      	ldr	r0, [r3, #4]
 800e9c4:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 800e9c8:	6058      	str	r0, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800e9ca:	68e0      	ldr	r0, [r4, #12]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800e9cc:	f3c5 450b 	ubfx	r5, r5, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800e9d0:	f3c0 400b 	ubfx	r0, r0, #16, #12
 800e9d4:	4430      	add	r0, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800e9d6:	443d      	add	r5, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800e9d8:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800e9dc:	6058      	str	r0, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800e9de:	68e0      	ldr	r0, [r4, #12]
 800e9e0:	68cd      	ldr	r5, [r1, #12]
 800e9e2:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800e9e6:	4405      	add	r5, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800e9e8:	6898      	ldr	r0, [r3, #8]
 800e9ea:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 800e9ee:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800e9f0:	68e6      	ldr	r6, [r4, #12]
 800e9f2:	6888      	ldr	r0, [r1, #8]
 800e9f4:	f3c6 060a 	ubfx	r6, r6, #0, #11
 800e9f8:	3001      	adds	r0, #1
 800e9fa:	4430      	add	r0, r6
 800e9fc:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800ea00:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800ea02:	6918      	ldr	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800ea04:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800ea06:	f020 0007 	bic.w	r0, r0, #7
 800ea0a:	6118      	str	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800ea0c:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800ea10:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800ea12:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800ea14:	f891 0032 	ldrb.w	r0, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800ea18:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800ea1c:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800ea20:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 800ea24:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 800ea28:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 800ea2c:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 800ea30:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800ea32:	6958      	ldr	r0, [r3, #20]
 800ea34:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 800ea38:	6158      	str	r0, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800ea3a:	6948      	ldr	r0, [r1, #20]
 800ea3c:	6158      	str	r0, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800ea3e:	69d8      	ldr	r0, [r3, #28]
 800ea40:	f420 60e0 	bic.w	r0, r0, #1792	; 0x700
 800ea44:	f020 0007 	bic.w	r0, r0, #7
 800ea48:	61d8      	str	r0, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800ea4a:	e9d1 5007 	ldrd	r5, r0, [r1, #28]
 800ea4e:	4305      	orrs	r5, r0
 800ea50:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800ea52:	6a98      	ldr	r0, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800ea54:	6a48      	ldr	r0, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800ea56:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800ea5a:	6298      	str	r0, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800ea5c:	b31e      	cbz	r6, 800eaa6 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800ea5e:	2e01      	cmp	r6, #1
 800ea60:	d023      	beq.n	800eaaa <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800ea62:	1eb0      	subs	r0, r6, #2
 800ea64:	2802      	cmp	r0, #2
 800ea66:	d922      	bls.n	800eaae <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 800ea68:	2e07      	cmp	r6, #7
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 800ea6a:	bf0c      	ite	eq
 800ea6c:	2002      	moveq	r0, #2
 800ea6e:	2001      	movne	r0, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800ea70:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800ea72:	f005 25e0 	and.w	r5, r5, #3758153728	; 0xe000e000
 800ea76:	62dd      	str	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800ea78:	6a8d      	ldr	r5, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800ea7a:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800ea7c:	eba7 070c 	sub.w	r7, r7, ip
 800ea80:	4345      	muls	r5, r0
 800ea82:	4378      	muls	r0, r7
 800ea84:	3003      	adds	r0, #3
 800ea86:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800ea8a:	62d8      	str	r0, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800ea8c:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800ea8e:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 800ea92:	f020 0007 	bic.w	r0, r0, #7
 800ea96:	6318      	str	r0, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800ea98:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800ea9a:	58a3      	ldr	r3, [r4, r2]
 800ea9c:	f043 0301 	orr.w	r3, r3, #1
 800eaa0:	50a3      	str	r3, [r4, r2]
}
 800eaa2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 800eaa6:	2004      	movs	r0, #4
 800eaa8:	e7e2      	b.n	800ea70 <LTDC_SetConfig+0xca>
    tmp = 3U;
 800eaaa:	2003      	movs	r0, #3
 800eaac:	e7e0      	b.n	800ea70 <LTDC_SetConfig+0xca>
    tmp = 2U;
 800eaae:	2002      	movs	r0, #2
 800eab0:	e7de      	b.n	800ea70 <LTDC_SetConfig+0xca>
	...

0800eab4 <HAL_LTDC_Init>:
{
 800eab4:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800eab6:	4604      	mov	r4, r0
 800eab8:	2800      	cmp	r0, #0
 800eaba:	d063      	beq.n	800eb84 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800eabc:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800eac0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800eac4:	b91b      	cbnz	r3, 800eace <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800eac6:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800eaca:	f7f3 f85b 	bl	8001b84 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800eace:	2302      	movs	r3, #2
 800ead0:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ead4:	6823      	ldr	r3, [r4, #0]
 800ead6:	699a      	ldr	r2, [r3, #24]
 800ead8:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 800eadc:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800eade:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800eae2:	4302      	orrs	r2, r0
 800eae4:	68e0      	ldr	r0, [r4, #12]
 800eae6:	6999      	ldr	r1, [r3, #24]
 800eae8:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800eaea:	6920      	ldr	r0, [r4, #16]
 800eaec:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800eaee:	430a      	orrs	r2, r1
 800eaf0:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800eaf2:	689a      	ldr	r2, [r3, #8]
 800eaf4:	4924      	ldr	r1, [pc, #144]	; (800eb88 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800eaf6:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800eaf8:	400a      	ands	r2, r1
 800eafa:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800eafc:	689a      	ldr	r2, [r3, #8]
 800eafe:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800eb02:	69a0      	ldr	r0, [r4, #24]
 800eb04:	4302      	orrs	r2, r0
 800eb06:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800eb08:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800eb0a:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800eb0c:	400a      	ands	r2, r1
 800eb0e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800eb10:	68da      	ldr	r2, [r3, #12]
 800eb12:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800eb16:	6a20      	ldr	r0, [r4, #32]
 800eb18:	4302      	orrs	r2, r0
 800eb1a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800eb1c:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800eb1e:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800eb20:	400a      	ands	r2, r1
 800eb22:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800eb24:	691a      	ldr	r2, [r3, #16]
 800eb26:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800eb2a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800eb2c:	4302      	orrs	r2, r0
 800eb2e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800eb30:	695a      	ldr	r2, [r3, #20]
 800eb32:	4011      	ands	r1, r2
 800eb34:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800eb36:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800eb38:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800eb3a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800eb3e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800eb40:	430a      	orrs	r2, r1
 800eb42:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800eb44:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800eb46:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800eb4a:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800eb4e:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 800eb52:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800eb54:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800eb56:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800eb5a:	430a      	orrs	r2, r1
 800eb5c:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800eb60:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800eb64:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800eb66:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800eb68:	f042 0206 	orr.w	r2, r2, #6
 800eb6c:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800eb6e:	699a      	ldr	r2, [r3, #24]
 800eb70:	f042 0201 	orr.w	r2, r2, #1
 800eb74:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800eb76:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800eb78:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800eb7a:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800eb7e:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 800eb82:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800eb84:	2001      	movs	r0, #1
 800eb86:	e7fc      	b.n	800eb82 <HAL_LTDC_Init+0xce>
 800eb88:	f000f800 	.word	0xf000f800

0800eb8c <HAL_LTDC_ErrorCallback>:
 800eb8c:	4770      	bx	lr

0800eb8e <HAL_LTDC_LineEventCallback>:
 800eb8e:	4770      	bx	lr

0800eb90 <HAL_LTDC_ReloadEventCallback>:
 800eb90:	4770      	bx	lr

0800eb92 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800eb92:	6803      	ldr	r3, [r0, #0]
{
 800eb94:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800eb96:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800eb98:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800eb9a:	0772      	lsls	r2, r6, #29
{
 800eb9c:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800eb9e:	d514      	bpl.n	800ebca <HAL_LTDC_IRQHandler+0x38>
 800eba0:	0769      	lsls	r1, r5, #29
 800eba2:	d512      	bpl.n	800ebca <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800eba4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800eba6:	f022 0204 	bic.w	r2, r2, #4
 800ebaa:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800ebac:	2204      	movs	r2, #4
 800ebae:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800ebb0:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800ebb4:	f043 0301 	orr.w	r3, r3, #1
 800ebb8:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800ebbc:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800ebbe:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800ebc2:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800ebc6:	f7ff ffe1 	bl	800eb8c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800ebca:	07b2      	lsls	r2, r6, #30
 800ebcc:	d516      	bpl.n	800ebfc <HAL_LTDC_IRQHandler+0x6a>
 800ebce:	07ab      	lsls	r3, r5, #30
 800ebd0:	d514      	bpl.n	800ebfc <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800ebd2:	6823      	ldr	r3, [r4, #0]
 800ebd4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800ebd6:	f022 0202 	bic.w	r2, r2, #2
 800ebda:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800ebdc:	2202      	movs	r2, #2
 800ebde:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800ebe0:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800ebe4:	4313      	orrs	r3, r2
 800ebe6:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800ebea:	2304      	movs	r3, #4
 800ebec:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800ebf0:	2300      	movs	r3, #0
 800ebf2:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800ebf6:	4620      	mov	r0, r4
 800ebf8:	f7ff ffc8 	bl	800eb8c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800ebfc:	07f0      	lsls	r0, r6, #31
 800ebfe:	d510      	bpl.n	800ec22 <HAL_LTDC_IRQHandler+0x90>
 800ec00:	07e9      	lsls	r1, r5, #31
 800ec02:	d50e      	bpl.n	800ec22 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800ec04:	6823      	ldr	r3, [r4, #0]
 800ec06:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800ec08:	f022 0201 	bic.w	r2, r2, #1
 800ec0c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800ec0e:	2201      	movs	r2, #1
 800ec10:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800ec12:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800ec14:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800ec18:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800ec1c:	4620      	mov	r0, r4
 800ec1e:	f7ff ffb6 	bl	800eb8e <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800ec22:	0732      	lsls	r2, r6, #28
 800ec24:	d511      	bpl.n	800ec4a <HAL_LTDC_IRQHandler+0xb8>
 800ec26:	072b      	lsls	r3, r5, #28
 800ec28:	d50f      	bpl.n	800ec4a <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800ec2a:	6823      	ldr	r3, [r4, #0]
 800ec2c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800ec2e:	f022 0208 	bic.w	r2, r2, #8
 800ec32:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800ec34:	2208      	movs	r2, #8
 800ec36:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 800ec38:	2301      	movs	r3, #1
 800ec3a:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800ec3e:	2300      	movs	r3, #0
 800ec40:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800ec44:	4620      	mov	r0, r4
 800ec46:	f7ff ffa3 	bl	800eb90 <HAL_LTDC_ReloadEventCallback>
}
 800ec4a:	bd70      	pop	{r4, r5, r6, pc}

0800ec4c <HAL_LTDC_ConfigLayer>:
{
 800ec4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800ec50:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800ec54:	2b01      	cmp	r3, #1
{
 800ec56:	4606      	mov	r6, r0
 800ec58:	460f      	mov	r7, r1
 800ec5a:	4694      	mov	ip, r2
 800ec5c:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800ec60:	d01f      	beq.n	800eca2 <HAL_LTDC_ConfigLayer+0x56>
 800ec62:	f04f 0801 	mov.w	r8, #1
 800ec66:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ec6a:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800ec6e:	2434      	movs	r4, #52	; 0x34
 800ec70:	460d      	mov	r5, r1
 800ec72:	fb04 6402 	mla	r4, r4, r2, r6
 800ec76:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800ec78:	3438      	adds	r4, #56	; 0x38
 800ec7a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ec7c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800ec7e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ec80:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800ec82:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ec84:	682b      	ldr	r3, [r5, #0]
 800ec86:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800ec88:	4630      	mov	r0, r6
 800ec8a:	4662      	mov	r2, ip
 800ec8c:	4639      	mov	r1, r7
 800ec8e:	f7ff fe8a 	bl	800e9a6 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800ec92:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 800ec94:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800ec96:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800ec9a:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800ec9e:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 800eca2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800eca8 <HAL_LTDC_SetPitch>:
{
 800eca8:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hltdc);
 800ecaa:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800ecae:	2b01      	cmp	r3, #1
 800ecb0:	f04f 0302 	mov.w	r3, #2
 800ecb4:	d02c      	beq.n	800ed10 <HAL_LTDC_SetPitch+0x68>
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 800ecb6:	2434      	movs	r4, #52	; 0x34
 800ecb8:	fb04 0402 	mla	r4, r4, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ecbc:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 800ecc0:	6ca4      	ldr	r4, [r4, #72]	; 0x48
  if (pixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800ecc2:	b33c      	cbz	r4, 800ed14 <HAL_LTDC_SetPitch+0x6c>
  else if (pixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800ecc4:	2c01      	cmp	r4, #1
 800ecc6:	d027      	beq.n	800ed18 <HAL_LTDC_SetPitch+0x70>
  else if ((pixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800ecc8:	1ea5      	subs	r5, r4, #2
 800ecca:	429d      	cmp	r5, r3
 800eccc:	d902      	bls.n	800ecd4 <HAL_LTDC_SetPitch+0x2c>
    tmp = 1U;
 800ecce:	2c07      	cmp	r4, #7
 800ecd0:	bf18      	it	ne
 800ecd2:	2301      	movne	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 800ecd4:	6804      	ldr	r4, [r0, #0]
 800ecd6:	01d2      	lsls	r2, r2, #7
 800ecd8:	3284      	adds	r2, #132	; 0x84
 800ecda:	4422      	add	r2, r4
  pitchUpdate = ((LinePitchInPixels * tmp) << 16U);
 800ecdc:	434b      	muls	r3, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 800ecde:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
 800ece0:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 800ece4:	f424 14f8 	bic.w	r4, r4, #2031616	; 0x1f0000
 800ece8:	62d4      	str	r4, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 800ecea:	4c0c      	ldr	r4, [pc, #48]	; (800ed1c <HAL_LTDC_SetPitch+0x74>)
 800ecec:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800ecee:	f045 0501 	orr.w	r5, r5, #1
 800ecf2:	6265      	str	r5, [r4, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR |= pitchUpdate;
 800ecf4:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
 800ecf6:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 800ecfa:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 800ecfc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ecfe:	f043 0301 	orr.w	r3, r3, #1
 800ed02:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 800ed04:	2301      	movs	r3, #1
 800ed06:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800ed0a:	2300      	movs	r3, #0
 800ed0c:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800ed10:	4618      	mov	r0, r3
 800ed12:	bd30      	pop	{r4, r5, pc}
    tmp = 4U;
 800ed14:	2304      	movs	r3, #4
 800ed16:	e7dd      	b.n	800ecd4 <HAL_LTDC_SetPitch+0x2c>
    tmp = 3U;
 800ed18:	2303      	movs	r3, #3
 800ed1a:	e7db      	b.n	800ecd4 <HAL_LTDC_SetPitch+0x2c>
 800ed1c:	40016800 	.word	0x40016800

0800ed20 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 800ed20:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 800ed22:	2300      	movs	r3, #0
 800ed24:	9301      	str	r3, [sp, #4]
 800ed26:	4b18      	ldr	r3, [pc, #96]	; (800ed88 <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800ed28:	4d18      	ldr	r5, [pc, #96]	; (800ed8c <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 800ed2a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800ed2c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800ed30:	641a      	str	r2, [r3, #64]	; 0x40
 800ed32:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ed34:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800ed38:	9301      	str	r3, [sp, #4]
 800ed3a:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 800ed3c:	4b14      	ldr	r3, [pc, #80]	; (800ed90 <HAL_PWREx_EnableOverDrive+0x70>)
 800ed3e:	2201      	movs	r2, #1
 800ed40:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 800ed42:	f7fe f9fb 	bl	800d13c <HAL_GetTick>
 800ed46:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800ed48:	686b      	ldr	r3, [r5, #4]
 800ed4a:	03da      	lsls	r2, r3, #15
 800ed4c:	d50b      	bpl.n	800ed66 <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800ed4e:	4b11      	ldr	r3, [pc, #68]	; (800ed94 <HAL_PWREx_EnableOverDrive+0x74>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800ed50:	4d0e      	ldr	r5, [pc, #56]	; (800ed8c <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800ed52:	2201      	movs	r2, #1
 800ed54:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 800ed56:	f7fe f9f1 	bl	800d13c <HAL_GetTick>
 800ed5a:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800ed5c:	686b      	ldr	r3, [r5, #4]
 800ed5e:	039b      	lsls	r3, r3, #14
 800ed60:	d50a      	bpl.n	800ed78 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 800ed62:	2000      	movs	r0, #0
 800ed64:	e006      	b.n	800ed74 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800ed66:	f7fe f9e9 	bl	800d13c <HAL_GetTick>
 800ed6a:	1b00      	subs	r0, r0, r4
 800ed6c:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800ed70:	d9ea      	bls.n	800ed48 <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 800ed72:	2003      	movs	r0, #3
}
 800ed74:	b003      	add	sp, #12
 800ed76:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800ed78:	f7fe f9e0 	bl	800d13c <HAL_GetTick>
 800ed7c:	1b00      	subs	r0, r0, r4
 800ed7e:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800ed82:	d9eb      	bls.n	800ed5c <HAL_PWREx_EnableOverDrive+0x3c>
 800ed84:	e7f5      	b.n	800ed72 <HAL_PWREx_EnableOverDrive+0x52>
 800ed86:	bf00      	nop
 800ed88:	40023800 	.word	0x40023800
 800ed8c:	40007000 	.word	0x40007000
 800ed90:	420e0040 	.word	0x420e0040
 800ed94:	420e0044 	.word	0x420e0044

0800ed98 <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 800ed98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 800ed9c:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 800ed9e:	b13e      	cbz	r6, 800edb0 <QSPI_Config+0x18>
 800eda0:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 800eda4:	bf1f      	itttt	ne
 800eda6:	6a8b      	ldrne	r3, [r1, #40]	; 0x28
 800eda8:	6804      	ldrne	r4, [r0, #0]
 800edaa:	f103 33ff 	addne.w	r3, r3, #4294967295
 800edae:	6123      	strne	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 800edb0:	f8d1 a018 	ldr.w	sl, [r1, #24]
 800edb4:	e9d1 7c07 	ldrd	r7, ip, [r1, #28]
 800edb8:	f1ba 0f00 	cmp.w	sl, #0
 800edbc:	d04e      	beq.n	800ee5c <QSPI_Config+0xc4>
  {
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 800edbe:	694b      	ldr	r3, [r1, #20]
 800edc0:	6805      	ldr	r5, [r0, #0]
 800edc2:	f8d1 8000 	ldr.w	r8, [r1]
 800edc6:	6b48      	ldr	r0, [r1, #52]	; 0x34
 800edc8:	ea46 0a0a 	orr.w	sl, r6, sl
 800edcc:	e9d1 490b 	ldrd	r4, r9, [r1, #44]	; 0x2c
 800edd0:	ea4f 4e83 	mov.w	lr, r3, lsl #18
 800edd4:	ea4a 0a02 	orr.w	sl, sl, r2
 800edd8:	f1bc 0f00 	cmp.w	ip, #0
 800eddc:	d026      	beq.n	800ee2c <QSPI_Config+0x94>
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800edde:	688b      	ldr	r3, [r1, #8]
 800ede0:	690e      	ldr	r6, [r1, #16]
 800ede2:	61eb      	str	r3, [r5, #28]

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800ede4:	ea4c 0c0a 	orr.w	ip, ip, sl
 800ede8:	b1a7      	cbz	r7, 800ee14 <QSPI_Config+0x7c>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800edea:	ea48 0307 	orr.w	r3, r8, r7
 800edee:	4323      	orrs	r3, r4
 800edf0:	ea43 0309 	orr.w	r3, r3, r9
 800edf4:	4303      	orrs	r3, r0
 800edf6:	68c8      	ldr	r0, [r1, #12]
 800edf8:	4333      	orrs	r3, r6
 800edfa:	4303      	orrs	r3, r0
 800edfc:	ea43 030e 	orr.w	r3, r3, lr
 800ee00:	ea43 030c 	orr.w	r3, r3, ip
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize | cmd->AddressMode |
                                         cmd->InstructionMode | cmd->Instruction | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800ee04:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800ee08:	616b      	str	r3, [r5, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800ee0a:	d001      	beq.n	800ee10 <QSPI_Config+0x78>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 800ee0c:	684b      	ldr	r3, [r1, #4]
 800ee0e:	61ab      	str	r3, [r5, #24]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 800ee10:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800ee14:	ea48 0304 	orr.w	r3, r8, r4
 800ee18:	ea43 0309 	orr.w	r3, r3, r9
 800ee1c:	4303      	orrs	r3, r0
 800ee1e:	4333      	orrs	r3, r6
 800ee20:	ea43 030e 	orr.w	r3, r3, lr
 800ee24:	ea43 030c 	orr.w	r3, r3, ip
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800ee28:	616b      	str	r3, [r5, #20]
 800ee2a:	e7f1      	b.n	800ee10 <QSPI_Config+0x78>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800ee2c:	b167      	cbz	r7, 800ee48 <QSPI_Config+0xb0>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800ee2e:	ea48 0307 	orr.w	r3, r8, r7
 800ee32:	4323      	orrs	r3, r4
 800ee34:	ea43 0309 	orr.w	r3, r3, r9
 800ee38:	4303      	orrs	r3, r0
 800ee3a:	68c8      	ldr	r0, [r1, #12]
 800ee3c:	4303      	orrs	r3, r0
 800ee3e:	ea43 030e 	orr.w	r3, r3, lr
 800ee42:	ea43 030a 	orr.w	r3, r3, sl
 800ee46:	e7dd      	b.n	800ee04 <QSPI_Config+0x6c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800ee48:	ea48 0304 	orr.w	r3, r8, r4
 800ee4c:	ea43 0309 	orr.w	r3, r3, r9
 800ee50:	4303      	orrs	r3, r0
 800ee52:	ea43 030e 	orr.w	r3, r3, lr
 800ee56:	ea43 030a 	orr.w	r3, r3, sl
 800ee5a:	e7e5      	b.n	800ee28 <QSPI_Config+0x90>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 800ee5c:	f1bc 0f00 	cmp.w	ip, #0
 800ee60:	d028      	beq.n	800eeb4 <QSPI_Config+0x11c>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800ee62:	6804      	ldr	r4, [r0, #0]
 800ee64:	688b      	ldr	r3, [r1, #8]
 800ee66:	61e3      	str	r3, [r4, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800ee68:	ea46 030c 	orr.w	r3, r6, ip
 800ee6c:	694e      	ldr	r6, [r1, #20]
 800ee6e:	6908      	ldr	r0, [r1, #16]
 800ee70:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 800ee74:	ea43 0502 	orr.w	r5, r3, r2
 800ee78:	04b6      	lsls	r6, r6, #18
 800ee7a:	e9d1 830b 	ldrd	r8, r3, [r1, #44]	; 0x2c
 800ee7e:	b187      	cbz	r7, 800eea2 <QSPI_Config+0x10a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800ee80:	4338      	orrs	r0, r7
 800ee82:	ea40 0008 	orr.w	r0, r0, r8
 800ee86:	4303      	orrs	r3, r0
 800ee88:	68c8      	ldr	r0, [r1, #12]
 800ee8a:	ea43 030c 	orr.w	r3, r3, ip
 800ee8e:	4303      	orrs	r3, r0
 800ee90:	4333      	orrs	r3, r6
 800ee92:	432b      	orrs	r3, r5
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800ee94:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800ee98:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800ee9a:	d0b9      	beq.n	800ee10 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 800ee9c:	684b      	ldr	r3, [r1, #4]
 800ee9e:	61a3      	str	r3, [r4, #24]
 800eea0:	e7b6      	b.n	800ee10 <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800eea2:	ea40 0008 	orr.w	r0, r0, r8
 800eea6:	4303      	orrs	r3, r0
 800eea8:	ea43 030c 	orr.w	r3, r3, ip
 800eeac:	4333      	orrs	r3, r6
 800eeae:	432b      	orrs	r3, r5
 800eeb0:	6163      	str	r3, [r4, #20]
 800eeb2:	e7ad      	b.n	800ee10 <QSPI_Config+0x78>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800eeb4:	b1af      	cbz	r7, 800eee2 <QSPI_Config+0x14a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800eeb6:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 800eeb8:	6800      	ldr	r0, [r0, #0]
 800eeba:	ea46 0307 	orr.w	r3, r6, r7
 800eebe:	4313      	orrs	r3, r2
 800eec0:	4323      	orrs	r3, r4
 800eec2:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 800eec4:	4323      	orrs	r3, r4
 800eec6:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 800eec8:	4323      	orrs	r3, r4
 800eeca:	68cc      	ldr	r4, [r1, #12]
 800eecc:	4323      	orrs	r3, r4
 800eece:	694c      	ldr	r4, [r1, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800eed0:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800eed4:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 800eed8:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800eeda:	d099      	beq.n	800ee10 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 800eedc:	684b      	ldr	r3, [r1, #4]
 800eede:	6183      	str	r3, [r0, #24]
 800eee0:	e796      	b.n	800ee10 <QSPI_Config+0x78>
        if (cmd->DataMode != QSPI_DATA_NONE)
 800eee2:	2e00      	cmp	r6, #0
 800eee4:	d094      	beq.n	800ee10 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800eee6:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 800eee8:	6800      	ldr	r0, [r0, #0]
 800eeea:	4333      	orrs	r3, r6
 800eeec:	6b0e      	ldr	r6, [r1, #48]	; 0x30
 800eeee:	431a      	orrs	r2, r3
 800eef0:	4332      	orrs	r2, r6
 800eef2:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 800eef4:	694b      	ldr	r3, [r1, #20]
 800eef6:	4332      	orrs	r2, r6
 800eef8:	ea42 4283 	orr.w	r2, r2, r3, lsl #18
 800eefc:	6142      	str	r2, [r0, #20]
}
 800eefe:	e787      	b.n	800ee10 <QSPI_Config+0x78>

0800ef00 <QSPI_WaitFlagStateUntilTimeout>:
{
 800ef00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ef04:	f8dd 8018 	ldr.w	r8, [sp, #24]
 800ef08:	4604      	mov	r4, r0
 800ef0a:	460e      	mov	r6, r1
 800ef0c:	4615      	mov	r5, r2
 800ef0e:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800ef10:	6822      	ldr	r2, [r4, #0]
 800ef12:	6893      	ldr	r3, [r2, #8]
 800ef14:	4233      	tst	r3, r6
 800ef16:	bf14      	ite	ne
 800ef18:	2301      	movne	r3, #1
 800ef1a:	2300      	moveq	r3, #0
 800ef1c:	42ab      	cmp	r3, r5
 800ef1e:	d101      	bne.n	800ef24 <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 800ef20:	2000      	movs	r0, #0
 800ef22:	e012      	b.n	800ef4a <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 800ef24:	f1b8 3fff 	cmp.w	r8, #4294967295
 800ef28:	d0f3      	beq.n	800ef12 <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ef2a:	f7fe f907 	bl	800d13c <HAL_GetTick>
 800ef2e:	1bc0      	subs	r0, r0, r7
 800ef30:	4540      	cmp	r0, r8
 800ef32:	d802      	bhi.n	800ef3a <QSPI_WaitFlagStateUntilTimeout+0x3a>
 800ef34:	f1b8 0f00 	cmp.w	r8, #0
 800ef38:	d1ea      	bne.n	800ef10 <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 800ef3a:	2304      	movs	r3, #4
 800ef3c:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 800ef40:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800ef42:	f043 0301 	orr.w	r3, r3, #1
 800ef46:	6463      	str	r3, [r4, #68]	; 0x44
 800ef48:	2001      	movs	r0, #1
}
 800ef4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800ef50 <HAL_QSPI_Init>:
{
 800ef50:	b530      	push	{r4, r5, lr}
 800ef52:	b085      	sub	sp, #20
 800ef54:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800ef56:	f7fe f8f1 	bl	800d13c <HAL_GetTick>
 800ef5a:	4603      	mov	r3, r0
  if(hqspi == NULL)
 800ef5c:	2c00      	cmp	r4, #0
 800ef5e:	d047      	beq.n	800eff0 <HAL_QSPI_Init+0xa0>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 800ef60:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800ef64:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 800ef68:	b94a      	cbnz	r2, 800ef7e <HAL_QSPI_Init+0x2e>
 800ef6a:	9003      	str	r0, [sp, #12]
    hqspi->Lock = HAL_UNLOCKED;
 800ef6c:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    HAL_QSPI_MspInit(hqspi);
 800ef70:	4620      	mov	r0, r4
 800ef72:	f7f2 fe3b 	bl	8001bec <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 800ef76:	f241 3288 	movw	r2, #5000	; 0x1388
 800ef7a:	9b03      	ldr	r3, [sp, #12]
 800ef7c:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 800ef7e:	6820      	ldr	r0, [r4, #0]
 800ef80:	68a1      	ldr	r1, [r4, #8]
 800ef82:	6802      	ldr	r2, [r0, #0]
 800ef84:	3901      	subs	r1, #1
 800ef86:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 800ef8a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800ef8e:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800ef90:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800ef92:	9200      	str	r2, [sp, #0]
 800ef94:	2120      	movs	r1, #32
 800ef96:	2200      	movs	r2, #0
 800ef98:	4620      	mov	r0, r4
 800ef9a:	f7ff ffb1 	bl	800ef00 <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 800ef9e:	bb10      	cbnz	r0, 800efe6 <HAL_QSPI_Init+0x96>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 800efa0:	69e5      	ldr	r5, [r4, #28]
 800efa2:	68e3      	ldr	r3, [r4, #12]
 800efa4:	6822      	ldr	r2, [r4, #0]
 800efa6:	432b      	orrs	r3, r5
 800efa8:	6a25      	ldr	r5, [r4, #32]
 800efaa:	6811      	ldr	r1, [r2, #0]
 800efac:	432b      	orrs	r3, r5
 800efae:	6865      	ldr	r5, [r4, #4]
 800efb0:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 800efb4:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 800efb8:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 800efbc:	430b      	orrs	r3, r1
 800efbe:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 800efc0:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 800efc4:	430b      	orrs	r3, r1
 800efc6:	6921      	ldr	r1, [r4, #16]
 800efc8:	6855      	ldr	r5, [r2, #4]
 800efca:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800efce:	4909      	ldr	r1, [pc, #36]	; (800eff4 <HAL_QSPI_Init+0xa4>)
 800efd0:	4029      	ands	r1, r5
 800efd2:	430b      	orrs	r3, r1
 800efd4:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 800efd6:	6813      	ldr	r3, [r2, #0]
 800efd8:	f043 0301 	orr.w	r3, r3, #1
 800efdc:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 800efde:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800efe0:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 800efe2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800efe6:	2300      	movs	r3, #0
 800efe8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800efec:	b005      	add	sp, #20
 800efee:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 800eff0:	2001      	movs	r0, #1
 800eff2:	e7fb      	b.n	800efec <HAL_QSPI_Init+0x9c>
 800eff4:	ffe0f8fe 	.word	0xffe0f8fe

0800eff8 <HAL_QSPI_DeInit>:
{
 800eff8:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 800effa:	4604      	mov	r4, r0
 800effc:	b168      	cbz	r0, 800f01a <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 800effe:	6802      	ldr	r2, [r0, #0]
 800f000:	6813      	ldr	r3, [r2, #0]
 800f002:	f023 0301 	bic.w	r3, r3, #1
 800f006:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 800f008:	f7f2 fe4a 	bl	8001ca0 <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800f00c:	2000      	movs	r0, #0
 800f00e:	6460      	str	r0, [r4, #68]	; 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 800f010:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800f014:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
}
 800f018:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800f01a:	2001      	movs	r0, #1
 800f01c:	e7fc      	b.n	800f018 <HAL_QSPI_DeInit+0x20>

0800f01e <HAL_QSPI_Command>:
{
 800f01e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f022:	4604      	mov	r4, r0
 800f024:	b085      	sub	sp, #20
 800f026:	4617      	mov	r7, r2
 800f028:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 800f02a:	f7fe f887 	bl	800d13c <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800f02e:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800f032:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800f034:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800f036:	d034      	beq.n	800f0a2 <HAL_QSPI_Command+0x84>
 800f038:	2201      	movs	r2, #1
 800f03a:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800f03e:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800f042:	2a01      	cmp	r2, #1
 800f044:	fa5f f882 	uxtb.w	r8, r2
 800f048:	f04f 0602 	mov.w	r6, #2
 800f04c:	d127      	bne.n	800f09e <HAL_QSPI_Command+0x80>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800f04e:	2200      	movs	r2, #0
 800f050:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800f052:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 800f054:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800f058:	9700      	str	r7, [sp, #0]
 800f05a:	2120      	movs	r1, #32
 800f05c:	4620      	mov	r0, r4
 800f05e:	f7ff ff4f 	bl	800ef00 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800f062:	4605      	mov	r5, r0
 800f064:	b9a0      	cbnz	r0, 800f090 <HAL_QSPI_Command+0x72>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800f066:	4602      	mov	r2, r0
 800f068:	4649      	mov	r1, r9
 800f06a:	4620      	mov	r0, r4
 800f06c:	f7ff fe94 	bl	800ed98 <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 800f070:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 800f074:	9b03      	ldr	r3, [sp, #12]
 800f076:	b94a      	cbnz	r2, 800f08c <HAL_QSPI_Command+0x6e>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800f078:	9700      	str	r7, [sp, #0]
 800f07a:	4642      	mov	r2, r8
 800f07c:	4631      	mov	r1, r6
 800f07e:	4620      	mov	r0, r4
 800f080:	f7ff ff3e 	bl	800ef00 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 800f084:	4605      	mov	r5, r0
 800f086:	b918      	cbnz	r0, 800f090 <HAL_QSPI_Command+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800f088:	6823      	ldr	r3, [r4, #0]
 800f08a:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 800f08c:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800f090:	2300      	movs	r3, #0
 800f092:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800f096:	4628      	mov	r0, r5
 800f098:	b005      	add	sp, #20
 800f09a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 800f09e:	4635      	mov	r5, r6
 800f0a0:	e7f6      	b.n	800f090 <HAL_QSPI_Command+0x72>
  __HAL_LOCK(hqspi);
 800f0a2:	2502      	movs	r5, #2
 800f0a4:	e7f7      	b.n	800f096 <HAL_QSPI_Command+0x78>

0800f0a6 <HAL_QSPI_AutoPolling>:
{
 800f0a6:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800f0aa:	4604      	mov	r4, r0
 800f0ac:	4615      	mov	r5, r2
 800f0ae:	461e      	mov	r6, r3
 800f0b0:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 800f0b2:	f7fe f843 	bl	800d13c <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800f0b6:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800f0ba:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800f0bc:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800f0be:	d040      	beq.n	800f142 <HAL_QSPI_AutoPolling+0x9c>
 800f0c0:	2201      	movs	r2, #1
 800f0c2:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800f0c6:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800f0ca:	2a01      	cmp	r2, #1
 800f0cc:	b2d7      	uxtb	r7, r2
 800f0ce:	d136      	bne.n	800f13e <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 800f0d0:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800f0d2:	2200      	movs	r2, #0
 800f0d4:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800f0d6:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 800f0d8:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800f0dc:	9600      	str	r6, [sp, #0]
 800f0de:	2120      	movs	r1, #32
 800f0e0:	4620      	mov	r0, r4
 800f0e2:	f7ff ff0d 	bl	800ef00 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800f0e6:	bb20      	cbnz	r0, 800f132 <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 800f0e8:	6821      	ldr	r1, [r4, #0]
 800f0ea:	682a      	ldr	r2, [r5, #0]
 800f0ec:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 800f0ee:	686a      	ldr	r2, [r5, #4]
 800f0f0:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 800f0f2:	68aa      	ldr	r2, [r5, #8]
 800f0f4:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 800f0f6:	680a      	ldr	r2, [r1, #0]
 800f0f8:	6928      	ldr	r0, [r5, #16]
 800f0fa:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 800f0fe:	4302      	orrs	r2, r0
 800f100:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 800f104:	600a      	str	r2, [r1, #0]
      cmd->NbData = cfg->StatusBytesSize;
 800f106:	68ea      	ldr	r2, [r5, #12]
 800f108:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 800f10c:	4641      	mov	r1, r8
 800f10e:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800f112:	4620      	mov	r0, r4
 800f114:	f7ff fe40 	bl	800ed98 <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 800f118:	9b03      	ldr	r3, [sp, #12]
 800f11a:	9600      	str	r6, [sp, #0]
 800f11c:	463a      	mov	r2, r7
 800f11e:	2108      	movs	r1, #8
 800f120:	4620      	mov	r0, r4
 800f122:	f7ff feed 	bl	800ef00 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800f126:	b920      	cbnz	r0, 800f132 <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 800f128:	6823      	ldr	r3, [r4, #0]
 800f12a:	2208      	movs	r2, #8
 800f12c:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 800f12e:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800f132:	2300      	movs	r3, #0
 800f134:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800f138:	b004      	add	sp, #16
 800f13a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 800f13e:	2002      	movs	r0, #2
 800f140:	e7f7      	b.n	800f132 <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 800f142:	2002      	movs	r0, #2
 800f144:	e7f8      	b.n	800f138 <HAL_QSPI_AutoPolling+0x92>

0800f146 <HAL_QSPI_MemoryMapped>:
{
 800f146:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f148:	4604      	mov	r4, r0
 800f14a:	4616      	mov	r6, r2
 800f14c:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800f14e:	f7fd fff5 	bl	800d13c <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800f152:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800f156:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800f158:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800f15a:	d032      	beq.n	800f1c2 <HAL_QSPI_MemoryMapped+0x7c>
 800f15c:	2201      	movs	r2, #1
 800f15e:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800f162:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800f166:	2a01      	cmp	r2, #1
 800f168:	d129      	bne.n	800f1be <HAL_QSPI_MemoryMapped+0x78>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800f16a:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 800f16c:	2182      	movs	r1, #130	; 0x82
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800f16e:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 800f170:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800f174:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 800f176:	9100      	str	r1, [sp, #0]
 800f178:	4620      	mov	r0, r4
 800f17a:	2120      	movs	r1, #32
 800f17c:	f7ff fec0 	bl	800ef00 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800f180:	4605      	mov	r5, r0
 800f182:	b9b0      	cbnz	r0, 800f1b2 <HAL_QSPI_MemoryMapped+0x6c>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 800f184:	6823      	ldr	r3, [r4, #0]
 800f186:	6872      	ldr	r2, [r6, #4]
 800f188:	6818      	ldr	r0, [r3, #0]
 800f18a:	f020 0008 	bic.w	r0, r0, #8
 800f18e:	4310      	orrs	r0, r2
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 800f190:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 800f192:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 800f194:	d107      	bne.n	800f1a6 <HAL_QSPI_MemoryMapped+0x60>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 800f196:	6832      	ldr	r2, [r6, #0]
 800f198:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 800f19a:	2210      	movs	r2, #16
 800f19c:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 800f19e:	681a      	ldr	r2, [r3, #0]
 800f1a0:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 800f1a4:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 800f1a6:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 800f1aa:	4639      	mov	r1, r7
 800f1ac:	4620      	mov	r0, r4
 800f1ae:	f7ff fdf3 	bl	800ed98 <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 800f1b2:	2300      	movs	r3, #0
 800f1b4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800f1b8:	4628      	mov	r0, r5
 800f1ba:	b003      	add	sp, #12
 800f1bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 800f1be:	2502      	movs	r5, #2
 800f1c0:	e7f7      	b.n	800f1b2 <HAL_QSPI_MemoryMapped+0x6c>
  __HAL_LOCK(hqspi);
 800f1c2:	2502      	movs	r5, #2
 800f1c4:	e7f8      	b.n	800f1b8 <HAL_QSPI_MemoryMapped+0x72>

0800f1c6 <HAL_QSPI_Abort>:
{
 800f1c6:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f1c8:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800f1ca:	f7fd ffb7 	bl	800d13c <HAL_GetTick>
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 800f1ce:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
  uint32_t tickstart = HAL_GetTick();
 800f1d2:	4603      	mov	r3, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 800f1d4:	f012 0002 	ands.w	r0, r2, #2
 800f1d8:	d036      	beq.n	800f248 <HAL_QSPI_Abort+0x82>
    __HAL_UNLOCK(hqspi);
 800f1da:	2200      	movs	r2, #0
 800f1dc:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 800f1e0:	6822      	ldr	r2, [r4, #0]
 800f1e2:	6811      	ldr	r1, [r2, #0]
 800f1e4:	0749      	lsls	r1, r1, #29
 800f1e6:	d50d      	bpl.n	800f204 <HAL_QSPI_Abort+0x3e>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 800f1e8:	6811      	ldr	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 800f1ea:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800f1ec:	9303      	str	r3, [sp, #12]
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 800f1ee:	f021 0104 	bic.w	r1, r1, #4
 800f1f2:	6011      	str	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 800f1f4:	f7fe f8f2 	bl	800d3dc <HAL_DMA_Abort>
      if(status != HAL_OK)
 800f1f8:	9b03      	ldr	r3, [sp, #12]
 800f1fa:	b118      	cbz	r0, 800f204 <HAL_QSPI_Abort+0x3e>
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 800f1fc:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800f1fe:	f042 0204 	orr.w	r2, r2, #4
 800f202:	6462      	str	r2, [r4, #68]	; 0x44
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 800f204:	6821      	ldr	r1, [r4, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 800f206:	9303      	str	r3, [sp, #12]
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 800f208:	680a      	ldr	r2, [r1, #0]
 800f20a:	f042 0202 	orr.w	r2, r2, #2
 800f20e:	600a      	str	r2, [r1, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 800f210:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800f212:	9200      	str	r2, [sp, #0]
 800f214:	2102      	movs	r1, #2
 800f216:	2201      	movs	r2, #1
 800f218:	4620      	mov	r0, r4
 800f21a:	f7ff fe71 	bl	800ef00 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800f21e:	9b03      	ldr	r3, [sp, #12]
 800f220:	b990      	cbnz	r0, 800f248 <HAL_QSPI_Abort+0x82>
      __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800f222:	6822      	ldr	r2, [r4, #0]
 800f224:	2102      	movs	r1, #2
 800f226:	60d1      	str	r1, [r2, #12]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800f228:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800f22a:	9200      	str	r2, [sp, #0]
 800f22c:	2120      	movs	r1, #32
 800f22e:	4602      	mov	r2, r0
 800f230:	4620      	mov	r0, r4
 800f232:	f7ff fe65 	bl	800ef00 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800f236:	b938      	cbnz	r0, 800f248 <HAL_QSPI_Abort+0x82>
      CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 800f238:	6822      	ldr	r2, [r4, #0]
 800f23a:	6953      	ldr	r3, [r2, #20]
 800f23c:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 800f240:	6153      	str	r3, [r2, #20]
      hqspi->State = HAL_QSPI_STATE_READY;
 800f242:	2301      	movs	r3, #1
 800f244:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 800f248:	b004      	add	sp, #16
 800f24a:	bd10      	pop	{r4, pc}

0800f24c <HAL_QSPI_Transmit>:
{
 800f24c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f24e:	4604      	mov	r4, r0
 800f250:	b085      	sub	sp, #20
 800f252:	4616      	mov	r6, r2
 800f254:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800f256:	f7fd ff71 	bl	800d13c <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800f25a:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 800f25e:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 800f260:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800f262:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800f264:	d04c      	beq.n	800f300 <HAL_QSPI_Transmit+0xb4>
 800f266:	2201      	movs	r2, #1
 800f268:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800f26c:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800f270:	2a01      	cmp	r2, #1
 800f272:	b2d0      	uxtb	r0, r2
 800f274:	d142      	bne.n	800f2fc <HAL_QSPI_Transmit+0xb0>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800f276:	2200      	movs	r2, #0
 800f278:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 800f27a:	2f00      	cmp	r7, #0
 800f27c:	d039      	beq.n	800f2f2 <HAL_QSPI_Transmit+0xa6>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 800f27e:	2212      	movs	r2, #18
 800f280:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 800f284:	692a      	ldr	r2, [r5, #16]
 800f286:	3201      	adds	r2, #1
 800f288:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800f28a:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 800f28c:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800f28e:	3201      	adds	r2, #1
 800f290:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800f292:	696a      	ldr	r2, [r5, #20]
 800f294:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 800f298:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 800f29a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f29c:	b9a2      	cbnz	r2, 800f2c8 <HAL_QSPI_Transmit+0x7c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800f29e:	9600      	str	r6, [sp, #0]
 800f2a0:	2201      	movs	r2, #1
 800f2a2:	2102      	movs	r1, #2
 800f2a4:	4620      	mov	r0, r4
 800f2a6:	f7ff fe2b 	bl	800ef00 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 800f2aa:	b928      	cbnz	r0, 800f2b8 <HAL_QSPI_Transmit+0x6c>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800f2ac:	6823      	ldr	r3, [r4, #0]
 800f2ae:	2202      	movs	r2, #2
 800f2b0:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 800f2b2:	4620      	mov	r0, r4
 800f2b4:	f7ff ff87 	bl	800f1c6 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 800f2b8:	2301      	movs	r3, #1
 800f2ba:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800f2be:	2300      	movs	r3, #0
 800f2c0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800f2c4:	b005      	add	sp, #20
 800f2c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 800f2c8:	9600      	str	r6, [sp, #0]
 800f2ca:	2201      	movs	r2, #1
 800f2cc:	2104      	movs	r1, #4
 800f2ce:	4620      	mov	r0, r4
 800f2d0:	9303      	str	r3, [sp, #12]
 800f2d2:	f7ff fe15 	bl	800ef00 <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 800f2d6:	2800      	cmp	r0, #0
 800f2d8:	d1ee      	bne.n	800f2b8 <HAL_QSPI_Transmit+0x6c>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 800f2da:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 800f2dc:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 800f2de:	7812      	ldrb	r2, [r2, #0]
 800f2e0:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 800f2e4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800f2e6:	3201      	adds	r2, #1
 800f2e8:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 800f2ea:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f2ec:	3a01      	subs	r2, #1
 800f2ee:	62e2      	str	r2, [r4, #44]	; 0x2c
 800f2f0:	e7d3      	b.n	800f29a <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 800f2f2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800f2f4:	f043 0308 	orr.w	r3, r3, #8
 800f2f8:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 800f2fa:	e7e0      	b.n	800f2be <HAL_QSPI_Transmit+0x72>
    status = HAL_BUSY;
 800f2fc:	2002      	movs	r0, #2
 800f2fe:	e7de      	b.n	800f2be <HAL_QSPI_Transmit+0x72>
  __HAL_LOCK(hqspi);
 800f300:	2002      	movs	r0, #2
 800f302:	e7df      	b.n	800f2c4 <HAL_QSPI_Transmit+0x78>

0800f304 <HAL_QSPI_Receive>:
{
 800f304:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f306:	4604      	mov	r4, r0
 800f308:	b085      	sub	sp, #20
 800f30a:	4616      	mov	r6, r2
 800f30c:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800f30e:	f7fd ff15 	bl	800d13c <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 800f312:	6825      	ldr	r5, [r4, #0]
 800f314:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 800f318:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800f31c:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800f31e:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800f320:	d050      	beq.n	800f3c4 <HAL_QSPI_Receive+0xc0>
 800f322:	2201      	movs	r2, #1
 800f324:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800f328:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800f32c:	2a01      	cmp	r2, #1
 800f32e:	b2d0      	uxtb	r0, r2
 800f330:	d146      	bne.n	800f3c0 <HAL_QSPI_Receive+0xbc>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800f332:	2200      	movs	r2, #0
 800f334:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 800f336:	2f00      	cmp	r7, #0
 800f338:	d03d      	beq.n	800f3b6 <HAL_QSPI_Receive+0xb2>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 800f33a:	2222      	movs	r2, #34	; 0x22
 800f33c:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 800f340:	692a      	ldr	r2, [r5, #16]
 800f342:	3201      	adds	r2, #1
 800f344:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800f346:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 800f348:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800f34a:	3201      	adds	r2, #1
 800f34c:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 800f34e:	6969      	ldr	r1, [r5, #20]
 800f350:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 800f354:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 800f358:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 800f35a:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 800f35e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800f360:	b9a2      	cbnz	r2, 800f38c <HAL_QSPI_Receive+0x88>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800f362:	9600      	str	r6, [sp, #0]
 800f364:	2201      	movs	r2, #1
 800f366:	2102      	movs	r1, #2
 800f368:	4620      	mov	r0, r4
 800f36a:	f7ff fdc9 	bl	800ef00 <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 800f36e:	b928      	cbnz	r0, 800f37c <HAL_QSPI_Receive+0x78>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800f370:	6823      	ldr	r3, [r4, #0]
 800f372:	2202      	movs	r2, #2
 800f374:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 800f376:	4620      	mov	r0, r4
 800f378:	f7ff ff25 	bl	800f1c6 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 800f37c:	2301      	movs	r3, #1
 800f37e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800f382:	2300      	movs	r3, #0
 800f384:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800f388:	b005      	add	sp, #20
 800f38a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 800f38c:	9600      	str	r6, [sp, #0]
 800f38e:	2201      	movs	r2, #1
 800f390:	2106      	movs	r1, #6
 800f392:	4620      	mov	r0, r4
 800f394:	9303      	str	r3, [sp, #12]
 800f396:	f7ff fdb3 	bl	800ef00 <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 800f39a:	2800      	cmp	r0, #0
 800f39c:	d1ee      	bne.n	800f37c <HAL_QSPI_Receive+0x78>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 800f39e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800f3a0:	f895 1020 	ldrb.w	r1, [r5, #32]
 800f3a4:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 800f3a6:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 800f3a8:	9b03      	ldr	r3, [sp, #12]
        hqspi->pRxBuffPtr++;
 800f3aa:	3201      	adds	r2, #1
 800f3ac:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 800f3ae:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800f3b0:	3a01      	subs	r2, #1
 800f3b2:	63a2      	str	r2, [r4, #56]	; 0x38
 800f3b4:	e7d3      	b.n	800f35e <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 800f3b6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800f3b8:	f043 0308 	orr.w	r3, r3, #8
 800f3bc:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 800f3be:	e7e0      	b.n	800f382 <HAL_QSPI_Receive+0x7e>
    status = HAL_BUSY;
 800f3c0:	2002      	movs	r0, #2
 800f3c2:	e7de      	b.n	800f382 <HAL_QSPI_Receive+0x7e>
  __HAL_LOCK(hqspi);
 800f3c4:	2002      	movs	r0, #2
 800f3c6:	e7df      	b.n	800f388 <HAL_QSPI_Receive+0x84>

0800f3c8 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800f3c8:	4913      	ldr	r1, [pc, #76]	; (800f418 <HAL_RCC_GetSysClockFreq+0x50>)
{
 800f3ca:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800f3cc:	688b      	ldr	r3, [r1, #8]
 800f3ce:	f003 030c 	and.w	r3, r3, #12
 800f3d2:	2b04      	cmp	r3, #4
 800f3d4:	d01c      	beq.n	800f410 <HAL_RCC_GetSysClockFreq+0x48>
 800f3d6:	2b08      	cmp	r3, #8
 800f3d8:	d11c      	bne.n	800f414 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800f3da:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800f3dc:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800f3de:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800f3e0:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800f3e4:	bf14      	ite	ne
 800f3e6:	480d      	ldrne	r0, [pc, #52]	; (800f41c <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800f3e8:	480d      	ldreq	r0, [pc, #52]	; (800f420 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800f3ea:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800f3ee:	bf18      	it	ne
 800f3f0:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800f3f2:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800f3f6:	fba1 0100 	umull	r0, r1, r1, r0
 800f3fa:	f7f0 ff51 	bl	80002a0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800f3fe:	4b06      	ldr	r3, [pc, #24]	; (800f418 <HAL_RCC_GetSysClockFreq+0x50>)
 800f400:	685b      	ldr	r3, [r3, #4]
 800f402:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800f406:	3301      	adds	r3, #1
 800f408:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800f40a:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800f40e:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800f410:	4802      	ldr	r0, [pc, #8]	; (800f41c <HAL_RCC_GetSysClockFreq+0x54>)
 800f412:	e7fc      	b.n	800f40e <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 800f414:	4802      	ldr	r0, [pc, #8]	; (800f420 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 800f416:	e7fa      	b.n	800f40e <HAL_RCC_GetSysClockFreq+0x46>
 800f418:	40023800 	.word	0x40023800
 800f41c:	007a1200 	.word	0x007a1200
 800f420:	00f42400 	.word	0x00f42400

0800f424 <HAL_RCC_ClockConfig>:
{
 800f424:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f428:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 800f42a:	4604      	mov	r4, r0
 800f42c:	b910      	cbnz	r0, 800f434 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 800f42e:	2001      	movs	r0, #1
}
 800f430:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800f434:	4b44      	ldr	r3, [pc, #272]	; (800f548 <HAL_RCC_ClockConfig+0x124>)
 800f436:	681a      	ldr	r2, [r3, #0]
 800f438:	f002 020f 	and.w	r2, r2, #15
 800f43c:	428a      	cmp	r2, r1
 800f43e:	d328      	bcc.n	800f492 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800f440:	6822      	ldr	r2, [r4, #0]
 800f442:	0797      	lsls	r7, r2, #30
 800f444:	d42d      	bmi.n	800f4a2 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800f446:	07d0      	lsls	r0, r2, #31
 800f448:	d441      	bmi.n	800f4ce <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800f44a:	4b3f      	ldr	r3, [pc, #252]	; (800f548 <HAL_RCC_ClockConfig+0x124>)
 800f44c:	681a      	ldr	r2, [r3, #0]
 800f44e:	f002 020f 	and.w	r2, r2, #15
 800f452:	42aa      	cmp	r2, r5
 800f454:	d866      	bhi.n	800f524 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800f456:	6822      	ldr	r2, [r4, #0]
 800f458:	0751      	lsls	r1, r2, #29
 800f45a:	d46c      	bmi.n	800f536 <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800f45c:	0713      	lsls	r3, r2, #28
 800f45e:	d507      	bpl.n	800f470 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800f460:	4a3a      	ldr	r2, [pc, #232]	; (800f54c <HAL_RCC_ClockConfig+0x128>)
 800f462:	6921      	ldr	r1, [r4, #16]
 800f464:	6893      	ldr	r3, [r2, #8]
 800f466:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800f46a:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800f46e:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800f470:	f7ff ffaa 	bl	800f3c8 <HAL_RCC_GetSysClockFreq>
 800f474:	4b35      	ldr	r3, [pc, #212]	; (800f54c <HAL_RCC_ClockConfig+0x128>)
 800f476:	4a36      	ldr	r2, [pc, #216]	; (800f550 <HAL_RCC_ClockConfig+0x12c>)
 800f478:	689b      	ldr	r3, [r3, #8]
 800f47a:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800f47e:	5cd3      	ldrb	r3, [r2, r3]
 800f480:	40d8      	lsrs	r0, r3
 800f482:	4b34      	ldr	r3, [pc, #208]	; (800f554 <HAL_RCC_ClockConfig+0x130>)
 800f484:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 800f486:	4b34      	ldr	r3, [pc, #208]	; (800f558 <HAL_RCC_ClockConfig+0x134>)
 800f488:	6818      	ldr	r0, [r3, #0]
 800f48a:	f7f2 fcdf 	bl	8001e4c <HAL_InitTick>
  return HAL_OK;
 800f48e:	2000      	movs	r0, #0
 800f490:	e7ce      	b.n	800f430 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800f492:	b2ca      	uxtb	r2, r1
 800f494:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800f496:	681b      	ldr	r3, [r3, #0]
 800f498:	f003 030f 	and.w	r3, r3, #15
 800f49c:	428b      	cmp	r3, r1
 800f49e:	d1c6      	bne.n	800f42e <HAL_RCC_ClockConfig+0xa>
 800f4a0:	e7ce      	b.n	800f440 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800f4a2:	4b2a      	ldr	r3, [pc, #168]	; (800f54c <HAL_RCC_ClockConfig+0x128>)
 800f4a4:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800f4a8:	bf1e      	ittt	ne
 800f4aa:	6899      	ldrne	r1, [r3, #8]
 800f4ac:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 800f4b0:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800f4b2:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800f4b4:	bf42      	ittt	mi
 800f4b6:	6899      	ldrmi	r1, [r3, #8]
 800f4b8:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 800f4bc:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800f4be:	4923      	ldr	r1, [pc, #140]	; (800f54c <HAL_RCC_ClockConfig+0x128>)
 800f4c0:	68a0      	ldr	r0, [r4, #8]
 800f4c2:	688b      	ldr	r3, [r1, #8]
 800f4c4:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800f4c8:	4303      	orrs	r3, r0
 800f4ca:	608b      	str	r3, [r1, #8]
 800f4cc:	e7bb      	b.n	800f446 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800f4ce:	6862      	ldr	r2, [r4, #4]
 800f4d0:	4b1e      	ldr	r3, [pc, #120]	; (800f54c <HAL_RCC_ClockConfig+0x128>)
 800f4d2:	2a01      	cmp	r2, #1
 800f4d4:	d11c      	bne.n	800f510 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800f4d6:	681b      	ldr	r3, [r3, #0]
 800f4d8:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800f4dc:	d0a7      	beq.n	800f42e <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800f4de:	4e1b      	ldr	r6, [pc, #108]	; (800f54c <HAL_RCC_ClockConfig+0x128>)
 800f4e0:	68b3      	ldr	r3, [r6, #8]
 800f4e2:	f023 0303 	bic.w	r3, r3, #3
 800f4e6:	4313      	orrs	r3, r2
 800f4e8:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800f4ea:	f7fd fe27 	bl	800d13c <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800f4ee:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800f4f2:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800f4f4:	68b3      	ldr	r3, [r6, #8]
 800f4f6:	6862      	ldr	r2, [r4, #4]
 800f4f8:	f003 030c 	and.w	r3, r3, #12
 800f4fc:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800f500:	d0a3      	beq.n	800f44a <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800f502:	f7fd fe1b 	bl	800d13c <HAL_GetTick>
 800f506:	1bc0      	subs	r0, r0, r7
 800f508:	4540      	cmp	r0, r8
 800f50a:	d9f3      	bls.n	800f4f4 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 800f50c:	2003      	movs	r0, #3
 800f50e:	e78f      	b.n	800f430 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800f510:	1e91      	subs	r1, r2, #2
 800f512:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800f514:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800f516:	d802      	bhi.n	800f51e <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800f518:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 800f51c:	e7de      	b.n	800f4dc <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800f51e:	f013 0f02 	tst.w	r3, #2
 800f522:	e7db      	b.n	800f4dc <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800f524:	b2ea      	uxtb	r2, r5
 800f526:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800f528:	681b      	ldr	r3, [r3, #0]
 800f52a:	f003 030f 	and.w	r3, r3, #15
 800f52e:	42ab      	cmp	r3, r5
 800f530:	f47f af7d 	bne.w	800f42e <HAL_RCC_ClockConfig+0xa>
 800f534:	e78f      	b.n	800f456 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800f536:	4905      	ldr	r1, [pc, #20]	; (800f54c <HAL_RCC_ClockConfig+0x128>)
 800f538:	68e0      	ldr	r0, [r4, #12]
 800f53a:	688b      	ldr	r3, [r1, #8]
 800f53c:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 800f540:	4303      	orrs	r3, r0
 800f542:	608b      	str	r3, [r1, #8]
 800f544:	e78a      	b.n	800f45c <HAL_RCC_ClockConfig+0x38>
 800f546:	bf00      	nop
 800f548:	40023c00 	.word	0x40023c00
 800f54c:	40023800 	.word	0x40023800
 800f550:	0802b1e1 	.word	0x0802b1e1
 800f554:	20000050 	.word	0x20000050
 800f558:	20000058 	.word	0x20000058

0800f55c <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800f55c:	4b04      	ldr	r3, [pc, #16]	; (800f570 <HAL_RCC_GetPCLK1Freq+0x14>)
 800f55e:	4a05      	ldr	r2, [pc, #20]	; (800f574 <HAL_RCC_GetPCLK1Freq+0x18>)
 800f560:	689b      	ldr	r3, [r3, #8]
 800f562:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800f566:	5cd3      	ldrb	r3, [r2, r3]
 800f568:	4a03      	ldr	r2, [pc, #12]	; (800f578 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800f56a:	6810      	ldr	r0, [r2, #0]
}
 800f56c:	40d8      	lsrs	r0, r3
 800f56e:	4770      	bx	lr
 800f570:	40023800 	.word	0x40023800
 800f574:	0802b1f1 	.word	0x0802b1f1
 800f578:	20000050 	.word	0x20000050

0800f57c <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800f57c:	230f      	movs	r3, #15
 800f57e:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800f580:	4b0b      	ldr	r3, [pc, #44]	; (800f5b0 <HAL_RCC_GetClockConfig+0x34>)
 800f582:	689a      	ldr	r2, [r3, #8]
 800f584:	f002 0203 	and.w	r2, r2, #3
 800f588:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800f58a:	689a      	ldr	r2, [r3, #8]
 800f58c:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800f590:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800f592:	689a      	ldr	r2, [r3, #8]
 800f594:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800f598:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800f59a:	689b      	ldr	r3, [r3, #8]
 800f59c:	08db      	lsrs	r3, r3, #3
 800f59e:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800f5a2:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800f5a4:	4b03      	ldr	r3, [pc, #12]	; (800f5b4 <HAL_RCC_GetClockConfig+0x38>)
 800f5a6:	681b      	ldr	r3, [r3, #0]
 800f5a8:	f003 030f 	and.w	r3, r3, #15
 800f5ac:	600b      	str	r3, [r1, #0]
}
 800f5ae:	4770      	bx	lr
 800f5b0:	40023800 	.word	0x40023800
 800f5b4:	40023c00 	.word	0x40023c00

0800f5b8 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800f5b8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*--------------------------- CLK48 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 800f5ba:	6802      	ldr	r2, [r0, #0]
{
 800f5bc:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 800f5be:	0610      	lsls	r0, r2, #24
 800f5c0:	d508      	bpl.n	800f5d4 <HAL_RCCEx_PeriphCLKConfig+0x1c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 clock source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 800f5c2:	49a8      	ldr	r1, [pc, #672]	; (800f864 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800f5c4:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800f5c6:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 800f5ca:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 800f5ce:	4303      	orrs	r3, r0
 800f5d0:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }
  /*--------------------------------------------------------------------------*/

  /*------------------------------ SDIO Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
 800f5d4:	05d1      	lsls	r1, r2, #23
 800f5d6:	d508      	bpl.n	800f5ea <HAL_RCCEx_PeriphCLKConfig+0x32>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));

    /* Configure the SDIO clock source */
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
 800f5d8:	49a2      	ldr	r1, [pc, #648]	; (800f864 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800f5da:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800f5dc:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 800f5e0:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800f5e4:	4303      	orrs	r3, r0
 800f5e6:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*------------------- Common configuration SAI/I2S -------------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800f5ea:	f012 0f43 	tst.w	r2, #67	; 0x43
 800f5ee:	d172      	bne.n	800f6d6 <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI, LTDC or CLK48 Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for these peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800f5f0:	6823      	ldr	r3, [r4, #0]
 800f5f2:	f013 0f0c 	tst.w	r3, #12
 800f5f6:	f000 80bf 	beq.w	800f778 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800f5fa:	4d9b      	ldr	r5, [pc, #620]	; (800f868 <HAL_RCCEx_PeriphCLKConfig+0x2b0>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800f5fc:	4e99      	ldr	r6, [pc, #612]	; (800f864 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    __HAL_RCC_PLLSAI_DISABLE();
 800f5fe:	2300      	movs	r3, #0
 800f600:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800f602:	f7fd fd9b 	bl	800d13c <HAL_GetTick>
 800f606:	4607      	mov	r7, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800f608:	6833      	ldr	r3, [r6, #0]
 800f60a:	009a      	lsls	r2, r3, #2
 800f60c:	f100 80f9 	bmi.w	800f802 <HAL_RCCEx_PeriphCLKConfig+0x24a>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800f610:	6822      	ldr	r2, [r4, #0]
 800f612:	0753      	lsls	r3, r2, #29
 800f614:	d51a      	bpl.n	800f64c <HAL_RCCEx_PeriphCLKConfig+0x94>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 800f616:	f8d6 3088 	ldr.w	r3, [r6, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800f61a:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, PeriphClkInit->PLLSAI.PLLSAIQ, pllsair);
 800f61e:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800f622:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800f626:	430b      	orrs	r3, r1
 800f628:	6921      	ldr	r1, [r4, #16]
 800f62a:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 800f62e:	69a1      	ldr	r1, [r4, #24]
 800f630:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800f634:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800f638:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800f63c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800f63e:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800f642:	3901      	subs	r1, #1
 800f644:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800f648:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800f64c:	0717      	lsls	r7, r2, #28
 800f64e:	d519      	bpl.n	800f684 <HAL_RCCEx_PeriphCLKConfig+0xcc>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 800f650:	4984      	ldr	r1, [pc, #528]	; (800f864 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800f652:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800f656:	f8d1 0088 	ldr.w	r0, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, pllsaiq, PeriphClkInit->PLLSAI.PLLSAIR);
 800f65a:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800f65e:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 800f662:	4303      	orrs	r3, r0
 800f664:	6920      	ldr	r0, [r4, #16]
 800f666:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800f66a:	69e0      	ldr	r0, [r4, #28]
 800f66c:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 800f670:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800f674:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 800f678:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800f67a:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800f67e:	4303      	orrs	r3, r0
 800f680:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*---------------------------- CLK48 configuration ------------------------*/
    /* Configure the PLLSAI when it is used as clock source for CLK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == (RCC_PERIPHCLK_CLK48)) &&
 800f684:	0616      	lsls	r6, r2, #24
 800f686:	d517      	bpl.n	800f6b8 <HAL_RCCEx_PeriphCLKConfig+0x100>
 800f688:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f68a:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800f68e:	d113      	bne.n	800f6b8 <HAL_RCCEx_PeriphCLKConfig+0x100>
       (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLSAIP))
    {
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));

      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800f690:	4974      	ldr	r1, [pc, #464]	; (800f864 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800f692:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800f696:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* CLK48_CLK(first level) = PLLSAI_VCO Output/PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIP, pllsaiq, pllsair);
 800f69a:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 800f69e:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 800f6a2:	4313      	orrs	r3, r2
 800f6a4:	6922      	ldr	r2, [r4, #16]
 800f6a6:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800f6aa:	6962      	ldr	r2, [r4, #20]
 800f6ac:	0852      	lsrs	r2, r2, #1
 800f6ae:	3a01      	subs	r2, #1
 800f6b0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800f6b4:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 800f6b8:	2301      	movs	r3, #1
 800f6ba:	602b      	str	r3, [r5, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 800f6bc:	f7fd fd3e 	bl	800d13c <HAL_GetTick>
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800f6c0:	4e68      	ldr	r6, [pc, #416]	; (800f864 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    tickstart = HAL_GetTick();
 800f6c2:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800f6c4:	6833      	ldr	r3, [r6, #0]
 800f6c6:	0098      	lsls	r0, r3, #2
 800f6c8:	d458      	bmi.n	800f77c <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800f6ca:	f7fd fd37 	bl	800d13c <HAL_GetTick>
 800f6ce:	1b40      	subs	r0, r0, r5
 800f6d0:	2802      	cmp	r0, #2
 800f6d2:	d9f7      	bls.n	800f6c4 <HAL_RCCEx_PeriphCLKConfig+0x10c>
 800f6d4:	e04d      	b.n	800f772 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    __HAL_RCC_PLLI2S_DISABLE();
 800f6d6:	4d65      	ldr	r5, [pc, #404]	; (800f86c <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800f6d8:	4f62      	ldr	r7, [pc, #392]	; (800f864 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    __HAL_RCC_PLLI2S_DISABLE();
 800f6da:	2300      	movs	r3, #0
 800f6dc:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800f6de:	f7fd fd2d 	bl	800d13c <HAL_GetTick>
 800f6e2:	4606      	mov	r6, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800f6e4:	683b      	ldr	r3, [r7, #0]
 800f6e6:	011b      	lsls	r3, r3, #4
 800f6e8:	d43e      	bmi.n	800f768 <HAL_RCCEx_PeriphCLKConfig+0x1b0>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800f6ea:	6821      	ldr	r1, [r4, #0]
 800f6ec:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800f6ee:	bf41      	itttt	mi
 800f6f0:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 800f6f4:	071b      	lslmi	r3, r3, #28
 800f6f6:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 800f6fa:	f8c7 3084 	strmi.w	r3, [r7, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800f6fe:	078a      	lsls	r2, r1, #30
 800f700:	d515      	bpl.n	800f72e <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800f702:	4a58      	ldr	r2, [pc, #352]	; (800f864 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800f704:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800f706:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800f70a:	6866      	ldr	r6, [r4, #4]
 800f70c:	061b      	lsls	r3, r3, #24
 800f70e:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800f712:	ea43 1386 	orr.w	r3, r3, r6, lsl #6
 800f716:	4303      	orrs	r3, r0
 800f718:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800f71c:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 800f720:	6a23      	ldr	r3, [r4, #32]
 800f722:	f020 001f 	bic.w	r0, r0, #31
 800f726:	3b01      	subs	r3, #1
 800f728:	4303      	orrs	r3, r0
 800f72a:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800f72e:	064b      	lsls	r3, r1, #25
 800f730:	d50a      	bpl.n	800f748 <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800f732:	68e3      	ldr	r3, [r4, #12]
 800f734:	6862      	ldr	r2, [r4, #4]
 800f736:	061b      	lsls	r3, r3, #24
 800f738:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800f73c:	68a2      	ldr	r2, [r4, #8]
 800f73e:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800f742:	4a48      	ldr	r2, [pc, #288]	; (800f864 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800f744:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800f748:	2301      	movs	r3, #1
 800f74a:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800f74c:	f7fd fcf6 	bl	800d13c <HAL_GetTick>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800f750:	4e44      	ldr	r6, [pc, #272]	; (800f864 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    tickstart = HAL_GetTick();
 800f752:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800f754:	6833      	ldr	r3, [r6, #0]
 800f756:	011f      	lsls	r7, r3, #4
 800f758:	f53f af4a 	bmi.w	800f5f0 <HAL_RCCEx_PeriphCLKConfig+0x38>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800f75c:	f7fd fcee 	bl	800d13c <HAL_GetTick>
 800f760:	1b40      	subs	r0, r0, r5
 800f762:	2802      	cmp	r0, #2
 800f764:	d9f6      	bls.n	800f754 <HAL_RCCEx_PeriphCLKConfig+0x19c>
 800f766:	e004      	b.n	800f772 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800f768:	f7fd fce8 	bl	800d13c <HAL_GetTick>
 800f76c:	1b80      	subs	r0, r0, r6
 800f76e:	2802      	cmp	r0, #2
 800f770:	d9b8      	bls.n	800f6e4 <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 800f772:	2003      	movs	r0, #3
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
}
 800f774:	b003      	add	sp, #12
 800f776:	bdf0      	pop	{r4, r5, r6, r7, pc}
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)             ||
 800f778:	0618      	lsls	r0, r3, #24
 800f77a:	d43d      	bmi.n	800f7f8 <HAL_RCCEx_PeriphCLKConfig+0x240>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800f77c:	6823      	ldr	r3, [r4, #0]
 800f77e:	0699      	lsls	r1, r3, #26
 800f780:	d530      	bpl.n	800f7e4 <HAL_RCCEx_PeriphCLKConfig+0x22c>
    __HAL_RCC_PWR_CLK_ENABLE();
 800f782:	2300      	movs	r3, #0
 800f784:	9301      	str	r3, [sp, #4]
 800f786:	4b37      	ldr	r3, [pc, #220]	; (800f864 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    PWR->CR |= PWR_CR_DBP;
 800f788:	4d39      	ldr	r5, [pc, #228]	; (800f870 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800f78a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800f78c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800f790:	641a      	str	r2, [r3, #64]	; 0x40
 800f792:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800f794:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800f798:	9301      	str	r3, [sp, #4]
 800f79a:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800f79c:	682b      	ldr	r3, [r5, #0]
 800f79e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800f7a2:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800f7a4:	f7fd fcca 	bl	800d13c <HAL_GetTick>
 800f7a8:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800f7aa:	682b      	ldr	r3, [r5, #0]
 800f7ac:	05d9      	lsls	r1, r3, #23
 800f7ae:	d52f      	bpl.n	800f810 <HAL_RCCEx_PeriphCLKConfig+0x258>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800f7b0:	4d2c      	ldr	r5, [pc, #176]	; (800f864 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800f7b2:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800f7b4:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 800f7b8:	d130      	bne.n	800f81c <HAL_RCCEx_PeriphCLKConfig+0x264>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800f7ba:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f7bc:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800f7c0:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800f7c4:	4a27      	ldr	r2, [pc, #156]	; (800f864 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800f7c6:	d148      	bne.n	800f85a <HAL_RCCEx_PeriphCLKConfig+0x2a2>
 800f7c8:	6891      	ldr	r1, [r2, #8]
 800f7ca:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 800f7ce:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800f7d2:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 800f7d6:	4301      	orrs	r1, r0
 800f7d8:	6091      	str	r1, [r2, #8]
 800f7da:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800f7dc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800f7e0:	430b      	orrs	r3, r1
 800f7e2:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800f7e4:	6820      	ldr	r0, [r4, #0]
 800f7e6:	f010 0010 	ands.w	r0, r0, #16
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800f7ea:	bf1f      	itttt	ne
 800f7ec:	4b21      	ldrne	r3, [pc, #132]	; (800f874 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 800f7ee:	f894 2030 	ldrbne.w	r2, [r4, #48]	; 0x30
 800f7f2:	601a      	strne	r2, [r3, #0]
  return HAL_OK;
 800f7f4:	2000      	movne	r0, #0
 800f7f6:	e7bd      	b.n	800f774 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
     ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)          &&
 800f7f8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f7fa:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800f7fe:	d1bd      	bne.n	800f77c <HAL_RCCEx_PeriphCLKConfig+0x1c4>
 800f800:	e6fb      	b.n	800f5fa <HAL_RCCEx_PeriphCLKConfig+0x42>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800f802:	f7fd fc9b 	bl	800d13c <HAL_GetTick>
 800f806:	1bc0      	subs	r0, r0, r7
 800f808:	2802      	cmp	r0, #2
 800f80a:	f67f aefd 	bls.w	800f608 <HAL_RCCEx_PeriphCLKConfig+0x50>
 800f80e:	e7b0      	b.n	800f772 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800f810:	f7fd fc94 	bl	800d13c <HAL_GetTick>
 800f814:	1b80      	subs	r0, r0, r6
 800f816:	2802      	cmp	r0, #2
 800f818:	d9c7      	bls.n	800f7aa <HAL_RCCEx_PeriphCLKConfig+0x1f2>
 800f81a:	e7aa      	b.n	800f772 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800f81c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f81e:	f402 7240 	and.w	r2, r2, #768	; 0x300
 800f822:	4293      	cmp	r3, r2
 800f824:	d0c9      	beq.n	800f7ba <HAL_RCCEx_PeriphCLKConfig+0x202>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800f826:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800f828:	4a13      	ldr	r2, [pc, #76]	; (800f878 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 800f82a:	2101      	movs	r1, #1
 800f82c:	6011      	str	r1, [r2, #0]
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800f82e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800f832:	2100      	movs	r1, #0
 800f834:	6011      	str	r1, [r2, #0]
      RCC->BDCR = tmpreg1;
 800f836:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800f838:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800f83a:	07da      	lsls	r2, r3, #31
 800f83c:	d5bd      	bpl.n	800f7ba <HAL_RCCEx_PeriphCLKConfig+0x202>
        tickstart = HAL_GetTick();
 800f83e:	f7fd fc7d 	bl	800d13c <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800f842:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800f846:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800f848:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800f84a:	079b      	lsls	r3, r3, #30
 800f84c:	d4b5      	bmi.n	800f7ba <HAL_RCCEx_PeriphCLKConfig+0x202>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800f84e:	f7fd fc75 	bl	800d13c <HAL_GetTick>
 800f852:	1b80      	subs	r0, r0, r6
 800f854:	42b8      	cmp	r0, r7
 800f856:	d9f7      	bls.n	800f848 <HAL_RCCEx_PeriphCLKConfig+0x290>
 800f858:	e78b      	b.n	800f772 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800f85a:	6891      	ldr	r1, [r2, #8]
 800f85c:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800f860:	e7ba      	b.n	800f7d8 <HAL_RCCEx_PeriphCLKConfig+0x220>
 800f862:	bf00      	nop
 800f864:	40023800 	.word	0x40023800
 800f868:	42470070 	.word	0x42470070
 800f86c:	42470068 	.word	0x42470068
 800f870:	40007000 	.word	0x40007000
 800f874:	424711e0 	.word	0x424711e0
 800f878:	42470e40 	.word	0x42470e40

0800f87c <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800f87c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800f880:	4604      	mov	r4, r0
 800f882:	b340      	cbz	r0, 800f8d6 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800f884:	6803      	ldr	r3, [r0, #0]
 800f886:	07dd      	lsls	r5, r3, #31
 800f888:	d410      	bmi.n	800f8ac <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800f88a:	6823      	ldr	r3, [r4, #0]
 800f88c:	0798      	lsls	r0, r3, #30
 800f88e:	d45e      	bmi.n	800f94e <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800f890:	6823      	ldr	r3, [r4, #0]
 800f892:	071a      	lsls	r2, r3, #28
 800f894:	f100 80a0 	bmi.w	800f9d8 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800f898:	6823      	ldr	r3, [r4, #0]
 800f89a:	075b      	lsls	r3, r3, #29
 800f89c:	f100 80be 	bmi.w	800fa1c <HAL_RCC_OscConfig+0x1a0>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800f8a0:	69a0      	ldr	r0, [r4, #24]
 800f8a2:	2800      	cmp	r0, #0
 800f8a4:	f040 811f 	bne.w	800fae6 <HAL_RCC_OscConfig+0x26a>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800f8a8:	2000      	movs	r0, #0
 800f8aa:	e02b      	b.n	800f904 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 800f8ac:	4ba7      	ldr	r3, [pc, #668]	; (800fb4c <HAL_RCC_OscConfig+0x2d0>)
 800f8ae:	689a      	ldr	r2, [r3, #8]
 800f8b0:	f002 020c 	and.w	r2, r2, #12
 800f8b4:	2a04      	cmp	r2, #4
 800f8b6:	d007      	beq.n	800f8c8 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800f8b8:	689a      	ldr	r2, [r3, #8]
 800f8ba:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 800f8be:	2a08      	cmp	r2, #8
 800f8c0:	d10b      	bne.n	800f8da <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800f8c2:	685a      	ldr	r2, [r3, #4]
 800f8c4:	0251      	lsls	r1, r2, #9
 800f8c6:	d508      	bpl.n	800f8da <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800f8c8:	4ba0      	ldr	r3, [pc, #640]	; (800fb4c <HAL_RCC_OscConfig+0x2d0>)
 800f8ca:	681b      	ldr	r3, [r3, #0]
 800f8cc:	039a      	lsls	r2, r3, #14
 800f8ce:	d5dc      	bpl.n	800f88a <HAL_RCC_OscConfig+0xe>
 800f8d0:	6863      	ldr	r3, [r4, #4]
 800f8d2:	2b00      	cmp	r3, #0
 800f8d4:	d1d9      	bne.n	800f88a <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 800f8d6:	2001      	movs	r0, #1
 800f8d8:	e014      	b.n	800f904 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800f8da:	6862      	ldr	r2, [r4, #4]
 800f8dc:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 800f8e0:	d113      	bne.n	800f90a <HAL_RCC_OscConfig+0x8e>
 800f8e2:	681a      	ldr	r2, [r3, #0]
 800f8e4:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800f8e8:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800f8ea:	f7fd fc27 	bl	800d13c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800f8ee:	4e97      	ldr	r6, [pc, #604]	; (800fb4c <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 800f8f0:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800f8f2:	6833      	ldr	r3, [r6, #0]
 800f8f4:	039b      	lsls	r3, r3, #14
 800f8f6:	d4c8      	bmi.n	800f88a <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800f8f8:	f7fd fc20 	bl	800d13c <HAL_GetTick>
 800f8fc:	1b40      	subs	r0, r0, r5
 800f8fe:	2864      	cmp	r0, #100	; 0x64
 800f900:	d9f7      	bls.n	800f8f2 <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 800f902:	2003      	movs	r0, #3
}
 800f904:	b002      	add	sp, #8
 800f906:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800f90a:	4d90      	ldr	r5, [pc, #576]	; (800fb4c <HAL_RCC_OscConfig+0x2d0>)
 800f90c:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 800f910:	682b      	ldr	r3, [r5, #0]
 800f912:	d107      	bne.n	800f924 <HAL_RCC_OscConfig+0xa8>
 800f914:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800f918:	602b      	str	r3, [r5, #0]
 800f91a:	682b      	ldr	r3, [r5, #0]
 800f91c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800f920:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800f922:	e7e2      	b.n	800f8ea <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800f924:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800f928:	602b      	str	r3, [r5, #0]
 800f92a:	682b      	ldr	r3, [r5, #0]
 800f92c:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800f930:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800f932:	2a00      	cmp	r2, #0
 800f934:	d1d9      	bne.n	800f8ea <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 800f936:	f7fd fc01 	bl	800d13c <HAL_GetTick>
 800f93a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800f93c:	682b      	ldr	r3, [r5, #0]
 800f93e:	039f      	lsls	r7, r3, #14
 800f940:	d5a3      	bpl.n	800f88a <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800f942:	f7fd fbfb 	bl	800d13c <HAL_GetTick>
 800f946:	1b80      	subs	r0, r0, r6
 800f948:	2864      	cmp	r0, #100	; 0x64
 800f94a:	d9f7      	bls.n	800f93c <HAL_RCC_OscConfig+0xc0>
 800f94c:	e7d9      	b.n	800f902 <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 800f94e:	4b7f      	ldr	r3, [pc, #508]	; (800fb4c <HAL_RCC_OscConfig+0x2d0>)
 800f950:	689a      	ldr	r2, [r3, #8]
 800f952:	f012 0f0c 	tst.w	r2, #12
 800f956:	d007      	beq.n	800f968 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800f958:	689a      	ldr	r2, [r3, #8]
 800f95a:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 800f95e:	2a08      	cmp	r2, #8
 800f960:	d111      	bne.n	800f986 <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800f962:	685b      	ldr	r3, [r3, #4]
 800f964:	025e      	lsls	r6, r3, #9
 800f966:	d40e      	bmi.n	800f986 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800f968:	4b78      	ldr	r3, [pc, #480]	; (800fb4c <HAL_RCC_OscConfig+0x2d0>)
 800f96a:	681a      	ldr	r2, [r3, #0]
 800f96c:	0795      	lsls	r5, r2, #30
 800f96e:	d502      	bpl.n	800f976 <HAL_RCC_OscConfig+0xfa>
 800f970:	68e2      	ldr	r2, [r4, #12]
 800f972:	2a01      	cmp	r2, #1
 800f974:	d1af      	bne.n	800f8d6 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800f976:	681a      	ldr	r2, [r3, #0]
 800f978:	6921      	ldr	r1, [r4, #16]
 800f97a:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800f97e:	ea42 02c1 	orr.w	r2, r2, r1, lsl #3
 800f982:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800f984:	e784      	b.n	800f890 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800f986:	68e2      	ldr	r2, [r4, #12]
 800f988:	4b71      	ldr	r3, [pc, #452]	; (800fb50 <HAL_RCC_OscConfig+0x2d4>)
 800f98a:	b1b2      	cbz	r2, 800f9ba <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 800f98c:	2201      	movs	r2, #1
 800f98e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800f990:	f7fd fbd4 	bl	800d13c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800f994:	4d6d      	ldr	r5, [pc, #436]	; (800fb4c <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 800f996:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800f998:	682b      	ldr	r3, [r5, #0]
 800f99a:	0798      	lsls	r0, r3, #30
 800f99c:	d507      	bpl.n	800f9ae <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800f99e:	682b      	ldr	r3, [r5, #0]
 800f9a0:	6922      	ldr	r2, [r4, #16]
 800f9a2:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800f9a6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800f9aa:	602b      	str	r3, [r5, #0]
 800f9ac:	e770      	b.n	800f890 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800f9ae:	f7fd fbc5 	bl	800d13c <HAL_GetTick>
 800f9b2:	1b80      	subs	r0, r0, r6
 800f9b4:	2802      	cmp	r0, #2
 800f9b6:	d9ef      	bls.n	800f998 <HAL_RCC_OscConfig+0x11c>
 800f9b8:	e7a3      	b.n	800f902 <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 800f9ba:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800f9bc:	f7fd fbbe 	bl	800d13c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800f9c0:	4e62      	ldr	r6, [pc, #392]	; (800fb4c <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 800f9c2:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800f9c4:	6833      	ldr	r3, [r6, #0]
 800f9c6:	0799      	lsls	r1, r3, #30
 800f9c8:	f57f af62 	bpl.w	800f890 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800f9cc:	f7fd fbb6 	bl	800d13c <HAL_GetTick>
 800f9d0:	1b40      	subs	r0, r0, r5
 800f9d2:	2802      	cmp	r0, #2
 800f9d4:	d9f6      	bls.n	800f9c4 <HAL_RCC_OscConfig+0x148>
 800f9d6:	e794      	b.n	800f902 <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800f9d8:	6962      	ldr	r2, [r4, #20]
 800f9da:	4b5e      	ldr	r3, [pc, #376]	; (800fb54 <HAL_RCC_OscConfig+0x2d8>)
 800f9dc:	b17a      	cbz	r2, 800f9fe <HAL_RCC_OscConfig+0x182>
      __HAL_RCC_LSI_ENABLE();
 800f9de:	2201      	movs	r2, #1
 800f9e0:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 800f9e2:	f7fd fbab 	bl	800d13c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800f9e6:	4e59      	ldr	r6, [pc, #356]	; (800fb4c <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 800f9e8:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800f9ea:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800f9ec:	079f      	lsls	r7, r3, #30
 800f9ee:	f53f af53 	bmi.w	800f898 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800f9f2:	f7fd fba3 	bl	800d13c <HAL_GetTick>
 800f9f6:	1b40      	subs	r0, r0, r5
 800f9f8:	2802      	cmp	r0, #2
 800f9fa:	d9f6      	bls.n	800f9ea <HAL_RCC_OscConfig+0x16e>
 800f9fc:	e781      	b.n	800f902 <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 800f9fe:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 800fa00:	f7fd fb9c 	bl	800d13c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800fa04:	4e51      	ldr	r6, [pc, #324]	; (800fb4c <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 800fa06:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800fa08:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800fa0a:	0798      	lsls	r0, r3, #30
 800fa0c:	f57f af44 	bpl.w	800f898 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800fa10:	f7fd fb94 	bl	800d13c <HAL_GetTick>
 800fa14:	1b40      	subs	r0, r0, r5
 800fa16:	2802      	cmp	r0, #2
 800fa18:	d9f6      	bls.n	800fa08 <HAL_RCC_OscConfig+0x18c>
 800fa1a:	e772      	b.n	800f902 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800fa1c:	4b4b      	ldr	r3, [pc, #300]	; (800fb4c <HAL_RCC_OscConfig+0x2d0>)
 800fa1e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800fa20:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 800fa24:	d128      	bne.n	800fa78 <HAL_RCC_OscConfig+0x1fc>
      __HAL_RCC_PWR_CLK_ENABLE();
 800fa26:	9201      	str	r2, [sp, #4]
 800fa28:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800fa2a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800fa2e:	641a      	str	r2, [r3, #64]	; 0x40
 800fa30:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800fa32:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800fa36:	9301      	str	r3, [sp, #4]
 800fa38:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800fa3a:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800fa3c:	4d46      	ldr	r5, [pc, #280]	; (800fb58 <HAL_RCC_OscConfig+0x2dc>)
 800fa3e:	682b      	ldr	r3, [r5, #0]
 800fa40:	05d9      	lsls	r1, r3, #23
 800fa42:	d51b      	bpl.n	800fa7c <HAL_RCC_OscConfig+0x200>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800fa44:	68a3      	ldr	r3, [r4, #8]
 800fa46:	4d41      	ldr	r5, [pc, #260]	; (800fb4c <HAL_RCC_OscConfig+0x2d0>)
 800fa48:	2b01      	cmp	r3, #1
 800fa4a:	d127      	bne.n	800fa9c <HAL_RCC_OscConfig+0x220>
 800fa4c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800fa4e:	f043 0301 	orr.w	r3, r3, #1
 800fa52:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 800fa54:	f7fd fb72 	bl	800d13c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800fa58:	4e3c      	ldr	r6, [pc, #240]	; (800fb4c <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 800fa5a:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800fa5c:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800fa60:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800fa62:	079b      	lsls	r3, r3, #30
 800fa64:	d539      	bpl.n	800fada <HAL_RCC_OscConfig+0x25e>
    if(pwrclkchanged == SET)
 800fa66:	2f00      	cmp	r7, #0
 800fa68:	f43f af1a 	beq.w	800f8a0 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 800fa6c:	4a37      	ldr	r2, [pc, #220]	; (800fb4c <HAL_RCC_OscConfig+0x2d0>)
 800fa6e:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800fa70:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800fa74:	6413      	str	r3, [r2, #64]	; 0x40
 800fa76:	e713      	b.n	800f8a0 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 800fa78:	2700      	movs	r7, #0
 800fa7a:	e7df      	b.n	800fa3c <HAL_RCC_OscConfig+0x1c0>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800fa7c:	682b      	ldr	r3, [r5, #0]
 800fa7e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800fa82:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800fa84:	f7fd fb5a 	bl	800d13c <HAL_GetTick>
 800fa88:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800fa8a:	682b      	ldr	r3, [r5, #0]
 800fa8c:	05da      	lsls	r2, r3, #23
 800fa8e:	d4d9      	bmi.n	800fa44 <HAL_RCC_OscConfig+0x1c8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800fa90:	f7fd fb54 	bl	800d13c <HAL_GetTick>
 800fa94:	1b80      	subs	r0, r0, r6
 800fa96:	2802      	cmp	r0, #2
 800fa98:	d9f7      	bls.n	800fa8a <HAL_RCC_OscConfig+0x20e>
 800fa9a:	e732      	b.n	800f902 <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800fa9c:	2b05      	cmp	r3, #5
 800fa9e:	d104      	bne.n	800faaa <HAL_RCC_OscConfig+0x22e>
 800faa0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800faa2:	f043 0304 	orr.w	r3, r3, #4
 800faa6:	672b      	str	r3, [r5, #112]	; 0x70
 800faa8:	e7d0      	b.n	800fa4c <HAL_RCC_OscConfig+0x1d0>
 800faaa:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800faac:	f022 0201 	bic.w	r2, r2, #1
 800fab0:	672a      	str	r2, [r5, #112]	; 0x70
 800fab2:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800fab4:	f022 0204 	bic.w	r2, r2, #4
 800fab8:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800faba:	2b00      	cmp	r3, #0
 800fabc:	d1ca      	bne.n	800fa54 <HAL_RCC_OscConfig+0x1d8>
      tickstart = HAL_GetTick();
 800fabe:	f7fd fb3d 	bl	800d13c <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800fac2:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800fac6:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800fac8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800faca:	0798      	lsls	r0, r3, #30
 800facc:	d5cb      	bpl.n	800fa66 <HAL_RCC_OscConfig+0x1ea>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800face:	f7fd fb35 	bl	800d13c <HAL_GetTick>
 800fad2:	1b80      	subs	r0, r0, r6
 800fad4:	4540      	cmp	r0, r8
 800fad6:	d9f7      	bls.n	800fac8 <HAL_RCC_OscConfig+0x24c>
 800fad8:	e713      	b.n	800f902 <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800fada:	f7fd fb2f 	bl	800d13c <HAL_GetTick>
 800fade:	1b40      	subs	r0, r0, r5
 800fae0:	4540      	cmp	r0, r8
 800fae2:	d9bd      	bls.n	800fa60 <HAL_RCC_OscConfig+0x1e4>
 800fae4:	e70d      	b.n	800f902 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800fae6:	4d19      	ldr	r5, [pc, #100]	; (800fb4c <HAL_RCC_OscConfig+0x2d0>)
 800fae8:	68ab      	ldr	r3, [r5, #8]
 800faea:	f003 030c 	and.w	r3, r3, #12
 800faee:	2b08      	cmp	r3, #8
 800faf0:	d049      	beq.n	800fb86 <HAL_RCC_OscConfig+0x30a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800faf2:	4e1a      	ldr	r6, [pc, #104]	; (800fb5c <HAL_RCC_OscConfig+0x2e0>)
 800faf4:	2300      	movs	r3, #0
 800faf6:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800faf8:	6033      	str	r3, [r6, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800fafa:	d137      	bne.n	800fb6c <HAL_RCC_OscConfig+0x2f0>
        tickstart = HAL_GetTick();
 800fafc:	f7fd fb1e 	bl	800d13c <HAL_GetTick>
 800fb00:	4607      	mov	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800fb02:	682b      	ldr	r3, [r5, #0]
 800fb04:	0199      	lsls	r1, r3, #6
 800fb06:	d42b      	bmi.n	800fb60 <HAL_RCC_OscConfig+0x2e4>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800fb08:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 800fb0c:	4313      	orrs	r3, r2
 800fb0e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800fb10:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800fb14:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800fb16:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800fb1a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800fb1c:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800fb20:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800fb22:	0852      	lsrs	r2, r2, #1
 800fb24:	3a01      	subs	r2, #1
 800fb26:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800fb2a:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800fb2c:	2301      	movs	r3, #1
 800fb2e:	6033      	str	r3, [r6, #0]
        tickstart = HAL_GetTick();
 800fb30:	f7fd fb04 	bl	800d13c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800fb34:	4d05      	ldr	r5, [pc, #20]	; (800fb4c <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 800fb36:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800fb38:	682b      	ldr	r3, [r5, #0]
 800fb3a:	019a      	lsls	r2, r3, #6
 800fb3c:	f53f aeb4 	bmi.w	800f8a8 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800fb40:	f7fd fafc 	bl	800d13c <HAL_GetTick>
 800fb44:	1b00      	subs	r0, r0, r4
 800fb46:	2802      	cmp	r0, #2
 800fb48:	d9f6      	bls.n	800fb38 <HAL_RCC_OscConfig+0x2bc>
 800fb4a:	e6da      	b.n	800f902 <HAL_RCC_OscConfig+0x86>
 800fb4c:	40023800 	.word	0x40023800
 800fb50:	42470000 	.word	0x42470000
 800fb54:	42470e80 	.word	0x42470e80
 800fb58:	40007000 	.word	0x40007000
 800fb5c:	42470060 	.word	0x42470060
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800fb60:	f7fd faec 	bl	800d13c <HAL_GetTick>
 800fb64:	1bc0      	subs	r0, r0, r7
 800fb66:	2802      	cmp	r0, #2
 800fb68:	d9cb      	bls.n	800fb02 <HAL_RCC_OscConfig+0x286>
 800fb6a:	e6ca      	b.n	800f902 <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 800fb6c:	f7fd fae6 	bl	800d13c <HAL_GetTick>
 800fb70:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800fb72:	682b      	ldr	r3, [r5, #0]
 800fb74:	019b      	lsls	r3, r3, #6
 800fb76:	f57f ae97 	bpl.w	800f8a8 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800fb7a:	f7fd fadf 	bl	800d13c <HAL_GetTick>
 800fb7e:	1b00      	subs	r0, r0, r4
 800fb80:	2802      	cmp	r0, #2
 800fb82:	d9f6      	bls.n	800fb72 <HAL_RCC_OscConfig+0x2f6>
 800fb84:	e6bd      	b.n	800f902 <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800fb86:	2801      	cmp	r0, #1
 800fb88:	f43f aebc 	beq.w	800f904 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 800fb8c:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800fb8e:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800fb90:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800fb94:	4291      	cmp	r1, r2
 800fb96:	f47f ae9e 	bne.w	800f8d6 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800fb9a:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800fb9c:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800fba0:	428a      	cmp	r2, r1
 800fba2:	f47f ae98 	bne.w	800f8d6 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800fba6:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800fba8:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800fbac:	401a      	ands	r2, r3
 800fbae:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800fbb2:	f47f ae90 	bne.w	800f8d6 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800fbb6:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800fbb8:	0852      	lsrs	r2, r2, #1
 800fbba:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800fbbe:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800fbc0:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800fbc4:	f47f ae87 	bne.w	800f8d6 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 800fbc8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800fbca:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800fbce:	ebb2 6f01 	cmp.w	r2, r1, lsl #24
 800fbd2:	f47f ae80 	bne.w	800f8d6 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 800fbd6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800fbd8:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 800fbdc:	ebb3 7f02 	cmp.w	r3, r2, lsl #28
 800fbe0:	f43f ae62 	beq.w	800f8a8 <HAL_RCC_OscConfig+0x2c>
 800fbe4:	e677      	b.n	800f8d6 <HAL_RCC_OscConfig+0x5a>
 800fbe6:	bf00      	nop

0800fbe8 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 800fbe8:	b538      	push	{r3, r4, r5, lr}
 800fbea:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 800fbec:	4604      	mov	r4, r0
 800fbee:	b1c8      	cbz	r0, 800fc24 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 800fbf0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800fbf4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800fbf8:	b91b      	cbnz	r3, 800fc02 <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800fbfa:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800fbfe:	f7f2 f86d 	bl	8001cdc <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800fc02:	2302      	movs	r3, #2
 800fc04:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800fc08:	1d21      	adds	r1, r4, #4
 800fc0a:	6820      	ldr	r0, [r4, #0]
 800fc0c:	f000 f9b8 	bl	800ff80 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 800fc10:	6862      	ldr	r2, [r4, #4]
 800fc12:	6820      	ldr	r0, [r4, #0]
 800fc14:	4629      	mov	r1, r5
 800fc16:	f000 f9e9 	bl	800ffec <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800fc1a:	2301      	movs	r3, #1
 800fc1c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 800fc20:	2000      	movs	r0, #0
}
 800fc22:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800fc24:	2001      	movs	r0, #1
 800fc26:	e7fc      	b.n	800fc22 <HAL_SDRAM_Init+0x3a>

0800fc28 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 800fc28:	b510      	push	{r4, lr}
 800fc2a:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 800fc2c:	f7f2 f8cc 	bl	8001dc8 <HAL_SDRAM_MspDeInit>
#endif

  /* Configure the SDRAM registers with their reset values */
  FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 800fc30:	e9d4 0100 	ldrd	r0, r1, [r4]
 800fc34:	f000 fa16 	bl	8010064 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 800fc38:	2000      	movs	r0, #0
 800fc3a:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 800fc3e:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 800fc42:	bd10      	pop	{r4, pc}

0800fc44 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800fc44:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800fc46:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800fc4a:	2b02      	cmp	r3, #2
{
 800fc4c:	4604      	mov	r4, r0
 800fc4e:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800fc50:	b2d8      	uxtb	r0, r3
 800fc52:	d00d      	beq.n	800fc70 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800fc54:	2302      	movs	r3, #2
 800fc56:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800fc5a:	6820      	ldr	r0, [r4, #0]
 800fc5c:	f000 fa11 	bl	8010082 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800fc60:	682b      	ldr	r3, [r5, #0]
 800fc62:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800fc64:	bf0c      	ite	eq
 800fc66:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 800fc68:	2301      	movne	r3, #1
 800fc6a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 800fc6e:	2000      	movs	r0, #0
}
 800fc70:	bd38      	pop	{r3, r4, r5, pc}

0800fc72 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800fc72:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800fc74:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800fc78:	2b02      	cmp	r3, #2
{
 800fc7a:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800fc7c:	b2d8      	uxtb	r0, r3
 800fc7e:	d009      	beq.n	800fc94 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800fc80:	2302      	movs	r3, #2
 800fc82:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 800fc86:	6820      	ldr	r0, [r4, #0]
 800fc88:	f000 fa22 	bl	80100d0 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800fc8c:	2301      	movs	r3, #1
 800fc8e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 800fc92:	2000      	movs	r0, #0
}
 800fc94:	bd10      	pop	{r4, pc}

0800fc96 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 800fc96:	4770      	bx	lr

0800fc98 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 800fc98:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800fc9c:	2b01      	cmp	r3, #1
 800fc9e:	d130      	bne.n	800fd02 <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800fca0:	2302      	movs	r3, #2
 800fca2:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800fca6:	6803      	ldr	r3, [r0, #0]
 800fca8:	68da      	ldr	r2, [r3, #12]
 800fcaa:	f042 0201 	orr.w	r2, r2, #1
 800fcae:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800fcb0:	4a15      	ldr	r2, [pc, #84]	; (800fd08 <HAL_TIM_Base_Start_IT+0x70>)
 800fcb2:	4293      	cmp	r3, r2
 800fcb4:	d01a      	beq.n	800fcec <HAL_TIM_Base_Start_IT+0x54>
 800fcb6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800fcba:	d017      	beq.n	800fcec <HAL_TIM_Base_Start_IT+0x54>
 800fcbc:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800fcc0:	4293      	cmp	r3, r2
 800fcc2:	d013      	beq.n	800fcec <HAL_TIM_Base_Start_IT+0x54>
 800fcc4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800fcc8:	4293      	cmp	r3, r2
 800fcca:	d00f      	beq.n	800fcec <HAL_TIM_Base_Start_IT+0x54>
 800fccc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800fcd0:	4293      	cmp	r3, r2
 800fcd2:	d00b      	beq.n	800fcec <HAL_TIM_Base_Start_IT+0x54>
 800fcd4:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800fcd8:	4293      	cmp	r3, r2
 800fcda:	d007      	beq.n	800fcec <HAL_TIM_Base_Start_IT+0x54>
 800fcdc:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800fce0:	4293      	cmp	r3, r2
 800fce2:	d003      	beq.n	800fcec <HAL_TIM_Base_Start_IT+0x54>
 800fce4:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800fce8:	4293      	cmp	r3, r2
 800fcea:	d104      	bne.n	800fcf6 <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800fcec:	689a      	ldr	r2, [r3, #8]
 800fcee:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800fcf2:	2a06      	cmp	r2, #6
 800fcf4:	d003      	beq.n	800fcfe <HAL_TIM_Base_Start_IT+0x66>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 800fcf6:	681a      	ldr	r2, [r3, #0]
 800fcf8:	f042 0201 	orr.w	r2, r2, #1
 800fcfc:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 800fcfe:	2000      	movs	r0, #0
}
 800fd00:	4770      	bx	lr
    return HAL_ERROR;
 800fd02:	2001      	movs	r0, #1
 800fd04:	4770      	bx	lr
 800fd06:	bf00      	nop
 800fd08:	40010000 	.word	0x40010000

0800fd0c <HAL_TIM_OC_DelayElapsedCallback>:
 800fd0c:	4770      	bx	lr

0800fd0e <HAL_TIM_IC_CaptureCallback>:
 800fd0e:	4770      	bx	lr

0800fd10 <HAL_TIM_PWM_PulseFinishedCallback>:
 800fd10:	4770      	bx	lr

0800fd12 <HAL_TIM_TriggerCallback>:
 800fd12:	4770      	bx	lr

0800fd14 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800fd14:	6803      	ldr	r3, [r0, #0]
 800fd16:	691a      	ldr	r2, [r3, #16]
 800fd18:	0791      	lsls	r1, r2, #30
{
 800fd1a:	b510      	push	{r4, lr}
 800fd1c:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800fd1e:	d50e      	bpl.n	800fd3e <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800fd20:	68da      	ldr	r2, [r3, #12]
 800fd22:	0792      	lsls	r2, r2, #30
 800fd24:	d50b      	bpl.n	800fd3e <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800fd26:	f06f 0202 	mvn.w	r2, #2
 800fd2a:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800fd2c:	2201      	movs	r2, #1
 800fd2e:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800fd30:	699b      	ldr	r3, [r3, #24]
 800fd32:	079b      	lsls	r3, r3, #30
 800fd34:	d077      	beq.n	800fe26 <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 800fd36:	f7ff ffea 	bl	800fd0e <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800fd3a:	2300      	movs	r3, #0
 800fd3c:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800fd3e:	6823      	ldr	r3, [r4, #0]
 800fd40:	691a      	ldr	r2, [r3, #16]
 800fd42:	0750      	lsls	r0, r2, #29
 800fd44:	d510      	bpl.n	800fd68 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800fd46:	68da      	ldr	r2, [r3, #12]
 800fd48:	0751      	lsls	r1, r2, #29
 800fd4a:	d50d      	bpl.n	800fd68 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800fd4c:	f06f 0204 	mvn.w	r2, #4
 800fd50:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800fd52:	2202      	movs	r2, #2
 800fd54:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800fd56:	699b      	ldr	r3, [r3, #24]
 800fd58:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800fd5c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800fd5e:	d068      	beq.n	800fe32 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 800fd60:	f7ff ffd5 	bl	800fd0e <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800fd64:	2300      	movs	r3, #0
 800fd66:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800fd68:	6823      	ldr	r3, [r4, #0]
 800fd6a:	691a      	ldr	r2, [r3, #16]
 800fd6c:	0712      	lsls	r2, r2, #28
 800fd6e:	d50f      	bpl.n	800fd90 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800fd70:	68da      	ldr	r2, [r3, #12]
 800fd72:	0710      	lsls	r0, r2, #28
 800fd74:	d50c      	bpl.n	800fd90 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800fd76:	f06f 0208 	mvn.w	r2, #8
 800fd7a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800fd7c:	2204      	movs	r2, #4
 800fd7e:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800fd80:	69db      	ldr	r3, [r3, #28]
 800fd82:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800fd84:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800fd86:	d05a      	beq.n	800fe3e <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 800fd88:	f7ff ffc1 	bl	800fd0e <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800fd8c:	2300      	movs	r3, #0
 800fd8e:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800fd90:	6823      	ldr	r3, [r4, #0]
 800fd92:	691a      	ldr	r2, [r3, #16]
 800fd94:	06d2      	lsls	r2, r2, #27
 800fd96:	d510      	bpl.n	800fdba <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800fd98:	68da      	ldr	r2, [r3, #12]
 800fd9a:	06d0      	lsls	r0, r2, #27
 800fd9c:	d50d      	bpl.n	800fdba <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800fd9e:	f06f 0210 	mvn.w	r2, #16
 800fda2:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800fda4:	2208      	movs	r2, #8
 800fda6:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800fda8:	69db      	ldr	r3, [r3, #28]
 800fdaa:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800fdae:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800fdb0:	d04b      	beq.n	800fe4a <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 800fdb2:	f7ff ffac 	bl	800fd0e <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800fdb6:	2300      	movs	r3, #0
 800fdb8:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800fdba:	6823      	ldr	r3, [r4, #0]
 800fdbc:	691a      	ldr	r2, [r3, #16]
 800fdbe:	07d1      	lsls	r1, r2, #31
 800fdc0:	d508      	bpl.n	800fdd4 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800fdc2:	68da      	ldr	r2, [r3, #12]
 800fdc4:	07d2      	lsls	r2, r2, #31
 800fdc6:	d505      	bpl.n	800fdd4 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800fdc8:	f06f 0201 	mvn.w	r2, #1
 800fdcc:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 800fdce:	4620      	mov	r0, r4
 800fdd0:	f7f1 fdcc 	bl	800196c <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800fdd4:	6823      	ldr	r3, [r4, #0]
 800fdd6:	691a      	ldr	r2, [r3, #16]
 800fdd8:	0610      	lsls	r0, r2, #24
 800fdda:	d508      	bpl.n	800fdee <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800fddc:	68da      	ldr	r2, [r3, #12]
 800fdde:	0611      	lsls	r1, r2, #24
 800fde0:	d505      	bpl.n	800fdee <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800fde2:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800fde6:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 800fde8:	4620      	mov	r0, r4
 800fdea:	f000 f8c8 	bl	800ff7e <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800fdee:	6823      	ldr	r3, [r4, #0]
 800fdf0:	691a      	ldr	r2, [r3, #16]
 800fdf2:	0652      	lsls	r2, r2, #25
 800fdf4:	d508      	bpl.n	800fe08 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800fdf6:	68da      	ldr	r2, [r3, #12]
 800fdf8:	0650      	lsls	r0, r2, #25
 800fdfa:	d505      	bpl.n	800fe08 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800fdfc:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800fe00:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 800fe02:	4620      	mov	r0, r4
 800fe04:	f7ff ff85 	bl	800fd12 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800fe08:	6823      	ldr	r3, [r4, #0]
 800fe0a:	691a      	ldr	r2, [r3, #16]
 800fe0c:	0691      	lsls	r1, r2, #26
 800fe0e:	d522      	bpl.n	800fe56 <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800fe10:	68da      	ldr	r2, [r3, #12]
 800fe12:	0692      	lsls	r2, r2, #26
 800fe14:	d51f      	bpl.n	800fe56 <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800fe16:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 800fe1a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800fe1c:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 800fe1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800fe22:	f000 b8ab 	b.w	800ff7c <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800fe26:	f7ff ff71 	bl	800fd0c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800fe2a:	4620      	mov	r0, r4
 800fe2c:	f7ff ff70 	bl	800fd10 <HAL_TIM_PWM_PulseFinishedCallback>
 800fe30:	e783      	b.n	800fd3a <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800fe32:	f7ff ff6b 	bl	800fd0c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800fe36:	4620      	mov	r0, r4
 800fe38:	f7ff ff6a 	bl	800fd10 <HAL_TIM_PWM_PulseFinishedCallback>
 800fe3c:	e792      	b.n	800fd64 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800fe3e:	f7ff ff65 	bl	800fd0c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800fe42:	4620      	mov	r0, r4
 800fe44:	f7ff ff64 	bl	800fd10 <HAL_TIM_PWM_PulseFinishedCallback>
 800fe48:	e7a0      	b.n	800fd8c <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800fe4a:	f7ff ff5f 	bl	800fd0c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800fe4e:	4620      	mov	r0, r4
 800fe50:	f7ff ff5e 	bl	800fd10 <HAL_TIM_PWM_PulseFinishedCallback>
 800fe54:	e7af      	b.n	800fdb6 <HAL_TIM_IRQHandler+0xa2>
}
 800fe56:	bd10      	pop	{r4, pc}

0800fe58 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800fe58:	4a30      	ldr	r2, [pc, #192]	; (800ff1c <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 800fe5a:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800fe5c:	4290      	cmp	r0, r2
 800fe5e:	d012      	beq.n	800fe86 <TIM_Base_SetConfig+0x2e>
 800fe60:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800fe64:	d00f      	beq.n	800fe86 <TIM_Base_SetConfig+0x2e>
 800fe66:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800fe6a:	4290      	cmp	r0, r2
 800fe6c:	d00b      	beq.n	800fe86 <TIM_Base_SetConfig+0x2e>
 800fe6e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800fe72:	4290      	cmp	r0, r2
 800fe74:	d007      	beq.n	800fe86 <TIM_Base_SetConfig+0x2e>
 800fe76:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800fe7a:	4290      	cmp	r0, r2
 800fe7c:	d003      	beq.n	800fe86 <TIM_Base_SetConfig+0x2e>
 800fe7e:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800fe82:	4290      	cmp	r0, r2
 800fe84:	d119      	bne.n	800feba <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 800fe86:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800fe88:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800fe8c:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800fe8e:	4a23      	ldr	r2, [pc, #140]	; (800ff1c <TIM_Base_SetConfig+0xc4>)
 800fe90:	4290      	cmp	r0, r2
 800fe92:	d029      	beq.n	800fee8 <TIM_Base_SetConfig+0x90>
 800fe94:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800fe98:	d026      	beq.n	800fee8 <TIM_Base_SetConfig+0x90>
 800fe9a:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800fe9e:	4290      	cmp	r0, r2
 800fea0:	d022      	beq.n	800fee8 <TIM_Base_SetConfig+0x90>
 800fea2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800fea6:	4290      	cmp	r0, r2
 800fea8:	d01e      	beq.n	800fee8 <TIM_Base_SetConfig+0x90>
 800feaa:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800feae:	4290      	cmp	r0, r2
 800feb0:	d01a      	beq.n	800fee8 <TIM_Base_SetConfig+0x90>
 800feb2:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800feb6:	4290      	cmp	r0, r2
 800feb8:	d016      	beq.n	800fee8 <TIM_Base_SetConfig+0x90>
 800feba:	4a19      	ldr	r2, [pc, #100]	; (800ff20 <TIM_Base_SetConfig+0xc8>)
 800febc:	4290      	cmp	r0, r2
 800febe:	d013      	beq.n	800fee8 <TIM_Base_SetConfig+0x90>
 800fec0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800fec4:	4290      	cmp	r0, r2
 800fec6:	d00f      	beq.n	800fee8 <TIM_Base_SetConfig+0x90>
 800fec8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800fecc:	4290      	cmp	r0, r2
 800fece:	d00b      	beq.n	800fee8 <TIM_Base_SetConfig+0x90>
 800fed0:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 800fed4:	4290      	cmp	r0, r2
 800fed6:	d007      	beq.n	800fee8 <TIM_Base_SetConfig+0x90>
 800fed8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800fedc:	4290      	cmp	r0, r2
 800fede:	d003      	beq.n	800fee8 <TIM_Base_SetConfig+0x90>
 800fee0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800fee4:	4290      	cmp	r0, r2
 800fee6:	d103      	bne.n	800fef0 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800fee8:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 800feea:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800feee:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800fef0:	694a      	ldr	r2, [r1, #20]
 800fef2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800fef6:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 800fef8:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800fefa:	688b      	ldr	r3, [r1, #8]
 800fefc:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800fefe:	680b      	ldr	r3, [r1, #0]
 800ff00:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800ff02:	4b06      	ldr	r3, [pc, #24]	; (800ff1c <TIM_Base_SetConfig+0xc4>)
 800ff04:	4298      	cmp	r0, r3
 800ff06:	d003      	beq.n	800ff10 <TIM_Base_SetConfig+0xb8>
 800ff08:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800ff0c:	4298      	cmp	r0, r3
 800ff0e:	d101      	bne.n	800ff14 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800ff10:	690b      	ldr	r3, [r1, #16]
 800ff12:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800ff14:	2301      	movs	r3, #1
 800ff16:	6143      	str	r3, [r0, #20]
}
 800ff18:	4770      	bx	lr
 800ff1a:	bf00      	nop
 800ff1c:	40010000 	.word	0x40010000
 800ff20:	40014000 	.word	0x40014000

0800ff24 <HAL_TIM_Base_Init>:
{
 800ff24:	b510      	push	{r4, lr}
  if (htim == NULL)
 800ff26:	4604      	mov	r4, r0
 800ff28:	b330      	cbz	r0, 800ff78 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 800ff2a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ff2e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ff32:	b91b      	cbnz	r3, 800ff3c <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800ff34:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800ff38:	f7ff fead 	bl	800fc96 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800ff3c:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800ff3e:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800ff40:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800ff44:	1d21      	adds	r1, r4, #4
 800ff46:	f7ff ff87 	bl	800fe58 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800ff4a:	2301      	movs	r3, #1
 800ff4c:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 800ff50:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800ff52:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800ff56:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800ff5a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800ff5e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800ff62:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800ff66:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800ff6a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800ff6e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800ff72:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 800ff76:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800ff78:	2001      	movs	r0, #1
 800ff7a:	e7fc      	b.n	800ff76 <HAL_TIM_Base_Init+0x52>

0800ff7c <HAL_TIMEx_CommutCallback>:
 800ff7c:	4770      	bx	lr

0800ff7e <HAL_TIMEx_BreakCallback>:
 800ff7e:	4770      	bx	lr

0800ff80 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800ff80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ff84:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800ff86:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
 800ff8a:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 800ff8e:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 800ff92:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 800ff96:	6809      	ldr	r1, [r1, #0]
 800ff98:	2901      	cmp	r1, #1
 800ff9a:	ea43 0304 	orr.w	r3, r3, r4
 800ff9e:	4912      	ldr	r1, [pc, #72]	; (800ffe8 <FMC_SDRAM_Init+0x68>)
  {    
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 800ffa0:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 800ffa2:	d00f      	beq.n	800ffc4 <FMC_SDRAM_Init+0x44>
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
                         FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                         FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
  
  
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800ffa4:	431a      	orrs	r2, r3
 800ffa6:	432a      	orrs	r2, r5
 800ffa8:	ea42 0308 	orr.w	r3, r2, r8
 800ffac:	ea43 030e 	orr.w	r3, r3, lr
 800ffb0:	ea43 030c 	orr.w	r3, r3, ip
 800ffb4:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800ffb6:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800ffb8:	4333      	orrs	r3, r6
 800ffba:	430b      	orrs	r3, r1
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 800ffbc:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 800ffbe:	2000      	movs	r0, #0
 800ffc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 800ffc4:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 800ffc6:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800ffc8:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800ffca:	ea45 0208 	orr.w	r2, r5, r8
 800ffce:	ea42 020e 	orr.w	r2, r2, lr
 800ffd2:	ea42 020c 	orr.w	r2, r2, ip
 800ffd6:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 800ffd8:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800ffdc:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 800ffde:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800ffe0:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 800ffe2:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 800ffe4:	6042      	str	r2, [r0, #4]
 800ffe6:	e7ea      	b.n	800ffbe <FMC_SDRAM_Init+0x3e>
 800ffe8:	ffff8000 	.word	0xffff8000

0800ffec <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 800ffec:	68cb      	ldr	r3, [r1, #12]
{
 800ffee:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fff0:	680c      	ldr	r4, [r1, #0]
 800fff2:	688e      	ldr	r6, [r1, #8]
 800fff4:	690d      	ldr	r5, [r1, #16]
 800fff6:	1e5f      	subs	r7, r3, #1
 800fff8:	694b      	ldr	r3, [r1, #20]
 800fffa:	f104 3cff 	add.w	ip, r4, #4294967295
 800fffe:	684c      	ldr	r4, [r1, #4]
 8010000:	6989      	ldr	r1, [r1, #24]
 8010002:	3b01      	subs	r3, #1
 8010004:	051b      	lsls	r3, r3, #20
 8010006:	3c01      	subs	r4, #1
 8010008:	3e01      	subs	r6, #1
 801000a:	3d01      	subs	r5, #1
 801000c:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 801000e:	2a01      	cmp	r2, #1
 8010010:	ea4f 1404 	mov.w	r4, r4, lsl #4
 8010014:	ea4f 2606 	mov.w	r6, r6, lsl #8
 8010018:	ea4f 4505 	mov.w	r5, r5, lsl #16
 801001c:	ea4f 6101 	mov.w	r1, r1, lsl #24
 8010020:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
 8010024:	d00c      	beq.n	8010040 <FMC_SDRAM_Timing_Init+0x54>
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8010026:	ea43 030c 	orr.w	r3, r3, ip
 801002a:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 801002c:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 801002e:	4333      	orrs	r3, r6
 8010030:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8010032:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8010036:	430b      	orrs	r3, r1
 8010038:	4313      	orrs	r3, r2
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
                       (((Timing->RPDelay)-1U) << 20U)             |\
                       (((Timing->RCDDelay)-1U) << 24U));
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 801003a:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 801003c:	2000      	movs	r0, #0
 801003e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8010040:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8010042:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 8010046:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 801004a:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 801004c:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 801004e:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8010052:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8010054:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8010056:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8010058:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 801005c:	430a      	orrs	r2, r1
 801005e:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8010060:	60c2      	str	r2, [r0, #12]
 8010062:	e7eb      	b.n	801003c <FMC_SDRAM_Timing_Init+0x50>

08010064 <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 8010064:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 8010068:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 801006c:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;    
 8010070:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 8010074:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 8010076:	2300      	movs	r3, #0
 8010078:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 801007a:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 801007c:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 801007e:	4618      	mov	r0, r3
 8010080:	4770      	bx	lr

08010082 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8010082:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 8010084:	2300      	movs	r3, #0
 8010086:	9301      	str	r3, [sp, #4]
{
 8010088:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 801008a:	e9d1 3200 	ldrd	r3, r2, [r1]
 801008e:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8010090:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8010092:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 8010096:	688a      	ldr	r2, [r1, #8]
 8010098:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 801009a:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 801009e:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 80100a0:	9b01      	ldr	r3, [sp, #4]
 80100a2:	6103      	str	r3, [r0, #16]
{
 80100a4:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 80100a6:	f7fd f849 	bl	800d13c <HAL_GetTick>
 80100aa:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 80100ac:	69a3      	ldr	r3, [r4, #24]
 80100ae:	f013 0320 	ands.w	r3, r3, #32
 80100b2:	d101      	bne.n	80100b8 <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 80100b4:	4618      	mov	r0, r3
 80100b6:	e003      	b.n	80100c0 <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 80100b8:	1c6b      	adds	r3, r5, #1
 80100ba:	d0f7      	beq.n	80100ac <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 80100bc:	b915      	cbnz	r5, 80100c4 <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 80100be:	2003      	movs	r0, #3
}
 80100c0:	b002      	add	sp, #8
 80100c2:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 80100c4:	f7fd f83a 	bl	800d13c <HAL_GetTick>
 80100c8:	1b80      	subs	r0, r0, r6
 80100ca:	42a8      	cmp	r0, r5
 80100cc:	d9ee      	bls.n	80100ac <FMC_SDRAM_SendCommand+0x2a>
 80100ce:	e7f6      	b.n	80100be <FMC_SDRAM_SendCommand+0x3c>

080100d0 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 80100d0:	6943      	ldr	r3, [r0, #20]
 80100d2:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 80100d6:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 80100d8:	2000      	movs	r0, #0
 80100da:	4770      	bx	lr

080100dc <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 80100dc:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 80100de:	4b05      	ldr	r3, [pc, #20]	; (80100f4 <SysTick_Handler+0x18>)
 80100e0:	681b      	ldr	r3, [r3, #0]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 80100e2:	f001 fe6f 	bl	8011dc4 <xTaskGetSchedulerState>
 80100e6:	2801      	cmp	r0, #1
 80100e8:	d003      	beq.n	80100f2 <SysTick_Handler+0x16>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 80100ea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 80100ee:	f000 bbe1 	b.w	80108b4 <xPortSysTickHandler>
}
 80100f2:	bd08      	pop	{r3, pc}
 80100f4:	e000e010 	.word	0xe000e010

080100f8 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80100f8:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 80100fc:	b92b      	cbnz	r3, 801010a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 80100fe:	4b06      	ldr	r3, [pc, #24]	; (8010118 <osKernelInitialize+0x20>)
 8010100:	6818      	ldr	r0, [r3, #0]
 8010102:	b928      	cbnz	r0, 8010110 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8010104:	2201      	movs	r2, #1
 8010106:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8010108:	4770      	bx	lr
    stat = osErrorISR;
 801010a:	f06f 0005 	mvn.w	r0, #5
 801010e:	4770      	bx	lr
    } else {
      stat = osError;
 8010110:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8010114:	4770      	bx	lr
 8010116:	bf00      	nop
 8010118:	2001b214 	.word	0x2001b214

0801011c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 801011c:	b510      	push	{r4, lr}
 801011e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8010122:	b95c      	cbnz	r4, 801013c <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8010124:	4b08      	ldr	r3, [pc, #32]	; (8010148 <osKernelStart+0x2c>)
 8010126:	681a      	ldr	r2, [r3, #0]
 8010128:	2a01      	cmp	r2, #1
 801012a:	d10a      	bne.n	8010142 <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 801012c:	4a07      	ldr	r2, [pc, #28]	; (801014c <osKernelStart+0x30>)
 801012e:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8010130:	2202      	movs	r2, #2
 8010132:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8010134:	f001 fce2 	bl	8011afc <vTaskStartScheduler>
      stat = osOK;
 8010138:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 801013a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 801013c:	f06f 0005 	mvn.w	r0, #5
 8010140:	e7fb      	b.n	801013a <osKernelStart+0x1e>
      stat = osError;
 8010142:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8010146:	e7f8      	b.n	801013a <osKernelStart+0x1e>
 8010148:	2001b214 	.word	0x2001b214
 801014c:	e000ed00 	.word	0xe000ed00

08010150 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8010150:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010152:	b087      	sub	sp, #28
 8010154:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8010156:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8010158:	460b      	mov	r3, r1
  hTask = NULL;
 801015a:	9205      	str	r2, [sp, #20]
 801015c:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8010160:	b9d2      	cbnz	r2, 8010198 <osThreadNew+0x48>
 8010162:	b1c8      	cbz	r0, 8010198 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8010164:	2c00      	cmp	r4, #0
 8010166:	d02f      	beq.n	80101c8 <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8010168:	69a5      	ldr	r5, [r4, #24]
 801016a:	2d00      	cmp	r5, #0
 801016c:	bf08      	it	eq
 801016e:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8010170:	1e69      	subs	r1, r5, #1
 8010172:	2937      	cmp	r1, #55	; 0x37
 8010174:	46ac      	mov	ip, r5
 8010176:	d82b      	bhi.n	80101d0 <osThreadNew+0x80>
 8010178:	6861      	ldr	r1, [r4, #4]
 801017a:	07c9      	lsls	r1, r1, #31
 801017c:	d428      	bmi.n	80101d0 <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 801017e:	6966      	ldr	r6, [r4, #20]
 8010180:	b16e      	cbz	r6, 801019e <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8010182:	08b2      	lsrs	r2, r6, #2
 8010184:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8010188:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 801018a:	b157      	cbz	r7, 80101a2 <osThreadNew+0x52>
 801018c:	f1be 0fbf 	cmp.w	lr, #191	; 0xbf
 8010190:	d902      	bls.n	8010198 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8010192:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8010194:	b104      	cbz	r4, 8010198 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8010196:	b9ee      	cbnz	r6, 80101d4 <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8010198:	9805      	ldr	r0, [sp, #20]
}
 801019a:	b007      	add	sp, #28
 801019c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 801019e:	2280      	movs	r2, #128	; 0x80
 80101a0:	e7f0      	b.n	8010184 <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 80101a2:	f1be 0f00 	cmp.w	lr, #0
 80101a6:	d1f7      	bne.n	8010198 <osThreadNew+0x48>
      if (mem == 0) {
 80101a8:	6924      	ldr	r4, [r4, #16]
 80101aa:	2c00      	cmp	r4, #0
 80101ac:	d1f4      	bne.n	8010198 <osThreadNew+0x48>
 80101ae:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 80101b0:	a905      	add	r1, sp, #20
 80101b2:	e9cd c100 	strd	ip, r1, [sp]
 80101b6:	b292      	uxth	r2, r2
 80101b8:	4621      	mov	r1, r4
 80101ba:	f001 fb19 	bl	80117f0 <xTaskCreate>
 80101be:	2801      	cmp	r0, #1
            hTask = NULL;
 80101c0:	bf1c      	itt	ne
 80101c2:	2300      	movne	r3, #0
 80101c4:	9305      	strne	r3, [sp, #20]
 80101c6:	e7e7      	b.n	8010198 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 80101c8:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 80101cc:	2280      	movs	r2, #128	; 0x80
 80101ce:	e7ef      	b.n	80101b0 <osThreadNew+0x60>
        return (NULL);
 80101d0:	4610      	mov	r0, r2
 80101d2:	e7e2      	b.n	801019a <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 80101d4:	e9cd 4701 	strd	r4, r7, [sp, #4]
 80101d8:	9500      	str	r5, [sp, #0]
 80101da:	f001 fad1 	bl	8011780 <xTaskCreateStatic>
 80101de:	9005      	str	r0, [sp, #20]
 80101e0:	e7da      	b.n	8010198 <osThreadNew+0x48>

080101e2 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 80101e2:	b510      	push	{r4, lr}
 80101e4:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80101e8:	b924      	cbnz	r4, 80101f4 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 80101ea:	b110      	cbz	r0, 80101f2 <osDelay+0x10>
      vTaskDelay(ticks);
 80101ec:	f001 fc46 	bl	8011a7c <vTaskDelay>
    stat = osOK;
 80101f0:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 80101f2:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 80101f4:	f06f 0005 	mvn.w	r0, #5
 80101f8:	e7fb      	b.n	80101f2 <osDelay+0x10>

080101fa <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 80101fa:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80101fc:	4604      	mov	r4, r0
 80101fe:	460e      	mov	r6, r1
 8010200:	4615      	mov	r5, r2
 8010202:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8010206:	b11a      	cbz	r2, 8010210 <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8010208:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 801020a:	4620      	mov	r0, r4
 801020c:	b003      	add	sp, #12
 801020e:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8010210:	2800      	cmp	r0, #0
 8010212:	d0f9      	beq.n	8010208 <osSemaphoreNew+0xe>
 8010214:	4288      	cmp	r0, r1
 8010216:	d3f7      	bcc.n	8010208 <osSemaphoreNew+0xe>
    if (attr != NULL) {
 8010218:	b1e5      	cbz	r5, 8010254 <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 801021a:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 801021e:	b1bb      	cbz	r3, 8010250 <osSemaphoreNew+0x56>
 8010220:	2f4f      	cmp	r7, #79	; 0x4f
 8010222:	d9f1      	bls.n	8010208 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8010224:	2801      	cmp	r0, #1
 8010226:	d12a      	bne.n	801027e <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8010228:	2103      	movs	r1, #3
 801022a:	9100      	str	r1, [sp, #0]
 801022c:	4611      	mov	r1, r2
 801022e:	f000 fcf1 	bl	8010c14 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8010232:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8010234:	2800      	cmp	r0, #0
 8010236:	d0e7      	beq.n	8010208 <osSemaphoreNew+0xe>
 8010238:	b1de      	cbz	r6, 8010272 <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 801023a:	2300      	movs	r3, #0
 801023c:	461a      	mov	r2, r3
 801023e:	4619      	mov	r1, r3
 8010240:	f000 fd9e 	bl	8010d80 <xQueueGenericSend>
 8010244:	2801      	cmp	r0, #1
 8010246:	d014      	beq.n	8010272 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 8010248:	4620      	mov	r0, r4
 801024a:	f001 f8df 	bl	801140c <vQueueDelete>
 801024e:	e7db      	b.n	8010208 <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8010250:	2f00      	cmp	r7, #0
 8010252:	d1d9      	bne.n	8010208 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8010254:	2c01      	cmp	r4, #1
 8010256:	d105      	bne.n	8010264 <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 8010258:	2203      	movs	r2, #3
 801025a:	2100      	movs	r1, #0
 801025c:	4620      	mov	r0, r4
 801025e:	f000 fd27 	bl	8010cb0 <xQueueGenericCreate>
 8010262:	e7e6      	b.n	8010232 <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8010264:	4620      	mov	r0, r4
 8010266:	4631      	mov	r1, r6
 8010268:	f000 fd6b 	bl	8010d42 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 801026c:	4604      	mov	r4, r0
 801026e:	2800      	cmp	r0, #0
 8010270:	d0ca      	beq.n	8010208 <osSemaphoreNew+0xe>
        if (attr != NULL) {
 8010272:	b955      	cbnz	r5, 801028a <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 8010274:	4629      	mov	r1, r5
 8010276:	4620      	mov	r0, r4
 8010278:	f001 f89e 	bl	80113b8 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 801027c:	e7c5      	b.n	801020a <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 801027e:	461a      	mov	r2, r3
 8010280:	f000 fd3d 	bl	8010cfe <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8010284:	4604      	mov	r4, r0
 8010286:	2800      	cmp	r0, #0
 8010288:	d0be      	beq.n	8010208 <osSemaphoreNew+0xe>
          name = attr->name;
 801028a:	682d      	ldr	r5, [r5, #0]
 801028c:	e7f2      	b.n	8010274 <osSemaphoreNew+0x7a>
	...

08010290 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8010290:	b513      	push	{r0, r1, r4, lr}
 8010292:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8010294:	b1f8      	cbz	r0, 80102d6 <osSemaphoreAcquire+0x46>
 8010296:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 801029a:	b1a3      	cbz	r3, 80102c6 <osSemaphoreAcquire+0x36>
    if (timeout != 0U) {
 801029c:	b9d9      	cbnz	r1, 80102d6 <osSemaphoreAcquire+0x46>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 801029e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80102a0:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80102a2:	f001 f839 	bl	8011318 <xQueueReceiveFromISR>
 80102a6:	2801      	cmp	r0, #1
 80102a8:	d112      	bne.n	80102d0 <osSemaphoreAcquire+0x40>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 80102aa:	9b01      	ldr	r3, [sp, #4]
 80102ac:	b913      	cbnz	r3, 80102b4 <osSemaphoreAcquire+0x24>
  stat = osOK;
 80102ae:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 80102b0:	b002      	add	sp, #8
 80102b2:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 80102b4:	4b0b      	ldr	r3, [pc, #44]	; (80102e4 <osSemaphoreAcquire+0x54>)
 80102b6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80102ba:	601a      	str	r2, [r3, #0]
 80102bc:	f3bf 8f4f 	dsb	sy
 80102c0:	f3bf 8f6f 	isb	sy
 80102c4:	e7f3      	b.n	80102ae <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 80102c6:	f000 ff63 	bl	8011190 <xQueueSemaphoreTake>
 80102ca:	2801      	cmp	r0, #1
 80102cc:	d0ef      	beq.n	80102ae <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 80102ce:	b92c      	cbnz	r4, 80102dc <osSemaphoreAcquire+0x4c>
        stat = osErrorResource;
 80102d0:	f06f 0002 	mvn.w	r0, #2
 80102d4:	e7ec      	b.n	80102b0 <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 80102d6:	f06f 0003 	mvn.w	r0, #3
 80102da:	e7e9      	b.n	80102b0 <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 80102dc:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80102e0:	e7e6      	b.n	80102b0 <osSemaphoreAcquire+0x20>
 80102e2:	bf00      	nop
 80102e4:	e000ed04 	.word	0xe000ed04

080102e8 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 80102e8:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80102ea:	b300      	cbz	r0, 801032e <osSemaphoreRelease+0x46>
 80102ec:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80102f0:	b1a3      	cbz	r3, 801031c <osSemaphoreRelease+0x34>
    yield = pdFALSE;
 80102f2:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80102f4:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 80102f6:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80102f8:	f000 fe56 	bl	8010fa8 <xQueueGiveFromISR>
 80102fc:	2801      	cmp	r0, #1
 80102fe:	d113      	bne.n	8010328 <osSemaphoreRelease+0x40>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 8010300:	9b01      	ldr	r3, [sp, #4]
 8010302:	b913      	cbnz	r3, 801030a <osSemaphoreRelease+0x22>
  stat = osOK;
 8010304:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 8010306:	b002      	add	sp, #8
 8010308:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 801030a:	4b0a      	ldr	r3, [pc, #40]	; (8010334 <osSemaphoreRelease+0x4c>)
 801030c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010310:	601a      	str	r2, [r3, #0]
 8010312:	f3bf 8f4f 	dsb	sy
 8010316:	f3bf 8f6f 	isb	sy
 801031a:	e7f3      	b.n	8010304 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 801031c:	461a      	mov	r2, r3
 801031e:	4619      	mov	r1, r3
 8010320:	f000 fd2e 	bl	8010d80 <xQueueGenericSend>
 8010324:	2801      	cmp	r0, #1
 8010326:	d0ed      	beq.n	8010304 <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 8010328:	f06f 0002 	mvn.w	r0, #2
 801032c:	e7eb      	b.n	8010306 <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 801032e:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8010332:	e7e8      	b.n	8010306 <osSemaphoreRelease+0x1e>
 8010334:	e000ed04 	.word	0xe000ed04

08010338 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8010338:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801033a:	4606      	mov	r6, r0
 801033c:	460d      	mov	r5, r1
 801033e:	4614      	mov	r4, r2
 8010340:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8010344:	b11f      	cbz	r7, 801034e <osMessageQueueNew+0x16>
  hQueue = NULL;
 8010346:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8010348:	4628      	mov	r0, r5
 801034a:	b003      	add	sp, #12
 801034c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 801034e:	2800      	cmp	r0, #0
 8010350:	d0f9      	beq.n	8010346 <osMessageQueueNew+0xe>
 8010352:	2900      	cmp	r1, #0
 8010354:	d0f7      	beq.n	8010346 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8010356:	b1da      	cbz	r2, 8010390 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8010358:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 801035c:	b183      	cbz	r3, 8010380 <osMessageQueueNew+0x48>
 801035e:	2a4f      	cmp	r2, #79	; 0x4f
 8010360:	d9f1      	bls.n	8010346 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8010362:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8010364:	2a00      	cmp	r2, #0
 8010366:	d0ee      	beq.n	8010346 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8010368:	6966      	ldr	r6, [r4, #20]
 801036a:	4345      	muls	r5, r0
 801036c:	42ae      	cmp	r6, r5
 801036e:	d3ea      	bcc.n	8010346 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8010370:	9700      	str	r7, [sp, #0]
 8010372:	f000 fc4f 	bl	8010c14 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8010376:	4605      	mov	r5, r0
 8010378:	2800      	cmp	r0, #0
 801037a:	d0e4      	beq.n	8010346 <osMessageQueueNew+0xe>
        name = attr->name;
 801037c:	6824      	ldr	r4, [r4, #0]
 801037e:	e011      	b.n	80103a4 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8010380:	2a00      	cmp	r2, #0
 8010382:	d1e0      	bne.n	8010346 <osMessageQueueNew+0xe>
 8010384:	6923      	ldr	r3, [r4, #16]
 8010386:	2b00      	cmp	r3, #0
 8010388:	d1dd      	bne.n	8010346 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 801038a:	6963      	ldr	r3, [r4, #20]
 801038c:	2b00      	cmp	r3, #0
 801038e:	d1da      	bne.n	8010346 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8010390:	4629      	mov	r1, r5
 8010392:	2200      	movs	r2, #0
 8010394:	4630      	mov	r0, r6
 8010396:	f000 fc8b 	bl	8010cb0 <xQueueGenericCreate>
    if (hQueue != NULL) {
 801039a:	4605      	mov	r5, r0
 801039c:	2800      	cmp	r0, #0
 801039e:	d0d2      	beq.n	8010346 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 80103a0:	2c00      	cmp	r4, #0
 80103a2:	d1eb      	bne.n	801037c <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 80103a4:	4621      	mov	r1, r4
 80103a6:	4628      	mov	r0, r5
 80103a8:	f001 f806 	bl	80113b8 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 80103ac:	e7cc      	b.n	8010348 <osMessageQueueNew+0x10>
	...

080103b0 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 80103b0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80103b2:	461c      	mov	r4, r3
 80103b4:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80103b8:	b1b6      	cbz	r6, 80103e8 <osMessageQueuePut+0x38>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80103ba:	b308      	cbz	r0, 8010400 <osMessageQueuePut+0x50>
 80103bc:	b301      	cbz	r1, 8010400 <osMessageQueuePut+0x50>
 80103be:	b9fb      	cbnz	r3, 8010400 <osMessageQueuePut+0x50>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80103c0:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80103c2:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80103c4:	f000 fd8e 	bl	8010ee4 <xQueueGenericSendFromISR>
 80103c8:	2801      	cmp	r0, #1
 80103ca:	d116      	bne.n	80103fa <osMessageQueuePut+0x4a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 80103cc:	9b01      	ldr	r3, [sp, #4]
 80103ce:	b913      	cbnz	r3, 80103d6 <osMessageQueuePut+0x26>
  stat = osOK;
 80103d0:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 80103d2:	b002      	add	sp, #8
 80103d4:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 80103d6:	4b0d      	ldr	r3, [pc, #52]	; (801040c <osMessageQueuePut+0x5c>)
 80103d8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80103dc:	601a      	str	r2, [r3, #0]
 80103de:	f3bf 8f4f 	dsb	sy
 80103e2:	f3bf 8f6f 	isb	sy
 80103e6:	e7f3      	b.n	80103d0 <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80103e8:	b150      	cbz	r0, 8010400 <osMessageQueuePut+0x50>
 80103ea:	b149      	cbz	r1, 8010400 <osMessageQueuePut+0x50>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80103ec:	4633      	mov	r3, r6
 80103ee:	4622      	mov	r2, r4
 80103f0:	f000 fcc6 	bl	8010d80 <xQueueGenericSend>
 80103f4:	2801      	cmp	r0, #1
 80103f6:	d0eb      	beq.n	80103d0 <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 80103f8:	b92c      	cbnz	r4, 8010406 <osMessageQueuePut+0x56>
          stat = osErrorResource;
 80103fa:	f06f 0002 	mvn.w	r0, #2
 80103fe:	e7e8      	b.n	80103d2 <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 8010400:	f06f 0003 	mvn.w	r0, #3
 8010404:	e7e5      	b.n	80103d2 <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 8010406:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 801040a:	e7e2      	b.n	80103d2 <osMessageQueuePut+0x22>
 801040c:	e000ed04 	.word	0xe000ed04

08010410 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8010410:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010412:	461c      	mov	r4, r3
 8010414:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8010418:	b1b3      	cbz	r3, 8010448 <osMessageQueueGet+0x38>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 801041a:	b300      	cbz	r0, 801045e <osMessageQueueGet+0x4e>
 801041c:	b1f9      	cbz	r1, 801045e <osMessageQueueGet+0x4e>
 801041e:	b9f4      	cbnz	r4, 801045e <osMessageQueueGet+0x4e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8010420:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8010422:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8010424:	f000 ff78 	bl	8011318 <xQueueReceiveFromISR>
 8010428:	2801      	cmp	r0, #1
 801042a:	d115      	bne.n	8010458 <osMessageQueueGet+0x48>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 801042c:	9b01      	ldr	r3, [sp, #4]
 801042e:	b913      	cbnz	r3, 8010436 <osMessageQueueGet+0x26>
  stat = osOK;
 8010430:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8010432:	b003      	add	sp, #12
 8010434:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8010436:	4b0d      	ldr	r3, [pc, #52]	; (801046c <osMessageQueueGet+0x5c>)
 8010438:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801043c:	601a      	str	r2, [r3, #0]
 801043e:	f3bf 8f4f 	dsb	sy
 8010442:	f3bf 8f6f 	isb	sy
 8010446:	e7f3      	b.n	8010430 <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8010448:	b148      	cbz	r0, 801045e <osMessageQueueGet+0x4e>
 801044a:	b141      	cbz	r1, 801045e <osMessageQueueGet+0x4e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 801044c:	4622      	mov	r2, r4
 801044e:	f000 fdff 	bl	8011050 <xQueueReceive>
 8010452:	2801      	cmp	r0, #1
 8010454:	d0ec      	beq.n	8010430 <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 8010456:	b92c      	cbnz	r4, 8010464 <osMessageQueueGet+0x54>
          stat = osErrorResource;
 8010458:	f06f 0002 	mvn.w	r0, #2
 801045c:	e7e9      	b.n	8010432 <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 801045e:	f06f 0003 	mvn.w	r0, #3
 8010462:	e7e6      	b.n	8010432 <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 8010464:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8010468:	e7e3      	b.n	8010432 <osMessageQueueGet+0x22>
 801046a:	bf00      	nop
 801046c:	e000ed04 	.word	0xe000ed04

08010470 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8010470:	4b03      	ldr	r3, [pc, #12]	; (8010480 <vApplicationGetIdleTaskMemory+0x10>)
 8010472:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8010474:	4b03      	ldr	r3, [pc, #12]	; (8010484 <vApplicationGetIdleTaskMemory+0x14>)
 8010476:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8010478:	2380      	movs	r3, #128	; 0x80
 801047a:	6013      	str	r3, [r2, #0]
}
 801047c:	4770      	bx	lr
 801047e:	bf00      	nop
 8010480:	2001b154 	.word	0x2001b154
 8010484:	2001af54 	.word	0x2001af54

08010488 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8010488:	4b03      	ldr	r3, [pc, #12]	; (8010498 <vApplicationGetTimerTaskMemory+0x10>)
 801048a:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 801048c:	4b03      	ldr	r3, [pc, #12]	; (801049c <vApplicationGetTimerTaskMemory+0x14>)
 801048e:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8010490:	f44f 7380 	mov.w	r3, #256	; 0x100
 8010494:	6013      	str	r3, [r2, #0]
}
 8010496:	4770      	bx	lr
 8010498:	2001b618 	.word	0x2001b618
 801049c:	2001b218 	.word	0x2001b218

080104a0 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 80104a0:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80104a2:	4b0f      	ldr	r3, [pc, #60]	; (80104e0 <prvInsertBlockIntoFreeList+0x40>)
 80104a4:	461a      	mov	r2, r3
 80104a6:	681b      	ldr	r3, [r3, #0]
 80104a8:	4283      	cmp	r3, r0
 80104aa:	d3fb      	bcc.n	80104a4 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 80104ac:	6854      	ldr	r4, [r2, #4]
 80104ae:	1911      	adds	r1, r2, r4
 80104b0:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 80104b2:	bf01      	itttt	eq
 80104b4:	6841      	ldreq	r1, [r0, #4]
 80104b6:	4610      	moveq	r0, r2
 80104b8:	1909      	addeq	r1, r1, r4
 80104ba:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 80104bc:	6844      	ldr	r4, [r0, #4]
 80104be:	1901      	adds	r1, r0, r4
 80104c0:	428b      	cmp	r3, r1
 80104c2:	d107      	bne.n	80104d4 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 80104c4:	4907      	ldr	r1, [pc, #28]	; (80104e4 <prvInsertBlockIntoFreeList+0x44>)
 80104c6:	6809      	ldr	r1, [r1, #0]
 80104c8:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80104ca:	bf1f      	itttt	ne
 80104cc:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 80104ce:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80104d0:	1909      	addne	r1, r1, r4
 80104d2:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 80104d4:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 80104d6:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 80104d8:	bf18      	it	ne
 80104da:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 80104dc:	bd10      	pop	{r4, pc}
 80104de:	bf00      	nop
 80104e0:	2002b6f0 	.word	0x2002b6f0
 80104e4:	2001b6d8 	.word	0x2001b6d8

080104e8 <pvPortMalloc>:
{
 80104e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80104ec:	4604      	mov	r4, r0
	vTaskSuspendAll();
 80104ee:	f001 f9ad 	bl	801184c <vTaskSuspendAll>
		if( pxEnd == NULL )
 80104f2:	4b3e      	ldr	r3, [pc, #248]	; (80105ec <pvPortMalloc+0x104>)
 80104f4:	483e      	ldr	r0, [pc, #248]	; (80105f0 <pvPortMalloc+0x108>)
 80104f6:	681a      	ldr	r2, [r3, #0]
 80104f8:	469c      	mov	ip, r3
 80104fa:	b9d2      	cbnz	r2, 8010532 <pvPortMalloc+0x4a>
	uxAddress = ( size_t ) ucHeap;
 80104fc:	4a3d      	ldr	r2, [pc, #244]	; (80105f4 <pvPortMalloc+0x10c>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80104fe:	4b3e      	ldr	r3, [pc, #248]	; (80105f8 <pvPortMalloc+0x110>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8010500:	0755      	lsls	r5, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8010502:	bf1c      	itt	ne
 8010504:	3207      	addne	r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8010506:	f022 0207 	bicne.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 801050a:	2100      	movs	r1, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 801050c:	601a      	str	r2, [r3, #0]
	xStart.xBlockSize = ( size_t ) 0;
 801050e:	6059      	str	r1, [r3, #4]
	uxAddress -= xHeapStructSize;
 8010510:	4b3a      	ldr	r3, [pc, #232]	; (80105fc <pvPortMalloc+0x114>)
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8010512:	f023 0307 	bic.w	r3, r3, #7
	pxEnd->pxNextFreeBlock = NULL;
 8010516:	e9c3 1100 	strd	r1, r1, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 801051a:	1a99      	subs	r1, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 801051c:	e9c2 3100 	strd	r3, r1, [r2]
	pxEnd = ( void * ) uxAddress;
 8010520:	f8cc 3000 	str.w	r3, [ip]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8010524:	4b36      	ldr	r3, [pc, #216]	; (8010600 <pvPortMalloc+0x118>)
 8010526:	6019      	str	r1, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8010528:	4b36      	ldr	r3, [pc, #216]	; (8010604 <pvPortMalloc+0x11c>)
 801052a:	6019      	str	r1, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 801052c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8010530:	6003      	str	r3, [r0, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8010532:	6807      	ldr	r7, [r0, #0]
 8010534:	4227      	tst	r7, r4
 8010536:	d153      	bne.n	80105e0 <pvPortMalloc+0xf8>
			if( xWantedSize > 0 )
 8010538:	2c00      	cmp	r4, #0
 801053a:	d044      	beq.n	80105c6 <pvPortMalloc+0xde>
				xWantedSize += xHeapStructSize;
 801053c:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8010540:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8010542:	bf1c      	itt	ne
 8010544:	f023 0307 	bicne.w	r3, r3, #7
 8010548:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 801054a:	2b00      	cmp	r3, #0
 801054c:	d048      	beq.n	80105e0 <pvPortMalloc+0xf8>
 801054e:	4a2d      	ldr	r2, [pc, #180]	; (8010604 <pvPortMalloc+0x11c>)
 8010550:	6816      	ldr	r6, [r2, #0]
 8010552:	429e      	cmp	r6, r3
 8010554:	4690      	mov	r8, r2
 8010556:	d343      	bcc.n	80105e0 <pvPortMalloc+0xf8>
				pxBlock = xStart.pxNextFreeBlock;
 8010558:	4a27      	ldr	r2, [pc, #156]	; (80105f8 <pvPortMalloc+0x110>)
 801055a:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 801055c:	6869      	ldr	r1, [r5, #4]
 801055e:	4299      	cmp	r1, r3
 8010560:	d201      	bcs.n	8010566 <pvPortMalloc+0x7e>
 8010562:	6828      	ldr	r0, [r5, #0]
 8010564:	b9a8      	cbnz	r0, 8010592 <pvPortMalloc+0xaa>
				if( pxBlock != pxEnd )
 8010566:	f8dc 0000 	ldr.w	r0, [ip]
 801056a:	42a8      	cmp	r0, r5
 801056c:	d038      	beq.n	80105e0 <pvPortMalloc+0xf8>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 801056e:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8010570:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8010572:	6814      	ldr	r4, [r2, #0]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8010574:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8010576:	2910      	cmp	r1, #16
 8010578:	d912      	bls.n	80105a0 <pvPortMalloc+0xb8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 801057a:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 801057c:	0742      	lsls	r2, r0, #29
 801057e:	d00b      	beq.n	8010598 <pvPortMalloc+0xb0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8010580:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010584:	f383 8811 	msr	BASEPRI, r3
 8010588:	f3bf 8f6f 	isb	sy
 801058c:	f3bf 8f4f 	dsb	sy
 8010590:	e7fe      	b.n	8010590 <pvPortMalloc+0xa8>
 8010592:	462a      	mov	r2, r5
 8010594:	4605      	mov	r5, r0
 8010596:	e7e1      	b.n	801055c <pvPortMalloc+0x74>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8010598:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 801059a:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 801059c:	f7ff ff80 	bl	80104a0 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80105a0:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80105a2:	4917      	ldr	r1, [pc, #92]	; (8010600 <pvPortMalloc+0x118>)
					xNumberOfSuccessfulAllocations++;
 80105a4:	4a18      	ldr	r2, [pc, #96]	; (8010608 <pvPortMalloc+0x120>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80105a6:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80105a8:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80105aa:	431f      	orrs	r7, r3
					pxBlock->pxNextFreeBlock = NULL;
 80105ac:	2300      	movs	r3, #0
 80105ae:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 80105b0:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80105b2:	f8c8 6000 	str.w	r6, [r8]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80105b6:	4286      	cmp	r6, r0
					xNumberOfSuccessfulAllocations++;
 80105b8:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 80105bc:	bf38      	it	cc
 80105be:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80105c0:	3408      	adds	r4, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80105c2:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 80105c4:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 80105c6:	f001 f9e5 	bl	8011994 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 80105ca:	0763      	lsls	r3, r4, #29
 80105cc:	d00a      	beq.n	80105e4 <pvPortMalloc+0xfc>
 80105ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80105d2:	f383 8811 	msr	BASEPRI, r3
 80105d6:	f3bf 8f6f 	isb	sy
 80105da:	f3bf 8f4f 	dsb	sy
 80105de:	e7fe      	b.n	80105de <pvPortMalloc+0xf6>
void *pvReturn = NULL;
 80105e0:	2400      	movs	r4, #0
 80105e2:	e7f0      	b.n	80105c6 <pvPortMalloc+0xde>
}
 80105e4:	4620      	mov	r0, r4
 80105e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80105ea:	bf00      	nop
 80105ec:	2001b6d8 	.word	0x2001b6d8
 80105f0:	2002b6dc 	.word	0x2002b6dc
 80105f4:	2001b6dc 	.word	0x2001b6dc
 80105f8:	2002b6f0 	.word	0x2002b6f0
 80105fc:	2002b6d3 	.word	0x2002b6d3
 8010600:	2002b6e4 	.word	0x2002b6e4
 8010604:	2002b6e0 	.word	0x2002b6e0
 8010608:	2002b6e8 	.word	0x2002b6e8

0801060c <vPortFree>:
{
 801060c:	b510      	push	{r4, lr}
	if( pv != NULL )
 801060e:	4604      	mov	r4, r0
 8010610:	b390      	cbz	r0, 8010678 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8010612:	4a1a      	ldr	r2, [pc, #104]	; (801067c <vPortFree+0x70>)
 8010614:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8010618:	6812      	ldr	r2, [r2, #0]
 801061a:	4213      	tst	r3, r2
 801061c:	d108      	bne.n	8010630 <vPortFree+0x24>
 801061e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010622:	f383 8811 	msr	BASEPRI, r3
 8010626:	f3bf 8f6f 	isb	sy
 801062a:	f3bf 8f4f 	dsb	sy
 801062e:	e7fe      	b.n	801062e <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8010630:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8010634:	b141      	cbz	r1, 8010648 <vPortFree+0x3c>
 8010636:	f04f 0350 	mov.w	r3, #80	; 0x50
 801063a:	f383 8811 	msr	BASEPRI, r3
 801063e:	f3bf 8f6f 	isb	sy
 8010642:	f3bf 8f4f 	dsb	sy
 8010646:	e7fe      	b.n	8010646 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8010648:	ea23 0302 	bic.w	r3, r3, r2
 801064c:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8010650:	f001 f8fc 	bl	801184c <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8010654:	4a0a      	ldr	r2, [pc, #40]	; (8010680 <vPortFree+0x74>)
 8010656:	f854 3c04 	ldr.w	r3, [r4, #-4]
 801065a:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 801065c:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8010660:	440b      	add	r3, r1
 8010662:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8010664:	f7ff ff1c 	bl	80104a0 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 8010668:	4a06      	ldr	r2, [pc, #24]	; (8010684 <vPortFree+0x78>)
 801066a:	6813      	ldr	r3, [r2, #0]
}
 801066c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 8010670:	3301      	adds	r3, #1
 8010672:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 8010674:	f001 b98e 	b.w	8011994 <xTaskResumeAll>
}
 8010678:	bd10      	pop	{r4, pc}
 801067a:	bf00      	nop
 801067c:	2002b6dc 	.word	0x2002b6dc
 8010680:	2002b6e0 	.word	0x2002b6e0
 8010684:	2002b6ec 	.word	0x2002b6ec

08010688 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8010688:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 801068c:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8010690:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8010694:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8010696:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8010698:	2300      	movs	r3, #0
 801069a:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 801069c:	4770      	bx	lr

0801069e <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 801069e:	2300      	movs	r3, #0
 80106a0:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 80106a2:	4770      	bx	lr

080106a4 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 80106a4:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 80106a6:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 80106a8:	689a      	ldr	r2, [r3, #8]
 80106aa:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 80106ac:	689a      	ldr	r2, [r3, #8]
 80106ae:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 80106b0:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80106b2:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80106b4:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80106b6:	3301      	adds	r3, #1
 80106b8:	6003      	str	r3, [r0, #0]
}
 80106ba:	4770      	bx	lr

080106bc <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 80106bc:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 80106be:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 80106c0:	1c63      	adds	r3, r4, #1
 80106c2:	d10a      	bne.n	80106da <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 80106c4:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 80106c6:	685a      	ldr	r2, [r3, #4]
 80106c8:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 80106ca:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 80106cc:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 80106ce:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80106d0:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80106d2:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80106d4:	3301      	adds	r3, #1
 80106d6:	6003      	str	r3, [r0, #0]
}
 80106d8:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 80106da:	f100 0208 	add.w	r2, r0, #8
 80106de:	4613      	mov	r3, r2
 80106e0:	6852      	ldr	r2, [r2, #4]
 80106e2:	6815      	ldr	r5, [r2, #0]
 80106e4:	42a5      	cmp	r5, r4
 80106e6:	d9fa      	bls.n	80106de <vListInsert+0x22>
 80106e8:	e7ed      	b.n	80106c6 <vListInsert+0xa>

080106ea <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 80106ea:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 80106ee:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 80106f0:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 80106f2:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 80106f4:	6859      	ldr	r1, [r3, #4]
 80106f6:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 80106f8:	bf08      	it	eq
 80106fa:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 80106fc:	2200      	movs	r2, #0
 80106fe:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8010700:	681a      	ldr	r2, [r3, #0]
 8010702:	3a01      	subs	r2, #1
 8010704:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8010706:	6818      	ldr	r0, [r3, #0]
}
 8010708:	4770      	bx	lr
	...

0801070c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 801070c:	4808      	ldr	r0, [pc, #32]	; (8010730 <prvPortStartFirstTask+0x24>)
 801070e:	6800      	ldr	r0, [r0, #0]
 8010710:	6800      	ldr	r0, [r0, #0]
 8010712:	f380 8808 	msr	MSP, r0
 8010716:	f04f 0000 	mov.w	r0, #0
 801071a:	f380 8814 	msr	CONTROL, r0
 801071e:	b662      	cpsie	i
 8010720:	b661      	cpsie	f
 8010722:	f3bf 8f4f 	dsb	sy
 8010726:	f3bf 8f6f 	isb	sy
 801072a:	df00      	svc	0
 801072c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 801072e:	0000      	.short	0x0000
 8010730:	e000ed08 	.word	0xe000ed08

08010734 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8010734:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8010744 <vPortEnableVFP+0x10>
 8010738:	6801      	ldr	r1, [r0, #0]
 801073a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 801073e:	6001      	str	r1, [r0, #0]
 8010740:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8010742:	0000      	.short	0x0000
 8010744:	e000ed88 	.word	0xe000ed88

08010748 <prvTaskExitError>:
{
 8010748:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 801074a:	2300      	movs	r3, #0
 801074c:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 801074e:	4b0d      	ldr	r3, [pc, #52]	; (8010784 <prvTaskExitError+0x3c>)
 8010750:	681b      	ldr	r3, [r3, #0]
 8010752:	3301      	adds	r3, #1
 8010754:	d008      	beq.n	8010768 <prvTaskExitError+0x20>
 8010756:	f04f 0350 	mov.w	r3, #80	; 0x50
 801075a:	f383 8811 	msr	BASEPRI, r3
 801075e:	f3bf 8f6f 	isb	sy
 8010762:	f3bf 8f4f 	dsb	sy
 8010766:	e7fe      	b.n	8010766 <prvTaskExitError+0x1e>
 8010768:	f04f 0350 	mov.w	r3, #80	; 0x50
 801076c:	f383 8811 	msr	BASEPRI, r3
 8010770:	f3bf 8f6f 	isb	sy
 8010774:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8010778:	9b01      	ldr	r3, [sp, #4]
 801077a:	2b00      	cmp	r3, #0
 801077c:	d0fc      	beq.n	8010778 <prvTaskExitError+0x30>
}
 801077e:	b002      	add	sp, #8
 8010780:	4770      	bx	lr
 8010782:	bf00      	nop
 8010784:	2000005c 	.word	0x2000005c

08010788 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8010788:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 801078c:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8010790:	4b07      	ldr	r3, [pc, #28]	; (80107b0 <pxPortInitialiseStack+0x28>)
 8010792:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8010796:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 801079a:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 801079e:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 80107a2:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80107a6:	f840 3c24 	str.w	r3, [r0, #-36]
}
 80107aa:	3844      	subs	r0, #68	; 0x44
 80107ac:	4770      	bx	lr
 80107ae:	bf00      	nop
 80107b0:	08010749 	.word	0x08010749
	...

080107c0 <SVC_Handler>:
	__asm volatile (
 80107c0:	4b07      	ldr	r3, [pc, #28]	; (80107e0 <pxCurrentTCBConst2>)
 80107c2:	6819      	ldr	r1, [r3, #0]
 80107c4:	6808      	ldr	r0, [r1, #0]
 80107c6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80107ca:	f380 8809 	msr	PSP, r0
 80107ce:	f3bf 8f6f 	isb	sy
 80107d2:	f04f 0000 	mov.w	r0, #0
 80107d6:	f380 8811 	msr	BASEPRI, r0
 80107da:	4770      	bx	lr
 80107dc:	f3af 8000 	nop.w

080107e0 <pxCurrentTCBConst2>:
 80107e0:	2002b700 	.word	0x2002b700

080107e4 <vPortEnterCritical>:
 80107e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80107e8:	f383 8811 	msr	BASEPRI, r3
 80107ec:	f3bf 8f6f 	isb	sy
 80107f0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 80107f4:	4a0a      	ldr	r2, [pc, #40]	; (8010820 <vPortEnterCritical+0x3c>)
 80107f6:	6813      	ldr	r3, [r2, #0]
 80107f8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 80107fa:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 80107fc:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 80107fe:	d10d      	bne.n	801081c <vPortEnterCritical+0x38>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8010800:	4b08      	ldr	r3, [pc, #32]	; (8010824 <vPortEnterCritical+0x40>)
 8010802:	681b      	ldr	r3, [r3, #0]
 8010804:	f013 0fff 	tst.w	r3, #255	; 0xff
 8010808:	d008      	beq.n	801081c <vPortEnterCritical+0x38>
 801080a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801080e:	f383 8811 	msr	BASEPRI, r3
 8010812:	f3bf 8f6f 	isb	sy
 8010816:	f3bf 8f4f 	dsb	sy
 801081a:	e7fe      	b.n	801081a <vPortEnterCritical+0x36>
}
 801081c:	4770      	bx	lr
 801081e:	bf00      	nop
 8010820:	2000005c 	.word	0x2000005c
 8010824:	e000ed04 	.word	0xe000ed04

08010828 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8010828:	4a08      	ldr	r2, [pc, #32]	; (801084c <vPortExitCritical+0x24>)
 801082a:	6813      	ldr	r3, [r2, #0]
 801082c:	b943      	cbnz	r3, 8010840 <vPortExitCritical+0x18>
 801082e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010832:	f383 8811 	msr	BASEPRI, r3
 8010836:	f3bf 8f6f 	isb	sy
 801083a:	f3bf 8f4f 	dsb	sy
 801083e:	e7fe      	b.n	801083e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8010840:	3b01      	subs	r3, #1
 8010842:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8010844:	b90b      	cbnz	r3, 801084a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8010846:	f383 8811 	msr	BASEPRI, r3
}
 801084a:	4770      	bx	lr
 801084c:	2000005c 	.word	0x2000005c

08010850 <PendSV_Handler>:
	__asm volatile
 8010850:	f3ef 8009 	mrs	r0, PSP
 8010854:	f3bf 8f6f 	isb	sy
 8010858:	4b15      	ldr	r3, [pc, #84]	; (80108b0 <pxCurrentTCBConst>)
 801085a:	681a      	ldr	r2, [r3, #0]
 801085c:	f01e 0f10 	tst.w	lr, #16
 8010860:	bf08      	it	eq
 8010862:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8010866:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801086a:	6010      	str	r0, [r2, #0]
 801086c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8010870:	f04f 0050 	mov.w	r0, #80	; 0x50
 8010874:	f380 8811 	msr	BASEPRI, r0
 8010878:	f3bf 8f4f 	dsb	sy
 801087c:	f3bf 8f6f 	isb	sy
 8010880:	f001 f98c 	bl	8011b9c <vTaskSwitchContext>
 8010884:	f04f 0000 	mov.w	r0, #0
 8010888:	f380 8811 	msr	BASEPRI, r0
 801088c:	bc09      	pop	{r0, r3}
 801088e:	6819      	ldr	r1, [r3, #0]
 8010890:	6808      	ldr	r0, [r1, #0]
 8010892:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010896:	f01e 0f10 	tst.w	lr, #16
 801089a:	bf08      	it	eq
 801089c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80108a0:	f380 8809 	msr	PSP, r0
 80108a4:	f3bf 8f6f 	isb	sy
 80108a8:	4770      	bx	lr
 80108aa:	bf00      	nop
 80108ac:	f3af 8000 	nop.w

080108b0 <pxCurrentTCBConst>:
 80108b0:	2002b700 	.word	0x2002b700

080108b4 <xPortSysTickHandler>:
{
 80108b4:	b508      	push	{r3, lr}
	__asm volatile
 80108b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80108ba:	f383 8811 	msr	BASEPRI, r3
 80108be:	f3bf 8f6f 	isb	sy
 80108c2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 80108c6:	f000 ffcf 	bl	8011868 <xTaskIncrementTick>
 80108ca:	b118      	cbz	r0, 80108d4 <xPortSysTickHandler+0x20>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 80108cc:	4b03      	ldr	r3, [pc, #12]	; (80108dc <xPortSysTickHandler+0x28>)
 80108ce:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80108d2:	601a      	str	r2, [r3, #0]
	__asm volatile
 80108d4:	2300      	movs	r3, #0
 80108d6:	f383 8811 	msr	BASEPRI, r3
}
 80108da:	bd08      	pop	{r3, pc}
 80108dc:	e000ed04 	.word	0xe000ed04

080108e0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80108e0:	4a08      	ldr	r2, [pc, #32]	; (8010904 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 80108e2:	4909      	ldr	r1, [pc, #36]	; (8010908 <vPortSetupTimerInterrupt+0x28>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80108e4:	2300      	movs	r3, #0
 80108e6:	6013      	str	r3, [r2, #0]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 80108e8:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80108ea:	4b08      	ldr	r3, [pc, #32]	; (801090c <vPortSetupTimerInterrupt+0x2c>)
 80108ec:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80108f0:	681b      	ldr	r3, [r3, #0]
 80108f2:	fbb3 f3f1 	udiv	r3, r3, r1
 80108f6:	4906      	ldr	r1, [pc, #24]	; (8010910 <vPortSetupTimerInterrupt+0x30>)
 80108f8:	3b01      	subs	r3, #1
 80108fa:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 80108fc:	2307      	movs	r3, #7
 80108fe:	6013      	str	r3, [r2, #0]
}
 8010900:	4770      	bx	lr
 8010902:	bf00      	nop
 8010904:	e000e010 	.word	0xe000e010
 8010908:	e000e018 	.word	0xe000e018
 801090c:	20000050 	.word	0x20000050
 8010910:	e000e014 	.word	0xe000e014

08010914 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8010914:	4b38      	ldr	r3, [pc, #224]	; (80109f8 <xPortStartScheduler+0xe4>)
 8010916:	4a39      	ldr	r2, [pc, #228]	; (80109fc <xPortStartScheduler+0xe8>)
{
 8010918:	b513      	push	{r0, r1, r4, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 801091a:	6819      	ldr	r1, [r3, #0]
 801091c:	4291      	cmp	r1, r2
 801091e:	d108      	bne.n	8010932 <xPortStartScheduler+0x1e>
	__asm volatile
 8010920:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010924:	f383 8811 	msr	BASEPRI, r3
 8010928:	f3bf 8f6f 	isb	sy
 801092c:	f3bf 8f4f 	dsb	sy
 8010930:	e7fe      	b.n	8010930 <xPortStartScheduler+0x1c>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8010932:	681a      	ldr	r2, [r3, #0]
 8010934:	4b32      	ldr	r3, [pc, #200]	; (8010a00 <xPortStartScheduler+0xec>)
 8010936:	429a      	cmp	r2, r3
 8010938:	d108      	bne.n	801094c <xPortStartScheduler+0x38>
 801093a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801093e:	f383 8811 	msr	BASEPRI, r3
 8010942:	f3bf 8f6f 	isb	sy
 8010946:	f3bf 8f4f 	dsb	sy
 801094a:	e7fe      	b.n	801094a <xPortStartScheduler+0x36>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 801094c:	4b2d      	ldr	r3, [pc, #180]	; (8010a04 <xPortStartScheduler+0xf0>)
 801094e:	781a      	ldrb	r2, [r3, #0]
 8010950:	b2d2      	uxtb	r2, r2
 8010952:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8010954:	22ff      	movs	r2, #255	; 0xff
 8010956:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8010958:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 801095a:	4a2b      	ldr	r2, [pc, #172]	; (8010a08 <xPortStartScheduler+0xf4>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 801095c:	b2db      	uxtb	r3, r3
 801095e:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8010962:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8010966:	f003 0350 	and.w	r3, r3, #80	; 0x50
 801096a:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 801096c:	4a27      	ldr	r2, [pc, #156]	; (8010a0c <xPortStartScheduler+0xf8>)
 801096e:	2307      	movs	r3, #7
 8010970:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8010972:	2100      	movs	r1, #0
 8010974:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8010978:	0600      	lsls	r0, r0, #24
 801097a:	f103 34ff 	add.w	r4, r3, #4294967295
 801097e:	d40c      	bmi.n	801099a <xPortStartScheduler+0x86>
 8010980:	b111      	cbz	r1, 8010988 <xPortStartScheduler+0x74>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8010982:	2b03      	cmp	r3, #3
 8010984:	6013      	str	r3, [r2, #0]
 8010986:	d011      	beq.n	80109ac <xPortStartScheduler+0x98>
 8010988:	f04f 0350 	mov.w	r3, #80	; 0x50
 801098c:	f383 8811 	msr	BASEPRI, r3
 8010990:	f3bf 8f6f 	isb	sy
 8010994:	f3bf 8f4f 	dsb	sy
 8010998:	e7fe      	b.n	8010998 <xPortStartScheduler+0x84>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 801099a:	f89d 3003 	ldrb.w	r3, [sp, #3]
 801099e:	005b      	lsls	r3, r3, #1
 80109a0:	b2db      	uxtb	r3, r3
 80109a2:	f88d 3003 	strb.w	r3, [sp, #3]
 80109a6:	2101      	movs	r1, #1
 80109a8:	4623      	mov	r3, r4
 80109aa:	e7e3      	b.n	8010974 <xPortStartScheduler+0x60>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 80109ac:	f44f 7340 	mov.w	r3, #768	; 0x300
 80109b0:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80109b2:	9b01      	ldr	r3, [sp, #4]
 80109b4:	4a13      	ldr	r2, [pc, #76]	; (8010a04 <xPortStartScheduler+0xf0>)
 80109b6:	b2db      	uxtb	r3, r3
 80109b8:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80109ba:	4b15      	ldr	r3, [pc, #84]	; (8010a10 <xPortStartScheduler+0xfc>)
 80109bc:	681a      	ldr	r2, [r3, #0]
 80109be:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 80109c2:	601a      	str	r2, [r3, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 80109c4:	681a      	ldr	r2, [r3, #0]
 80109c6:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
 80109ca:	601a      	str	r2, [r3, #0]
	vPortSetupTimerInterrupt();
 80109cc:	f7ff ff88 	bl	80108e0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 80109d0:	4b10      	ldr	r3, [pc, #64]	; (8010a14 <xPortStartScheduler+0x100>)
 80109d2:	2400      	movs	r4, #0
 80109d4:	601c      	str	r4, [r3, #0]
	vPortEnableVFP();
 80109d6:	f7ff fead 	bl	8010734 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 80109da:	4a0f      	ldr	r2, [pc, #60]	; (8010a18 <xPortStartScheduler+0x104>)
 80109dc:	6813      	ldr	r3, [r2, #0]
 80109de:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 80109e2:	6013      	str	r3, [r2, #0]
	prvPortStartFirstTask();
 80109e4:	f7ff fe92 	bl	801070c <prvPortStartFirstTask>
	vTaskSwitchContext();
 80109e8:	f001 f8d8 	bl	8011b9c <vTaskSwitchContext>
	prvTaskExitError();
 80109ec:	f7ff feac 	bl	8010748 <prvTaskExitError>
}
 80109f0:	4620      	mov	r0, r4
 80109f2:	b002      	add	sp, #8
 80109f4:	bd10      	pop	{r4, pc}
 80109f6:	bf00      	nop
 80109f8:	e000ed00 	.word	0xe000ed00
 80109fc:	410fc271 	.word	0x410fc271
 8010a00:	410fc270 	.word	0x410fc270
 8010a04:	e000e400 	.word	0xe000e400
 8010a08:	2002b6f8 	.word	0x2002b6f8
 8010a0c:	2002b6fc 	.word	0x2002b6fc
 8010a10:	e000ed20 	.word	0xe000ed20
 8010a14:	2000005c 	.word	0x2000005c
 8010a18:	e000ef34 	.word	0xe000ef34

08010a1c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8010a1c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8010a20:	2b0f      	cmp	r3, #15
 8010a22:	d90e      	bls.n	8010a42 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8010a24:	4a10      	ldr	r2, [pc, #64]	; (8010a68 <vPortValidateInterruptPriority+0x4c>)
 8010a26:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8010a28:	4a10      	ldr	r2, [pc, #64]	; (8010a6c <vPortValidateInterruptPriority+0x50>)
 8010a2a:	7812      	ldrb	r2, [r2, #0]
 8010a2c:	429a      	cmp	r2, r3
 8010a2e:	d908      	bls.n	8010a42 <vPortValidateInterruptPriority+0x26>
 8010a30:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010a34:	f383 8811 	msr	BASEPRI, r3
 8010a38:	f3bf 8f6f 	isb	sy
 8010a3c:	f3bf 8f4f 	dsb	sy
 8010a40:	e7fe      	b.n	8010a40 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8010a42:	4b0b      	ldr	r3, [pc, #44]	; (8010a70 <vPortValidateInterruptPriority+0x54>)
 8010a44:	4a0b      	ldr	r2, [pc, #44]	; (8010a74 <vPortValidateInterruptPriority+0x58>)
 8010a46:	681b      	ldr	r3, [r3, #0]
 8010a48:	6812      	ldr	r2, [r2, #0]
 8010a4a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8010a4e:	4293      	cmp	r3, r2
 8010a50:	d908      	bls.n	8010a64 <vPortValidateInterruptPriority+0x48>
 8010a52:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010a56:	f383 8811 	msr	BASEPRI, r3
 8010a5a:	f3bf 8f6f 	isb	sy
 8010a5e:	f3bf 8f4f 	dsb	sy
 8010a62:	e7fe      	b.n	8010a62 <vPortValidateInterruptPriority+0x46>
	}
 8010a64:	4770      	bx	lr
 8010a66:	bf00      	nop
 8010a68:	e000e3f0 	.word	0xe000e3f0
 8010a6c:	2002b6f8 	.word	0x2002b6f8
 8010a70:	e000ed0c 	.word	0xe000ed0c
 8010a74:	2002b6fc 	.word	0x2002b6fc

08010a78 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8010a78:	b510      	push	{r4, lr}
 8010a7a:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8010a7c:	f7ff feb2 	bl	80107e4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8010a80:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8010a82:	f7ff fed1 	bl	8010828 <vPortExitCritical>

	return xReturn;
}
 8010a86:	fab4 f084 	clz	r0, r4
 8010a8a:	0940      	lsrs	r0, r0, #5
 8010a8c:	bd10      	pop	{r4, pc}

08010a8e <prvCopyDataToQueue>:
{
 8010a8e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010a90:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8010a92:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010a94:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 8010a96:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8010a98:	b952      	cbnz	r2, 8010ab0 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8010a9a:	6807      	ldr	r7, [r0, #0]
 8010a9c:	bb47      	cbnz	r7, 8010af0 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8010a9e:	6880      	ldr	r0, [r0, #8]
 8010aa0:	f001 f9e2 	bl	8011e68 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8010aa4:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8010aa6:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8010aa8:	3601      	adds	r6, #1
 8010aaa:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8010aac:	4628      	mov	r0, r5
 8010aae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8010ab0:	b965      	cbnz	r5, 8010acc <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8010ab2:	6840      	ldr	r0, [r0, #4]
 8010ab4:	f017 f804 	bl	8027ac0 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010ab8:	6863      	ldr	r3, [r4, #4]
 8010aba:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8010abc:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8010abe:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010ac0:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8010ac2:	4293      	cmp	r3, r2
 8010ac4:	d3f0      	bcc.n	8010aa8 <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8010ac6:	6823      	ldr	r3, [r4, #0]
 8010ac8:	6063      	str	r3, [r4, #4]
 8010aca:	e7ed      	b.n	8010aa8 <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8010acc:	68c0      	ldr	r0, [r0, #12]
 8010ace:	f016 fff7 	bl	8027ac0 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8010ad2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8010ad4:	68e3      	ldr	r3, [r4, #12]
 8010ad6:	4251      	negs	r1, r2
 8010ad8:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8010ada:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8010adc:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8010ade:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8010ae0:	bf3e      	ittt	cc
 8010ae2:	68a3      	ldrcc	r3, [r4, #8]
 8010ae4:	185b      	addcc	r3, r3, r1
 8010ae6:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8010ae8:	2d02      	cmp	r5, #2
 8010aea:	d101      	bne.n	8010af0 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8010aec:	b116      	cbz	r6, 8010af4 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8010aee:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8010af0:	2500      	movs	r5, #0
 8010af2:	e7d9      	b.n	8010aa8 <prvCopyDataToQueue+0x1a>
 8010af4:	4635      	mov	r5, r6
 8010af6:	e7d7      	b.n	8010aa8 <prvCopyDataToQueue+0x1a>

08010af8 <prvCopyDataFromQueue>:
{
 8010af8:	4603      	mov	r3, r0
 8010afa:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8010afc:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8010afe:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8010b00:	b16a      	cbz	r2, 8010b1e <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010b02:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8010b04:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010b06:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8010b08:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8010b0a:	bf28      	it	cs
 8010b0c:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010b0e:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8010b10:	bf28      	it	cs
 8010b12:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8010b14:	68d9      	ldr	r1, [r3, #12]
}
 8010b16:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8010b1a:	f016 bfd1 	b.w	8027ac0 <memcpy>
}
 8010b1e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010b22:	4770      	bx	lr

08010b24 <prvUnlockQueue>:
{
 8010b24:	b570      	push	{r4, r5, r6, lr}
 8010b26:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8010b28:	f7ff fe5c 	bl	80107e4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010b2c:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010b30:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8010b34:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010b36:	2d00      	cmp	r5, #0
 8010b38:	dc14      	bgt.n	8010b64 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8010b3a:	23ff      	movs	r3, #255	; 0xff
 8010b3c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010b40:	f7ff fe72 	bl	8010828 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010b44:	f7ff fe4e 	bl	80107e4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010b48:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010b4c:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8010b50:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010b52:	2d00      	cmp	r5, #0
 8010b54:	dc12      	bgt.n	8010b7c <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8010b56:	23ff      	movs	r3, #255	; 0xff
 8010b58:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8010b5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8010b60:	f7ff be62 	b.w	8010828 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010b64:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8010b66:	2b00      	cmp	r3, #0
 8010b68:	d0e7      	beq.n	8010b3a <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010b6a:	4630      	mov	r0, r6
 8010b6c:	f001 f898 	bl	8011ca0 <xTaskRemoveFromEventList>
 8010b70:	b108      	cbz	r0, 8010b76 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8010b72:	f001 f921 	bl	8011db8 <vTaskMissedYield>
			--cTxLock;
 8010b76:	3d01      	subs	r5, #1
 8010b78:	b26d      	sxtb	r5, r5
 8010b7a:	e7dc      	b.n	8010b36 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010b7c:	6923      	ldr	r3, [r4, #16]
 8010b7e:	2b00      	cmp	r3, #0
 8010b80:	d0e9      	beq.n	8010b56 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010b82:	4630      	mov	r0, r6
 8010b84:	f001 f88c 	bl	8011ca0 <xTaskRemoveFromEventList>
 8010b88:	b108      	cbz	r0, 8010b8e <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 8010b8a:	f001 f915 	bl	8011db8 <vTaskMissedYield>
				--cRxLock;
 8010b8e:	3d01      	subs	r5, #1
 8010b90:	b26d      	sxtb	r5, r5
 8010b92:	e7de      	b.n	8010b52 <prvUnlockQueue+0x2e>

08010b94 <xQueueGenericReset>:
{
 8010b94:	b538      	push	{r3, r4, r5, lr}
 8010b96:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8010b98:	4604      	mov	r4, r0
 8010b9a:	b940      	cbnz	r0, 8010bae <xQueueGenericReset+0x1a>
 8010b9c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010ba0:	f383 8811 	msr	BASEPRI, r3
 8010ba4:	f3bf 8f6f 	isb	sy
 8010ba8:	f3bf 8f4f 	dsb	sy
 8010bac:	e7fe      	b.n	8010bac <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8010bae:	f7ff fe19 	bl	80107e4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010bb2:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 8010bb6:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8010bb8:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010bba:	434b      	muls	r3, r1
 8010bbc:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010bbe:	1a5b      	subs	r3, r3, r1
 8010bc0:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010bc2:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010bc4:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8010bc6:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 8010bc8:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8010bca:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8010bcc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8010bd0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8010bd4:	b995      	cbnz	r5, 8010bfc <xQueueGenericReset+0x68>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010bd6:	6923      	ldr	r3, [r4, #16]
 8010bd8:	b163      	cbz	r3, 8010bf4 <xQueueGenericReset+0x60>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010bda:	f104 0010 	add.w	r0, r4, #16
 8010bde:	f001 f85f 	bl	8011ca0 <xTaskRemoveFromEventList>
 8010be2:	b138      	cbz	r0, 8010bf4 <xQueueGenericReset+0x60>
					queueYIELD_IF_USING_PREEMPTION();
 8010be4:	4b0a      	ldr	r3, [pc, #40]	; (8010c10 <xQueueGenericReset+0x7c>)
 8010be6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010bea:	601a      	str	r2, [r3, #0]
 8010bec:	f3bf 8f4f 	dsb	sy
 8010bf0:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8010bf4:	f7ff fe18 	bl	8010828 <vPortExitCritical>
}
 8010bf8:	2001      	movs	r0, #1
 8010bfa:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8010bfc:	f104 0010 	add.w	r0, r4, #16
 8010c00:	f7ff fd42 	bl	8010688 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8010c04:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8010c08:	f7ff fd3e 	bl	8010688 <vListInitialise>
 8010c0c:	e7f2      	b.n	8010bf4 <xQueueGenericReset+0x60>
 8010c0e:	bf00      	nop
 8010c10:	e000ed04 	.word	0xe000ed04

08010c14 <xQueueGenericCreateStatic>:
	{
 8010c14:	b513      	push	{r0, r1, r4, lr}
 8010c16:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8010c18:	b940      	cbnz	r0, 8010c2c <xQueueGenericCreateStatic+0x18>
 8010c1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010c1e:	f383 8811 	msr	BASEPRI, r3
 8010c22:	f3bf 8f6f 	isb	sy
 8010c26:	f3bf 8f4f 	dsb	sy
 8010c2a:	e7fe      	b.n	8010c2a <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 8010c2c:	b943      	cbnz	r3, 8010c40 <xQueueGenericCreateStatic+0x2c>
 8010c2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010c32:	f383 8811 	msr	BASEPRI, r3
 8010c36:	f3bf 8f6f 	isb	sy
 8010c3a:	f3bf 8f4f 	dsb	sy
 8010c3e:	e7fe      	b.n	8010c3e <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8010c40:	b14a      	cbz	r2, 8010c56 <xQueueGenericCreateStatic+0x42>
 8010c42:	b991      	cbnz	r1, 8010c6a <xQueueGenericCreateStatic+0x56>
 8010c44:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010c48:	f383 8811 	msr	BASEPRI, r3
 8010c4c:	f3bf 8f6f 	isb	sy
 8010c50:	f3bf 8f4f 	dsb	sy
 8010c54:	e7fe      	b.n	8010c54 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8010c56:	b141      	cbz	r1, 8010c6a <xQueueGenericCreateStatic+0x56>
 8010c58:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010c5c:	f383 8811 	msr	BASEPRI, r3
 8010c60:	f3bf 8f6f 	isb	sy
 8010c64:	f3bf 8f4f 	dsb	sy
 8010c68:	e7fe      	b.n	8010c68 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8010c6a:	2350      	movs	r3, #80	; 0x50
 8010c6c:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8010c6e:	9b01      	ldr	r3, [sp, #4]
 8010c70:	2b50      	cmp	r3, #80	; 0x50
 8010c72:	d008      	beq.n	8010c86 <xQueueGenericCreateStatic+0x72>
 8010c74:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010c78:	f383 8811 	msr	BASEPRI, r3
 8010c7c:	f3bf 8f6f 	isb	sy
 8010c80:	f3bf 8f4f 	dsb	sy
 8010c84:	e7fe      	b.n	8010c84 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 8010c86:	2900      	cmp	r1, #0
 8010c88:	bf08      	it	eq
 8010c8a:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8010c8c:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8010c8e:	6022      	str	r2, [r4, #0]
 8010c90:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8010c92:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8010c96:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8010c9a:	4619      	mov	r1, r3
 8010c9c:	4620      	mov	r0, r4
 8010c9e:	f7ff ff79 	bl	8010b94 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8010ca2:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8010ca6:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 8010caa:	4620      	mov	r0, r4
 8010cac:	b002      	add	sp, #8
 8010cae:	bd10      	pop	{r4, pc}

08010cb0 <xQueueGenericCreate>:
	{
 8010cb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010cb2:	460d      	mov	r5, r1
 8010cb4:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8010cb6:	4606      	mov	r6, r0
 8010cb8:	b940      	cbnz	r0, 8010ccc <xQueueGenericCreate+0x1c>
 8010cba:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010cbe:	f383 8811 	msr	BASEPRI, r3
 8010cc2:	f3bf 8f6f 	isb	sy
 8010cc6:	f3bf 8f4f 	dsb	sy
 8010cca:	e7fe      	b.n	8010cca <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010ccc:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8010cce:	3050      	adds	r0, #80	; 0x50
 8010cd0:	f7ff fc0a 	bl	80104e8 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8010cd4:	4604      	mov	r4, r0
 8010cd6:	b170      	cbz	r0, 8010cf6 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8010cd8:	2300      	movs	r3, #0
 8010cda:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8010cde:	b165      	cbz	r5, 8010cfa <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010ce0:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8010ce4:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 8010ce8:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8010cea:	2101      	movs	r1, #1
 8010cec:	4620      	mov	r0, r4
 8010cee:	f7ff ff51 	bl	8010b94 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8010cf2:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8010cf6:	4620      	mov	r0, r4
 8010cf8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010cfa:	4603      	mov	r3, r0
 8010cfc:	e7f2      	b.n	8010ce4 <xQueueGenericCreate+0x34>

08010cfe <xQueueCreateCountingSemaphoreStatic>:
	{
 8010cfe:	b513      	push	{r0, r1, r4, lr}
 8010d00:	4613      	mov	r3, r2
 8010d02:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8010d04:	b940      	cbnz	r0, 8010d18 <xQueueCreateCountingSemaphoreStatic+0x1a>
 8010d06:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010d0a:	f383 8811 	msr	BASEPRI, r3
 8010d0e:	f3bf 8f6f 	isb	sy
 8010d12:	f3bf 8f4f 	dsb	sy
 8010d16:	e7fe      	b.n	8010d16 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8010d18:	4288      	cmp	r0, r1
 8010d1a:	d208      	bcs.n	8010d2e <xQueueCreateCountingSemaphoreStatic+0x30>
 8010d1c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010d20:	f383 8811 	msr	BASEPRI, r3
 8010d24:	f3bf 8f6f 	isb	sy
 8010d28:	f3bf 8f4f 	dsb	sy
 8010d2c:	e7fe      	b.n	8010d2c <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8010d2e:	2202      	movs	r2, #2
 8010d30:	9200      	str	r2, [sp, #0]
 8010d32:	2200      	movs	r2, #0
 8010d34:	4611      	mov	r1, r2
 8010d36:	f7ff ff6d 	bl	8010c14 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 8010d3a:	b100      	cbz	r0, 8010d3e <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8010d3c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8010d3e:	b002      	add	sp, #8
 8010d40:	bd10      	pop	{r4, pc}

08010d42 <xQueueCreateCountingSemaphore>:
	{
 8010d42:	b510      	push	{r4, lr}
 8010d44:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8010d46:	b940      	cbnz	r0, 8010d5a <xQueueCreateCountingSemaphore+0x18>
 8010d48:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010d4c:	f383 8811 	msr	BASEPRI, r3
 8010d50:	f3bf 8f6f 	isb	sy
 8010d54:	f3bf 8f4f 	dsb	sy
 8010d58:	e7fe      	b.n	8010d58 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 8010d5a:	4288      	cmp	r0, r1
 8010d5c:	d208      	bcs.n	8010d70 <xQueueCreateCountingSemaphore+0x2e>
 8010d5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010d62:	f383 8811 	msr	BASEPRI, r3
 8010d66:	f3bf 8f6f 	isb	sy
 8010d6a:	f3bf 8f4f 	dsb	sy
 8010d6e:	e7fe      	b.n	8010d6e <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8010d70:	2202      	movs	r2, #2
 8010d72:	2100      	movs	r1, #0
 8010d74:	f7ff ff9c 	bl	8010cb0 <xQueueGenericCreate>
		if( xHandle != NULL )
 8010d78:	b100      	cbz	r0, 8010d7c <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8010d7a:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8010d7c:	bd10      	pop	{r4, pc}
	...

08010d80 <xQueueGenericSend>:
{
 8010d80:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8010d84:	4688      	mov	r8, r1
 8010d86:	9201      	str	r2, [sp, #4]
 8010d88:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8010d8a:	4604      	mov	r4, r0
 8010d8c:	b940      	cbnz	r0, 8010da0 <xQueueGenericSend+0x20>
 8010d8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010d92:	f383 8811 	msr	BASEPRI, r3
 8010d96:	f3bf 8f6f 	isb	sy
 8010d9a:	f3bf 8f4f 	dsb	sy
 8010d9e:	e7fe      	b.n	8010d9e <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010da0:	b951      	cbnz	r1, 8010db8 <xQueueGenericSend+0x38>
 8010da2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8010da4:	b143      	cbz	r3, 8010db8 <xQueueGenericSend+0x38>
 8010da6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010daa:	f383 8811 	msr	BASEPRI, r3
 8010dae:	f3bf 8f6f 	isb	sy
 8010db2:	f3bf 8f4f 	dsb	sy
 8010db6:	e7fe      	b.n	8010db6 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8010db8:	2f02      	cmp	r7, #2
 8010dba:	d10b      	bne.n	8010dd4 <xQueueGenericSend+0x54>
 8010dbc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010dbe:	2b01      	cmp	r3, #1
 8010dc0:	d008      	beq.n	8010dd4 <xQueueGenericSend+0x54>
 8010dc2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010dc6:	f383 8811 	msr	BASEPRI, r3
 8010dca:	f3bf 8f6f 	isb	sy
 8010dce:	f3bf 8f4f 	dsb	sy
 8010dd2:	e7fe      	b.n	8010dd2 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010dd4:	f000 fff6 	bl	8011dc4 <xTaskGetSchedulerState>
 8010dd8:	4606      	mov	r6, r0
 8010dda:	b950      	cbnz	r0, 8010df2 <xQueueGenericSend+0x72>
 8010ddc:	9b01      	ldr	r3, [sp, #4]
 8010dde:	b14b      	cbz	r3, 8010df4 <xQueueGenericSend+0x74>
 8010de0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010de4:	f383 8811 	msr	BASEPRI, r3
 8010de8:	f3bf 8f6f 	isb	sy
 8010dec:	f3bf 8f4f 	dsb	sy
 8010df0:	e7fe      	b.n	8010df0 <xQueueGenericSend+0x70>
 8010df2:	2600      	movs	r6, #0
					portYIELD_WITHIN_API();
 8010df4:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 8010ee0 <xQueueGenericSend+0x160>
		prvLockQueue( pxQueue );
 8010df8:	f04f 0900 	mov.w	r9, #0
 8010dfc:	e037      	b.n	8010e6e <xQueueGenericSend+0xee>
				if( xTicksToWait == ( TickType_t ) 0 )
 8010dfe:	9d01      	ldr	r5, [sp, #4]
 8010e00:	b91d      	cbnz	r5, 8010e0a <xQueueGenericSend+0x8a>
					taskEXIT_CRITICAL();
 8010e02:	f7ff fd11 	bl	8010828 <vPortExitCritical>
			return errQUEUE_FULL;
 8010e06:	2000      	movs	r0, #0
 8010e08:	e050      	b.n	8010eac <xQueueGenericSend+0x12c>
				else if( xEntryTimeSet == pdFALSE )
 8010e0a:	b916      	cbnz	r6, 8010e12 <xQueueGenericSend+0x92>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8010e0c:	a802      	add	r0, sp, #8
 8010e0e:	f000 ff8b 	bl	8011d28 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8010e12:	f7ff fd09 	bl	8010828 <vPortExitCritical>
		vTaskSuspendAll();
 8010e16:	f000 fd19 	bl	801184c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8010e1a:	f7ff fce3 	bl	80107e4 <vPortEnterCritical>
 8010e1e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010e22:	2bff      	cmp	r3, #255	; 0xff
 8010e24:	bf08      	it	eq
 8010e26:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8010e2a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010e2e:	2bff      	cmp	r3, #255	; 0xff
 8010e30:	bf08      	it	eq
 8010e32:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8010e36:	f7ff fcf7 	bl	8010828 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8010e3a:	a901      	add	r1, sp, #4
 8010e3c:	a802      	add	r0, sp, #8
 8010e3e:	f000 ff7f 	bl	8011d40 <xTaskCheckForTimeOut>
 8010e42:	2800      	cmp	r0, #0
 8010e44:	d146      	bne.n	8010ed4 <xQueueGenericSend+0x154>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8010e46:	f7ff fccd 	bl	80107e4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8010e4a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8010e4c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010e4e:	429a      	cmp	r2, r3
 8010e50:	d12f      	bne.n	8010eb2 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8010e52:	f7ff fce9 	bl	8010828 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8010e56:	9901      	ldr	r1, [sp, #4]
 8010e58:	f104 0010 	add.w	r0, r4, #16
 8010e5c:	f000 fee8 	bl	8011c30 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8010e60:	4620      	mov	r0, r4
 8010e62:	f7ff fe5f 	bl	8010b24 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8010e66:	f000 fd95 	bl	8011994 <xTaskResumeAll>
 8010e6a:	b350      	cbz	r0, 8010ec2 <xQueueGenericSend+0x142>
 8010e6c:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8010e6e:	f7ff fcb9 	bl	80107e4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8010e72:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8010e74:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010e76:	429a      	cmp	r2, r3
 8010e78:	d301      	bcc.n	8010e7e <xQueueGenericSend+0xfe>
 8010e7a:	2f02      	cmp	r7, #2
 8010e7c:	d1bf      	bne.n	8010dfe <xQueueGenericSend+0x7e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8010e7e:	463a      	mov	r2, r7
 8010e80:	4641      	mov	r1, r8
 8010e82:	4620      	mov	r0, r4
 8010e84:	f7ff fe03 	bl	8010a8e <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010e88:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8010e8a:	b11b      	cbz	r3, 8010e94 <xQueueGenericSend+0x114>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010e8c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8010e90:	f000 ff06 	bl	8011ca0 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8010e94:	b138      	cbz	r0, 8010ea6 <xQueueGenericSend+0x126>
						queueYIELD_IF_USING_PREEMPTION();
 8010e96:	4b12      	ldr	r3, [pc, #72]	; (8010ee0 <xQueueGenericSend+0x160>)
 8010e98:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010e9c:	601a      	str	r2, [r3, #0]
 8010e9e:	f3bf 8f4f 	dsb	sy
 8010ea2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8010ea6:	f7ff fcbf 	bl	8010828 <vPortExitCritical>
				return pdPASS;
 8010eaa:	2001      	movs	r0, #1
}
 8010eac:	b004      	add	sp, #16
 8010eae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	taskEXIT_CRITICAL();
 8010eb2:	f7ff fcb9 	bl	8010828 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8010eb6:	4620      	mov	r0, r4
 8010eb8:	f7ff fe34 	bl	8010b24 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8010ebc:	f000 fd6a 	bl	8011994 <xTaskResumeAll>
 8010ec0:	e7d4      	b.n	8010e6c <xQueueGenericSend+0xec>
					portYIELD_WITHIN_API();
 8010ec2:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8010ec6:	f8ca 3000 	str.w	r3, [sl]
 8010eca:	f3bf 8f4f 	dsb	sy
 8010ece:	f3bf 8f6f 	isb	sy
 8010ed2:	e7cb      	b.n	8010e6c <xQueueGenericSend+0xec>
			prvUnlockQueue( pxQueue );
 8010ed4:	4620      	mov	r0, r4
 8010ed6:	f7ff fe25 	bl	8010b24 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8010eda:	f000 fd5b 	bl	8011994 <xTaskResumeAll>
 8010ede:	e792      	b.n	8010e06 <xQueueGenericSend+0x86>
 8010ee0:	e000ed04 	.word	0xe000ed04

08010ee4 <xQueueGenericSendFromISR>:
{
 8010ee4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010ee8:	4689      	mov	r9, r1
 8010eea:	4690      	mov	r8, r2
 8010eec:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8010eee:	4604      	mov	r4, r0
 8010ef0:	b940      	cbnz	r0, 8010f04 <xQueueGenericSendFromISR+0x20>
 8010ef2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010ef6:	f383 8811 	msr	BASEPRI, r3
 8010efa:	f3bf 8f6f 	isb	sy
 8010efe:	f3bf 8f4f 	dsb	sy
 8010f02:	e7fe      	b.n	8010f02 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010f04:	b951      	cbnz	r1, 8010f1c <xQueueGenericSendFromISR+0x38>
 8010f06:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8010f08:	b143      	cbz	r3, 8010f1c <xQueueGenericSendFromISR+0x38>
 8010f0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010f0e:	f383 8811 	msr	BASEPRI, r3
 8010f12:	f3bf 8f6f 	isb	sy
 8010f16:	f3bf 8f4f 	dsb	sy
 8010f1a:	e7fe      	b.n	8010f1a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8010f1c:	2f02      	cmp	r7, #2
 8010f1e:	d10b      	bne.n	8010f38 <xQueueGenericSendFromISR+0x54>
 8010f20:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010f22:	2b01      	cmp	r3, #1
 8010f24:	d008      	beq.n	8010f38 <xQueueGenericSendFromISR+0x54>
 8010f26:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010f2a:	f383 8811 	msr	BASEPRI, r3
 8010f2e:	f3bf 8f6f 	isb	sy
 8010f32:	f3bf 8f4f 	dsb	sy
 8010f36:	e7fe      	b.n	8010f36 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8010f38:	f7ff fd70 	bl	8010a1c <vPortValidateInterruptPriority>
	__asm volatile
 8010f3c:	f3ef 8611 	mrs	r6, BASEPRI
 8010f40:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010f44:	f383 8811 	msr	BASEPRI, r3
 8010f48:	f3bf 8f6f 	isb	sy
 8010f4c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8010f50:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8010f52:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010f54:	429a      	cmp	r2, r3
 8010f56:	d301      	bcc.n	8010f5c <xQueueGenericSendFromISR+0x78>
 8010f58:	2f02      	cmp	r7, #2
 8010f5a:	d123      	bne.n	8010fa4 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 8010f5c:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010f60:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 8010f62:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8010f64:	463a      	mov	r2, r7
 8010f66:	4649      	mov	r1, r9
 8010f68:	4620      	mov	r0, r4
 8010f6a:	f7ff fd90 	bl	8010a8e <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8010f6e:	1c6b      	adds	r3, r5, #1
 8010f70:	d113      	bne.n	8010f9a <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010f72:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8010f74:	b90b      	cbnz	r3, 8010f7a <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 8010f76:	2001      	movs	r0, #1
 8010f78:	e00b      	b.n	8010f92 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010f7a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8010f7e:	f000 fe8f 	bl	8011ca0 <xTaskRemoveFromEventList>
 8010f82:	2800      	cmp	r0, #0
 8010f84:	d0f7      	beq.n	8010f76 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 8010f86:	f1b8 0f00 	cmp.w	r8, #0
 8010f8a:	d0f4      	beq.n	8010f76 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8010f8c:	2001      	movs	r0, #1
 8010f8e:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8010f92:	f386 8811 	msr	BASEPRI, r6
}
 8010f96:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8010f9a:	3501      	adds	r5, #1
 8010f9c:	b26d      	sxtb	r5, r5
 8010f9e:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8010fa2:	e7e8      	b.n	8010f76 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 8010fa4:	2000      	movs	r0, #0
 8010fa6:	e7f4      	b.n	8010f92 <xQueueGenericSendFromISR+0xae>

08010fa8 <xQueueGiveFromISR>:
{
 8010fa8:	b570      	push	{r4, r5, r6, lr}
 8010faa:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8010fac:	4604      	mov	r4, r0
 8010fae:	b940      	cbnz	r0, 8010fc2 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8010fb0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010fb4:	f383 8811 	msr	BASEPRI, r3
 8010fb8:	f3bf 8f6f 	isb	sy
 8010fbc:	f3bf 8f4f 	dsb	sy
 8010fc0:	e7fe      	b.n	8010fc0 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8010fc2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8010fc4:	b143      	cbz	r3, 8010fd8 <xQueueGiveFromISR+0x30>
 8010fc6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010fca:	f383 8811 	msr	BASEPRI, r3
 8010fce:	f3bf 8f6f 	isb	sy
 8010fd2:	f3bf 8f4f 	dsb	sy
 8010fd6:	e7fe      	b.n	8010fd6 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8010fd8:	6803      	ldr	r3, [r0, #0]
 8010fda:	b953      	cbnz	r3, 8010ff2 <xQueueGiveFromISR+0x4a>
 8010fdc:	6883      	ldr	r3, [r0, #8]
 8010fde:	b143      	cbz	r3, 8010ff2 <xQueueGiveFromISR+0x4a>
 8010fe0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010fe4:	f383 8811 	msr	BASEPRI, r3
 8010fe8:	f3bf 8f6f 	isb	sy
 8010fec:	f3bf 8f4f 	dsb	sy
 8010ff0:	e7fe      	b.n	8010ff0 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8010ff2:	f7ff fd13 	bl	8010a1c <vPortValidateInterruptPriority>
	__asm volatile
 8010ff6:	f3ef 8611 	mrs	r6, BASEPRI
 8010ffa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010ffe:	f383 8811 	msr	BASEPRI, r3
 8011002:	f3bf 8f6f 	isb	sy
 8011006:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 801100a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 801100c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801100e:	4293      	cmp	r3, r2
 8011010:	d91c      	bls.n	801104c <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8011012:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8011016:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8011018:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 801101a:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 801101c:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 801101e:	d110      	bne.n	8011042 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8011020:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8011022:	b90b      	cbnz	r3, 8011028 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8011024:	2001      	movs	r0, #1
 8011026:	e009      	b.n	801103c <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8011028:	f104 0024 	add.w	r0, r4, #36	; 0x24
 801102c:	f000 fe38 	bl	8011ca0 <xTaskRemoveFromEventList>
 8011030:	2800      	cmp	r0, #0
 8011032:	d0f7      	beq.n	8011024 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8011034:	2d00      	cmp	r5, #0
 8011036:	d0f5      	beq.n	8011024 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8011038:	2001      	movs	r0, #1
 801103a:	6028      	str	r0, [r5, #0]
	__asm volatile
 801103c:	f386 8811 	msr	BASEPRI, r6
}
 8011040:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8011042:	3301      	adds	r3, #1
 8011044:	b25b      	sxtb	r3, r3
 8011046:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801104a:	e7eb      	b.n	8011024 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 801104c:	2000      	movs	r0, #0
 801104e:	e7f5      	b.n	801103c <xQueueGiveFromISR+0x94>

08011050 <xQueueReceive>:
{
 8011050:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011054:	b085      	sub	sp, #20
 8011056:	460f      	mov	r7, r1
 8011058:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 801105a:	4604      	mov	r4, r0
 801105c:	b940      	cbnz	r0, 8011070 <xQueueReceive+0x20>
	__asm volatile
 801105e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011062:	f383 8811 	msr	BASEPRI, r3
 8011066:	f3bf 8f6f 	isb	sy
 801106a:	f3bf 8f4f 	dsb	sy
 801106e:	e7fe      	b.n	801106e <xQueueReceive+0x1e>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8011070:	b951      	cbnz	r1, 8011088 <xQueueReceive+0x38>
 8011072:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8011074:	b143      	cbz	r3, 8011088 <xQueueReceive+0x38>
 8011076:	f04f 0350 	mov.w	r3, #80	; 0x50
 801107a:	f383 8811 	msr	BASEPRI, r3
 801107e:	f3bf 8f6f 	isb	sy
 8011082:	f3bf 8f4f 	dsb	sy
 8011086:	e7fe      	b.n	8011086 <xQueueReceive+0x36>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8011088:	f000 fe9c 	bl	8011dc4 <xTaskGetSchedulerState>
 801108c:	4606      	mov	r6, r0
 801108e:	b950      	cbnz	r0, 80110a6 <xQueueReceive+0x56>
 8011090:	9b01      	ldr	r3, [sp, #4]
 8011092:	b14b      	cbz	r3, 80110a8 <xQueueReceive+0x58>
 8011094:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011098:	f383 8811 	msr	BASEPRI, r3
 801109c:	f3bf 8f6f 	isb	sy
 80110a0:	f3bf 8f4f 	dsb	sy
 80110a4:	e7fe      	b.n	80110a4 <xQueueReceive+0x54>
 80110a6:	2600      	movs	r6, #0
					portYIELD_WITHIN_API();
 80110a8:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 801118c <xQueueReceive+0x13c>
		prvLockQueue( pxQueue );
 80110ac:	f04f 0800 	mov.w	r8, #0
 80110b0:	e03b      	b.n	801112a <xQueueReceive+0xda>
				if( xTicksToWait == ( TickType_t ) 0 )
 80110b2:	9d01      	ldr	r5, [sp, #4]
 80110b4:	b91d      	cbnz	r5, 80110be <xQueueReceive+0x6e>
					taskEXIT_CRITICAL();
 80110b6:	f7ff fbb7 	bl	8010828 <vPortExitCritical>
				return errQUEUE_EMPTY;
 80110ba:	2000      	movs	r0, #0
 80110bc:	e052      	b.n	8011164 <xQueueReceive+0x114>
				else if( xEntryTimeSet == pdFALSE )
 80110be:	b916      	cbnz	r6, 80110c6 <xQueueReceive+0x76>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80110c0:	a802      	add	r0, sp, #8
 80110c2:	f000 fe31 	bl	8011d28 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80110c6:	f7ff fbaf 	bl	8010828 <vPortExitCritical>
		vTaskSuspendAll();
 80110ca:	f000 fbbf 	bl	801184c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80110ce:	f7ff fb89 	bl	80107e4 <vPortEnterCritical>
 80110d2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80110d6:	2bff      	cmp	r3, #255	; 0xff
 80110d8:	bf08      	it	eq
 80110da:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 80110de:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80110e2:	2bff      	cmp	r3, #255	; 0xff
 80110e4:	bf08      	it	eq
 80110e6:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 80110ea:	f7ff fb9d 	bl	8010828 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80110ee:	a901      	add	r1, sp, #4
 80110f0:	a802      	add	r0, sp, #8
 80110f2:	f000 fe25 	bl	8011d40 <xTaskCheckForTimeOut>
 80110f6:	2800      	cmp	r0, #0
 80110f8:	d13d      	bne.n	8011176 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80110fa:	4620      	mov	r0, r4
 80110fc:	f7ff fcbc 	bl	8010a78 <prvIsQueueEmpty>
 8011100:	b398      	cbz	r0, 801116a <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8011102:	9901      	ldr	r1, [sp, #4]
 8011104:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8011108:	f000 fd92 	bl	8011c30 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 801110c:	4620      	mov	r0, r4
 801110e:	f7ff fd09 	bl	8010b24 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8011112:	f000 fc3f 	bl	8011994 <xTaskResumeAll>
 8011116:	b938      	cbnz	r0, 8011128 <xQueueReceive+0xd8>
					portYIELD_WITHIN_API();
 8011118:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 801111c:	f8c9 3000 	str.w	r3, [r9]
 8011120:	f3bf 8f4f 	dsb	sy
 8011124:	f3bf 8f6f 	isb	sy
 8011128:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 801112a:	f7ff fb5b 	bl	80107e4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 801112e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8011130:	2d00      	cmp	r5, #0
 8011132:	d0be      	beq.n	80110b2 <xQueueReceive+0x62>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8011134:	4639      	mov	r1, r7
 8011136:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8011138:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 801113a:	f7ff fcdd 	bl	8010af8 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 801113e:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8011140:	6923      	ldr	r3, [r4, #16]
 8011142:	b163      	cbz	r3, 801115e <xQueueReceive+0x10e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8011144:	f104 0010 	add.w	r0, r4, #16
 8011148:	f000 fdaa 	bl	8011ca0 <xTaskRemoveFromEventList>
 801114c:	b138      	cbz	r0, 801115e <xQueueReceive+0x10e>
						queueYIELD_IF_USING_PREEMPTION();
 801114e:	4b0f      	ldr	r3, [pc, #60]	; (801118c <xQueueReceive+0x13c>)
 8011150:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8011154:	601a      	str	r2, [r3, #0]
 8011156:	f3bf 8f4f 	dsb	sy
 801115a:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 801115e:	f7ff fb63 	bl	8010828 <vPortExitCritical>
				return pdPASS;
 8011162:	2001      	movs	r0, #1
}
 8011164:	b005      	add	sp, #20
 8011166:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				prvUnlockQueue( pxQueue );
 801116a:	4620      	mov	r0, r4
 801116c:	f7ff fcda 	bl	8010b24 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8011170:	f000 fc10 	bl	8011994 <xTaskResumeAll>
 8011174:	e7d8      	b.n	8011128 <xQueueReceive+0xd8>
			prvUnlockQueue( pxQueue );
 8011176:	4620      	mov	r0, r4
 8011178:	f7ff fcd4 	bl	8010b24 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 801117c:	f000 fc0a 	bl	8011994 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8011180:	4620      	mov	r0, r4
 8011182:	f7ff fc79 	bl	8010a78 <prvIsQueueEmpty>
 8011186:	2800      	cmp	r0, #0
 8011188:	d0ce      	beq.n	8011128 <xQueueReceive+0xd8>
 801118a:	e796      	b.n	80110ba <xQueueReceive+0x6a>
 801118c:	e000ed04 	.word	0xe000ed04

08011190 <xQueueSemaphoreTake>:
{
 8011190:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
	configASSERT( ( pxQueue ) );
 8011194:	4604      	mov	r4, r0
{
 8011196:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8011198:	b940      	cbnz	r0, 80111ac <xQueueSemaphoreTake+0x1c>
 801119a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801119e:	f383 8811 	msr	BASEPRI, r3
 80111a2:	f3bf 8f6f 	isb	sy
 80111a6:	f3bf 8f4f 	dsb	sy
 80111aa:	e7fe      	b.n	80111aa <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 80111ac:	6c05      	ldr	r5, [r0, #64]	; 0x40
 80111ae:	b145      	cbz	r5, 80111c2 <xQueueSemaphoreTake+0x32>
 80111b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80111b4:	f383 8811 	msr	BASEPRI, r3
 80111b8:	f3bf 8f6f 	isb	sy
 80111bc:	f3bf 8f4f 	dsb	sy
 80111c0:	e7fe      	b.n	80111c0 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80111c2:	f000 fdff 	bl	8011dc4 <xTaskGetSchedulerState>
 80111c6:	4606      	mov	r6, r0
 80111c8:	b950      	cbnz	r0, 80111e0 <xQueueSemaphoreTake+0x50>
 80111ca:	9b01      	ldr	r3, [sp, #4]
 80111cc:	b16b      	cbz	r3, 80111ea <xQueueSemaphoreTake+0x5a>
 80111ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80111d2:	f383 8811 	msr	BASEPRI, r3
 80111d6:	f3bf 8f6f 	isb	sy
 80111da:	f3bf 8f4f 	dsb	sy
 80111de:	e7fe      	b.n	80111de <xQueueSemaphoreTake+0x4e>
 80111e0:	462e      	mov	r6, r5
					portYIELD_WITHIN_API();
 80111e2:	f8df 8130 	ldr.w	r8, [pc, #304]	; 8011314 <xQueueSemaphoreTake+0x184>
		prvLockQueue( pxQueue );
 80111e6:	2700      	movs	r7, #0
 80111e8:	e051      	b.n	801128e <xQueueSemaphoreTake+0xfe>
 80111ea:	4605      	mov	r5, r0
 80111ec:	e7f9      	b.n	80111e2 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 80111ee:	9b01      	ldr	r3, [sp, #4]
 80111f0:	b963      	cbnz	r3, 801120c <xQueueSemaphoreTake+0x7c>
						configASSERT( xInheritanceOccurred == pdFALSE );
 80111f2:	b145      	cbz	r5, 8011206 <xQueueSemaphoreTake+0x76>
 80111f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80111f8:	f383 8811 	msr	BASEPRI, r3
 80111fc:	f3bf 8f6f 	isb	sy
 8011200:	f3bf 8f4f 	dsb	sy
 8011204:	e7fe      	b.n	8011204 <xQueueSemaphoreTake+0x74>
					taskEXIT_CRITICAL();
 8011206:	f7ff fb0f 	bl	8010828 <vPortExitCritical>
					return errQUEUE_EMPTY;
 801120a:	e05e      	b.n	80112ca <xQueueSemaphoreTake+0x13a>
				else if( xEntryTimeSet == pdFALSE )
 801120c:	b916      	cbnz	r6, 8011214 <xQueueSemaphoreTake+0x84>
					vTaskInternalSetTimeOutState( &xTimeOut );
 801120e:	a802      	add	r0, sp, #8
 8011210:	f000 fd8a 	bl	8011d28 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8011214:	f7ff fb08 	bl	8010828 <vPortExitCritical>
		vTaskSuspendAll();
 8011218:	f000 fb18 	bl	801184c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 801121c:	f7ff fae2 	bl	80107e4 <vPortEnterCritical>
 8011220:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8011224:	2bff      	cmp	r3, #255	; 0xff
 8011226:	bf08      	it	eq
 8011228:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 801122c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8011230:	2bff      	cmp	r3, #255	; 0xff
 8011232:	bf08      	it	eq
 8011234:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8011238:	f7ff faf6 	bl	8010828 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 801123c:	a901      	add	r1, sp, #4
 801123e:	a802      	add	r0, sp, #8
 8011240:	f000 fd7e 	bl	8011d40 <xTaskCheckForTimeOut>
 8011244:	2800      	cmp	r0, #0
 8011246:	d14a      	bne.n	80112de <xQueueSemaphoreTake+0x14e>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8011248:	4620      	mov	r0, r4
 801124a:	f7ff fc15 	bl	8010a78 <prvIsQueueEmpty>
 801124e:	2800      	cmp	r0, #0
 8011250:	d03f      	beq.n	80112d2 <xQueueSemaphoreTake+0x142>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8011252:	6823      	ldr	r3, [r4, #0]
 8011254:	b93b      	cbnz	r3, 8011266 <xQueueSemaphoreTake+0xd6>
						taskENTER_CRITICAL();
 8011256:	f7ff fac5 	bl	80107e4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 801125a:	68a0      	ldr	r0, [r4, #8]
 801125c:	f000 fdc2 	bl	8011de4 <xTaskPriorityInherit>
 8011260:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8011262:	f7ff fae1 	bl	8010828 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8011266:	9901      	ldr	r1, [sp, #4]
 8011268:	f104 0024 	add.w	r0, r4, #36	; 0x24
 801126c:	f000 fce0 	bl	8011c30 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8011270:	4620      	mov	r0, r4
 8011272:	f7ff fc57 	bl	8010b24 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8011276:	f000 fb8d 	bl	8011994 <xTaskResumeAll>
 801127a:	b938      	cbnz	r0, 801128c <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 801127c:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8011280:	f8c8 3000 	str.w	r3, [r8]
 8011284:	f3bf 8f4f 	dsb	sy
 8011288:	f3bf 8f6f 	isb	sy
 801128c:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 801128e:	f7ff faa9 	bl	80107e4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8011292:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8011294:	2b00      	cmp	r3, #0
 8011296:	d0aa      	beq.n	80111ee <xQueueSemaphoreTake+0x5e>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8011298:	3b01      	subs	r3, #1
 801129a:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 801129c:	6823      	ldr	r3, [r4, #0]
 801129e:	b913      	cbnz	r3, 80112a6 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 80112a0:	f000 fe78 	bl	8011f94 <pvTaskIncrementMutexHeldCount>
 80112a4:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80112a6:	6923      	ldr	r3, [r4, #16]
 80112a8:	b163      	cbz	r3, 80112c4 <xQueueSemaphoreTake+0x134>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80112aa:	f104 0010 	add.w	r0, r4, #16
 80112ae:	f000 fcf7 	bl	8011ca0 <xTaskRemoveFromEventList>
 80112b2:	b138      	cbz	r0, 80112c4 <xQueueSemaphoreTake+0x134>
						queueYIELD_IF_USING_PREEMPTION();
 80112b4:	4b17      	ldr	r3, [pc, #92]	; (8011314 <xQueueSemaphoreTake+0x184>)
 80112b6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80112ba:	601a      	str	r2, [r3, #0]
 80112bc:	f3bf 8f4f 	dsb	sy
 80112c0:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80112c4:	f7ff fab0 	bl	8010828 <vPortExitCritical>
				return pdPASS;
 80112c8:	2501      	movs	r5, #1
}
 80112ca:	4628      	mov	r0, r5
 80112cc:	b004      	add	sp, #16
 80112ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 80112d2:	4620      	mov	r0, r4
 80112d4:	f7ff fc26 	bl	8010b24 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80112d8:	f000 fb5c 	bl	8011994 <xTaskResumeAll>
 80112dc:	e7d6      	b.n	801128c <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 80112de:	4620      	mov	r0, r4
 80112e0:	f7ff fc20 	bl	8010b24 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80112e4:	f000 fb56 	bl	8011994 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80112e8:	4620      	mov	r0, r4
 80112ea:	f7ff fbc5 	bl	8010a78 <prvIsQueueEmpty>
 80112ee:	2800      	cmp	r0, #0
 80112f0:	d0cc      	beq.n	801128c <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 80112f2:	2d00      	cmp	r5, #0
 80112f4:	d0e9      	beq.n	80112ca <xQueueSemaphoreTake+0x13a>
						taskENTER_CRITICAL();
 80112f6:	f7ff fa75 	bl	80107e4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 80112fa:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80112fc:	b119      	cbz	r1, 8011306 <xQueueSemaphoreTake+0x176>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 80112fe:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8011300:	6819      	ldr	r1, [r3, #0]
 8011302:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8011306:	68a0      	ldr	r0, [r4, #8]
 8011308:	f000 fdf2 	bl	8011ef0 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 801130c:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 801130e:	f7ff fa8b 	bl	8010828 <vPortExitCritical>
 8011312:	e7da      	b.n	80112ca <xQueueSemaphoreTake+0x13a>
 8011314:	e000ed04 	.word	0xe000ed04

08011318 <xQueueReceiveFromISR>:
{
 8011318:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801131c:	4689      	mov	r9, r1
 801131e:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8011320:	4605      	mov	r5, r0
 8011322:	b940      	cbnz	r0, 8011336 <xQueueReceiveFromISR+0x1e>
 8011324:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011328:	f383 8811 	msr	BASEPRI, r3
 801132c:	f3bf 8f6f 	isb	sy
 8011330:	f3bf 8f4f 	dsb	sy
 8011334:	e7fe      	b.n	8011334 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8011336:	b951      	cbnz	r1, 801134e <xQueueReceiveFromISR+0x36>
 8011338:	6c03      	ldr	r3, [r0, #64]	; 0x40
 801133a:	b143      	cbz	r3, 801134e <xQueueReceiveFromISR+0x36>
 801133c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011340:	f383 8811 	msr	BASEPRI, r3
 8011344:	f3bf 8f6f 	isb	sy
 8011348:	f3bf 8f4f 	dsb	sy
 801134c:	e7fe      	b.n	801134c <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 801134e:	f7ff fb65 	bl	8010a1c <vPortValidateInterruptPriority>
	__asm volatile
 8011352:	f3ef 8711 	mrs	r7, BASEPRI
 8011356:	f04f 0350 	mov.w	r3, #80	; 0x50
 801135a:	f383 8811 	msr	BASEPRI, r3
 801135e:	f3bf 8f6f 	isb	sy
 8011362:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8011366:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8011368:	b31c      	cbz	r4, 80113b2 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 801136a:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 801136e:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 8011370:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8011372:	4628      	mov	r0, r5
 8011374:	f7ff fbc0 	bl	8010af8 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8011378:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 801137a:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 801137c:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 801137e:	d113      	bne.n	80113a8 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8011380:	692b      	ldr	r3, [r5, #16]
 8011382:	b90b      	cbnz	r3, 8011388 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8011384:	2001      	movs	r0, #1
 8011386:	e00b      	b.n	80113a0 <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8011388:	f105 0010 	add.w	r0, r5, #16
 801138c:	f000 fc88 	bl	8011ca0 <xTaskRemoveFromEventList>
 8011390:	2800      	cmp	r0, #0
 8011392:	d0f7      	beq.n	8011384 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8011394:	f1b8 0f00 	cmp.w	r8, #0
 8011398:	d0f4      	beq.n	8011384 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 801139a:	2001      	movs	r0, #1
 801139c:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80113a0:	f387 8811 	msr	BASEPRI, r7
}
 80113a4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80113a8:	3601      	adds	r6, #1
 80113aa:	b276      	sxtb	r6, r6
 80113ac:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 80113b0:	e7e8      	b.n	8011384 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 80113b2:	4620      	mov	r0, r4
 80113b4:	e7f4      	b.n	80113a0 <xQueueReceiveFromISR+0x88>
	...

080113b8 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 80113b8:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80113ba:	4a07      	ldr	r2, [pc, #28]	; (80113d8 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80113bc:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80113be:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 80113c2:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 80113c6:	b91d      	cbnz	r5, 80113d0 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 80113c8:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 80113cc:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 80113ce:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80113d0:	3301      	adds	r3, #1
 80113d2:	2b08      	cmp	r3, #8
 80113d4:	d1f3      	bne.n	80113be <vQueueAddToRegistry+0x6>
 80113d6:	e7fa      	b.n	80113ce <vQueueAddToRegistry+0x16>
 80113d8:	2002c264 	.word	0x2002c264

080113dc <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 80113dc:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80113de:	4909      	ldr	r1, [pc, #36]	; (8011404 <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80113e0:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80113e2:	f851 2033 	ldr.w	r2, [r1, r3, lsl #3]
 80113e6:	4282      	cmp	r2, r0
 80113e8:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 80113ec:	d106      	bne.n	80113fc <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 80113ee:	4a06      	ldr	r2, [pc, #24]	; (8011408 <vQueueUnregisterQueue+0x2c>)
 80113f0:	2100      	movs	r1, #0
 80113f2:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 80113f6:	4422      	add	r2, r4
 80113f8:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 80113fa:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80113fc:	3301      	adds	r3, #1
 80113fe:	2b08      	cmp	r3, #8
 8011400:	d1ef      	bne.n	80113e2 <vQueueUnregisterQueue+0x6>
 8011402:	e7fa      	b.n	80113fa <vQueueUnregisterQueue+0x1e>
 8011404:	2002c268 	.word	0x2002c268
 8011408:	2002c264 	.word	0x2002c264

0801140c <vQueueDelete>:
{
 801140c:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 801140e:	b940      	cbnz	r0, 8011422 <vQueueDelete+0x16>
	__asm volatile
 8011410:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011414:	f383 8811 	msr	BASEPRI, r3
 8011418:	f3bf 8f6f 	isb	sy
 801141c:	f3bf 8f4f 	dsb	sy
 8011420:	e7fe      	b.n	8011420 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 8011422:	f7ff ffdb 	bl	80113dc <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8011426:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 801142a:	b91b      	cbnz	r3, 8011434 <vQueueDelete+0x28>
}
 801142c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8011430:	f7ff b8ec 	b.w	801060c <vPortFree>
}
 8011434:	bd10      	pop	{r4, pc}

08011436 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8011436:	b570      	push	{r4, r5, r6, lr}
 8011438:	4604      	mov	r4, r0
 801143a:	460d      	mov	r5, r1
 801143c:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 801143e:	f7ff f9d1 	bl	80107e4 <vPortEnterCritical>
 8011442:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8011446:	2bff      	cmp	r3, #255	; 0xff
 8011448:	bf04      	itt	eq
 801144a:	2300      	moveq	r3, #0
 801144c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8011450:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8011454:	2bff      	cmp	r3, #255	; 0xff
 8011456:	bf04      	itt	eq
 8011458:	2300      	moveq	r3, #0
 801145a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 801145e:	f7ff f9e3 	bl	8010828 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8011462:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8011464:	b92b      	cbnz	r3, 8011472 <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8011466:	4632      	mov	r2, r6
 8011468:	4629      	mov	r1, r5
 801146a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 801146e:	f000 fbf9 	bl	8011c64 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 8011472:	4620      	mov	r0, r4
	}
 8011474:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8011478:	f7ff bb54 	b.w	8010b24 <prvUnlockQueue>

0801147c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 801147c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011480:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8011482:	f7ff f9af 	bl	80107e4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8011486:	4b2f      	ldr	r3, [pc, #188]	; (8011544 <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 8011488:	4d2f      	ldr	r5, [pc, #188]	; (8011548 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 801148a:	681a      	ldr	r2, [r3, #0]
 801148c:	4f2f      	ldr	r7, [pc, #188]	; (801154c <prvAddNewTaskToReadyList+0xd0>)
 801148e:	3201      	adds	r2, #1
 8011490:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 8011492:	682e      	ldr	r6, [r5, #0]
 8011494:	2e00      	cmp	r6, #0
 8011496:	d149      	bne.n	801152c <prvAddNewTaskToReadyList+0xb0>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8011498:	602c      	str	r4, [r5, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 801149a:	681b      	ldr	r3, [r3, #0]
 801149c:	2b01      	cmp	r3, #1
 801149e:	d11f      	bne.n	80114e0 <prvAddNewTaskToReadyList+0x64>
 80114a0:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80114a2:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80114a4:	3601      	adds	r6, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80114a6:	f7ff f8ef 	bl	8010688 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80114aa:	2e38      	cmp	r6, #56	; 0x38
 80114ac:	f108 0814 	add.w	r8, r8, #20
 80114b0:	d1f7      	bne.n	80114a2 <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 80114b2:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8011578 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 80114b6:	4e26      	ldr	r6, [pc, #152]	; (8011550 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 80114b8:	4640      	mov	r0, r8
 80114ba:	f7ff f8e5 	bl	8010688 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 80114be:	4630      	mov	r0, r6
 80114c0:	f7ff f8e2 	bl	8010688 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 80114c4:	4823      	ldr	r0, [pc, #140]	; (8011554 <prvAddNewTaskToReadyList+0xd8>)
 80114c6:	f7ff f8df 	bl	8010688 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 80114ca:	4823      	ldr	r0, [pc, #140]	; (8011558 <prvAddNewTaskToReadyList+0xdc>)
 80114cc:	f7ff f8dc 	bl	8010688 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 80114d0:	4822      	ldr	r0, [pc, #136]	; (801155c <prvAddNewTaskToReadyList+0xe0>)
 80114d2:	f7ff f8d9 	bl	8010688 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 80114d6:	4b22      	ldr	r3, [pc, #136]	; (8011560 <prvAddNewTaskToReadyList+0xe4>)
 80114d8:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 80114dc:	4b21      	ldr	r3, [pc, #132]	; (8011564 <prvAddNewTaskToReadyList+0xe8>)
 80114de:	601e      	str	r6, [r3, #0]
		uxTaskNumber++;
 80114e0:	4a21      	ldr	r2, [pc, #132]	; (8011568 <prvAddNewTaskToReadyList+0xec>)
 80114e2:	6813      	ldr	r3, [r2, #0]
 80114e4:	3301      	adds	r3, #1
 80114e6:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 80114e8:	4a20      	ldr	r2, [pc, #128]	; (801156c <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 80114ea:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 80114ec:	6811      	ldr	r1, [r2, #0]
 80114ee:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80114f0:	2014      	movs	r0, #20
 80114f2:	428b      	cmp	r3, r1
 80114f4:	fb00 7003 	mla	r0, r0, r3, r7
 80114f8:	f104 0104 	add.w	r1, r4, #4
 80114fc:	bf88      	it	hi
 80114fe:	6013      	strhi	r3, [r2, #0]
 8011500:	f7ff f8d0 	bl	80106a4 <vListInsertEnd>
	taskEXIT_CRITICAL();
 8011504:	f7ff f990 	bl	8010828 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8011508:	4b19      	ldr	r3, [pc, #100]	; (8011570 <prvAddNewTaskToReadyList+0xf4>)
 801150a:	681b      	ldr	r3, [r3, #0]
 801150c:	b163      	cbz	r3, 8011528 <prvAddNewTaskToReadyList+0xac>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 801150e:	682b      	ldr	r3, [r5, #0]
 8011510:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8011512:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011514:	429a      	cmp	r2, r3
 8011516:	d207      	bcs.n	8011528 <prvAddNewTaskToReadyList+0xac>
			taskYIELD_IF_USING_PREEMPTION();
 8011518:	4b16      	ldr	r3, [pc, #88]	; (8011574 <prvAddNewTaskToReadyList+0xf8>)
 801151a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801151e:	601a      	str	r2, [r3, #0]
 8011520:	f3bf 8f4f 	dsb	sy
 8011524:	f3bf 8f6f 	isb	sy
}
 8011528:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 801152c:	4b10      	ldr	r3, [pc, #64]	; (8011570 <prvAddNewTaskToReadyList+0xf4>)
 801152e:	681b      	ldr	r3, [r3, #0]
 8011530:	2b00      	cmp	r3, #0
 8011532:	d1d5      	bne.n	80114e0 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8011534:	682b      	ldr	r3, [r5, #0]
 8011536:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8011538:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801153a:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 801153c:	bf98      	it	ls
 801153e:	602c      	strls	r4, [r5, #0]
 8011540:	e7ce      	b.n	80114e0 <prvAddNewTaskToReadyList+0x64>
 8011542:	bf00      	nop
 8011544:	2002bb6c 	.word	0x2002bb6c
 8011548:	2002b700 	.word	0x2002b700
 801154c:	2002b70c 	.word	0x2002b70c
 8011550:	2002bb94 	.word	0x2002bb94
 8011554:	2002bbb4 	.word	0x2002bbb4
 8011558:	2002bbe0 	.word	0x2002bbe0
 801155c:	2002bbcc 	.word	0x2002bbcc
 8011560:	2002b704 	.word	0x2002b704
 8011564:	2002b708 	.word	0x2002b708
 8011568:	2002bb78 	.word	0x2002bb78
 801156c:	2002bb7c 	.word	0x2002bb7c
 8011570:	2002bbc8 	.word	0x2002bbc8
 8011574:	e000ed04 	.word	0xe000ed04
 8011578:	2002bb80 	.word	0x2002bb80

0801157c <prvResetNextTaskUnblockTime>:

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 801157c:	4a06      	ldr	r2, [pc, #24]	; (8011598 <prvResetNextTaskUnblockTime+0x1c>)
 801157e:	6813      	ldr	r3, [r2, #0]
 8011580:	6819      	ldr	r1, [r3, #0]
 8011582:	4b06      	ldr	r3, [pc, #24]	; (801159c <prvResetNextTaskUnblockTime+0x20>)
 8011584:	b919      	cbnz	r1, 801158e <prvResetNextTaskUnblockTime+0x12>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 8011586:	f04f 32ff 	mov.w	r2, #4294967295
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 801158a:	601a      	str	r2, [r3, #0]
	}
}
 801158c:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 801158e:	6812      	ldr	r2, [r2, #0]
 8011590:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8011592:	68d2      	ldr	r2, [r2, #12]
 8011594:	6852      	ldr	r2, [r2, #4]
 8011596:	e7f8      	b.n	801158a <prvResetNextTaskUnblockTime+0xe>
 8011598:	2002b704 	.word	0x2002b704
 801159c:	2002bba8 	.word	0x2002bba8

080115a0 <prvInitialiseNewTask.isra.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80115a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80115a4:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80115a8:	ea4f 0982 	mov.w	r9, r2, lsl #2
 80115ac:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80115ae:	4606      	mov	r6, r0
 80115b0:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80115b2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80115b4:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80115b6:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80115b8:	f016 fa90 	bl	8027adc <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 80115bc:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80115be:	f1a9 0904 	sub.w	r9, r9, #4
 80115c2:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 80115c4:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 80115c8:	2d00      	cmp	r5, #0
 80115ca:	d043      	beq.n	8011654 <prvInitialiseNewTask.isra.0+0xb4>
 80115cc:	1e6b      	subs	r3, r5, #1
 80115ce:	f104 0234 	add.w	r2, r4, #52	; 0x34
 80115d2:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80115d4:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80115d8:	f802 1b01 	strb.w	r1, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 80115dc:	7819      	ldrb	r1, [r3, #0]
 80115de:	b109      	cbz	r1, 80115e4 <prvInitialiseNewTask.isra.0+0x44>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 80115e0:	42ab      	cmp	r3, r5
 80115e2:	d1f7      	bne.n	80115d4 <prvInitialiseNewTask.isra.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 80115e4:	2300      	movs	r3, #0
 80115e6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 80115ea:	9d08      	ldr	r5, [sp, #32]
 80115ec:	2d37      	cmp	r5, #55	; 0x37
 80115ee:	bf28      	it	cs
 80115f0:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 80115f2:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 80115f6:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 80115f8:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80115fa:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 80115fc:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8011600:	f7ff f84d 	bl	801069e <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011604:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8011608:	f104 0018 	add.w	r0, r4, #24
 801160c:	f7ff f847 	bl	801069e <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8011610:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8011614:	2260      	movs	r2, #96	; 0x60
 8011616:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8011618:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801161a:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 801161c:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 801161e:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8011622:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8011626:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801162a:	f016 fa57 	bl	8027adc <memset>
 801162e:	4b0b      	ldr	r3, [pc, #44]	; (801165c <prvInitialiseNewTask.isra.0+0xbc>)
 8011630:	65e3      	str	r3, [r4, #92]	; 0x5c
 8011632:	4b0b      	ldr	r3, [pc, #44]	; (8011660 <prvInitialiseNewTask.isra.0+0xc0>)
 8011634:	6623      	str	r3, [r4, #96]	; 0x60
 8011636:	4b0b      	ldr	r3, [pc, #44]	; (8011664 <prvInitialiseNewTask.isra.0+0xc4>)
 8011638:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 801163a:	463a      	mov	r2, r7
 801163c:	4631      	mov	r1, r6
 801163e:	4648      	mov	r0, r9
 8011640:	f7ff f8a2 	bl	8010788 <pxPortInitialiseStack>
 8011644:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8011646:	f1b8 0f00 	cmp.w	r8, #0
 801164a:	d001      	beq.n	8011650 <prvInitialiseNewTask.isra.0+0xb0>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 801164c:	f8c8 4000 	str.w	r4, [r8]
}
 8011650:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8011654:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8011658:	e7c7      	b.n	80115ea <prvInitialiseNewTask.isra.0+0x4a>
 801165a:	bf00      	nop
 801165c:	0802dd20 	.word	0x0802dd20
 8011660:	0802dd40 	.word	0x0802dd40
 8011664:	0802dd00 	.word	0x0802dd00

08011668 <prvDeleteTCB>:
	{
 8011668:	b510      	push	{r4, lr}
 801166a:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 801166c:	3058      	adds	r0, #88	; 0x58
 801166e:	f016 fde3 	bl	8028238 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8011672:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
 8011676:	b93b      	cbnz	r3, 8011688 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 8011678:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801167a:	f7fe ffc7 	bl	801060c <vPortFree>
				vPortFree( pxTCB );
 801167e:	4620      	mov	r0, r4
	}
 8011680:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8011684:	f7fe bfc2 	b.w	801060c <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8011688:	2b01      	cmp	r3, #1
 801168a:	d0f8      	beq.n	801167e <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 801168c:	2b02      	cmp	r3, #2
 801168e:	d008      	beq.n	80116a2 <prvDeleteTCB+0x3a>
 8011690:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011694:	f383 8811 	msr	BASEPRI, r3
 8011698:	f3bf 8f6f 	isb	sy
 801169c:	f3bf 8f4f 	dsb	sy
 80116a0:	e7fe      	b.n	80116a0 <prvDeleteTCB+0x38>
	}
 80116a2:	bd10      	pop	{r4, pc}

080116a4 <prvIdleTask>:
{
 80116a4:	b580      	push	{r7, lr}
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80116a6:	4e14      	ldr	r6, [pc, #80]	; (80116f8 <prvIdleTask+0x54>)
				taskYIELD();
 80116a8:	4f14      	ldr	r7, [pc, #80]	; (80116fc <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80116aa:	4c15      	ldr	r4, [pc, #84]	; (8011700 <prvIdleTask+0x5c>)
				--uxCurrentNumberOfTasks;
 80116ac:	4d15      	ldr	r5, [pc, #84]	; (8011704 <prvIdleTask+0x60>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80116ae:	6823      	ldr	r3, [r4, #0]
 80116b0:	b96b      	cbnz	r3, 80116ce <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 80116b2:	4b15      	ldr	r3, [pc, #84]	; (8011708 <prvIdleTask+0x64>)
 80116b4:	681b      	ldr	r3, [r3, #0]
 80116b6:	2b01      	cmp	r3, #1
 80116b8:	d906      	bls.n	80116c8 <prvIdleTask+0x24>
				taskYIELD();
 80116ba:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80116be:	603b      	str	r3, [r7, #0]
 80116c0:	f3bf 8f4f 	dsb	sy
 80116c4:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 80116c8:	f7ef fe94 	bl	80013f4 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 80116cc:	e7ed      	b.n	80116aa <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 80116ce:	f7ff f889 	bl	80107e4 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80116d2:	68f3      	ldr	r3, [r6, #12]
 80116d4:	f8d3 800c 	ldr.w	r8, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80116d8:	f108 0004 	add.w	r0, r8, #4
 80116dc:	f7ff f805 	bl	80106ea <uxListRemove>
				--uxCurrentNumberOfTasks;
 80116e0:	682b      	ldr	r3, [r5, #0]
 80116e2:	3b01      	subs	r3, #1
 80116e4:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 80116e6:	6823      	ldr	r3, [r4, #0]
 80116e8:	3b01      	subs	r3, #1
 80116ea:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 80116ec:	f7ff f89c 	bl	8010828 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 80116f0:	4640      	mov	r0, r8
 80116f2:	f7ff ffb9 	bl	8011668 <prvDeleteTCB>
 80116f6:	e7da      	b.n	80116ae <prvIdleTask+0xa>
 80116f8:	2002bbe0 	.word	0x2002bbe0
 80116fc:	e000ed04 	.word	0xe000ed04
 8011700:	2002bb70 	.word	0x2002bb70
 8011704:	2002bb6c 	.word	0x2002bb6c
 8011708:	2002b70c 	.word	0x2002b70c

0801170c <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 801170c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 801170e:	4b16      	ldr	r3, [pc, #88]	; (8011768 <prvAddCurrentTaskToDelayedList+0x5c>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011710:	4e16      	ldr	r6, [pc, #88]	; (801176c <prvAddCurrentTaskToDelayedList+0x60>)
const TickType_t xConstTickCount = xTickCount;
 8011712:	681d      	ldr	r5, [r3, #0]
{
 8011714:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011716:	6830      	ldr	r0, [r6, #0]
 8011718:	3004      	adds	r0, #4
{
 801171a:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 801171c:	f7fe ffe5 	bl	80106ea <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8011720:	1c63      	adds	r3, r4, #1
 8011722:	4633      	mov	r3, r6
 8011724:	d107      	bne.n	8011736 <prvAddCurrentTaskToDelayedList+0x2a>
 8011726:	b137      	cbz	r7, 8011736 <prvAddCurrentTaskToDelayedList+0x2a>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011728:	6831      	ldr	r1, [r6, #0]
 801172a:	4811      	ldr	r0, [pc, #68]	; (8011770 <prvAddCurrentTaskToDelayedList+0x64>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 801172c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011730:	3104      	adds	r1, #4
 8011732:	f7fe bfb7 	b.w	80106a4 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8011736:	681a      	ldr	r2, [r3, #0]
 8011738:	192c      	adds	r4, r5, r4
 801173a:	6054      	str	r4, [r2, #4]
			if( xTimeToWake < xConstTickCount )
 801173c:	d307      	bcc.n	801174e <prvAddCurrentTaskToDelayedList+0x42>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 801173e:	4a0d      	ldr	r2, [pc, #52]	; (8011774 <prvAddCurrentTaskToDelayedList+0x68>)
 8011740:	6810      	ldr	r0, [r2, #0]
 8011742:	6819      	ldr	r1, [r3, #0]
}
 8011744:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011748:	3104      	adds	r1, #4
 801174a:	f7fe bfb7 	b.w	80106bc <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 801174e:	4a0a      	ldr	r2, [pc, #40]	; (8011778 <prvAddCurrentTaskToDelayedList+0x6c>)
 8011750:	6810      	ldr	r0, [r2, #0]
 8011752:	6819      	ldr	r1, [r3, #0]
 8011754:	3104      	adds	r1, #4
 8011756:	f7fe ffb1 	bl	80106bc <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 801175a:	4b08      	ldr	r3, [pc, #32]	; (801177c <prvAddCurrentTaskToDelayedList+0x70>)
 801175c:	681a      	ldr	r2, [r3, #0]
 801175e:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8011760:	bf88      	it	hi
 8011762:	601c      	strhi	r4, [r3, #0]
}
 8011764:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011766:	bf00      	nop
 8011768:	2002bbf4 	.word	0x2002bbf4
 801176c:	2002b700 	.word	0x2002b700
 8011770:	2002bbcc 	.word	0x2002bbcc
 8011774:	2002b708 	.word	0x2002b708
 8011778:	2002b704 	.word	0x2002b704
 801177c:	2002bba8 	.word	0x2002bba8

08011780 <xTaskCreateStatic>:
	{
 8011780:	b570      	push	{r4, r5, r6, lr}
 8011782:	b086      	sub	sp, #24
 8011784:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8011788:	b945      	cbnz	r5, 801179c <xTaskCreateStatic+0x1c>
 801178a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801178e:	f383 8811 	msr	BASEPRI, r3
 8011792:	f3bf 8f6f 	isb	sy
 8011796:	f3bf 8f4f 	dsb	sy
 801179a:	e7fe      	b.n	801179a <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 801179c:	b944      	cbnz	r4, 80117b0 <xTaskCreateStatic+0x30>
 801179e:	f04f 0350 	mov.w	r3, #80	; 0x50
 80117a2:	f383 8811 	msr	BASEPRI, r3
 80117a6:	f3bf 8f6f 	isb	sy
 80117aa:	f3bf 8f4f 	dsb	sy
 80117ae:	e7fe      	b.n	80117ae <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 80117b0:	26c0      	movs	r6, #192	; 0xc0
 80117b2:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 80117b4:	9e05      	ldr	r6, [sp, #20]
 80117b6:	2ec0      	cmp	r6, #192	; 0xc0
 80117b8:	d008      	beq.n	80117cc <xTaskCreateStatic+0x4c>
 80117ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 80117be:	f383 8811 	msr	BASEPRI, r3
 80117c2:	f3bf 8f6f 	isb	sy
 80117c6:	f3bf 8f4f 	dsb	sy
 80117ca:	e7fe      	b.n	80117ca <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 80117cc:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 80117ce:	2502      	movs	r5, #2
 80117d0:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80117d4:	ad04      	add	r5, sp, #16
 80117d6:	9501      	str	r5, [sp, #4]
 80117d8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80117da:	9402      	str	r4, [sp, #8]
 80117dc:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 80117de:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80117e0:	f7ff fede 	bl	80115a0 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80117e4:	4620      	mov	r0, r4
 80117e6:	f7ff fe49 	bl	801147c <prvAddNewTaskToReadyList>
	}
 80117ea:	9804      	ldr	r0, [sp, #16]
 80117ec:	b006      	add	sp, #24
 80117ee:	bd70      	pop	{r4, r5, r6, pc}

080117f0 <xTaskCreate>:
	{
 80117f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80117f4:	4607      	mov	r7, r0
 80117f6:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80117f8:	0090      	lsls	r0, r2, #2
	{
 80117fa:	4688      	mov	r8, r1
 80117fc:	4616      	mov	r6, r2
 80117fe:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8011800:	f7fe fe72 	bl	80104e8 <pvPortMalloc>
			if( pxStack != NULL )
 8011804:	4605      	mov	r5, r0
 8011806:	b1e8      	cbz	r0, 8011844 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8011808:	20c0      	movs	r0, #192	; 0xc0
 801180a:	f7fe fe6d 	bl	80104e8 <pvPortMalloc>
				if( pxNewTCB != NULL )
 801180e:	4604      	mov	r4, r0
 8011810:	b1a8      	cbz	r0, 801183e <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8011812:	2300      	movs	r3, #0
 8011814:	f880 30bd 	strb.w	r3, [r0, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8011818:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 801181a:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 801181c:	9301      	str	r3, [sp, #4]
 801181e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011820:	9002      	str	r0, [sp, #8]
 8011822:	9300      	str	r3, [sp, #0]
 8011824:	4632      	mov	r2, r6
 8011826:	464b      	mov	r3, r9
 8011828:	4641      	mov	r1, r8
 801182a:	4638      	mov	r0, r7
 801182c:	f7ff feb8 	bl	80115a0 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8011830:	4620      	mov	r0, r4
 8011832:	f7ff fe23 	bl	801147c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8011836:	2001      	movs	r0, #1
	}
 8011838:	b005      	add	sp, #20
 801183a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 801183e:	4628      	mov	r0, r5
 8011840:	f7fe fee4 	bl	801060c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8011844:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8011848:	e7f6      	b.n	8011838 <xTaskCreate+0x48>
	...

0801184c <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 801184c:	4a02      	ldr	r2, [pc, #8]	; (8011858 <vTaskSuspendAll+0xc>)
 801184e:	6813      	ldr	r3, [r2, #0]
 8011850:	3301      	adds	r3, #1
 8011852:	6013      	str	r3, [r2, #0]
}
 8011854:	4770      	bx	lr
 8011856:	bf00      	nop
 8011858:	2002bb74 	.word	0x2002bb74

0801185c <xTaskGetTickCount>:
		xTicks = xTickCount;
 801185c:	4b01      	ldr	r3, [pc, #4]	; (8011864 <xTaskGetTickCount+0x8>)
 801185e:	6818      	ldr	r0, [r3, #0]
}
 8011860:	4770      	bx	lr
 8011862:	bf00      	nop
 8011864:	2002bbf4 	.word	0x2002bbf4

08011868 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011868:	4b3f      	ldr	r3, [pc, #252]	; (8011968 <xTaskIncrementTick+0x100>)
 801186a:	681b      	ldr	r3, [r3, #0]
{
 801186c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011870:	2b00      	cmp	r3, #0
 8011872:	d173      	bne.n	801195c <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8011874:	4b3d      	ldr	r3, [pc, #244]	; (801196c <xTaskIncrementTick+0x104>)
 8011876:	681d      	ldr	r5, [r3, #0]
 8011878:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 801187a:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 801187c:	b9bd      	cbnz	r5, 80118ae <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 801187e:	4b3c      	ldr	r3, [pc, #240]	; (8011970 <xTaskIncrementTick+0x108>)
 8011880:	681a      	ldr	r2, [r3, #0]
 8011882:	6812      	ldr	r2, [r2, #0]
 8011884:	b142      	cbz	r2, 8011898 <xTaskIncrementTick+0x30>
 8011886:	f04f 0350 	mov.w	r3, #80	; 0x50
 801188a:	f383 8811 	msr	BASEPRI, r3
 801188e:	f3bf 8f6f 	isb	sy
 8011892:	f3bf 8f4f 	dsb	sy
 8011896:	e7fe      	b.n	8011896 <xTaskIncrementTick+0x2e>
 8011898:	4a36      	ldr	r2, [pc, #216]	; (8011974 <xTaskIncrementTick+0x10c>)
 801189a:	6819      	ldr	r1, [r3, #0]
 801189c:	6810      	ldr	r0, [r2, #0]
 801189e:	6018      	str	r0, [r3, #0]
 80118a0:	6011      	str	r1, [r2, #0]
 80118a2:	4a35      	ldr	r2, [pc, #212]	; (8011978 <xTaskIncrementTick+0x110>)
 80118a4:	6813      	ldr	r3, [r2, #0]
 80118a6:	3301      	adds	r3, #1
 80118a8:	6013      	str	r3, [r2, #0]
 80118aa:	f7ff fe67 	bl	801157c <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 80118ae:	4e33      	ldr	r6, [pc, #204]	; (801197c <xTaskIncrementTick+0x114>)
 80118b0:	4f33      	ldr	r7, [pc, #204]	; (8011980 <xTaskIncrementTick+0x118>)
 80118b2:	6833      	ldr	r3, [r6, #0]
 80118b4:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 801198c <xTaskIncrementTick+0x124>
 80118b8:	429d      	cmp	r5, r3
BaseType_t xSwitchRequired = pdFALSE;
 80118ba:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 80118be:	d211      	bcs.n	80118e4 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 80118c0:	f8d8 3000 	ldr.w	r3, [r8]
 80118c4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80118c6:	2314      	movs	r3, #20
 80118c8:	4353      	muls	r3, r2
 80118ca:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 80118cc:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 80118ce:	4b2d      	ldr	r3, [pc, #180]	; (8011984 <xTaskIncrementTick+0x11c>)
 80118d0:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 80118d2:	bf28      	it	cs
 80118d4:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 80118d6:	2b00      	cmp	r3, #0
 80118d8:	bf18      	it	ne
 80118da:	2401      	movne	r4, #1
}
 80118dc:	4620      	mov	r0, r4
 80118de:	b003      	add	sp, #12
 80118e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80118e4:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8011970 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 80118e8:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8011990 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80118ec:	f8d9 3000 	ldr.w	r3, [r9]
 80118f0:	681b      	ldr	r3, [r3, #0]
 80118f2:	b91b      	cbnz	r3, 80118fc <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80118f4:	f04f 33ff 	mov.w	r3, #4294967295
 80118f8:	6033      	str	r3, [r6, #0]
					break;
 80118fa:	e7e1      	b.n	80118c0 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80118fc:	f8d9 3000 	ldr.w	r3, [r9]
 8011900:	68db      	ldr	r3, [r3, #12]
 8011902:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8011906:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 801190a:	4295      	cmp	r5, r2
 801190c:	d201      	bcs.n	8011912 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 801190e:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8011910:	e7d6      	b.n	80118c0 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8011912:	f10b 0104 	add.w	r1, fp, #4
 8011916:	4608      	mov	r0, r1
 8011918:	9101      	str	r1, [sp, #4]
 801191a:	f7fe fee6 	bl	80106ea <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 801191e:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8011922:	9901      	ldr	r1, [sp, #4]
 8011924:	b122      	cbz	r2, 8011930 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8011926:	f10b 0018 	add.w	r0, fp, #24
 801192a:	f7fe fede 	bl	80106ea <uxListRemove>
 801192e:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8011930:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8011934:	f8da 2000 	ldr.w	r2, [sl]
 8011938:	2314      	movs	r3, #20
 801193a:	4290      	cmp	r0, r2
 801193c:	bf88      	it	hi
 801193e:	f8ca 0000 	strhi.w	r0, [sl]
 8011942:	fb03 7000 	mla	r0, r3, r0, r7
 8011946:	f7fe fead 	bl	80106a4 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 801194a:	f8d8 1000 	ldr.w	r1, [r8]
 801194e:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8011952:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8011954:	429a      	cmp	r2, r3
 8011956:	bf28      	it	cs
 8011958:	2401      	movcs	r4, #1
 801195a:	e7c7      	b.n	80118ec <xTaskIncrementTick+0x84>
		++xPendedTicks;
 801195c:	4a0a      	ldr	r2, [pc, #40]	; (8011988 <xTaskIncrementTick+0x120>)
 801195e:	6813      	ldr	r3, [r2, #0]
 8011960:	3301      	adds	r3, #1
 8011962:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8011964:	2400      	movs	r4, #0
	return xSwitchRequired;
 8011966:	e7b9      	b.n	80118dc <xTaskIncrementTick+0x74>
 8011968:	2002bb74 	.word	0x2002bb74
 801196c:	2002bbf4 	.word	0x2002bbf4
 8011970:	2002b704 	.word	0x2002b704
 8011974:	2002b708 	.word	0x2002b708
 8011978:	2002bbac 	.word	0x2002bbac
 801197c:	2002bba8 	.word	0x2002bba8
 8011980:	2002b70c 	.word	0x2002b70c
 8011984:	2002bbf8 	.word	0x2002bbf8
 8011988:	2002bbb0 	.word	0x2002bbb0
 801198c:	2002b700 	.word	0x2002b700
 8011990:	2002bb7c 	.word	0x2002bb7c

08011994 <xTaskResumeAll>:
{
 8011994:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 8011996:	4c30      	ldr	r4, [pc, #192]	; (8011a58 <xTaskResumeAll+0xc4>)
 8011998:	6823      	ldr	r3, [r4, #0]
 801199a:	b943      	cbnz	r3, 80119ae <xTaskResumeAll+0x1a>
 801199c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80119a0:	f383 8811 	msr	BASEPRI, r3
 80119a4:	f3bf 8f6f 	isb	sy
 80119a8:	f3bf 8f4f 	dsb	sy
 80119ac:	e7fe      	b.n	80119ac <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 80119ae:	f7fe ff19 	bl	80107e4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 80119b2:	6823      	ldr	r3, [r4, #0]
 80119b4:	3b01      	subs	r3, #1
 80119b6:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80119b8:	6824      	ldr	r4, [r4, #0]
 80119ba:	b12c      	cbz	r4, 80119c8 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 80119bc:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80119be:	f7fe ff33 	bl	8010828 <vPortExitCritical>
}
 80119c2:	4620      	mov	r0, r4
 80119c4:	b003      	add	sp, #12
 80119c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 80119c8:	4b24      	ldr	r3, [pc, #144]	; (8011a5c <xTaskResumeAll+0xc8>)
 80119ca:	681b      	ldr	r3, [r3, #0]
 80119cc:	2b00      	cmp	r3, #0
 80119ce:	d0f5      	beq.n	80119bc <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80119d0:	4d23      	ldr	r5, [pc, #140]	; (8011a60 <xTaskResumeAll+0xcc>)
					prvAddTaskToReadyList( pxTCB );
 80119d2:	4e24      	ldr	r6, [pc, #144]	; (8011a64 <xTaskResumeAll+0xd0>)
 80119d4:	4f24      	ldr	r7, [pc, #144]	; (8011a68 <xTaskResumeAll+0xd4>)
 80119d6:	e01e      	b.n	8011a16 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80119d8:	68eb      	ldr	r3, [r5, #12]
 80119da:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80119dc:	f104 0018 	add.w	r0, r4, #24
 80119e0:	f7fe fe83 	bl	80106ea <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80119e4:	1d21      	adds	r1, r4, #4
 80119e6:	4608      	mov	r0, r1
 80119e8:	9101      	str	r1, [sp, #4]
 80119ea:	f7fe fe7e 	bl	80106ea <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 80119ee:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80119f0:	6832      	ldr	r2, [r6, #0]
 80119f2:	9901      	ldr	r1, [sp, #4]
 80119f4:	2014      	movs	r0, #20
 80119f6:	4293      	cmp	r3, r2
 80119f8:	fb00 7003 	mla	r0, r0, r3, r7
 80119fc:	bf88      	it	hi
 80119fe:	6033      	strhi	r3, [r6, #0]
 8011a00:	f7fe fe50 	bl	80106a4 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8011a04:	4b19      	ldr	r3, [pc, #100]	; (8011a6c <xTaskResumeAll+0xd8>)
 8011a06:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011a08:	681b      	ldr	r3, [r3, #0]
 8011a0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011a0c:	429a      	cmp	r2, r3
 8011a0e:	d302      	bcc.n	8011a16 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8011a10:	4b17      	ldr	r3, [pc, #92]	; (8011a70 <xTaskResumeAll+0xdc>)
 8011a12:	2201      	movs	r2, #1
 8011a14:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8011a16:	682b      	ldr	r3, [r5, #0]
 8011a18:	2b00      	cmp	r3, #0
 8011a1a:	d1dd      	bne.n	80119d8 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 8011a1c:	b10c      	cbz	r4, 8011a22 <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 8011a1e:	f7ff fdad 	bl	801157c <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8011a22:	4d14      	ldr	r5, [pc, #80]	; (8011a74 <xTaskResumeAll+0xe0>)
 8011a24:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8011a26:	b144      	cbz	r4, 8011a3a <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8011a28:	4e11      	ldr	r6, [pc, #68]	; (8011a70 <xTaskResumeAll+0xdc>)
 8011a2a:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8011a2c:	f7ff ff1c 	bl	8011868 <xTaskIncrementTick>
 8011a30:	b100      	cbz	r0, 8011a34 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8011a32:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8011a34:	3c01      	subs	r4, #1
 8011a36:	d1f9      	bne.n	8011a2c <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 8011a38:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8011a3a:	4b0d      	ldr	r3, [pc, #52]	; (8011a70 <xTaskResumeAll+0xdc>)
 8011a3c:	681b      	ldr	r3, [r3, #0]
 8011a3e:	2b00      	cmp	r3, #0
 8011a40:	d0bc      	beq.n	80119bc <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8011a42:	4b0d      	ldr	r3, [pc, #52]	; (8011a78 <xTaskResumeAll+0xe4>)
 8011a44:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8011a48:	601a      	str	r2, [r3, #0]
 8011a4a:	f3bf 8f4f 	dsb	sy
 8011a4e:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8011a52:	2401      	movs	r4, #1
 8011a54:	e7b3      	b.n	80119be <xTaskResumeAll+0x2a>
 8011a56:	bf00      	nop
 8011a58:	2002bb74 	.word	0x2002bb74
 8011a5c:	2002bb6c 	.word	0x2002bb6c
 8011a60:	2002bbb4 	.word	0x2002bbb4
 8011a64:	2002bb7c 	.word	0x2002bb7c
 8011a68:	2002b70c 	.word	0x2002b70c
 8011a6c:	2002b700 	.word	0x2002b700
 8011a70:	2002bbf8 	.word	0x2002bbf8
 8011a74:	2002bbb0 	.word	0x2002bbb0
 8011a78:	e000ed04 	.word	0xe000ed04

08011a7c <vTaskDelay>:
	{
 8011a7c:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8011a7e:	b940      	cbnz	r0, 8011a92 <vTaskDelay+0x16>
			portYIELD_WITHIN_API();
 8011a80:	4b0e      	ldr	r3, [pc, #56]	; (8011abc <vTaskDelay+0x40>)
 8011a82:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8011a86:	601a      	str	r2, [r3, #0]
 8011a88:	f3bf 8f4f 	dsb	sy
 8011a8c:	f3bf 8f6f 	isb	sy
	}
 8011a90:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8011a92:	4b0b      	ldr	r3, [pc, #44]	; (8011ac0 <vTaskDelay+0x44>)
 8011a94:	6819      	ldr	r1, [r3, #0]
 8011a96:	b141      	cbz	r1, 8011aaa <vTaskDelay+0x2e>
 8011a98:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011a9c:	f383 8811 	msr	BASEPRI, r3
 8011aa0:	f3bf 8f6f 	isb	sy
 8011aa4:	f3bf 8f4f 	dsb	sy
 8011aa8:	e7fe      	b.n	8011aa8 <vTaskDelay+0x2c>
			vTaskSuspendAll();
 8011aaa:	f7ff fecf 	bl	801184c <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8011aae:	f7ff fe2d 	bl	801170c <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8011ab2:	f7ff ff6f 	bl	8011994 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8011ab6:	2800      	cmp	r0, #0
 8011ab8:	d0e2      	beq.n	8011a80 <vTaskDelay+0x4>
 8011aba:	e7e9      	b.n	8011a90 <vTaskDelay+0x14>
 8011abc:	e000ed04 	.word	0xe000ed04
 8011ac0:	2002bb74 	.word	0x2002bb74

08011ac4 <vTaskSetApplicationTaskTag>:
	{
 8011ac4:	b538      	push	{r3, r4, r5, lr}
 8011ac6:	460d      	mov	r5, r1
		if( xTask == NULL )
 8011ac8:	4604      	mov	r4, r0
 8011aca:	b908      	cbnz	r0, 8011ad0 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 8011acc:	4b04      	ldr	r3, [pc, #16]	; (8011ae0 <vTaskSetApplicationTaskTag+0x1c>)
 8011ace:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 8011ad0:	f7fe fe88 	bl	80107e4 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 8011ad4:	6565      	str	r5, [r4, #84]	; 0x54
	}
 8011ad6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 8011ada:	f7fe bea5 	b.w	8010828 <vPortExitCritical>
 8011ade:	bf00      	nop
 8011ae0:	2002b700 	.word	0x2002b700

08011ae4 <xTaskCallApplicationTaskHook>:
	{
 8011ae4:	4603      	mov	r3, r0
 8011ae6:	4608      	mov	r0, r1
		if( xTask == NULL )
 8011ae8:	b90b      	cbnz	r3, 8011aee <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 8011aea:	4b03      	ldr	r3, [pc, #12]	; (8011af8 <xTaskCallApplicationTaskHook+0x14>)
 8011aec:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 8011aee:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8011af0:	b103      	cbz	r3, 8011af4 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 8011af2:	4718      	bx	r3
	}
 8011af4:	4618      	mov	r0, r3
 8011af6:	4770      	bx	lr
 8011af8:	2002b700 	.word	0x2002b700

08011afc <vTaskStartScheduler>:
{
 8011afc:	b510      	push	{r4, lr}
 8011afe:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8011b00:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8011b02:	aa07      	add	r2, sp, #28
 8011b04:	a906      	add	r1, sp, #24
 8011b06:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8011b08:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8011b0c:	f7fe fcb0 	bl	8010470 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8011b10:	9b05      	ldr	r3, [sp, #20]
 8011b12:	9302      	str	r3, [sp, #8]
 8011b14:	9b06      	ldr	r3, [sp, #24]
 8011b16:	9a07      	ldr	r2, [sp, #28]
 8011b18:	4919      	ldr	r1, [pc, #100]	; (8011b80 <vTaskStartScheduler+0x84>)
 8011b1a:	481a      	ldr	r0, [pc, #104]	; (8011b84 <vTaskStartScheduler+0x88>)
 8011b1c:	e9cd 4300 	strd	r4, r3, [sp]
 8011b20:	4623      	mov	r3, r4
 8011b22:	f7ff fe2d 	bl	8011780 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8011b26:	b1f0      	cbz	r0, 8011b66 <vTaskStartScheduler+0x6a>
			xReturn = xTimerCreateTimerTask();
 8011b28:	f000 fa92 	bl	8012050 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8011b2c:	2801      	cmp	r0, #1
 8011b2e:	d11c      	bne.n	8011b6a <vTaskStartScheduler+0x6e>
 8011b30:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011b34:	f383 8811 	msr	BASEPRI, r3
 8011b38:	f3bf 8f6f 	isb	sy
 8011b3c:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8011b40:	4a11      	ldr	r2, [pc, #68]	; (8011b88 <vTaskStartScheduler+0x8c>)
 8011b42:	4912      	ldr	r1, [pc, #72]	; (8011b8c <vTaskStartScheduler+0x90>)
 8011b44:	6813      	ldr	r3, [r2, #0]
 8011b46:	3358      	adds	r3, #88	; 0x58
 8011b48:	600b      	str	r3, [r1, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 8011b4a:	4b11      	ldr	r3, [pc, #68]	; (8011b90 <vTaskStartScheduler+0x94>)
 8011b4c:	f04f 31ff 	mov.w	r1, #4294967295
 8011b50:	6019      	str	r1, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8011b52:	4b10      	ldr	r3, [pc, #64]	; (8011b94 <vTaskStartScheduler+0x98>)
 8011b54:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8011b56:	4b10      	ldr	r3, [pc, #64]	; (8011b98 <vTaskStartScheduler+0x9c>)
 8011b58:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 8011b5a:	6810      	ldr	r0, [r2, #0]
 8011b5c:	4621      	mov	r1, r4
 8011b5e:	f7ff ffc1 	bl	8011ae4 <xTaskCallApplicationTaskHook>
		if( xPortStartScheduler() != pdFALSE )
 8011b62:	f7fe fed7 	bl	8010914 <xPortStartScheduler>
}
 8011b66:	b008      	add	sp, #32
 8011b68:	bd10      	pop	{r4, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8011b6a:	3001      	adds	r0, #1
 8011b6c:	d1fb      	bne.n	8011b66 <vTaskStartScheduler+0x6a>
 8011b6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011b72:	f383 8811 	msr	BASEPRI, r3
 8011b76:	f3bf 8f6f 	isb	sy
 8011b7a:	f3bf 8f4f 	dsb	sy
 8011b7e:	e7fe      	b.n	8011b7e <vTaskStartScheduler+0x82>
 8011b80:	0802b201 	.word	0x0802b201
 8011b84:	080116a5 	.word	0x080116a5
 8011b88:	2002b700 	.word	0x2002b700
 8011b8c:	200000d8 	.word	0x200000d8
 8011b90:	2002bba8 	.word	0x2002bba8
 8011b94:	2002bbc8 	.word	0x2002bbc8
 8011b98:	2002bbf4 	.word	0x2002bbf4

08011b9c <vTaskSwitchContext>:
{
 8011b9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8011b9e:	4b1e      	ldr	r3, [pc, #120]	; (8011c18 <vTaskSwitchContext+0x7c>)
 8011ba0:	681a      	ldr	r2, [r3, #0]
 8011ba2:	4b1e      	ldr	r3, [pc, #120]	; (8011c1c <vTaskSwitchContext+0x80>)
 8011ba4:	b112      	cbz	r2, 8011bac <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8011ba6:	2201      	movs	r2, #1
 8011ba8:	601a      	str	r2, [r3, #0]
}
 8011baa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 8011bac:	4c1c      	ldr	r4, [pc, #112]	; (8011c20 <vTaskSwitchContext+0x84>)
		xYieldPending = pdFALSE;
 8011bae:	601a      	str	r2, [r3, #0]
		traceTASK_SWITCHED_OUT();
 8011bb0:	6820      	ldr	r0, [r4, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011bb2:	4e1c      	ldr	r6, [pc, #112]	; (8011c24 <vTaskSwitchContext+0x88>)
		traceTASK_SWITCHED_OUT();
 8011bb4:	2101      	movs	r1, #1
 8011bb6:	f7ff ff95 	bl	8011ae4 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011bba:	4a1b      	ldr	r2, [pc, #108]	; (8011c28 <vTaskSwitchContext+0x8c>)
 8011bbc:	6833      	ldr	r3, [r6, #0]
 8011bbe:	f04f 0c14 	mov.w	ip, #20
 8011bc2:	4617      	mov	r7, r2
 8011bc4:	fb0c f103 	mul.w	r1, ip, r3
 8011bc8:	1850      	adds	r0, r2, r1
 8011bca:	5855      	ldr	r5, [r2, r1]
 8011bcc:	b1c5      	cbz	r5, 8011c00 <vTaskSwitchContext+0x64>
 8011bce:	6845      	ldr	r5, [r0, #4]
 8011bd0:	3108      	adds	r1, #8
 8011bd2:	686d      	ldr	r5, [r5, #4]
 8011bd4:	6045      	str	r5, [r0, #4]
 8011bd6:	440a      	add	r2, r1
 8011bd8:	4295      	cmp	r5, r2
 8011bda:	bf04      	itt	eq
 8011bdc:	686a      	ldreq	r2, [r5, #4]
 8011bde:	6042      	streq	r2, [r0, #4]
 8011be0:	2214      	movs	r2, #20
 8011be2:	fb02 7203 	mla	r2, r2, r3, r7
		traceTASK_SWITCHED_IN();
 8011be6:	2100      	movs	r1, #0
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011be8:	6852      	ldr	r2, [r2, #4]
 8011bea:	68d2      	ldr	r2, [r2, #12]
 8011bec:	6022      	str	r2, [r4, #0]
 8011bee:	6033      	str	r3, [r6, #0]
		traceTASK_SWITCHED_IN();
 8011bf0:	6820      	ldr	r0, [r4, #0]
 8011bf2:	f7ff ff77 	bl	8011ae4 <xTaskCallApplicationTaskHook>
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8011bf6:	6823      	ldr	r3, [r4, #0]
 8011bf8:	4a0c      	ldr	r2, [pc, #48]	; (8011c2c <vTaskSwitchContext+0x90>)
 8011bfa:	3358      	adds	r3, #88	; 0x58
 8011bfc:	6013      	str	r3, [r2, #0]
}
 8011bfe:	e7d4      	b.n	8011baa <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011c00:	b943      	cbnz	r3, 8011c14 <vTaskSwitchContext+0x78>
 8011c02:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011c06:	f383 8811 	msr	BASEPRI, r3
 8011c0a:	f3bf 8f6f 	isb	sy
 8011c0e:	f3bf 8f4f 	dsb	sy
 8011c12:	e7fe      	b.n	8011c12 <vTaskSwitchContext+0x76>
 8011c14:	3b01      	subs	r3, #1
 8011c16:	e7d5      	b.n	8011bc4 <vTaskSwitchContext+0x28>
 8011c18:	2002bb74 	.word	0x2002bb74
 8011c1c:	2002bbf8 	.word	0x2002bbf8
 8011c20:	2002b700 	.word	0x2002b700
 8011c24:	2002bb7c 	.word	0x2002bb7c
 8011c28:	2002b70c 	.word	0x2002b70c
 8011c2c:	200000d8 	.word	0x200000d8

08011c30 <vTaskPlaceOnEventList>:
{
 8011c30:	b510      	push	{r4, lr}
 8011c32:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8011c34:	b940      	cbnz	r0, 8011c48 <vTaskPlaceOnEventList+0x18>
 8011c36:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011c3a:	f383 8811 	msr	BASEPRI, r3
 8011c3e:	f3bf 8f6f 	isb	sy
 8011c42:	f3bf 8f4f 	dsb	sy
 8011c46:	e7fe      	b.n	8011c46 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8011c48:	4b05      	ldr	r3, [pc, #20]	; (8011c60 <vTaskPlaceOnEventList+0x30>)
 8011c4a:	6819      	ldr	r1, [r3, #0]
 8011c4c:	3118      	adds	r1, #24
 8011c4e:	f7fe fd35 	bl	80106bc <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8011c52:	4620      	mov	r0, r4
 8011c54:	2101      	movs	r1, #1
}
 8011c56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8011c5a:	f7ff bd57 	b.w	801170c <prvAddCurrentTaskToDelayedList>
 8011c5e:	bf00      	nop
 8011c60:	2002b700 	.word	0x2002b700

08011c64 <vTaskPlaceOnEventListRestricted>:
	{
 8011c64:	b538      	push	{r3, r4, r5, lr}
 8011c66:	460d      	mov	r5, r1
 8011c68:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8011c6a:	b940      	cbnz	r0, 8011c7e <vTaskPlaceOnEventListRestricted+0x1a>
 8011c6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011c70:	f383 8811 	msr	BASEPRI, r3
 8011c74:	f3bf 8f6f 	isb	sy
 8011c78:	f3bf 8f4f 	dsb	sy
 8011c7c:	e7fe      	b.n	8011c7c <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8011c7e:	4b07      	ldr	r3, [pc, #28]	; (8011c9c <vTaskPlaceOnEventListRestricted+0x38>)
 8011c80:	6819      	ldr	r1, [r3, #0]
 8011c82:	3118      	adds	r1, #24
 8011c84:	f7fe fd0e 	bl	80106a4 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8011c88:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8011c8a:	4621      	mov	r1, r4
 8011c8c:	bf0c      	ite	eq
 8011c8e:	4628      	moveq	r0, r5
 8011c90:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8011c94:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8011c98:	f7ff bd38 	b.w	801170c <prvAddCurrentTaskToDelayedList>
 8011c9c:	2002b700 	.word	0x2002b700

08011ca0 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011ca0:	68c3      	ldr	r3, [r0, #12]
{
 8011ca2:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011ca4:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8011ca6:	b944      	cbnz	r4, 8011cba <xTaskRemoveFromEventList+0x1a>
 8011ca8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011cac:	f383 8811 	msr	BASEPRI, r3
 8011cb0:	f3bf 8f6f 	isb	sy
 8011cb4:	f3bf 8f4f 	dsb	sy
 8011cb8:	e7fe      	b.n	8011cb8 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8011cba:	f104 0118 	add.w	r1, r4, #24
 8011cbe:	4608      	mov	r0, r1
 8011cc0:	9101      	str	r1, [sp, #4]
 8011cc2:	f7fe fd12 	bl	80106ea <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011cc6:	4b12      	ldr	r3, [pc, #72]	; (8011d10 <xTaskRemoveFromEventList+0x70>)
 8011cc8:	9901      	ldr	r1, [sp, #4]
 8011cca:	681b      	ldr	r3, [r3, #0]
 8011ccc:	b9eb      	cbnz	r3, 8011d0a <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8011cce:	1d21      	adds	r1, r4, #4
 8011cd0:	4608      	mov	r0, r1
 8011cd2:	9101      	str	r1, [sp, #4]
 8011cd4:	f7fe fd09 	bl	80106ea <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8011cd8:	4a0e      	ldr	r2, [pc, #56]	; (8011d14 <xTaskRemoveFromEventList+0x74>)
 8011cda:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011cdc:	6810      	ldr	r0, [r2, #0]
 8011cde:	9901      	ldr	r1, [sp, #4]
 8011ce0:	4283      	cmp	r3, r0
 8011ce2:	bf88      	it	hi
 8011ce4:	6013      	strhi	r3, [r2, #0]
 8011ce6:	4a0c      	ldr	r2, [pc, #48]	; (8011d18 <xTaskRemoveFromEventList+0x78>)
 8011ce8:	2014      	movs	r0, #20
 8011cea:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8011cee:	f7fe fcd9 	bl	80106a4 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8011cf2:	4b0a      	ldr	r3, [pc, #40]	; (8011d1c <xTaskRemoveFromEventList+0x7c>)
 8011cf4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011cf6:	681b      	ldr	r3, [r3, #0]
 8011cf8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011cfa:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8011cfc:	bf85      	ittet	hi
 8011cfe:	4b08      	ldrhi	r3, [pc, #32]	; (8011d20 <xTaskRemoveFromEventList+0x80>)
 8011d00:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8011d02:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8011d04:	6018      	strhi	r0, [r3, #0]
}
 8011d06:	b002      	add	sp, #8
 8011d08:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8011d0a:	4806      	ldr	r0, [pc, #24]	; (8011d24 <xTaskRemoveFromEventList+0x84>)
 8011d0c:	e7ef      	b.n	8011cee <xTaskRemoveFromEventList+0x4e>
 8011d0e:	bf00      	nop
 8011d10:	2002bb74 	.word	0x2002bb74
 8011d14:	2002bb7c 	.word	0x2002bb7c
 8011d18:	2002b70c 	.word	0x2002b70c
 8011d1c:	2002b700 	.word	0x2002b700
 8011d20:	2002bbf8 	.word	0x2002bbf8
 8011d24:	2002bbb4 	.word	0x2002bbb4

08011d28 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8011d28:	4b03      	ldr	r3, [pc, #12]	; (8011d38 <vTaskInternalSetTimeOutState+0x10>)
 8011d2a:	681b      	ldr	r3, [r3, #0]
 8011d2c:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8011d2e:	4b03      	ldr	r3, [pc, #12]	; (8011d3c <vTaskInternalSetTimeOutState+0x14>)
 8011d30:	681b      	ldr	r3, [r3, #0]
 8011d32:	6043      	str	r3, [r0, #4]
}
 8011d34:	4770      	bx	lr
 8011d36:	bf00      	nop
 8011d38:	2002bbac 	.word	0x2002bbac
 8011d3c:	2002bbf4 	.word	0x2002bbf4

08011d40 <xTaskCheckForTimeOut>:
{
 8011d40:	b570      	push	{r4, r5, r6, lr}
 8011d42:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8011d44:	4605      	mov	r5, r0
 8011d46:	b940      	cbnz	r0, 8011d5a <xTaskCheckForTimeOut+0x1a>
 8011d48:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011d4c:	f383 8811 	msr	BASEPRI, r3
 8011d50:	f3bf 8f6f 	isb	sy
 8011d54:	f3bf 8f4f 	dsb	sy
 8011d58:	e7fe      	b.n	8011d58 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 8011d5a:	b941      	cbnz	r1, 8011d6e <xTaskCheckForTimeOut+0x2e>
 8011d5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011d60:	f383 8811 	msr	BASEPRI, r3
 8011d64:	f3bf 8f6f 	isb	sy
 8011d68:	f3bf 8f4f 	dsb	sy
 8011d6c:	e7fe      	b.n	8011d6c <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 8011d6e:	f7fe fd39 	bl	80107e4 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8011d72:	4b0f      	ldr	r3, [pc, #60]	; (8011db0 <xTaskCheckForTimeOut+0x70>)
 8011d74:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8011d76:	6823      	ldr	r3, [r4, #0]
 8011d78:	1c5a      	adds	r2, r3, #1
 8011d7a:	d010      	beq.n	8011d9e <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8011d7c:	480d      	ldr	r0, [pc, #52]	; (8011db4 <xTaskCheckForTimeOut+0x74>)
 8011d7e:	682e      	ldr	r6, [r5, #0]
 8011d80:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8011d82:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8011d84:	4286      	cmp	r6, r0
 8011d86:	d001      	beq.n	8011d8c <xTaskCheckForTimeOut+0x4c>
 8011d88:	428a      	cmp	r2, r1
 8011d8a:	d90f      	bls.n	8011dac <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8011d8c:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8011d8e:	4283      	cmp	r3, r0
 8011d90:	d90a      	bls.n	8011da8 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8011d92:	1a5b      	subs	r3, r3, r1
 8011d94:	4413      	add	r3, r2
 8011d96:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8011d98:	4628      	mov	r0, r5
 8011d9a:	f7ff ffc5 	bl	8011d28 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8011d9e:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8011da0:	f7fe fd42 	bl	8010828 <vPortExitCritical>
}
 8011da4:	4620      	mov	r0, r4
 8011da6:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8011da8:	2300      	movs	r3, #0
 8011daa:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8011dac:	2401      	movs	r4, #1
 8011dae:	e7f7      	b.n	8011da0 <xTaskCheckForTimeOut+0x60>
 8011db0:	2002bbf4 	.word	0x2002bbf4
 8011db4:	2002bbac 	.word	0x2002bbac

08011db8 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8011db8:	4b01      	ldr	r3, [pc, #4]	; (8011dc0 <vTaskMissedYield+0x8>)
 8011dba:	2201      	movs	r2, #1
 8011dbc:	601a      	str	r2, [r3, #0]
}
 8011dbe:	4770      	bx	lr
 8011dc0:	2002bbf8 	.word	0x2002bbf8

08011dc4 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8011dc4:	4b05      	ldr	r3, [pc, #20]	; (8011ddc <xTaskGetSchedulerState+0x18>)
 8011dc6:	681b      	ldr	r3, [r3, #0]
 8011dc8:	b133      	cbz	r3, 8011dd8 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011dca:	4b05      	ldr	r3, [pc, #20]	; (8011de0 <xTaskGetSchedulerState+0x1c>)
 8011dcc:	681b      	ldr	r3, [r3, #0]
 8011dce:	2b00      	cmp	r3, #0
				xReturn = taskSCHEDULER_SUSPENDED;
 8011dd0:	bf0c      	ite	eq
 8011dd2:	2002      	moveq	r0, #2
 8011dd4:	2000      	movne	r0, #0
 8011dd6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8011dd8:	2001      	movs	r0, #1
	}
 8011dda:	4770      	bx	lr
 8011ddc:	2002bbc8 	.word	0x2002bbc8
 8011de0:	2002bb74 	.word	0x2002bb74

08011de4 <xTaskPriorityInherit>:
	{
 8011de4:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8011de6:	4604      	mov	r4, r0
 8011de8:	b350      	cbz	r0, 8011e40 <xTaskPriorityInherit+0x5c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8011dea:	4a1c      	ldr	r2, [pc, #112]	; (8011e5c <xTaskPriorityInherit+0x78>)
 8011dec:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011dee:	6811      	ldr	r1, [r2, #0]
 8011df0:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 8011df2:	428b      	cmp	r3, r1
 8011df4:	4616      	mov	r6, r2
 8011df6:	d229      	bcs.n	8011e4c <xTaskPriorityInherit+0x68>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8011df8:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8011dfa:	4d19      	ldr	r5, [pc, #100]	; (8011e60 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8011dfc:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011dfe:	bfa1      	itttt	ge
 8011e00:	6832      	ldrge	r2, [r6, #0]
 8011e02:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 8011e04:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 8011e08:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8011e0a:	2214      	movs	r2, #20
 8011e0c:	fb02 5303 	mla	r3, r2, r3, r5
 8011e10:	6942      	ldr	r2, [r0, #20]
 8011e12:	429a      	cmp	r2, r3
 8011e14:	d116      	bne.n	8011e44 <xTaskPriorityInherit+0x60>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011e16:	1d01      	adds	r1, r0, #4
 8011e18:	4608      	mov	r0, r1
 8011e1a:	9101      	str	r1, [sp, #4]
 8011e1c:	f7fe fc65 	bl	80106ea <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011e20:	6833      	ldr	r3, [r6, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8011e22:	4a10      	ldr	r2, [pc, #64]	; (8011e64 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011e24:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8011e26:	6810      	ldr	r0, [r2, #0]
 8011e28:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011e2a:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8011e2c:	4283      	cmp	r3, r0
 8011e2e:	f04f 0014 	mov.w	r0, #20
 8011e32:	fb00 5003 	mla	r0, r0, r3, r5
 8011e36:	bf88      	it	hi
 8011e38:	6013      	strhi	r3, [r2, #0]
 8011e3a:	f7fe fc33 	bl	80106a4 <vListInsertEnd>
				xReturn = pdTRUE;
 8011e3e:	2001      	movs	r0, #1
	}
 8011e40:	b002      	add	sp, #8
 8011e42:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011e44:	6833      	ldr	r3, [r6, #0]
 8011e46:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011e48:	62c3      	str	r3, [r0, #44]	; 0x2c
 8011e4a:	e7f8      	b.n	8011e3e <xTaskPriorityInherit+0x5a>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8011e4c:	6813      	ldr	r3, [r2, #0]
 8011e4e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8011e50:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8011e52:	42a0      	cmp	r0, r4
 8011e54:	bf2c      	ite	cs
 8011e56:	2000      	movcs	r0, #0
 8011e58:	2001      	movcc	r0, #1
 8011e5a:	e7f1      	b.n	8011e40 <xTaskPriorityInherit+0x5c>
 8011e5c:	2002b700 	.word	0x2002b700
 8011e60:	2002b70c 	.word	0x2002b70c
 8011e64:	2002bb7c 	.word	0x2002bb7c

08011e68 <xTaskPriorityDisinherit>:
	{
 8011e68:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 8011e6a:	b910      	cbnz	r0, 8011e72 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 8011e6c:	2000      	movs	r0, #0
	}
 8011e6e:	b002      	add	sp, #8
 8011e70:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8011e72:	4b1c      	ldr	r3, [pc, #112]	; (8011ee4 <xTaskPriorityDisinherit+0x7c>)
 8011e74:	681c      	ldr	r4, [r3, #0]
 8011e76:	4284      	cmp	r4, r0
 8011e78:	d008      	beq.n	8011e8c <xTaskPriorityDisinherit+0x24>
 8011e7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011e7e:	f383 8811 	msr	BASEPRI, r3
 8011e82:	f3bf 8f6f 	isb	sy
 8011e86:	f3bf 8f4f 	dsb	sy
 8011e8a:	e7fe      	b.n	8011e8a <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 8011e8c:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8011e8e:	b943      	cbnz	r3, 8011ea2 <xTaskPriorityDisinherit+0x3a>
 8011e90:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011e94:	f383 8811 	msr	BASEPRI, r3
 8011e98:	f3bf 8f6f 	isb	sy
 8011e9c:	f3bf 8f4f 	dsb	sy
 8011ea0:	e7fe      	b.n	8011ea0 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8011ea2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8011ea4:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8011ea6:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8011ea8:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8011eaa:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8011eac:	d0de      	beq.n	8011e6c <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8011eae:	2b00      	cmp	r3, #0
 8011eb0:	d1dc      	bne.n	8011e6c <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011eb2:	1d21      	adds	r1, r4, #4
 8011eb4:	4608      	mov	r0, r1
 8011eb6:	9101      	str	r1, [sp, #4]
 8011eb8:	f7fe fc17 	bl	80106ea <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8011ebc:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 8011ebe:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8011ec0:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011ec2:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8011ec6:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8011ec8:	4a07      	ldr	r2, [pc, #28]	; (8011ee8 <xTaskPriorityDisinherit+0x80>)
 8011eca:	6810      	ldr	r0, [r2, #0]
 8011ecc:	4283      	cmp	r3, r0
 8011ece:	bf88      	it	hi
 8011ed0:	6013      	strhi	r3, [r2, #0]
 8011ed2:	4a06      	ldr	r2, [pc, #24]	; (8011eec <xTaskPriorityDisinherit+0x84>)
 8011ed4:	2014      	movs	r0, #20
 8011ed6:	fb00 2003 	mla	r0, r0, r3, r2
 8011eda:	f7fe fbe3 	bl	80106a4 <vListInsertEnd>
					xReturn = pdTRUE;
 8011ede:	2001      	movs	r0, #1
		return xReturn;
 8011ee0:	e7c5      	b.n	8011e6e <xTaskPriorityDisinherit+0x6>
 8011ee2:	bf00      	nop
 8011ee4:	2002b700 	.word	0x2002b700
 8011ee8:	2002bb7c 	.word	0x2002bb7c
 8011eec:	2002b70c 	.word	0x2002b70c

08011ef0 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8011ef0:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8011ef2:	4604      	mov	r4, r0
 8011ef4:	2800      	cmp	r0, #0
 8011ef6:	d044      	beq.n	8011f82 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 8011ef8:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8011efa:	b942      	cbnz	r2, 8011f0e <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8011efc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011f00:	f383 8811 	msr	BASEPRI, r3
 8011f04:	f3bf 8f6f 	isb	sy
 8011f08:	f3bf 8f4f 	dsb	sy
 8011f0c:	e7fe      	b.n	8011f0c <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8011f0e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8011f10:	4299      	cmp	r1, r3
 8011f12:	bf38      	it	cc
 8011f14:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8011f16:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011f18:	428b      	cmp	r3, r1
 8011f1a:	d032      	beq.n	8011f82 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8011f1c:	2a01      	cmp	r2, #1
 8011f1e:	d130      	bne.n	8011f82 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 8011f20:	4a19      	ldr	r2, [pc, #100]	; (8011f88 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8011f22:	6812      	ldr	r2, [r2, #0]
 8011f24:	4282      	cmp	r2, r0
 8011f26:	d108      	bne.n	8011f3a <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8011f28:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011f2c:	f383 8811 	msr	BASEPRI, r3
 8011f30:	f3bf 8f6f 	isb	sy
 8011f34:	f3bf 8f4f 	dsb	sy
 8011f38:	e7fe      	b.n	8011f38 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8011f3a:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8011f3c:	4d13      	ldr	r5, [pc, #76]	; (8011f8c <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 8011f3e:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8011f40:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8011f42:	f04f 0214 	mov.w	r2, #20
 8011f46:	fb02 5303 	mla	r3, r2, r3, r5
 8011f4a:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011f4c:	bfa4      	itt	ge
 8011f4e:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 8011f52:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8011f54:	429a      	cmp	r2, r3
 8011f56:	d114      	bne.n	8011f82 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011f58:	1d01      	adds	r1, r0, #4
 8011f5a:	4608      	mov	r0, r1
 8011f5c:	9101      	str	r1, [sp, #4]
 8011f5e:	f7fe fbc4 	bl	80106ea <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8011f62:	4a0b      	ldr	r2, [pc, #44]	; (8011f90 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 8011f64:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011f66:	6810      	ldr	r0, [r2, #0]
 8011f68:	9901      	ldr	r1, [sp, #4]
 8011f6a:	4283      	cmp	r3, r0
 8011f6c:	f04f 0014 	mov.w	r0, #20
 8011f70:	fb00 5003 	mla	r0, r0, r3, r5
 8011f74:	bf88      	it	hi
 8011f76:	6013      	strhi	r3, [r2, #0]
	}
 8011f78:	b003      	add	sp, #12
 8011f7a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 8011f7e:	f7fe bb91 	b.w	80106a4 <vListInsertEnd>
	}
 8011f82:	b003      	add	sp, #12
 8011f84:	bd30      	pop	{r4, r5, pc}
 8011f86:	bf00      	nop
 8011f88:	2002b700 	.word	0x2002b700
 8011f8c:	2002b70c 	.word	0x2002b70c
 8011f90:	2002bb7c 	.word	0x2002bb7c

08011f94 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8011f94:	4b04      	ldr	r3, [pc, #16]	; (8011fa8 <pvTaskIncrementMutexHeldCount+0x14>)
 8011f96:	681a      	ldr	r2, [r3, #0]
 8011f98:	b11a      	cbz	r2, 8011fa2 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8011f9a:	6819      	ldr	r1, [r3, #0]
 8011f9c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8011f9e:	3201      	adds	r2, #1
 8011fa0:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8011fa2:	6818      	ldr	r0, [r3, #0]
	}
 8011fa4:	4770      	bx	lr
 8011fa6:	bf00      	nop
 8011fa8:	2002b700 	.word	0x2002b700

08011fac <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8011fac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8011fae:	4c11      	ldr	r4, [pc, #68]	; (8011ff4 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8011fb0:	f7fe fc18 	bl	80107e4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8011fb4:	6825      	ldr	r5, [r4, #0]
 8011fb6:	b9bd      	cbnz	r5, 8011fe8 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8011fb8:	4f0f      	ldr	r7, [pc, #60]	; (8011ff8 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8011fba:	4e10      	ldr	r6, [pc, #64]	; (8011ffc <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8011fbc:	4638      	mov	r0, r7
 8011fbe:	f7fe fb63 	bl	8010688 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8011fc2:	4630      	mov	r0, r6
 8011fc4:	f7fe fb60 	bl	8010688 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8011fc8:	4b0d      	ldr	r3, [pc, #52]	; (8012000 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8011fca:	4a0e      	ldr	r2, [pc, #56]	; (8012004 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8011fcc:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8011fce:	4b0e      	ldr	r3, [pc, #56]	; (8012008 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8011fd0:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8011fd2:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8011fd4:	200a      	movs	r0, #10
 8011fd6:	4b0d      	ldr	r3, [pc, #52]	; (801200c <prvCheckForValidListAndQueue+0x60>)
 8011fd8:	9500      	str	r5, [sp, #0]
 8011fda:	f7fe fe1b 	bl	8010c14 <xQueueGenericCreateStatic>
 8011fde:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8011fe0:	b110      	cbz	r0, 8011fe8 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8011fe2:	490b      	ldr	r1, [pc, #44]	; (8012010 <prvCheckForValidListAndQueue+0x64>)
 8011fe4:	f7ff f9e8 	bl	80113b8 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8011fe8:	b003      	add	sp, #12
 8011fea:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8011fee:	f7fe bc1b 	b.w	8010828 <vPortExitCritical>
 8011ff2:	bf00      	nop
 8011ff4:	2002bd20 	.word	0x2002bd20
 8011ff8:	2002bca4 	.word	0x2002bca4
 8011ffc:	2002bcb8 	.word	0x2002bcb8
 8012000:	2002bbfc 	.word	0x2002bbfc
 8012004:	2002bc04 	.word	0x2002bc04
 8012008:	2002bc00 	.word	0x2002bc00
 801200c:	2002bcd0 	.word	0x2002bcd0
 8012010:	0802b206 	.word	0x0802b206

08012014 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8012014:	4291      	cmp	r1, r2
{
 8012016:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8012018:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801201a:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 801201c:	d80a      	bhi.n	8012034 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801201e:	1ad2      	subs	r2, r2, r3
 8012020:	6983      	ldr	r3, [r0, #24]
 8012022:	429a      	cmp	r2, r3
 8012024:	d20d      	bcs.n	8012042 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8012026:	4b08      	ldr	r3, [pc, #32]	; (8012048 <prvInsertTimerInActiveList+0x34>)
 8012028:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801202a:	6818      	ldr	r0, [r3, #0]
 801202c:	f7fe fb46 	bl	80106bc <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8012030:	2000      	movs	r0, #0
}
 8012032:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8012034:	429a      	cmp	r2, r3
 8012036:	d201      	bcs.n	801203c <prvInsertTimerInActiveList+0x28>
 8012038:	4299      	cmp	r1, r3
 801203a:	d202      	bcs.n	8012042 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801203c:	4b03      	ldr	r3, [pc, #12]	; (801204c <prvInsertTimerInActiveList+0x38>)
 801203e:	1d01      	adds	r1, r0, #4
 8012040:	e7f3      	b.n	801202a <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8012042:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8012044:	e7f5      	b.n	8012032 <prvInsertTimerInActiveList+0x1e>
 8012046:	bf00      	nop
 8012048:	2002bc00 	.word	0x2002bc00
 801204c:	2002bbfc 	.word	0x2002bbfc

08012050 <xTimerCreateTimerTask>:
{
 8012050:	b510      	push	{r4, lr}
 8012052:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8012054:	f7ff ffaa 	bl	8011fac <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8012058:	4b12      	ldr	r3, [pc, #72]	; (80120a4 <xTimerCreateTimerTask+0x54>)
 801205a:	681b      	ldr	r3, [r3, #0]
 801205c:	b1b3      	cbz	r3, 801208c <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 801205e:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8012060:	aa07      	add	r2, sp, #28
 8012062:	a906      	add	r1, sp, #24
 8012064:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8012066:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 801206a:	f7fe fa0d 	bl	8010488 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 801206e:	9b05      	ldr	r3, [sp, #20]
 8012070:	9302      	str	r3, [sp, #8]
 8012072:	9b06      	ldr	r3, [sp, #24]
 8012074:	9301      	str	r3, [sp, #4]
 8012076:	2302      	movs	r3, #2
 8012078:	9300      	str	r3, [sp, #0]
 801207a:	9a07      	ldr	r2, [sp, #28]
 801207c:	490a      	ldr	r1, [pc, #40]	; (80120a8 <xTimerCreateTimerTask+0x58>)
 801207e:	480b      	ldr	r0, [pc, #44]	; (80120ac <xTimerCreateTimerTask+0x5c>)
 8012080:	4623      	mov	r3, r4
 8012082:	f7ff fb7d 	bl	8011780 <xTaskCreateStatic>
 8012086:	4b0a      	ldr	r3, [pc, #40]	; (80120b0 <xTimerCreateTimerTask+0x60>)
 8012088:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 801208a:	b940      	cbnz	r0, 801209e <xTimerCreateTimerTask+0x4e>
 801208c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8012090:	f383 8811 	msr	BASEPRI, r3
 8012094:	f3bf 8f6f 	isb	sy
 8012098:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 801209c:	e7fe      	b.n	801209c <xTimerCreateTimerTask+0x4c>
}
 801209e:	2001      	movs	r0, #1
 80120a0:	b008      	add	sp, #32
 80120a2:	bd10      	pop	{r4, pc}
 80120a4:	2002bd20 	.word	0x2002bd20
 80120a8:	0802b20b 	.word	0x0802b20b
 80120ac:	08012189 	.word	0x08012189
 80120b0:	2002bd24 	.word	0x2002bd24

080120b4 <xTimerGenericCommand>:
{
 80120b4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80120b6:	4616      	mov	r6, r2
	configASSERT( xTimer );
 80120b8:	4604      	mov	r4, r0
{
 80120ba:	461a      	mov	r2, r3
	configASSERT( xTimer );
 80120bc:	b940      	cbnz	r0, 80120d0 <xTimerGenericCommand+0x1c>
 80120be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80120c2:	f383 8811 	msr	BASEPRI, r3
 80120c6:	f3bf 8f6f 	isb	sy
 80120ca:	f3bf 8f4f 	dsb	sy
 80120ce:	e7fe      	b.n	80120ce <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 80120d0:	4d0d      	ldr	r5, [pc, #52]	; (8012108 <xTimerGenericCommand+0x54>)
 80120d2:	6828      	ldr	r0, [r5, #0]
 80120d4:	b180      	cbz	r0, 80120f8 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 80120d6:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 80120d8:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80120dc:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 80120de:	dc0d      	bgt.n	80120fc <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80120e0:	f7ff fe70 	bl	8011dc4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80120e4:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80120e6:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80120e8:	bf08      	it	eq
 80120ea:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 80120ec:	6828      	ldr	r0, [r5, #0]
 80120ee:	bf18      	it	ne
 80120f0:	461a      	movne	r2, r3
 80120f2:	4669      	mov	r1, sp
 80120f4:	f7fe fe44 	bl	8010d80 <xQueueGenericSend>
}
 80120f8:	b004      	add	sp, #16
 80120fa:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 80120fc:	2300      	movs	r3, #0
 80120fe:	4669      	mov	r1, sp
 8012100:	f7fe fef0 	bl	8010ee4 <xQueueGenericSendFromISR>
 8012104:	e7f8      	b.n	80120f8 <xTimerGenericCommand+0x44>
 8012106:	bf00      	nop
 8012108:	2002bd20 	.word	0x2002bd20

0801210c <prvSwitchTimerLists>:
{
 801210c:	b5f0      	push	{r4, r5, r6, r7, lr}
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 801210e:	4d1c      	ldr	r5, [pc, #112]	; (8012180 <prvSwitchTimerLists+0x74>)
{
 8012110:	b085      	sub	sp, #20
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8012112:	2700      	movs	r7, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8012114:	682b      	ldr	r3, [r5, #0]
 8012116:	681a      	ldr	r2, [r3, #0]
 8012118:	b92a      	cbnz	r2, 8012126 <prvSwitchTimerLists+0x1a>
	pxCurrentTimerList = pxOverflowTimerList;
 801211a:	4a1a      	ldr	r2, [pc, #104]	; (8012184 <prvSwitchTimerLists+0x78>)
 801211c:	6811      	ldr	r1, [r2, #0]
 801211e:	6029      	str	r1, [r5, #0]
	pxOverflowTimerList = pxTemp;
 8012120:	6013      	str	r3, [r2, #0]
}
 8012122:	b005      	add	sp, #20
 8012124:	bdf0      	pop	{r4, r5, r6, r7, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8012126:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8012128:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 801212a:	681e      	ldr	r6, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 801212c:	1d21      	adds	r1, r4, #4
 801212e:	4608      	mov	r0, r1
 8012130:	9103      	str	r1, [sp, #12]
 8012132:	f7fe fada 	bl	80106ea <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8012136:	6a23      	ldr	r3, [r4, #32]
 8012138:	4620      	mov	r0, r4
 801213a:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 801213c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8012140:	9903      	ldr	r1, [sp, #12]
 8012142:	f013 0f04 	tst.w	r3, #4
 8012146:	d0e5      	beq.n	8012114 <prvSwitchTimerLists+0x8>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8012148:	69a3      	ldr	r3, [r4, #24]
 801214a:	4433      	add	r3, r6
			if( xReloadTime > xNextExpireTime )
 801214c:	429e      	cmp	r6, r3
 801214e:	d205      	bcs.n	801215c <prvSwitchTimerLists+0x50>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8012150:	6828      	ldr	r0, [r5, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8012152:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8012154:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8012156:	f7fe fab1 	bl	80106bc <vListInsert>
 801215a:	e7db      	b.n	8012114 <prvSwitchTimerLists+0x8>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 801215c:	2300      	movs	r3, #0
 801215e:	9700      	str	r7, [sp, #0]
 8012160:	4632      	mov	r2, r6
 8012162:	4619      	mov	r1, r3
 8012164:	4620      	mov	r0, r4
 8012166:	f7ff ffa5 	bl	80120b4 <xTimerGenericCommand>
				configASSERT( xResult );
 801216a:	2800      	cmp	r0, #0
 801216c:	d1d2      	bne.n	8012114 <prvSwitchTimerLists+0x8>
 801216e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8012172:	f383 8811 	msr	BASEPRI, r3
 8012176:	f3bf 8f6f 	isb	sy
 801217a:	f3bf 8f4f 	dsb	sy
 801217e:	e7fe      	b.n	801217e <prvSwitchTimerLists+0x72>
 8012180:	2002bbfc 	.word	0x2002bbfc
 8012184:	2002bc00 	.word	0x2002bc00

08012188 <prvTimerTask>:
{
 8012188:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 801218c:	4f77      	ldr	r7, [pc, #476]	; (801236c <prvTimerTask+0x1e4>)
					portYIELD_WITHIN_API();
 801218e:	f8df a1ec 	ldr.w	sl, [pc, #492]	; 801237c <prvTimerTask+0x1f4>
{
 8012192:	b087      	sub	sp, #28
 8012194:	46b9      	mov	r9, r7
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8012196:	683b      	ldr	r3, [r7, #0]
 8012198:	f8d3 b000 	ldr.w	fp, [r3]
 801219c:	f1bb 0f00 	cmp.w	fp, #0
 80121a0:	d028      	beq.n	80121f4 <prvTimerTask+0x6c>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80121a2:	68db      	ldr	r3, [r3, #12]
 80121a4:	f8d3 b000 	ldr.w	fp, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80121a8:	2400      	movs	r4, #0
	if( xTimeNow < xLastTime )
 80121aa:	4e71      	ldr	r6, [pc, #452]	; (8012370 <prvTimerTask+0x1e8>)
	vTaskSuspendAll();
 80121ac:	f7ff fb4e 	bl	801184c <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 80121b0:	f7ff fb54 	bl	801185c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80121b4:	6833      	ldr	r3, [r6, #0]
 80121b6:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 80121b8:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 80121ba:	46b0      	mov	r8, r6
 80121bc:	d31c      	bcc.n	80121f8 <prvTimerTask+0x70>
	xLastTime = xTimeNow;
 80121be:	6030      	str	r0, [r6, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 80121c0:	b31c      	cbz	r4, 801220a <prvTimerTask+0x82>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80121c2:	4b6c      	ldr	r3, [pc, #432]	; (8012374 <prvTimerTask+0x1ec>)
 80121c4:	681b      	ldr	r3, [r3, #0]
 80121c6:	681c      	ldr	r4, [r3, #0]
 80121c8:	fab4 f484 	clz	r4, r4
 80121cc:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 80121ce:	4b6a      	ldr	r3, [pc, #424]	; (8012378 <prvTimerTask+0x1f0>)
 80121d0:	4622      	mov	r2, r4
 80121d2:	6818      	ldr	r0, [r3, #0]
 80121d4:	ebab 0105 	sub.w	r1, fp, r5
 80121d8:	f7ff f92d 	bl	8011436 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 80121dc:	f7ff fbda 	bl	8011994 <xTaskResumeAll>
 80121e0:	b978      	cbnz	r0, 8012202 <prvTimerTask+0x7a>
					portYIELD_WITHIN_API();
 80121e2:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80121e6:	f8ca 3000 	str.w	r3, [sl]
 80121ea:	f3bf 8f4f 	dsb	sy
 80121ee:	f3bf 8f6f 	isb	sy
 80121f2:	e006      	b.n	8012202 <prvTimerTask+0x7a>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80121f4:	2401      	movs	r4, #1
 80121f6:	e7d8      	b.n	80121aa <prvTimerTask+0x22>
		prvSwitchTimerLists();
 80121f8:	f7ff ff88 	bl	801210c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 80121fc:	6035      	str	r5, [r6, #0]
			( void ) xTaskResumeAll();
 80121fe:	f7ff fbc9 	bl	8011994 <xTaskResumeAll>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8012202:	4e5d      	ldr	r6, [pc, #372]	; (8012378 <prvTimerTask+0x1f0>)
 8012204:	f04f 0b00 	mov.w	fp, #0
 8012208:	e035      	b.n	8012276 <prvTimerTask+0xee>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 801220a:	4583      	cmp	fp, r0
 801220c:	d8df      	bhi.n	80121ce <prvTimerTask+0x46>
				( void ) xTaskResumeAll();
 801220e:	f7ff fbc1 	bl	8011994 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8012212:	f8d9 3000 	ldr.w	r3, [r9]
 8012216:	68db      	ldr	r3, [r3, #12]
 8012218:	68de      	ldr	r6, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 801221a:	1d30      	adds	r0, r6, #4
 801221c:	f7fe fa65 	bl	80106ea <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8012220:	f896 3028 	ldrb.w	r3, [r6, #40]	; 0x28
 8012224:	0758      	lsls	r0, r3, #29
 8012226:	d518      	bpl.n	801225a <prvTimerTask+0xd2>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8012228:	69b1      	ldr	r1, [r6, #24]
 801222a:	465b      	mov	r3, fp
 801222c:	462a      	mov	r2, r5
 801222e:	4459      	add	r1, fp
 8012230:	4630      	mov	r0, r6
 8012232:	f7ff feef 	bl	8012014 <prvInsertTimerInActiveList>
 8012236:	b1a0      	cbz	r0, 8012262 <prvTimerTask+0xda>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8012238:	9400      	str	r4, [sp, #0]
 801223a:	4623      	mov	r3, r4
 801223c:	465a      	mov	r2, fp
 801223e:	4621      	mov	r1, r4
 8012240:	4630      	mov	r0, r6
 8012242:	f7ff ff37 	bl	80120b4 <xTimerGenericCommand>
			configASSERT( xResult );
 8012246:	b960      	cbnz	r0, 8012262 <prvTimerTask+0xda>
 8012248:	f04f 0350 	mov.w	r3, #80	; 0x50
 801224c:	f383 8811 	msr	BASEPRI, r3
 8012250:	f3bf 8f6f 	isb	sy
 8012254:	f3bf 8f4f 	dsb	sy
 8012258:	e7fe      	b.n	8012258 <prvTimerTask+0xd0>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 801225a:	f023 0301 	bic.w	r3, r3, #1
 801225e:	f886 3028 	strb.w	r3, [r6, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8012262:	6a33      	ldr	r3, [r6, #32]
 8012264:	4630      	mov	r0, r6
 8012266:	4798      	blx	r3
}
 8012268:	e7cb      	b.n	8012202 <prvTimerTask+0x7a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 801226a:	9b03      	ldr	r3, [sp, #12]
 801226c:	9905      	ldr	r1, [sp, #20]
 801226e:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8012270:	9b02      	ldr	r3, [sp, #8]
 8012272:	2b00      	cmp	r3, #0
 8012274:	da0a      	bge.n	801228c <prvTimerTask+0x104>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8012276:	6830      	ldr	r0, [r6, #0]
 8012278:	2200      	movs	r2, #0
 801227a:	a902      	add	r1, sp, #8
 801227c:	f7fe fee8 	bl	8011050 <xQueueReceive>
 8012280:	2800      	cmp	r0, #0
 8012282:	d088      	beq.n	8012196 <prvTimerTask+0xe>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8012284:	9b02      	ldr	r3, [sp, #8]
 8012286:	9804      	ldr	r0, [sp, #16]
 8012288:	2b00      	cmp	r3, #0
 801228a:	dbee      	blt.n	801226a <prvTimerTask+0xe2>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 801228c:	9c04      	ldr	r4, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 801228e:	6963      	ldr	r3, [r4, #20]
 8012290:	b9a3      	cbnz	r3, 80122bc <prvTimerTask+0x134>
	xTimeNow = xTaskGetTickCount();
 8012292:	f7ff fae3 	bl	801185c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8012296:	f8d8 3000 	ldr.w	r3, [r8]
 801229a:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 801229c:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 801229e:	d201      	bcs.n	80122a4 <prvTimerTask+0x11c>
		prvSwitchTimerLists();
 80122a0:	f7ff ff34 	bl	801210c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 80122a4:	9b02      	ldr	r3, [sp, #8]
 80122a6:	f8c8 5000 	str.w	r5, [r8]
			switch( xMessage.xMessageID )
 80122aa:	2b09      	cmp	r3, #9
 80122ac:	d8e3      	bhi.n	8012276 <prvTimerTask+0xee>
 80122ae:	e8df f003 	tbb	[pc, r3]
 80122b2:	0909      	.short	0x0909
 80122b4:	543b3409 	.word	0x543b3409
 80122b8:	3b340909 	.word	0x3b340909
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80122bc:	1d20      	adds	r0, r4, #4
 80122be:	f7fe fa14 	bl	80106ea <uxListRemove>
 80122c2:	e7e6      	b.n	8012292 <prvTimerTask+0x10a>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80122c4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 80122c8:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80122ca:	f043 0301 	orr.w	r3, r3, #1
 80122ce:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 80122d2:	9b03      	ldr	r3, [sp, #12]
 80122d4:	462a      	mov	r2, r5
 80122d6:	4419      	add	r1, r3
 80122d8:	4620      	mov	r0, r4
 80122da:	f7ff fe9b 	bl	8012014 <prvInsertTimerInActiveList>
 80122de:	2800      	cmp	r0, #0
 80122e0:	d0c9      	beq.n	8012276 <prvTimerTask+0xee>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80122e2:	6a23      	ldr	r3, [r4, #32]
 80122e4:	4620      	mov	r0, r4
 80122e6:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80122e8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80122ec:	0759      	lsls	r1, r3, #29
 80122ee:	d5c2      	bpl.n	8012276 <prvTimerTask+0xee>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 80122f0:	69a2      	ldr	r2, [r4, #24]
 80122f2:	9903      	ldr	r1, [sp, #12]
 80122f4:	f8cd b000 	str.w	fp, [sp]
 80122f8:	2300      	movs	r3, #0
 80122fa:	440a      	add	r2, r1
 80122fc:	4620      	mov	r0, r4
 80122fe:	4619      	mov	r1, r3
 8012300:	f7ff fed8 	bl	80120b4 <xTimerGenericCommand>
							configASSERT( xResult );
 8012304:	2800      	cmp	r0, #0
 8012306:	d1b6      	bne.n	8012276 <prvTimerTask+0xee>
 8012308:	f04f 0350 	mov.w	r3, #80	; 0x50
 801230c:	f383 8811 	msr	BASEPRI, r3
 8012310:	f3bf 8f6f 	isb	sy
 8012314:	f3bf 8f4f 	dsb	sy
 8012318:	e7fe      	b.n	8012318 <prvTimerTask+0x190>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 801231a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 801231e:	f023 0301 	bic.w	r3, r3, #1
 8012322:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8012326:	e7a6      	b.n	8012276 <prvTimerTask+0xee>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8012328:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 801232c:	9903      	ldr	r1, [sp, #12]
 801232e:	61a1      	str	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8012330:	f043 0301 	orr.w	r3, r3, #1
 8012334:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8012338:	b941      	cbnz	r1, 801234c <prvTimerTask+0x1c4>
 801233a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801233e:	f383 8811 	msr	BASEPRI, r3
 8012342:	f3bf 8f6f 	isb	sy
 8012346:	f3bf 8f4f 	dsb	sy
 801234a:	e7fe      	b.n	801234a <prvTimerTask+0x1c2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 801234c:	462b      	mov	r3, r5
 801234e:	462a      	mov	r2, r5
 8012350:	4429      	add	r1, r5
 8012352:	4620      	mov	r0, r4
 8012354:	f7ff fe5e 	bl	8012014 <prvInsertTimerInActiveList>
					break;
 8012358:	e78d      	b.n	8012276 <prvTimerTask+0xee>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 801235a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 801235e:	079a      	lsls	r2, r3, #30
 8012360:	d4dd      	bmi.n	801231e <prvTimerTask+0x196>
							vPortFree( pxTimer );
 8012362:	4620      	mov	r0, r4
 8012364:	f7fe f952 	bl	801060c <vPortFree>
 8012368:	e785      	b.n	8012276 <prvTimerTask+0xee>
 801236a:	bf00      	nop
 801236c:	2002bbfc 	.word	0x2002bbfc
 8012370:	2002bccc 	.word	0x2002bccc
 8012374:	2002bc00 	.word	0x2002bc00
 8012378:	2002bd20 	.word	0x2002bd20
 801237c:	e000ed04 	.word	0xe000ed04

08012380 <is_leap_year>:
is_leap_year(uint16_t year)
{
    div_t           d;

    /* year must be divisible by 4 to be a leap year */
    if (year & 3)
 8012380:	0783      	lsls	r3, r0, #30
{
 8012382:	b507      	push	{r0, r1, r2, lr}
 8012384:	4601      	mov	r1, r0
    if (year & 3)
 8012386:	d10e      	bne.n	80123a6 <is_leap_year+0x26>
        return 0;

    /* If there is a remainder after division by 100, year is not divisible by 100 or 400 */
    d = div(year, 100);
 8012388:	2264      	movs	r2, #100	; 0x64
 801238a:	4668      	mov	r0, sp
 801238c:	f015 fa2a 	bl	80277e4 <div>
    if (d.rem)
 8012390:	9b01      	ldr	r3, [sp, #4]
 8012392:	b953      	cbnz	r3, 80123aa <is_leap_year+0x2a>
        return 1;

    /* If the quotient is divisible by 4, then year is divisible by 400 */
    if ((d.quot & 3) == 0)
 8012394:	9b00      	ldr	r3, [sp, #0]
 8012396:	f013 0f03 	tst.w	r3, #3
        return 0;
 801239a:	bf0c      	ite	eq
 801239c:	2001      	moveq	r0, #1
 801239e:	2000      	movne	r0, #0
        return 1;

    return 0;
}
 80123a0:	b003      	add	sp, #12
 80123a2:	f85d fb04 	ldr.w	pc, [sp], #4
        return 0;
 80123a6:	2000      	movs	r0, #0
 80123a8:	e7fa      	b.n	80123a0 <is_leap_year+0x20>
        return 1;
 80123aa:	2001      	movs	r0, #1
 80123ac:	e7f8      	b.n	80123a0 <is_leap_year+0x20>

080123ae <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 80123ae:	8880      	ldrh	r0, [r0, #4]
 80123b0:	4770      	bx	lr

080123b2 <_ZN8touchgfx17AbstractPartition5clearEv>:
 80123b2:	2300      	movs	r3, #0
 80123b4:	8083      	strh	r3, [r0, #4]
 80123b6:	4770      	bx	lr

080123b8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 80123b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80123ba:	6803      	ldr	r3, [r0, #0]
 80123bc:	4605      	mov	r5, r0
 80123be:	460e      	mov	r6, r1
 80123c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80123c2:	2100      	movs	r1, #0
 80123c4:	4798      	blx	r3
 80123c6:	682b      	ldr	r3, [r5, #0]
 80123c8:	4604      	mov	r4, r0
 80123ca:	6a1b      	ldr	r3, [r3, #32]
 80123cc:	4628      	mov	r0, r5
 80123ce:	4798      	blx	r3
 80123d0:	88ab      	ldrh	r3, [r5, #4]
 80123d2:	1b34      	subs	r4, r6, r4
 80123d4:	b2a4      	uxth	r4, r4
 80123d6:	fbb4 f4f0 	udiv	r4, r4, r0
 80123da:	42a3      	cmp	r3, r4
 80123dc:	d805      	bhi.n	80123ea <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 80123de:	4b0e      	ldr	r3, [pc, #56]	; (8012418 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 80123e0:	4a0e      	ldr	r2, [pc, #56]	; (801241c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 80123e2:	211e      	movs	r1, #30
 80123e4:	480e      	ldr	r0, [pc, #56]	; (8012420 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 80123e6:	f015 f9cb 	bl	8027780 <__assert_func>
 80123ea:	682b      	ldr	r3, [r5, #0]
 80123ec:	2100      	movs	r1, #0
 80123ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80123f0:	4628      	mov	r0, r5
 80123f2:	4798      	blx	r3
 80123f4:	682b      	ldr	r3, [r5, #0]
 80123f6:	4607      	mov	r7, r0
 80123f8:	6a1b      	ldr	r3, [r3, #32]
 80123fa:	4628      	mov	r0, r5
 80123fc:	4798      	blx	r3
 80123fe:	1bf3      	subs	r3, r6, r7
 8012400:	b29b      	uxth	r3, r3
 8012402:	fbb3 f2f0 	udiv	r2, r3, r0
 8012406:	fb02 3010 	mls	r0, r2, r0, r3
 801240a:	b118      	cbz	r0, 8012414 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 801240c:	4b05      	ldr	r3, [pc, #20]	; (8012424 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 801240e:	4a03      	ldr	r2, [pc, #12]	; (801241c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8012410:	211f      	movs	r1, #31
 8012412:	e7e7      	b.n	80123e4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 8012414:	4620      	mov	r0, r4
 8012416:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012418:	0802b213 	.word	0x0802b213
 801241c:	0802b37e 	.word	0x0802b37e
 8012420:	0802b228 	.word	0x0802b228
 8012424:	0802b256 	.word	0x0802b256

08012428 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8012428:	b538      	push	{r3, r4, r5, lr}
 801242a:	6803      	ldr	r3, [r0, #0]
 801242c:	6a1b      	ldr	r3, [r3, #32]
 801242e:	460d      	mov	r5, r1
 8012430:	4604      	mov	r4, r0
 8012432:	4798      	blx	r3
 8012434:	4285      	cmp	r5, r0
 8012436:	d905      	bls.n	8012444 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 8012438:	4b0c      	ldr	r3, [pc, #48]	; (801246c <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 801243a:	4a0d      	ldr	r2, [pc, #52]	; (8012470 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 801243c:	2130      	movs	r1, #48	; 0x30
 801243e:	480d      	ldr	r0, [pc, #52]	; (8012474 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 8012440:	f015 f99e 	bl	8027780 <__assert_func>
 8012444:	6823      	ldr	r3, [r4, #0]
 8012446:	88a5      	ldrh	r5, [r4, #4]
 8012448:	69db      	ldr	r3, [r3, #28]
 801244a:	4620      	mov	r0, r4
 801244c:	4798      	blx	r3
 801244e:	4285      	cmp	r5, r0
 8012450:	d303      	bcc.n	801245a <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 8012452:	4b09      	ldr	r3, [pc, #36]	; (8012478 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 8012454:	4a06      	ldr	r2, [pc, #24]	; (8012470 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8012456:	2131      	movs	r1, #49	; 0x31
 8012458:	e7f1      	b.n	801243e <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 801245a:	6823      	ldr	r3, [r4, #0]
 801245c:	88a1      	ldrh	r1, [r4, #4]
 801245e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012460:	4620      	mov	r0, r4
 8012462:	4798      	blx	r3
 8012464:	88a3      	ldrh	r3, [r4, #4]
 8012466:	3301      	adds	r3, #1
 8012468:	80a3      	strh	r3, [r4, #4]
 801246a:	bd38      	pop	{r3, r4, r5, pc}
 801246c:	0802b2d0 	.word	0x0802b2d0
 8012470:	0802b3c1 	.word	0x0802b3c1
 8012474:	0802b228 	.word	0x0802b228
 8012478:	0802b2e7 	.word	0x0802b2e7

0801247c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 801247c:	b570      	push	{r4, r5, r6, lr}
 801247e:	6803      	ldr	r3, [r0, #0]
 8012480:	6a1b      	ldr	r3, [r3, #32]
 8012482:	4616      	mov	r6, r2
 8012484:	4604      	mov	r4, r0
 8012486:	460d      	mov	r5, r1
 8012488:	4798      	blx	r3
 801248a:	4286      	cmp	r6, r0
 801248c:	d905      	bls.n	801249a <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 801248e:	4b06      	ldr	r3, [pc, #24]	; (80124a8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 8012490:	4a06      	ldr	r2, [pc, #24]	; (80124ac <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 8012492:	4807      	ldr	r0, [pc, #28]	; (80124b0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 8012494:	213a      	movs	r1, #58	; 0x3a
 8012496:	f015 f973 	bl	8027780 <__assert_func>
 801249a:	6823      	ldr	r3, [r4, #0]
 801249c:	4629      	mov	r1, r5
 801249e:	4620      	mov	r0, r4
 80124a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80124a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80124a6:	4718      	bx	r3
 80124a8:	0802b2d0 	.word	0x0802b2d0
 80124ac:	0802b334 	.word	0x0802b334
 80124b0:	0802b228 	.word	0x0802b228

080124b4 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 80124b4:	4770      	bx	lr
	...

080124b8 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 80124b8:	4a02      	ldr	r2, [pc, #8]	; (80124c4 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 80124ba:	6002      	str	r2, [r0, #0]
 80124bc:	2200      	movs	r2, #0
 80124be:	8082      	strh	r2, [r0, #4]
 80124c0:	4770      	bx	lr
 80124c2:	bf00      	nop
 80124c4:	0802b308 	.word	0x0802b308

080124c8 <_ZNK8touchgfx12DrawableList13getHorizontalEv>:
 80124c8:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 80124cc:	4770      	bx	lr

080124ce <_ZNK8touchgfx12DrawableList11getCircularEv>:
 80124ce:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 80124d2:	4770      	bx	lr

080124d4 <_ZNK8touchgfx12DrawableList11getItemSizeEv>:
 80124d4:	f9b0 0034 	ldrsh.w	r0, [r0, #52]	; 0x34
 80124d8:	4770      	bx	lr

080124da <_ZNK8touchgfx12DrawableList15getDrawableSizeEv>:
 80124da:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80124dc:	8e80      	ldrh	r0, [r0, #52]	; 0x34
 80124de:	eba0 0043 	sub.w	r0, r0, r3, lsl #1
 80124e2:	b200      	sxth	r0, r0
 80124e4:	4770      	bx	lr

080124e6 <_ZNK8touchgfx12DrawableList17getDrawableMarginEv>:
 80124e6:	f9b0 0036 	ldrsh.w	r0, [r0, #54]	; 0x36
 80124ea:	4770      	bx	lr

080124ec <_ZN8touchgfx12DrawableListD1Ev>:
 80124ec:	4770      	bx	lr

080124ee <_ZN8touchgfx12DrawableListD0Ev>:
 80124ee:	b510      	push	{r4, lr}
 80124f0:	214c      	movs	r1, #76	; 0x4c
 80124f2:	4604      	mov	r4, r0
 80124f4:	f015 f916 	bl	8027724 <_ZdlPvj>
 80124f8:	4620      	mov	r0, r4
 80124fa:	bd10      	pop	{r4, pc}

080124fc <_ZN8touchgfx12DrawableListC1Ev>:
 80124fc:	2101      	movs	r1, #1
 80124fe:	2200      	movs	r2, #0
 8012500:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8012504:	4910      	ldr	r1, [pc, #64]	; (8012548 <_ZN8touchgfx12DrawableListC1Ev+0x4c>)
 8012506:	8082      	strh	r2, [r0, #4]
 8012508:	80c2      	strh	r2, [r0, #6]
 801250a:	8102      	strh	r2, [r0, #8]
 801250c:	8142      	strh	r2, [r0, #10]
 801250e:	8182      	strh	r2, [r0, #12]
 8012510:	81c2      	strh	r2, [r0, #14]
 8012512:	8202      	strh	r2, [r0, #16]
 8012514:	8242      	strh	r2, [r0, #18]
 8012516:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801251a:	61c2      	str	r2, [r0, #28]
 801251c:	8402      	strh	r2, [r0, #32]
 801251e:	8442      	strh	r2, [r0, #34]	; 0x22
 8012520:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8012524:	6282      	str	r2, [r0, #40]	; 0x28
 8012526:	6001      	str	r1, [r0, #0]
 8012528:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 801252c:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
 8012530:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8012534:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8012538:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
 801253c:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 8012540:	e9c0 2211 	strd	r2, r2, [r0, #68]	; 0x44
 8012544:	4770      	bx	lr
 8012546:	bf00      	nop
 8012548:	0802b408 	.word	0x0802b408

0801254c <_ZN8touchgfx12DrawableList15setDrawableSizeEss>:
 801254c:	eb01 0142 	add.w	r1, r1, r2, lsl #1
 8012550:	8681      	strh	r1, [r0, #52]	; 0x34
 8012552:	86c2      	strh	r2, [r0, #54]	; 0x36
 8012554:	4770      	bx	lr

08012556 <_ZNK8touchgfx12DrawableList16getNumberOfItemsEv>:
 8012556:	f9b0 0038 	ldrsh.w	r0, [r0, #56]	; 0x38
 801255a:	4770      	bx	lr

0801255c <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv>:
 801255c:	b538      	push	{r3, r4, r5, lr}
 801255e:	4605      	mov	r5, r0
 8012560:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8012562:	b308      	cbz	r0, 80125a8 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x4c>
 8012564:	f9b5 2034 	ldrsh.w	r2, [r5, #52]	; 0x34
 8012568:	2a00      	cmp	r2, #0
 801256a:	dd21      	ble.n	80125b0 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x54>
 801256c:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 8012570:	b1db      	cbz	r3, 80125aa <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x4e>
 8012572:	f9b5 4008 	ldrsh.w	r4, [r5, #8]
 8012576:	1e63      	subs	r3, r4, #1
 8012578:	1e54      	subs	r4, r2, #1
 801257a:	441c      	add	r4, r3
 801257c:	f895 302d 	ldrb.w	r3, [r5, #45]	; 0x2d
 8012580:	fb94 f4f2 	sdiv	r4, r4, r2
 8012584:	3401      	adds	r4, #1
 8012586:	b224      	sxth	r4, r4
 8012588:	b923      	cbnz	r3, 8012594 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x38>
 801258a:	f9b5 3038 	ldrsh.w	r3, [r5, #56]	; 0x38
 801258e:	429c      	cmp	r4, r3
 8012590:	bfa8      	it	ge
 8012592:	461c      	movge	r4, r3
 8012594:	6803      	ldr	r3, [r0, #0]
 8012596:	68db      	ldr	r3, [r3, #12]
 8012598:	4798      	blx	r3
 801259a:	f9b5 3042 	ldrsh.w	r3, [r5, #66]	; 0x42
 801259e:	1ac0      	subs	r0, r0, r3
 80125a0:	42a0      	cmp	r0, r4
 80125a2:	bfa8      	it	ge
 80125a4:	4620      	movge	r0, r4
 80125a6:	b200      	sxth	r0, r0
 80125a8:	bd38      	pop	{r3, r4, r5, pc}
 80125aa:	f9b5 400a 	ldrsh.w	r4, [r5, #10]
 80125ae:	e7e2      	b.n	8012576 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x1a>
 80125b0:	2000      	movs	r0, #0
 80125b2:	e7f9      	b.n	80125a8 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x4c>

080125b4 <_ZN8touchgfx12DrawableList9setOffsetEl>:
 80125b4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80125b8:	4604      	mov	r4, r0
 80125ba:	460d      	mov	r5, r1
 80125bc:	6321      	str	r1, [r4, #48]	; 0x30
 80125be:	f9b0 303a 	ldrsh.w	r3, [r0, #58]	; 0x3a
 80125c2:	2b00      	cmp	r3, #0
 80125c4:	f000 80eb 	beq.w	801279e <_ZN8touchgfx12DrawableList9setOffsetEl+0x1ea>
 80125c8:	f9b0 3038 	ldrsh.w	r3, [r0, #56]	; 0x38
 80125cc:	2b00      	cmp	r3, #0
 80125ce:	f000 80e6 	beq.w	801279e <_ZN8touchgfx12DrawableList9setOffsetEl+0x1ea>
 80125d2:	f9b0 3034 	ldrsh.w	r3, [r0, #52]	; 0x34
 80125d6:	2b00      	cmp	r3, #0
 80125d8:	f000 80e1 	beq.w	801279e <_ZN8touchgfx12DrawableList9setOffsetEl+0x1ea>
 80125dc:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80125de:	2800      	cmp	r0, #0
 80125e0:	f000 80dd 	beq.w	801279e <_ZN8touchgfx12DrawableList9setOffsetEl+0x1ea>
 80125e4:	6803      	ldr	r3, [r0, #0]
 80125e6:	68db      	ldr	r3, [r3, #12]
 80125e8:	4798      	blx	r3
 80125ea:	2800      	cmp	r0, #0
 80125ec:	f000 80d7 	beq.w	801279e <_ZN8touchgfx12DrawableList9setOffsetEl+0x1ea>
 80125f0:	2d00      	cmp	r5, #0
 80125f2:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 80125f6:	bfc1      	itttt	gt
 80125f8:	fb95 f2f1 	sdivgt	r2, r5, r1
 80125fc:	3201      	addgt	r2, #1
 80125fe:	4253      	neggt	r3, r2
 8012600:	fb01 5512 	mlsgt	r5, r1, r2, r5
 8012604:	f1c1 0200 	rsb	r2, r1, #0
 8012608:	bfcc      	ite	gt
 801260a:	b21b      	sxthgt	r3, r3
 801260c:	2300      	movle	r3, #0
 801260e:	f894 702d 	ldrb.w	r7, [r4, #45]	; 0x2d
 8012612:	f9b4 003a 	ldrsh.w	r0, [r4, #58]	; 0x3a
 8012616:	42aa      	cmp	r2, r5
 8012618:	bfa1      	itttt	ge
 801261a:	fb95 f2f1 	sdivge	r2, r5, r1
 801261e:	1a9b      	subge	r3, r3, r2
 8012620:	b21b      	sxthge	r3, r3
 8012622:	fb01 5512 	mlsge	r5, r1, r2, r5
 8012626:	b167      	cbz	r7, 8012642 <_ZN8touchgfx12DrawableList9setOffsetEl+0x8e>
 8012628:	f9b4 1038 	ldrsh.w	r1, [r4, #56]	; 0x38
 801262c:	fb93 f2f1 	sdiv	r2, r3, r1
 8012630:	fb01 3312 	mls	r3, r1, r2, r3
 8012634:	440b      	add	r3, r1
 8012636:	fb93 f2f1 	sdiv	r2, r3, r1
 801263a:	fb01 3312 	mls	r3, r1, r2, r3
 801263e:	b21b      	sxth	r3, r3
 8012640:	e004      	b.n	801264c <_ZN8touchgfx12DrawableList9setOffsetEl+0x98>
 8012642:	2b00      	cmp	r3, #0
 8012644:	da64      	bge.n	8012710 <_ZN8touchgfx12DrawableList9setOffsetEl+0x15c>
 8012646:	fb01 5513 	mls	r5, r1, r3, r5
 801264a:	463b      	mov	r3, r7
 801264c:	f894 6040 	ldrb.w	r6, [r4, #64]	; 0x40
 8012650:	b1be      	cbz	r6, 8012682 <_ZN8touchgfx12DrawableList9setOffsetEl+0xce>
 8012652:	f9b4 e03c 	ldrsh.w	lr, [r4, #60]	; 0x3c
 8012656:	459e      	cmp	lr, r3
 8012658:	d068      	beq.n	801272c <_ZN8touchgfx12DrawableList9setOffsetEl+0x178>
 801265a:	2601      	movs	r6, #1
 801265c:	4286      	cmp	r6, r0
 801265e:	da67      	bge.n	8012730 <_ZN8touchgfx12DrawableList9setOffsetEl+0x17c>
 8012660:	eb0e 0106 	add.w	r1, lr, r6
 8012664:	199a      	adds	r2, r3, r6
 8012666:	b14f      	cbz	r7, 801267c <_ZN8touchgfx12DrawableList9setOffsetEl+0xc8>
 8012668:	f9b4 c038 	ldrsh.w	ip, [r4, #56]	; 0x38
 801266c:	fb91 f8fc 	sdiv	r8, r1, ip
 8012670:	fb0c 1118 	mls	r1, ip, r8, r1
 8012674:	fb92 f8fc 	sdiv	r8, r2, ip
 8012678:	fb0c 2218 	mls	r2, ip, r8, r2
 801267c:	428b      	cmp	r3, r1
 801267e:	d151      	bne.n	8012724 <_ZN8touchgfx12DrawableList9setOffsetEl+0x170>
 8012680:	4276      	negs	r6, r6
 8012682:	f9b4 203e 	ldrsh.w	r2, [r4, #62]	; 0x3e
 8012686:	87a3      	strh	r3, [r4, #60]	; 0x3c
 8012688:	1b92      	subs	r2, r2, r6
 801268a:	4402      	add	r2, r0
 801268c:	2700      	movs	r7, #0
 801268e:	fb92 f1f0 	sdiv	r1, r2, r0
 8012692:	fb00 2011 	mls	r0, r0, r1, r2
 8012696:	87e0      	strh	r0, [r4, #62]	; 0x3e
 8012698:	b2ad      	uxth	r5, r5
 801269a:	46ba      	mov	sl, r7
 801269c:	f04f 0b01 	mov.w	fp, #1
 80126a0:	f9b4 203a 	ldrsh.w	r2, [r4, #58]	; 0x3a
 80126a4:	42ba      	cmp	r2, r7
 80126a6:	dd77      	ble.n	8012798 <_ZN8touchgfx12DrawableList9setOffsetEl+0x1e4>
 80126a8:	f9b4 303e 	ldrsh.w	r3, [r4, #62]	; 0x3e
 80126ac:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80126ae:	f8b4 1042 	ldrh.w	r1, [r4, #66]	; 0x42
 80126b2:	443b      	add	r3, r7
 80126b4:	fb93 f8f2 	sdiv	r8, r3, r2
 80126b8:	fb02 3818 	mls	r8, r2, r8, r3
 80126bc:	fa1f f888 	uxth.w	r8, r8
 80126c0:	6803      	ldr	r3, [r0, #0]
 80126c2:	4441      	add	r1, r8
 80126c4:	689b      	ldr	r3, [r3, #8]
 80126c6:	b209      	sxth	r1, r1
 80126c8:	4798      	blx	r3
 80126ca:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 80126ce:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80126d0:	f8b4 c034 	ldrh.w	ip, [r4, #52]	; 0x34
 80126d4:	6802      	ldr	r2, [r0, #0]
 80126d6:	4681      	mov	r9, r0
 80126d8:	fa1f fe87 	uxth.w	lr, r7
 80126dc:	b351      	cbz	r1, 8012734 <_ZN8touchgfx12DrawableList9setOffsetEl+0x180>
 80126de:	18e9      	adds	r1, r5, r3
 80126e0:	fb1c 110e 	smlabb	r1, ip, lr, r1
 80126e4:	6d53      	ldr	r3, [r2, #84]	; 0x54
 80126e6:	b209      	sxth	r1, r1
 80126e8:	2200      	movs	r2, #0
 80126ea:	4798      	blx	r3
 80126ec:	f9b4 303c 	ldrsh.w	r3, [r4, #60]	; 0x3c
 80126f0:	f894 202d 	ldrb.w	r2, [r4, #45]	; 0x2d
 80126f4:	443b      	add	r3, r7
 80126f6:	b322      	cbz	r2, 8012742 <_ZN8touchgfx12DrawableList9setOffsetEl+0x18e>
 80126f8:	f9b4 2038 	ldrsh.w	r2, [r4, #56]	; 0x38
 80126fc:	fb93 f1f2 	sdiv	r1, r3, r2
 8012700:	fb02 3311 	mls	r3, r2, r1, r3
 8012704:	2b00      	cmp	r3, #0
 8012706:	da22      	bge.n	801274e <_ZN8touchgfx12DrawableList9setOffsetEl+0x19a>
 8012708:	f889 a025 	strb.w	sl, [r9, #37]	; 0x25
 801270c:	3701      	adds	r7, #1
 801270e:	e7c7      	b.n	80126a0 <_ZN8touchgfx12DrawableList9setOffsetEl+0xec>
 8012710:	f9b4 2038 	ldrsh.w	r2, [r4, #56]	; 0x38
 8012714:	18c6      	adds	r6, r0, r3
 8012716:	4296      	cmp	r6, r2
 8012718:	dd98      	ble.n	801264c <_ZN8touchgfx12DrawableList9setOffsetEl+0x98>
 801271a:	1b92      	subs	r2, r2, r6
 801271c:	fb01 5502 	mla	r5, r1, r2, r5
 8012720:	4413      	add	r3, r2
 8012722:	e78c      	b.n	801263e <_ZN8touchgfx12DrawableList9setOffsetEl+0x8a>
 8012724:	4596      	cmp	lr, r2
 8012726:	d0ac      	beq.n	8012682 <_ZN8touchgfx12DrawableList9setOffsetEl+0xce>
 8012728:	3601      	adds	r6, #1
 801272a:	e797      	b.n	801265c <_ZN8touchgfx12DrawableList9setOffsetEl+0xa8>
 801272c:	2600      	movs	r6, #0
 801272e:	e7a8      	b.n	8012682 <_ZN8touchgfx12DrawableList9setOffsetEl+0xce>
 8012730:	4606      	mov	r6, r0
 8012732:	e7a6      	b.n	8012682 <_ZN8touchgfx12DrawableList9setOffsetEl+0xce>
 8012734:	442b      	add	r3, r5
 8012736:	fb1c 3c0e 	smlabb	ip, ip, lr, r3
 801273a:	6d53      	ldr	r3, [r2, #84]	; 0x54
 801273c:	fa0f f28c 	sxth.w	r2, ip
 8012740:	e7d3      	b.n	80126ea <_ZN8touchgfx12DrawableList9setOffsetEl+0x136>
 8012742:	2b00      	cmp	r3, #0
 8012744:	dbe0      	blt.n	8012708 <_ZN8touchgfx12DrawableList9setOffsetEl+0x154>
 8012746:	f9b4 2038 	ldrsh.w	r2, [r4, #56]	; 0x38
 801274a:	4293      	cmp	r3, r2
 801274c:	dadc      	bge.n	8012708 <_ZN8touchgfx12DrawableList9setOffsetEl+0x154>
 801274e:	f889 b025 	strb.w	fp, [r9, #37]	; 0x25
 8012752:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8012756:	b132      	cbz	r2, 8012766 <_ZN8touchgfx12DrawableList9setOffsetEl+0x1b2>
 8012758:	42be      	cmp	r6, r7
 801275a:	dc04      	bgt.n	8012766 <_ZN8touchgfx12DrawableList9setOffsetEl+0x1b2>
 801275c:	f9b4 203a 	ldrsh.w	r2, [r4, #58]	; 0x3a
 8012760:	4432      	add	r2, r6
 8012762:	4297      	cmp	r7, r2
 8012764:	dbd2      	blt.n	801270c <_ZN8touchgfx12DrawableList9setOffsetEl+0x158>
 8012766:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8012768:	9301      	str	r3, [sp, #4]
 801276a:	6802      	ldr	r2, [r0, #0]
 801276c:	68d2      	ldr	r2, [r2, #12]
 801276e:	4790      	blx	r2
 8012770:	2800      	cmp	r0, #0
 8012772:	d0cb      	beq.n	801270c <_ZN8touchgfx12DrawableList9setOffsetEl+0x158>
 8012774:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8012776:	f8b4 2042 	ldrh.w	r2, [r4, #66]	; 0x42
 801277a:	6801      	ldr	r1, [r0, #0]
 801277c:	9b01      	ldr	r3, [sp, #4]
 801277e:	4442      	add	r2, r8
 8012780:	b21b      	sxth	r3, r3
 8012782:	f8d1 8008 	ldr.w	r8, [r1, #8]
 8012786:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8012788:	b212      	sxth	r2, r2
 801278a:	47c0      	blx	r8
 801278c:	f8d9 3000 	ldr.w	r3, [r9]
 8012790:	4648      	mov	r0, r9
 8012792:	695b      	ldr	r3, [r3, #20]
 8012794:	4798      	blx	r3
 8012796:	e7b9      	b.n	801270c <_ZN8touchgfx12DrawableList9setOffsetEl+0x158>
 8012798:	2301      	movs	r3, #1
 801279a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 801279e:	b003      	add	sp, #12
 80127a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080127a4 <_ZNK8touchgfx12DrawableList9getOffsetEv>:
 80127a4:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80127a6:	4770      	bx	lr

080127a8 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss>:
 80127a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80127aa:	1c54      	adds	r4, r2, #1
 80127ac:	db2f      	blt.n	801280e <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 80127ae:	f9b0 403a 	ldrsh.w	r4, [r0, #58]	; 0x3a
 80127b2:	4294      	cmp	r4, r2
 80127b4:	dd2b      	ble.n	801280e <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 80127b6:	b354      	cbz	r4, 801280e <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 80127b8:	f9b0 6038 	ldrsh.w	r6, [r0, #56]	; 0x38
 80127bc:	b33e      	cbz	r6, 801280e <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 80127be:	1c53      	adds	r3, r2, #1
 80127c0:	d008      	beq.n	80127d4 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x2c>
 80127c2:	f9b0 303e 	ldrsh.w	r3, [r0, #62]	; 0x3e
 80127c6:	1ad2      	subs	r2, r2, r3
 80127c8:	4422      	add	r2, r4
 80127ca:	fb92 f3f4 	sdiv	r3, r2, r4
 80127ce:	fb04 2213 	mls	r2, r4, r3, r2
 80127d2:	b212      	sxth	r2, r2
 80127d4:	3201      	adds	r2, #1
 80127d6:	b212      	sxth	r2, r2
 80127d8:	4294      	cmp	r4, r2
 80127da:	dd18      	ble.n	801280e <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 80127dc:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 80127de:	f890 702d 	ldrb.w	r7, [r0, #45]	; 0x2d
 80127e2:	b295      	uxth	r5, r2
 80127e4:	442b      	add	r3, r5
 80127e6:	b21b      	sxth	r3, r3
 80127e8:	b127      	cbz	r7, 80127f4 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x4c>
 80127ea:	fb93 f7f6 	sdiv	r7, r3, r6
 80127ee:	fb06 3317 	mls	r3, r6, r7, r3
 80127f2:	b21b      	sxth	r3, r3
 80127f4:	428b      	cmp	r3, r1
 80127f6:	d108      	bne.n	801280a <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x62>
 80127f8:	f9b0 003e 	ldrsh.w	r0, [r0, #62]	; 0x3e
 80127fc:	4402      	add	r2, r0
 80127fe:	fb92 f0f4 	sdiv	r0, r2, r4
 8012802:	fb04 2010 	mls	r0, r4, r0, r2
 8012806:	b200      	sxth	r0, r0
 8012808:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801280a:	1c6a      	adds	r2, r5, #1
 801280c:	e7e3      	b.n	80127d6 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x2e>
 801280e:	f04f 30ff 	mov.w	r0, #4294967295
 8012812:	e7f9      	b.n	8012808 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x60>

08012814 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>:
 8012814:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012818:	6c43      	ldr	r3, [r0, #68]	; 0x44
 801281a:	4604      	mov	r4, r0
 801281c:	b913      	cbnz	r3, 8012824 <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x10>
 801281e:	8743      	strh	r3, [r0, #58]	; 0x3a
 8012820:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012824:	f7ff fe9a 	bl	801255c <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv>
 8012828:	8760      	strh	r0, [r4, #58]	; 0x3a
 801282a:	4620      	mov	r0, r4
 801282c:	f000 fdba 	bl	80133a4 <_ZN8touchgfx9Container9removeAllEv>
 8012830:	2700      	movs	r7, #0
 8012832:	f9b4 303a 	ldrsh.w	r3, [r4, #58]	; 0x3a
 8012836:	42bb      	cmp	r3, r7
 8012838:	dd32      	ble.n	80128a0 <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x8c>
 801283a:	6c60      	ldr	r0, [r4, #68]	; 0x44
 801283c:	f8b4 1042 	ldrh.w	r1, [r4, #66]	; 0x42
 8012840:	6803      	ldr	r3, [r0, #0]
 8012842:	4439      	add	r1, r7
 8012844:	689b      	ldr	r3, [r3, #8]
 8012846:	b209      	sxth	r1, r1
 8012848:	4798      	blx	r3
 801284a:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 801284e:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8012850:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012852:	4606      	mov	r6, r0
 8012854:	b1ca      	cbz	r2, 801288a <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x76>
 8012856:	2200      	movs	r2, #0
 8012858:	eba3 0345 	sub.w	r3, r3, r5, lsl #1
 801285c:	f9b4 800a 	ldrsh.w	r8, [r4, #10]
 8012860:	4611      	mov	r1, r2
 8012862:	b21d      	sxth	r5, r3
 8012864:	f7ef fe50 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 8012868:	4642      	mov	r2, r8
 801286a:	4629      	mov	r1, r5
 801286c:	4630      	mov	r0, r6
 801286e:	f7ef fcb8 	bl	80021e2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8012872:	6970      	ldr	r0, [r6, #20]
 8012874:	b118      	cbz	r0, 801287e <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x6a>
 8012876:	6803      	ldr	r3, [r0, #0]
 8012878:	4631      	mov	r1, r6
 801287a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801287c:	4798      	blx	r3
 801287e:	4631      	mov	r1, r6
 8012880:	4620      	mov	r0, r4
 8012882:	f000 fdf5 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012886:	3701      	adds	r7, #1
 8012888:	e7d3      	b.n	8012832 <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x1e>
 801288a:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 801288e:	eba3 0345 	sub.w	r3, r3, r5, lsl #1
 8012892:	4611      	mov	r1, r2
 8012894:	b21d      	sxth	r5, r3
 8012896:	f7ef fe37 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 801289a:	462a      	mov	r2, r5
 801289c:	4641      	mov	r1, r8
 801289e:	e7e5      	b.n	801286c <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x58>
 80128a0:	2300      	movs	r3, #0
 80128a2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80128a6:	63e3      	str	r3, [r4, #60]	; 0x3c
 80128a8:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80128aa:	4620      	mov	r0, r4
 80128ac:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80128b0:	f7ff be80 	b.w	80125b4 <_ZN8touchgfx12DrawableList9setOffsetEl>

080128b4 <_ZN8touchgfx12DrawableList8setWidthEs>:
 80128b4:	8101      	strh	r1, [r0, #8]
 80128b6:	f7ff bfad 	b.w	8012814 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

080128ba <_ZN8touchgfx12DrawableList9setHeightEs>:
 80128ba:	8141      	strh	r1, [r0, #10]
 80128bc:	f7ff bfaa 	b.w	8012814 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

080128c0 <_ZN8touchgfx12DrawableList13setHorizontalEb>:
 80128c0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80128c4:	b121      	cbz	r1, 80128d0 <_ZN8touchgfx12DrawableList13setHorizontalEb+0x10>
 80128c6:	b92b      	cbnz	r3, 80128d4 <_ZN8touchgfx12DrawableList13setHorizontalEb+0x14>
 80128c8:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 80128cc:	f7ff bfa2 	b.w	8012814 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>
 80128d0:	2b00      	cmp	r3, #0
 80128d2:	d1f9      	bne.n	80128c8 <_ZN8touchgfx12DrawableList13setHorizontalEb+0x8>
 80128d4:	4770      	bx	lr

080128d6 <_ZN8touchgfx12DrawableList11setCircularEb>:
 80128d6:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 80128da:	b121      	cbz	r1, 80128e6 <_ZN8touchgfx12DrawableList11setCircularEb+0x10>
 80128dc:	b92b      	cbnz	r3, 80128ea <_ZN8touchgfx12DrawableList11setCircularEb+0x14>
 80128de:	f880 102d 	strb.w	r1, [r0, #45]	; 0x2d
 80128e2:	f7ff bf97 	b.w	8012814 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>
 80128e6:	2b00      	cmp	r3, #0
 80128e8:	d1f9      	bne.n	80128de <_ZN8touchgfx12DrawableList11setCircularEb+0x8>
 80128ea:	4770      	bx	lr

080128ec <_ZN8touchgfx12DrawableList12setDrawablesERNS_26DrawableListItemsInterfaceEsRNS_15GenericCallbackIPS1_ssEE>:
 80128ec:	b410      	push	{r4}
 80128ee:	6441      	str	r1, [r0, #68]	; 0x44
 80128f0:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 80128f4:	6483      	str	r3, [r0, #72]	; 0x48
 80128f6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80128fa:	f7ff bf8b 	b.w	8012814 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

080128fe <_ZN8touchgfx12DrawableList16setNumberOfItemsEs>:
 80128fe:	8701      	strh	r1, [r0, #56]	; 0x38
 8012900:	f7ff bf88 	b.w	8012814 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

08012904 <_ZN8touchgfx12DrawableList11itemChangedEs>:
 8012904:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012906:	4604      	mov	r4, r0
 8012908:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801290a:	460e      	mov	r6, r1
 801290c:	b1c0      	cbz	r0, 8012940 <_ZN8touchgfx12DrawableList11itemChangedEs+0x3c>
 801290e:	6803      	ldr	r3, [r0, #0]
 8012910:	68db      	ldr	r3, [r3, #12]
 8012912:	4798      	blx	r3
 8012914:	b1a0      	cbz	r0, 8012940 <_ZN8touchgfx12DrawableList11itemChangedEs+0x3c>
 8012916:	f04f 35ff 	mov.w	r5, #4294967295
 801291a:	462a      	mov	r2, r5
 801291c:	4631      	mov	r1, r6
 801291e:	4620      	mov	r0, r4
 8012920:	f7ff ff42 	bl	80127a8 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss>
 8012924:	1c43      	adds	r3, r0, #1
 8012926:	4605      	mov	r5, r0
 8012928:	d00a      	beq.n	8012940 <_ZN8touchgfx12DrawableList11itemChangedEs+0x3c>
 801292a:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 801292c:	f8b4 2042 	ldrh.w	r2, [r4, #66]	; 0x42
 8012930:	6803      	ldr	r3, [r0, #0]
 8012932:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8012934:	689f      	ldr	r7, [r3, #8]
 8012936:	442a      	add	r2, r5
 8012938:	4633      	mov	r3, r6
 801293a:	b212      	sxth	r2, r2
 801293c:	47b8      	blx	r7
 801293e:	e7ec      	b.n	801291a <_ZN8touchgfx12DrawableList11itemChangedEs+0x16>
 8012940:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08012942 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE>:
 8012942:	b570      	push	{r4, r5, r6, lr}
 8012944:	790b      	ldrb	r3, [r1, #4]
 8012946:	4604      	mov	r4, r0
 8012948:	2b00      	cmp	r3, #0
 801294a:	d158      	bne.n	80129fe <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0xbc>
 801294c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8012950:	f8a0 30b0 	strh.w	r3, [r0, #176]	; 0xb0
 8012954:	f9b1 3008 	ldrsh.w	r3, [r1, #8]
 8012958:	f8a0 30b2 	strh.w	r3, [r0, #178]	; 0xb2
 801295c:	6803      	ldr	r3, [r0, #0]
 801295e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8012962:	4798      	blx	r3
 8012964:	6823      	ldr	r3, [r4, #0]
 8012966:	f8c4 00b4 	str.w	r0, [r4, #180]	; 0xb4
 801296a:	4601      	mov	r1, r0
 801296c:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 8012970:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8012974:	4620      	mov	r0, r4
 8012976:	4798      	blx	r3
 8012978:	4601      	mov	r1, r0
 801297a:	4620      	mov	r0, r4
 801297c:	47a8      	blx	r5
 801297e:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
 8012982:	2800      	cmp	r0, #0
 8012984:	f000 809f 	beq.w	8012ac6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 8012988:	6803      	ldr	r3, [r0, #0]
 801298a:	68db      	ldr	r3, [r3, #12]
 801298c:	4798      	blx	r3
 801298e:	2800      	cmp	r0, #0
 8012990:	f000 8099 	beq.w	8012ac6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 8012994:	6823      	ldr	r3, [r4, #0]
 8012996:	4620      	mov	r0, r4
 8012998:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 801299c:	4798      	blx	r3
 801299e:	b358      	cbz	r0, 80129f8 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0xb6>
 80129a0:	f9b4 50b0 	ldrsh.w	r5, [r4, #176]	; 0xb0
 80129a4:	6823      	ldr	r3, [r4, #0]
 80129a6:	4620      	mov	r0, r4
 80129a8:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80129ac:	4798      	blx	r3
 80129ae:	6823      	ldr	r3, [r4, #0]
 80129b0:	1a2d      	subs	r5, r5, r0
 80129b2:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 80129b6:	4620      	mov	r0, r4
 80129b8:	4798      	blx	r3
 80129ba:	f8b4 607c 	ldrh.w	r6, [r4, #124]	; 0x7c
 80129be:	6823      	ldr	r3, [r4, #0]
 80129c0:	fb16 f600 	smulbb	r6, r6, r0
 80129c4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80129c8:	4620      	mov	r0, r4
 80129ca:	4798      	blx	r3
 80129cc:	b120      	cbz	r0, 80129d8 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x96>
 80129ce:	4435      	add	r5, r6
 80129d0:	fb95 f1f6 	sdiv	r1, r5, r6
 80129d4:	fb06 5511 	mls	r5, r6, r1, r5
 80129d8:	2d00      	cmp	r5, #0
 80129da:	db74      	blt.n	8012ac6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 80129dc:	42b5      	cmp	r5, r6
 80129de:	da72      	bge.n	8012ac6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 80129e0:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
 80129e4:	f9b4 107c 	ldrsh.w	r1, [r4, #124]	; 0x7c
 80129e8:	fb95 f1f1 	sdiv	r1, r5, r1
 80129ec:	6803      	ldr	r3, [r0, #0]
 80129ee:	b209      	sxth	r1, r1
 80129f0:	689b      	ldr	r3, [r3, #8]
 80129f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80129f6:	4718      	bx	r3
 80129f8:	f9b4 50b2 	ldrsh.w	r5, [r4, #178]	; 0xb2
 80129fc:	e7d2      	b.n	80129a4 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x62>
 80129fe:	2b01      	cmp	r3, #1
 8012a00:	d161      	bne.n	8012ac6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 8012a02:	f890 309c 	ldrb.w	r3, [r0, #156]	; 0x9c
 8012a06:	2b00      	cmp	r3, #0
 8012a08:	d14a      	bne.n	8012aa0 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x15e>
 8012a0a:	6803      	ldr	r3, [r0, #0]
 8012a0c:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 8012a10:	f8d3 60c0 	ldr.w	r6, [r3, #192]	; 0xc0
 8012a14:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8012a18:	4798      	blx	r3
 8012a1a:	4601      	mov	r1, r0
 8012a1c:	4620      	mov	r0, r4
 8012a1e:	47b0      	blx	r6
 8012a20:	4601      	mov	r1, r0
 8012a22:	4620      	mov	r0, r4
 8012a24:	47a8      	blx	r5
 8012a26:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
 8012a2a:	2800      	cmp	r0, #0
 8012a2c:	d04b      	beq.n	8012ac6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 8012a2e:	6803      	ldr	r3, [r0, #0]
 8012a30:	68db      	ldr	r3, [r3, #12]
 8012a32:	4798      	blx	r3
 8012a34:	2800      	cmp	r0, #0
 8012a36:	d046      	beq.n	8012ac6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 8012a38:	6823      	ldr	r3, [r4, #0]
 8012a3a:	4620      	mov	r0, r4
 8012a3c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8012a40:	4798      	blx	r3
 8012a42:	b330      	cbz	r0, 8012a92 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x150>
 8012a44:	f9b4 50b0 	ldrsh.w	r5, [r4, #176]	; 0xb0
 8012a48:	6823      	ldr	r3, [r4, #0]
 8012a4a:	4620      	mov	r0, r4
 8012a4c:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8012a50:	4798      	blx	r3
 8012a52:	6823      	ldr	r3, [r4, #0]
 8012a54:	1a2d      	subs	r5, r5, r0
 8012a56:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8012a5a:	4620      	mov	r0, r4
 8012a5c:	4798      	blx	r3
 8012a5e:	f8b4 607c 	ldrh.w	r6, [r4, #124]	; 0x7c
 8012a62:	6823      	ldr	r3, [r4, #0]
 8012a64:	fb16 f600 	smulbb	r6, r6, r0
 8012a68:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8012a6c:	4620      	mov	r0, r4
 8012a6e:	4798      	blx	r3
 8012a70:	b190      	cbz	r0, 8012a98 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x156>
 8012a72:	19a9      	adds	r1, r5, r6
 8012a74:	fb91 f3f6 	sdiv	r3, r1, r6
 8012a78:	fb06 1113 	mls	r1, r6, r3, r1
 8012a7c:	2900      	cmp	r1, #0
 8012a7e:	db22      	blt.n	8012ac6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 8012a80:	42b1      	cmp	r1, r6
 8012a82:	da20      	bge.n	8012ac6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 8012a84:	f9b4 307c 	ldrsh.w	r3, [r4, #124]	; 0x7c
 8012a88:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
 8012a8c:	fb91 f1f3 	sdiv	r1, r1, r3
 8012a90:	e7ac      	b.n	80129ec <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0xaa>
 8012a92:	f9b4 50b2 	ldrsh.w	r5, [r4, #178]	; 0xb2
 8012a96:	e7d7      	b.n	8012a48 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x106>
 8012a98:	f9b4 107a 	ldrsh.w	r1, [r4, #122]	; 0x7a
 8012a9c:	1a69      	subs	r1, r5, r1
 8012a9e:	e7ed      	b.n	8012a7c <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x13a>
 8012aa0:	2b02      	cmp	r3, #2
 8012aa2:	d110      	bne.n	8012ac6 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 8012aa4:	6803      	ldr	r3, [r0, #0]
 8012aa6:	e9d3 6530 	ldrd	r6, r5, [r3, #192]	; 0xc0
 8012aaa:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8012aae:	4798      	blx	r3
 8012ab0:	4601      	mov	r1, r0
 8012ab2:	4620      	mov	r0, r4
 8012ab4:	47b0      	blx	r6
 8012ab6:	462b      	mov	r3, r5
 8012ab8:	4601      	mov	r1, r0
 8012aba:	f04f 32ff 	mov.w	r2, #4294967295
 8012abe:	4620      	mov	r0, r4
 8012ac0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012ac4:	4718      	bx	r3
 8012ac6:	bd70      	pop	{r4, r5, r6, pc}

08012ac8 <_ZNK8touchgfx10ScrollList22keepOffsetInsideLimitsEls>:
 8012ac8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012acc:	6803      	ldr	r3, [r0, #0]
 8012ace:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8012ad2:	4605      	mov	r5, r0
 8012ad4:	460e      	mov	r6, r1
 8012ad6:	4617      	mov	r7, r2
 8012ad8:	4798      	blx	r3
 8012ada:	4604      	mov	r4, r0
 8012adc:	b9d8      	cbnz	r0, 8012b16 <_ZNK8touchgfx10ScrollList22keepOffsetInsideLimitsEls+0x4e>
 8012ade:	682b      	ldr	r3, [r5, #0]
 8012ae0:	f8d5 80c0 	ldr.w	r8, [r5, #192]	; 0xc0
 8012ae4:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8012ae8:	42be      	cmp	r6, r7
 8012aea:	4628      	mov	r0, r5
 8012aec:	bfa8      	it	ge
 8012aee:	463e      	movge	r6, r7
 8012af0:	4798      	blx	r3
 8012af2:	4580      	cmp	r8, r0
 8012af4:	da07      	bge.n	8012b06 <_ZNK8touchgfx10ScrollList22keepOffsetInsideLimitsEls+0x3e>
 8012af6:	682b      	ldr	r3, [r5, #0]
 8012af8:	4628      	mov	r0, r5
 8012afa:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8012afe:	4798      	blx	r3
 8012b00:	f8d5 40c0 	ldr.w	r4, [r5, #192]	; 0xc0
 8012b04:	1b04      	subs	r4, r0, r4
 8012b06:	f9b5 107c 	ldrsh.w	r1, [r5, #124]	; 0x7c
 8012b0a:	434c      	muls	r4, r1
 8012b0c:	4264      	negs	r4, r4
 8012b0e:	1be1      	subs	r1, r4, r7
 8012b10:	428e      	cmp	r6, r1
 8012b12:	bfb8      	it	lt
 8012b14:	460e      	movlt	r6, r1
 8012b16:	4630      	mov	r0, r6
 8012b18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012b1c <_ZN8touchgfx10ScrollListD1Ev>:
 8012b1c:	4770      	bx	lr

08012b1e <_ZN8touchgfx10ScrollList12setDrawablesERNS_26DrawableListItemsInterfaceERNS_15GenericCallbackIPS1_ssEE>:
 8012b1e:	b570      	push	{r4, r5, r6, lr}
 8012b20:	460d      	mov	r5, r1
 8012b22:	4604      	mov	r4, r0
 8012b24:	4616      	mov	r6, r2
 8012b26:	f000 fa22 	bl	8012f6e <_ZN8touchgfx10ScrollBase13stopAnimationEv>
 8012b2a:	682b      	ldr	r3, [r5, #0]
 8012b2c:	4628      	mov	r0, r5
 8012b2e:	68db      	ldr	r3, [r3, #12]
 8012b30:	4798      	blx	r3
 8012b32:	4633      	mov	r3, r6
 8012b34:	f8a4 0078 	strh.w	r0, [r4, #120]	; 0x78
 8012b38:	4629      	mov	r1, r5
 8012b3a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8012b3e:	2200      	movs	r2, #0
 8012b40:	f7ff fed4 	bl	80128ec <_ZN8touchgfx12DrawableList12setDrawablesERNS_26DrawableListItemsInterfaceEsRNS_15GenericCallbackIPS1_ssEE>
 8012b44:	6823      	ldr	r3, [r4, #0]
 8012b46:	4620      	mov	r0, r4
 8012b48:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8012b4c:	2100      	movs	r1, #0
 8012b4e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012b52:	4718      	bx	r3

08012b54 <_ZN8touchgfx10ScrollBase10initializeEv>:
 8012b54:	302c      	adds	r0, #44	; 0x2c
 8012b56:	f7ff be5d 	b.w	8012814 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

08012b5a <_ZN8touchgfx10ScrollList18getPositionForItemEs>:
 8012b5a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012b5e:	6803      	ldr	r3, [r0, #0]
 8012b60:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8012b64:	460f      	mov	r7, r1
 8012b66:	4604      	mov	r4, r0
 8012b68:	4798      	blx	r3
 8012b6a:	4601      	mov	r1, r0
 8012b6c:	4620      	mov	r0, r4
 8012b6e:	f000 fa4b 	bl	8013008 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>
 8012b72:	2f00      	cmp	r7, #0
 8012b74:	4606      	mov	r6, r0
 8012b76:	db6b      	blt.n	8012c50 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xf6>
 8012b78:	f104 092c 	add.w	r9, r4, #44	; 0x2c
 8012b7c:	4648      	mov	r0, r9
 8012b7e:	f7ff fcea 	bl	8012556 <_ZNK8touchgfx12DrawableList16getNumberOfItemsEv>
 8012b82:	42b8      	cmp	r0, r7
 8012b84:	dd64      	ble.n	8012c50 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xf6>
 8012b86:	f9b4 507c 	ldrsh.w	r5, [r4, #124]	; 0x7c
 8012b8a:	2d00      	cmp	r5, #0
 8012b8c:	d060      	beq.n	8012c50 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xf6>
 8012b8e:	6823      	ldr	r3, [r4, #0]
 8012b90:	4278      	negs	r0, r7
 8012b92:	4345      	muls	r5, r0
 8012b94:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8012b98:	4620      	mov	r0, r4
 8012b9a:	4798      	blx	r3
 8012b9c:	2800      	cmp	r0, #0
 8012b9e:	d05a      	beq.n	8012c56 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xfc>
 8012ba0:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 8012ba4:	f8b4 107a 	ldrh.w	r1, [r4, #122]	; 0x7a
 8012ba8:	f8b4 30ba 	ldrh.w	r3, [r4, #186]	; 0xba
 8012bac:	4419      	add	r1, r3
 8012bae:	eba8 0801 	sub.w	r8, r8, r1
 8012bb2:	4648      	mov	r0, r9
 8012bb4:	fa0f f888 	sxth.w	r8, r8
 8012bb8:	f7ff fc89 	bl	80124ce <_ZNK8touchgfx12DrawableList11getCircularEv>
 8012bbc:	2800      	cmp	r0, #0
 8012bbe:	d051      	beq.n	8012c64 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x10a>
 8012bc0:	46b2      	mov	sl, r6
 8012bc2:	4651      	mov	r1, sl
 8012bc4:	4620      	mov	r0, r4
 8012bc6:	f000 fa1f 	bl	8013008 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>
 8012bca:	f9b4 307c 	ldrsh.w	r3, [r4, #124]	; 0x7c
 8012bce:	4240      	negs	r0, r0
 8012bd0:	fb90 f0f3 	sdiv	r0, r0, r3
 8012bd4:	b200      	sxth	r0, r0
 8012bd6:	4287      	cmp	r7, r0
 8012bd8:	d03a      	beq.n	8012c50 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xf6>
 8012bda:	ebaa 0a03 	sub.w	sl, sl, r3
 8012bde:	eba8 0303 	sub.w	r3, r8, r3
 8012be2:	1af3      	subs	r3, r6, r3
 8012be4:	4553      	cmp	r3, sl
 8012be6:	ddec      	ble.n	8012bc2 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x68>
 8012be8:	4648      	mov	r0, r9
 8012bea:	f7ff fcb4 	bl	8012556 <_ZNK8touchgfx12DrawableList16getNumberOfItemsEv>
 8012bee:	f9b4 107c 	ldrsh.w	r1, [r4, #124]	; 0x7c
 8012bf2:	fb00 f701 	mul.w	r7, r0, r1
 8012bf6:	eba8 0101 	sub.w	r1, r8, r1
 8012bfa:	1a71      	subs	r1, r6, r1
 8012bfc:	4620      	mov	r0, r4
 8012bfe:	f000 fa03 	bl	8013008 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>
 8012c02:	eb05 0a07 	add.w	sl, r5, r7
 8012c06:	eba5 0906 	sub.w	r9, r5, r6
 8012c0a:	ebaa 0a06 	sub.w	sl, sl, r6
 8012c0e:	1beb      	subs	r3, r5, r7
 8012c10:	ea89 72e9 	eor.w	r2, r9, r9, asr #31
 8012c14:	ea8a 71ea 	eor.w	r1, sl, sl, asr #31
 8012c18:	1ac3      	subs	r3, r0, r3
 8012c1a:	eba2 72e9 	sub.w	r2, r2, r9, asr #31
 8012c1e:	eba1 71ea 	sub.w	r1, r1, sl, asr #31
 8012c22:	4291      	cmp	r1, r2
 8012c24:	bfb8      	it	lt
 8012c26:	46d1      	movlt	r9, sl
 8012c28:	ea83 72e3 	eor.w	r2, r3, r3, asr #31
 8012c2c:	1b45      	subs	r5, r0, r5
 8012c2e:	eba2 72e3 	sub.w	r2, r2, r3, asr #31
 8012c32:	d52f      	bpl.n	8012c94 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x13a>
 8012c34:	4269      	negs	r1, r5
 8012c36:	4291      	cmp	r1, r2
 8012c38:	dd10      	ble.n	8012c5c <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x102>
 8012c3a:	2b00      	cmp	r3, #0
 8012c3c:	da10      	bge.n	8012c60 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x106>
 8012c3e:	425d      	negs	r5, r3
 8012c40:	ea89 72e9 	eor.w	r2, r9, r9, asr #31
 8012c44:	eba2 72e9 	sub.w	r2, r2, r9, asr #31
 8012c48:	4295      	cmp	r5, r2
 8012c4a:	bfb4      	ite	lt
 8012c4c:	1af6      	sublt	r6, r6, r3
 8012c4e:	444e      	addge	r6, r9
 8012c50:	4630      	mov	r0, r6
 8012c52:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012c56:	f9b4 800a 	ldrsh.w	r8, [r4, #10]
 8012c5a:	e7a3      	b.n	8012ba4 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x4a>
 8012c5c:	462b      	mov	r3, r5
 8012c5e:	e7ee      	b.n	8012c3e <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xe4>
 8012c60:	461d      	mov	r5, r3
 8012c62:	e7ed      	b.n	8012c40 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xe6>
 8012c64:	42ae      	cmp	r6, r5
 8012c66:	db13      	blt.n	8012c90 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x136>
 8012c68:	f9b4 207c 	ldrsh.w	r2, [r4, #124]	; 0x7c
 8012c6c:	fb98 f3f2 	sdiv	r3, r8, r2
 8012c70:	b21b      	sxth	r3, r3
 8012c72:	2b00      	cmp	r3, #0
 8012c74:	dd05      	ble.n	8012c82 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x128>
 8012c76:	f894 10bc 	ldrb.w	r1, [r4, #188]	; 0xbc
 8012c7a:	b131      	cbz	r1, 8012c8a <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x130>
 8012c7c:	3b01      	subs	r3, #1
 8012c7e:	fb02 5503 	mla	r5, r2, r3, r5
 8012c82:	42ae      	cmp	r6, r5
 8012c84:	bfa8      	it	ge
 8012c86:	462e      	movge	r6, r5
 8012c88:	e7e2      	b.n	8012c50 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xf6>
 8012c8a:	4445      	add	r5, r8
 8012c8c:	1aad      	subs	r5, r5, r2
 8012c8e:	e7f8      	b.n	8012c82 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x128>
 8012c90:	462e      	mov	r6, r5
 8012c92:	e7dd      	b.n	8012c50 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xf6>
 8012c94:	4295      	cmp	r5, r2
 8012c96:	dcd0      	bgt.n	8012c3a <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xe0>
 8012c98:	462b      	mov	r3, r5
 8012c9a:	e7d1      	b.n	8012c40 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xe6>

08012c9c <_ZN8touchgfx10ScrollListD0Ev>:
 8012c9c:	b510      	push	{r4, lr}
 8012c9e:	21c4      	movs	r1, #196	; 0xc4
 8012ca0:	4604      	mov	r4, r0
 8012ca2:	f014 fd3f 	bl	8027724 <_ZdlPvj>
 8012ca6:	4620      	mov	r0, r4
 8012ca8:	bd10      	pop	{r4, pc}

08012caa <_ZNK8touchgfx10ScrollList23getNearestAlignedOffsetEl>:
 8012caa:	f890 20bc 	ldrb.w	r2, [r0, #188]	; 0xbc
 8012cae:	b10a      	cbz	r2, 8012cb4 <_ZNK8touchgfx10ScrollList23getNearestAlignedOffsetEl+0xa>
 8012cb0:	f000 b8a2 	b.w	8012df8 <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl>
 8012cb4:	6803      	ldr	r3, [r0, #0]
 8012cb6:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8012cba:	4718      	bx	r3

08012cbc <_ZN8touchgfx10ScrollListC1Ev>:
 8012cbc:	b510      	push	{r4, lr}
 8012cbe:	4604      	mov	r4, r0
 8012cc0:	f000 fa12 	bl	80130e8 <_ZN8touchgfx10ScrollBaseC1Ev>
 8012cc4:	4b05      	ldr	r3, [pc, #20]	; (8012cdc <_ZN8touchgfx10ScrollListC1Ev+0x20>)
 8012cc6:	6023      	str	r3, [r4, #0]
 8012cc8:	2300      	movs	r3, #0
 8012cca:	f8a4 30ba 	strh.w	r3, [r4, #186]	; 0xba
 8012cce:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 8012cd2:	2301      	movs	r3, #1
 8012cd4:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8012cd8:	4620      	mov	r0, r4
 8012cda:	bd10      	pop	{r4, pc}
 8012cdc:	0802b4b4 	.word	0x0802b4b4

08012ce0 <_ZN8touchgfx10ScrollList10setPaddingEss>:
 8012ce0:	b570      	push	{r4, r5, r6, lr}
 8012ce2:	6803      	ldr	r3, [r0, #0]
 8012ce4:	4604      	mov	r4, r0
 8012ce6:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8012cea:	460e      	mov	r6, r1
 8012cec:	4615      	mov	r5, r2
 8012cee:	4798      	blx	r3
 8012cf0:	6823      	ldr	r3, [r4, #0]
 8012cf2:	f8a4 607a 	strh.w	r6, [r4, #122]	; 0x7a
 8012cf6:	f8a4 50ba 	strh.w	r5, [r4, #186]	; 0xba
 8012cfa:	4601      	mov	r1, r0
 8012cfc:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8012d00:	4620      	mov	r0, r4
 8012d02:	4798      	blx	r3
 8012d04:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8012d08:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012d0c:	f7ff bd82 	b.w	8012814 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

08012d10 <_ZN8touchgfx10ScrollList11setSnappingEb>:
 8012d10:	b570      	push	{r4, r5, r6, lr}
 8012d12:	4604      	mov	r4, r0
 8012d14:	f880 10bc 	strb.w	r1, [r0, #188]	; 0xbc
 8012d18:	b181      	cbz	r1, 8012d3c <_ZN8touchgfx10ScrollList11setSnappingEb+0x2c>
 8012d1a:	6803      	ldr	r3, [r0, #0]
 8012d1c:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 8012d20:	f8d3 60c0 	ldr.w	r6, [r3, #192]	; 0xc0
 8012d24:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8012d28:	4798      	blx	r3
 8012d2a:	4601      	mov	r1, r0
 8012d2c:	4620      	mov	r0, r4
 8012d2e:	47b0      	blx	r6
 8012d30:	462b      	mov	r3, r5
 8012d32:	4601      	mov	r1, r0
 8012d34:	4620      	mov	r0, r4
 8012d36:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012d3a:	4718      	bx	r3
 8012d3c:	bd70      	pop	{r4, r5, r6, pc}

08012d3e <_ZN8touchgfx10ScrollBase13animateToItemEss>:
 8012d3e:	b570      	push	{r4, r5, r6, lr}
 8012d40:	6803      	ldr	r3, [r0, #0]
 8012d42:	4604      	mov	r4, r0
 8012d44:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8012d48:	4615      	mov	r5, r2
 8012d4a:	4798      	blx	r3
 8012d4c:	6823      	ldr	r3, [r4, #0]
 8012d4e:	462a      	mov	r2, r5
 8012d50:	4601      	mov	r1, r0
 8012d52:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8012d56:	4620      	mov	r0, r4
 8012d58:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012d5c:	4718      	bx	r3

08012d5e <_ZNK8touchgfx10ScrollBase16getNumberOfItemsEv>:
 8012d5e:	302c      	adds	r0, #44	; 0x2c
 8012d60:	f7ff bbf9 	b.w	8012556 <_ZNK8touchgfx12DrawableList16getNumberOfItemsEv>

08012d64 <_ZN8touchgfx10ScrollBase11itemChangedEi>:
 8012d64:	b209      	sxth	r1, r1
 8012d66:	302c      	adds	r0, #44	; 0x2c
 8012d68:	f7ff bdcc 	b.w	8012904 <_ZN8touchgfx12DrawableList11itemChangedEs>

08012d6c <_ZN8touchgfx10ScrollBase9setOffsetEl>:
 8012d6c:	f9b0 307a 	ldrsh.w	r3, [r0, #122]	; 0x7a
 8012d70:	302c      	adds	r0, #44	; 0x2c
 8012d72:	4419      	add	r1, r3
 8012d74:	f7ff bc1e 	b.w	80125b4 <_ZN8touchgfx12DrawableList9setOffsetEl>

08012d78 <_ZNK8touchgfx10ScrollBase9getOffsetEv>:
 8012d78:	b510      	push	{r4, lr}
 8012d7a:	4604      	mov	r4, r0
 8012d7c:	302c      	adds	r0, #44	; 0x2c
 8012d7e:	f7ff fd11 	bl	80127a4 <_ZNK8touchgfx12DrawableList9getOffsetEv>
 8012d82:	f9b4 307a 	ldrsh.w	r3, [r4, #122]	; 0x7a
 8012d86:	1ac0      	subs	r0, r0, r3
 8012d88:	bd10      	pop	{r4, pc}

08012d8a <_ZN8touchgfx10ScrollBase17animateToPositionEls>:
 8012d8a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012d8c:	6803      	ldr	r3, [r0, #0]
 8012d8e:	4604      	mov	r4, r0
 8012d90:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8012d94:	4615      	mov	r5, r2
 8012d96:	460f      	mov	r7, r1
 8012d98:	4798      	blx	r3
 8012d9a:	6823      	ldr	r3, [r4, #0]
 8012d9c:	4606      	mov	r6, r0
 8012d9e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8012da2:	4639      	mov	r1, r7
 8012da4:	4620      	mov	r0, r4
 8012da6:	4798      	blx	r3
 8012da8:	2d00      	cmp	r5, #0
 8012daa:	eba0 0306 	sub.w	r3, r0, r6
 8012dae:	bfb8      	it	lt
 8012db0:	f9b4 5088 	ldrshlt.w	r5, [r4, #136]	; 0x88
 8012db4:	2b00      	cmp	r3, #0
 8012db6:	bfb8      	it	lt
 8012db8:	425b      	neglt	r3, r3
 8012dba:	429d      	cmp	r5, r3
 8012dbc:	bfa8      	it	ge
 8012dbe:	b21d      	sxthge	r5, r3
 8012dc0:	2d00      	cmp	r5, #0
 8012dc2:	4601      	mov	r1, r0
 8012dc4:	dc08      	bgt.n	8012dd8 <_ZN8touchgfx10ScrollBase17animateToPositionEls+0x4e>
 8012dc6:	6823      	ldr	r3, [r4, #0]
 8012dc8:	4620      	mov	r0, r4
 8012dca:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8012dce:	4798      	blx	r3
 8012dd0:	2300      	movs	r3, #0
 8012dd2:	f884 309c 	strb.w	r3, [r4, #156]	; 0x9c
 8012dd6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012dd8:	2300      	movs	r3, #0
 8012dda:	e9c4 3528 	strd	r3, r5, [r4, #160]	; 0xa0
 8012dde:	f894 309c 	ldrb.w	r3, [r4, #156]	; 0x9c
 8012de2:	2b01      	cmp	r3, #1
 8012de4:	e9c4 602a 	strd	r6, r0, [r4, #168]	; 0xa8
 8012de8:	d0f5      	beq.n	8012dd6 <_ZN8touchgfx10ScrollBase17animateToPositionEls+0x4c>
 8012dea:	f004 fcc7 	bl	801777c <_ZN8touchgfx11Application11getInstanceEv>
 8012dee:	4621      	mov	r1, r4
 8012df0:	f004 fcca 	bl	8017788 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
 8012df4:	2301      	movs	r3, #1
 8012df6:	e7ec      	b.n	8012dd2 <_ZN8touchgfx10ScrollBase17animateToPositionEls+0x48>

08012df8 <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl>:
 8012df8:	b538      	push	{r3, r4, r5, lr}
 8012dfa:	f9b0 307c 	ldrsh.w	r3, [r0, #124]	; 0x7c
 8012dfe:	4605      	mov	r5, r0
 8012e00:	460c      	mov	r4, r1
 8012e02:	b193      	cbz	r3, 8012e2a <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl+0x32>
 8012e04:	6803      	ldr	r3, [r0, #0]
 8012e06:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8012e0a:	4798      	blx	r3
 8012e0c:	4602      	mov	r2, r0
 8012e0e:	b170      	cbz	r0, 8012e2e <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl+0x36>
 8012e10:	f9b5 307c 	ldrsh.w	r3, [r5, #124]	; 0x7c
 8012e14:	2c00      	cmp	r4, #0
 8012e16:	f04f 0102 	mov.w	r1, #2
 8012e1a:	fb93 f1f1 	sdiv	r1, r3, r1
 8012e1e:	bfb4      	ite	lt
 8012e20:	1a64      	sublt	r4, r4, r1
 8012e22:	1864      	addge	r4, r4, r1
 8012e24:	fb94 f4f3 	sdiv	r4, r4, r3
 8012e28:	435c      	muls	r4, r3
 8012e2a:	4620      	mov	r0, r4
 8012e2c:	bd38      	pop	{r3, r4, r5, pc}
 8012e2e:	682b      	ldr	r3, [r5, #0]
 8012e30:	4621      	mov	r1, r4
 8012e32:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8012e36:	4628      	mov	r0, r5
 8012e38:	4798      	blx	r3
 8012e3a:	f9b5 407c 	ldrsh.w	r4, [r5, #124]	; 0x7c
 8012e3e:	2302      	movs	r3, #2
 8012e40:	fb94 f3f3 	sdiv	r3, r4, r3
 8012e44:	1ac0      	subs	r0, r0, r3
 8012e46:	fb90 f0f4 	sdiv	r0, r0, r4
 8012e4a:	4344      	muls	r4, r0
 8012e4c:	e7ed      	b.n	8012e2a <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl+0x32>

08012e4e <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs>:
 8012e4e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012e52:	6803      	ldr	r3, [r0, #0]
 8012e54:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8012e58:	460d      	mov	r5, r1
 8012e5a:	4604      	mov	r4, r0
 8012e5c:	4798      	blx	r3
 8012e5e:	42a8      	cmp	r0, r5
 8012e60:	d020      	beq.n	8012ea4 <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs+0x56>
 8012e62:	4629      	mov	r1, r5
 8012e64:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8012e68:	f7ff fd49 	bl	80128fe <_ZN8touchgfx12DrawableList16setNumberOfItemsEs>
 8012e6c:	6823      	ldr	r3, [r4, #0]
 8012e6e:	4620      	mov	r0, r4
 8012e70:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8012e74:	4798      	blx	r3
 8012e76:	4605      	mov	r5, r0
 8012e78:	b9a0      	cbnz	r0, 8012ea4 <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs+0x56>
 8012e7a:	6823      	ldr	r3, [r4, #0]
 8012e7c:	4620      	mov	r0, r4
 8012e7e:	f8d3 60c4 	ldr.w	r6, [r3, #196]	; 0xc4
 8012e82:	f8d3 70bc 	ldr.w	r7, [r3, #188]	; 0xbc
 8012e86:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8012e8a:	4798      	blx	r3
 8012e8c:	462a      	mov	r2, r5
 8012e8e:	4601      	mov	r1, r0
 8012e90:	4620      	mov	r0, r4
 8012e92:	47b8      	blx	r7
 8012e94:	4633      	mov	r3, r6
 8012e96:	4601      	mov	r1, r0
 8012e98:	f04f 32ff 	mov.w	r2, #4294967295
 8012e9c:	4620      	mov	r0, r4
 8012e9e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012ea2:	4718      	bx	r3
 8012ea4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012ea8 <_ZN8touchgfx10ScrollBase18handleGestureEventERKNS_12GestureEventE>:
 8012ea8:	b570      	push	{r4, r5, r6, lr}
 8012eaa:	6803      	ldr	r3, [r0, #0]
 8012eac:	790e      	ldrb	r6, [r1, #4]
 8012eae:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8012eb2:	4605      	mov	r5, r0
 8012eb4:	460c      	mov	r4, r1
 8012eb6:	4798      	blx	r3
 8012eb8:	f080 0001 	eor.w	r0, r0, #1
 8012ebc:	b2c0      	uxtb	r0, r0
 8012ebe:	42b0      	cmp	r0, r6
 8012ec0:	d141      	bne.n	8012f46 <_ZN8touchgfx10ScrollBase18handleGestureEventERKNS_12GestureEventE+0x9e>
 8012ec2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8012ec6:	2b00      	cmp	r3, #0
 8012ec8:	bfbd      	ittte	lt
 8012eca:	425b      	neglt	r3, r3
 8012ecc:	b21b      	sxthlt	r3, r3
 8012ece:	f04f 36ff 	movlt.w	r6, #4294967295
 8012ed2:	2601      	movge	r6, #1
 8012ed4:	2b04      	cmp	r3, #4
 8012ed6:	bfc2      	ittt	gt
 8012ed8:	3b04      	subgt	r3, #4
 8012eda:	ebc3 03c3 	rsbgt	r3, r3, r3, lsl #3
 8012ede:	b21c      	sxthgt	r4, r3
 8012ee0:	682b      	ldr	r3, [r5, #0]
 8012ee2:	4628      	mov	r0, r5
 8012ee4:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8012ee8:	bfd8      	it	le
 8012eea:	2407      	movle	r4, #7
 8012eec:	4798      	blx	r3
 8012eee:	f8b5 107e 	ldrh.w	r1, [r5, #126]	; 0x7e
 8012ef2:	4366      	muls	r6, r4
 8012ef4:	230a      	movs	r3, #10
 8012ef6:	4371      	muls	r1, r6
 8012ef8:	fb91 f1f3 	sdiv	r1, r1, r3
 8012efc:	f8b5 3082 	ldrh.w	r3, [r5, #130]	; 0x82
 8012f00:	4401      	add	r1, r0
 8012f02:	b163      	cbz	r3, 8012f1e <_ZN8touchgfx10ScrollBase18handleGestureEventERKNS_12GestureEventE+0x76>
 8012f04:	f9b5 007c 	ldrsh.w	r0, [r5, #124]	; 0x7c
 8012f08:	f8d5 20b4 	ldr.w	r2, [r5, #180]	; 0xb4
 8012f0c:	4343      	muls	r3, r0
 8012f0e:	1898      	adds	r0, r3, r2
 8012f10:	4281      	cmp	r1, r0
 8012f12:	bfa8      	it	ge
 8012f14:	4601      	movge	r1, r0
 8012f16:	1ad0      	subs	r0, r2, r3
 8012f18:	4281      	cmp	r1, r0
 8012f1a:	bfb8      	it	lt
 8012f1c:	4601      	movlt	r1, r0
 8012f1e:	682b      	ldr	r3, [r5, #0]
 8012f20:	2200      	movs	r2, #0
 8012f22:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8012f26:	4628      	mov	r0, r5
 8012f28:	4798      	blx	r3
 8012f2a:	f8b5 2088 	ldrh.w	r2, [r5, #136]	; 0x88
 8012f2e:	682b      	ldr	r3, [r5, #0]
 8012f30:	42a2      	cmp	r2, r4
 8012f32:	bfa8      	it	ge
 8012f34:	4622      	movge	r2, r4
 8012f36:	4601      	mov	r1, r0
 8012f38:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8012f3c:	4628      	mov	r0, r5
 8012f3e:	b212      	sxth	r2, r2
 8012f40:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012f44:	4718      	bx	r3
 8012f46:	bd70      	pop	{r4, r5, r6, pc}

08012f48 <_ZN8touchgfx10ScrollBase15setDrawableSizeEss>:
 8012f48:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8012f4c:	f8a0 307c 	strh.w	r3, [r0, #124]	; 0x7c
 8012f50:	302c      	adds	r0, #44	; 0x2c
 8012f52:	f7ff bafb 	b.w	801254c <_ZN8touchgfx12DrawableList15setDrawableSizeEss>

08012f56 <_ZN8touchgfx10ScrollBase17setEasingEquationEPFstsstE>:
 8012f56:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
 8012f5a:	4770      	bx	lr

08012f5c <_ZN8touchgfx10ScrollBase20setSwipeAccelerationEt>:
 8012f5c:	f8a0 107e 	strh.w	r1, [r0, #126]	; 0x7e
 8012f60:	4770      	bx	lr

08012f62 <_ZN8touchgfx10ScrollBase19setDragAccelerationEt>:
 8012f62:	f8a0 1080 	strh.w	r1, [r0, #128]	; 0x80
 8012f66:	4770      	bx	lr

08012f68 <_ZN8touchgfx10ScrollBase23setItemSelectedCallbackERNS_15GenericCallbackIsvvEE>:
 8012f68:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 8012f6c:	4770      	bx	lr

08012f6e <_ZN8touchgfx10ScrollBase13stopAnimationEv>:
 8012f6e:	b510      	push	{r4, lr}
 8012f70:	f890 309c 	ldrb.w	r3, [r0, #156]	; 0x9c
 8012f74:	2b01      	cmp	r3, #1
 8012f76:	4604      	mov	r4, r0
 8012f78:	d10b      	bne.n	8012f92 <_ZN8touchgfx10ScrollBase13stopAnimationEv+0x24>
 8012f7a:	f004 fbff 	bl	801777c <_ZN8touchgfx11Application11getInstanceEv>
 8012f7e:	4621      	mov	r1, r4
 8012f80:	f004 fc34 	bl	80177ec <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 8012f84:	6823      	ldr	r3, [r4, #0]
 8012f86:	f8d4 10ac 	ldr.w	r1, [r4, #172]	; 0xac
 8012f8a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8012f8e:	4620      	mov	r0, r4
 8012f90:	4798      	blx	r3
 8012f92:	2300      	movs	r3, #0
 8012f94:	f884 309c 	strb.w	r3, [r4, #156]	; 0x9c
 8012f98:	bd10      	pop	{r4, pc}

08012f9a <_ZN8touchgfx10ScrollBase15handleDragEventERKNS_9DragEventE>:
 8012f9a:	b570      	push	{r4, r5, r6, lr}
 8012f9c:	4604      	mov	r4, r0
 8012f9e:	460e      	mov	r6, r1
 8012fa0:	f7ff ffe5 	bl	8012f6e <_ZN8touchgfx10ScrollBase13stopAnimationEv>
 8012fa4:	2302      	movs	r3, #2
 8012fa6:	f884 309c 	strb.w	r3, [r4, #156]	; 0x9c
 8012faa:	6823      	ldr	r3, [r4, #0]
 8012fac:	4620      	mov	r0, r4
 8012fae:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8012fb2:	4798      	blx	r3
 8012fb4:	6823      	ldr	r3, [r4, #0]
 8012fb6:	4605      	mov	r5, r0
 8012fb8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8012fbc:	4620      	mov	r0, r4
 8012fbe:	4798      	blx	r3
 8012fc0:	b1f8      	cbz	r0, 8013002 <_ZN8touchgfx10ScrollBase15handleDragEventERKNS_9DragEventE+0x68>
 8012fc2:	8973      	ldrh	r3, [r6, #10]
 8012fc4:	88f1      	ldrh	r1, [r6, #6]
 8012fc6:	f9b4 207c 	ldrsh.w	r2, [r4, #124]	; 0x7c
 8012fca:	1a5b      	subs	r3, r3, r1
 8012fcc:	f8b4 1080 	ldrh.w	r1, [r4, #128]	; 0x80
 8012fd0:	b21b      	sxth	r3, r3
 8012fd2:	434b      	muls	r3, r1
 8012fd4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8012fd8:	210a      	movs	r1, #10
 8012fda:	fb93 f3f1 	sdiv	r3, r3, r1
 8012fde:	2104      	movs	r1, #4
 8012fe0:	fb92 f2f1 	sdiv	r2, r2, r1
 8012fe4:	6821      	ldr	r1, [r4, #0]
 8012fe6:	4620      	mov	r0, r4
 8012fe8:	f8d1 60bc 	ldr.w	r6, [r1, #188]	; 0xbc
 8012fec:	b212      	sxth	r2, r2
 8012fee:	1959      	adds	r1, r3, r5
 8012ff0:	47b0      	blx	r6
 8012ff2:	6823      	ldr	r3, [r4, #0]
 8012ff4:	4601      	mov	r1, r0
 8012ff6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8012ffa:	4620      	mov	r0, r4
 8012ffc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013000:	4718      	bx	r3
 8013002:	89b3      	ldrh	r3, [r6, #12]
 8013004:	8931      	ldrh	r1, [r6, #8]
 8013006:	e7de      	b.n	8012fc6 <_ZN8touchgfx10ScrollBase15handleDragEventERKNS_9DragEventE+0x2c>

08013008 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>:
 8013008:	b538      	push	{r3, r4, r5, lr}
 801300a:	6803      	ldr	r3, [r0, #0]
 801300c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8013010:	4605      	mov	r5, r0
 8013012:	460c      	mov	r4, r1
 8013014:	4798      	blx	r3
 8013016:	b150      	cbz	r0, 801302e <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi+0x26>
 8013018:	f9b5 307c 	ldrsh.w	r3, [r5, #124]	; 0x7c
 801301c:	b13b      	cbz	r3, 801302e <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi+0x26>
 801301e:	4358      	muls	r0, r3
 8013020:	fb94 f3f0 	sdiv	r3, r4, r0
 8013024:	fb00 4413 	mls	r4, r0, r3, r4
 8013028:	2c00      	cmp	r4, #0
 801302a:	bfc8      	it	gt
 801302c:	1a24      	subgt	r4, r4, r0
 801302e:	4620      	mov	r0, r4
 8013030:	bd38      	pop	{r3, r4, r5, pc}

08013032 <_ZN8touchgfx10ScrollBase15handleTickEventEv>:
 8013032:	b570      	push	{r4, r5, r6, lr}
 8013034:	f890 309c 	ldrb.w	r3, [r0, #156]	; 0x9c
 8013038:	2b01      	cmp	r3, #1
 801303a:	4604      	mov	r4, r0
 801303c:	d149      	bne.n	80130d2 <_ZN8touchgfx10ScrollBase15handleTickEventEv+0xa0>
 801303e:	e9d4 622a 	ldrd	r6, r2, [r4, #168]	; 0xa8
 8013042:	f8d0 00a0 	ldr.w	r0, [r0, #160]	; 0xa0
 8013046:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 801304a:	f8d4 5084 	ldr.w	r5, [r4, #132]	; 0x84
 801304e:	3001      	adds	r0, #1
 8013050:	1b92      	subs	r2, r2, r6
 8013052:	b212      	sxth	r2, r2
 8013054:	f8c4 00a0 	str.w	r0, [r4, #160]	; 0xa0
 8013058:	2100      	movs	r1, #0
 801305a:	b280      	uxth	r0, r0
 801305c:	47a8      	blx	r5
 801305e:	6823      	ldr	r3, [r4, #0]
 8013060:	1981      	adds	r1, r0, r6
 8013062:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8013066:	4620      	mov	r0, r4
 8013068:	4798      	blx	r3
 801306a:	e9d4 2328 	ldrd	r2, r3, [r4, #160]	; 0xa0
 801306e:	429a      	cmp	r2, r3
 8013070:	dd2f      	ble.n	80130d2 <_ZN8touchgfx10ScrollBase15handleTickEventEv+0xa0>
 8013072:	2300      	movs	r3, #0
 8013074:	f884 309c 	strb.w	r3, [r4, #156]	; 0x9c
 8013078:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
 801307c:	f004 fb7e 	bl	801777c <_ZN8touchgfx11Application11getInstanceEv>
 8013080:	4621      	mov	r1, r4
 8013082:	f004 fbb3 	bl	80177ec <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 8013086:	6823      	ldr	r3, [r4, #0]
 8013088:	f8d4 10ac 	ldr.w	r1, [r4, #172]	; 0xac
 801308c:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 8013090:	4620      	mov	r0, r4
 8013092:	f7ff ffb9 	bl	8013008 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>
 8013096:	4601      	mov	r1, r0
 8013098:	4620      	mov	r0, r4
 801309a:	47a8      	blx	r5
 801309c:	6823      	ldr	r3, [r4, #0]
 801309e:	4620      	mov	r0, r4
 80130a0:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80130a4:	4798      	blx	r3
 80130a6:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 80130aa:	1ac0      	subs	r0, r0, r3
 80130ac:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 80130b0:	4403      	add	r3, r0
 80130b2:	f8d4 0094 	ldr.w	r0, [r4, #148]	; 0x94
 80130b6:	f8c4 30b4 	str.w	r3, [r4, #180]	; 0xb4
 80130ba:	b150      	cbz	r0, 80130d2 <_ZN8touchgfx10ScrollBase15handleTickEventEv+0xa0>
 80130bc:	6803      	ldr	r3, [r0, #0]
 80130be:	68db      	ldr	r3, [r3, #12]
 80130c0:	4798      	blx	r3
 80130c2:	b130      	cbz	r0, 80130d2 <_ZN8touchgfx10ScrollBase15handleTickEventEv+0xa0>
 80130c4:	f8d4 0094 	ldr.w	r0, [r4, #148]	; 0x94
 80130c8:	6803      	ldr	r3, [r0, #0]
 80130ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80130ce:	689b      	ldr	r3, [r3, #8]
 80130d0:	4718      	bx	r3
 80130d2:	bd70      	pop	{r4, r5, r6, pc}

080130d4 <_ZN8touchgfx10ScrollBase13setHorizontalEb>:
 80130d4:	f081 0301 	eor.w	r3, r1, #1
 80130d8:	f880 10b9 	strb.w	r1, [r0, #185]	; 0xb9
 80130dc:	f880 30b8 	strb.w	r3, [r0, #184]	; 0xb8
 80130e0:	302c      	adds	r0, #44	; 0x2c
 80130e2:	f7ff bbed 	b.w	80128c0 <_ZN8touchgfx12DrawableList13setHorizontalEb>
	...

080130e8 <_ZN8touchgfx10ScrollBaseC1Ev>:
 80130e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80130ea:	4606      	mov	r6, r0
 80130ec:	2500      	movs	r5, #0
 80130ee:	2701      	movs	r7, #1
 80130f0:	4b22      	ldr	r3, [pc, #136]	; (801317c <_ZN8touchgfx10ScrollBaseC1Ev+0x94>)
 80130f2:	8085      	strh	r5, [r0, #4]
 80130f4:	80c5      	strh	r5, [r0, #6]
 80130f6:	8105      	strh	r5, [r0, #8]
 80130f8:	8145      	strh	r5, [r0, #10]
 80130fa:	8185      	strh	r5, [r0, #12]
 80130fc:	81c5      	strh	r5, [r0, #14]
 80130fe:	8205      	strh	r5, [r0, #16]
 8013100:	8245      	strh	r5, [r0, #18]
 8013102:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8013106:	61c5      	str	r5, [r0, #28]
 8013108:	8405      	strh	r5, [r0, #32]
 801310a:	8445      	strh	r5, [r0, #34]	; 0x22
 801310c:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8013110:	f880 7025 	strb.w	r7, [r0, #37]	; 0x25
 8013114:	6285      	str	r5, [r0, #40]	; 0x28
 8013116:	f846 3b2c 	str.w	r3, [r6], #44
 801311a:	4604      	mov	r4, r0
 801311c:	4630      	mov	r0, r6
 801311e:	f7ff f9ed 	bl	80124fc <_ZN8touchgfx12DrawableListC1Ev>
 8013122:	f44f 2220 	mov.w	r2, #655360	; 0xa0000
 8013126:	230a      	movs	r3, #10
 8013128:	e9c4 231f 	strd	r2, r3, [r4, #124]	; 0x7c
 801312c:	4b14      	ldr	r3, [pc, #80]	; (8013180 <_ZN8touchgfx10ScrollBaseC1Ev+0x98>)
 801312e:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8013132:	231e      	movs	r3, #30
 8013134:	f8a4 3088 	strh.w	r3, [r4, #136]	; 0x88
 8013138:	4631      	mov	r1, r6
 801313a:	4620      	mov	r0, r4
 801313c:	67a5      	str	r5, [r4, #120]	; 0x78
 801313e:	e9c4 5523 	strd	r5, r5, [r4, #140]	; 0x8c
 8013142:	e9c4 5525 	strd	r5, r5, [r4, #148]	; 0x94
 8013146:	f884 509c 	strb.w	r5, [r4, #156]	; 0x9c
 801314a:	e9c4 5528 	strd	r5, r5, [r4, #160]	; 0xa0
 801314e:	e9c4 552a 	strd	r5, r5, [r4, #168]	; 0xa8
 8013152:	e9c4 552c 	strd	r5, r5, [r4, #176]	; 0xb0
 8013156:	f884 50b8 	strb.w	r5, [r4, #184]	; 0xb8
 801315a:	f884 50b9 	strb.w	r5, [r4, #185]	; 0xb9
 801315e:	f000 f987 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8013162:	4629      	mov	r1, r5
 8013164:	4630      	mov	r0, r6
 8013166:	6325      	str	r5, [r4, #48]	; 0x30
 8013168:	f7ff fbaa 	bl	80128c0 <_ZN8touchgfx12DrawableList13setHorizontalEb>
 801316c:	4630      	mov	r0, r6
 801316e:	4629      	mov	r1, r5
 8013170:	f7ff fbb1 	bl	80128d6 <_ZN8touchgfx12DrawableList11setCircularEb>
 8013174:	f884 7024 	strb.w	r7, [r4, #36]	; 0x24
 8013178:	4620      	mov	r0, r4
 801317a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801317c:	0802b588 	.word	0x0802b588
 8013180:	08018f6d 	.word	0x08018f6d

08013184 <_ZN8touchgfx10ScrollBase11setCircularEb>:
 8013184:	302c      	adds	r0, #44	; 0x2c
 8013186:	f7ff bba6 	b.w	80128d6 <_ZN8touchgfx12DrawableList11setCircularEb>

0801318a <_ZN8touchgfx10ScrollBase8setWidthEs>:
 801318a:	8101      	strh	r1, [r0, #8]
 801318c:	302c      	adds	r0, #44	; 0x2c
 801318e:	f7ff bb91 	b.w	80128b4 <_ZN8touchgfx12DrawableList8setWidthEs>

08013192 <_ZN8touchgfx10ScrollBase9setHeightEs>:
 8013192:	8141      	strh	r1, [r0, #10]
 8013194:	302c      	adds	r0, #44	; 0x2c
 8013196:	f7ff bb90 	b.w	80128ba <_ZN8touchgfx12DrawableList9setHeightEs>

0801319a <_ZNK8touchgfx10ScrollBase13getHorizontalEv>:
 801319a:	302c      	adds	r0, #44	; 0x2c
 801319c:	f7ff b994 	b.w	80124c8 <_ZNK8touchgfx12DrawableList13getHorizontalEv>

080131a0 <_ZNK8touchgfx10ScrollBase11getCircularEv>:
 80131a0:	302c      	adds	r0, #44	; 0x2c
 80131a2:	f7ff b994 	b.w	80124ce <_ZNK8touchgfx12DrawableList11getCircularEv>

080131a6 <_ZNK8touchgfx10ScrollBase15getDrawableSizeEv>:
 80131a6:	302c      	adds	r0, #44	; 0x2c
 80131a8:	f7ff b997 	b.w	80124da <_ZNK8touchgfx12DrawableList15getDrawableSizeEv>

080131ac <_ZNK8touchgfx10ScrollBase17getDrawableMarginEv>:
 80131ac:	302c      	adds	r0, #44	; 0x2c
 80131ae:	f7ff b99a 	b.w	80124e6 <_ZNK8touchgfx12DrawableList17getDrawableMarginEv>

080131b2 <_ZNK8touchgfx11ModalWindow18getBackgroundWidthEv>:
 80131b2:	f8b0 008c 	ldrh.w	r0, [r0, #140]	; 0x8c
 80131b6:	4770      	bx	lr

080131b8 <_ZNK8touchgfx11ModalWindow19getBackgroundHeightEv>:
 80131b8:	f8b0 008e 	ldrh.w	r0, [r0, #142]	; 0x8e
 80131bc:	4770      	bx	lr

080131be <_ZNK8touchgfx11ModalWindow13getShadeAlphaEv>:
 80131be:	f890 0052 	ldrb.w	r0, [r0, #82]	; 0x52
 80131c2:	4770      	bx	lr

080131c4 <_ZNK8touchgfx11ModalWindow13getShadeColorEv>:
 80131c4:	6d40      	ldr	r0, [r0, #84]	; 0x54
 80131c6:	4770      	bx	lr

080131c8 <_ZN8touchgfx11ModalWindow4showEv>:
 80131c8:	2201      	movs	r2, #1
 80131ca:	6803      	ldr	r3, [r0, #0]
 80131cc:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 80131d0:	695b      	ldr	r3, [r3, #20]
 80131d2:	4718      	bx	r3

080131d4 <_ZN8touchgfx11ModalWindow4hideEv>:
 80131d4:	2200      	movs	r2, #0
 80131d6:	6803      	ldr	r3, [r0, #0]
 80131d8:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 80131dc:	695b      	ldr	r3, [r3, #20]
 80131de:	4718      	bx	r3

080131e0 <_ZN8touchgfx11ModalWindowD1Ev>:
 80131e0:	4770      	bx	lr

080131e2 <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>:
 80131e2:	3058      	adds	r0, #88	; 0x58
 80131e4:	f000 b944 	b.w	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>

080131e8 <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>:
 80131e8:	6541      	str	r1, [r0, #84]	; 0x54
 80131ea:	302c      	adds	r0, #44	; 0x2c
 80131ec:	f005 ba6e 	b.w	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>

080131f0 <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>:
 80131f0:	f880 1052 	strb.w	r1, [r0, #82]	; 0x52
 80131f4:	302c      	adds	r0, #44	; 0x2c
 80131f6:	f005 ba69 	b.w	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>

080131fa <_ZN8touchgfx11ModalWindow6removeERNS_8DrawableE>:
 80131fa:	3058      	adds	r0, #88	; 0x58
 80131fc:	f000 b906 	b.w	801340c <_ZN8touchgfx9Container6removeERNS_8DrawableE>

08013200 <_ZN8touchgfx11ModalWindowD0Ev>:
 8013200:	b510      	push	{r4, lr}
 8013202:	21b0      	movs	r1, #176	; 0xb0
 8013204:	4604      	mov	r4, r0
 8013206:	f014 fa8d 	bl	8027724 <_ZdlPvj>
 801320a:	4620      	mov	r0, r4
 801320c:	bd10      	pop	{r4, pc}

0801320e <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>:
 801320e:	b570      	push	{r4, r5, r6, lr}
 8013210:	4604      	mov	r4, r0
 8013212:	461e      	mov	r6, r3
 8013214:	f854 3b58 	ldr.w	r3, [r4], #88
 8013218:	4615      	mov	r5, r2
 801321a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801321e:	4798      	blx	r3
 8013220:	4632      	mov	r2, r6
 8013222:	4629      	mov	r1, r5
 8013224:	4620      	mov	r0, r4
 8013226:	f7ef f96f 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 801322a:	bd70      	pop	{r4, r5, r6, pc}

0801322c <_ZN8touchgfx11ModalWindow13setBackgroundERKt>:
 801322c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801322e:	880b      	ldrh	r3, [r1, #0]
 8013230:	a902      	add	r1, sp, #8
 8013232:	f100 0584 	add.w	r5, r0, #132	; 0x84
 8013236:	4604      	mov	r4, r0
 8013238:	f821 3d04 	strh.w	r3, [r1, #-4]!
 801323c:	4628      	mov	r0, r5
 801323e:	f002 f9e1 	bl	8015604 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8013242:	2200      	movs	r2, #0
 8013244:	4611      	mov	r1, r2
 8013246:	4628      	mov	r0, r5
 8013248:	f7ef f95e 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 801324c:	f9b4 608c 	ldrsh.w	r6, [r4, #140]	; 0x8c
 8013250:	f9b4 708e 	ldrsh.w	r7, [r4, #142]	; 0x8e
 8013254:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8013258:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 801325c:	f104 0558 	add.w	r5, r4, #88	; 0x58
 8013260:	2302      	movs	r3, #2
 8013262:	4628      	mov	r0, r5
 8013264:	1bd2      	subs	r2, r2, r7
 8013266:	1b89      	subs	r1, r1, r6
 8013268:	fb92 f2f3 	sdiv	r2, r2, r3
 801326c:	fb91 f1f3 	sdiv	r1, r1, r3
 8013270:	b212      	sxth	r2, r2
 8013272:	b209      	sxth	r1, r1
 8013274:	f7ef f948 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 8013278:	463a      	mov	r2, r7
 801327a:	4631      	mov	r1, r6
 801327c:	4628      	mov	r0, r5
 801327e:	f7ee ffb0 	bl	80021e2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8013282:	6823      	ldr	r3, [r4, #0]
 8013284:	4620      	mov	r0, r4
 8013286:	695b      	ldr	r3, [r3, #20]
 8013288:	4798      	blx	r3
 801328a:	b003      	add	sp, #12
 801328c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08013290 <_ZN8touchgfx11ModalWindowC1Ev>:
 8013290:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8013294:	4604      	mov	r4, r0
 8013296:	4625      	mov	r5, r4
 8013298:	f7ef f924 	bl	80024e4 <_ZN8touchgfx8DrawableC1Ev>
 801329c:	2600      	movs	r6, #0
 801329e:	4b36      	ldr	r3, [pc, #216]	; (8013378 <_ZN8touchgfx11ModalWindowC1Ev+0xe8>)
 80132a0:	62a6      	str	r6, [r4, #40]	; 0x28
 80132a2:	f845 3b2c 	str.w	r3, [r5], #44
 80132a6:	f04f 0a26 	mov.w	sl, #38	; 0x26
 80132aa:	4652      	mov	r2, sl
 80132ac:	4631      	mov	r1, r6
 80132ae:	4628      	mov	r0, r5
 80132b0:	f014 fc14 	bl	8027adc <memset>
 80132b4:	4628      	mov	r0, r5
 80132b6:	f7ef f915 	bl	80024e4 <_ZN8touchgfx8DrawableC1Ev>
 80132ba:	f104 0858 	add.w	r8, r4, #88	; 0x58
 80132be:	4b2f      	ldr	r3, [pc, #188]	; (801337c <_ZN8touchgfx11ModalWindowC1Ev+0xec>)
 80132c0:	62e3      	str	r3, [r4, #44]	; 0x2c
 80132c2:	f04f 09ff 	mov.w	r9, #255	; 0xff
 80132c6:	f884 9052 	strb.w	r9, [r4, #82]	; 0x52
 80132ca:	6566      	str	r6, [r4, #84]	; 0x54
 80132cc:	4640      	mov	r0, r8
 80132ce:	f7ef f909 	bl	80024e4 <_ZN8touchgfx8DrawableC1Ev>
 80132d2:	f104 0784 	add.w	r7, r4, #132	; 0x84
 80132d6:	4b2a      	ldr	r3, [pc, #168]	; (8013380 <_ZN8touchgfx11ModalWindowC1Ev+0xf0>)
 80132d8:	65a3      	str	r3, [r4, #88]	; 0x58
 80132da:	4652      	mov	r2, sl
 80132dc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80132e0:	4631      	mov	r1, r6
 80132e2:	f8c4 6080 	str.w	r6, [r4, #128]	; 0x80
 80132e6:	4638      	mov	r0, r7
 80132e8:	f8ad 3004 	strh.w	r3, [sp, #4]
 80132ec:	f014 fbf6 	bl	8027adc <memset>
 80132f0:	4638      	mov	r0, r7
 80132f2:	f7ef f8f7 	bl	80024e4 <_ZN8touchgfx8DrawableC1Ev>
 80132f6:	a902      	add	r1, sp, #8
 80132f8:	4b22      	ldr	r3, [pc, #136]	; (8013384 <_ZN8touchgfx11ModalWindowC1Ev+0xf4>)
 80132fa:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 80132fe:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 8013302:	f8a4 30aa 	strh.w	r3, [r4, #170]	; 0xaa
 8013306:	f884 90ac 	strb.w	r9, [r4, #172]	; 0xac
 801330a:	4638      	mov	r0, r7
 801330c:	f002 f97a 	bl	8015604 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8013310:	4b1d      	ldr	r3, [pc, #116]	; (8013388 <_ZN8touchgfx11ModalWindowC1Ev+0xf8>)
 8013312:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013316:	4b1d      	ldr	r3, [pc, #116]	; (801338c <_ZN8touchgfx11ModalWindowC1Ev+0xfc>)
 8013318:	4620      	mov	r0, r4
 801331a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801331e:	f7ee ff60 	bl	80021e2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8013322:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8013326:	f9b4 a00a 	ldrsh.w	sl, [r4, #10]
 801332a:	4632      	mov	r2, r6
 801332c:	4631      	mov	r1, r6
 801332e:	4628      	mov	r0, r5
 8013330:	f7ef f8ea 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 8013334:	4652      	mov	r2, sl
 8013336:	4649      	mov	r1, r9
 8013338:	4628      	mov	r0, r5
 801333a:	f7ee ff52 	bl	80021e2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801333e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8013342:	6563      	str	r3, [r4, #84]	; 0x54
 8013344:	2301      	movs	r3, #1
 8013346:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 801334a:	2360      	movs	r3, #96	; 0x60
 801334c:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 8013350:	4628      	mov	r0, r5
 8013352:	f005 f9bb 	bl	80186cc <_ZNK8touchgfx8Drawable10invalidateEv>
 8013356:	4629      	mov	r1, r5
 8013358:	4620      	mov	r0, r4
 801335a:	f000 f889 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801335e:	4641      	mov	r1, r8
 8013360:	4620      	mov	r0, r4
 8013362:	f000 f885 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8013366:	4640      	mov	r0, r8
 8013368:	4639      	mov	r1, r7
 801336a:	f000 f881 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801336e:	4620      	mov	r0, r4
 8013370:	b002      	add	sp, #8
 8013372:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013376:	bf00      	nop
 8013378:	0802b658 	.word	0x0802b658
 801337c:	0802c23c 	.word	0x0802c23c
 8013380:	0802b7d4 	.word	0x0802b7d4
 8013384:	0802c52c 	.word	0x0802c52c
 8013388:	2002bd2a 	.word	0x2002bd2a
 801338c:	2002bd28 	.word	0x2002bd28

08013390 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8013390:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8013392:	2000      	movs	r0, #0
 8013394:	b12b      	cbz	r3, 80133a2 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8013396:	b920      	cbnz	r0, 80133a2 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8013398:	1a5a      	subs	r2, r3, r1
 801339a:	4250      	negs	r0, r2
 801339c:	4150      	adcs	r0, r2
 801339e:	699b      	ldr	r3, [r3, #24]
 80133a0:	e7f8      	b.n	8013394 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 80133a2:	4770      	bx	lr

080133a4 <_ZN8touchgfx9Container9removeAllEv>:
 80133a4:	2200      	movs	r2, #0
 80133a6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80133a8:	b123      	cbz	r3, 80133b4 <_ZN8touchgfx9Container9removeAllEv+0x10>
 80133aa:	6999      	ldr	r1, [r3, #24]
 80133ac:	6281      	str	r1, [r0, #40]	; 0x28
 80133ae:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80133b2:	e7f8      	b.n	80133a6 <_ZN8touchgfx9Container9removeAllEv+0x2>
 80133b4:	4770      	bx	lr

080133b6 <_ZN8touchgfx9Container6unlinkEv>:
 80133b6:	2300      	movs	r3, #0
 80133b8:	6283      	str	r3, [r0, #40]	; 0x28
 80133ba:	4770      	bx	lr

080133bc <_ZNK8touchgfx9Container12getSolidRectEv>:
 80133bc:	2200      	movs	r2, #0
 80133be:	8002      	strh	r2, [r0, #0]
 80133c0:	8042      	strh	r2, [r0, #2]
 80133c2:	8082      	strh	r2, [r0, #4]
 80133c4:	80c2      	strh	r2, [r0, #6]
 80133c6:	4770      	bx	lr

080133c8 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 80133c8:	b570      	push	{r4, r5, r6, lr}
 80133ca:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80133cc:	460d      	mov	r5, r1
 80133ce:	4616      	mov	r6, r2
 80133d0:	b13c      	cbz	r4, 80133e2 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 80133d2:	6823      	ldr	r3, [r4, #0]
 80133d4:	4620      	mov	r0, r4
 80133d6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80133d8:	4632      	mov	r2, r6
 80133da:	4629      	mov	r1, r5
 80133dc:	4798      	blx	r3
 80133de:	69a4      	ldr	r4, [r4, #24]
 80133e0:	e7f6      	b.n	80133d0 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 80133e2:	bd70      	pop	{r4, r5, r6, pc}

080133e4 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 80133e4:	b538      	push	{r3, r4, r5, lr}
 80133e6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80133e8:	460d      	mov	r5, r1
 80133ea:	b134      	cbz	r4, 80133fa <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 80133ec:	682b      	ldr	r3, [r5, #0]
 80133ee:	4621      	mov	r1, r4
 80133f0:	689b      	ldr	r3, [r3, #8]
 80133f2:	4628      	mov	r0, r5
 80133f4:	4798      	blx	r3
 80133f6:	69a4      	ldr	r4, [r4, #24]
 80133f8:	e7f7      	b.n	80133ea <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 80133fa:	bd38      	pop	{r3, r4, r5, pc}

080133fc <_ZN8touchgfx9ContainerD1Ev>:
 80133fc:	4770      	bx	lr

080133fe <_ZN8touchgfx9ContainerD0Ev>:
 80133fe:	b510      	push	{r4, lr}
 8013400:	212c      	movs	r1, #44	; 0x2c
 8013402:	4604      	mov	r4, r0
 8013404:	f014 f98e 	bl	8027724 <_ZdlPvj>
 8013408:	4620      	mov	r0, r4
 801340a:	bd10      	pop	{r4, pc}

0801340c <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 801340c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801340e:	b19b      	cbz	r3, 8013438 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8013410:	428b      	cmp	r3, r1
 8013412:	d109      	bne.n	8013428 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8013414:	699a      	ldr	r2, [r3, #24]
 8013416:	2100      	movs	r1, #0
 8013418:	6159      	str	r1, [r3, #20]
 801341a:	6282      	str	r2, [r0, #40]	; 0x28
 801341c:	b902      	cbnz	r2, 8013420 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 801341e:	4770      	bx	lr
 8013420:	6199      	str	r1, [r3, #24]
 8013422:	4770      	bx	lr
 8013424:	4613      	mov	r3, r2
 8013426:	b13a      	cbz	r2, 8013438 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8013428:	699a      	ldr	r2, [r3, #24]
 801342a:	428a      	cmp	r2, r1
 801342c:	d1fa      	bne.n	8013424 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 801342e:	698a      	ldr	r2, [r1, #24]
 8013430:	619a      	str	r2, [r3, #24]
 8013432:	2300      	movs	r3, #0
 8013434:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8013438:	4770      	bx	lr

0801343a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 801343a:	b410      	push	{r4}
 801343c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801343e:	4604      	mov	r4, r0
 8013440:	b92b      	cbnz	r3, 801344e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8013442:	6803      	ldr	r3, [r0, #0]
 8013444:	f85d 4b04 	ldr.w	r4, [sp], #4
 8013448:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801344a:	4611      	mov	r1, r2
 801344c:	4718      	bx	r3
 801344e:	b941      	cbnz	r1, 8013462 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8013450:	6193      	str	r3, [r2, #24]
 8013452:	6282      	str	r2, [r0, #40]	; 0x28
 8013454:	6154      	str	r4, [r2, #20]
 8013456:	f85d 4b04 	ldr.w	r4, [sp], #4
 801345a:	4770      	bx	lr
 801345c:	4603      	mov	r3, r0
 801345e:	2800      	cmp	r0, #0
 8013460:	d0f9      	beq.n	8013456 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8013462:	4299      	cmp	r1, r3
 8013464:	6998      	ldr	r0, [r3, #24]
 8013466:	d1f9      	bne.n	801345c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8013468:	6190      	str	r0, [r2, #24]
 801346a:	618a      	str	r2, [r1, #24]
 801346c:	e7f2      	b.n	8013454 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

08013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8013470:	4288      	cmp	r0, r1
 8013472:	b508      	push	{r3, lr}
 8013474:	d105      	bne.n	8013482 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 8013476:	4b11      	ldr	r3, [pc, #68]	; (80134bc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 8013478:	4a11      	ldr	r2, [pc, #68]	; (80134c0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 801347a:	2123      	movs	r1, #35	; 0x23
 801347c:	4811      	ldr	r0, [pc, #68]	; (80134c4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 801347e:	f014 f97f 	bl	8027780 <__assert_func>
 8013482:	694b      	ldr	r3, [r1, #20]
 8013484:	b11b      	cbz	r3, 801348e <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 8013486:	4b10      	ldr	r3, [pc, #64]	; (80134c8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 8013488:	4a0d      	ldr	r2, [pc, #52]	; (80134c0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 801348a:	2124      	movs	r1, #36	; 0x24
 801348c:	e7f6      	b.n	801347c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 801348e:	e9c1 0305 	strd	r0, r3, [r1, #20]
 8013492:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8013494:	b913      	cbnz	r3, 801349c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 8013496:	6281      	str	r1, [r0, #40]	; 0x28
 8013498:	bd08      	pop	{r3, pc}
 801349a:	4613      	mov	r3, r2
 801349c:	699a      	ldr	r2, [r3, #24]
 801349e:	b12a      	cbz	r2, 80134ac <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 80134a0:	428b      	cmp	r3, r1
 80134a2:	d1fa      	bne.n	801349a <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 80134a4:	4b09      	ldr	r3, [pc, #36]	; (80134cc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 80134a6:	4a06      	ldr	r2, [pc, #24]	; (80134c0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 80134a8:	2135      	movs	r1, #53	; 0x35
 80134aa:	e7e7      	b.n	801347c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 80134ac:	428b      	cmp	r3, r1
 80134ae:	d103      	bne.n	80134b8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 80134b0:	4b06      	ldr	r3, [pc, #24]	; (80134cc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 80134b2:	4a03      	ldr	r2, [pc, #12]	; (80134c0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 80134b4:	2138      	movs	r1, #56	; 0x38
 80134b6:	e7e1      	b.n	801347c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 80134b8:	6199      	str	r1, [r3, #24]
 80134ba:	e7ed      	b.n	8013498 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 80134bc:	0802b704 	.word	0x0802b704
 80134c0:	0802b858 	.word	0x0802b858
 80134c4:	0802b730 	.word	0x0802b730
 80134c8:	0802b763 	.word	0x0802b763
 80134cc:	0802b799 	.word	0x0802b799

080134d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 80134d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80134d4:	461f      	mov	r7, r3
 80134d6:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 80134da:	460d      	mov	r5, r1
 80134dc:	4616      	mov	r6, r2
 80134de:	b103      	cbz	r3, 80134e2 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 80134e0:	6038      	str	r0, [r7, #0]
 80134e2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80134e4:	b314      	cbz	r4, 801352c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 80134e6:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80134ea:	b1eb      	cbz	r3, 8013528 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80134ec:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80134f0:	428d      	cmp	r5, r1
 80134f2:	db19      	blt.n	8013528 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80134f4:	8923      	ldrh	r3, [r4, #8]
 80134f6:	b289      	uxth	r1, r1
 80134f8:	440b      	add	r3, r1
 80134fa:	b21b      	sxth	r3, r3
 80134fc:	429d      	cmp	r5, r3
 80134fe:	da13      	bge.n	8013528 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8013500:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8013504:	4296      	cmp	r6, r2
 8013506:	db0f      	blt.n	8013528 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8013508:	8963      	ldrh	r3, [r4, #10]
 801350a:	b292      	uxth	r2, r2
 801350c:	4413      	add	r3, r2
 801350e:	b21b      	sxth	r3, r3
 8013510:	429e      	cmp	r6, r3
 8013512:	da09      	bge.n	8013528 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8013514:	6823      	ldr	r3, [r4, #0]
 8013516:	1ab2      	subs	r2, r6, r2
 8013518:	1a69      	subs	r1, r5, r1
 801351a:	f8d3 8020 	ldr.w	r8, [r3, #32]
 801351e:	b212      	sxth	r2, r2
 8013520:	463b      	mov	r3, r7
 8013522:	b209      	sxth	r1, r1
 8013524:	4620      	mov	r0, r4
 8013526:	47c0      	blx	r8
 8013528:	69a4      	ldr	r4, [r4, #24]
 801352a:	e7db      	b.n	80134e4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 801352c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013530 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8013530:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013534:	4c6e      	ldr	r4, [pc, #440]	; (80136f0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 8013536:	b0a1      	sub	sp, #132	; 0x84
 8013538:	6824      	ldr	r4, [r4, #0]
 801353a:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801353c:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8013540:	9303      	str	r3, [sp, #12]
 8013542:	2400      	movs	r4, #0
 8013544:	802c      	strh	r4, [r5, #0]
 8013546:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 8013548:	802c      	strh	r4, [r5, #0]
 801354a:	601c      	str	r4, [r3, #0]
 801354c:	4606      	mov	r6, r0
 801354e:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8013552:	f7ff ffbd 	bl	80134d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8013556:	f1b9 0f03 	cmp.w	r9, #3
 801355a:	f340 80c2 	ble.w	80136e2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 801355e:	4631      	mov	r1, r6
 8013560:	a80c      	add	r0, sp, #48	; 0x30
 8013562:	f005 f94b 	bl	80187fc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013566:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801356a:	9306      	str	r3, [sp, #24]
 801356c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8013570:	9307      	str	r3, [sp, #28]
 8013572:	9b03      	ldr	r3, [sp, #12]
 8013574:	f8d3 a000 	ldr.w	sl, [r3]
 8013578:	f1ba 0f00 	cmp.w	sl, #0
 801357c:	f000 80b4 	beq.w	80136e8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8013580:	4651      	mov	r1, sl
 8013582:	a810      	add	r0, sp, #64	; 0x40
 8013584:	f005 f93a 	bl	80187fc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013588:	9b01      	ldr	r3, [sp, #4]
 801358a:	9a06      	ldr	r2, [sp, #24]
 801358c:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8013590:	189d      	adds	r5, r3, r2
 8013592:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 8013596:	9a07      	ldr	r2, [sp, #28]
 8013598:	2002      	movs	r0, #2
 801359a:	fb91 f1f0 	sdiv	r1, r1, r0
 801359e:	4419      	add	r1, r3
 80135a0:	1a6d      	subs	r5, r5, r1
 80135a2:	9b02      	ldr	r3, [sp, #8]
 80135a4:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80135a8:	4413      	add	r3, r2
 80135aa:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 80135ae:	fb92 f2f0 	sdiv	r2, r2, r0
 80135b2:	440a      	add	r2, r1
 80135b4:	1a9b      	subs	r3, r3, r2
 80135b6:	435b      	muls	r3, r3
 80135b8:	fb05 3505 	mla	r5, r5, r5, r3
 80135bc:	4f4d      	ldr	r7, [pc, #308]	; (80136f4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 80135be:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80135c0:	ac10      	add	r4, sp, #64	; 0x40
 80135c2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80135c4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80135c6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80135c8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80135ca:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80135cc:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 80135d0:	f1b9 0f0c 	cmp.w	r9, #12
 80135d4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80135d8:	f04f 0303 	mov.w	r3, #3
 80135dc:	bfc8      	it	gt
 80135de:	4698      	movgt	r8, r3
 80135e0:	f8cd 9000 	str.w	r9, [sp]
 80135e4:	f04f 0400 	mov.w	r4, #0
 80135e8:	bfdc      	itt	le
 80135ea:	f109 32ff 	addle.w	r2, r9, #4294967295
 80135ee:	fb92 f8f3 	sdivle	r8, r2, r3
 80135f2:	1c63      	adds	r3, r4, #1
 80135f4:	aa10      	add	r2, sp, #64	; 0x40
 80135f6:	f004 0401 	and.w	r4, r4, #1
 80135fa:	9308      	str	r3, [sp, #32]
 80135fc:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8013600:	9b00      	ldr	r3, [sp, #0]
 8013602:	fb93 f3f8 	sdiv	r3, r3, r8
 8013606:	b29b      	uxth	r3, r3
 8013608:	3404      	adds	r4, #4
 801360a:	f04f 0b00 	mov.w	fp, #0
 801360e:	9304      	str	r3, [sp, #16]
 8013610:	9a04      	ldr	r2, [sp, #16]
 8013612:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8013616:	fb13 f302 	smulbb	r3, r3, r2
 801361a:	9a01      	ldr	r2, [sp, #4]
 801361c:	b29b      	uxth	r3, r3
 801361e:	1899      	adds	r1, r3, r2
 8013620:	9305      	str	r3, [sp, #20]
 8013622:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8013626:	b209      	sxth	r1, r1
 8013628:	4299      	cmp	r1, r3
 801362a:	db4d      	blt.n	80136c8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801362c:	8932      	ldrh	r2, [r6, #8]
 801362e:	4413      	add	r3, r2
 8013630:	b21b      	sxth	r3, r3
 8013632:	4299      	cmp	r1, r3
 8013634:	da48      	bge.n	80136c8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8013636:	9b04      	ldr	r3, [sp, #16]
 8013638:	6827      	ldr	r7, [r4, #0]
 801363a:	fb17 f703 	smulbb	r7, r7, r3
 801363e:	9b02      	ldr	r3, [sp, #8]
 8013640:	b2bf      	uxth	r7, r7
 8013642:	18fa      	adds	r2, r7, r3
 8013644:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8013648:	b212      	sxth	r2, r2
 801364a:	429a      	cmp	r2, r3
 801364c:	db3c      	blt.n	80136c8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801364e:	8970      	ldrh	r0, [r6, #10]
 8013650:	4403      	add	r3, r0
 8013652:	b21b      	sxth	r3, r3
 8013654:	429a      	cmp	r2, r3
 8013656:	da37      	bge.n	80136c8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8013658:	2300      	movs	r3, #0
 801365a:	930b      	str	r3, [sp, #44]	; 0x2c
 801365c:	4630      	mov	r0, r6
 801365e:	ab0b      	add	r3, sp, #44	; 0x2c
 8013660:	f7ff ff36 	bl	80134d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8013664:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013666:	b37a      	cbz	r2, 80136c8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8013668:	4552      	cmp	r2, sl
 801366a:	d02d      	beq.n	80136c8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801366c:	4611      	mov	r1, r2
 801366e:	a80e      	add	r0, sp, #56	; 0x38
 8013670:	9209      	str	r2, [sp, #36]	; 0x24
 8013672:	f005 f8c3 	bl	80187fc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013676:	9a06      	ldr	r2, [sp, #24]
 8013678:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 801367c:	9b01      	ldr	r3, [sp, #4]
 801367e:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8013682:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 8013686:	4413      	add	r3, r2
 8013688:	f04f 0e02 	mov.w	lr, #2
 801368c:	fb91 f1fe 	sdiv	r1, r1, lr
 8013690:	4401      	add	r1, r0
 8013692:	1a58      	subs	r0, r3, r1
 8013694:	9a07      	ldr	r2, [sp, #28]
 8013696:	9b02      	ldr	r3, [sp, #8]
 8013698:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 801369c:	fb9c fcfe 	sdiv	ip, ip, lr
 80136a0:	4413      	add	r3, r2
 80136a2:	448c      	add	ip, r1
 80136a4:	eba3 030c 	sub.w	r3, r3, ip
 80136a8:	435b      	muls	r3, r3
 80136aa:	fb00 3300 	mla	r3, r0, r0, r3
 80136ae:	42ab      	cmp	r3, r5
 80136b0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80136b2:	d208      	bcs.n	80136c6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 80136b4:	9803      	ldr	r0, [sp, #12]
 80136b6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80136b8:	6001      	str	r1, [r0, #0]
 80136ba:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80136bc:	9805      	ldr	r0, [sp, #20]
 80136be:	8008      	strh	r0, [r1, #0]
 80136c0:	992b      	ldr	r1, [sp, #172]	; 0xac
 80136c2:	461d      	mov	r5, r3
 80136c4:	800f      	strh	r7, [r1, #0]
 80136c6:	4692      	mov	sl, r2
 80136c8:	f10b 0b01 	add.w	fp, fp, #1
 80136cc:	f1bb 0f04 	cmp.w	fp, #4
 80136d0:	f104 0408 	add.w	r4, r4, #8
 80136d4:	d19c      	bne.n	8013610 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 80136d6:	9b00      	ldr	r3, [sp, #0]
 80136d8:	9c08      	ldr	r4, [sp, #32]
 80136da:	444b      	add	r3, r9
 80136dc:	4544      	cmp	r4, r8
 80136de:	9300      	str	r3, [sp, #0]
 80136e0:	d187      	bne.n	80135f2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 80136e2:	b021      	add	sp, #132	; 0x84
 80136e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80136e8:	f04f 35ff 	mov.w	r5, #4294967295
 80136ec:	e766      	b.n	80135bc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 80136ee:	bf00      	nop
 80136f0:	2002bd34 	.word	0x2002bd34
 80136f4:	080289cc 	.word	0x080289cc

080136f8 <_ZN8touchgfx4RectaNERKS0_>:
 80136f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80136fc:	f9b1 7000 	ldrsh.w	r7, [r1]
 8013700:	888c      	ldrh	r4, [r1, #4]
 8013702:	f9b0 9000 	ldrsh.w	r9, [r0]
 8013706:	443c      	add	r4, r7
 8013708:	b2a4      	uxth	r4, r4
 801370a:	fa0f f884 	sxth.w	r8, r4
 801370e:	45c1      	cmp	r9, r8
 8013710:	da2f      	bge.n	8013772 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8013712:	8882      	ldrh	r2, [r0, #4]
 8013714:	444a      	add	r2, r9
 8013716:	b292      	uxth	r2, r2
 8013718:	fa0f fe82 	sxth.w	lr, r2
 801371c:	4577      	cmp	r7, lr
 801371e:	da28      	bge.n	8013772 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8013720:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8013724:	88cb      	ldrh	r3, [r1, #6]
 8013726:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801372a:	442b      	add	r3, r5
 801372c:	b21b      	sxth	r3, r3
 801372e:	429e      	cmp	r6, r3
 8013730:	da1f      	bge.n	8013772 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8013732:	88c3      	ldrh	r3, [r0, #6]
 8013734:	4433      	add	r3, r6
 8013736:	b29b      	uxth	r3, r3
 8013738:	fa0f fc83 	sxth.w	ip, r3
 801373c:	4565      	cmp	r5, ip
 801373e:	da18      	bge.n	8013772 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8013740:	454f      	cmp	r7, r9
 8013742:	bfb8      	it	lt
 8013744:	464f      	movlt	r7, r9
 8013746:	42b5      	cmp	r5, r6
 8013748:	bfb8      	it	lt
 801374a:	4635      	movlt	r5, r6
 801374c:	45f0      	cmp	r8, lr
 801374e:	bfd8      	it	le
 8013750:	4622      	movle	r2, r4
 8013752:	1bd2      	subs	r2, r2, r7
 8013754:	8082      	strh	r2, [r0, #4]
 8013756:	884a      	ldrh	r2, [r1, #2]
 8013758:	88c9      	ldrh	r1, [r1, #6]
 801375a:	8007      	strh	r7, [r0, #0]
 801375c:	440a      	add	r2, r1
 801375e:	b292      	uxth	r2, r2
 8013760:	b211      	sxth	r1, r2
 8013762:	458c      	cmp	ip, r1
 8013764:	bfa8      	it	ge
 8013766:	4613      	movge	r3, r2
 8013768:	1b5b      	subs	r3, r3, r5
 801376a:	80c3      	strh	r3, [r0, #6]
 801376c:	8045      	strh	r5, [r0, #2]
 801376e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013772:	2300      	movs	r3, #0
 8013774:	8003      	strh	r3, [r0, #0]
 8013776:	8043      	strh	r3, [r0, #2]
 8013778:	8083      	strh	r3, [r0, #4]
 801377a:	80c3      	strh	r3, [r0, #6]
 801377c:	e7f7      	b.n	801376e <_ZN8touchgfx4RectaNERKS0_+0x76>

0801377e <_ZNK8touchgfx4Rect7isEmptyEv>:
 801377e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8013782:	2b00      	cmp	r3, #0
 8013784:	dd06      	ble.n	8013794 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8013786:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 801378a:	2800      	cmp	r0, #0
 801378c:	bfcc      	ite	gt
 801378e:	2000      	movgt	r0, #0
 8013790:	2001      	movle	r0, #1
 8013792:	4770      	bx	lr
 8013794:	2001      	movs	r0, #1
 8013796:	4770      	bx	lr

08013798 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8013798:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801379c:	2300      	movs	r3, #0
 801379e:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80137a0:	8003      	strh	r3, [r0, #0]
 80137a2:	4604      	mov	r4, r0
 80137a4:	8043      	strh	r3, [r0, #2]
 80137a6:	8083      	strh	r3, [r0, #4]
 80137a8:	80c3      	strh	r3, [r0, #6]
 80137aa:	2d00      	cmp	r5, #0
 80137ac:	d040      	beq.n	8013830 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 80137ae:	1d28      	adds	r0, r5, #4
 80137b0:	f7ff ffe5 	bl	801377e <_ZNK8touchgfx4Rect7isEmptyEv>
 80137b4:	b988      	cbnz	r0, 80137da <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80137b6:	4620      	mov	r0, r4
 80137b8:	f7ff ffe1 	bl	801377e <_ZNK8touchgfx4Rect7isEmptyEv>
 80137bc:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80137c0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80137c4:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 80137c8:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 80137cc:	b138      	cbz	r0, 80137de <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 80137ce:	8022      	strh	r2, [r4, #0]
 80137d0:	8063      	strh	r3, [r4, #2]
 80137d2:	f8a4 e004 	strh.w	lr, [r4, #4]
 80137d6:	f8a4 c006 	strh.w	ip, [r4, #6]
 80137da:	69ad      	ldr	r5, [r5, #24]
 80137dc:	e7e5      	b.n	80137aa <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 80137de:	f9b4 0000 	ldrsh.w	r0, [r4]
 80137e2:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80137e6:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 80137ea:	4290      	cmp	r0, r2
 80137ec:	4607      	mov	r7, r0
 80137ee:	bfa8      	it	ge
 80137f0:	4617      	movge	r7, r2
 80137f2:	4472      	add	r2, lr
 80137f4:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 80137f8:	8027      	strh	r7, [r4, #0]
 80137fa:	4299      	cmp	r1, r3
 80137fc:	460e      	mov	r6, r1
 80137fe:	4440      	add	r0, r8
 8013800:	bfa8      	it	ge
 8013802:	461e      	movge	r6, r3
 8013804:	4471      	add	r1, lr
 8013806:	4463      	add	r3, ip
 8013808:	b200      	sxth	r0, r0
 801380a:	b212      	sxth	r2, r2
 801380c:	b209      	sxth	r1, r1
 801380e:	b21b      	sxth	r3, r3
 8013810:	4290      	cmp	r0, r2
 8013812:	bfac      	ite	ge
 8013814:	ebc7 0200 	rsbge	r2, r7, r0
 8013818:	ebc7 0202 	rsblt	r2, r7, r2
 801381c:	4299      	cmp	r1, r3
 801381e:	bfac      	ite	ge
 8013820:	ebc6 0301 	rsbge	r3, r6, r1
 8013824:	ebc6 0303 	rsblt	r3, r6, r3
 8013828:	8066      	strh	r6, [r4, #2]
 801382a:	80a2      	strh	r2, [r4, #4]
 801382c:	80e3      	strh	r3, [r4, #6]
 801382e:	e7d4      	b.n	80137da <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8013830:	4620      	mov	r0, r4
 8013832:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013836 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8013836:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 801383a:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 801383e:	b383      	cbz	r3, 80138a2 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8013840:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8013842:	b374      	cbz	r4, 80138a2 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8013844:	f9b1 5000 	ldrsh.w	r5, [r1]
 8013848:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 801384c:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8013850:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8013854:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8013858:	b303      	cbz	r3, 801389c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 801385a:	4668      	mov	r0, sp
 801385c:	1d21      	adds	r1, r4, #4
 801385e:	f8ad 5000 	strh.w	r5, [sp]
 8013862:	f8ad 6002 	strh.w	r6, [sp, #2]
 8013866:	f8ad 7004 	strh.w	r7, [sp, #4]
 801386a:	f8ad 8006 	strh.w	r8, [sp, #6]
 801386e:	f7ff ff43 	bl	80136f8 <_ZN8touchgfx4RectaNERKS0_>
 8013872:	4668      	mov	r0, sp
 8013874:	f7ff ff83 	bl	801377e <_ZNK8touchgfx4Rect7isEmptyEv>
 8013878:	b980      	cbnz	r0, 801389c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 801387a:	f8bd 3000 	ldrh.w	r3, [sp]
 801387e:	88a2      	ldrh	r2, [r4, #4]
 8013880:	1a9b      	subs	r3, r3, r2
 8013882:	f8ad 3000 	strh.w	r3, [sp]
 8013886:	88e2      	ldrh	r2, [r4, #6]
 8013888:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801388c:	1a9b      	subs	r3, r3, r2
 801388e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8013892:	6823      	ldr	r3, [r4, #0]
 8013894:	4669      	mov	r1, sp
 8013896:	689b      	ldr	r3, [r3, #8]
 8013898:	4620      	mov	r0, r4
 801389a:	4798      	blx	r3
 801389c:	69a4      	ldr	r4, [r4, #24]
 801389e:	2c00      	cmp	r4, #0
 80138a0:	d1d8      	bne.n	8013854 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 80138a2:	b002      	add	sp, #8
 80138a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080138a8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 80138a8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80138aa:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80138ae:	460d      	mov	r5, r1
 80138b0:	4616      	mov	r6, r2
 80138b2:	b323      	cbz	r3, 80138fe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80138b4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80138b6:	b314      	cbz	r4, 80138fe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80138b8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80138bc:	b1eb      	cbz	r3, 80138fa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80138be:	6828      	ldr	r0, [r5, #0]
 80138c0:	6869      	ldr	r1, [r5, #4]
 80138c2:	466b      	mov	r3, sp
 80138c4:	c303      	stmia	r3!, {r0, r1}
 80138c6:	4668      	mov	r0, sp
 80138c8:	1d21      	adds	r1, r4, #4
 80138ca:	f7ff ff15 	bl	80136f8 <_ZN8touchgfx4RectaNERKS0_>
 80138ce:	4668      	mov	r0, sp
 80138d0:	f7ff ff55 	bl	801377e <_ZNK8touchgfx4Rect7isEmptyEv>
 80138d4:	b988      	cbnz	r0, 80138fa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80138d6:	f8bd 3000 	ldrh.w	r3, [sp]
 80138da:	88a2      	ldrh	r2, [r4, #4]
 80138dc:	1a9b      	subs	r3, r3, r2
 80138de:	f8ad 3000 	strh.w	r3, [sp]
 80138e2:	88e2      	ldrh	r2, [r4, #6]
 80138e4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80138e8:	1a9b      	subs	r3, r3, r2
 80138ea:	f8ad 3002 	strh.w	r3, [sp, #2]
 80138ee:	6823      	ldr	r3, [r4, #0]
 80138f0:	4632      	mov	r2, r6
 80138f2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80138f4:	4669      	mov	r1, sp
 80138f6:	4620      	mov	r0, r4
 80138f8:	4798      	blx	r3
 80138fa:	69a4      	ldr	r4, [r4, #24]
 80138fc:	e7db      	b.n	80138b6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 80138fe:	b002      	add	sp, #8
 8013900:	bd70      	pop	{r4, r5, r6, pc}

08013902 <_ZNK8touchgfx10ListLayout12getDirectionEv>:
 8013902:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8013906:	4770      	bx	lr

08013908 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE>:
 8013908:	b538      	push	{r3, r4, r5, lr}
 801390a:	7882      	ldrb	r2, [r0, #2]
 801390c:	6843      	ldr	r3, [r0, #4]
 801390e:	4604      	mov	r4, r0
 8013910:	460d      	mov	r5, r1
 8013912:	b98a      	cbnz	r2, 8013938 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x30>
 8013914:	4299      	cmp	r1, r3
 8013916:	d101      	bne.n	801391c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8013918:	2301      	movs	r3, #1
 801391a:	7083      	strb	r3, [r0, #2]
 801391c:	6863      	ldr	r3, [r4, #4]
 801391e:	42ab      	cmp	r3, r5
 8013920:	d009      	beq.n	8013936 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 8013922:	7a23      	ldrb	r3, [r4, #8]
 8013924:	2b01      	cmp	r3, #1
 8013926:	d11b      	bne.n	8013960 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x58>
 8013928:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 801392c:	f9b4 2000 	ldrsh.w	r2, [r4]
 8013930:	429a      	cmp	r2, r3
 8013932:	bfb8      	it	lt
 8013934:	8023      	strhlt	r3, [r4, #0]
 8013936:	bd38      	pop	{r3, r4, r5, pc}
 8013938:	7a02      	ldrb	r2, [r0, #8]
 801393a:	2a01      	cmp	r2, #1
 801393c:	d108      	bne.n	8013950 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x48>
 801393e:	895b      	ldrh	r3, [r3, #10]
 8013940:	88c9      	ldrh	r1, [r1, #6]
 8013942:	1ac9      	subs	r1, r1, r3
 8013944:	682b      	ldr	r3, [r5, #0]
 8013946:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013948:	b209      	sxth	r1, r1
 801394a:	4628      	mov	r0, r5
 801394c:	4798      	blx	r3
 801394e:	e7e5      	b.n	801391c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8013950:	2a02      	cmp	r2, #2
 8013952:	d1e3      	bne.n	801391c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8013954:	891b      	ldrh	r3, [r3, #8]
 8013956:	8889      	ldrh	r1, [r1, #4]
 8013958:	1ac9      	subs	r1, r1, r3
 801395a:	682b      	ldr	r3, [r5, #0]
 801395c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801395e:	e7f3      	b.n	8013948 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x40>
 8013960:	2b02      	cmp	r3, #2
 8013962:	d1e8      	bne.n	8013936 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 8013964:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8013968:	e7e0      	b.n	801392c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x24>

0801396a <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED1Ev>:
 801396a:	4770      	bx	lr

0801396c <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED1Ev>:
 801396c:	4770      	bx	lr

0801396e <_ZN8touchgfx10ListLayoutD1Ev>:
 801396e:	4770      	bx	lr

08013970 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7executeES3_>:
 8013970:	b430      	push	{r4, r5}
 8013972:	68c5      	ldr	r5, [r0, #12]
 8013974:	6844      	ldr	r4, [r0, #4]
 8013976:	106a      	asrs	r2, r5, #1
 8013978:	4603      	mov	r3, r0
 801397a:	07ed      	lsls	r5, r5, #31
 801397c:	eb04 0002 	add.w	r0, r4, r2
 8013980:	689b      	ldr	r3, [r3, #8]
 8013982:	bf48      	it	mi
 8013984:	58a2      	ldrmi	r2, [r4, r2]
 8013986:	bc30      	pop	{r4, r5}
 8013988:	bf48      	it	mi
 801398a:	58d3      	ldrmi	r3, [r2, r3]
 801398c:	4718      	bx	r3

0801398e <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv>:
 801398e:	6843      	ldr	r3, [r0, #4]
 8013990:	b12b      	cbz	r3, 801399e <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x10>
 8013992:	6883      	ldr	r3, [r0, #8]
 8013994:	b92b      	cbnz	r3, 80139a2 <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x14>
 8013996:	68c0      	ldr	r0, [r0, #12]
 8013998:	f000 0001 	and.w	r0, r0, #1
 801399c:	4770      	bx	lr
 801399e:	4618      	mov	r0, r3
 80139a0:	4770      	bx	lr
 80139a2:	2001      	movs	r0, #1
 80139a4:	4770      	bx	lr

080139a6 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7executeES3_>:
 80139a6:	b430      	push	{r4, r5}
 80139a8:	68c5      	ldr	r5, [r0, #12]
 80139aa:	6844      	ldr	r4, [r0, #4]
 80139ac:	106a      	asrs	r2, r5, #1
 80139ae:	4603      	mov	r3, r0
 80139b0:	07ed      	lsls	r5, r5, #31
 80139b2:	eb04 0002 	add.w	r0, r4, r2
 80139b6:	689b      	ldr	r3, [r3, #8]
 80139b8:	bf48      	it	mi
 80139ba:	58a2      	ldrmi	r2, [r4, r2]
 80139bc:	bc30      	pop	{r4, r5}
 80139be:	bf48      	it	mi
 80139c0:	58d3      	ldrmi	r3, [r2, r3]
 80139c2:	4718      	bx	r3

080139c4 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv>:
 80139c4:	6843      	ldr	r3, [r0, #4]
 80139c6:	b12b      	cbz	r3, 80139d4 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x10>
 80139c8:	6883      	ldr	r3, [r0, #8]
 80139ca:	b92b      	cbnz	r3, 80139d8 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x14>
 80139cc:	68c0      	ldr	r0, [r0, #12]
 80139ce:	f000 0001 	and.w	r0, r0, #1
 80139d2:	4770      	bx	lr
 80139d4:	4618      	mov	r0, r3
 80139d6:	4770      	bx	lr
 80139d8:	2001      	movs	r0, #1
 80139da:	4770      	bx	lr

080139dc <_ZN8touchgfx10ListLayoutD0Ev>:
 80139dc:	b510      	push	{r4, lr}
 80139de:	2130      	movs	r1, #48	; 0x30
 80139e0:	4604      	mov	r4, r0
 80139e2:	f013 fe9f 	bl	8027724 <_ZdlPvj>
 80139e6:	4620      	mov	r0, r4
 80139e8:	bd10      	pop	{r4, pc}

080139ea <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED0Ev>:
 80139ea:	b510      	push	{r4, lr}
 80139ec:	2110      	movs	r1, #16
 80139ee:	4604      	mov	r4, r0
 80139f0:	f013 fe98 	bl	8027724 <_ZdlPvj>
 80139f4:	4620      	mov	r0, r4
 80139f6:	bd10      	pop	{r4, pc}

080139f8 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED0Ev>:
 80139f8:	b510      	push	{r4, lr}
 80139fa:	2110      	movs	r1, #16
 80139fc:	4604      	mov	r4, r0
 80139fe:	f013 fe91 	bl	8027724 <_ZdlPvj>
 8013a02:	4620      	mov	r0, r4
 8013a04:	bd10      	pop	{r4, pc}

08013a06 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE>:
 8013a06:	4603      	mov	r3, r0
 8013a08:	4608      	mov	r0, r1
 8013a0a:	789a      	ldrb	r2, [r3, #2]
 8013a0c:	b992      	cbnz	r2, 8013a34 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x2e>
 8013a0e:	685a      	ldr	r2, [r3, #4]
 8013a10:	428a      	cmp	r2, r1
 8013a12:	d102      	bne.n	8013a1a <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x14>
 8013a14:	2201      	movs	r2, #1
 8013a16:	709a      	strb	r2, [r3, #2]
 8013a18:	4770      	bx	lr
 8013a1a:	7a1a      	ldrb	r2, [r3, #8]
 8013a1c:	2a01      	cmp	r2, #1
 8013a1e:	d104      	bne.n	8013a2a <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x24>
 8013a20:	88ca      	ldrh	r2, [r1, #6]
 8013a22:	8949      	ldrh	r1, [r1, #10]
 8013a24:	440a      	add	r2, r1
 8013a26:	801a      	strh	r2, [r3, #0]
 8013a28:	4770      	bx	lr
 8013a2a:	2a02      	cmp	r2, #2
 8013a2c:	d116      	bne.n	8013a5c <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 8013a2e:	888a      	ldrh	r2, [r1, #4]
 8013a30:	8909      	ldrh	r1, [r1, #8]
 8013a32:	e7f7      	b.n	8013a24 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x1e>
 8013a34:	7a1a      	ldrb	r2, [r3, #8]
 8013a36:	2a01      	cmp	r2, #1
 8013a38:	d107      	bne.n	8013a4a <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x44>
 8013a3a:	685b      	ldr	r3, [r3, #4]
 8013a3c:	8959      	ldrh	r1, [r3, #10]
 8013a3e:	88c3      	ldrh	r3, [r0, #6]
 8013a40:	4419      	add	r1, r3
 8013a42:	6803      	ldr	r3, [r0, #0]
 8013a44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013a46:	b209      	sxth	r1, r1
 8013a48:	4718      	bx	r3
 8013a4a:	2a02      	cmp	r2, #2
 8013a4c:	d106      	bne.n	8013a5c <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 8013a4e:	685b      	ldr	r3, [r3, #4]
 8013a50:	8919      	ldrh	r1, [r3, #8]
 8013a52:	8883      	ldrh	r3, [r0, #4]
 8013a54:	4419      	add	r1, r3
 8013a56:	6803      	ldr	r3, [r0, #0]
 8013a58:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013a5a:	e7f4      	b.n	8013a46 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x40>
 8013a5c:	4770      	bx	lr

08013a5e <_ZN8touchgfx10ListLayout9removeAllEv>:
 8013a5e:	2200      	movs	r2, #0
 8013a60:	b510      	push	{r4, lr}
 8013a62:	4611      	mov	r1, r2
 8013a64:	4604      	mov	r4, r0
 8013a66:	85c2      	strh	r2, [r0, #46]	; 0x2e
 8013a68:	f7ee fbbb 	bl	80021e2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8013a6c:	4620      	mov	r0, r4
 8013a6e:	f7ff fc99 	bl	80133a4 <_ZN8touchgfx9Container9removeAllEv>
 8013a72:	6960      	ldr	r0, [r4, #20]
 8013a74:	b120      	cbz	r0, 8013a80 <_ZN8touchgfx10ListLayout9removeAllEv+0x22>
 8013a76:	6803      	ldr	r3, [r0, #0]
 8013a78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013a7c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013a7e:	4718      	bx	r3
 8013a80:	bd10      	pop	{r4, pc}
	...

08013a84 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>:
 8013a84:	b530      	push	{r4, r5, lr}
 8013a86:	1e4b      	subs	r3, r1, #1
 8013a88:	2b01      	cmp	r3, #1
 8013a8a:	b085      	sub	sp, #20
 8013a8c:	4604      	mov	r4, r0
 8013a8e:	d905      	bls.n	8013a9c <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x18>
 8013a90:	4b11      	ldr	r3, [pc, #68]	; (8013ad8 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x54>)
 8013a92:	4a12      	ldr	r2, [pc, #72]	; (8013adc <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x58>)
 8013a94:	4812      	ldr	r0, [pc, #72]	; (8013ae0 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x5c>)
 8013a96:	21b3      	movs	r1, #179	; 0xb3
 8013a98:	f013 fe72 	bl	8027780 <__assert_func>
 8013a9c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8013aa0:	428b      	cmp	r3, r1
 8013aa2:	d017      	beq.n	8013ad4 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x50>
 8013aa4:	2500      	movs	r5, #0
 8013aa6:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 8013aaa:	85c5      	strh	r5, [r0, #46]	; 0x2e
 8013aac:	462a      	mov	r2, r5
 8013aae:	4629      	mov	r1, r5
 8013ab0:	f7ee fb97 	bl	80021e2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8013ab4:	4b0b      	ldr	r3, [pc, #44]	; (8013ae4 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x60>)
 8013ab6:	e9cd 3400 	strd	r3, r4, [sp]
 8013aba:	4b0b      	ldr	r3, [pc, #44]	; (8013ae8 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x64>)
 8013abc:	e9cd 3502 	strd	r3, r5, [sp, #8]
 8013ac0:	6823      	ldr	r3, [r4, #0]
 8013ac2:	4620      	mov	r0, r4
 8013ac4:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8013ac6:	4669      	mov	r1, sp
 8013ac8:	4798      	blx	r3
 8013aca:	6960      	ldr	r0, [r4, #20]
 8013acc:	b110      	cbz	r0, 8013ad4 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x50>
 8013ace:	6803      	ldr	r3, [r0, #0]
 8013ad0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013ad2:	4798      	blx	r3
 8013ad4:	b005      	add	sp, #20
 8013ad6:	bd30      	pop	{r4, r5, pc}
 8013ad8:	0802a07c 	.word	0x0802a07c
 8013adc:	0802b98c 	.word	0x0802b98c
 8013ae0:	0802b8c4 	.word	0x0802b8c4
 8013ae4:	0802b89c 	.word	0x0802b89c
 8013ae8:	08013b51 	.word	0x08013b51

08013aec <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>:
 8013aec:	b538      	push	{r3, r4, r5, lr}
 8013aee:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8013af2:	2b01      	cmp	r3, #1
 8013af4:	460d      	mov	r5, r1
 8013af6:	4604      	mov	r4, r0
 8013af8:	4611      	mov	r1, r2
 8013afa:	d002      	beq.n	8013b02 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x16>
 8013afc:	2b02      	cmp	r3, #2
 8013afe:	d015      	beq.n	8013b2c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x40>
 8013b00:	bd38      	pop	{r3, r4, r5, pc}
 8013b02:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8013b06:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 8013b0a:	429a      	cmp	r2, r3
 8013b0c:	bfb8      	it	lt
 8013b0e:	8103      	strhlt	r3, [r0, #8]
 8013b10:	896a      	ldrh	r2, [r5, #10]
 8013b12:	8943      	ldrh	r3, [r0, #10]
 8013b14:	4413      	add	r3, r2
 8013b16:	8143      	strh	r3, [r0, #10]
 8013b18:	460a      	mov	r2, r1
 8013b1a:	4628      	mov	r0, r5
 8013b1c:	2100      	movs	r1, #0
 8013b1e:	f7ee fcf3 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 8013b22:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8013b24:	896a      	ldrh	r2, [r5, #10]
 8013b26:	4413      	add	r3, r2
 8013b28:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8013b2a:	e7e9      	b.n	8013b00 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x14>
 8013b2c:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8013b30:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8013b34:	429a      	cmp	r2, r3
 8013b36:	bfb8      	it	lt
 8013b38:	8143      	strhlt	r3, [r0, #10]
 8013b3a:	892a      	ldrh	r2, [r5, #8]
 8013b3c:	8903      	ldrh	r3, [r0, #8]
 8013b3e:	4413      	add	r3, r2
 8013b40:	8103      	strh	r3, [r0, #8]
 8013b42:	2200      	movs	r2, #0
 8013b44:	4628      	mov	r0, r5
 8013b46:	f7ee fcdf 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 8013b4a:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8013b4c:	892a      	ldrh	r2, [r5, #8]
 8013b4e:	e7ea      	b.n	8013b26 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x3a>

08013b50 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>:
 8013b50:	f9b0 202e 	ldrsh.w	r2, [r0, #46]	; 0x2e
 8013b54:	f7ff bfca 	b.w	8013aec <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>

08013b58 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>:
 8013b58:	b570      	push	{r4, r5, r6, lr}
 8013b5a:	4604      	mov	r4, r0
 8013b5c:	460d      	mov	r5, r1
 8013b5e:	f7ff fff7 	bl	8013b50 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>
 8013b62:	4620      	mov	r0, r4
 8013b64:	4629      	mov	r1, r5
 8013b66:	f7ff fc83 	bl	8013470 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8013b6a:	6960      	ldr	r0, [r4, #20]
 8013b6c:	b120      	cbz	r0, 8013b78 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE+0x20>
 8013b6e:	6803      	ldr	r3, [r0, #0]
 8013b70:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013b74:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013b76:	4718      	bx	r3
 8013b78:	bd70      	pop	{r4, r5, r6, pc}
	...

08013b7c <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_>:
 8013b7c:	b530      	push	{r4, r5, lr}
 8013b7e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8013b80:	b089      	sub	sp, #36	; 0x24
 8013b82:	4604      	mov	r4, r0
 8013b84:	4615      	mov	r5, r2
 8013b86:	b92b      	cbnz	r3, 8013b94 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x18>
 8013b88:	6803      	ldr	r3, [r0, #0]
 8013b8a:	4611      	mov	r1, r2
 8013b8c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8013b8e:	4798      	blx	r3
 8013b90:	b009      	add	sp, #36	; 0x24
 8013b92:	bd30      	pop	{r4, r5, pc}
 8013b94:	f7ff fc51 	bl	801343a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>
 8013b98:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 8013b9c:	f88d 200c 	strb.w	r2, [sp, #12]
 8013ba0:	4a0f      	ldr	r2, [pc, #60]	; (8013be0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x64>)
 8013ba2:	9204      	str	r2, [sp, #16]
 8013ba4:	aa01      	add	r2, sp, #4
 8013ba6:	9205      	str	r2, [sp, #20]
 8013ba8:	4a0e      	ldr	r2, [pc, #56]	; (8013be4 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x68>)
 8013baa:	9502      	str	r5, [sp, #8]
 8013bac:	2300      	movs	r3, #0
 8013bae:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8013bb2:	f8ad 3004 	strh.w	r3, [sp, #4]
 8013bb6:	f88d 3006 	strb.w	r3, [sp, #6]
 8013bba:	6823      	ldr	r3, [r4, #0]
 8013bbc:	a904      	add	r1, sp, #16
 8013bbe:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8013bc0:	4620      	mov	r0, r4
 8013bc2:	4798      	blx	r3
 8013bc4:	4620      	mov	r0, r4
 8013bc6:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8013bca:	4629      	mov	r1, r5
 8013bcc:	f7ff ff8e 	bl	8013aec <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>
 8013bd0:	6960      	ldr	r0, [r4, #20]
 8013bd2:	2800      	cmp	r0, #0
 8013bd4:	d0dc      	beq.n	8013b90 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 8013bd6:	6803      	ldr	r3, [r0, #0]
 8013bd8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013bda:	4798      	blx	r3
 8013bdc:	e7d8      	b.n	8013b90 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 8013bde:	bf00      	nop
 8013be0:	0802b8b4 	.word	0x0802b8b4
 8013be4:	08013a07 	.word	0x08013a07

08013be8 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>:
 8013be8:	b538      	push	{r3, r4, r5, lr}
 8013bea:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8013bee:	2b01      	cmp	r3, #1
 8013bf0:	4604      	mov	r4, r0
 8013bf2:	460d      	mov	r5, r1
 8013bf4:	d002      	beq.n	8013bfc <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x14>
 8013bf6:	2b02      	cmp	r3, #2
 8013bf8:	d018      	beq.n	8013c2c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x44>
 8013bfa:	bd38      	pop	{r3, r4, r5, pc}
 8013bfc:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8013c00:	4293      	cmp	r3, r2
 8013c02:	bfc8      	it	gt
 8013c04:	8102      	strhgt	r2, [r0, #8]
 8013c06:	894a      	ldrh	r2, [r1, #10]
 8013c08:	8943      	ldrh	r3, [r0, #10]
 8013c0a:	1a9b      	subs	r3, r3, r2
 8013c0c:	8143      	strh	r3, [r0, #10]
 8013c0e:	680b      	ldr	r3, [r1, #0]
 8013c10:	4628      	mov	r0, r5
 8013c12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013c14:	2100      	movs	r1, #0
 8013c16:	4798      	blx	r3
 8013c18:	682b      	ldr	r3, [r5, #0]
 8013c1a:	2100      	movs	r1, #0
 8013c1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013c1e:	4628      	mov	r0, r5
 8013c20:	4798      	blx	r3
 8013c22:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8013c24:	896a      	ldrh	r2, [r5, #10]
 8013c26:	1a9b      	subs	r3, r3, r2
 8013c28:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8013c2a:	e7e6      	b.n	8013bfa <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x12>
 8013c2c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013c30:	4293      	cmp	r3, r2
 8013c32:	bfc8      	it	gt
 8013c34:	8142      	strhgt	r2, [r0, #10]
 8013c36:	890a      	ldrh	r2, [r1, #8]
 8013c38:	8903      	ldrh	r3, [r0, #8]
 8013c3a:	1a9b      	subs	r3, r3, r2
 8013c3c:	8103      	strh	r3, [r0, #8]
 8013c3e:	680b      	ldr	r3, [r1, #0]
 8013c40:	4628      	mov	r0, r5
 8013c42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013c44:	2100      	movs	r1, #0
 8013c46:	4798      	blx	r3
 8013c48:	682b      	ldr	r3, [r5, #0]
 8013c4a:	2100      	movs	r1, #0
 8013c4c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013c4e:	4628      	mov	r0, r5
 8013c50:	4798      	blx	r3
 8013c52:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8013c54:	892a      	ldrh	r2, [r5, #8]
 8013c56:	e7e6      	b.n	8013c26 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x3e>

08013c58 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>:
 8013c58:	b530      	push	{r4, r5, lr}
 8013c5a:	b089      	sub	sp, #36	; 0x24
 8013c5c:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 8013c60:	f88d 200c 	strb.w	r2, [sp, #12]
 8013c64:	4a13      	ldr	r2, [pc, #76]	; (8013cb4 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x5c>)
 8013c66:	9204      	str	r2, [sp, #16]
 8013c68:	aa01      	add	r2, sp, #4
 8013c6a:	9205      	str	r2, [sp, #20]
 8013c6c:	4a12      	ldr	r2, [pc, #72]	; (8013cb8 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x60>)
 8013c6e:	9102      	str	r1, [sp, #8]
 8013c70:	2300      	movs	r3, #0
 8013c72:	f8ad 3004 	strh.w	r3, [sp, #4]
 8013c76:	f88d 3006 	strb.w	r3, [sp, #6]
 8013c7a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8013c7e:	6803      	ldr	r3, [r0, #0]
 8013c80:	460d      	mov	r5, r1
 8013c82:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8013c84:	a904      	add	r1, sp, #16
 8013c86:	4604      	mov	r4, r0
 8013c88:	4798      	blx	r3
 8013c8a:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8013c8e:	b14b      	cbz	r3, 8013ca4 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x4c>
 8013c90:	4629      	mov	r1, r5
 8013c92:	4620      	mov	r0, r4
 8013c94:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8013c98:	f7ff ffa6 	bl	8013be8 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>
 8013c9c:	4629      	mov	r1, r5
 8013c9e:	4620      	mov	r0, r4
 8013ca0:	f7ff fbb4 	bl	801340c <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8013ca4:	6960      	ldr	r0, [r4, #20]
 8013ca6:	b110      	cbz	r0, 8013cae <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x56>
 8013ca8:	6803      	ldr	r3, [r0, #0]
 8013caa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013cac:	4798      	blx	r3
 8013cae:	b009      	add	sp, #36	; 0x24
 8013cb0:	bd30      	pop	{r4, r5, pc}
 8013cb2:	bf00      	nop
 8013cb4:	0802b8b4 	.word	0x0802b8b4
 8013cb8:	08013909 	.word	0x08013909

08013cbc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8013cbc:	b513      	push	{r0, r1, r4, lr}
 8013cbe:	6803      	ldr	r3, [r0, #0]
 8013cc0:	f8d3 40a0 	ldr.w	r4, [r3, #160]	; 0xa0
 8013cc4:	2300      	movs	r3, #0
 8013cc6:	e9cd 3300 	strd	r3, r3, [sp]
 8013cca:	466b      	mov	r3, sp
 8013ccc:	47a0      	blx	r4
 8013cce:	b002      	add	sp, #8
 8013cd0:	bd10      	pop	{r4, pc}

08013cd2 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8013cd2:	2301      	movs	r3, #1
 8013cd4:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8013cd8:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8013cdc:	4770      	bx	lr

08013cde <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8013cde:	2301      	movs	r3, #1
 8013ce0:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8013ce4:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8013ce8:	4770      	bx	lr

08013cea <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8013cea:	6843      	ldr	r3, [r0, #4]
 8013cec:	2201      	movs	r2, #1
 8013cee:	725a      	strb	r2, [r3, #9]
 8013cf0:	6840      	ldr	r0, [r0, #4]
 8013cf2:	6803      	ldr	r3, [r0, #0]
 8013cf4:	691b      	ldr	r3, [r3, #16]
 8013cf6:	4718      	bx	r3

08013cf8 <_ZN8touchgfx3HAL8flushDMAEv>:
 8013cf8:	6840      	ldr	r0, [r0, #4]
 8013cfa:	6803      	ldr	r3, [r0, #0]
 8013cfc:	689b      	ldr	r3, [r3, #8]
 8013cfe:	4718      	bx	r3

08013d00 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8013d00:	b530      	push	{r4, r5, lr}
 8013d02:	b08b      	sub	sp, #44	; 0x2c
 8013d04:	6804      	ldr	r4, [r0, #0]
 8013d06:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8013d0a:	9509      	str	r5, [sp, #36]	; 0x24
 8013d0c:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8013d10:	9508      	str	r5, [sp, #32]
 8013d12:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8013d16:	9507      	str	r5, [sp, #28]
 8013d18:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8013d1c:	9506      	str	r5, [sp, #24]
 8013d1e:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8013d22:	9505      	str	r5, [sp, #20]
 8013d24:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8013d28:	9504      	str	r5, [sp, #16]
 8013d2a:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8013d2e:	9503      	str	r5, [sp, #12]
 8013d30:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8013d34:	9502      	str	r5, [sp, #8]
 8013d36:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8013d3a:	e9cd 3500 	strd	r3, r5, [sp]
 8013d3e:	4613      	mov	r3, r2
 8013d40:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8013d42:	2200      	movs	r2, #0
 8013d44:	47a0      	blx	r4
 8013d46:	b00b      	add	sp, #44	; 0x2c
 8013d48:	bd30      	pop	{r4, r5, pc}
	...

08013d4c <_ZN8touchgfx3HAL10beginFrameEv>:
 8013d4c:	4b04      	ldr	r3, [pc, #16]	; (8013d60 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8013d4e:	781b      	ldrb	r3, [r3, #0]
 8013d50:	b123      	cbz	r3, 8013d5c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8013d52:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 8013d56:	f080 0001 	eor.w	r0, r0, #1
 8013d5a:	4770      	bx	lr
 8013d5c:	2001      	movs	r0, #1
 8013d5e:	4770      	bx	lr
 8013d60:	2002bd32 	.word	0x2002bd32

08013d64 <_ZN8touchgfx3HAL8endFrameEv>:
 8013d64:	b510      	push	{r4, lr}
 8013d66:	4604      	mov	r4, r0
 8013d68:	6840      	ldr	r0, [r0, #4]
 8013d6a:	6803      	ldr	r3, [r0, #0]
 8013d6c:	689b      	ldr	r3, [r3, #8]
 8013d6e:	4798      	blx	r3
 8013d70:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 8013d74:	b113      	cbz	r3, 8013d7c <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8013d76:	2301      	movs	r3, #1
 8013d78:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8013d7c:	bd10      	pop	{r4, pc}

08013d7e <_ZN8touchgfx3HAL10initializeEv>:
 8013d7e:	b510      	push	{r4, lr}
 8013d80:	4604      	mov	r4, r0
 8013d82:	f7ec ff7f 	bl	8000c84 <_ZN8touchgfx10OSWrappers10initializeEv>
 8013d86:	6860      	ldr	r0, [r4, #4]
 8013d88:	6803      	ldr	r3, [r0, #0]
 8013d8a:	68db      	ldr	r3, [r3, #12]
 8013d8c:	4798      	blx	r3
 8013d8e:	68e0      	ldr	r0, [r4, #12]
 8013d90:	6803      	ldr	r3, [r0, #0]
 8013d92:	689b      	ldr	r3, [r3, #8]
 8013d94:	4798      	blx	r3
 8013d96:	6823      	ldr	r3, [r4, #0]
 8013d98:	4620      	mov	r0, r4
 8013d9a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8013d9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013da0:	4718      	bx	r3
	...

08013da4 <_ZN8touchgfx3HAL4tickEv>:
 8013da4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8013da6:	6803      	ldr	r3, [r0, #0]
 8013da8:	4d5c      	ldr	r5, [pc, #368]	; (8013f1c <_ZN8touchgfx3HAL4tickEv+0x178>)
 8013daa:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8013dae:	4604      	mov	r4, r0
 8013db0:	4798      	blx	r3
 8013db2:	2800      	cmp	r0, #0
 8013db4:	f000 8097 	beq.w	8013ee6 <_ZN8touchgfx3HAL4tickEv+0x142>
 8013db8:	2001      	movs	r0, #1
 8013dba:	f7ec fccb 	bl	8000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8013dbe:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 8013dc2:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8013dc6:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 8013dca:	2600      	movs	r6, #0
 8013dcc:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8013dd0:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8013dd4:	b133      	cbz	r3, 8013de4 <_ZN8touchgfx3HAL4tickEv+0x40>
 8013dd6:	6823      	ldr	r3, [r4, #0]
 8013dd8:	4620      	mov	r0, r4
 8013dda:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8013dde:	4798      	blx	r3
 8013de0:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 8013de4:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8013de8:	6862      	ldr	r2, [r4, #4]
 8013dea:	f083 0301 	eor.w	r3, r3, #1
 8013dee:	7253      	strb	r3, [r2, #9]
 8013df0:	2601      	movs	r6, #1
 8013df2:	702e      	strb	r6, [r5, #0]
 8013df4:	f003 fcc2 	bl	801777c <_ZN8touchgfx11Application11getInstanceEv>
 8013df8:	6803      	ldr	r3, [r0, #0]
 8013dfa:	4631      	mov	r1, r6
 8013dfc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013dfe:	4798      	blx	r3
 8013e00:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8013e04:	b90b      	cbnz	r3, 8013e0a <_ZN8touchgfx3HAL4tickEv+0x66>
 8013e06:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 8013e0a:	f003 fcb7 	bl	801777c <_ZN8touchgfx11Application11getInstanceEv>
 8013e0e:	6803      	ldr	r3, [r0, #0]
 8013e10:	695b      	ldr	r3, [r3, #20]
 8013e12:	4798      	blx	r3
 8013e14:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8013e16:	6803      	ldr	r3, [r0, #0]
 8013e18:	691b      	ldr	r3, [r3, #16]
 8013e1a:	4798      	blx	r3
 8013e1c:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8013e20:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 8013e24:	3b01      	subs	r3, #1
 8013e26:	b2db      	uxtb	r3, r3
 8013e28:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8013e2c:	b10a      	cbz	r2, 8013e32 <_ZN8touchgfx3HAL4tickEv+0x8e>
 8013e2e:	2b00      	cmp	r3, #0
 8013e30:	d1eb      	bne.n	8013e0a <_ZN8touchgfx3HAL4tickEv+0x66>
 8013e32:	4a3b      	ldr	r2, [pc, #236]	; (8013f20 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8013e34:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 8013e38:	7813      	ldrb	r3, [r2, #0]
 8013e3a:	3301      	adds	r3, #1
 8013e3c:	b25b      	sxtb	r3, r3
 8013e3e:	4299      	cmp	r1, r3
 8013e40:	7013      	strb	r3, [r2, #0]
 8013e42:	dc10      	bgt.n	8013e66 <_ZN8touchgfx3HAL4tickEv+0xc2>
 8013e44:	68e0      	ldr	r0, [r4, #12]
 8013e46:	2300      	movs	r3, #0
 8013e48:	7013      	strb	r3, [r2, #0]
 8013e4a:	6803      	ldr	r3, [r0, #0]
 8013e4c:	aa03      	add	r2, sp, #12
 8013e4e:	68db      	ldr	r3, [r3, #12]
 8013e50:	a902      	add	r1, sp, #8
 8013e52:	4798      	blx	r3
 8013e54:	6823      	ldr	r3, [r4, #0]
 8013e56:	2800      	cmp	r0, #0
 8013e58:	d051      	beq.n	8013efe <_ZN8touchgfx3HAL4tickEv+0x15a>
 8013e5a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8013e5e:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8013e62:	4620      	mov	r0, r4
 8013e64:	4798      	blx	r3
 8013e66:	6960      	ldr	r0, [r4, #20]
 8013e68:	2300      	movs	r3, #0
 8013e6a:	f88d 3007 	strb.w	r3, [sp, #7]
 8013e6e:	b158      	cbz	r0, 8013e88 <_ZN8touchgfx3HAL4tickEv+0xe4>
 8013e70:	6803      	ldr	r3, [r0, #0]
 8013e72:	f10d 0107 	add.w	r1, sp, #7
 8013e76:	68db      	ldr	r3, [r3, #12]
 8013e78:	4798      	blx	r3
 8013e7a:	b128      	cbz	r0, 8013e88 <_ZN8touchgfx3HAL4tickEv+0xe4>
 8013e7c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8013e7e:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8013e82:	6803      	ldr	r3, [r0, #0]
 8013e84:	68db      	ldr	r3, [r3, #12]
 8013e86:	4798      	blx	r3
 8013e88:	f104 001c 	add.w	r0, r4, #28
 8013e8c:	f013 fb72 	bl	8027574 <_ZN8touchgfx8Gestures4tickEv>
 8013e90:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 8013e94:	b30b      	cbz	r3, 8013eda <_ZN8touchgfx3HAL4tickEv+0x136>
 8013e96:	6920      	ldr	r0, [r4, #16]
 8013e98:	6803      	ldr	r3, [r0, #0]
 8013e9a:	691b      	ldr	r3, [r3, #16]
 8013e9c:	4798      	blx	r3
 8013e9e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8013ea0:	4606      	mov	r6, r0
 8013ea2:	b903      	cbnz	r3, 8013ea6 <_ZN8touchgfx3HAL4tickEv+0x102>
 8013ea4:	6720      	str	r0, [r4, #112]	; 0x70
 8013ea6:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8013ea8:	4a1e      	ldr	r2, [pc, #120]	; (8013f24 <_ZN8touchgfx3HAL4tickEv+0x180>)
 8013eaa:	1af3      	subs	r3, r6, r3
 8013eac:	4293      	cmp	r3, r2
 8013eae:	d914      	bls.n	8013eda <_ZN8touchgfx3HAL4tickEv+0x136>
 8013eb0:	6920      	ldr	r0, [r4, #16]
 8013eb2:	6803      	ldr	r3, [r0, #0]
 8013eb4:	699b      	ldr	r3, [r3, #24]
 8013eb6:	4798      	blx	r3
 8013eb8:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8013eba:	2264      	movs	r2, #100	; 0x64
 8013ebc:	1af3      	subs	r3, r6, r3
 8013ebe:	fbb3 f3f2 	udiv	r3, r3, r2
 8013ec2:	fbb0 f0f3 	udiv	r0, r0, r3
 8013ec6:	2800      	cmp	r0, #0
 8013ec8:	dc1e      	bgt.n	8013f08 <_ZN8touchgfx3HAL4tickEv+0x164>
 8013eca:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 8013ece:	6920      	ldr	r0, [r4, #16]
 8013ed0:	6803      	ldr	r3, [r0, #0]
 8013ed2:	2100      	movs	r1, #0
 8013ed4:	69db      	ldr	r3, [r3, #28]
 8013ed6:	4798      	blx	r3
 8013ed8:	6726      	str	r6, [r4, #112]	; 0x70
 8013eda:	f003 fc4f 	bl	801777c <_ZN8touchgfx11Application11getInstanceEv>
 8013ede:	6803      	ldr	r3, [r0, #0]
 8013ee0:	2100      	movs	r1, #0
 8013ee2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013ee4:	4798      	blx	r3
 8013ee6:	6823      	ldr	r3, [r4, #0]
 8013ee8:	4620      	mov	r0, r4
 8013eea:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8013eee:	4798      	blx	r3
 8013ef0:	2001      	movs	r0, #1
 8013ef2:	f7ec fc4b 	bl	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8013ef6:	2300      	movs	r3, #0
 8013ef8:	702b      	strb	r3, [r5, #0]
 8013efa:	b004      	add	sp, #16
 8013efc:	bd70      	pop	{r4, r5, r6, pc}
 8013efe:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8013f02:	4620      	mov	r0, r4
 8013f04:	4798      	blx	r3
 8013f06:	e7ae      	b.n	8013e66 <_ZN8touchgfx3HAL4tickEv+0xc2>
 8013f08:	2863      	cmp	r0, #99	; 0x63
 8013f0a:	bfcb      	itete	gt
 8013f0c:	2300      	movgt	r3, #0
 8013f0e:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8013f12:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 8013f16:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 8013f1a:	e7d8      	b.n	8013ece <_ZN8touchgfx3HAL4tickEv+0x12a>
 8013f1c:	2002bd38 	.word	0x2002bd38
 8013f20:	2002bd39 	.word	0x2002bd39
 8013f24:	05f5e100 	.word	0x05f5e100

08013f28 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8013f28:	f7ec bedc 	b.w	8000ce4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08013f2c <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8013f2c:	6581      	str	r1, [r0, #88]	; 0x58
 8013f2e:	301c      	adds	r0, #28
 8013f30:	f013 bb1e 	b.w	8027570 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08013f34 <_ZN8touchgfx3HAL5touchEll>:
 8013f34:	b530      	push	{r4, r5, lr}
 8013f36:	b087      	sub	sp, #28
 8013f38:	4604      	mov	r4, r0
 8013f3a:	a804      	add	r0, sp, #16
 8013f3c:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8013f40:	f003 f9d2 	bl	80172e8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8013f44:	9b04      	ldr	r3, [sp, #16]
 8013f46:	f8ad 300c 	strh.w	r3, [sp, #12]
 8013f4a:	a906      	add	r1, sp, #24
 8013f4c:	9b05      	ldr	r3, [sp, #20]
 8013f4e:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8013f52:	a803      	add	r0, sp, #12
 8013f54:	f003 fa1a 	bl	801738c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8013f58:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 8013f5c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8013f60:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8013f64:	f104 001c 	add.w	r0, r4, #28
 8013f68:	b189      	cbz	r1, 8013f8e <_ZN8touchgfx3HAL5touchEll+0x5a>
 8013f6a:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 8013f6e:	9300      	str	r3, [sp, #0]
 8013f70:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8013f74:	4613      	mov	r3, r2
 8013f76:	462a      	mov	r2, r5
 8013f78:	f013 fb0a 	bl	8027590 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8013f7c:	b128      	cbz	r0, 8013f8a <_ZN8touchgfx3HAL5touchEll+0x56>
 8013f7e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8013f82:	65e3      	str	r3, [r4, #92]	; 0x5c
 8013f84:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8013f88:	6623      	str	r3, [r4, #96]	; 0x60
 8013f8a:	b007      	add	sp, #28
 8013f8c:	bd30      	pop	{r4, r5, pc}
 8013f8e:	f013 fb43 	bl	8027618 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8013f92:	2301      	movs	r3, #1
 8013f94:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8013f98:	e7f1      	b.n	8013f7e <_ZN8touchgfx3HAL5touchEll+0x4a>

08013f9a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8013f9a:	b510      	push	{r4, lr}
 8013f9c:	2b00      	cmp	r3, #0
 8013f9e:	d046      	beq.n	801402e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8013fa0:	ea81 0002 	eor.w	r0, r1, r2
 8013fa4:	07c4      	lsls	r4, r0, #31
 8013fa6:	d508      	bpl.n	8013fba <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8013fa8:	440b      	add	r3, r1
 8013faa:	3a01      	subs	r2, #1
 8013fac:	428b      	cmp	r3, r1
 8013fae:	d93e      	bls.n	801402e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8013fb0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8013fb4:	f801 0b01 	strb.w	r0, [r1], #1
 8013fb8:	e7f8      	b.n	8013fac <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8013fba:	07d0      	lsls	r0, r2, #31
 8013fbc:	bf42      	ittt	mi
 8013fbe:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8013fc2:	f801 0b01 	strbmi.w	r0, [r1], #1
 8013fc6:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8013fca:	2b01      	cmp	r3, #1
 8013fcc:	d911      	bls.n	8013ff2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8013fce:	ea81 0402 	eor.w	r4, r1, r2
 8013fd2:	07a4      	lsls	r4, r4, #30
 8013fd4:	4610      	mov	r0, r2
 8013fd6:	d022      	beq.n	801401e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8013fd8:	f023 0401 	bic.w	r4, r3, #1
 8013fdc:	440c      	add	r4, r1
 8013fde:	428c      	cmp	r4, r1
 8013fe0:	4602      	mov	r2, r0
 8013fe2:	d904      	bls.n	8013fee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8013fe4:	8812      	ldrh	r2, [r2, #0]
 8013fe6:	f821 2b02 	strh.w	r2, [r1], #2
 8013fea:	3002      	adds	r0, #2
 8013fec:	e7f7      	b.n	8013fde <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8013fee:	f003 0301 	and.w	r3, r3, #1
 8013ff2:	f023 0003 	bic.w	r0, r3, #3
 8013ff6:	4408      	add	r0, r1
 8013ff8:	4288      	cmp	r0, r1
 8013ffa:	4614      	mov	r4, r2
 8013ffc:	d904      	bls.n	8014008 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8013ffe:	6824      	ldr	r4, [r4, #0]
 8014000:	f841 4b04 	str.w	r4, [r1], #4
 8014004:	3204      	adds	r2, #4
 8014006:	e7f7      	b.n	8013ff8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8014008:	f003 0303 	and.w	r3, r3, #3
 801400c:	440b      	add	r3, r1
 801400e:	3a01      	subs	r2, #1
 8014010:	428b      	cmp	r3, r1
 8014012:	d90c      	bls.n	801402e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8014014:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8014018:	f801 0b01 	strb.w	r0, [r1], #1
 801401c:	e7f8      	b.n	8014010 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 801401e:	0790      	lsls	r0, r2, #30
 8014020:	d0e7      	beq.n	8013ff2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8014022:	f832 0b02 	ldrh.w	r0, [r2], #2
 8014026:	f821 0b02 	strh.w	r0, [r1], #2
 801402a:	3b02      	subs	r3, #2
 801402c:	e7e1      	b.n	8013ff2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801402e:	2001      	movs	r0, #1
 8014030:	bd10      	pop	{r4, pc}

08014032 <_ZN8touchgfx3HAL7noTouchEv>:
 8014032:	b510      	push	{r4, lr}
 8014034:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 8014038:	4604      	mov	r4, r0
 801403a:	b153      	cbz	r3, 8014052 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 801403c:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 8014040:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 8014044:	2101      	movs	r1, #1
 8014046:	301c      	adds	r0, #28
 8014048:	f013 fae6 	bl	8027618 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 801404c:	2300      	movs	r3, #0
 801404e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8014052:	bd10      	pop	{r4, pc}

08014054 <_ZN8touchgfx3HAL3lcdEv>:
 8014054:	4b04      	ldr	r3, [pc, #16]	; (8014068 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8014056:	681b      	ldr	r3, [r3, #0]
 8014058:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 801405c:	b10a      	cbz	r2, 8014062 <_ZN8touchgfx3HAL3lcdEv+0xe>
 801405e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8014060:	b900      	cbnz	r0, 8014064 <_ZN8touchgfx3HAL3lcdEv+0x10>
 8014062:	6898      	ldr	r0, [r3, #8]
 8014064:	4770      	bx	lr
 8014066:	bf00      	nop
 8014068:	2002bd34 	.word	0x2002bd34

0801406c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 801406c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014070:	4604      	mov	r4, r0
 8014072:	6980      	ldr	r0, [r0, #24]
 8014074:	b085      	sub	sp, #20
 8014076:	460f      	mov	r7, r1
 8014078:	4690      	mov	r8, r2
 801407a:	4699      	mov	r9, r3
 801407c:	b930      	cbnz	r0, 801408c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 801407e:	4b1c      	ldr	r3, [pc, #112]	; (80140f0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 8014080:	4a1c      	ldr	r2, [pc, #112]	; (80140f4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 8014082:	f44f 71a5 	mov.w	r1, #330	; 0x14a
 8014086:	481c      	ldr	r0, [pc, #112]	; (80140f8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 8014088:	f013 fb7a 	bl	8027780 <__assert_func>
 801408c:	ad04      	add	r5, sp, #16
 801408e:	2600      	movs	r6, #0
 8014090:	f845 6d04 	str.w	r6, [r5, #-4]!
 8014094:	6806      	ldr	r6, [r0, #0]
 8014096:	9501      	str	r5, [sp, #4]
 8014098:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 801409c:	9500      	str	r5, [sp, #0]
 801409e:	6835      	ldr	r5, [r6, #0]
 80140a0:	47a8      	blx	r5
 80140a2:	4d16      	ldr	r5, [pc, #88]	; (80140fc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 80140a4:	4606      	mov	r6, r0
 80140a6:	f8a5 9000 	strh.w	r9, [r5]
 80140aa:	f7ff ffd3 	bl	8014054 <_ZN8touchgfx3HAL3lcdEv>
 80140ae:	6803      	ldr	r3, [r0, #0]
 80140b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80140b2:	4798      	blx	r3
 80140b4:	2801      	cmp	r0, #1
 80140b6:	d012      	beq.n	80140de <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 80140b8:	d306      	bcc.n	80140c8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 80140ba:	280d      	cmp	r0, #13
 80140bc:	d80b      	bhi.n	80140d6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 80140be:	4b10      	ldr	r3, [pc, #64]	; (8014100 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 80140c0:	4a0c      	ldr	r2, [pc, #48]	; (80140f4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 80140c2:	f240 1167 	movw	r1, #359	; 0x167
 80140c6:	e7de      	b.n	8014086 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 80140c8:	882b      	ldrh	r3, [r5, #0]
 80140ca:	fb08 7203 	mla	r2, r8, r3, r7
 80140ce:	9b03      	ldr	r3, [sp, #12]
 80140d0:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 80140d4:	63e3      	str	r3, [r4, #60]	; 0x3c
 80140d6:	4630      	mov	r0, r6
 80140d8:	b005      	add	sp, #20
 80140da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80140de:	882a      	ldrh	r2, [r5, #0]
 80140e0:	9b03      	ldr	r3, [sp, #12]
 80140e2:	fb08 7202 	mla	r2, r8, r2, r7
 80140e6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80140ea:	1a9a      	subs	r2, r3, r2
 80140ec:	63e2      	str	r2, [r4, #60]	; 0x3c
 80140ee:	e7f2      	b.n	80140d6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 80140f0:	0802bb3e 	.word	0x0802bb3e
 80140f4:	0802bdfc 	.word	0x0802bdfc
 80140f8:	0802bb83 	.word	0x0802bb83
 80140fc:	2002bd2e 	.word	0x2002bd2e
 8014100:	0802bba9 	.word	0x0802bba9

08014104 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8014104:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014106:	b08b      	sub	sp, #44	; 0x2c
 8014108:	4617      	mov	r7, r2
 801410a:	4604      	mov	r4, r0
 801410c:	460e      	mov	r6, r1
 801410e:	461d      	mov	r5, r3
 8014110:	f7ff ffa0 	bl	8014054 <_ZN8touchgfx3HAL3lcdEv>
 8014114:	6803      	ldr	r3, [r0, #0]
 8014116:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014118:	4798      	blx	r3
 801411a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 801411e:	9007      	str	r0, [sp, #28]
 8014120:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8014124:	4b0d      	ldr	r3, [pc, #52]	; (801415c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8014126:	6822      	ldr	r2, [r4, #0]
 8014128:	881b      	ldrh	r3, [r3, #0]
 801412a:	9306      	str	r3, [sp, #24]
 801412c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8014130:	9305      	str	r3, [sp, #20]
 8014132:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8014136:	9304      	str	r3, [sp, #16]
 8014138:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801413c:	9303      	str	r3, [sp, #12]
 801413e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8014142:	9302      	str	r3, [sp, #8]
 8014144:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8014148:	e9cd 5300 	strd	r5, r3, [sp]
 801414c:	4631      	mov	r1, r6
 801414e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8014150:	463b      	mov	r3, r7
 8014152:	2200      	movs	r2, #0
 8014154:	4620      	mov	r0, r4
 8014156:	47a8      	blx	r5
 8014158:	b00b      	add	sp, #44	; 0x2c
 801415a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801415c:	2002bd2e 	.word	0x2002bd2e

08014160 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8014160:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014164:	4698      	mov	r8, r3
 8014166:	6803      	ldr	r3, [r0, #0]
 8014168:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 801416a:	4b15      	ldr	r3, [pc, #84]	; (80141c0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 801416c:	b08b      	sub	sp, #44	; 0x2c
 801416e:	4617      	mov	r7, r2
 8014170:	f8b3 9000 	ldrh.w	r9, [r3]
 8014174:	460e      	mov	r6, r1
 8014176:	4604      	mov	r4, r0
 8014178:	f7ff ff6c 	bl	8014054 <_ZN8touchgfx3HAL3lcdEv>
 801417c:	6803      	ldr	r3, [r0, #0]
 801417e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014180:	4798      	blx	r3
 8014182:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8014186:	e9cd 0308 	strd	r0, r3, [sp, #32]
 801418a:	2302      	movs	r3, #2
 801418c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8014190:	2301      	movs	r3, #1
 8014192:	9305      	str	r3, [sp, #20]
 8014194:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8014198:	9304      	str	r3, [sp, #16]
 801419a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801419e:	9303      	str	r3, [sp, #12]
 80141a0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80141a4:	9302      	str	r3, [sp, #8]
 80141a6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80141aa:	2200      	movs	r2, #0
 80141ac:	e9cd 8300 	strd	r8, r3, [sp]
 80141b0:	4631      	mov	r1, r6
 80141b2:	463b      	mov	r3, r7
 80141b4:	4620      	mov	r0, r4
 80141b6:	47a8      	blx	r5
 80141b8:	b00b      	add	sp, #44	; 0x2c
 80141ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80141be:	bf00      	nop
 80141c0:	2002bd2e 	.word	0x2002bd2e

080141c4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 80141c4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80141c8:	4698      	mov	r8, r3
 80141ca:	6803      	ldr	r3, [r0, #0]
 80141cc:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 80141ce:	4b11      	ldr	r3, [pc, #68]	; (8014214 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 80141d0:	b087      	sub	sp, #28
 80141d2:	f8b3 9000 	ldrh.w	r9, [r3]
 80141d6:	460e      	mov	r6, r1
 80141d8:	4617      	mov	r7, r2
 80141da:	4604      	mov	r4, r0
 80141dc:	f7ff ff3a 	bl	8014054 <_ZN8touchgfx3HAL3lcdEv>
 80141e0:	6803      	ldr	r3, [r0, #0]
 80141e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80141e4:	4798      	blx	r3
 80141e6:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 80141ea:	f8cd 900c 	str.w	r9, [sp, #12]
 80141ee:	e9cd 0304 	strd	r0, r3, [sp, #16]
 80141f2:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 80141f6:	9302      	str	r3, [sp, #8]
 80141f8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 80141fc:	9301      	str	r3, [sp, #4]
 80141fe:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8014202:	9300      	str	r3, [sp, #0]
 8014204:	463a      	mov	r2, r7
 8014206:	4643      	mov	r3, r8
 8014208:	4631      	mov	r1, r6
 801420a:	4620      	mov	r0, r4
 801420c:	47a8      	blx	r5
 801420e:	b007      	add	sp, #28
 8014210:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014214:	2002bd2e 	.word	0x2002bd2e

08014218 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8014218:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801421c:	4604      	mov	r4, r0
 801421e:	b08f      	sub	sp, #60	; 0x3c
 8014220:	4610      	mov	r0, r2
 8014222:	460d      	mov	r5, r1
 8014224:	4691      	mov	r9, r2
 8014226:	461e      	mov	r6, r3
 8014228:	f007 f966 	bl	801b4f8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801422c:	2800      	cmp	r0, #0
 801422e:	f000 809c 	beq.w	801436a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x152>
 8014232:	6823      	ldr	r3, [r4, #0]
 8014234:	f8df b194 	ldr.w	fp, [pc, #404]	; 80143cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>
 8014238:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801423a:	f8df a194 	ldr.w	sl, [pc, #404]	; 80143d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 801423e:	4f60      	ldr	r7, [pc, #384]	; (80143c0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8014240:	4620      	mov	r0, r4
 8014242:	4798      	blx	r3
 8014244:	6823      	ldr	r3, [r4, #0]
 8014246:	4620      	mov	r0, r4
 8014248:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801424a:	4798      	blx	r3
 801424c:	f8bb 3000 	ldrh.w	r3, [fp]
 8014250:	9301      	str	r3, [sp, #4]
 8014252:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8014256:	f8ba 3000 	ldrh.w	r3, [sl]
 801425a:	9302      	str	r3, [sp, #8]
 801425c:	883b      	ldrh	r3, [r7, #0]
 801425e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8014262:	9303      	str	r3, [sp, #12]
 8014264:	4b57      	ldr	r3, [pc, #348]	; (80143c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8014266:	9305      	str	r3, [sp, #20]
 8014268:	881a      	ldrh	r2, [r3, #0]
 801426a:	9204      	str	r2, [sp, #16]
 801426c:	4640      	mov	r0, r8
 801426e:	f007 f9fd 	bl	801b66c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014272:	8038      	strh	r0, [r7, #0]
 8014274:	4640      	mov	r0, r8
 8014276:	f007 fa33 	bl	801b6e0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801427a:	9b05      	ldr	r3, [sp, #20]
 801427c:	8018      	strh	r0, [r3, #0]
 801427e:	4b52      	ldr	r3, [pc, #328]	; (80143c8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8014280:	781b      	ldrb	r3, [r3, #0]
 8014282:	2b00      	cmp	r3, #0
 8014284:	d174      	bne.n	8014370 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 8014286:	883b      	ldrh	r3, [r7, #0]
 8014288:	f8ab 3000 	strh.w	r3, [fp]
 801428c:	f8aa 0000 	strh.w	r0, [sl]
 8014290:	4648      	mov	r0, r9
 8014292:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8014296:	f007 f92f 	bl	801b4f8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801429a:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 801429e:	2200      	movs	r2, #0
 80142a0:	4611      	mov	r1, r2
 80142a2:	4628      	mov	r0, r5
 80142a4:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 80142a8:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 80142ac:	f7ee f92c 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 80142b0:	2301      	movs	r3, #1
 80142b2:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 80142b6:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 80142ba:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80142be:	2b00      	cmp	r3, #0
 80142c0:	dd5c      	ble.n	801437c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 80142c2:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80142c6:	2b00      	cmp	r3, #0
 80142c8:	dd58      	ble.n	801437c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 80142ca:	462a      	mov	r2, r5
 80142cc:	ab0a      	add	r3, sp, #40	; 0x28
 80142ce:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80142d2:	6851      	ldr	r1, [r2, #4]
 80142d4:	c303      	stmia	r3!, {r0, r1}
 80142d6:	4631      	mov	r1, r6
 80142d8:	a80a      	add	r0, sp, #40	; 0x28
 80142da:	f7ff fa0d 	bl	80136f8 <_ZN8touchgfx4RectaNERKS0_>
 80142de:	4b38      	ldr	r3, [pc, #224]	; (80143c0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 80142e0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80142e4:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80142e8:	2100      	movs	r1, #0
 80142ea:	aa0a      	add	r2, sp, #40	; 0x28
 80142ec:	4b35      	ldr	r3, [pc, #212]	; (80143c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80142ee:	910c      	str	r1, [sp, #48]	; 0x30
 80142f0:	e892 0003 	ldmia.w	r2, {r0, r1}
 80142f4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80142f8:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80142fc:	ab08      	add	r3, sp, #32
 80142fe:	e883 0003 	stmia.w	r3, {r0, r1}
 8014302:	4618      	mov	r0, r3
 8014304:	a90c      	add	r1, sp, #48	; 0x30
 8014306:	f7ff f9f7 	bl	80136f8 <_ZN8touchgfx4RectaNERKS0_>
 801430a:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 801430c:	2b00      	cmp	r3, #0
 801430e:	d13c      	bne.n	801438a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x172>
 8014310:	2000      	movs	r0, #0
 8014312:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 8014316:	2600      	movs	r6, #0
 8014318:	682a      	ldr	r2, [r5, #0]
 801431a:	696b      	ldr	r3, [r5, #20]
 801431c:	616e      	str	r6, [r5, #20]
 801431e:	9305      	str	r3, [sp, #20]
 8014320:	6892      	ldr	r2, [r2, #8]
 8014322:	a908      	add	r1, sp, #32
 8014324:	4628      	mov	r0, r5
 8014326:	4790      	blx	r2
 8014328:	9b05      	ldr	r3, [sp, #20]
 801432a:	616b      	str	r3, [r5, #20]
 801432c:	4652      	mov	r2, sl
 801432e:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 8014332:	4649      	mov	r1, r9
 8014334:	4628      	mov	r0, r5
 8014336:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 801433a:	f7ee f8e5 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 801433e:	4b23      	ldr	r3, [pc, #140]	; (80143cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8014340:	9a01      	ldr	r2, [sp, #4]
 8014342:	801a      	strh	r2, [r3, #0]
 8014344:	4b22      	ldr	r3, [pc, #136]	; (80143d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8014346:	9a02      	ldr	r2, [sp, #8]
 8014348:	801a      	strh	r2, [r3, #0]
 801434a:	4b1d      	ldr	r3, [pc, #116]	; (80143c0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 801434c:	9a03      	ldr	r2, [sp, #12]
 801434e:	801a      	strh	r2, [r3, #0]
 8014350:	4b1c      	ldr	r3, [pc, #112]	; (80143c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8014352:	9a04      	ldr	r2, [sp, #16]
 8014354:	801a      	strh	r2, [r3, #0]
 8014356:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 801435a:	6823      	ldr	r3, [r4, #0]
 801435c:	4620      	mov	r0, r4
 801435e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014360:	4798      	blx	r3
 8014362:	6823      	ldr	r3, [r4, #0]
 8014364:	4620      	mov	r0, r4
 8014366:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014368:	4798      	blx	r3
 801436a:	b00f      	add	sp, #60	; 0x3c
 801436c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014370:	883b      	ldrh	r3, [r7, #0]
 8014372:	f8ab 0000 	strh.w	r0, [fp]
 8014376:	f8aa 3000 	strh.w	r3, [sl]
 801437a:	e789      	b.n	8014290 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x78>
 801437c:	462a      	mov	r2, r5
 801437e:	ab0a      	add	r3, sp, #40	; 0x28
 8014380:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8014384:	6851      	ldr	r1, [r2, #4]
 8014386:	c303      	stmia	r3!, {r0, r1}
 8014388:	e7a9      	b.n	80142de <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc6>
 801438a:	a807      	add	r0, sp, #28
 801438c:	f007 fb00 	bl	801b990 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8014390:	4606      	mov	r6, r0
 8014392:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8014394:	6803      	ldr	r3, [r0, #0]
 8014396:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014398:	4798      	blx	r3
 801439a:	4286      	cmp	r6, r0
 801439c:	d1b8      	bne.n	8014310 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xf8>
 801439e:	f7ff fe59 	bl	8014054 <_ZN8touchgfx3HAL3lcdEv>
 80143a2:	6803      	ldr	r3, [r0, #0]
 80143a4:	4606      	mov	r6, r0
 80143a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80143a8:	9305      	str	r3, [sp, #20]
 80143aa:	a807      	add	r0, sp, #28
 80143ac:	f007 faf0 	bl	801b990 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80143b0:	9b05      	ldr	r3, [sp, #20]
 80143b2:	4601      	mov	r1, r0
 80143b4:	4630      	mov	r0, r6
 80143b6:	4798      	blx	r3
 80143b8:	f080 0001 	eor.w	r0, r0, #1
 80143bc:	b2c0      	uxtb	r0, r0
 80143be:	e7a8      	b.n	8014312 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 80143c0:	2002bd28 	.word	0x2002bd28
 80143c4:	2002bd2a 	.word	0x2002bd2a
 80143c8:	2002bd2c 	.word	0x2002bd2c
 80143cc:	2002bd2e 	.word	0x2002bd2e
 80143d0:	2002bd30 	.word	0x2002bd30

080143d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 80143d4:	b510      	push	{r4, lr}
 80143d6:	4b07      	ldr	r3, [pc, #28]	; (80143f4 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 80143d8:	781b      	ldrb	r3, [r3, #0]
 80143da:	4604      	mov	r4, r0
 80143dc:	b13b      	cbz	r3, 80143ee <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80143de:	6803      	ldr	r3, [r0, #0]
 80143e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80143e2:	4798      	blx	r3
 80143e4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80143e6:	4283      	cmp	r3, r0
 80143e8:	d101      	bne.n	80143ee <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80143ea:	6c20      	ldr	r0, [r4, #64]	; 0x40
 80143ec:	bd10      	pop	{r4, pc}
 80143ee:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80143f0:	e7fc      	b.n	80143ec <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 80143f2:	bf00      	nop
 80143f4:	2002bd32 	.word	0x2002bd32

080143f8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 80143f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80143fc:	b088      	sub	sp, #32
 80143fe:	461d      	mov	r5, r3
 8014400:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8014404:	2400      	movs	r4, #0
 8014406:	f8bd 8040 	ldrh.w	r8, [sp, #64]	; 0x40
 801440a:	f8bd 7044 	ldrh.w	r7, [sp, #68]	; 0x44
 801440e:	f8bd 904c 	ldrh.w	r9, [sp, #76]	; 0x4c
 8014412:	9403      	str	r4, [sp, #12]
 8014414:	e9cd 3100 	strd	r3, r1, [sp]
 8014418:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801441c:	f8ad 8014 	strh.w	r8, [sp, #20]
 8014420:	4692      	mov	sl, r2
 8014422:	4606      	mov	r6, r0
 8014424:	f8ad 7016 	strh.w	r7, [sp, #22]
 8014428:	f8ad 3018 	strh.w	r3, [sp, #24]
 801442c:	f88d 401c 	strb.w	r4, [sp, #28]
 8014430:	f7ff ffd0 	bl	80143d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8014434:	fb09 a505 	mla	r5, r9, r5, sl
 8014438:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801443c:	9504      	str	r5, [sp, #16]
 801443e:	f8ad 901a 	strh.w	r9, [sp, #26]
 8014442:	f88d 401e 	strb.w	r4, [sp, #30]
 8014446:	f88d 401d 	strb.w	r4, [sp, #29]
 801444a:	f88d 401f 	strb.w	r4, [sp, #31]
 801444e:	f1b8 0f00 	cmp.w	r8, #0
 8014452:	d000      	beq.n	8014456 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x5e>
 8014454:	b937      	cbnz	r7, 8014464 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x6c>
 8014456:	4b0d      	ldr	r3, [pc, #52]	; (801448c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x94>)
 8014458:	4a0d      	ldr	r2, [pc, #52]	; (8014490 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 801445a:	f240 210b 	movw	r1, #523	; 0x20b
 801445e:	480d      	ldr	r0, [pc, #52]	; (8014494 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 8014460:	f013 f98e 	bl	8027780 <__assert_func>
 8014464:	6833      	ldr	r3, [r6, #0]
 8014466:	9c00      	ldr	r4, [sp, #0]
 8014468:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801446a:	4630      	mov	r0, r6
 801446c:	4798      	blx	r3
 801446e:	4220      	tst	r0, r4
 8014470:	d104      	bne.n	801447c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x84>
 8014472:	4b09      	ldr	r3, [pc, #36]	; (8014498 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa0>)
 8014474:	4a06      	ldr	r2, [pc, #24]	; (8014490 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 8014476:	f44f 7103 	mov.w	r1, #524	; 0x20c
 801447a:	e7f0      	b.n	801445e <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x66>
 801447c:	6870      	ldr	r0, [r6, #4]
 801447e:	6803      	ldr	r3, [r0, #0]
 8014480:	4669      	mov	r1, sp
 8014482:	685b      	ldr	r3, [r3, #4]
 8014484:	4798      	blx	r3
 8014486:	b008      	add	sp, #32
 8014488:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801448c:	0802b9d1 	.word	0x0802b9d1
 8014490:	0802bc31 	.word	0x0802bc31
 8014494:	0802bb83 	.word	0x0802bb83
 8014498:	0802ba09 	.word	0x0802ba09

0801449c <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 801449c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80144a0:	b089      	sub	sp, #36	; 0x24
 80144a2:	2400      	movs	r4, #0
 80144a4:	461d      	mov	r5, r3
 80144a6:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80144aa:	f8bd 9050 	ldrh.w	r9, [sp, #80]	; 0x50
 80144ae:	f8bd 8048 	ldrh.w	r8, [sp, #72]	; 0x48
 80144b2:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 80144b6:	9403      	str	r4, [sp, #12]
 80144b8:	468a      	mov	sl, r1
 80144ba:	4693      	mov	fp, r2
 80144bc:	4606      	mov	r6, r0
 80144be:	e9cd 3400 	strd	r3, r4, [sp]
 80144c2:	f7ff ff87 	bl	80143d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80144c6:	fb09 b505 	mla	r5, r9, r5, fp
 80144ca:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80144ce:	9504      	str	r5, [sp, #16]
 80144d0:	f8ad 8014 	strh.w	r8, [sp, #20]
 80144d4:	f8ad 7016 	strh.w	r7, [sp, #22]
 80144d8:	f8ad 4018 	strh.w	r4, [sp, #24]
 80144dc:	f8ad 901a 	strh.w	r9, [sp, #26]
 80144e0:	f8cd a00c 	str.w	sl, [sp, #12]
 80144e4:	f8ad 401c 	strh.w	r4, [sp, #28]
 80144e8:	f88d 401e 	strb.w	r4, [sp, #30]
 80144ec:	f88d 401f 	strb.w	r4, [sp, #31]
 80144f0:	f1b8 0f00 	cmp.w	r8, #0
 80144f4:	d000      	beq.n	80144f8 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x5c>
 80144f6:	b937      	cbnz	r7, 8014506 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x6a>
 80144f8:	4b0d      	ldr	r3, [pc, #52]	; (8014530 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x94>)
 80144fa:	4a0e      	ldr	r2, [pc, #56]	; (8014534 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 80144fc:	f240 2121 	movw	r1, #545	; 0x221
 8014500:	480d      	ldr	r0, [pc, #52]	; (8014538 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 8014502:	f013 f93d 	bl	8027780 <__assert_func>
 8014506:	6833      	ldr	r3, [r6, #0]
 8014508:	9c00      	ldr	r4, [sp, #0]
 801450a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801450c:	4630      	mov	r0, r6
 801450e:	4798      	blx	r3
 8014510:	4220      	tst	r0, r4
 8014512:	d104      	bne.n	801451e <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x82>
 8014514:	4b09      	ldr	r3, [pc, #36]	; (801453c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa0>)
 8014516:	4a07      	ldr	r2, [pc, #28]	; (8014534 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 8014518:	f240 2122 	movw	r1, #546	; 0x222
 801451c:	e7f0      	b.n	8014500 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x64>
 801451e:	6870      	ldr	r0, [r6, #4]
 8014520:	6803      	ldr	r3, [r0, #0]
 8014522:	4669      	mov	r1, sp
 8014524:	685b      	ldr	r3, [r3, #4]
 8014526:	4798      	blx	r3
 8014528:	b009      	add	sp, #36	; 0x24
 801452a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801452e:	bf00      	nop
 8014530:	0802ba4e 	.word	0x0802ba4e
 8014534:	0802bca7 	.word	0x0802bca7
 8014538:	0802bb83 	.word	0x0802bb83
 801453c:	0802ba86 	.word	0x0802ba86

08014540 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8014540:	b510      	push	{r4, lr}
 8014542:	4b0b      	ldr	r3, [pc, #44]	; (8014570 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 8014544:	781b      	ldrb	r3, [r3, #0]
 8014546:	4604      	mov	r4, r0
 8014548:	b95b      	cbnz	r3, 8014562 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801454a:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 801454e:	2b02      	cmp	r3, #2
 8014550:	d007      	beq.n	8014562 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8014552:	6840      	ldr	r0, [r0, #4]
 8014554:	f000 fb7a 	bl	8014c4c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8014558:	b118      	cbz	r0, 8014562 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801455a:	6862      	ldr	r2, [r4, #4]
 801455c:	7a53      	ldrb	r3, [r2, #9]
 801455e:	2b00      	cmp	r3, #0
 8014560:	d0fc      	beq.n	801455c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8014562:	f7ec fbb7 	bl	8000cd4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8014566:	4620      	mov	r0, r4
 8014568:	f7ff ff34 	bl	80143d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801456c:	bd10      	pop	{r4, pc}
 801456e:	bf00      	nop
 8014570:	2002bd32 	.word	0x2002bd32

08014574 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 8014574:	b508      	push	{r3, lr}
 8014576:	290d      	cmp	r1, #13
 8014578:	d817      	bhi.n	80145aa <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 801457a:	e8df f001 	tbb	[pc, r1]
 801457e:	090b      	.short	0x090b
 8014580:	0d0d0d07 	.word	0x0d0d0d07
 8014584:	1414140d 	.word	0x1414140d
 8014588:	0d0d1414 	.word	0x0d0d1414
 801458c:	2020      	movs	r0, #32
 801458e:	bd08      	pop	{r3, pc}
 8014590:	2018      	movs	r0, #24
 8014592:	e7fc      	b.n	801458e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8014594:	2010      	movs	r0, #16
 8014596:	e7fa      	b.n	801458e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8014598:	4b05      	ldr	r3, [pc, #20]	; (80145b0 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 801459a:	4a06      	ldr	r2, [pc, #24]	; (80145b4 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 801459c:	4806      	ldr	r0, [pc, #24]	; (80145b8 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 801459e:	f240 2182 	movw	r1, #642	; 0x282
 80145a2:	f013 f8ed 	bl	8027780 <__assert_func>
 80145a6:	2008      	movs	r0, #8
 80145a8:	e7f1      	b.n	801458e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 80145aa:	2000      	movs	r0, #0
 80145ac:	e7ef      	b.n	801458e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 80145ae:	bf00      	nop
 80145b0:	0802bbff 	.word	0x0802bbff
 80145b4:	0802bfd2 	.word	0x0802bfd2
 80145b8:	0802bb83 	.word	0x0802bb83

080145bc <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 80145bc:	b570      	push	{r4, r5, r6, lr}
 80145be:	460d      	mov	r5, r1
 80145c0:	f89d 1014 	ldrb.w	r1, [sp, #20]
 80145c4:	4616      	mov	r6, r2
 80145c6:	461c      	mov	r4, r3
 80145c8:	f7ff ffd4 	bl	8014574 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 80145cc:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 80145d0:	10c0      	asrs	r0, r0, #3
 80145d2:	fb06 5101 	mla	r1, r6, r1, r5
 80145d6:	fb00 4001 	mla	r0, r0, r1, r4
 80145da:	bd70      	pop	{r4, r5, r6, pc}

080145dc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 80145dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80145e0:	b08a      	sub	sp, #40	; 0x28
 80145e2:	f04f 0c00 	mov.w	ip, #0
 80145e6:	f89d 5064 	ldrb.w	r5, [sp, #100]	; 0x64
 80145ea:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 80145ee:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 80145f2:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 80145f6:	f89d 8068 	ldrb.w	r8, [sp, #104]	; 0x68
 80145fa:	f8cd c014 	str.w	ip, [sp, #20]
 80145fe:	2d0b      	cmp	r5, #11
 8014600:	4604      	mov	r4, r0
 8014602:	469a      	mov	sl, r3
 8014604:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8014608:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 801460c:	d12d      	bne.n	801466a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x8e>
 801460e:	2080      	movs	r0, #128	; 0x80
 8014610:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8014614:	9204      	str	r2, [sp, #16]
 8014616:	4620      	mov	r0, r4
 8014618:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 801461c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8014620:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8014624:	f8ad 701c 	strh.w	r7, [sp, #28]
 8014628:	f8ad 601e 	strh.w	r6, [sp, #30]
 801462c:	f7ff fed2 	bl	80143d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8014630:	e9cd 9800 	strd	r9, r8, [sp]
 8014634:	4603      	mov	r3, r0
 8014636:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 801463a:	4651      	mov	r1, sl
 801463c:	4620      	mov	r0, r4
 801463e:	f7ff ffbd 	bl	80145bc <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8014642:	f89d 306c 	ldrb.w	r3, [sp, #108]	; 0x6c
 8014646:	9006      	str	r0, [sp, #24]
 8014648:	f8ad 9022 	strh.w	r9, [sp, #34]	; 0x22
 801464c:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 8014650:	f88d 8026 	strb.w	r8, [sp, #38]	; 0x26
 8014654:	f88d 3027 	strb.w	r3, [sp, #39]	; 0x27
 8014658:	b107      	cbz	r7, 801465c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x80>
 801465a:	b9d6      	cbnz	r6, 8014692 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb6>
 801465c:	4b17      	ldr	r3, [pc, #92]	; (80146bc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe0>)
 801465e:	4a18      	ldr	r2, [pc, #96]	; (80146c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe4>)
 8014660:	f44f 71ea 	mov.w	r1, #468	; 0x1d4
 8014664:	4817      	ldr	r0, [pc, #92]	; (80146c4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 8014666:	f013 f88b 	bl	8027780 <__assert_func>
 801466a:	2d02      	cmp	r5, #2
 801466c:	d108      	bne.n	8014680 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xa4>
 801466e:	2bff      	cmp	r3, #255	; 0xff
 8014670:	d104      	bne.n	801467c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xa0>
 8014672:	2800      	cmp	r0, #0
 8014674:	bf14      	ite	ne
 8014676:	2040      	movne	r0, #64	; 0x40
 8014678:	2020      	moveq	r0, #32
 801467a:	e7c9      	b.n	8014610 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 801467c:	2040      	movs	r0, #64	; 0x40
 801467e:	e7c7      	b.n	8014610 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8014680:	2bff      	cmp	r3, #255	; 0xff
 8014682:	d104      	bne.n	801468e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb2>
 8014684:	2800      	cmp	r0, #0
 8014686:	bf14      	ite	ne
 8014688:	2004      	movne	r0, #4
 801468a:	2001      	moveq	r0, #1
 801468c:	e7c0      	b.n	8014610 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 801468e:	2004      	movs	r0, #4
 8014690:	e7be      	b.n	8014610 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8014692:	6823      	ldr	r3, [r4, #0]
 8014694:	9d02      	ldr	r5, [sp, #8]
 8014696:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014698:	4620      	mov	r0, r4
 801469a:	4798      	blx	r3
 801469c:	4228      	tst	r0, r5
 801469e:	d104      	bne.n	80146aa <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xce>
 80146a0:	4b09      	ldr	r3, [pc, #36]	; (80146c8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xec>)
 80146a2:	4a07      	ldr	r2, [pc, #28]	; (80146c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe4>)
 80146a4:	f240 11d5 	movw	r1, #469	; 0x1d5
 80146a8:	e7dc      	b.n	8014664 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x88>
 80146aa:	6860      	ldr	r0, [r4, #4]
 80146ac:	6803      	ldr	r3, [r0, #0]
 80146ae:	a902      	add	r1, sp, #8
 80146b0:	685b      	ldr	r3, [r3, #4]
 80146b2:	4798      	blx	r3
 80146b4:	b00a      	add	sp, #40	; 0x28
 80146b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80146ba:	bf00      	nop
 80146bc:	0802b9d1 	.word	0x0802b9d1
 80146c0:	0802be60 	.word	0x0802be60
 80146c4:	0802bb83 	.word	0x0802bb83
 80146c8:	0802ba09 	.word	0x0802ba09

080146cc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 80146cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80146d0:	b08b      	sub	sp, #44	; 0x2c
 80146d2:	469b      	mov	fp, r3
 80146d4:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 80146d8:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 80146dc:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 80146e0:	2fff      	cmp	r7, #255	; 0xff
 80146e2:	bf14      	ite	ne
 80146e4:	2308      	movne	r3, #8
 80146e6:	2302      	moveq	r3, #2
 80146e8:	2600      	movs	r6, #0
 80146ea:	4604      	mov	r4, r0
 80146ec:	4689      	mov	r9, r1
 80146ee:	4692      	mov	sl, r2
 80146f0:	e9cd 3602 	strd	r3, r6, [sp, #8]
 80146f4:	9605      	str	r6, [sp, #20]
 80146f6:	f7ff fe6d 	bl	80143d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80146fa:	e9cd 8500 	strd	r8, r5, [sp]
 80146fe:	4603      	mov	r3, r0
 8014700:	465a      	mov	r2, fp
 8014702:	4651      	mov	r1, sl
 8014704:	4620      	mov	r0, r4
 8014706:	f7ff ff59 	bl	80145bc <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 801470a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801470e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8014712:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8014716:	f8ad 301e 	strh.w	r3, [sp, #30]
 801471a:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 801471e:	f88d 3027 	strb.w	r3, [sp, #39]	; 0x27
 8014722:	6823      	ldr	r3, [r4, #0]
 8014724:	9006      	str	r0, [sp, #24]
 8014726:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 801472a:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 801472e:	f8ad 6020 	strh.w	r6, [sp, #32]
 8014732:	f8ad 8022 	strh.w	r8, [sp, #34]	; 0x22
 8014736:	f8cd 9014 	str.w	r9, [sp, #20]
 801473a:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 801473e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014740:	9d02      	ldr	r5, [sp, #8]
 8014742:	4620      	mov	r0, r4
 8014744:	4798      	blx	r3
 8014746:	4228      	tst	r0, r5
 8014748:	d106      	bne.n	8014758 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>
 801474a:	4b07      	ldr	r3, [pc, #28]	; (8014768 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x9c>)
 801474c:	4a07      	ldr	r2, [pc, #28]	; (801476c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa0>)
 801474e:	4808      	ldr	r0, [pc, #32]	; (8014770 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa4>)
 8014750:	f240 2137 	movw	r1, #567	; 0x237
 8014754:	f013 f814 	bl	8027780 <__assert_func>
 8014758:	6860      	ldr	r0, [r4, #4]
 801475a:	6803      	ldr	r3, [r0, #0]
 801475c:	a902      	add	r1, sp, #8
 801475e:	685b      	ldr	r3, [r3, #4]
 8014760:	4798      	blx	r3
 8014762:	b00b      	add	sp, #44	; 0x2c
 8014764:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014768:	0802ba09 	.word	0x0802ba09
 801476c:	0802bf37 	.word	0x0802bf37
 8014770:	0802bb83 	.word	0x0802bb83

08014774 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8014774:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8014778:	461f      	mov	r7, r3
 801477a:	4b0b      	ldr	r3, [pc, #44]	; (80147a8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 801477c:	460d      	mov	r5, r1
 801477e:	f8b3 8000 	ldrh.w	r8, [r3]
 8014782:	4616      	mov	r6, r2
 8014784:	4604      	mov	r4, r0
 8014786:	f7ff fc65 	bl	8014054 <_ZN8touchgfx3HAL3lcdEv>
 801478a:	6803      	ldr	r3, [r0, #0]
 801478c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801478e:	4798      	blx	r3
 8014790:	463b      	mov	r3, r7
 8014792:	e9cd 8000 	strd	r8, r0, [sp]
 8014796:	4632      	mov	r2, r6
 8014798:	4629      	mov	r1, r5
 801479a:	4620      	mov	r0, r4
 801479c:	f7ff ff0e 	bl	80145bc <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 80147a0:	b002      	add	sp, #8
 80147a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80147a6:	bf00      	nop
 80147a8:	2002bd2e 	.word	0x2002bd2e

080147ac <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 80147ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80147b0:	b088      	sub	sp, #32
 80147b2:	4698      	mov	r8, r3
 80147b4:	2300      	movs	r3, #0
 80147b6:	9303      	str	r3, [sp, #12]
 80147b8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80147bc:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 80147c0:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 80147c4:	f8ad 6014 	strh.w	r6, [sp, #20]
 80147c8:	e9cd 3100 	strd	r3, r1, [sp]
 80147cc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80147d0:	f8ad 3018 	strh.w	r3, [sp, #24]
 80147d4:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 80147d8:	f88d 301c 	strb.w	r3, [sp, #28]
 80147dc:	4617      	mov	r7, r2
 80147de:	4604      	mov	r4, r0
 80147e0:	f8ad 5016 	strh.w	r5, [sp, #22]
 80147e4:	f7ff fdf6 	bl	80143d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80147e8:	4642      	mov	r2, r8
 80147ea:	4603      	mov	r3, r0
 80147ec:	4639      	mov	r1, r7
 80147ee:	4620      	mov	r0, r4
 80147f0:	f7ff ffc0 	bl	8014774 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80147f4:	4b18      	ldr	r3, [pc, #96]	; (8014858 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xac>)
 80147f6:	9004      	str	r0, [sp, #16]
 80147f8:	881b      	ldrh	r3, [r3, #0]
 80147fa:	f8ad 301a 	strh.w	r3, [sp, #26]
 80147fe:	f7ff fc29 	bl	8014054 <_ZN8touchgfx3HAL3lcdEv>
 8014802:	6803      	ldr	r3, [r0, #0]
 8014804:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014806:	4798      	blx	r3
 8014808:	f88d 001e 	strb.w	r0, [sp, #30]
 801480c:	f88d 001d 	strb.w	r0, [sp, #29]
 8014810:	b106      	cbz	r6, 8014814 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x68>
 8014812:	b935      	cbnz	r5, 8014822 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x76>
 8014814:	4b11      	ldr	r3, [pc, #68]	; (801485c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb0>)
 8014816:	4a12      	ldr	r2, [pc, #72]	; (8014860 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb4>)
 8014818:	f240 11f1 	movw	r1, #497	; 0x1f1
 801481c:	4811      	ldr	r0, [pc, #68]	; (8014864 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 801481e:	f012 ffaf 	bl	8027780 <__assert_func>
 8014822:	6823      	ldr	r3, [r4, #0]
 8014824:	9d00      	ldr	r5, [sp, #0]
 8014826:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014828:	4620      	mov	r0, r4
 801482a:	4798      	blx	r3
 801482c:	4228      	tst	r0, r5
 801482e:	d104      	bne.n	801483a <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x8e>
 8014830:	4b0d      	ldr	r3, [pc, #52]	; (8014868 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xbc>)
 8014832:	4a0b      	ldr	r2, [pc, #44]	; (8014860 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb4>)
 8014834:	f44f 71f9 	mov.w	r1, #498	; 0x1f2
 8014838:	e7f0      	b.n	801481c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x70>
 801483a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801483c:	9303      	str	r3, [sp, #12]
 801483e:	6860      	ldr	r0, [r4, #4]
 8014840:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8014844:	f88d 301f 	strb.w	r3, [sp, #31]
 8014848:	6803      	ldr	r3, [r0, #0]
 801484a:	4669      	mov	r1, sp
 801484c:	685b      	ldr	r3, [r3, #4]
 801484e:	4798      	blx	r3
 8014850:	b008      	add	sp, #32
 8014852:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014856:	bf00      	nop
 8014858:	2002bd2e 	.word	0x2002bd2e
 801485c:	0802b9d1 	.word	0x0802b9d1
 8014860:	0802bd0c 	.word	0x0802bd0c
 8014864:	0802bb83 	.word	0x0802bb83
 8014868:	0802ba09 	.word	0x0802ba09

0801486c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 801486c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801486e:	b08b      	sub	sp, #44	; 0x2c
 8014870:	466b      	mov	r3, sp
 8014872:	e883 0006 	stmia.w	r3, {r1, r2}
 8014876:	4b21      	ldr	r3, [pc, #132]	; (80148fc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 8014878:	781b      	ldrb	r3, [r3, #0]
 801487a:	4604      	mov	r4, r0
 801487c:	b933      	cbnz	r3, 801488c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 801487e:	4b20      	ldr	r3, [pc, #128]	; (8014900 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 8014880:	4a20      	ldr	r2, [pc, #128]	; (8014904 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 8014882:	4821      	ldr	r0, [pc, #132]	; (8014908 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 8014884:	f44f 7112 	mov.w	r1, #584	; 0x248
 8014888:	f012 ff7a 	bl	8027780 <__assert_func>
 801488c:	2301      	movs	r3, #1
 801488e:	9302      	str	r3, [sp, #8]
 8014890:	6803      	ldr	r3, [r0, #0]
 8014892:	f8bd 6000 	ldrh.w	r6, [sp]
 8014896:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014898:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 801489c:	2500      	movs	r5, #0
 801489e:	9505      	str	r5, [sp, #20]
 80148a0:	4798      	blx	r3
 80148a2:	463a      	mov	r2, r7
 80148a4:	4631      	mov	r1, r6
 80148a6:	4603      	mov	r3, r0
 80148a8:	4620      	mov	r0, r4
 80148aa:	f7ff ff63 	bl	8014774 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80148ae:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80148b0:	9306      	str	r3, [sp, #24]
 80148b2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80148b6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80148ba:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80148be:	f8ad 301e 	strh.w	r3, [sp, #30]
 80148c2:	4b12      	ldr	r3, [pc, #72]	; (801490c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa0>)
 80148c4:	9003      	str	r0, [sp, #12]
 80148c6:	881b      	ldrh	r3, [r3, #0]
 80148c8:	f8ad 3020 	strh.w	r3, [sp, #32]
 80148cc:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80148d0:	f7ff fbc0 	bl	8014054 <_ZN8touchgfx3HAL3lcdEv>
 80148d4:	6803      	ldr	r3, [r0, #0]
 80148d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80148d8:	4798      	blx	r3
 80148da:	23ff      	movs	r3, #255	; 0xff
 80148dc:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 80148e0:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 80148e4:	6860      	ldr	r0, [r4, #4]
 80148e6:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80148ea:	f88d 5027 	strb.w	r5, [sp, #39]	; 0x27
 80148ee:	6803      	ldr	r3, [r0, #0]
 80148f0:	a902      	add	r1, sp, #8
 80148f2:	685b      	ldr	r3, [r3, #4]
 80148f4:	4798      	blx	r3
 80148f6:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80148f8:	b00b      	add	sp, #44	; 0x2c
 80148fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80148fc:	2002bd33 	.word	0x2002bd33
 8014900:	0802bad0 	.word	0x0802bad0
 8014904:	0802bdb6 	.word	0x0802bdb6
 8014908:	0802bb83 	.word	0x0802bb83
 801490c:	2002bd2e 	.word	0x2002bd2e

08014910 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8014910:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014914:	b08a      	sub	sp, #40	; 0x28
 8014916:	466d      	mov	r5, sp
 8014918:	e885 0006 	stmia.w	r5, {r1, r2}
 801491c:	461d      	mov	r5, r3
 801491e:	2301      	movs	r3, #1
 8014920:	9302      	str	r3, [sp, #8]
 8014922:	6803      	ldr	r3, [r0, #0]
 8014924:	f8bd 7000 	ldrh.w	r7, [sp]
 8014928:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801492a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 801492e:	2600      	movs	r6, #0
 8014930:	9605      	str	r6, [sp, #20]
 8014932:	4604      	mov	r4, r0
 8014934:	4798      	blx	r3
 8014936:	4642      	mov	r2, r8
 8014938:	4639      	mov	r1, r7
 801493a:	4603      	mov	r3, r0
 801493c:	4620      	mov	r0, r4
 801493e:	f7ff ff19 	bl	8014774 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8014942:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8014946:	f8ad 301c 	strh.w	r3, [sp, #28]
 801494a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801494e:	f8ad 301e 	strh.w	r3, [sp, #30]
 8014952:	4b10      	ldr	r3, [pc, #64]	; (8014994 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x84>)
 8014954:	9003      	str	r0, [sp, #12]
 8014956:	881b      	ldrh	r3, [r3, #0]
 8014958:	f8ad 3020 	strh.w	r3, [sp, #32]
 801495c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801495e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8014962:	9506      	str	r5, [sp, #24]
 8014964:	f7ff fb76 	bl	8014054 <_ZN8touchgfx3HAL3lcdEv>
 8014968:	6803      	ldr	r3, [r0, #0]
 801496a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801496c:	4798      	blx	r3
 801496e:	23ff      	movs	r3, #255	; 0xff
 8014970:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 8014974:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 8014978:	6860      	ldr	r0, [r4, #4]
 801497a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801497e:	f88d 6027 	strb.w	r6, [sp, #39]	; 0x27
 8014982:	6803      	ldr	r3, [r0, #0]
 8014984:	a902      	add	r1, sp, #8
 8014986:	685b      	ldr	r3, [r3, #4]
 8014988:	4798      	blx	r3
 801498a:	4628      	mov	r0, r5
 801498c:	b00a      	add	sp, #40	; 0x28
 801498e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014992:	bf00      	nop
 8014994:	2002bd2e 	.word	0x2002bd2e

08014998 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8014998:	b570      	push	{r4, r5, r6, lr}
 801499a:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 801499e:	4604      	mov	r4, r0
 80149a0:	b19b      	cbz	r3, 80149ca <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 80149a2:	2002      	movs	r0, #2
 80149a4:	f7eb ff0e 	bl	80007c4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 80149a8:	2300      	movs	r3, #0
 80149aa:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 80149ae:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 80149b2:	6823      	ldr	r3, [r4, #0]
 80149b4:	4620      	mov	r0, r4
 80149b6:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 80149ba:	f7ff fd0b 	bl	80143d4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80149be:	462b      	mov	r3, r5
 80149c0:	4601      	mov	r1, r0
 80149c2:	4620      	mov	r0, r4
 80149c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80149c8:	4718      	bx	r3
 80149ca:	bd70      	pop	{r4, r5, r6, pc}

080149cc <_ZN8touchgfx3HAL12setMCUActiveEb>:
 80149cc:	b570      	push	{r4, r5, r6, lr}
 80149ce:	4605      	mov	r5, r0
 80149d0:	460c      	mov	r4, r1
 80149d2:	2003      	movs	r0, #3
 80149d4:	b149      	cbz	r1, 80149ea <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 80149d6:	f7eb febd 	bl	8000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80149da:	6928      	ldr	r0, [r5, #16]
 80149dc:	b168      	cbz	r0, 80149fa <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 80149de:	6803      	ldr	r3, [r0, #0]
 80149e0:	695b      	ldr	r3, [r3, #20]
 80149e2:	2101      	movs	r1, #1
 80149e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80149e8:	4718      	bx	r3
 80149ea:	f7eb fecf 	bl	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 80149ee:	6928      	ldr	r0, [r5, #16]
 80149f0:	b118      	cbz	r0, 80149fa <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 80149f2:	6803      	ldr	r3, [r0, #0]
 80149f4:	4621      	mov	r1, r4
 80149f6:	695b      	ldr	r3, [r3, #20]
 80149f8:	e7f4      	b.n	80149e4 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 80149fa:	bd70      	pop	{r4, r5, r6, pc}

080149fc <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 80149fc:	4770      	bx	lr

080149fe <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 80149fe:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8014a02:	1a13      	subs	r3, r2, r0
 8014a04:	4258      	negs	r0, r3
 8014a06:	4158      	adcs	r0, r3
 8014a08:	4770      	bx	lr

08014a0a <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8014a0a:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8014a0e:	1a9b      	subs	r3, r3, r2
 8014a10:	2b00      	cmp	r3, #0
 8014a12:	bfdc      	itt	le
 8014a14:	6882      	ldrle	r2, [r0, #8]
 8014a16:	189b      	addle	r3, r3, r2
 8014a18:	2b01      	cmp	r3, #1
 8014a1a:	bfcc      	ite	gt
 8014a1c:	2000      	movgt	r0, #0
 8014a1e:	2001      	movle	r0, #1
 8014a20:	4770      	bx	lr

08014a22 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8014a22:	6902      	ldr	r2, [r0, #16]
 8014a24:	6840      	ldr	r0, [r0, #4]
 8014a26:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 8014a2a:	4770      	bx	lr

08014a2c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8014a2c:	6803      	ldr	r3, [r0, #0]
 8014a2e:	691b      	ldr	r3, [r3, #16]
 8014a30:	4718      	bx	r3

08014a32 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8014a32:	4770      	bx	lr

08014a34 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8014a34:	4770      	bx	lr

08014a36 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8014a36:	4770      	bx	lr

08014a38 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8014a38:	b570      	push	{r4, r5, r6, lr}
 8014a3a:	2301      	movs	r3, #1
 8014a3c:	7203      	strb	r3, [r0, #8]
 8014a3e:	4604      	mov	r4, r0
 8014a40:	6840      	ldr	r0, [r0, #4]
 8014a42:	6803      	ldr	r3, [r0, #0]
 8014a44:	699b      	ldr	r3, [r3, #24]
 8014a46:	4798      	blx	r3
 8014a48:	6803      	ldr	r3, [r0, #0]
 8014a4a:	2b40      	cmp	r3, #64	; 0x40
 8014a4c:	4605      	mov	r5, r0
 8014a4e:	d039      	beq.n	8014ac4 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8014a50:	d815      	bhi.n	8014a7e <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 8014a52:	2b04      	cmp	r3, #4
 8014a54:	d022      	beq.n	8014a9c <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8014a56:	d808      	bhi.n	8014a6a <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8014a58:	2b01      	cmp	r3, #1
 8014a5a:	d033      	beq.n	8014ac4 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8014a5c:	2b02      	cmp	r3, #2
 8014a5e:	d108      	bne.n	8014a72 <_ZN8touchgfx13DMA_Interface7executeEv+0x3a>
 8014a60:	6823      	ldr	r3, [r4, #0]
 8014a62:	4620      	mov	r0, r4
 8014a64:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014a66:	4798      	blx	r3
 8014a68:	e025      	b.n	8014ab6 <_ZN8touchgfx13DMA_Interface7executeEv+0x7e>
 8014a6a:	2b08      	cmp	r3, #8
 8014a6c:	d01e      	beq.n	8014aac <_ZN8touchgfx13DMA_Interface7executeEv+0x74>
 8014a6e:	2b20      	cmp	r3, #32
 8014a70:	d028      	beq.n	8014ac4 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8014a72:	4b17      	ldr	r3, [pc, #92]	; (8014ad0 <_ZN8touchgfx13DMA_Interface7executeEv+0x98>)
 8014a74:	4a17      	ldr	r2, [pc, #92]	; (8014ad4 <_ZN8touchgfx13DMA_Interface7executeEv+0x9c>)
 8014a76:	4818      	ldr	r0, [pc, #96]	; (8014ad8 <_ZN8touchgfx13DMA_Interface7executeEv+0xa0>)
 8014a78:	218b      	movs	r1, #139	; 0x8b
 8014a7a:	f012 fe81 	bl	8027780 <__assert_func>
 8014a7e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8014a82:	d01f      	beq.n	8014ac4 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8014a84:	d804      	bhi.n	8014a90 <_ZN8touchgfx13DMA_Interface7executeEv+0x58>
 8014a86:	2b80      	cmp	r3, #128	; 0x80
 8014a88:	d01c      	beq.n	8014ac4 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8014a8a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8014a8e:	e7ef      	b.n	8014a70 <_ZN8touchgfx13DMA_Interface7executeEv+0x38>
 8014a90:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8014a94:	d016      	beq.n	8014ac4 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8014a96:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8014a9a:	e7e0      	b.n	8014a5e <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8014a9c:	6823      	ldr	r3, [r4, #0]
 8014a9e:	7f01      	ldrb	r1, [r0, #28]
 8014aa0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014aa2:	4620      	mov	r0, r4
 8014aa4:	4798      	blx	r3
 8014aa6:	6823      	ldr	r3, [r4, #0]
 8014aa8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014aaa:	e006      	b.n	8014aba <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8014aac:	6823      	ldr	r3, [r4, #0]
 8014aae:	7f01      	ldrb	r1, [r0, #28]
 8014ab0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014ab2:	4620      	mov	r0, r4
 8014ab4:	4798      	blx	r3
 8014ab6:	6823      	ldr	r3, [r4, #0]
 8014ab8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8014aba:	4629      	mov	r1, r5
 8014abc:	4620      	mov	r0, r4
 8014abe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014ac2:	4718      	bx	r3
 8014ac4:	6823      	ldr	r3, [r4, #0]
 8014ac6:	4620      	mov	r0, r4
 8014ac8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014aca:	4798      	blx	r3
 8014acc:	e7eb      	b.n	8014aa6 <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 8014ace:	bf00      	nop
 8014ad0:	0802c01b 	.word	0x0802c01b
 8014ad4:	0802c0dc 	.word	0x0802c0dc
 8014ad8:	0802c040 	.word	0x0802c040

08014adc <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8014adc:	b570      	push	{r4, r5, r6, lr}
 8014ade:	4604      	mov	r4, r0
 8014ae0:	460e      	mov	r6, r1
 8014ae2:	6860      	ldr	r0, [r4, #4]
 8014ae4:	6803      	ldr	r3, [r0, #0]
 8014ae6:	685b      	ldr	r3, [r3, #4]
 8014ae8:	4798      	blx	r3
 8014aea:	2800      	cmp	r0, #0
 8014aec:	d1f9      	bne.n	8014ae2 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8014aee:	4d0d      	ldr	r5, [pc, #52]	; (8014b24 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8014af0:	6828      	ldr	r0, [r5, #0]
 8014af2:	6803      	ldr	r3, [r0, #0]
 8014af4:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8014af6:	4798      	blx	r3
 8014af8:	f7ec f8fa 	bl	8000cf0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8014afc:	6828      	ldr	r0, [r5, #0]
 8014afe:	2101      	movs	r1, #1
 8014b00:	f7ff ff7c 	bl	80149fc <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8014b04:	6860      	ldr	r0, [r4, #4]
 8014b06:	6803      	ldr	r3, [r0, #0]
 8014b08:	4631      	mov	r1, r6
 8014b0a:	689b      	ldr	r3, [r3, #8]
 8014b0c:	4798      	blx	r3
 8014b0e:	6823      	ldr	r3, [r4, #0]
 8014b10:	4620      	mov	r0, r4
 8014b12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014b14:	4798      	blx	r3
 8014b16:	6828      	ldr	r0, [r5, #0]
 8014b18:	6803      	ldr	r3, [r0, #0]
 8014b1a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014b1e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8014b20:	4718      	bx	r3
 8014b22:	bf00      	nop
 8014b24:	2002bd34 	.word	0x2002bd34

08014b28 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8014b28:	b508      	push	{r3, lr}
 8014b2a:	f7ec f8d3 	bl	8000cd4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8014b2e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8014b32:	f7ec b8d7 	b.w	8000ce4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08014b36 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8014b36:	b510      	push	{r4, lr}
 8014b38:	2114      	movs	r1, #20
 8014b3a:	4604      	mov	r4, r0
 8014b3c:	f012 fdf2 	bl	8027724 <_ZdlPvj>
 8014b40:	4620      	mov	r0, r4
 8014b42:	bd10      	pop	{r4, pc}

08014b44 <_ZN8touchgfx13DMA_Interface5startEv>:
 8014b44:	b510      	push	{r4, lr}
 8014b46:	4604      	mov	r4, r0
 8014b48:	6840      	ldr	r0, [r0, #4]
 8014b4a:	6803      	ldr	r3, [r0, #0]
 8014b4c:	681b      	ldr	r3, [r3, #0]
 8014b4e:	4798      	blx	r3
 8014b50:	b948      	cbnz	r0, 8014b66 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8014b52:	7a63      	ldrb	r3, [r4, #9]
 8014b54:	b13b      	cbz	r3, 8014b66 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8014b56:	7a23      	ldrb	r3, [r4, #8]
 8014b58:	b92b      	cbnz	r3, 8014b66 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8014b5a:	6823      	ldr	r3, [r4, #0]
 8014b5c:	4620      	mov	r0, r4
 8014b5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014b60:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014b64:	4718      	bx	r3
 8014b66:	bd10      	pop	{r4, pc}

08014b68 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8014b68:	b570      	push	{r4, r5, r6, lr}
 8014b6a:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8014b6e:	1a9b      	subs	r3, r3, r2
 8014b70:	2b00      	cmp	r3, #0
 8014b72:	4606      	mov	r6, r0
 8014b74:	bfdc      	itt	le
 8014b76:	6880      	ldrle	r0, [r0, #8]
 8014b78:	181b      	addle	r3, r3, r0
 8014b7a:	2b01      	cmp	r3, #1
 8014b7c:	dd13      	ble.n	8014ba6 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x3e>
 8014b7e:	6874      	ldr	r4, [r6, #4]
 8014b80:	460d      	mov	r5, r1
 8014b82:	eb04 1442 	add.w	r4, r4, r2, lsl #5
 8014b86:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8014b88:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8014b8a:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8014b8e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8014b92:	68f3      	ldr	r3, [r6, #12]
 8014b94:	68b2      	ldr	r2, [r6, #8]
 8014b96:	f3bf 8f5b 	dmb	ish
 8014b9a:	3301      	adds	r3, #1
 8014b9c:	429a      	cmp	r2, r3
 8014b9e:	bfd8      	it	le
 8014ba0:	1a9b      	suble	r3, r3, r2
 8014ba2:	60f3      	str	r3, [r6, #12]
 8014ba4:	bd70      	pop	{r4, r5, r6, pc}
 8014ba6:	4b03      	ldr	r3, [pc, #12]	; (8014bb4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x4c>)
 8014ba8:	4a03      	ldr	r2, [pc, #12]	; (8014bb8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x50>)
 8014baa:	4804      	ldr	r0, [pc, #16]	; (8014bbc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 8014bac:	2139      	movs	r1, #57	; 0x39
 8014bae:	f012 fde7 	bl	8027780 <__assert_func>
 8014bb2:	bf00      	nop
 8014bb4:	0802c066 	.word	0x0802c066
 8014bb8:	0802c10c 	.word	0x0802c10c
 8014bbc:	0802c040 	.word	0x0802c040

08014bc0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8014bc0:	b510      	push	{r4, lr}
 8014bc2:	6803      	ldr	r3, [r0, #0]
 8014bc4:	681b      	ldr	r3, [r3, #0]
 8014bc6:	4604      	mov	r4, r0
 8014bc8:	4798      	blx	r3
 8014bca:	b128      	cbz	r0, 8014bd8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 8014bcc:	4b07      	ldr	r3, [pc, #28]	; (8014bec <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 8014bce:	4a08      	ldr	r2, [pc, #32]	; (8014bf0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 8014bd0:	4808      	ldr	r0, [pc, #32]	; (8014bf4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 8014bd2:	213f      	movs	r1, #63	; 0x3f
 8014bd4:	f012 fdd4 	bl	8027780 <__assert_func>
 8014bd8:	6923      	ldr	r3, [r4, #16]
 8014bda:	68a2      	ldr	r2, [r4, #8]
 8014bdc:	f3bf 8f5b 	dmb	ish
 8014be0:	3301      	adds	r3, #1
 8014be2:	429a      	cmp	r2, r3
 8014be4:	bfd8      	it	le
 8014be6:	1a9b      	suble	r3, r3, r2
 8014be8:	6123      	str	r3, [r4, #16]
 8014bea:	bd10      	pop	{r4, pc}
 8014bec:	0802c089 	.word	0x0802c089
 8014bf0:	0802c15a 	.word	0x0802c15a
 8014bf4:	0802c040 	.word	0x0802c040

08014bf8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8014bf8:	b570      	push	{r4, r5, r6, lr}
 8014bfa:	4604      	mov	r4, r0
 8014bfc:	6840      	ldr	r0, [r0, #4]
 8014bfe:	6803      	ldr	r3, [r0, #0]
 8014c00:	681b      	ldr	r3, [r3, #0]
 8014c02:	4798      	blx	r3
 8014c04:	4605      	mov	r5, r0
 8014c06:	b930      	cbnz	r0, 8014c16 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8014c08:	7a23      	ldrb	r3, [r4, #8]
 8014c0a:	b123      	cbz	r3, 8014c16 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8014c0c:	6860      	ldr	r0, [r4, #4]
 8014c0e:	6803      	ldr	r3, [r0, #0]
 8014c10:	695b      	ldr	r3, [r3, #20]
 8014c12:	4798      	blx	r3
 8014c14:	7225      	strb	r5, [r4, #8]
 8014c16:	6860      	ldr	r0, [r4, #4]
 8014c18:	6803      	ldr	r3, [r0, #0]
 8014c1a:	681b      	ldr	r3, [r3, #0]
 8014c1c:	4798      	blx	r3
 8014c1e:	b928      	cbnz	r0, 8014c2c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8014c20:	6823      	ldr	r3, [r4, #0]
 8014c22:	4620      	mov	r0, r4
 8014c24:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014c26:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014c2a:	4718      	bx	r3
 8014c2c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014c30:	f7ec b866 	b.w	8000d00 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08014c34 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8014c34:	b510      	push	{r4, lr}
 8014c36:	4c04      	ldr	r4, [pc, #16]	; (8014c48 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8014c38:	6082      	str	r2, [r0, #8]
 8014c3a:	2200      	movs	r2, #0
 8014c3c:	e9c0 4100 	strd	r4, r1, [r0]
 8014c40:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8014c44:	bd10      	pop	{r4, pc}
 8014c46:	bf00      	nop
 8014c48:	0802c0c0 	.word	0x0802c0c0

08014c4c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8014c4c:	6840      	ldr	r0, [r0, #4]
 8014c4e:	6803      	ldr	r3, [r0, #0]
 8014c50:	681b      	ldr	r3, [r3, #0]
 8014c52:	4718      	bx	r3

08014c54 <_ZN8touchgfx8TextAreaD1Ev>:
 8014c54:	4770      	bx	lr
	...

08014c58 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8014c58:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8014c5a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8014c5c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8014c60:	4299      	cmp	r1, r3
 8014c62:	d029      	beq.n	8014cb8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x60>
 8014c64:	4b15      	ldr	r3, [pc, #84]	; (8014cbc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8014c66:	681b      	ldr	r3, [r3, #0]
 8014c68:	b92b      	cbnz	r3, 8014c76 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x1e>
 8014c6a:	4b15      	ldr	r3, [pc, #84]	; (8014cc0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8014c6c:	4a15      	ldr	r2, [pc, #84]	; (8014cc4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8014c6e:	21ae      	movs	r1, #174	; 0xae
 8014c70:	4815      	ldr	r0, [pc, #84]	; (8014cc8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8014c72:	f012 fd85 	bl	8027780 <__assert_func>
 8014c76:	4a15      	ldr	r2, [pc, #84]	; (8014ccc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 8014c78:	8812      	ldrh	r2, [r2, #0]
 8014c7a:	428a      	cmp	r2, r1
 8014c7c:	d803      	bhi.n	8014c86 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x2e>
 8014c7e:	4b14      	ldr	r3, [pc, #80]	; (8014cd0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 8014c80:	4a10      	ldr	r2, [pc, #64]	; (8014cc4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8014c82:	21af      	movs	r1, #175	; 0xaf
 8014c84:	e7f4      	b.n	8014c70 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x18>
 8014c86:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8014c8a:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8014c8e:	4b11      	ldr	r3, [pc, #68]	; (8014cd4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 8014c90:	7854      	ldrb	r4, [r2, #1]
 8014c92:	681b      	ldr	r3, [r3, #0]
 8014c94:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 8014c98:	682b      	ldr	r3, [r5, #0]
 8014c9a:	69de      	ldr	r6, [r3, #28]
 8014c9c:	4b0e      	ldr	r3, [pc, #56]	; (8014cd8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 8014c9e:	6818      	ldr	r0, [r3, #0]
 8014ca0:	f7f3 ffb2 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8014ca4:	f3c4 0481 	ubfx	r4, r4, #2, #2
 8014ca8:	2300      	movs	r3, #0
 8014caa:	4602      	mov	r2, r0
 8014cac:	9300      	str	r3, [sp, #0]
 8014cae:	4621      	mov	r1, r4
 8014cb0:	4628      	mov	r0, r5
 8014cb2:	47b0      	blx	r6
 8014cb4:	b002      	add	sp, #8
 8014cb6:	bd70      	pop	{r4, r5, r6, pc}
 8014cb8:	2000      	movs	r0, #0
 8014cba:	e7fb      	b.n	8014cb4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5c>
 8014cbc:	2002bd84 	.word	0x2002bd84
 8014cc0:	08029478 	.word	0x08029478
 8014cc4:	0802c204 	.word	0x0802c204
 8014cc8:	08029506 	.word	0x08029506
 8014ccc:	2002bd88 	.word	0x2002bd88
 8014cd0:	0802952f 	.word	0x0802952f
 8014cd4:	2002bd8c 	.word	0x2002bd8c
 8014cd8:	2002bd90 	.word	0x2002bd90

08014cdc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8014cdc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014ce0:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8014ce2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8014ce6:	4293      	cmp	r3, r2
 8014ce8:	b08c      	sub	sp, #48	; 0x30
 8014cea:	4604      	mov	r4, r0
 8014cec:	4688      	mov	r8, r1
 8014cee:	d05f      	beq.n	8014db0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 8014cf0:	4e31      	ldr	r6, [pc, #196]	; (8014db8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xdc>)
 8014cf2:	6832      	ldr	r2, [r6, #0]
 8014cf4:	b92a      	cbnz	r2, 8014d02 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x26>
 8014cf6:	4b31      	ldr	r3, [pc, #196]	; (8014dbc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe0>)
 8014cf8:	4a31      	ldr	r2, [pc, #196]	; (8014dc0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 8014cfa:	21ae      	movs	r1, #174	; 0xae
 8014cfc:	4831      	ldr	r0, [pc, #196]	; (8014dc4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe8>)
 8014cfe:	f012 fd3f 	bl	8027780 <__assert_func>
 8014d02:	4d31      	ldr	r5, [pc, #196]	; (8014dc8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xec>)
 8014d04:	8829      	ldrh	r1, [r5, #0]
 8014d06:	4299      	cmp	r1, r3
 8014d08:	d803      	bhi.n	8014d12 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x36>
 8014d0a:	4b30      	ldr	r3, [pc, #192]	; (8014dcc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf0>)
 8014d0c:	4a2c      	ldr	r2, [pc, #176]	; (8014dc0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 8014d0e:	21af      	movs	r1, #175	; 0xaf
 8014d10:	e7f4      	b.n	8014cfc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x20>
 8014d12:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8014d16:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8014d1a:	4b2d      	ldr	r3, [pc, #180]	; (8014dd0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf4>)
 8014d1c:	681b      	ldr	r3, [r3, #0]
 8014d1e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8014d22:	2a00      	cmp	r2, #0
 8014d24:	d044      	beq.n	8014db0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 8014d26:	784b      	ldrb	r3, [r1, #1]
 8014d28:	9207      	str	r2, [sp, #28]
 8014d2a:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 8014d2e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8014d32:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8014d36:	4b27      	ldr	r3, [pc, #156]	; (8014dd4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf8>)
 8014d38:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 8014d3c:	681b      	ldr	r3, [r3, #0]
 8014d3e:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 8014d42:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8014d46:	f890 9038 	ldrb.w	r9, [r0, #56]	; 0x38
 8014d4a:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 8014d4e:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 8014d52:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8014d54:	f88d a020 	strb.w	sl, [sp, #32]
 8014d58:	f88d 9022 	strb.w	r9, [sp, #34]	; 0x22
 8014d5c:	9009      	str	r0, [sp, #36]	; 0x24
 8014d5e:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 8014d62:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 8014d66:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 8014d6a:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 8014d6e:	b10a      	cbz	r2, 8014d74 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x98>
 8014d70:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 8014d72:	b907      	cbnz	r7, 8014d76 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x9a>
 8014d74:	689f      	ldr	r7, [r3, #8]
 8014d76:	f10d 0914 	add.w	r9, sp, #20
 8014d7a:	4621      	mov	r1, r4
 8014d7c:	4648      	mov	r0, r9
 8014d7e:	f003 fd3d 	bl	80187fc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014d82:	6833      	ldr	r3, [r6, #0]
 8014d84:	2b00      	cmp	r3, #0
 8014d86:	d0b6      	beq.n	8014cf6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x1a>
 8014d88:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8014d8a:	882b      	ldrh	r3, [r5, #0]
 8014d8c:	428b      	cmp	r3, r1
 8014d8e:	d9bc      	bls.n	8014d0a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 8014d90:	4b11      	ldr	r3, [pc, #68]	; (8014dd8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xfc>)
 8014d92:	6818      	ldr	r0, [r3, #0]
 8014d94:	f7f3 ff38 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8014d98:	2300      	movs	r3, #0
 8014d9a:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8014d9e:	ab07      	add	r3, sp, #28
 8014da0:	9001      	str	r0, [sp, #4]
 8014da2:	9300      	str	r3, [sp, #0]
 8014da4:	e899 0006 	ldmia.w	r9, {r1, r2}
 8014da8:	4643      	mov	r3, r8
 8014daa:	4638      	mov	r0, r7
 8014dac:	f7f3 fedf 	bl	8008b6e <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8014db0:	b00c      	add	sp, #48	; 0x30
 8014db2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014db6:	bf00      	nop
 8014db8:	2002bd84 	.word	0x2002bd84
 8014dbc:	08029478 	.word	0x08029478
 8014dc0:	0802c204 	.word	0x0802c204
 8014dc4:	08029506 	.word	0x08029506
 8014dc8:	2002bd88 	.word	0x2002bd88
 8014dcc:	0802952f 	.word	0x0802952f
 8014dd0:	2002bd8c 	.word	0x2002bd8c
 8014dd4:	2002bd34 	.word	0x2002bd34
 8014dd8:	2002bd90 	.word	0x2002bd90

08014ddc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8014ddc:	b40e      	push	{r1, r2, r3}
 8014dde:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014de2:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8014de4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8014de8:	4293      	cmp	r3, r2
 8014dea:	b09c      	sub	sp, #112	; 0x70
 8014dec:	4604      	mov	r4, r0
 8014dee:	d06b      	beq.n	8014ec8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>
 8014df0:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 8014edc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x100>
 8014df4:	aa26      	add	r2, sp, #152	; 0x98
 8014df6:	9202      	str	r2, [sp, #8]
 8014df8:	f8da 2000 	ldr.w	r2, [sl]
 8014dfc:	b92a      	cbnz	r2, 8014e0a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2e>
 8014dfe:	4b33      	ldr	r3, [pc, #204]	; (8014ecc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>)
 8014e00:	4a33      	ldr	r2, [pc, #204]	; (8014ed0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>)
 8014e02:	21ae      	movs	r1, #174	; 0xae
 8014e04:	4833      	ldr	r0, [pc, #204]	; (8014ed4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf8>)
 8014e06:	f012 fcbb 	bl	8027780 <__assert_func>
 8014e0a:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8014ee0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x104>
 8014e0e:	f8b8 1000 	ldrh.w	r1, [r8]
 8014e12:	4299      	cmp	r1, r3
 8014e14:	d803      	bhi.n	8014e1e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x42>
 8014e16:	4b30      	ldr	r3, [pc, #192]	; (8014ed8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xfc>)
 8014e18:	4a2d      	ldr	r2, [pc, #180]	; (8014ed0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>)
 8014e1a:	21af      	movs	r1, #175	; 0xaf
 8014e1c:	e7f2      	b.n	8014e04 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x28>
 8014e1e:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 8014ee4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x108>
 8014e22:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8014e26:	f8d9 3000 	ldr.w	r3, [r9]
 8014e2a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8014e2e:	682b      	ldr	r3, [r5, #0]
 8014e30:	4628      	mov	r0, r5
 8014e32:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014e34:	4798      	blx	r3
 8014e36:	4606      	mov	r6, r0
 8014e38:	b207      	sxth	r7, r0
 8014e3a:	a803      	add	r0, sp, #12
 8014e3c:	f004 f957 	bl	80190ee <_ZN8touchgfx12TextProviderC1Ev>
 8014e40:	682b      	ldr	r3, [r5, #0]
 8014e42:	4628      	mov	r0, r5
 8014e44:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014e46:	4798      	blx	r3
 8014e48:	682b      	ldr	r3, [r5, #0]
 8014e4a:	4683      	mov	fp, r0
 8014e4c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8014e4e:	4628      	mov	r0, r5
 8014e50:	4798      	blx	r3
 8014e52:	465b      	mov	r3, fp
 8014e54:	9000      	str	r0, [sp, #0]
 8014e56:	9925      	ldr	r1, [sp, #148]	; 0x94
 8014e58:	9a02      	ldr	r2, [sp, #8]
 8014e5a:	a803      	add	r0, sp, #12
 8014e5c:	f004 f9b2 	bl	80191c4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014e60:	f8da 3000 	ldr.w	r3, [sl]
 8014e64:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8014e68:	2b00      	cmp	r3, #0
 8014e6a:	d0c8      	beq.n	8014dfe <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x22>
 8014e6c:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8014e6e:	f8b8 0000 	ldrh.w	r0, [r8]
 8014e72:	4290      	cmp	r0, r2
 8014e74:	d9cf      	bls.n	8014e16 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x3a>
 8014e76:	eb03 0542 	add.w	r5, r3, r2, lsl #1
 8014e7a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8014e7e:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8014e82:	786a      	ldrb	r2, [r5, #1]
 8014e84:	8925      	ldrh	r5, [r4, #8]
 8014e86:	f8d9 3000 	ldr.w	r3, [r9]
 8014e8a:	eba5 050c 	sub.w	r5, r5, ip
 8014e8e:	b22d      	sxth	r5, r5
 8014e90:	9500      	str	r5, [sp, #0]
 8014e92:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8014e96:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8014e9a:	a803      	add	r0, sp, #12
 8014e9c:	f001 ff9b 	bl	8016dd6 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8014ea0:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8014ea4:	18b9      	adds	r1, r7, r2
 8014ea6:	2900      	cmp	r1, #0
 8014ea8:	b203      	sxth	r3, r0
 8014eaa:	dd0b      	ble.n	8014ec4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>
 8014eac:	3b01      	subs	r3, #1
 8014eae:	fb13 f302 	smulbb	r3, r3, r2
 8014eb2:	fb16 3300 	smlabb	r3, r6, r0, r3
 8014eb6:	b21f      	sxth	r7, r3
 8014eb8:	4638      	mov	r0, r7
 8014eba:	b01c      	add	sp, #112	; 0x70
 8014ebc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ec0:	b003      	add	sp, #12
 8014ec2:	4770      	bx	lr
 8014ec4:	2b00      	cmp	r3, #0
 8014ec6:	dcf7      	bgt.n	8014eb8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xdc>
 8014ec8:	2700      	movs	r7, #0
 8014eca:	e7f5      	b.n	8014eb8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xdc>
 8014ecc:	08029478 	.word	0x08029478
 8014ed0:	0802c204 	.word	0x0802c204
 8014ed4:	08029506 	.word	0x08029506
 8014ed8:	0802952f 	.word	0x0802952f
 8014edc:	2002bd84 	.word	0x2002bd84
 8014ee0:	2002bd88 	.word	0x2002bd88
 8014ee4:	2002bd8c 	.word	0x2002bd8c

08014ee8 <_ZN8touchgfx8TextAreaD0Ev>:
 8014ee8:	b510      	push	{r4, lr}
 8014eea:	213c      	movs	r1, #60	; 0x3c
 8014eec:	4604      	mov	r4, r0
 8014eee:	f012 fc19 	bl	8027724 <_ZdlPvj>
 8014ef2:	4620      	mov	r0, r4
 8014ef4:	bd10      	pop	{r4, pc}
	...

08014ef8 <_ZN8touchgfx8TextArea13getTextHeightEv>:
 8014ef8:	b570      	push	{r4, r5, r6, lr}
 8014efa:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8014efc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8014f00:	4299      	cmp	r1, r3
 8014f02:	4604      	mov	r4, r0
 8014f04:	d01e      	beq.n	8014f44 <_ZN8touchgfx8TextArea13getTextHeightEv+0x4c>
 8014f06:	6803      	ldr	r3, [r0, #0]
 8014f08:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 8014f0a:	4b0f      	ldr	r3, [pc, #60]	; (8014f48 <_ZN8touchgfx8TextArea13getTextHeightEv+0x50>)
 8014f0c:	681b      	ldr	r3, [r3, #0]
 8014f0e:	b92b      	cbnz	r3, 8014f1c <_ZN8touchgfx8TextArea13getTextHeightEv+0x24>
 8014f10:	4b0e      	ldr	r3, [pc, #56]	; (8014f4c <_ZN8touchgfx8TextArea13getTextHeightEv+0x54>)
 8014f12:	4a0f      	ldr	r2, [pc, #60]	; (8014f50 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 8014f14:	21ae      	movs	r1, #174	; 0xae
 8014f16:	480f      	ldr	r0, [pc, #60]	; (8014f54 <_ZN8touchgfx8TextArea13getTextHeightEv+0x5c>)
 8014f18:	f012 fc32 	bl	8027780 <__assert_func>
 8014f1c:	4b0e      	ldr	r3, [pc, #56]	; (8014f58 <_ZN8touchgfx8TextArea13getTextHeightEv+0x60>)
 8014f1e:	881b      	ldrh	r3, [r3, #0]
 8014f20:	428b      	cmp	r3, r1
 8014f22:	d803      	bhi.n	8014f2c <_ZN8touchgfx8TextArea13getTextHeightEv+0x34>
 8014f24:	4b0d      	ldr	r3, [pc, #52]	; (8014f5c <_ZN8touchgfx8TextArea13getTextHeightEv+0x64>)
 8014f26:	4a0a      	ldr	r2, [pc, #40]	; (8014f50 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 8014f28:	21af      	movs	r1, #175	; 0xaf
 8014f2a:	e7f4      	b.n	8014f16 <_ZN8touchgfx8TextArea13getTextHeightEv+0x1e>
 8014f2c:	4b0c      	ldr	r3, [pc, #48]	; (8014f60 <_ZN8touchgfx8TextArea13getTextHeightEv+0x68>)
 8014f2e:	6818      	ldr	r0, [r3, #0]
 8014f30:	f7f3 fe6a 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8014f34:	2300      	movs	r3, #0
 8014f36:	4601      	mov	r1, r0
 8014f38:	46ac      	mov	ip, r5
 8014f3a:	4620      	mov	r0, r4
 8014f3c:	461a      	mov	r2, r3
 8014f3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014f42:	4760      	bx	ip
 8014f44:	2000      	movs	r0, #0
 8014f46:	bd70      	pop	{r4, r5, r6, pc}
 8014f48:	2002bd84 	.word	0x2002bd84
 8014f4c:	08029478 	.word	0x08029478
 8014f50:	0802c204 	.word	0x0802c204
 8014f54:	08029506 	.word	0x08029506
 8014f58:	2002bd88 	.word	0x2002bd88
 8014f5c:	0802952f 	.word	0x0802952f
 8014f60:	2002bd90 	.word	0x2002bd90

08014f64 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8014f64:	b538      	push	{r3, r4, r5, lr}
 8014f66:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8014f68:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8014f6c:	429a      	cmp	r2, r3
 8014f6e:	4604      	mov	r4, r0
 8014f70:	d014      	beq.n	8014f9c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8014f72:	6803      	ldr	r3, [r0, #0]
 8014f74:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8014f76:	4798      	blx	r3
 8014f78:	6823      	ldr	r3, [r4, #0]
 8014f7a:	4605      	mov	r5, r0
 8014f7c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8014f7e:	4620      	mov	r0, r4
 8014f80:	4798      	blx	r3
 8014f82:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8014f86:	b22d      	sxth	r5, r5
 8014f88:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8014f8c:	4601      	mov	r1, r0
 8014f8e:	bf06      	itte	eq
 8014f90:	4602      	moveq	r2, r0
 8014f92:	4629      	moveq	r1, r5
 8014f94:	462a      	movne	r2, r5
 8014f96:	4620      	mov	r0, r4
 8014f98:	f7ed f923 	bl	80021e2 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8014f9c:	bd38      	pop	{r3, r4, r5, pc}

08014f9e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8014f9e:	888a      	ldrh	r2, [r1, #4]
 8014fa0:	8582      	strh	r2, [r0, #44]	; 0x2c
 8014fa2:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 8014fa6:	b922      	cbnz	r2, 8014fb2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x14>
 8014fa8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8014fac:	b90b      	cbnz	r3, 8014fb2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x14>
 8014fae:	f7ff bfd9 	b.w	8014f64 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8014fb2:	4770      	bx	lr

08014fb4 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8014fb4:	2300      	movs	r3, #0
 8014fb6:	8083      	strh	r3, [r0, #4]
 8014fb8:	80c3      	strh	r3, [r0, #6]
 8014fba:	8003      	strh	r3, [r0, #0]
 8014fbc:	8043      	strh	r3, [r0, #2]
 8014fbe:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8014fc2:	2bff      	cmp	r3, #255	; 0xff
 8014fc4:	bf01      	itttt	eq
 8014fc6:	890b      	ldrheq	r3, [r1, #8]
 8014fc8:	8083      	strheq	r3, [r0, #4]
 8014fca:	894b      	ldrheq	r3, [r1, #10]
 8014fcc:	80c3      	strheq	r3, [r0, #6]
 8014fce:	4770      	bx	lr

08014fd0 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8014fd0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014fd2:	4604      	mov	r4, r0
 8014fd4:	6808      	ldr	r0, [r1, #0]
 8014fd6:	6849      	ldr	r1, [r1, #4]
 8014fd8:	466b      	mov	r3, sp
 8014fda:	c303      	stmia	r3!, {r0, r1}
 8014fdc:	6823      	ldr	r3, [r4, #0]
 8014fde:	4669      	mov	r1, sp
 8014fe0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014fe2:	4620      	mov	r0, r4
 8014fe4:	4798      	blx	r3
 8014fe6:	4b08      	ldr	r3, [pc, #32]	; (8015008 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8014fe8:	681b      	ldr	r3, [r3, #0]
 8014fea:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8014fee:	b10a      	cbz	r2, 8014ff4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8014ff0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8014ff2:	b900      	cbnz	r0, 8014ff6 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8014ff4:	6898      	ldr	r0, [r3, #8]
 8014ff6:	6803      	ldr	r3, [r0, #0]
 8014ff8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8014ffa:	699d      	ldr	r5, [r3, #24]
 8014ffc:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8015000:	4669      	mov	r1, sp
 8015002:	47a8      	blx	r5
 8015004:	b003      	add	sp, #12
 8015006:	bd30      	pop	{r4, r5, pc}
 8015008:	2002bd34 	.word	0x2002bd34

0801500c <_ZN8touchgfx3BoxD1Ev>:
 801500c:	4770      	bx	lr

0801500e <_ZN8touchgfx3BoxD0Ev>:
 801500e:	b510      	push	{r4, lr}
 8015010:	212c      	movs	r1, #44	; 0x2c
 8015012:	4604      	mov	r4, r0
 8015014:	f012 fb86 	bl	8027724 <_ZdlPvj>
 8015018:	4620      	mov	r0, r4
 801501a:	bd10      	pop	{r4, pc}

0801501c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 801501c:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8015020:	4770      	bx	lr

08015022 <_ZN8touchgfx6ButtonD1Ev>:
 8015022:	4770      	bx	lr

08015024 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8015024:	b570      	push	{r4, r5, r6, lr}
 8015026:	880b      	ldrh	r3, [r1, #0]
 8015028:	85c3      	strh	r3, [r0, #46]	; 0x2e
 801502a:	4605      	mov	r5, r0
 801502c:	8813      	ldrh	r3, [r2, #0]
 801502e:	f825 3f30 	strh.w	r3, [r5, #48]!
 8015032:	4604      	mov	r4, r0
 8015034:	4628      	mov	r0, r5
 8015036:	f006 fb19 	bl	801b66c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801503a:	4606      	mov	r6, r0
 801503c:	4628      	mov	r0, r5
 801503e:	f006 fb4f 	bl	801b6e0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015042:	6823      	ldr	r3, [r4, #0]
 8015044:	4605      	mov	r5, r0
 8015046:	b231      	sxth	r1, r6
 8015048:	4620      	mov	r0, r4
 801504a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801504c:	4798      	blx	r3
 801504e:	6823      	ldr	r3, [r4, #0]
 8015050:	b229      	sxth	r1, r5
 8015052:	4620      	mov	r0, r4
 8015054:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015056:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801505a:	4718      	bx	r3

0801505c <_ZN8touchgfx6ButtonD0Ev>:
 801505c:	b510      	push	{r4, lr}
 801505e:	2134      	movs	r1, #52	; 0x34
 8015060:	4604      	mov	r4, r0
 8015062:	f012 fb5f 	bl	8027724 <_ZdlPvj>
 8015066:	4620      	mov	r0, r4
 8015068:	bd10      	pop	{r4, pc}

0801506a <_ZN8touchgfx14AbstractButton13executeActionEv>:
 801506a:	b510      	push	{r4, lr}
 801506c:	4604      	mov	r4, r0
 801506e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8015070:	b150      	cbz	r0, 8015088 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8015072:	6803      	ldr	r3, [r0, #0]
 8015074:	68db      	ldr	r3, [r3, #12]
 8015076:	4798      	blx	r3
 8015078:	b130      	cbz	r0, 8015088 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 801507a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801507c:	6803      	ldr	r3, [r0, #0]
 801507e:	4621      	mov	r1, r4
 8015080:	689b      	ldr	r3, [r3, #8]
 8015082:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015086:	4718      	bx	r3
 8015088:	bd10      	pop	{r4, pc}

0801508a <_ZNK8touchgfx6Button12getSolidRectEv>:
 801508a:	b510      	push	{r4, lr}
 801508c:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8015090:	2bff      	cmp	r3, #255	; 0xff
 8015092:	4604      	mov	r4, r0
 8015094:	d006      	beq.n	80150a4 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8015096:	2300      	movs	r3, #0
 8015098:	8003      	strh	r3, [r0, #0]
 801509a:	8043      	strh	r3, [r0, #2]
 801509c:	8083      	strh	r3, [r0, #4]
 801509e:	80c3      	strh	r3, [r0, #6]
 80150a0:	4620      	mov	r0, r4
 80150a2:	bd10      	pop	{r4, pc}
 80150a4:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 80150a8:	b11b      	cbz	r3, 80150b2 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 80150aa:	3130      	adds	r1, #48	; 0x30
 80150ac:	f006 fb52 	bl	801b754 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80150b0:	e7f6      	b.n	80150a0 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 80150b2:	312e      	adds	r1, #46	; 0x2e
 80150b4:	e7fa      	b.n	80150ac <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

080150b8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 80150b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80150bc:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80150c0:	b08a      	sub	sp, #40	; 0x28
 80150c2:	4604      	mov	r4, r0
 80150c4:	4688      	mov	r8, r1
 80150c6:	2b00      	cmp	r3, #0
 80150c8:	d044      	beq.n	8015154 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
 80150ca:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80150cc:	f8ad 3014 	strh.w	r3, [sp, #20]
 80150d0:	a805      	add	r0, sp, #20
 80150d2:	f006 facb 	bl	801b66c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80150d6:	4605      	mov	r5, r0
 80150d8:	b206      	sxth	r6, r0
 80150da:	a805      	add	r0, sp, #20
 80150dc:	f006 fb00 	bl	801b6e0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80150e0:	f9b8 2000 	ldrsh.w	r2, [r8]
 80150e4:	f8b8 7004 	ldrh.w	r7, [r8, #4]
 80150e8:	4417      	add	r7, r2
 80150ea:	b2bf      	uxth	r7, r7
 80150ec:	2300      	movs	r3, #0
 80150ee:	fa0f fe87 	sxth.w	lr, r7
 80150f2:	459e      	cmp	lr, r3
 80150f4:	fa0f fc80 	sxth.w	ip, r0
 80150f8:	9306      	str	r3, [sp, #24]
 80150fa:	dd2d      	ble.n	8015158 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 80150fc:	4296      	cmp	r6, r2
 80150fe:	dd2b      	ble.n	8015158 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 8015100:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
 8015104:	f8b8 1006 	ldrh.w	r1, [r8, #6]
 8015108:	4419      	add	r1, r3
 801510a:	b289      	uxth	r1, r1
 801510c:	fa0f f881 	sxth.w	r8, r1
 8015110:	f1b8 0f00 	cmp.w	r8, #0
 8015114:	dd20      	ble.n	8015158 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 8015116:	459c      	cmp	ip, r3
 8015118:	dd1e      	ble.n	8015158 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 801511a:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 801511e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015122:	4576      	cmp	r6, lr
 8015124:	bfa8      	it	ge
 8015126:	463d      	movge	r5, r7
 8015128:	45c4      	cmp	ip, r8
 801512a:	bfa8      	it	ge
 801512c:	4608      	movge	r0, r1
 801512e:	1aad      	subs	r5, r5, r2
 8015130:	1ac0      	subs	r0, r0, r3
 8015132:	f8ad 501c 	strh.w	r5, [sp, #28]
 8015136:	f8ad 001e 	strh.w	r0, [sp, #30]
 801513a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801513e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8015142:	4b1f      	ldr	r3, [pc, #124]	; (80151c0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 8015144:	681b      	ldr	r3, [r3, #0]
 8015146:	b953      	cbnz	r3, 801515e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
 8015148:	4b1e      	ldr	r3, [pc, #120]	; (80151c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 801514a:	4a1f      	ldr	r2, [pc, #124]	; (80151c8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 801514c:	481f      	ldr	r0, [pc, #124]	; (80151cc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
 801514e:	2187      	movs	r1, #135	; 0x87
 8015150:	f012 fb16 	bl	8027780 <__assert_func>
 8015154:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8015156:	e7b9      	b.n	80150cc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8015158:	2300      	movs	r3, #0
 801515a:	9307      	str	r3, [sp, #28]
 801515c:	e7f1      	b.n	8015142 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
 801515e:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8015162:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015166:	429a      	cmp	r2, r3
 8015168:	d026      	beq.n	80151b8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 801516a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801516e:	2b00      	cmp	r3, #0
 8015170:	dd22      	ble.n	80151b8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 8015172:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8015176:	2b00      	cmp	r3, #0
 8015178:	dd1e      	ble.n	80151b8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 801517a:	2300      	movs	r3, #0
 801517c:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8015180:	6823      	ldr	r3, [r4, #0]
 8015182:	a908      	add	r1, sp, #32
 8015184:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015186:	4620      	mov	r0, r4
 8015188:	4798      	blx	r3
 801518a:	4b11      	ldr	r3, [pc, #68]	; (80151d0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
 801518c:	681b      	ldr	r3, [r3, #0]
 801518e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8015192:	b10a      	cbz	r2, 8015198 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8015194:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8015196:	b900      	cbnz	r0, 801519a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
 8015198:	6898      	ldr	r0, [r3, #8]
 801519a:	6801      	ldr	r1, [r0, #0]
 801519c:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80151a0:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80151a4:	2501      	movs	r5, #1
 80151a6:	9502      	str	r5, [sp, #8]
 80151a8:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 80151ac:	9401      	str	r4, [sp, #4]
 80151ae:	ac06      	add	r4, sp, #24
 80151b0:	9400      	str	r4, [sp, #0]
 80151b2:	688c      	ldr	r4, [r1, #8]
 80151b4:	a905      	add	r1, sp, #20
 80151b6:	47a0      	blx	r4
 80151b8:	b00a      	add	sp, #40	; 0x28
 80151ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80151be:	bf00      	nop
 80151c0:	2002bdbc 	.word	0x2002bdbc
 80151c4:	0802c298 	.word	0x0802c298
 80151c8:	0802c36c 	.word	0x0802c36c
 80151cc:	0802c2d4 	.word	0x0802c2d4
 80151d0:	2002bd34 	.word	0x2002bd34

080151d4 <_ZN8touchgfx24TextAreaWithTwoWildcardsD1Ev>:
 80151d4:	4770      	bx	lr

080151d6 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
 80151d6:	4770      	bx	lr

080151d8 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv>:
 80151d8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80151da:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80151dc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80151e0:	4299      	cmp	r1, r3
 80151e2:	4605      	mov	r5, r0
 80151e4:	d02a      	beq.n	801523c <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x64>
 80151e6:	4b16      	ldr	r3, [pc, #88]	; (8015240 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x68>)
 80151e8:	681b      	ldr	r3, [r3, #0]
 80151ea:	b92b      	cbnz	r3, 80151f8 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x20>
 80151ec:	4b15      	ldr	r3, [pc, #84]	; (8015244 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x6c>)
 80151ee:	4a16      	ldr	r2, [pc, #88]	; (8015248 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x70>)
 80151f0:	21ae      	movs	r1, #174	; 0xae
 80151f2:	4816      	ldr	r0, [pc, #88]	; (801524c <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x74>)
 80151f4:	f012 fac4 	bl	8027780 <__assert_func>
 80151f8:	4a15      	ldr	r2, [pc, #84]	; (8015250 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x78>)
 80151fa:	8812      	ldrh	r2, [r2, #0]
 80151fc:	428a      	cmp	r2, r1
 80151fe:	d803      	bhi.n	8015208 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x30>
 8015200:	4b14      	ldr	r3, [pc, #80]	; (8015254 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x7c>)
 8015202:	4a11      	ldr	r2, [pc, #68]	; (8015248 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x70>)
 8015204:	21af      	movs	r1, #175	; 0xaf
 8015206:	e7f4      	b.n	80151f2 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x1a>
 8015208:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 801520c:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8015210:	4b11      	ldr	r3, [pc, #68]	; (8015258 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x80>)
 8015212:	7854      	ldrb	r4, [r2, #1]
 8015214:	681b      	ldr	r3, [r3, #0]
 8015216:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 801521a:	6833      	ldr	r3, [r6, #0]
 801521c:	69df      	ldr	r7, [r3, #28]
 801521e:	4b0f      	ldr	r3, [pc, #60]	; (801525c <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x84>)
 8015220:	6818      	ldr	r0, [r3, #0]
 8015222:	f7f3 fcf1 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8015226:	f3c4 0481 	ubfx	r4, r4, #2, #2
 801522a:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 801522c:	9300      	str	r3, [sp, #0]
 801522e:	4602      	mov	r2, r0
 8015230:	6beb      	ldr	r3, [r5, #60]	; 0x3c
 8015232:	4621      	mov	r1, r4
 8015234:	4630      	mov	r0, r6
 8015236:	47b8      	blx	r7
 8015238:	b003      	add	sp, #12
 801523a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801523c:	2000      	movs	r0, #0
 801523e:	e7fb      	b.n	8015238 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x60>
 8015240:	2002bd84 	.word	0x2002bd84
 8015244:	08029478 	.word	0x08029478
 8015248:	0802c490 	.word	0x0802c490
 801524c:	08029506 	.word	0x08029506
 8015250:	2002bd88 	.word	0x2002bd88
 8015254:	0802952f 	.word	0x0802952f
 8015258:	2002bd8c 	.word	0x2002bd8c
 801525c:	2002bd90 	.word	0x2002bd90

08015260 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv>:
 8015260:	b570      	push	{r4, r5, r6, lr}
 8015262:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8015264:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015268:	4299      	cmp	r1, r3
 801526a:	4604      	mov	r4, r0
 801526c:	d01e      	beq.n	80152ac <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x4c>
 801526e:	6803      	ldr	r3, [r0, #0]
 8015270:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 8015272:	4b0f      	ldr	r3, [pc, #60]	; (80152b0 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x50>)
 8015274:	681b      	ldr	r3, [r3, #0]
 8015276:	b92b      	cbnz	r3, 8015284 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x24>
 8015278:	4b0e      	ldr	r3, [pc, #56]	; (80152b4 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x54>)
 801527a:	4a0f      	ldr	r2, [pc, #60]	; (80152b8 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x58>)
 801527c:	21ae      	movs	r1, #174	; 0xae
 801527e:	480f      	ldr	r0, [pc, #60]	; (80152bc <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x5c>)
 8015280:	f012 fa7e 	bl	8027780 <__assert_func>
 8015284:	4b0e      	ldr	r3, [pc, #56]	; (80152c0 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x60>)
 8015286:	881b      	ldrh	r3, [r3, #0]
 8015288:	428b      	cmp	r3, r1
 801528a:	d803      	bhi.n	8015294 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x34>
 801528c:	4b0d      	ldr	r3, [pc, #52]	; (80152c4 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x64>)
 801528e:	4a0a      	ldr	r2, [pc, #40]	; (80152b8 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x58>)
 8015290:	21af      	movs	r1, #175	; 0xaf
 8015292:	e7f4      	b.n	801527e <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x1e>
 8015294:	4b0c      	ldr	r3, [pc, #48]	; (80152c8 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x68>)
 8015296:	6818      	ldr	r0, [r3, #0]
 8015298:	f7f3 fcb6 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 801529c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 80152a0:	4601      	mov	r1, r0
 80152a2:	46ac      	mov	ip, r5
 80152a4:	4620      	mov	r0, r4
 80152a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80152aa:	4760      	bx	ip
 80152ac:	2000      	movs	r0, #0
 80152ae:	bd70      	pop	{r4, r5, r6, pc}
 80152b0:	2002bd84 	.word	0x2002bd84
 80152b4:	08029478 	.word	0x08029478
 80152b8:	0802c490 	.word	0x0802c490
 80152bc:	08029506 	.word	0x08029506
 80152c0:	2002bd88 	.word	0x2002bd88
 80152c4:	0802952f 	.word	0x0802952f
 80152c8:	2002bd90 	.word	0x2002bd90

080152cc <_ZN8touchgfx24TextAreaWithTwoWildcardsD0Ev>:
 80152cc:	b510      	push	{r4, lr}
 80152ce:	2144      	movs	r1, #68	; 0x44
 80152d0:	4604      	mov	r4, r0
 80152d2:	f012 fa27 	bl	8027724 <_ZdlPvj>
 80152d6:	4620      	mov	r0, r4
 80152d8:	bd10      	pop	{r4, pc}

080152da <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 80152da:	b510      	push	{r4, lr}
 80152dc:	2140      	movs	r1, #64	; 0x40
 80152de:	4604      	mov	r4, r0
 80152e0:	f012 fa20 	bl	8027724 <_ZdlPvj>
 80152e4:	4620      	mov	r0, r4
 80152e6:	bd10      	pop	{r4, pc}

080152e8 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE>:
 80152e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80152ec:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 80152ee:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80152f2:	4293      	cmp	r3, r2
 80152f4:	b08c      	sub	sp, #48	; 0x30
 80152f6:	4604      	mov	r4, r0
 80152f8:	460e      	mov	r6, r1
 80152fa:	d05d      	beq.n	80153b8 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 80152fc:	f8df 80dc 	ldr.w	r8, [pc, #220]	; 80153dc <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf4>
 8015300:	f8d8 2000 	ldr.w	r2, [r8]
 8015304:	b92a      	cbnz	r2, 8015312 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x2a>
 8015306:	4b2e      	ldr	r3, [pc, #184]	; (80153c0 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd8>)
 8015308:	4a2e      	ldr	r2, [pc, #184]	; (80153c4 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 801530a:	21ae      	movs	r1, #174	; 0xae
 801530c:	482e      	ldr	r0, [pc, #184]	; (80153c8 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe0>)
 801530e:	f012 fa37 	bl	8027780 <__assert_func>
 8015312:	4f2e      	ldr	r7, [pc, #184]	; (80153cc <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe4>)
 8015314:	8839      	ldrh	r1, [r7, #0]
 8015316:	4299      	cmp	r1, r3
 8015318:	d803      	bhi.n	8015322 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x3a>
 801531a:	4b2d      	ldr	r3, [pc, #180]	; (80153d0 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe8>)
 801531c:	4a29      	ldr	r2, [pc, #164]	; (80153c4 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 801531e:	21af      	movs	r1, #175	; 0xaf
 8015320:	e7f4      	b.n	801530c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x24>
 8015322:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8015326:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801532a:	4b2a      	ldr	r3, [pc, #168]	; (80153d4 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xec>)
 801532c:	681b      	ldr	r3, [r3, #0]
 801532e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8015332:	2a00      	cmp	r2, #0
 8015334:	d040      	beq.n	80153b8 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 8015336:	784b      	ldrb	r3, [r1, #1]
 8015338:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 801533c:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 8015340:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 8015344:	f890 9038 	ldrb.w	r9, [r0, #56]	; 0x38
 8015348:	f890 5037 	ldrb.w	r5, [r0, #55]	; 0x37
 801534c:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801534e:	9207      	str	r2, [sp, #28]
 8015350:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 8015354:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8015358:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 801535c:	f88d 9022 	strb.w	r9, [sp, #34]	; 0x22
 8015360:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 8015364:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 8015368:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 801536c:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 8015370:	f88d a020 	strb.w	sl, [sp, #32]
 8015374:	9009      	str	r0, [sp, #36]	; 0x24
 8015376:	f7fe fe6d 	bl	8014054 <_ZN8touchgfx3HAL3lcdEv>
 801537a:	ad05      	add	r5, sp, #20
 801537c:	4681      	mov	r9, r0
 801537e:	4621      	mov	r1, r4
 8015380:	4628      	mov	r0, r5
 8015382:	f003 fa3b 	bl	80187fc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015386:	f8d8 3000 	ldr.w	r3, [r8]
 801538a:	2b00      	cmp	r3, #0
 801538c:	d0bb      	beq.n	8015306 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x1e>
 801538e:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8015390:	883b      	ldrh	r3, [r7, #0]
 8015392:	428b      	cmp	r3, r1
 8015394:	d9c1      	bls.n	801531a <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x32>
 8015396:	4b10      	ldr	r3, [pc, #64]	; (80153d8 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf0>)
 8015398:	6818      	ldr	r0, [r3, #0]
 801539a:	f7f3 fc35 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 801539e:	2300      	movs	r3, #0
 80153a0:	9303      	str	r3, [sp, #12]
 80153a2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80153a4:	e9cd 0301 	strd	r0, r3, [sp, #4]
 80153a8:	ab07      	add	r3, sp, #28
 80153aa:	9300      	str	r3, [sp, #0]
 80153ac:	e895 0006 	ldmia.w	r5, {r1, r2}
 80153b0:	4633      	mov	r3, r6
 80153b2:	4648      	mov	r0, r9
 80153b4:	f7f3 fbdb 	bl	8008b6e <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80153b8:	b00c      	add	sp, #48	; 0x30
 80153ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80153be:	bf00      	nop
 80153c0:	08029478 	.word	0x08029478
 80153c4:	0802c490 	.word	0x0802c490
 80153c8:	08029506 	.word	0x08029506
 80153cc:	2002bd88 	.word	0x2002bd88
 80153d0:	0802952f 	.word	0x0802952f
 80153d4:	2002bd8c 	.word	0x2002bd8c
 80153d8:	2002bd90 	.word	0x2002bd90
 80153dc:	2002bd84 	.word	0x2002bd84

080153e0 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE>:
 80153e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80153e4:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 80153e6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80153ea:	4293      	cmp	r3, r2
 80153ec:	b08c      	sub	sp, #48	; 0x30
 80153ee:	4604      	mov	r4, r0
 80153f0:	460e      	mov	r6, r1
 80153f2:	d05d      	beq.n	80154b0 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xd0>
 80153f4:	f8df 80dc 	ldr.w	r8, [pc, #220]	; 80154d4 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xf4>
 80153f8:	f8d8 2000 	ldr.w	r2, [r8]
 80153fc:	b92a      	cbnz	r2, 801540a <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0x2a>
 80153fe:	4b2e      	ldr	r3, [pc, #184]	; (80154b8 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xd8>)
 8015400:	4a2e      	ldr	r2, [pc, #184]	; (80154bc <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xdc>)
 8015402:	21ae      	movs	r1, #174	; 0xae
 8015404:	482e      	ldr	r0, [pc, #184]	; (80154c0 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xe0>)
 8015406:	f012 f9bb 	bl	8027780 <__assert_func>
 801540a:	4f2e      	ldr	r7, [pc, #184]	; (80154c4 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xe4>)
 801540c:	8839      	ldrh	r1, [r7, #0]
 801540e:	4299      	cmp	r1, r3
 8015410:	d803      	bhi.n	801541a <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0x3a>
 8015412:	4b2d      	ldr	r3, [pc, #180]	; (80154c8 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xe8>)
 8015414:	4a29      	ldr	r2, [pc, #164]	; (80154bc <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xdc>)
 8015416:	21af      	movs	r1, #175	; 0xaf
 8015418:	e7f4      	b.n	8015404 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0x24>
 801541a:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801541e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8015422:	4b2a      	ldr	r3, [pc, #168]	; (80154cc <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xec>)
 8015424:	681b      	ldr	r3, [r3, #0]
 8015426:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801542a:	2a00      	cmp	r2, #0
 801542c:	d040      	beq.n	80154b0 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xd0>
 801542e:	784b      	ldrb	r3, [r1, #1]
 8015430:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 8015434:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 8015438:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 801543c:	f890 9038 	ldrb.w	r9, [r0, #56]	; 0x38
 8015440:	f890 5037 	ldrb.w	r5, [r0, #55]	; 0x37
 8015444:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8015446:	9207      	str	r2, [sp, #28]
 8015448:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 801544c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8015450:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8015454:	f88d 9022 	strb.w	r9, [sp, #34]	; 0x22
 8015458:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 801545c:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 8015460:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8015464:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 8015468:	f88d a020 	strb.w	sl, [sp, #32]
 801546c:	9009      	str	r0, [sp, #36]	; 0x24
 801546e:	f7fe fdf1 	bl	8014054 <_ZN8touchgfx3HAL3lcdEv>
 8015472:	ad05      	add	r5, sp, #20
 8015474:	4681      	mov	r9, r0
 8015476:	4621      	mov	r1, r4
 8015478:	4628      	mov	r0, r5
 801547a:	f003 f9bf 	bl	80187fc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801547e:	f8d8 3000 	ldr.w	r3, [r8]
 8015482:	2b00      	cmp	r3, #0
 8015484:	d0bb      	beq.n	80153fe <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0x1e>
 8015486:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8015488:	883b      	ldrh	r3, [r7, #0]
 801548a:	428b      	cmp	r3, r1
 801548c:	d9c1      	bls.n	8015412 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0x32>
 801548e:	4b10      	ldr	r3, [pc, #64]	; (80154d0 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xf0>)
 8015490:	6818      	ldr	r0, [r3, #0]
 8015492:	f7f3 fbb9 	bl	8008c08 <_ZNK8touchgfx5Texts7getTextEt>
 8015496:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8015498:	9303      	str	r3, [sp, #12]
 801549a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801549c:	e9cd 0301 	strd	r0, r3, [sp, #4]
 80154a0:	ab07      	add	r3, sp, #28
 80154a2:	9300      	str	r3, [sp, #0]
 80154a4:	e895 0006 	ldmia.w	r5, {r1, r2}
 80154a8:	4633      	mov	r3, r6
 80154aa:	4648      	mov	r0, r9
 80154ac:	f7f3 fb5f 	bl	8008b6e <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80154b0:	b00c      	add	sp, #48	; 0x30
 80154b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80154b6:	bf00      	nop
 80154b8:	08029478 	.word	0x08029478
 80154bc:	0802c490 	.word	0x0802c490
 80154c0:	08029506 	.word	0x08029506
 80154c4:	2002bd88 	.word	0x2002bd88
 80154c8:	0802952f 	.word	0x0802952f
 80154cc:	2002bd8c 	.word	0x2002bd8c
 80154d0:	2002bd90 	.word	0x2002bd90
 80154d4:	2002bd84 	.word	0x2002bd84

080154d8 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 80154d8:	4770      	bx	lr

080154da <_ZN8touchgfx13BoxWithBorderD0Ev>:
 80154da:	b510      	push	{r4, lr}
 80154dc:	2134      	movs	r1, #52	; 0x34
 80154de:	4604      	mov	r4, r0
 80154e0:	f012 f920 	bl	8027724 <_ZdlPvj>
 80154e4:	4620      	mov	r0, r4
 80154e6:	bd10      	pop	{r4, pc}

080154e8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 80154e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80154ec:	4604      	mov	r4, r0
 80154ee:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80154f0:	8962      	ldrh	r2, [r4, #10]
 80154f2:	b218      	sxth	r0, r3
 80154f4:	460e      	mov	r6, r1
 80154f6:	005b      	lsls	r3, r3, #1
 80154f8:	8921      	ldrh	r1, [r4, #8]
 80154fa:	b29b      	uxth	r3, r3
 80154fc:	1ac9      	subs	r1, r1, r3
 80154fe:	b08e      	sub	sp, #56	; 0x38
 8015500:	b209      	sxth	r1, r1
 8015502:	1ad3      	subs	r3, r2, r3
 8015504:	b21b      	sxth	r3, r3
 8015506:	2900      	cmp	r1, #0
 8015508:	f8ad 0000 	strh.w	r0, [sp]
 801550c:	f8ad 0002 	strh.w	r0, [sp, #2]
 8015510:	f8ad 1004 	strh.w	r1, [sp, #4]
 8015514:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015518:	dd5e      	ble.n	80155d8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 801551a:	2b00      	cmp	r3, #0
 801551c:	dd5c      	ble.n	80155d8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 801551e:	6830      	ldr	r0, [r6, #0]
 8015520:	6871      	ldr	r1, [r6, #4]
 8015522:	ab02      	add	r3, sp, #8
 8015524:	c303      	stmia	r3!, {r0, r1}
 8015526:	4669      	mov	r1, sp
 8015528:	a802      	add	r0, sp, #8
 801552a:	f7fe f8e5 	bl	80136f8 <_ZN8touchgfx4RectaNERKS0_>
 801552e:	4620      	mov	r0, r4
 8015530:	a902      	add	r1, sp, #8
 8015532:	f7ff fd4d 	bl	8014fd0 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 8015536:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 8015538:	2800      	cmp	r0, #0
 801553a:	d05f      	beq.n	80155fc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 801553c:	8963      	ldrh	r3, [r4, #10]
 801553e:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8015542:	f8ad 101c 	strh.w	r1, [sp, #28]
 8015546:	1a1f      	subs	r7, r3, r0
 8015548:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 801554c:	b202      	sxth	r2, r0
 801554e:	2500      	movs	r5, #0
 8015550:	b21b      	sxth	r3, r3
 8015552:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 8015556:	1a09      	subs	r1, r1, r0
 8015558:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801555c:	9506      	str	r5, [sp, #24]
 801555e:	f8ad 201e 	strh.w	r2, [sp, #30]
 8015562:	f8ad 5020 	strh.w	r5, [sp, #32]
 8015566:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 801556a:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 801556e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8015572:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8015576:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801557a:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 801557e:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8015582:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8015586:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801558a:	af04      	add	r7, sp, #16
 801558c:	ab06      	add	r3, sp, #24
 801558e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8015592:	e893 0003 	ldmia.w	r3, {r0, r1}
 8015596:	e887 0003 	stmia.w	r7, {r0, r1}
 801559a:	4631      	mov	r1, r6
 801559c:	4638      	mov	r0, r7
 801559e:	f7fe f8ab 	bl	80136f8 <_ZN8touchgfx4RectaNERKS0_>
 80155a2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80155a6:	2b00      	cmp	r3, #0
 80155a8:	dd12      	ble.n	80155d0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 80155aa:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80155ae:	2b00      	cmp	r3, #0
 80155b0:	dd0e      	ble.n	80155d0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 80155b2:	6823      	ldr	r3, [r4, #0]
 80155b4:	4639      	mov	r1, r7
 80155b6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80155b8:	4620      	mov	r0, r4
 80155ba:	4798      	blx	r3
 80155bc:	f7fe fd4a 	bl	8014054 <_ZN8touchgfx3HAL3lcdEv>
 80155c0:	6803      	ldr	r3, [r0, #0]
 80155c2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80155c4:	f8d3 8018 	ldr.w	r8, [r3, #24]
 80155c8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80155cc:	4639      	mov	r1, r7
 80155ce:	47c0      	blx	r8
 80155d0:	3501      	adds	r5, #1
 80155d2:	2d04      	cmp	r5, #4
 80155d4:	d1da      	bne.n	801558c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 80155d6:	e011      	b.n	80155fc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 80155d8:	6830      	ldr	r0, [r6, #0]
 80155da:	6871      	ldr	r1, [r6, #4]
 80155dc:	ab06      	add	r3, sp, #24
 80155de:	c303      	stmia	r3!, {r0, r1}
 80155e0:	6823      	ldr	r3, [r4, #0]
 80155e2:	a906      	add	r1, sp, #24
 80155e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80155e6:	4620      	mov	r0, r4
 80155e8:	4798      	blx	r3
 80155ea:	f7fe fd33 	bl	8014054 <_ZN8touchgfx3HAL3lcdEv>
 80155ee:	6803      	ldr	r3, [r0, #0]
 80155f0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80155f2:	699d      	ldr	r5, [r3, #24]
 80155f4:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80155f8:	a906      	add	r1, sp, #24
 80155fa:	47a8      	blx	r5
 80155fc:	b00e      	add	sp, #56	; 0x38
 80155fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08015602 <_ZN8touchgfx5ImageD1Ev>:
 8015602:	4770      	bx	lr

08015604 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8015604:	b570      	push	{r4, r5, r6, lr}
 8015606:	880b      	ldrh	r3, [r1, #0]
 8015608:	84c3      	strh	r3, [r0, #38]	; 0x26
 801560a:	4604      	mov	r4, r0
 801560c:	4608      	mov	r0, r1
 801560e:	460d      	mov	r5, r1
 8015610:	f006 f82c 	bl	801b66c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015614:	4606      	mov	r6, r0
 8015616:	4628      	mov	r0, r5
 8015618:	f006 f862 	bl	801b6e0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801561c:	6823      	ldr	r3, [r4, #0]
 801561e:	4605      	mov	r5, r0
 8015620:	b231      	sxth	r1, r6
 8015622:	4620      	mov	r0, r4
 8015624:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8015626:	4798      	blx	r3
 8015628:	6823      	ldr	r3, [r4, #0]
 801562a:	b229      	sxth	r1, r5
 801562c:	4620      	mov	r0, r4
 801562e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015630:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015634:	4718      	bx	r3

08015636 <_ZN8touchgfx5ImageD0Ev>:
 8015636:	b510      	push	{r4, lr}
 8015638:	212c      	movs	r1, #44	; 0x2c
 801563a:	4604      	mov	r4, r0
 801563c:	f012 f872 	bl	8027724 <_ZdlPvj>
 8015640:	4620      	mov	r0, r4
 8015642:	bd10      	pop	{r4, pc}

08015644 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8015644:	b510      	push	{r4, lr}
 8015646:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 801564a:	2bff      	cmp	r3, #255	; 0xff
 801564c:	4604      	mov	r4, r0
 801564e:	d006      	beq.n	801565e <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8015650:	2300      	movs	r3, #0
 8015652:	8003      	strh	r3, [r0, #0]
 8015654:	8043      	strh	r3, [r0, #2]
 8015656:	8083      	strh	r3, [r0, #4]
 8015658:	80c3      	strh	r3, [r0, #6]
 801565a:	4620      	mov	r0, r4
 801565c:	bd10      	pop	{r4, pc}
 801565e:	3126      	adds	r1, #38	; 0x26
 8015660:	f006 f878 	bl	801b754 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8015664:	e7f9      	b.n	801565a <_ZNK8touchgfx5Image12getSolidRectEv+0x16>
	...

08015668 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8015668:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801566c:	4604      	mov	r4, r0
 801566e:	b088      	sub	sp, #32
 8015670:	f854 3b26 	ldr.w	r3, [r4], #38
 8015674:	2500      	movs	r5, #0
 8015676:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015678:	460f      	mov	r7, r1
 801567a:	e9cd 5504 	strd	r5, r5, [sp, #16]
 801567e:	a904      	add	r1, sp, #16
 8015680:	4606      	mov	r6, r0
 8015682:	4798      	blx	r3
 8015684:	4620      	mov	r0, r4
 8015686:	f005 fff1 	bl	801b66c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801568a:	4680      	mov	r8, r0
 801568c:	4620      	mov	r0, r4
 801568e:	f006 f827 	bl	801b6e0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015692:	9506      	str	r5, [sp, #24]
 8015694:	ad06      	add	r5, sp, #24
 8015696:	f8ad 001e 	strh.w	r0, [sp, #30]
 801569a:	4639      	mov	r1, r7
 801569c:	4628      	mov	r0, r5
 801569e:	f8ad 801c 	strh.w	r8, [sp, #28]
 80156a2:	f7fe f829 	bl	80136f8 <_ZN8touchgfx4RectaNERKS0_>
 80156a6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80156aa:	2b00      	cmp	r3, #0
 80156ac:	dd19      	ble.n	80156e2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80156ae:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80156b2:	2b00      	cmp	r3, #0
 80156b4:	dd15      	ble.n	80156e2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80156b6:	4b0c      	ldr	r3, [pc, #48]	; (80156e8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 80156b8:	681b      	ldr	r3, [r3, #0]
 80156ba:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80156be:	b10a      	cbz	r2, 80156c4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 80156c0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80156c2:	b900      	cbnz	r0, 80156c6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 80156c4:	6898      	ldr	r0, [r3, #8]
 80156c6:	6801      	ldr	r1, [r0, #0]
 80156c8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80156cc:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80156d0:	2701      	movs	r7, #1
 80156d2:	9702      	str	r7, [sp, #8]
 80156d4:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 80156d8:	e9cd 5600 	strd	r5, r6, [sp]
 80156dc:	688d      	ldr	r5, [r1, #8]
 80156de:	4621      	mov	r1, r4
 80156e0:	47a8      	blx	r5
 80156e2:	b008      	add	sp, #32
 80156e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80156e8:	2002bd34 	.word	0x2002bd34

080156ec <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80156ec:	b510      	push	{r4, lr}
 80156ee:	6803      	ldr	r3, [r0, #0]
 80156f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80156f2:	460c      	mov	r4, r1
 80156f4:	4798      	blx	r3
 80156f6:	1b03      	subs	r3, r0, r4
 80156f8:	4258      	negs	r0, r3
 80156fa:	4158      	adcs	r0, r3
 80156fc:	bd10      	pop	{r4, pc}
	...

08015700 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8015700:	4b01      	ldr	r3, [pc, #4]	; (8015708 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8015702:	6019      	str	r1, [r3, #0]
 8015704:	4770      	bx	lr
 8015706:	bf00      	nop
 8015708:	2002bd3c 	.word	0x2002bd3c

0801570c <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801570c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015710:	4696      	mov	lr, r2
 8015712:	4605      	mov	r5, r0
 8015714:	4614      	mov	r4, r2
 8015716:	460e      	mov	r6, r1
 8015718:	461f      	mov	r7, r3
 801571a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801571e:	b097      	sub	sp, #92	; 0x5c
 8015720:	f10d 0c1c 	add.w	ip, sp, #28
 8015724:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015728:	f8de 3000 	ldr.w	r3, [lr]
 801572c:	f8cc 3000 	str.w	r3, [ip]
 8015730:	f104 0e14 	add.w	lr, r4, #20
 8015734:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8015738:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801573c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015740:	f8de 3000 	ldr.w	r3, [lr]
 8015744:	f8cc 3000 	str.w	r3, [ip]
 8015748:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 801574c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8015750:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8015754:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015758:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 801575c:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8015760:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8015764:	f8de 3000 	ldr.w	r3, [lr]
 8015768:	f8cc 3000 	str.w	r3, [ip]
 801576c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801576e:	682b      	ldr	r3, [r5, #0]
 8015770:	9201      	str	r2, [sp, #4]
 8015772:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8015776:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8015778:	9200      	str	r2, [sp, #0]
 801577a:	f8cd 8008 	str.w	r8, [sp, #8]
 801577e:	f8d3 b034 	ldr.w	fp, [r3, #52]	; 0x34
 8015782:	aa07      	add	r2, sp, #28
 8015784:	463b      	mov	r3, r7
 8015786:	4631      	mov	r1, r6
 8015788:	4628      	mov	r0, r5
 801578a:	47d8      	blx	fp
 801578c:	46a6      	mov	lr, r4
 801578e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8015792:	f10d 0c1c 	add.w	ip, sp, #28
 8015796:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801579a:	f8de 3000 	ldr.w	r3, [lr]
 801579e:	f8cc 3000 	str.w	r3, [ip]
 80157a2:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80157a6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80157aa:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80157ae:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80157b2:	343c      	adds	r4, #60	; 0x3c
 80157b4:	f8de 3000 	ldr.w	r3, [lr]
 80157b8:	f8cc 3000 	str.w	r3, [ip]
 80157bc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80157be:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80157c2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80157c6:	6823      	ldr	r3, [r4, #0]
 80157c8:	f8cc 3000 	str.w	r3, [ip]
 80157cc:	682b      	ldr	r3, [r5, #0]
 80157ce:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80157d2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80157d4:	9201      	str	r2, [sp, #4]
 80157d6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80157d8:	9200      	str	r2, [sp, #0]
 80157da:	f8cd 8008 	str.w	r8, [sp, #8]
 80157de:	6b5c      	ldr	r4, [r3, #52]	; 0x34
 80157e0:	aa07      	add	r2, sp, #28
 80157e2:	463b      	mov	r3, r7
 80157e4:	4631      	mov	r1, r6
 80157e6:	4628      	mov	r0, r5
 80157e8:	47a0      	blx	r4
 80157ea:	b017      	add	sp, #92	; 0x5c
 80157ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080157f0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80157f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80157f4:	b08d      	sub	sp, #52	; 0x34
 80157f6:	4688      	mov	r8, r1
 80157f8:	9916      	ldr	r1, [sp, #88]	; 0x58
 80157fa:	f8d3 c000 	ldr.w	ip, [r3]
 80157fe:	680f      	ldr	r7, [r1, #0]
 8015800:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8015804:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8015808:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 801580c:	edd3 6a07 	vldr	s13, [r3, #28]
 8015810:	9918      	ldr	r1, [sp, #96]	; 0x60
 8015812:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8015816:	f9b1 9000 	ldrsh.w	r9, [r1]
 801581a:	f9ba 1000 	ldrsh.w	r1, [sl]
 801581e:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8015822:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8015826:	eba7 070c 	sub.w	r7, r7, ip
 801582a:	42bc      	cmp	r4, r7
 801582c:	bfa8      	it	ge
 801582e:	463c      	movge	r4, r7
 8015830:	ee07 4a90 	vmov	s15, r4
 8015834:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8015838:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 801583c:	ee25 4a04 	vmul.f32	s8, s10, s8
 8015840:	ee65 4a24 	vmul.f32	s9, s10, s9
 8015844:	ee25 5a27 	vmul.f32	s10, s10, s15
 8015848:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 801584c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8015850:	eb09 0e0c 	add.w	lr, r9, ip
 8015854:	4571      	cmp	r1, lr
 8015856:	ee71 0aa4 	vadd.f32	s1, s3, s9
 801585a:	ee32 1a05 	vadd.f32	s2, s4, s10
 801585e:	ee36 0a84 	vadd.f32	s0, s13, s8
 8015862:	ee61 1a87 	vmul.f32	s3, s3, s14
 8015866:	ee22 2a07 	vmul.f32	s4, s4, s14
 801586a:	f340 808d 	ble.w	8015988 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 801586e:	eba1 060e 	sub.w	r6, r1, lr
 8015872:	fb96 f5f4 	sdiv	r5, r6, r4
 8015876:	ee07 5a10 	vmov	s14, r5
 801587a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801587e:	2d00      	cmp	r5, #0
 8015880:	fb04 6615 	mls	r6, r4, r5, r6
 8015884:	eea7 0a04 	vfma.f32	s0, s14, s8
 8015888:	eee7 0a24 	vfma.f32	s1, s14, s9
 801588c:	eea7 1a05 	vfma.f32	s2, s14, s10
 8015890:	dd13      	ble.n	80158ba <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8015892:	ee70 6a44 	vsub.f32	s13, s0, s8
 8015896:	ee70 1ae4 	vsub.f32	s3, s1, s9
 801589a:	eef5 6a40 	vcmp.f32	s13, #0.0
 801589e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80158a2:	bf18      	it	ne
 80158a4:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 80158a8:	ee31 2a45 	vsub.f32	s4, s2, s10
 80158ac:	bf08      	it	eq
 80158ae:	eeb0 7a67 	vmoveq.f32	s14, s15
 80158b2:	ee61 1a87 	vmul.f32	s3, s3, s14
 80158b6:	ee22 2a07 	vmul.f32	s4, s4, s14
 80158ba:	fb05 f204 	mul.w	r2, r5, r4
 80158be:	1abf      	subs	r7, r7, r2
 80158c0:	4494      	add	ip, r2
 80158c2:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 80158c6:	4411      	add	r1, r2
 80158c8:	eb09 020c 	add.w	r2, r9, ip
 80158cc:	443a      	add	r2, r7
 80158ce:	b209      	sxth	r1, r1
 80158d0:	428a      	cmp	r2, r1
 80158d2:	bfc4      	itt	gt
 80158d4:	eba1 0209 	subgt.w	r2, r1, r9
 80158d8:	eba2 070c 	subgt.w	r7, r2, ip
 80158dc:	2f00      	cmp	r7, #0
 80158de:	dd50      	ble.n	8015982 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 80158e0:	fb97 f1f4 	sdiv	r1, r7, r4
 80158e4:	fb04 7211 	mls	r2, r4, r1, r7
 80158e8:	b90a      	cbnz	r2, 80158ee <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80158ea:	3901      	subs	r1, #1
 80158ec:	4622      	mov	r2, r4
 80158ee:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80158f2:	6840      	ldr	r0, [r0, #4]
 80158f4:	900b      	str	r0, [sp, #44]	; 0x2c
 80158f6:	f8d0 a000 	ldr.w	sl, [r0]
 80158fa:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80158fc:	9008      	str	r0, [sp, #32]
 80158fe:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8015902:	9818      	ldr	r0, [sp, #96]	; 0x60
 8015904:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8015908:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 801590c:	695b      	ldr	r3, [r3, #20]
 801590e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8015910:	445b      	add	r3, fp
 8015912:	eef0 6a42 	vmov.f32	s13, s4
 8015916:	ee60 2aa3 	vmul.f32	s5, s1, s7
 801591a:	ee21 3a23 	vmul.f32	s6, s2, s7
 801591e:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8015922:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015926:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 801592a:	9307      	str	r3, [sp, #28]
 801592c:	ee17 7a90 	vmov	r7, s15
 8015930:	ee73 7a42 	vsub.f32	s15, s6, s4
 8015934:	eeb0 7a61 	vmov.f32	s14, s3
 8015938:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 801593c:	ee16 3a90 	vmov	r3, s13
 8015940:	fb97 f7f4 	sdiv	r7, r7, r4
 8015944:	ee17 ca90 	vmov	ip, s15
 8015948:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801594c:	fb9c fcf4 	sdiv	ip, ip, r4
 8015950:	fb0c 3306 	mla	r3, ip, r6, r3
 8015954:	9302      	str	r3, [sp, #8]
 8015956:	ee17 3a10 	vmov	r3, s14
 801595a:	44b6      	add	lr, r6
 801595c:	fb04 e505 	mla	r5, r4, r5, lr
 8015960:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8015964:	fb07 3706 	mla	r7, r7, r6, r3
 8015968:	e9cd 8505 	strd	r8, r5, [sp, #20]
 801596c:	e9cd 4700 	strd	r4, r7, [sp]
 8015970:	2900      	cmp	r1, #0
 8015972:	bfcc      	ite	gt
 8015974:	46a1      	movgt	r9, r4
 8015976:	4691      	movle	r9, r2
 8015978:	eba9 0306 	sub.w	r3, r9, r6
 801597c:	f8da 4008 	ldr.w	r4, [sl, #8]
 8015980:	47a0      	blx	r4
 8015982:	b00d      	add	sp, #52	; 0x34
 8015984:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015988:	2500      	movs	r5, #0
 801598a:	462e      	mov	r6, r5
 801598c:	e799      	b.n	80158c2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08015990 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8015990:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015994:	b0db      	sub	sp, #364	; 0x16c
 8015996:	461d      	mov	r5, r3
 8015998:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 801599c:	930a      	str	r3, [sp, #40]	; 0x28
 801599e:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 80159a2:	930b      	str	r3, [sp, #44]	; 0x2c
 80159a4:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 80159a8:	9310      	str	r3, [sp, #64]	; 0x40
 80159aa:	6803      	ldr	r3, [r0, #0]
 80159ac:	910f      	str	r1, [sp, #60]	; 0x3c
 80159ae:	6bdf      	ldr	r7, [r3, #60]	; 0x3c
 80159b0:	9009      	str	r0, [sp, #36]	; 0x24
 80159b2:	4614      	mov	r4, r2
 80159b4:	4629      	mov	r1, r5
 80159b6:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80159ba:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 80159be:	47b8      	blx	r7
 80159c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80159c2:	6058      	str	r0, [r3, #4]
 80159c4:	2800      	cmp	r0, #0
 80159c6:	f000 83a1 	beq.w	801610c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80159ca:	682b      	ldr	r3, [r5, #0]
 80159cc:	9314      	str	r3, [sp, #80]	; 0x50
 80159ce:	686b      	ldr	r3, [r5, #4]
 80159d0:	9315      	str	r3, [sp, #84]	; 0x54
 80159d2:	4bc4      	ldr	r3, [pc, #784]	; (8015ce4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 80159d4:	ed94 7a02 	vldr	s14, [r4, #8]
 80159d8:	7819      	ldrb	r1, [r3, #0]
 80159da:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80159de:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 80159e2:	2900      	cmp	r1, #0
 80159e4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80159e8:	bf16      	itet	ne
 80159ea:	4619      	movne	r1, r3
 80159ec:	4611      	moveq	r1, r2
 80159ee:	4613      	movne	r3, r2
 80159f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80159f4:	9116      	str	r1, [sp, #88]	; 0x58
 80159f6:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 80159fa:	f240 8387 	bls.w	801610c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80159fe:	ed94 7a07 	vldr	s14, [r4, #28]
 8015a02:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8015a06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015a0a:	f240 837f 	bls.w	801610c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015a0e:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8015a12:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8015a16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015a1a:	f240 8377 	bls.w	801610c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015a1e:	6822      	ldr	r2, [r4, #0]
 8015a20:	4bb1      	ldr	r3, [pc, #708]	; (8015ce8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8015a22:	429a      	cmp	r2, r3
 8015a24:	f2c0 8372 	blt.w	801610c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015a28:	49b0      	ldr	r1, [pc, #704]	; (8015cec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8015a2a:	6963      	ldr	r3, [r4, #20]
 8015a2c:	428a      	cmp	r2, r1
 8015a2e:	f300 836d 	bgt.w	801610c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015a32:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8015a36:	48ae      	ldr	r0, [pc, #696]	; (8015cf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8015a38:	33ff      	adds	r3, #255	; 0xff
 8015a3a:	4283      	cmp	r3, r0
 8015a3c:	f200 8366 	bhi.w	801610c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015a40:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8015a42:	4dac      	ldr	r5, [pc, #688]	; (8015cf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8015a44:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8015a48:	33ff      	adds	r3, #255	; 0xff
 8015a4a:	42ab      	cmp	r3, r5
 8015a4c:	f200 835e 	bhi.w	801610c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015a50:	6862      	ldr	r2, [r4, #4]
 8015a52:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8015a56:	33ff      	adds	r3, #255	; 0xff
 8015a58:	4283      	cmp	r3, r0
 8015a5a:	f200 8357 	bhi.w	801610c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015a5e:	69a1      	ldr	r1, [r4, #24]
 8015a60:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8015a64:	33ff      	adds	r3, #255	; 0xff
 8015a66:	4283      	cmp	r3, r0
 8015a68:	f200 8350 	bhi.w	801610c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015a6c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8015a6e:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8015a72:	30ff      	adds	r0, #255	; 0xff
 8015a74:	42a8      	cmp	r0, r5
 8015a76:	f200 8349 	bhi.w	801610c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015a7a:	428a      	cmp	r2, r1
 8015a7c:	f280 8110 	bge.w	8015ca0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8015a80:	429a      	cmp	r2, r3
 8015a82:	f300 8119 	bgt.w	8015cb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8015a86:	4299      	cmp	r1, r3
 8015a88:	f280 811d 	bge.w	8015cc6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8015a8c:	2502      	movs	r5, #2
 8015a8e:	2701      	movs	r7, #1
 8015a90:	46a9      	mov	r9, r5
 8015a92:	46b8      	mov	r8, r7
 8015a94:	f04f 0a00 	mov.w	sl, #0
 8015a98:	4621      	mov	r1, r4
 8015a9a:	a849      	add	r0, sp, #292	; 0x124
 8015a9c:	f004 fd9e 	bl	801a5dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8015aa0:	4622      	mov	r2, r4
 8015aa2:	4653      	mov	r3, sl
 8015aa4:	a949      	add	r1, sp, #292	; 0x124
 8015aa6:	f8cd 9000 	str.w	r9, [sp]
 8015aaa:	a819      	add	r0, sp, #100	; 0x64
 8015aac:	f004 fec6 	bl	801a83c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8015ab0:	4622      	mov	r2, r4
 8015ab2:	4653      	mov	r3, sl
 8015ab4:	a949      	add	r1, sp, #292	; 0x124
 8015ab6:	f8cd 8000 	str.w	r8, [sp]
 8015aba:	a829      	add	r0, sp, #164	; 0xa4
 8015abc:	f004 febe 	bl	801a83c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8015ac0:	4643      	mov	r3, r8
 8015ac2:	4622      	mov	r2, r4
 8015ac4:	a949      	add	r1, sp, #292	; 0x124
 8015ac6:	f8cd 9000 	str.w	r9, [sp]
 8015aca:	a839      	add	r0, sp, #228	; 0xe4
 8015acc:	f004 feb6 	bl	801a83c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8015ad0:	42af      	cmp	r7, r5
 8015ad2:	bfb5      	itete	lt
 8015ad4:	2300      	movlt	r3, #0
 8015ad6:	2301      	movge	r3, #1
 8015ad8:	930e      	strlt	r3, [sp, #56]	; 0x38
 8015ada:	930e      	strge	r3, [sp, #56]	; 0x38
 8015adc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015ade:	e893 0003 	ldmia.w	r3, {r0, r1}
 8015ae2:	af12      	add	r7, sp, #72	; 0x48
 8015ae4:	bfb9      	ittee	lt
 8015ae6:	ad29      	addlt	r5, sp, #164	; 0xa4
 8015ae8:	ac19      	addlt	r4, sp, #100	; 0x64
 8015aea:	ad19      	addge	r5, sp, #100	; 0x64
 8015aec:	ac29      	addge	r4, sp, #164	; 0xa4
 8015aee:	e887 0003 	stmia.w	r7, {r0, r1}
 8015af2:	b928      	cbnz	r0, 8015b00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8015af4:	4b80      	ldr	r3, [pc, #512]	; (8015cf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8015af6:	6818      	ldr	r0, [r3, #0]
 8015af8:	6803      	ldr	r3, [r0, #0]
 8015afa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015afc:	4798      	blx	r3
 8015afe:	6038      	str	r0, [r7, #0]
 8015b00:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015b02:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8015b06:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8015b0a:	930c      	str	r3, [sp, #48]	; 0x30
 8015b0c:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015b0e:	6963      	ldr	r3, [r4, #20]
 8015b10:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8015b12:	440b      	add	r3, r1
 8015b14:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8015b18:	4408      	add	r0, r1
 8015b1a:	b200      	sxth	r0, r0
 8015b1c:	4283      	cmp	r3, r0
 8015b1e:	900d      	str	r0, [sp, #52]	; 0x34
 8015b20:	f280 80dd 	bge.w	8015cde <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8015b24:	428b      	cmp	r3, r1
 8015b26:	da08      	bge.n	8015b3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015b28:	2a00      	cmp	r2, #0
 8015b2a:	dd06      	ble.n	8015b3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015b2c:	1acb      	subs	r3, r1, r3
 8015b2e:	429a      	cmp	r2, r3
 8015b30:	f2c0 80e4 	blt.w	8015cfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8015b34:	2b00      	cmp	r3, #0
 8015b36:	f300 80e2 	bgt.w	8015cfe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8015b3a:	6967      	ldr	r7, [r4, #20]
 8015b3c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015b3e:	443b      	add	r3, r7
 8015b40:	461f      	mov	r7, r3
 8015b42:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015b44:	1bdf      	subs	r7, r3, r7
 8015b46:	4297      	cmp	r7, r2
 8015b48:	bfa8      	it	ge
 8015b4a:	4617      	movge	r7, r2
 8015b4c:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8015b50:	2f00      	cmp	r7, #0
 8015b52:	f340 8166 	ble.w	8015e22 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8015b56:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015b58:	6829      	ldr	r1, [r5, #0]
 8015b5a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015b5e:	f9bb 3000 	ldrsh.w	r3, [fp]
 8015b62:	6820      	ldr	r0, [r4, #0]
 8015b64:	4411      	add	r1, r2
 8015b66:	4299      	cmp	r1, r3
 8015b68:	dd1a      	ble.n	8015ba0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8015b6a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8015b6e:	440b      	add	r3, r1
 8015b70:	4402      	add	r2, r0
 8015b72:	b21b      	sxth	r3, r3
 8015b74:	429a      	cmp	r2, r3
 8015b76:	dc13      	bgt.n	8015ba0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8015b78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015b7a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015b7c:	681b      	ldr	r3, [r3, #0]
 8015b7e:	9206      	str	r2, [sp, #24]
 8015b80:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015b82:	9205      	str	r2, [sp, #20]
 8015b84:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015b86:	9500      	str	r5, [sp, #0]
 8015b88:	e9cd b203 	strd	fp, r2, [sp, #12]
 8015b8c:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8015b8e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015b90:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8015b94:	a912      	add	r1, sp, #72	; 0x48
 8015b96:	f8d3 9040 	ldr.w	r9, [r3, #64]	; 0x40
 8015b9a:	aa49      	add	r2, sp, #292	; 0x124
 8015b9c:	4623      	mov	r3, r4
 8015b9e:	47c8      	blx	r9
 8015ba0:	e9d4 2300 	ldrd	r2, r3, [r4]
 8015ba4:	441a      	add	r2, r3
 8015ba6:	6963      	ldr	r3, [r4, #20]
 8015ba8:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8015bac:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8015bb0:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8015bb4:	68a1      	ldr	r1, [r4, #8]
 8015bb6:	ed94 6a08 	vldr	s12, [r4, #32]
 8015bba:	6022      	str	r2, [r4, #0]
 8015bbc:	3301      	adds	r3, #1
 8015bbe:	6163      	str	r3, [r4, #20]
 8015bc0:	69a3      	ldr	r3, [r4, #24]
 8015bc2:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015bc6:	3b01      	subs	r3, #1
 8015bc8:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8015bcc:	61a3      	str	r3, [r4, #24]
 8015bce:	6923      	ldr	r3, [r4, #16]
 8015bd0:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8015bd4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015bd8:	edd4 6a07 	vldr	s13, [r4, #28]
 8015bdc:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8015be0:	440b      	add	r3, r1
 8015be2:	68e1      	ldr	r1, [r4, #12]
 8015be4:	6123      	str	r3, [r4, #16]
 8015be6:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015bea:	428b      	cmp	r3, r1
 8015bec:	edc4 6a07 	vstr	s13, [r4, #28]
 8015bf0:	db15      	blt.n	8015c1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8015bf2:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8015bf6:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015bfa:	3201      	adds	r2, #1
 8015bfc:	edc4 6a07 	vstr	s13, [r4, #28]
 8015c00:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8015c04:	6022      	str	r2, [r4, #0]
 8015c06:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015c0a:	1a5b      	subs	r3, r3, r1
 8015c0c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8015c10:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8015c14:	6123      	str	r3, [r4, #16]
 8015c16:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015c1a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8015c1e:	e9d5 2300 	ldrd	r2, r3, [r5]
 8015c22:	441a      	add	r2, r3
 8015c24:	696b      	ldr	r3, [r5, #20]
 8015c26:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8015c2a:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8015c2e:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8015c32:	68a9      	ldr	r1, [r5, #8]
 8015c34:	ed95 6a08 	vldr	s12, [r5, #32]
 8015c38:	602a      	str	r2, [r5, #0]
 8015c3a:	3301      	adds	r3, #1
 8015c3c:	616b      	str	r3, [r5, #20]
 8015c3e:	69ab      	ldr	r3, [r5, #24]
 8015c40:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015c44:	3b01      	subs	r3, #1
 8015c46:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8015c4a:	61ab      	str	r3, [r5, #24]
 8015c4c:	692b      	ldr	r3, [r5, #16]
 8015c4e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8015c52:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015c56:	edd5 6a07 	vldr	s13, [r5, #28]
 8015c5a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8015c5e:	440b      	add	r3, r1
 8015c60:	68e9      	ldr	r1, [r5, #12]
 8015c62:	612b      	str	r3, [r5, #16]
 8015c64:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015c68:	428b      	cmp	r3, r1
 8015c6a:	edc5 6a07 	vstr	s13, [r5, #28]
 8015c6e:	db15      	blt.n	8015c9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8015c70:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8015c74:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015c78:	3201      	adds	r2, #1
 8015c7a:	edc5 6a07 	vstr	s13, [r5, #28]
 8015c7e:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8015c82:	602a      	str	r2, [r5, #0]
 8015c84:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015c88:	1a5b      	subs	r3, r3, r1
 8015c8a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8015c8e:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8015c92:	612b      	str	r3, [r5, #16]
 8015c94:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015c98:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8015c9c:	3f01      	subs	r7, #1
 8015c9e:	e757      	b.n	8015b50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8015ca0:	4299      	cmp	r1, r3
 8015ca2:	dc13      	bgt.n	8015ccc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8015ca4:	429a      	cmp	r2, r3
 8015ca6:	da14      	bge.n	8015cd2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8015ca8:	2502      	movs	r5, #2
 8015caa:	2703      	movs	r7, #3
 8015cac:	46a9      	mov	r9, r5
 8015cae:	f04f 0800 	mov.w	r8, #0
 8015cb2:	f04f 0a01 	mov.w	sl, #1
 8015cb6:	e6ef      	b.n	8015a98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8015cb8:	2501      	movs	r5, #1
 8015cba:	2700      	movs	r7, #0
 8015cbc:	46a9      	mov	r9, r5
 8015cbe:	46b8      	mov	r8, r7
 8015cc0:	f04f 0a02 	mov.w	sl, #2
 8015cc4:	e6e8      	b.n	8015a98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8015cc6:	2501      	movs	r5, #1
 8015cc8:	2702      	movs	r7, #2
 8015cca:	e6e1      	b.n	8015a90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8015ccc:	2500      	movs	r5, #0
 8015cce:	2701      	movs	r7, #1
 8015cd0:	e7f4      	b.n	8015cbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8015cd2:	2702      	movs	r7, #2
 8015cd4:	2503      	movs	r5, #3
 8015cd6:	f04f 0900 	mov.w	r9, #0
 8015cda:	46b8      	mov	r8, r7
 8015cdc:	e7e9      	b.n	8015cb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8015cde:	4613      	mov	r3, r2
 8015ce0:	e728      	b.n	8015b34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8015ce2:	bf00      	nop
 8015ce4:	2002bd2c 	.word	0x2002bd2c
 8015ce8:	fffd8f01 	.word	0xfffd8f01
 8015cec:	00027100 	.word	0x00027100
 8015cf0:	0004e1ff 	.word	0x0004e1ff
 8015cf4:	0004e1fe 	.word	0x0004e1fe
 8015cf8:	2002bd34 	.word	0x2002bd34
 8015cfc:	4613      	mov	r3, r2
 8015cfe:	992b      	ldr	r1, [sp, #172]	; 0xac
 8015d00:	9111      	str	r1, [sp, #68]	; 0x44
 8015d02:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8015d06:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8015d0a:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8015d0c:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8015d10:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8015d14:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8015d18:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8015d1c:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8015d20:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8015d24:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8015d28:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8015d2c:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8015d30:	469e      	mov	lr, r3
 8015d32:	469c      	mov	ip, r3
 8015d34:	f04f 0900 	mov.w	r9, #0
 8015d38:	f1bc 0f00 	cmp.w	ip, #0
 8015d3c:	d147      	bne.n	8015dce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8015d3e:	eb03 0c07 	add.w	ip, r3, r7
 8015d42:	1ad7      	subs	r7, r2, r3
 8015d44:	f1b9 0f00 	cmp.w	r9, #0
 8015d48:	d009      	beq.n	8015d5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8015d4a:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 8015d4e:	9029      	str	r0, [sp, #164]	; 0xa4
 8015d50:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8015d54:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8015d58:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8015d5c:	912d      	str	r1, [sp, #180]	; 0xb4
 8015d5e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8015d60:	9111      	str	r1, [sp, #68]	; 0x44
 8015d62:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8015d66:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8015d6a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8015d6e:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8015d72:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8015d76:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8015d7a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8015d7e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8015d82:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8015d86:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8015d8a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8015d8e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8015d92:	f04f 0800 	mov.w	r8, #0
 8015d96:	f1be 0f00 	cmp.w	lr, #0
 8015d9a:	d031      	beq.n	8015e00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8015d9c:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8015d9e:	4431      	add	r1, r6
 8015da0:	4549      	cmp	r1, r9
 8015da2:	4450      	add	r0, sl
 8015da4:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8015da8:	ee37 7a04 	vadd.f32	s14, s14, s8
 8015dac:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8015db0:	db08      	blt.n	8015dc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8015db2:	ee77 7a85 	vadd.f32	s15, s15, s10
 8015db6:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8015dba:	ee37 7a06 	vadd.f32	s14, s14, s12
 8015dbe:	3001      	adds	r0, #1
 8015dc0:	eba1 0109 	sub.w	r1, r1, r9
 8015dc4:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015dc8:	f04f 0801 	mov.w	r8, #1
 8015dcc:	e7e3      	b.n	8015d96 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8015dce:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8015dd0:	4431      	add	r1, r6
 8015dd2:	4541      	cmp	r1, r8
 8015dd4:	4450      	add	r0, sl
 8015dd6:	ee37 7a24 	vadd.f32	s14, s14, s9
 8015dda:	ee77 7a84 	vadd.f32	s15, s15, s8
 8015dde:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8015de2:	db08      	blt.n	8015df6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8015de4:	ee76 6a85 	vadd.f32	s13, s13, s10
 8015de8:	ee37 7a25 	vadd.f32	s14, s14, s11
 8015dec:	ee77 7a86 	vadd.f32	s15, s15, s12
 8015df0:	3001      	adds	r0, #1
 8015df2:	eba1 0108 	sub.w	r1, r1, r8
 8015df6:	f10c 3cff 	add.w	ip, ip, #4294967295
 8015dfa:	f04f 0901 	mov.w	r9, #1
 8015dfe:	e79b      	b.n	8015d38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8015e00:	449c      	add	ip, r3
 8015e02:	1aff      	subs	r7, r7, r3
 8015e04:	f1b8 0f00 	cmp.w	r8, #0
 8015e08:	d009      	beq.n	8015e1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8015e0a:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8015e0e:	9019      	str	r0, [sp, #100]	; 0x64
 8015e10:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8015e14:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8015e18:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8015e1c:	911d      	str	r1, [sp, #116]	; 0x74
 8015e1e:	1ad2      	subs	r2, r2, r3
 8015e20:	e68b      	b.n	8015b3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015e22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015e24:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8015e26:	2b00      	cmp	r3, #0
 8015e28:	f000 80d1 	beq.w	8015fce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8015e2c:	ad19      	add	r5, sp, #100	; 0x64
 8015e2e:	ac39      	add	r4, sp, #228	; 0xe4
 8015e30:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015e32:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8015e36:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8015e3a:	930c      	str	r3, [sp, #48]	; 0x30
 8015e3c:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015e3e:	6963      	ldr	r3, [r4, #20]
 8015e40:	440b      	add	r3, r1
 8015e42:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8015e46:	4408      	add	r0, r1
 8015e48:	b200      	sxth	r0, r0
 8015e4a:	4283      	cmp	r3, r0
 8015e4c:	900d      	str	r0, [sp, #52]	; 0x34
 8015e4e:	f280 80c1 	bge.w	8015fd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8015e52:	428b      	cmp	r3, r1
 8015e54:	da08      	bge.n	8015e68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015e56:	2a00      	cmp	r2, #0
 8015e58:	dd06      	ble.n	8015e68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015e5a:	1acb      	subs	r3, r1, r3
 8015e5c:	429a      	cmp	r2, r3
 8015e5e:	f2c0 80bb 	blt.w	8015fd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8015e62:	2b00      	cmp	r3, #0
 8015e64:	f300 80b9 	bgt.w	8015fda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8015e68:	6967      	ldr	r7, [r4, #20]
 8015e6a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015e6c:	443b      	add	r3, r7
 8015e6e:	461f      	mov	r7, r3
 8015e70:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015e72:	1bdf      	subs	r7, r3, r7
 8015e74:	4297      	cmp	r7, r2
 8015e76:	bfa8      	it	ge
 8015e78:	4617      	movge	r7, r2
 8015e7a:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8015e7e:	2f00      	cmp	r7, #0
 8015e80:	f340 813c 	ble.w	80160fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8015e84:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015e86:	6829      	ldr	r1, [r5, #0]
 8015e88:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015e8c:	f9bb 3000 	ldrsh.w	r3, [fp]
 8015e90:	6820      	ldr	r0, [r4, #0]
 8015e92:	4411      	add	r1, r2
 8015e94:	4299      	cmp	r1, r3
 8015e96:	dd1a      	ble.n	8015ece <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8015e98:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8015e9c:	440b      	add	r3, r1
 8015e9e:	4402      	add	r2, r0
 8015ea0:	b21b      	sxth	r3, r3
 8015ea2:	429a      	cmp	r2, r3
 8015ea4:	dc13      	bgt.n	8015ece <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8015ea6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015ea8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015eaa:	681b      	ldr	r3, [r3, #0]
 8015eac:	9206      	str	r2, [sp, #24]
 8015eae:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015eb0:	9205      	str	r2, [sp, #20]
 8015eb2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015eb4:	9500      	str	r5, [sp, #0]
 8015eb6:	e9cd b203 	strd	fp, r2, [sp, #12]
 8015eba:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8015ebc:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015ebe:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8015ec2:	a912      	add	r1, sp, #72	; 0x48
 8015ec4:	f8d3 9040 	ldr.w	r9, [r3, #64]	; 0x40
 8015ec8:	aa49      	add	r2, sp, #292	; 0x124
 8015eca:	4623      	mov	r3, r4
 8015ecc:	47c8      	blx	r9
 8015ece:	e9d4 2300 	ldrd	r2, r3, [r4]
 8015ed2:	441a      	add	r2, r3
 8015ed4:	6963      	ldr	r3, [r4, #20]
 8015ed6:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8015eda:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8015ede:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8015ee2:	68a1      	ldr	r1, [r4, #8]
 8015ee4:	ed94 6a08 	vldr	s12, [r4, #32]
 8015ee8:	6022      	str	r2, [r4, #0]
 8015eea:	3301      	adds	r3, #1
 8015eec:	6163      	str	r3, [r4, #20]
 8015eee:	69a3      	ldr	r3, [r4, #24]
 8015ef0:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015ef4:	3b01      	subs	r3, #1
 8015ef6:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8015efa:	61a3      	str	r3, [r4, #24]
 8015efc:	6923      	ldr	r3, [r4, #16]
 8015efe:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8015f02:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015f06:	edd4 6a07 	vldr	s13, [r4, #28]
 8015f0a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8015f0e:	440b      	add	r3, r1
 8015f10:	68e1      	ldr	r1, [r4, #12]
 8015f12:	6123      	str	r3, [r4, #16]
 8015f14:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015f18:	428b      	cmp	r3, r1
 8015f1a:	edc4 6a07 	vstr	s13, [r4, #28]
 8015f1e:	db15      	blt.n	8015f4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8015f20:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8015f24:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015f28:	3201      	adds	r2, #1
 8015f2a:	edc4 6a07 	vstr	s13, [r4, #28]
 8015f2e:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8015f32:	6022      	str	r2, [r4, #0]
 8015f34:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015f38:	1a5b      	subs	r3, r3, r1
 8015f3a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8015f3e:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8015f42:	6123      	str	r3, [r4, #16]
 8015f44:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015f48:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8015f4c:	e9d5 2300 	ldrd	r2, r3, [r5]
 8015f50:	441a      	add	r2, r3
 8015f52:	696b      	ldr	r3, [r5, #20]
 8015f54:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8015f58:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8015f5c:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8015f60:	68a9      	ldr	r1, [r5, #8]
 8015f62:	ed95 6a08 	vldr	s12, [r5, #32]
 8015f66:	602a      	str	r2, [r5, #0]
 8015f68:	3301      	adds	r3, #1
 8015f6a:	616b      	str	r3, [r5, #20]
 8015f6c:	69ab      	ldr	r3, [r5, #24]
 8015f6e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015f72:	3b01      	subs	r3, #1
 8015f74:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8015f78:	61ab      	str	r3, [r5, #24]
 8015f7a:	692b      	ldr	r3, [r5, #16]
 8015f7c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8015f80:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015f84:	edd5 6a07 	vldr	s13, [r5, #28]
 8015f88:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8015f8c:	440b      	add	r3, r1
 8015f8e:	68e9      	ldr	r1, [r5, #12]
 8015f90:	612b      	str	r3, [r5, #16]
 8015f92:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015f96:	428b      	cmp	r3, r1
 8015f98:	edc5 6a07 	vstr	s13, [r5, #28]
 8015f9c:	db15      	blt.n	8015fca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8015f9e:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8015fa2:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015fa6:	3201      	adds	r2, #1
 8015fa8:	edc5 6a07 	vstr	s13, [r5, #28]
 8015fac:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8015fb0:	602a      	str	r2, [r5, #0]
 8015fb2:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015fb6:	1a5b      	subs	r3, r3, r1
 8015fb8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8015fbc:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8015fc0:	612b      	str	r3, [r5, #16]
 8015fc2:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015fc6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8015fca:	3f01      	subs	r7, #1
 8015fcc:	e757      	b.n	8015e7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8015fce:	ad39      	add	r5, sp, #228	; 0xe4
 8015fd0:	ac19      	add	r4, sp, #100	; 0x64
 8015fd2:	e72d      	b.n	8015e30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8015fd4:	4613      	mov	r3, r2
 8015fd6:	e744      	b.n	8015e62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8015fd8:	4613      	mov	r3, r2
 8015fda:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8015fde:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8015fe0:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8015fe4:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8015fe8:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8015fec:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8015ff0:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8015ff4:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8015ff8:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8015ffc:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8015ffe:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8016002:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8016006:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 801600a:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 801600e:	960e      	str	r6, [sp, #56]	; 0x38
 8016010:	469e      	mov	lr, r3
 8016012:	461f      	mov	r7, r3
 8016014:	f04f 0900 	mov.w	r9, #0
 8016018:	2f00      	cmp	r7, #0
 801601a:	d146      	bne.n	80160aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 801601c:	449c      	add	ip, r3
 801601e:	1ad7      	subs	r7, r2, r3
 8016020:	f1b9 0f00 	cmp.w	r9, #0
 8016024:	d009      	beq.n	801603a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8016026:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 801602a:	9039      	str	r0, [sp, #228]	; 0xe4
 801602c:	913d      	str	r1, [sp, #244]	; 0xf4
 801602e:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8016032:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8016036:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 801603a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801603c:	910e      	str	r1, [sp, #56]	; 0x38
 801603e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8016042:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8016046:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801604a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801604e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8016052:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8016056:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801605a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801605e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8016062:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8016066:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801606a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801606e:	f04f 0800 	mov.w	r8, #0
 8016072:	f1be 0f00 	cmp.w	lr, #0
 8016076:	d030      	beq.n	80160da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8016078:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801607a:	4431      	add	r1, r6
 801607c:	4549      	cmp	r1, r9
 801607e:	4450      	add	r0, sl
 8016080:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8016084:	ee37 7a04 	vadd.f32	s14, s14, s8
 8016088:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801608c:	db08      	blt.n	80160a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 801608e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8016092:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8016096:	ee37 7a06 	vadd.f32	s14, s14, s12
 801609a:	3001      	adds	r0, #1
 801609c:	eba1 0109 	sub.w	r1, r1, r9
 80160a0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80160a4:	f04f 0801 	mov.w	r8, #1
 80160a8:	e7e3      	b.n	8016072 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 80160aa:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80160ac:	4431      	add	r1, r6
 80160ae:	4541      	cmp	r1, r8
 80160b0:	4450      	add	r0, sl
 80160b2:	ee37 7a24 	vadd.f32	s14, s14, s9
 80160b6:	ee77 7a84 	vadd.f32	s15, s15, s8
 80160ba:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80160be:	db08      	blt.n	80160d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 80160c0:	ee76 6a85 	vadd.f32	s13, s13, s10
 80160c4:	ee37 7a25 	vadd.f32	s14, s14, s11
 80160c8:	ee77 7a86 	vadd.f32	s15, s15, s12
 80160cc:	3001      	adds	r0, #1
 80160ce:	eba1 0108 	sub.w	r1, r1, r8
 80160d2:	3f01      	subs	r7, #1
 80160d4:	f04f 0901 	mov.w	r9, #1
 80160d8:	e79e      	b.n	8016018 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 80160da:	449c      	add	ip, r3
 80160dc:	1aff      	subs	r7, r7, r3
 80160de:	f1b8 0f00 	cmp.w	r8, #0
 80160e2:	d009      	beq.n	80160f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 80160e4:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80160e8:	9019      	str	r0, [sp, #100]	; 0x64
 80160ea:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80160ee:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80160f2:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80160f6:	911d      	str	r1, [sp, #116]	; 0x74
 80160f8:	1ad2      	subs	r2, r2, r3
 80160fa:	e6b5      	b.n	8015e68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80160fc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80160fe:	681b      	ldr	r3, [r3, #0]
 8016100:	b923      	cbnz	r3, 801610c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8016102:	4b04      	ldr	r3, [pc, #16]	; (8016114 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8016104:	6818      	ldr	r0, [r3, #0]
 8016106:	6803      	ldr	r3, [r0, #0]
 8016108:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801610a:	4798      	blx	r3
 801610c:	b05b      	add	sp, #364	; 0x16c
 801610e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016112:	bf00      	nop
 8016114:	2002bd34 	.word	0x2002bd34

08016118 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 8016118:	b570      	push	{r4, r5, r6, lr}
 801611a:	4604      	mov	r4, r0
 801611c:	2500      	movs	r5, #0
 801611e:	7223      	strb	r3, [r4, #8]
 8016120:	9804      	ldr	r0, [sp, #16]
 8016122:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8016126:	8025      	strh	r5, [r4, #0]
 8016128:	6061      	str	r1, [r4, #4]
 801612a:	7263      	strb	r3, [r4, #9]
 801612c:	60e0      	str	r0, [r4, #12]
 801612e:	8222      	strh	r2, [r4, #16]
 8016130:	8265      	strh	r5, [r4, #18]
 8016132:	82a5      	strh	r5, [r4, #20]
 8016134:	82e5      	strh	r5, [r4, #22]
 8016136:	8325      	strh	r5, [r4, #24]
 8016138:	8365      	strh	r5, [r4, #26]
 801613a:	83a5      	strh	r5, [r4, #28]
 801613c:	77a5      	strb	r5, [r4, #30]
 801613e:	6803      	ldr	r3, [r0, #0]
 8016140:	695b      	ldr	r3, [r3, #20]
 8016142:	4798      	blx	r3
 8016144:	4606      	mov	r6, r0
 8016146:	b1f8      	cbz	r0, 8016188 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 8016148:	68e0      	ldr	r0, [r4, #12]
 801614a:	6803      	ldr	r3, [r0, #0]
 801614c:	4631      	mov	r1, r6
 801614e:	68db      	ldr	r3, [r3, #12]
 8016150:	4798      	blx	r3
 8016152:	7b43      	ldrb	r3, [r0, #13]
 8016154:	7a82      	ldrb	r2, [r0, #10]
 8016156:	005b      	lsls	r3, r3, #1
 8016158:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801615c:	4313      	orrs	r3, r2
 801615e:	83a3      	strh	r3, [r4, #28]
 8016160:	7a63      	ldrb	r3, [r4, #9]
 8016162:	2b04      	cmp	r3, #4
 8016164:	4605      	mov	r5, r0
 8016166:	d10f      	bne.n	8016188 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 8016168:	68e0      	ldr	r0, [r4, #12]
 801616a:	6803      	ldr	r3, [r0, #0]
 801616c:	462a      	mov	r2, r5
 801616e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016170:	4631      	mov	r1, r6
 8016172:	4798      	blx	r3
 8016174:	7b6b      	ldrb	r3, [r5, #13]
 8016176:	005b      	lsls	r3, r3, #1
 8016178:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801617c:	7aab      	ldrb	r3, [r5, #10]
 801617e:	4313      	orrs	r3, r2
 8016180:	4418      	add	r0, r3
 8016182:	8ba3      	ldrh	r3, [r4, #28]
 8016184:	4418      	add	r0, r3
 8016186:	83a0      	strh	r0, [r4, #28]
 8016188:	4620      	mov	r0, r4
 801618a:	bd70      	pop	{r4, r5, r6, pc}

0801618c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 801618c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016190:	2400      	movs	r4, #0
 8016192:	b085      	sub	sp, #20
 8016194:	4681      	mov	r9, r0
 8016196:	4688      	mov	r8, r1
 8016198:	4692      	mov	sl, r2
 801619a:	469b      	mov	fp, r3
 801619c:	4627      	mov	r7, r4
 801619e:	4625      	mov	r5, r4
 80161a0:	4626      	mov	r6, r4
 80161a2:	4554      	cmp	r4, sl
 80161a4:	da2a      	bge.n	80161fc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80161a6:	2300      	movs	r3, #0
 80161a8:	9303      	str	r3, [sp, #12]
 80161aa:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80161ae:	429d      	cmp	r5, r3
 80161b0:	d004      	beq.n	80161bc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 80161b2:	f242 030b 	movw	r3, #8203	; 0x200b
 80161b6:	429d      	cmp	r5, r3
 80161b8:	bf18      	it	ne
 80161ba:	462f      	movne	r7, r5
 80161bc:	ab03      	add	r3, sp, #12
 80161be:	4642      	mov	r2, r8
 80161c0:	4659      	mov	r1, fp
 80161c2:	4648      	mov	r0, r9
 80161c4:	f003 ff8e 	bl	801a0e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80161c8:	4605      	mov	r5, r0
 80161ca:	b1b8      	cbz	r0, 80161fc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80161cc:	280a      	cmp	r0, #10
 80161ce:	d015      	beq.n	80161fc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80161d0:	9a03      	ldr	r2, [sp, #12]
 80161d2:	b18a      	cbz	r2, 80161f8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 80161d4:	7b50      	ldrb	r0, [r2, #13]
 80161d6:	7a93      	ldrb	r3, [r2, #10]
 80161d8:	8895      	ldrh	r5, [r2, #4]
 80161da:	0040      	lsls	r0, r0, #1
 80161dc:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80161e0:	4303      	orrs	r3, r0
 80161e2:	9301      	str	r3, [sp, #4]
 80161e4:	f8d8 3000 	ldr.w	r3, [r8]
 80161e8:	4639      	mov	r1, r7
 80161ea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80161ec:	4640      	mov	r0, r8
 80161ee:	4798      	blx	r3
 80161f0:	9b01      	ldr	r3, [sp, #4]
 80161f2:	4418      	add	r0, r3
 80161f4:	4406      	add	r6, r0
 80161f6:	b2b6      	uxth	r6, r6
 80161f8:	3401      	adds	r4, #1
 80161fa:	e7d2      	b.n	80161a2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 80161fc:	4630      	mov	r0, r6
 80161fe:	b005      	add	sp, #20
 8016200:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016204 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8016204:	2a02      	cmp	r2, #2
 8016206:	b530      	push	{r4, r5, lr}
 8016208:	d011      	beq.n	801622e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 801620a:	2a03      	cmp	r2, #3
 801620c:	d01c      	beq.n	8016248 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 801620e:	2a01      	cmp	r2, #1
 8016210:	d10c      	bne.n	801622c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8016212:	888b      	ldrh	r3, [r1, #4]
 8016214:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8016218:	8801      	ldrh	r1, [r0, #0]
 801621a:	8844      	ldrh	r4, [r0, #2]
 801621c:	8004      	strh	r4, [r0, #0]
 801621e:	1a9b      	subs	r3, r3, r2
 8016220:	1a5b      	subs	r3, r3, r1
 8016222:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8016226:	8043      	strh	r3, [r0, #2]
 8016228:	8081      	strh	r1, [r0, #4]
 801622a:	80c2      	strh	r2, [r0, #6]
 801622c:	bd30      	pop	{r4, r5, pc}
 801622e:	88cb      	ldrh	r3, [r1, #6]
 8016230:	88c2      	ldrh	r2, [r0, #6]
 8016232:	1a9b      	subs	r3, r3, r2
 8016234:	8842      	ldrh	r2, [r0, #2]
 8016236:	1a9b      	subs	r3, r3, r2
 8016238:	888a      	ldrh	r2, [r1, #4]
 801623a:	8881      	ldrh	r1, [r0, #4]
 801623c:	8043      	strh	r3, [r0, #2]
 801623e:	1a52      	subs	r2, r2, r1
 8016240:	8801      	ldrh	r1, [r0, #0]
 8016242:	1a52      	subs	r2, r2, r1
 8016244:	8002      	strh	r2, [r0, #0]
 8016246:	e7f1      	b.n	801622c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8016248:	88cb      	ldrh	r3, [r1, #6]
 801624a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 801624e:	8841      	ldrh	r1, [r0, #2]
 8016250:	f9b0 5000 	ldrsh.w	r5, [r0]
 8016254:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8016258:	8045      	strh	r5, [r0, #2]
 801625a:	1a9b      	subs	r3, r3, r2
 801625c:	1a5b      	subs	r3, r3, r1
 801625e:	8003      	strh	r3, [r0, #0]
 8016260:	8082      	strh	r2, [r0, #4]
 8016262:	80c4      	strh	r4, [r0, #6]
 8016264:	e7e2      	b.n	801622c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08016266 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8016266:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801626a:	b09f      	sub	sp, #124	; 0x7c
 801626c:	9116      	str	r1, [sp, #88]	; 0x58
 801626e:	9317      	str	r3, [sp, #92]	; 0x5c
 8016270:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8016272:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016274:	8809      	ldrh	r1, [r1, #0]
 8016276:	889b      	ldrh	r3, [r3, #4]
 8016278:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 801627c:	9212      	str	r2, [sp, #72]	; 0x48
 801627e:	440b      	add	r3, r1
 8016280:	b21b      	sxth	r3, r3
 8016282:	9310      	str	r3, [sp, #64]	; 0x40
 8016284:	f8d8 3000 	ldr.w	r3, [r8]
 8016288:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 801628c:	7a59      	ldrb	r1, [r3, #9]
 801628e:	7a1b      	ldrb	r3, [r3, #8]
 8016290:	9315      	str	r3, [sp, #84]	; 0x54
 8016292:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016294:	9011      	str	r0, [sp, #68]	; 0x44
 8016296:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 801629a:	9114      	str	r1, [sp, #80]	; 0x50
 801629c:	f9b3 5000 	ldrsh.w	r5, [r3]
 80162a0:	2a00      	cmp	r2, #0
 80162a2:	d067      	beq.n	8016374 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10e>
 80162a4:	f898 3010 	ldrb.w	r3, [r8, #16]
 80162a8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80162aa:	2b04      	cmp	r3, #4
 80162ac:	bf14      	ite	ne
 80162ae:	2301      	movne	r3, #1
 80162b0:	2302      	moveq	r3, #2
 80162b2:	4413      	add	r3, r2
 80162b4:	f04f 0900 	mov.w	r9, #0
 80162b8:	930f      	str	r3, [sp, #60]	; 0x3c
 80162ba:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80162be:	464c      	mov	r4, r9
 80162c0:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 80162c4:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 80162c8:	4293      	cmp	r3, r2
 80162ca:	f280 808c 	bge.w	80163e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 80162ce:	2300      	movs	r3, #0
 80162d0:	931c      	str	r3, [sp, #112]	; 0x70
 80162d2:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80162d6:	429c      	cmp	r4, r3
 80162d8:	d006      	beq.n	80162e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x82>
 80162da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80162dc:	f242 020b 	movw	r2, #8203	; 0x200b
 80162e0:	4294      	cmp	r4, r2
 80162e2:	bf18      	it	ne
 80162e4:	4623      	movne	r3, r4
 80162e6:	930d      	str	r3, [sp, #52]	; 0x34
 80162e8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80162ea:	992d      	ldr	r1, [sp, #180]	; 0xb4
 80162ec:	f8d8 2000 	ldr.w	r2, [r8]
 80162f0:	428b      	cmp	r3, r1
 80162f2:	db41      	blt.n	8016378 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 80162f4:	6813      	ldr	r3, [r2, #0]
 80162f6:	4610      	mov	r0, r2
 80162f8:	695b      	ldr	r3, [r3, #20]
 80162fa:	4798      	blx	r3
 80162fc:	4604      	mov	r4, r0
 80162fe:	f8d8 0000 	ldr.w	r0, [r8]
 8016302:	6803      	ldr	r3, [r0, #0]
 8016304:	aa1d      	add	r2, sp, #116	; 0x74
 8016306:	689e      	ldr	r6, [r3, #8]
 8016308:	4621      	mov	r1, r4
 801630a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 801630e:	47b0      	blx	r6
 8016310:	901c      	str	r0, [sp, #112]	; 0x70
 8016312:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8016316:	429c      	cmp	r4, r3
 8016318:	f000 80e9 	beq.w	80164ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 801631c:	f242 030b 	movw	r3, #8203	; 0x200b
 8016320:	429c      	cmp	r4, r3
 8016322:	f000 80e4 	beq.w	80164ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8016326:	2c00      	cmp	r4, #0
 8016328:	f000 80f6 	beq.w	8016518 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 801632c:	2c0a      	cmp	r4, #10
 801632e:	d060      	beq.n	80163f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8016330:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8016332:	b36a      	cbz	r2, 8016390 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12a>
 8016334:	8894      	ldrh	r4, [r2, #4]
 8016336:	f1bb 0f00 	cmp.w	fp, #0
 801633a:	d03b      	beq.n	80163b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 801633c:	f892 900d 	ldrb.w	r9, [r2, #13]
 8016340:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8016344:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8016348:	f892 900a 	ldrb.w	r9, [r2, #10]
 801634c:	f1bb 0f01 	cmp.w	fp, #1
 8016350:	ea49 0903 	orr.w	r9, r9, r3
 8016354:	d134      	bne.n	80163c0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15a>
 8016356:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016358:	eba5 0509 	sub.w	r5, r5, r9
 801635c:	2b00      	cmp	r3, #0
 801635e:	d14f      	bne.n	8016400 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 8016360:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016362:	eb09 0305 	add.w	r3, r9, r5
 8016366:	4413      	add	r3, r2
 8016368:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801636a:	f9b2 2000 	ldrsh.w	r2, [r2]
 801636e:	4293      	cmp	r3, r2
 8016370:	da51      	bge.n	8016416 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 8016372:	e038      	b.n	80163e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 8016374:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016376:	e79d      	b.n	80162b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4e>
 8016378:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 801637c:	9301      	str	r3, [sp, #4]
 801637e:	ab1d      	add	r3, sp, #116	; 0x74
 8016380:	9300      	str	r3, [sp, #0]
 8016382:	4659      	mov	r1, fp
 8016384:	ab1c      	add	r3, sp, #112	; 0x70
 8016386:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8016388:	f003 ff04 	bl	801a194 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 801638c:	4604      	mov	r4, r0
 801638e:	e7c0      	b.n	8016312 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 8016390:	f8d8 0000 	ldr.w	r0, [r8]
 8016394:	6803      	ldr	r3, [r0, #0]
 8016396:	691b      	ldr	r3, [r3, #16]
 8016398:	4798      	blx	r3
 801639a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801639e:	4298      	cmp	r0, r3
 80163a0:	f000 80a5 	beq.w	80164ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 80163a4:	f242 030b 	movw	r3, #8203	; 0x200b
 80163a8:	4298      	cmp	r0, r3
 80163aa:	f000 80a0 	beq.w	80164ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 80163ae:	f1bb 0f00 	cmp.w	fp, #0
 80163b2:	d100      	bne.n	80163b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 80163b4:	444d      	add	r5, r9
 80163b6:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80163b8:	2a00      	cmp	r2, #0
 80163ba:	d1bf      	bne.n	801633c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd6>
 80163bc:	4691      	mov	r9, r2
 80163be:	e096      	b.n	80164ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 80163c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80163c2:	2b00      	cmp	r3, #0
 80163c4:	f000 80aa 	beq.w	801651c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 80163c8:	f1bb 0f00 	cmp.w	fp, #0
 80163cc:	d118      	bne.n	8016400 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 80163ce:	f8d8 0000 	ldr.w	r0, [r8]
 80163d2:	990d      	ldr	r1, [sp, #52]	; 0x34
 80163d4:	6803      	ldr	r3, [r0, #0]
 80163d6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80163d8:	4798      	blx	r3
 80163da:	4405      	add	r5, r0
 80163dc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80163de:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80163e0:	1aeb      	subs	r3, r5, r3
 80163e2:	4293      	cmp	r3, r2
 80163e4:	dd17      	ble.n	8016416 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 80163e6:	2c00      	cmp	r4, #0
 80163e8:	f000 8096 	beq.w	8016518 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 80163ec:	2c0a      	cmp	r4, #10
 80163ee:	f040 8084 	bne.w	80164fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 80163f2:	240a      	movs	r4, #10
 80163f4:	fab4 f084 	clz	r0, r4
 80163f8:	0940      	lsrs	r0, r0, #5
 80163fa:	b01f      	add	sp, #124	; 0x7c
 80163fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016400:	f8d8 0000 	ldr.w	r0, [r8]
 8016404:	990d      	ldr	r1, [sp, #52]	; 0x34
 8016406:	6803      	ldr	r3, [r0, #0]
 8016408:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801640a:	4798      	blx	r3
 801640c:	f1bb 0f01 	cmp.w	fp, #1
 8016410:	eba5 0500 	sub.w	r5, r5, r0
 8016414:	d0a4      	beq.n	8016360 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfa>
 8016416:	981c      	ldr	r0, [sp, #112]	; 0x70
 8016418:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801641a:	f990 1009 	ldrsb.w	r1, [r0, #9]
 801641e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8016422:	7b43      	ldrb	r3, [r0, #13]
 8016424:	015b      	lsls	r3, r3, #5
 8016426:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801642a:	7983      	ldrb	r3, [r0, #6]
 801642c:	4429      	add	r1, r5
 801642e:	4313      	orrs	r3, r2
 8016430:	440b      	add	r3, r1
 8016432:	42b3      	cmp	r3, r6
 8016434:	db5b      	blt.n	80164ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8016436:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016438:	4299      	cmp	r1, r3
 801643a:	da58      	bge.n	80164ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 801643c:	f8d8 0000 	ldr.w	r0, [r8]
 8016440:	6803      	ldr	r3, [r0, #0]
 8016442:	42ae      	cmp	r6, r5
 8016444:	bfc8      	it	gt
 8016446:	1b76      	subgt	r6, r6, r5
 8016448:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801644a:	bfcc      	ite	gt
 801644c:	b2b6      	uxthgt	r6, r6
 801644e:	2600      	movle	r6, #0
 8016450:	4798      	blx	r3
 8016452:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8016454:	7b5a      	ldrb	r2, [r3, #13]
 8016456:	00d1      	lsls	r1, r2, #3
 8016458:	f401 7780 	and.w	r7, r1, #256	; 0x100
 801645c:	7a19      	ldrb	r1, [r3, #8]
 801645e:	4339      	orrs	r1, r7
 8016460:	0657      	lsls	r7, r2, #25
 8016462:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 8016464:	bf44      	itt	mi
 8016466:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 801646a:	b209      	sxthmi	r1, r1
 801646c:	19c7      	adds	r7, r0, r7
 801646e:	1a7f      	subs	r7, r7, r1
 8016470:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8016472:	b2bf      	uxth	r7, r7
 8016474:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8016478:	fa0f fa87 	sxth.w	sl, r7
 801647c:	4551      	cmp	r1, sl
 801647e:	dd3a      	ble.n	80164f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8016480:	0112      	lsls	r2, r2, #4
 8016482:	79d8      	ldrb	r0, [r3, #7]
 8016484:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8016488:	4302      	orrs	r2, r0
 801648a:	4492      	add	sl, r2
 801648c:	4551      	cmp	r1, sl
 801648e:	dc2e      	bgt.n	80164ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8016490:	1bcf      	subs	r7, r1, r7
 8016492:	b2bf      	uxth	r7, r7
 8016494:	468a      	mov	sl, r1
 8016496:	9319      	str	r3, [sp, #100]	; 0x64
 8016498:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801649a:	f8d8 0000 	ldr.w	r0, [r8]
 801649e:	681a      	ldr	r2, [r3, #0]
 80164a0:	6801      	ldr	r1, [r0, #0]
 80164a2:	6c53      	ldr	r3, [r2, #68]	; 0x44
 80164a4:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80164a6:	9313      	str	r3, [sp, #76]	; 0x4c
 80164a8:	9218      	str	r2, [sp, #96]	; 0x60
 80164aa:	6b89      	ldr	r1, [r1, #56]	; 0x38
 80164ac:	4788      	blx	r1
 80164ae:	f898 1006 	ldrb.w	r1, [r8, #6]
 80164b2:	910b      	str	r1, [sp, #44]	; 0x2c
 80164b4:	f898 100e 	ldrb.w	r1, [r8, #14]
 80164b8:	910a      	str	r1, [sp, #40]	; 0x28
 80164ba:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 80164be:	9109      	str	r1, [sp, #36]	; 0x24
 80164c0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80164c2:	f8d8 1008 	ldr.w	r1, [r8, #8]
 80164c6:	9305      	str	r3, [sp, #20]
 80164c8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80164ca:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80164cc:	9206      	str	r2, [sp, #24]
 80164ce:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80164d2:	e9cd 7303 	strd	r7, r3, [sp, #12]
 80164d6:	e9cd a601 	strd	sl, r6, [sp, #4]
 80164da:	442e      	add	r6, r5
 80164dc:	b236      	sxth	r6, r6
 80164de:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80164e0:	9600      	str	r6, [sp, #0]
 80164e2:	681a      	ldr	r2, [r3, #0]
 80164e4:	9916      	ldr	r1, [sp, #88]	; 0x58
 80164e6:	685b      	ldr	r3, [r3, #4]
 80164e8:	9811      	ldr	r0, [sp, #68]	; 0x44
 80164ea:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80164ec:	47b0      	blx	r6
 80164ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80164f0:	3301      	adds	r3, #1
 80164f2:	930e      	str	r3, [sp, #56]	; 0x38
 80164f4:	e6e6      	b.n	80162c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5e>
 80164f6:	2700      	movs	r7, #0
 80164f8:	e7cd      	b.n	8016496 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x230>
 80164fa:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80164fc:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80164fe:	3501      	adds	r5, #1
 8016500:	429d      	cmp	r5, r3
 8016502:	f6bf af77 	bge.w	80163f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 8016506:	4659      	mov	r1, fp
 8016508:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801650a:	f7f2 fae1 	bl	8008ad0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801650e:	4604      	mov	r4, r0
 8016510:	b110      	cbz	r0, 8016518 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 8016512:	280a      	cmp	r0, #10
 8016514:	d1f2      	bne.n	80164fc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 8016516:	e76c      	b.n	80163f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8016518:	2400      	movs	r4, #0
 801651a:	e76b      	b.n	80163f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 801651c:	f1bb 0f00 	cmp.w	fp, #0
 8016520:	f43f af5c 	beq.w	80163dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 8016524:	e777      	b.n	8016416 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>

08016526 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>:
 8016526:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801652a:	b089      	sub	sp, #36	; 0x24
 801652c:	4699      	mov	r9, r3
 801652e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016530:	f8bd 4050 	ldrh.w	r4, [sp, #80]	; 0x50
 8016534:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8016536:	4683      	mov	fp, r0
 8016538:	460d      	mov	r5, r1
 801653a:	4690      	mov	r8, r2
 801653c:	bb0b      	cbnz	r3, 8016582 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x5c>
 801653e:	6813      	ldr	r3, [r2, #0]
 8016540:	4610      	mov	r0, r2
 8016542:	695b      	ldr	r3, [r3, #20]
 8016544:	4798      	blx	r3
 8016546:	4682      	mov	sl, r0
 8016548:	b1d8      	cbz	r0, 8016582 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x5c>
 801654a:	f8d8 3000 	ldr.w	r3, [r8]
 801654e:	4601      	mov	r1, r0
 8016550:	68db      	ldr	r3, [r3, #12]
 8016552:	4640      	mov	r0, r8
 8016554:	4798      	blx	r3
 8016556:	7b47      	ldrb	r7, [r0, #13]
 8016558:	007f      	lsls	r7, r7, #1
 801655a:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801655e:	7a87      	ldrb	r7, [r0, #10]
 8016560:	431f      	orrs	r7, r3
 8016562:	6933      	ldr	r3, [r6, #16]
 8016564:	7c1b      	ldrb	r3, [r3, #16]
 8016566:	443c      	add	r4, r7
 8016568:	2b04      	cmp	r3, #4
 801656a:	4602      	mov	r2, r0
 801656c:	b2a4      	uxth	r4, r4
 801656e:	d108      	bne.n	8016582 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x5c>
 8016570:	f8d8 3000 	ldr.w	r3, [r8]
 8016574:	4651      	mov	r1, sl
 8016576:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016578:	4640      	mov	r0, r8
 801657a:	4798      	blx	r3
 801657c:	4438      	add	r0, r7
 801657e:	4404      	add	r4, r0
 8016580:	b2a4      	uxth	r4, r4
 8016582:	6933      	ldr	r3, [r6, #16]
 8016584:	795b      	ldrb	r3, [r3, #5]
 8016586:	bb3b      	cbnz	r3, 80165d8 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xb2>
 8016588:	f1b9 0f01 	cmp.w	r9, #1
 801658c:	d102      	bne.n	8016594 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x6e>
 801658e:	882b      	ldrh	r3, [r5, #0]
 8016590:	4423      	add	r3, r4
 8016592:	802b      	strh	r3, [r5, #0]
 8016594:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016596:	f9b6 3008 	ldrsh.w	r3, [r6, #8]
 801659a:	fab2 f282 	clz	r2, r2
 801659e:	0952      	lsrs	r2, r2, #5
 80165a0:	9206      	str	r2, [sp, #24]
 80165a2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80165a4:	9205      	str	r2, [sp, #20]
 80165a6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80165a8:	e9cd 9203 	strd	r9, r2, [sp, #12]
 80165ac:	6932      	ldr	r2, [r6, #16]
 80165ae:	9202      	str	r2, [sp, #8]
 80165b0:	68f2      	ldr	r2, [r6, #12]
 80165b2:	e9cd 5200 	strd	r5, r2, [sp]
 80165b6:	4658      	mov	r0, fp
 80165b8:	e9d6 1200 	ldrd	r1, r2, [r6]
 80165bc:	f7ff fe53 	bl	8016266 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 80165c0:	6933      	ldr	r3, [r6, #16]
 80165c2:	795b      	ldrb	r3, [r3, #5]
 80165c4:	b983      	cbnz	r3, 80165e8 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xc2>
 80165c6:	f1b9 0f00 	cmp.w	r9, #0
 80165ca:	d102      	bne.n	80165d2 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xac>
 80165cc:	8828      	ldrh	r0, [r5, #0]
 80165ce:	4404      	add	r4, r0
 80165d0:	802c      	strh	r4, [r5, #0]
 80165d2:	b009      	add	sp, #36	; 0x24
 80165d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80165d8:	2b01      	cmp	r3, #1
 80165da:	d1db      	bne.n	8016594 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x6e>
 80165dc:	f1b9 0f00 	cmp.w	r9, #0
 80165e0:	d1d8      	bne.n	8016594 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x6e>
 80165e2:	882b      	ldrh	r3, [r5, #0]
 80165e4:	1b1b      	subs	r3, r3, r4
 80165e6:	e7d4      	b.n	8016592 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x6c>
 80165e8:	2b01      	cmp	r3, #1
 80165ea:	d1f2      	bne.n	80165d2 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xac>
 80165ec:	f1b9 0f01 	cmp.w	r9, #1
 80165f0:	d1ef      	bne.n	80165d2 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xac>
 80165f2:	8828      	ldrh	r0, [r5, #0]
 80165f4:	1b04      	subs	r4, r0, r4
 80165f6:	e7eb      	b.n	80165d0 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xaa>

080165f8 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE>:
 80165f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80165fc:	b0a7      	sub	sp, #156	; 0x9c
 80165fe:	4689      	mov	r9, r1
 8016600:	9004      	str	r0, [sp, #16]
 8016602:	9309      	str	r3, [sp, #36]	; 0x24
 8016604:	4690      	mov	r8, r2
 8016606:	f89d 30c8 	ldrb.w	r3, [sp, #200]	; 0xc8
 801660a:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801660c:	930b      	str	r3, [sp, #44]	; 0x2c
 801660e:	2264      	movs	r2, #100	; 0x64
 8016610:	a80d      	add	r0, sp, #52	; 0x34
 8016612:	f011 fa55 	bl	8027ac0 <memcpy>
 8016616:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016618:	2300      	movs	r3, #0
 801661a:	930c      	str	r3, [sp, #48]	; 0x30
 801661c:	2a00      	cmp	r2, #0
 801661e:	f040 8149 	bne.w	80168b4 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2bc>
 8016622:	4693      	mov	fp, r2
 8016624:	9208      	str	r2, [sp, #32]
 8016626:	9206      	str	r2, [sp, #24]
 8016628:	4616      	mov	r6, r2
 801662a:	4617      	mov	r7, r2
 801662c:	9205      	str	r2, [sp, #20]
 801662e:	4614      	mov	r4, r2
 8016630:	9207      	str	r2, [sp, #28]
 8016632:	4692      	mov	sl, r2
 8016634:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8016636:	459b      	cmp	fp, r3
 8016638:	f280 80f0 	bge.w	801681c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x224>
 801663c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8016640:	459a      	cmp	sl, r3
 8016642:	d006      	beq.n	8016652 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5a>
 8016644:	9b07      	ldr	r3, [sp, #28]
 8016646:	f242 020b 	movw	r2, #8203	; 0x200b
 801664a:	4592      	cmp	sl, r2
 801664c:	bf18      	it	ne
 801664e:	4653      	movne	r3, sl
 8016650:	9307      	str	r3, [sp, #28]
 8016652:	4642      	mov	r2, r8
 8016654:	ab0c      	add	r3, sp, #48	; 0x30
 8016656:	2100      	movs	r1, #0
 8016658:	9830      	ldr	r0, [sp, #192]	; 0xc0
 801665a:	f003 fd43 	bl	801a0e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801665e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8016660:	4682      	mov	sl, r0
 8016662:	2a00      	cmp	r2, #0
 8016664:	d064      	beq.n	8016730 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x138>
 8016666:	7b55      	ldrb	r5, [r2, #13]
 8016668:	f8d8 3000 	ldr.w	r3, [r8]
 801666c:	9907      	ldr	r1, [sp, #28]
 801666e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016670:	f8b2 a004 	ldrh.w	sl, [r2, #4]
 8016674:	006d      	lsls	r5, r5, #1
 8016676:	f405 7080 	and.w	r0, r5, #256	; 0x100
 801667a:	7a95      	ldrb	r5, [r2, #10]
 801667c:	4305      	orrs	r5, r0
 801667e:	4640      	mov	r0, r8
 8016680:	4798      	blx	r3
 8016682:	4405      	add	r5, r0
 8016684:	b2ad      	uxth	r5, r5
 8016686:	f1ba 0f00 	cmp.w	sl, #0
 801668a:	f000 80c7 	beq.w	801681c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x224>
 801668e:	f1ba 0f0a 	cmp.w	sl, #10
 8016692:	f000 80c3 	beq.w	801681c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x224>
 8016696:	f1aa 0328 	sub.w	r3, sl, #40	; 0x28
 801669a:	b29b      	uxth	r3, r3
 801669c:	f02a 0120 	bic.w	r1, sl, #32
 80166a0:	2b01      	cmp	r3, #1
 80166a2:	b289      	uxth	r1, r1
 80166a4:	d946      	bls.n	8016734 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x13c>
 80166a6:	295b      	cmp	r1, #91	; 0x5b
 80166a8:	d044      	beq.n	8016734 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x13c>
 80166aa:	295d      	cmp	r1, #93	; 0x5d
 80166ac:	d042      	beq.n	8016734 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x13c>
 80166ae:	f02a 0202 	bic.w	r2, sl, #2
 80166b2:	b292      	uxth	r2, r2
 80166b4:	f1a2 033c 	sub.w	r3, r2, #60	; 0x3c
 80166b8:	425a      	negs	r2, r3
 80166ba:	415a      	adcs	r2, r3
 80166bc:	f1aa 0330 	sub.w	r3, sl, #48	; 0x30
 80166c0:	b29b      	uxth	r3, r3
 80166c2:	2b09      	cmp	r3, #9
 80166c4:	d938      	bls.n	8016738 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x140>
 80166c6:	f5aa 63cc 	sub.w	r3, sl, #1632	; 0x660
 80166ca:	b29b      	uxth	r3, r3
 80166cc:	2b09      	cmp	r3, #9
 80166ce:	bf8c      	ite	hi
 80166d0:	2300      	movhi	r3, #0
 80166d2:	2301      	movls	r3, #1
 80166d4:	f5aa 60b2 	sub.w	r0, sl, #1424	; 0x590
 80166d8:	b280      	uxth	r0, r0
 80166da:	f5b0 7fb8 	cmp.w	r0, #368	; 0x170
 80166de:	d305      	bcc.n	80166ec <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0xf4>
 80166e0:	f50a 6096 	add.w	r0, sl, #1200	; 0x4b0
 80166e4:	b280      	uxth	r0, r0
 80166e6:	f5b0 7f6c 	cmp.w	r0, #944	; 0x3b0
 80166ea:	d227      	bcs.n	801673c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x144>
 80166ec:	f083 0001 	eor.w	r0, r3, #1
 80166f0:	f64f 6cff 	movw	ip, #65279	; 0xfeff
 80166f4:	45e2      	cmp	sl, ip
 80166f6:	d023      	beq.n	8016740 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x148>
 80166f8:	f242 0c0b 	movw	ip, #8203	; 0x200b
 80166fc:	45e2      	cmp	sl, ip
 80166fe:	bf14      	ite	ne
 8016700:	f04f 0c00 	movne.w	ip, #0
 8016704:	f04f 0c01 	moveq.w	ip, #1
 8016708:	3941      	subs	r1, #65	; 0x41
 801670a:	2919      	cmp	r1, #25
 801670c:	d90a      	bls.n	8016724 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x12c>
 801670e:	f1ba 0f7f 	cmp.w	sl, #127	; 0x7f
 8016712:	f240 8256 	bls.w	8016bc2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5ca>
 8016716:	2800      	cmp	r0, #0
 8016718:	f040 8253 	bne.w	8016bc2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5ca>
 801671c:	f1bc 0f00 	cmp.w	ip, #0
 8016720:	f040 824f 	bne.w	8016bc2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5ca>
 8016724:	2f03      	cmp	r7, #3
 8016726:	d844      	bhi.n	80167b2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1ba>
 8016728:	e8df f007 	tbb	[pc, r7]
 801672c:	4c2d1813 	.word	0x4c2d1813
 8016730:	4615      	mov	r5, r2
 8016732:	e7a8      	b.n	8016686 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x8e>
 8016734:	2201      	movs	r2, #1
 8016736:	e7c1      	b.n	80166bc <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0xc4>
 8016738:	2301      	movs	r3, #1
 801673a:	e7cb      	b.n	80166d4 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0xdc>
 801673c:	2000      	movs	r0, #0
 801673e:	e7d7      	b.n	80166f0 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0xf8>
 8016740:	f04f 0c01 	mov.w	ip, #1
 8016744:	e7e0      	b.n	8016708 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x110>
 8016746:	2f03      	cmp	r7, #3
 8016748:	d833      	bhi.n	80167b2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1ba>
 801674a:	e8df f007 	tbb	[pc, r7]
 801674e:	0702      	.short	0x0702
 8016750:	3c1c      	.short	0x3c1c
 8016752:	462c      	mov	r4, r5
 8016754:	2601      	movs	r6, #1
 8016756:	b1a0      	cbz	r0, 8016782 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x18a>
 8016758:	2702      	movs	r7, #2
 801675a:	e02a      	b.n	80167b2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1ba>
 801675c:	b170      	cbz	r0, 801677c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x184>
 801675e:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8016760:	9601      	str	r6, [sp, #4]
 8016762:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8016766:	ab0d      	add	r3, sp, #52	; 0x34
 8016768:	9300      	str	r3, [sp, #0]
 801676a:	4642      	mov	r2, r8
 801676c:	2300      	movs	r3, #0
 801676e:	4649      	mov	r1, r9
 8016770:	9804      	ldr	r0, [sp, #16]
 8016772:	f7ff fed8 	bl	8016526 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8016776:	462c      	mov	r4, r5
 8016778:	2601      	movs	r6, #1
 801677a:	e7ed      	b.n	8016758 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x160>
 801677c:	442c      	add	r4, r5
 801677e:	3601      	adds	r6, #1
 8016780:	b2a4      	uxth	r4, r4
 8016782:	2701      	movs	r7, #1
 8016784:	e015      	b.n	80167b2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1ba>
 8016786:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8016788:	9601      	str	r6, [sp, #4]
 801678a:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801678e:	ab0d      	add	r3, sp, #52	; 0x34
 8016790:	9300      	str	r3, [sp, #0]
 8016792:	4642      	mov	r2, r8
 8016794:	2301      	movs	r3, #1
 8016796:	4649      	mov	r1, r9
 8016798:	9804      	ldr	r0, [sp, #16]
 801679a:	f7ff fec4 	bl	8016526 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 801679e:	462c      	mov	r4, r5
 80167a0:	2601      	movs	r6, #1
 80167a2:	e7ee      	b.n	8016782 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x18a>
 80167a4:	b910      	cbnz	r0, 80167ac <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1b4>
 80167a6:	f1bc 0f00 	cmp.w	ip, #0
 80167aa:	d033      	beq.n	8016814 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x21c>
 80167ac:	442c      	add	r4, r5
 80167ae:	3601      	adds	r6, #1
 80167b0:	b2a4      	uxth	r4, r4
 80167b2:	9b08      	ldr	r3, [sp, #32]
 80167b4:	2f01      	cmp	r7, #1
 80167b6:	bf08      	it	eq
 80167b8:	f043 0301 	orreq.w	r3, r3, #1
 80167bc:	9308      	str	r3, [sp, #32]
 80167be:	f10b 0b01 	add.w	fp, fp, #1
 80167c2:	e737      	b.n	8016634 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3c>
 80167c4:	2301      	movs	r3, #1
 80167c6:	9a06      	ldr	r2, [sp, #24]
 80167c8:	1c57      	adds	r7, r2, #1
 80167ca:	b140      	cbz	r0, 80167de <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1e6>
 80167cc:	9b05      	ldr	r3, [sp, #20]
 80167ce:	441c      	add	r4, r3
 80167d0:	fa15 f484 	uxtah	r4, r5, r4
 80167d4:	443e      	add	r6, r7
 80167d6:	b2a4      	uxth	r4, r4
 80167d8:	e7be      	b.n	8016758 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x160>
 80167da:	2300      	movs	r3, #0
 80167dc:	e7f3      	b.n	80167c6 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1ce>
 80167de:	b193      	cbz	r3, 8016806 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x20e>
 80167e0:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80167e2:	9601      	str	r6, [sp, #4]
 80167e4:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80167e8:	ab0d      	add	r3, sp, #52	; 0x34
 80167ea:	9300      	str	r3, [sp, #0]
 80167ec:	4642      	mov	r2, r8
 80167ee:	2301      	movs	r3, #1
 80167f0:	4649      	mov	r1, r9
 80167f2:	9804      	ldr	r0, [sp, #16]
 80167f4:	f7ff fe97 	bl	8016526 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 80167f8:	9b05      	ldr	r3, [sp, #20]
 80167fa:	441c      	add	r4, r3
 80167fc:	fa15 f484 	uxtah	r4, r5, r4
 8016800:	b2a4      	uxth	r4, r4
 8016802:	463e      	mov	r6, r7
 8016804:	e7bd      	b.n	8016782 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x18a>
 8016806:	9b05      	ldr	r3, [sp, #20]
 8016808:	442b      	add	r3, r5
 801680a:	b29b      	uxth	r3, r3
 801680c:	e9cd 3705 	strd	r3, r7, [sp, #20]
 8016810:	2703      	movs	r7, #3
 8016812:	e7ce      	b.n	80167b2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1ba>
 8016814:	2301      	movs	r3, #1
 8016816:	9505      	str	r5, [sp, #20]
 8016818:	9306      	str	r3, [sp, #24]
 801681a:	e7f9      	b.n	8016810 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x218>
 801681c:	2f01      	cmp	r7, #1
 801681e:	d106      	bne.n	801682e <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x236>
 8016820:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8016822:	9601      	str	r6, [sp, #4]
 8016824:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8016828:	ab0d      	add	r3, sp, #52	; 0x34
 801682a:	9300      	str	r3, [sp, #0]
 801682c:	e01f      	b.n	801686e <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x276>
 801682e:	2f02      	cmp	r7, #2
 8016830:	d106      	bne.n	8016840 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x248>
 8016832:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8016834:	9601      	str	r6, [sp, #4]
 8016836:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801683a:	ab0d      	add	r3, sp, #52	; 0x34
 801683c:	9300      	str	r3, [sp, #0]
 801683e:	e037      	b.n	80168b0 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2b8>
 8016840:	2f03      	cmp	r7, #3
 8016842:	d11a      	bne.n	801687a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x282>
 8016844:	9b08      	ldr	r3, [sp, #32]
 8016846:	af0d      	add	r7, sp, #52	; 0x34
 8016848:	b343      	cbz	r3, 801689c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2a4>
 801684a:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801684c:	9804      	ldr	r0, [sp, #16]
 801684e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8016852:	e9cd 7600 	strd	r7, r6, [sp]
 8016856:	2301      	movs	r3, #1
 8016858:	4642      	mov	r2, r8
 801685a:	4649      	mov	r1, r9
 801685c:	f7ff fe63 	bl	8016526 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8016860:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8016862:	9303      	str	r3, [sp, #12]
 8016864:	9b05      	ldr	r3, [sp, #20]
 8016866:	9302      	str	r3, [sp, #8]
 8016868:	9b06      	ldr	r3, [sp, #24]
 801686a:	e9cd 7300 	strd	r7, r3, [sp]
 801686e:	2300      	movs	r3, #0
 8016870:	4642      	mov	r2, r8
 8016872:	4649      	mov	r1, r9
 8016874:	9804      	ldr	r0, [sp, #16]
 8016876:	f7ff fe56 	bl	8016526 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 801687a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801687c:	b15b      	cbz	r3, 8016896 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x29e>
 801687e:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8016880:	9303      	str	r3, [sp, #12]
 8016882:	aa0d      	add	r2, sp, #52	; 0x34
 8016884:	2300      	movs	r3, #0
 8016886:	9200      	str	r2, [sp, #0]
 8016888:	e9cd 3301 	strd	r3, r3, [sp, #4]
 801688c:	4642      	mov	r2, r8
 801688e:	4649      	mov	r1, r9
 8016890:	9804      	ldr	r0, [sp, #16]
 8016892:	f7ff fe48 	bl	8016526 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8016896:	b027      	add	sp, #156	; 0x9c
 8016898:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801689c:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801689e:	9303      	str	r3, [sp, #12]
 80168a0:	9b05      	ldr	r3, [sp, #20]
 80168a2:	441c      	add	r4, r3
 80168a4:	9b06      	ldr	r3, [sp, #24]
 80168a6:	441e      	add	r6, r3
 80168a8:	e9cd 7600 	strd	r7, r6, [sp]
 80168ac:	b2a4      	uxth	r4, r4
 80168ae:	9402      	str	r4, [sp, #8]
 80168b0:	2301      	movs	r3, #1
 80168b2:	e7dd      	b.n	8016870 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x278>
 80168b4:	e9cd 3306 	strd	r3, r3, [sp, #24]
 80168b8:	9305      	str	r3, [sp, #20]
 80168ba:	461e      	mov	r6, r3
 80168bc:	461f      	mov	r7, r3
 80168be:	469b      	mov	fp, r3
 80168c0:	461c      	mov	r4, r3
 80168c2:	9308      	str	r3, [sp, #32]
 80168c4:	469a      	mov	sl, r3
 80168c6:	9b06      	ldr	r3, [sp, #24]
 80168c8:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 80168ca:	4293      	cmp	r3, r2
 80168cc:	f280 814e 	bge.w	8016b6c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x574>
 80168d0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80168d4:	459a      	cmp	sl, r3
 80168d6:	d006      	beq.n	80168e6 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2ee>
 80168d8:	9b08      	ldr	r3, [sp, #32]
 80168da:	f242 020b 	movw	r2, #8203	; 0x200b
 80168de:	4592      	cmp	sl, r2
 80168e0:	bf18      	it	ne
 80168e2:	4653      	movne	r3, sl
 80168e4:	9308      	str	r3, [sp, #32]
 80168e6:	4642      	mov	r2, r8
 80168e8:	ab0c      	add	r3, sp, #48	; 0x30
 80168ea:	9909      	ldr	r1, [sp, #36]	; 0x24
 80168ec:	9830      	ldr	r0, [sp, #192]	; 0xc0
 80168ee:	f003 fbf9 	bl	801a0e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80168f2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80168f4:	4682      	mov	sl, r0
 80168f6:	2a00      	cmp	r2, #0
 80168f8:	d067      	beq.n	80169ca <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3d2>
 80168fa:	7b53      	ldrb	r3, [r2, #13]
 80168fc:	9908      	ldr	r1, [sp, #32]
 80168fe:	f8b2 a004 	ldrh.w	sl, [r2, #4]
 8016902:	005b      	lsls	r3, r3, #1
 8016904:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8016908:	7a93      	ldrb	r3, [r2, #10]
 801690a:	ea43 0500 	orr.w	r5, r3, r0
 801690e:	f8d8 3000 	ldr.w	r3, [r8]
 8016912:	4640      	mov	r0, r8
 8016914:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016916:	4798      	blx	r3
 8016918:	4428      	add	r0, r5
 801691a:	b285      	uxth	r5, r0
 801691c:	f1ba 0f00 	cmp.w	sl, #0
 8016920:	f000 8124 	beq.w	8016b6c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x574>
 8016924:	f1ba 0f0a 	cmp.w	sl, #10
 8016928:	f000 8120 	beq.w	8016b6c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x574>
 801692c:	f1aa 0328 	sub.w	r3, sl, #40	; 0x28
 8016930:	b29b      	uxth	r3, r3
 8016932:	f02a 0220 	bic.w	r2, sl, #32
 8016936:	2b01      	cmp	r3, #1
 8016938:	b292      	uxth	r2, r2
 801693a:	d948      	bls.n	80169ce <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3d6>
 801693c:	2a5b      	cmp	r2, #91	; 0x5b
 801693e:	d046      	beq.n	80169ce <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3d6>
 8016940:	2a5d      	cmp	r2, #93	; 0x5d
 8016942:	d044      	beq.n	80169ce <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3d6>
 8016944:	f02a 0102 	bic.w	r1, sl, #2
 8016948:	b289      	uxth	r1, r1
 801694a:	f1a1 033c 	sub.w	r3, r1, #60	; 0x3c
 801694e:	4259      	negs	r1, r3
 8016950:	4159      	adcs	r1, r3
 8016952:	f1aa 0330 	sub.w	r3, sl, #48	; 0x30
 8016956:	b29b      	uxth	r3, r3
 8016958:	2b09      	cmp	r3, #9
 801695a:	d93a      	bls.n	80169d2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3da>
 801695c:	f5aa 63cc 	sub.w	r3, sl, #1632	; 0x660
 8016960:	b29b      	uxth	r3, r3
 8016962:	2b09      	cmp	r3, #9
 8016964:	bf8c      	ite	hi
 8016966:	2300      	movhi	r3, #0
 8016968:	2301      	movls	r3, #1
 801696a:	f5aa 60b2 	sub.w	r0, sl, #1424	; 0x590
 801696e:	b280      	uxth	r0, r0
 8016970:	f5b0 7fb8 	cmp.w	r0, #368	; 0x170
 8016974:	d306      	bcc.n	8016984 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x38c>
 8016976:	f50a 6096 	add.w	r0, sl, #1200	; 0x4b0
 801697a:	b280      	uxth	r0, r0
 801697c:	f5b0 7f6c 	cmp.w	r0, #944	; 0x3b0
 8016980:	d300      	bcc.n	8016984 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x38c>
 8016982:	b109      	cbz	r1, 8016988 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x390>
 8016984:	f083 0101 	eor.w	r1, r3, #1
 8016988:	f64f 60ff 	movw	r0, #65279	; 0xfeff
 801698c:	4582      	cmp	sl, r0
 801698e:	d022      	beq.n	80169d6 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3de>
 8016990:	f242 000b 	movw	r0, #8203	; 0x200b
 8016994:	ebaa 0c00 	sub.w	ip, sl, r0
 8016998:	f1dc 0000 	rsbs	r0, ip, #0
 801699c:	eb40 000c 	adc.w	r0, r0, ip
 80169a0:	3a41      	subs	r2, #65	; 0x41
 80169a2:	2a19      	cmp	r2, #25
 80169a4:	d909      	bls.n	80169ba <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3c2>
 80169a6:	f1ba 0f7f 	cmp.w	sl, #127	; 0x7f
 80169aa:	f240 811f 	bls.w	8016bec <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5f4>
 80169ae:	2900      	cmp	r1, #0
 80169b0:	f040 811c 	bne.w	8016bec <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5f4>
 80169b4:	2800      	cmp	r0, #0
 80169b6:	f040 8119 	bne.w	8016bec <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5f4>
 80169ba:	2f07      	cmp	r7, #7
 80169bc:	d815      	bhi.n	80169ea <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 80169be:	e8df f007 	tbb	[pc, r7]
 80169c2:	141e      	.short	0x141e
 80169c4:	7c501432 	.word	0x7c501432
 80169c8:	ac60      	.short	0xac60
 80169ca:	4615      	mov	r5, r2
 80169cc:	e7a6      	b.n	801691c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x324>
 80169ce:	2101      	movs	r1, #1
 80169d0:	e7bf      	b.n	8016952 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x35a>
 80169d2:	2301      	movs	r3, #1
 80169d4:	e7c9      	b.n	801696a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x372>
 80169d6:	2001      	movs	r0, #1
 80169d8:	e7e2      	b.n	80169a0 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3a8>
 80169da:	2200      	movs	r2, #0
 80169dc:	462c      	mov	r4, r5
 80169de:	2601      	movs	r6, #1
 80169e0:	b9fb      	cbnz	r3, 8016a22 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x42a>
 80169e2:	2a00      	cmp	r2, #0
 80169e4:	bf0c      	ite	eq
 80169e6:	2702      	moveq	r7, #2
 80169e8:	2706      	movne	r7, #6
 80169ea:	9b07      	ldr	r3, [sp, #28]
 80169ec:	2f02      	cmp	r7, #2
 80169ee:	bf08      	it	eq
 80169f0:	f043 0301 	orreq.w	r3, r3, #1
 80169f4:	9307      	str	r3, [sp, #28]
 80169f6:	9b06      	ldr	r3, [sp, #24]
 80169f8:	3301      	adds	r3, #1
 80169fa:	9306      	str	r3, [sp, #24]
 80169fc:	e763      	b.n	80168c6 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2ce>
 80169fe:	2201      	movs	r2, #1
 8016a00:	e7ec      	b.n	80169dc <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3e4>
 8016a02:	2200      	movs	r2, #0
 8016a04:	b18b      	cbz	r3, 8016a2a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x432>
 8016a06:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8016a08:	9601      	str	r6, [sp, #4]
 8016a0a:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8016a0e:	ab0d      	add	r3, sp, #52	; 0x34
 8016a10:	9300      	str	r3, [sp, #0]
 8016a12:	4642      	mov	r2, r8
 8016a14:	2301      	movs	r3, #1
 8016a16:	4649      	mov	r1, r9
 8016a18:	9804      	ldr	r0, [sp, #16]
 8016a1a:	f7ff fd84 	bl	8016526 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8016a1e:	462c      	mov	r4, r5
 8016a20:	2601      	movs	r6, #1
 8016a22:	2704      	movs	r7, #4
 8016a24:	e7e1      	b.n	80169ea <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 8016a26:	2201      	movs	r2, #1
 8016a28:	e7ec      	b.n	8016a04 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x40c>
 8016a2a:	b17a      	cbz	r2, 8016a4c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x454>
 8016a2c:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8016a2e:	9601      	str	r6, [sp, #4]
 8016a30:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8016a34:	ab0d      	add	r3, sp, #52	; 0x34
 8016a36:	9300      	str	r3, [sp, #0]
 8016a38:	2301      	movs	r3, #1
 8016a3a:	4642      	mov	r2, r8
 8016a3c:	4649      	mov	r1, r9
 8016a3e:	9804      	ldr	r0, [sp, #16]
 8016a40:	f7ff fd71 	bl	8016526 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8016a44:	462c      	mov	r4, r5
 8016a46:	2601      	movs	r6, #1
 8016a48:	2706      	movs	r7, #6
 8016a4a:	e7ce      	b.n	80169ea <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 8016a4c:	3601      	adds	r6, #1
 8016a4e:	442c      	add	r4, r5
 8016a50:	b2a4      	uxth	r4, r4
 8016a52:	2702      	movs	r7, #2
 8016a54:	e7c9      	b.n	80169ea <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 8016a56:	2200      	movs	r2, #0
 8016a58:	b12b      	cbz	r3, 8016a66 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x46e>
 8016a5a:	3601      	adds	r6, #1
 8016a5c:	442c      	add	r4, r5
 8016a5e:	b2a4      	uxth	r4, r4
 8016a60:	e7df      	b.n	8016a22 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x42a>
 8016a62:	2201      	movs	r2, #1
 8016a64:	e7f8      	b.n	8016a58 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x460>
 8016a66:	f02a 0302 	bic.w	r3, sl, #2
 8016a6a:	b29b      	uxth	r3, r3
 8016a6c:	2b2c      	cmp	r3, #44	; 0x2c
 8016a6e:	d06f      	beq.n	8016b50 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x558>
 8016a70:	f1ba 0f3a 	cmp.w	sl, #58	; 0x3a
 8016a74:	d06c      	beq.n	8016b50 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x558>
 8016a76:	f2aa 636b 	subw	r3, sl, #1643	; 0x66b
 8016a7a:	b29b      	uxth	r3, r3
 8016a7c:	2b01      	cmp	r3, #1
 8016a7e:	d967      	bls.n	8016b50 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x558>
 8016a80:	b11a      	cbz	r2, 8016a8a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x492>
 8016a82:	3601      	adds	r6, #1
 8016a84:	442c      	add	r4, r5
 8016a86:	b2a4      	uxth	r4, r4
 8016a88:	e7de      	b.n	8016a48 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x450>
 8016a8a:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8016a8c:	9601      	str	r6, [sp, #4]
 8016a8e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8016a92:	ab0d      	add	r3, sp, #52	; 0x34
 8016a94:	9300      	str	r3, [sp, #0]
 8016a96:	4613      	mov	r3, r2
 8016a98:	4642      	mov	r2, r8
 8016a9a:	4649      	mov	r1, r9
 8016a9c:	9804      	ldr	r0, [sp, #16]
 8016a9e:	f7ff fd42 	bl	8016526 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8016aa2:	462c      	mov	r4, r5
 8016aa4:	2601      	movs	r6, #1
 8016aa6:	e7d4      	b.n	8016a52 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x45a>
 8016aa8:	2200      	movs	r2, #0
 8016aaa:	b143      	cbz	r3, 8016abe <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x4c6>
 8016aac:	9b05      	ldr	r3, [sp, #20]
 8016aae:	445c      	add	r4, fp
 8016ab0:	3301      	adds	r3, #1
 8016ab2:	441e      	add	r6, r3
 8016ab4:	fa15 f484 	uxtah	r4, r5, r4
 8016ab8:	e7d1      	b.n	8016a5e <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x466>
 8016aba:	2201      	movs	r2, #1
 8016abc:	e7f5      	b.n	8016aaa <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x4b2>
 8016abe:	af0d      	add	r7, sp, #52	; 0x34
 8016ac0:	b182      	cbz	r2, 8016ae4 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x4ec>
 8016ac2:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8016ac4:	9804      	ldr	r0, [sp, #16]
 8016ac6:	e9cd 4202 	strd	r4, r2, [sp, #8]
 8016aca:	e9cd 7600 	strd	r7, r6, [sp]
 8016ace:	4642      	mov	r2, r8
 8016ad0:	4649      	mov	r1, r9
 8016ad2:	f7ff fd28 	bl	8016526 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8016ad6:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8016ad8:	e9cd b302 	strd	fp, r3, [sp, #8]
 8016adc:	9b05      	ldr	r3, [sp, #20]
 8016ade:	e9cd 7300 	strd	r7, r3, [sp]
 8016ae2:	e7a9      	b.n	8016a38 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x440>
 8016ae4:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8016ae6:	9804      	ldr	r0, [sp, #16]
 8016ae8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8016aec:	e9cd 7600 	strd	r7, r6, [sp]
 8016af0:	4613      	mov	r3, r2
 8016af2:	4649      	mov	r1, r9
 8016af4:	4642      	mov	r2, r8
 8016af6:	f7ff fd16 	bl	8016526 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8016afa:	9b05      	ldr	r3, [sp, #20]
 8016afc:	eb0b 0405 	add.w	r4, fp, r5
 8016b00:	1c5e      	adds	r6, r3, #1
 8016b02:	e7a5      	b.n	8016a50 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x458>
 8016b04:	2b00      	cmp	r3, #0
 8016b06:	d1bc      	bne.n	8016a82 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x48a>
 8016b08:	b339      	cbz	r1, 8016b5a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x562>
 8016b0a:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8016b0c:	9601      	str	r6, [sp, #4]
 8016b0e:	e9cd 4202 	strd	r4, r2, [sp, #8]
 8016b12:	aa0d      	add	r2, sp, #52	; 0x34
 8016b14:	9200      	str	r2, [sp, #0]
 8016b16:	e7bf      	b.n	8016a98 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x4a0>
 8016b18:	b133      	cbz	r3, 8016b28 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x530>
 8016b1a:	9b05      	ldr	r3, [sp, #20]
 8016b1c:	445c      	add	r4, fp
 8016b1e:	3301      	adds	r3, #1
 8016b20:	441e      	add	r6, r3
 8016b22:	fa15 f484 	uxtah	r4, r5, r4
 8016b26:	e7ae      	b.n	8016a86 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x48e>
 8016b28:	9a05      	ldr	r2, [sp, #20]
 8016b2a:	445d      	add	r5, fp
 8016b2c:	3201      	adds	r2, #1
 8016b2e:	920a      	str	r2, [sp, #40]	; 0x28
 8016b30:	b2ad      	uxth	r5, r5
 8016b32:	b1b9      	cbz	r1, 8016b64 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x56c>
 8016b34:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8016b36:	9601      	str	r6, [sp, #4]
 8016b38:	e9cd 4202 	strd	r4, r2, [sp, #8]
 8016b3c:	aa0d      	add	r2, sp, #52	; 0x34
 8016b3e:	9200      	str	r2, [sp, #0]
 8016b40:	4649      	mov	r1, r9
 8016b42:	4642      	mov	r2, r8
 8016b44:	9804      	ldr	r0, [sp, #16]
 8016b46:	f7ff fcee 	bl	8016526 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8016b4a:	462c      	mov	r4, r5
 8016b4c:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8016b4e:	e780      	b.n	8016a52 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x45a>
 8016b50:	2301      	movs	r3, #1
 8016b52:	46ab      	mov	fp, r5
 8016b54:	9305      	str	r3, [sp, #20]
 8016b56:	2705      	movs	r7, #5
 8016b58:	e747      	b.n	80169ea <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 8016b5a:	2301      	movs	r3, #1
 8016b5c:	46ab      	mov	fp, r5
 8016b5e:	9305      	str	r3, [sp, #20]
 8016b60:	2707      	movs	r7, #7
 8016b62:	e742      	b.n	80169ea <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 8016b64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016b66:	9305      	str	r3, [sp, #20]
 8016b68:	46ab      	mov	fp, r5
 8016b6a:	e73e      	b.n	80169ea <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 8016b6c:	2f02      	cmp	r7, #2
 8016b6e:	f43f ae60 	beq.w	8016832 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x23a>
 8016b72:	f007 0705 	and.w	r7, r7, #5
 8016b76:	2f04      	cmp	r7, #4
 8016b78:	f43f ae52 	beq.w	8016820 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x228>
 8016b7c:	2f05      	cmp	r7, #5
 8016b7e:	f47f ae7c 	bne.w	801687a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x282>
 8016b82:	9b07      	ldr	r3, [sp, #28]
 8016b84:	ad0d      	add	r5, sp, #52	; 0x34
 8016b86:	b18b      	cbz	r3, 8016bac <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5b4>
 8016b88:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8016b8a:	9804      	ldr	r0, [sp, #16]
 8016b8c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8016b90:	e9cd 5600 	strd	r5, r6, [sp]
 8016b94:	2300      	movs	r3, #0
 8016b96:	4642      	mov	r2, r8
 8016b98:	4649      	mov	r1, r9
 8016b9a:	f7ff fcc4 	bl	8016526 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8016b9e:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8016ba0:	e9cd b302 	strd	fp, r3, [sp, #8]
 8016ba4:	9b05      	ldr	r3, [sp, #20]
 8016ba6:	e9cd 5300 	strd	r5, r3, [sp]
 8016baa:	e681      	b.n	80168b0 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2b8>
 8016bac:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8016bae:	9303      	str	r3, [sp, #12]
 8016bb0:	9b05      	ldr	r3, [sp, #20]
 8016bb2:	445c      	add	r4, fp
 8016bb4:	441e      	add	r6, r3
 8016bb6:	b2a4      	uxth	r4, r4
 8016bb8:	9402      	str	r4, [sp, #8]
 8016bba:	e9cd 5600 	strd	r5, r6, [sp]
 8016bbe:	9b07      	ldr	r3, [sp, #28]
 8016bc0:	e656      	b.n	8016870 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x278>
 8016bc2:	2b00      	cmp	r3, #0
 8016bc4:	f47f adbf 	bne.w	8016746 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x14e>
 8016bc8:	2a00      	cmp	r2, #0
 8016bca:	f47f adab 	bne.w	8016724 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x12c>
 8016bce:	2f03      	cmp	r7, #3
 8016bd0:	f63f adef 	bhi.w	80167b2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1ba>
 8016bd4:	a301      	add	r3, pc, #4	; (adr r3, 8016bdc <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5e4>)
 8016bd6:	f853 f027 	ldr.w	pc, [r3, r7, lsl #2]
 8016bda:	bf00      	nop
 8016bdc:	08016753 	.word	0x08016753
 8016be0:	0801675d 	.word	0x0801675d
 8016be4:	080167a5 	.word	0x080167a5
 8016be8:	080167db 	.word	0x080167db
 8016bec:	2f07      	cmp	r7, #7
 8016bee:	f63f aefc 	bhi.w	80169ea <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 8016bf2:	a201      	add	r2, pc, #4	; (adr r2, 8016bf8 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x600>)
 8016bf4:	f852 f027 	ldr.w	pc, [r2, r7, lsl #2]
 8016bf8:	080169db 	.word	0x080169db
 8016bfc:	080169eb 	.word	0x080169eb
 8016c00:	08016a03 	.word	0x08016a03
 8016c04:	080169eb 	.word	0x080169eb
 8016c08:	08016a57 	.word	0x08016a57
 8016c0c:	08016aa9 	.word	0x08016aa9
 8016c10:	08016b05 	.word	0x08016b05
 8016c14:	08016b19 	.word	0x08016b19

08016c18 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8016c18:	b530      	push	{r4, r5, lr}
 8016c1a:	8a44      	ldrh	r4, [r0, #18]
 8016c1c:	8ac5      	ldrh	r5, [r0, #22]
 8016c1e:	82c3      	strh	r3, [r0, #22]
 8016c20:	442c      	add	r4, r5
 8016c22:	1ae4      	subs	r4, r4, r3
 8016c24:	8244      	strh	r4, [r0, #18]
 8016c26:	8b03      	ldrh	r3, [r0, #24]
 8016c28:	8a84      	ldrh	r4, [r0, #20]
 8016c2a:	4422      	add	r2, r4
 8016c2c:	440c      	add	r4, r1
 8016c2e:	1a59      	subs	r1, r3, r1
 8016c30:	8342      	strh	r2, [r0, #26]
 8016c32:	8284      	strh	r4, [r0, #20]
 8016c34:	8301      	strh	r1, [r0, #24]
 8016c36:	bd30      	pop	{r4, r5, pc}

08016c38 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 8016c38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c3c:	7a43      	ldrb	r3, [r0, #9]
 8016c3e:	1eda      	subs	r2, r3, #3
 8016c40:	b087      	sub	sp, #28
 8016c42:	4604      	mov	r4, r0
 8016c44:	b2d2      	uxtb	r2, r2
 8016c46:	460f      	mov	r7, r1
 8016c48:	2900      	cmp	r1, #0
 8016c4a:	d036      	beq.n	8016cba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 8016c4c:	2a01      	cmp	r2, #1
 8016c4e:	d932      	bls.n	8016cb6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 8016c50:	1e58      	subs	r0, r3, #1
 8016c52:	f1d0 0b00 	rsbs	fp, r0, #0
 8016c56:	eb4b 0b00 	adc.w	fp, fp, r0
 8016c5a:	1e99      	subs	r1, r3, #2
 8016c5c:	424b      	negs	r3, r1
 8016c5e:	414b      	adcs	r3, r1
 8016c60:	9303      	str	r3, [sp, #12]
 8016c62:	2300      	movs	r3, #0
 8016c64:	e9cd 3301 	strd	r3, r3, [sp, #4]
 8016c68:	2500      	movs	r5, #0
 8016c6a:	8265      	strh	r5, [r4, #18]
 8016c6c:	82a5      	strh	r5, [r4, #20]
 8016c6e:	46a9      	mov	r9, r5
 8016c70:	f242 0a0b 	movw	sl, #8203	; 0x200b
 8016c74:	2300      	movs	r3, #0
 8016c76:	9305      	str	r3, [sp, #20]
 8016c78:	8823      	ldrh	r3, [r4, #0]
 8016c7a:	2b20      	cmp	r3, #32
 8016c7c:	d02b      	beq.n	8016cd6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 8016c7e:	eba3 020a 	sub.w	r2, r3, sl
 8016c82:	4256      	negs	r6, r2
 8016c84:	4156      	adcs	r6, r2
 8016c86:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8016c8a:	4293      	cmp	r3, r2
 8016c8c:	d004      	beq.n	8016c98 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8016c8e:	4553      	cmp	r3, sl
 8016c90:	bf16      	itet	ne
 8016c92:	4699      	movne	r9, r3
 8016c94:	2601      	moveq	r6, #1
 8016c96:	2600      	movne	r6, #0
 8016c98:	ab05      	add	r3, sp, #20
 8016c9a:	68e2      	ldr	r2, [r4, #12]
 8016c9c:	7a21      	ldrb	r1, [r4, #8]
 8016c9e:	6860      	ldr	r0, [r4, #4]
 8016ca0:	f003 fa20 	bl	801a0e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016ca4:	8020      	strh	r0, [r4, #0]
 8016ca6:	b9c8      	cbnz	r0, 8016cdc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 8016ca8:	8b22      	ldrh	r2, [r4, #24]
 8016caa:	2300      	movs	r3, #0
 8016cac:	4611      	mov	r1, r2
 8016cae:	4620      	mov	r0, r4
 8016cb0:	f7ff ffb2 	bl	8016c18 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8016cb4:	e066      	b.n	8016d84 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 8016cb6:	468b      	mov	fp, r1
 8016cb8:	e7cf      	b.n	8016c5a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 8016cba:	3b01      	subs	r3, #1
 8016cbc:	2a01      	cmp	r2, #1
 8016cbe:	bf8c      	ite	hi
 8016cc0:	2200      	movhi	r2, #0
 8016cc2:	2201      	movls	r2, #1
 8016cc4:	2b01      	cmp	r3, #1
 8016cc6:	bf8c      	ite	hi
 8016cc8:	2300      	movhi	r3, #0
 8016cca:	2301      	movls	r3, #1
 8016ccc:	9202      	str	r2, [sp, #8]
 8016cce:	9301      	str	r3, [sp, #4]
 8016cd0:	9103      	str	r1, [sp, #12]
 8016cd2:	468b      	mov	fp, r1
 8016cd4:	e7c8      	b.n	8016c68 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 8016cd6:	4699      	mov	r9, r3
 8016cd8:	2601      	movs	r6, #1
 8016cda:	e7dd      	b.n	8016c98 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8016cdc:	8ae3      	ldrh	r3, [r4, #22]
 8016cde:	280a      	cmp	r0, #10
 8016ce0:	f103 0301 	add.w	r3, r3, #1
 8016ce4:	82e3      	strh	r3, [r4, #22]
 8016ce6:	d0df      	beq.n	8016ca8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 8016ce8:	9a05      	ldr	r2, [sp, #20]
 8016cea:	bb42      	cbnz	r2, 8016d3e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 8016cec:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8016cf0:	4298      	cmp	r0, r3
 8016cf2:	d001      	beq.n	8016cf8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 8016cf4:	4550      	cmp	r0, sl
 8016cf6:	d1bd      	bne.n	8016c74 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8016cf8:	8823      	ldrh	r3, [r4, #0]
 8016cfa:	8b21      	ldrh	r1, [r4, #24]
 8016cfc:	2b20      	cmp	r3, #32
 8016cfe:	d001      	beq.n	8016d04 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 8016d00:	4553      	cmp	r3, sl
 8016d02:	d131      	bne.n	8016d68 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 8016d04:	2e00      	cmp	r6, #0
 8016d06:	bf0a      	itet	eq
 8016d08:	460d      	moveq	r5, r1
 8016d0a:	4630      	movne	r0, r6
 8016d0c:	2001      	moveq	r0, #1
 8016d0e:	440a      	add	r2, r1
 8016d10:	8aa3      	ldrh	r3, [r4, #20]
 8016d12:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8016d16:	b292      	uxth	r2, r2
 8016d18:	8322      	strh	r2, [r4, #24]
 8016d1a:	4413      	add	r3, r2
 8016d1c:	2f00      	cmp	r7, #0
 8016d1e:	d03a      	beq.n	8016d96 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 8016d20:	f1bb 0f00 	cmp.w	fp, #0
 8016d24:	d102      	bne.n	8016d2c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 8016d26:	9903      	ldr	r1, [sp, #12]
 8016d28:	b301      	cbz	r1, 8016d6c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8016d2a:	b1f8      	cbz	r0, 8016d6c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8016d2c:	8ba1      	ldrh	r1, [r4, #28]
 8016d2e:	4419      	add	r1, r3
 8016d30:	458c      	cmp	ip, r1
 8016d32:	da2a      	bge.n	8016d8a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 8016d34:	8a61      	ldrh	r1, [r4, #18]
 8016d36:	b341      	cbz	r1, 8016d8a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 8016d38:	4563      	cmp	r3, ip
 8016d3a:	dd9b      	ble.n	8016c74 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8016d3c:	e01c      	b.n	8016d78 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 8016d3e:	8893      	ldrh	r3, [r2, #4]
 8016d40:	8023      	strh	r3, [r4, #0]
 8016d42:	f892 800d 	ldrb.w	r8, [r2, #13]
 8016d46:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8016d4a:	f408 7080 	and.w	r0, r8, #256	; 0x100
 8016d4e:	f892 800a 	ldrb.w	r8, [r2, #10]
 8016d52:	ea48 0800 	orr.w	r8, r8, r0
 8016d56:	68e0      	ldr	r0, [r4, #12]
 8016d58:	6803      	ldr	r3, [r0, #0]
 8016d5a:	4649      	mov	r1, r9
 8016d5c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016d5e:	4798      	blx	r3
 8016d60:	eb08 0200 	add.w	r2, r8, r0
 8016d64:	b292      	uxth	r2, r2
 8016d66:	e7c7      	b.n	8016cf8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 8016d68:	2000      	movs	r0, #0
 8016d6a:	e7d0      	b.n	8016d0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 8016d6c:	4563      	cmp	r3, ip
 8016d6e:	dd81      	ble.n	8016c74 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8016d70:	8a63      	ldrh	r3, [r4, #18]
 8016d72:	2b00      	cmp	r3, #0
 8016d74:	f43f af7e 	beq.w	8016c74 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8016d78:	2301      	movs	r3, #1
 8016d7a:	77a3      	strb	r3, [r4, #30]
 8016d7c:	8ba2      	ldrh	r2, [r4, #28]
 8016d7e:	8b63      	ldrh	r3, [r4, #26]
 8016d80:	4413      	add	r3, r2
 8016d82:	8363      	strh	r3, [r4, #26]
 8016d84:	b007      	add	sp, #28
 8016d86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016d8a:	2300      	movs	r3, #0
 8016d8c:	4611      	mov	r1, r2
 8016d8e:	4620      	mov	r0, r4
 8016d90:	f7ff ff42 	bl	8016c18 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8016d94:	e76e      	b.n	8016c74 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8016d96:	4563      	cmp	r3, ip
 8016d98:	dd14      	ble.n	8016dc4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 8016d9a:	9b02      	ldr	r3, [sp, #8]
 8016d9c:	b113      	cbz	r3, 8016da4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 8016d9e:	2301      	movs	r3, #1
 8016da0:	460a      	mov	r2, r1
 8016da2:	e783      	b.n	8016cac <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 8016da4:	9b01      	ldr	r3, [sp, #4]
 8016da6:	2b00      	cmp	r3, #0
 8016da8:	f43f af64 	beq.w	8016c74 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8016dac:	2800      	cmp	r0, #0
 8016dae:	f47f af61 	bne.w	8016c74 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8016db2:	b116      	cbz	r6, 8016dba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 8016db4:	2301      	movs	r3, #1
 8016db6:	462a      	mov	r2, r5
 8016db8:	e779      	b.n	8016cae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 8016dba:	8a63      	ldrh	r3, [r4, #18]
 8016dbc:	2b00      	cmp	r3, #0
 8016dbe:	f43f af59 	beq.w	8016c74 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8016dc2:	e7df      	b.n	8016d84 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 8016dc4:	2800      	cmp	r0, #0
 8016dc6:	f47f af55 	bne.w	8016c74 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8016dca:	2e00      	cmp	r6, #0
 8016dcc:	f43f af52 	beq.w	8016c74 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8016dd0:	2301      	movs	r3, #1
 8016dd2:	462a      	mov	r2, r5
 8016dd4:	e7db      	b.n	8016d8e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

08016dd6 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8016dd6:	b530      	push	{r4, r5, lr}
 8016dd8:	4605      	mov	r5, r0
 8016dda:	b08b      	sub	sp, #44	; 0x2c
 8016ddc:	b191      	cbz	r1, 8016e04 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 8016dde:	e9cd 3100 	strd	r3, r1, [sp]
 8016de2:	4613      	mov	r3, r2
 8016de4:	4601      	mov	r1, r0
 8016de6:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8016dea:	a802      	add	r0, sp, #8
 8016dec:	f7ff f994 	bl	8016118 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8016df0:	2401      	movs	r4, #1
 8016df2:	2100      	movs	r1, #0
 8016df4:	a802      	add	r0, sp, #8
 8016df6:	f7ff ff1f 	bl	8016c38 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8016dfa:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016dfe:	b163      	cbz	r3, 8016e1a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8016e00:	3401      	adds	r4, #1
 8016e02:	e7f6      	b.n	8016df2 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 8016e04:	f003 fa68 	bl	801a2d8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016e08:	2401      	movs	r4, #1
 8016e0a:	280a      	cmp	r0, #10
 8016e0c:	4628      	mov	r0, r5
 8016e0e:	bf08      	it	eq
 8016e10:	3401      	addeq	r4, #1
 8016e12:	f003 fa61 	bl	801a2d8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016e16:	2800      	cmp	r0, #0
 8016e18:	d1f7      	bne.n	8016e0a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8016e1a:	b2a0      	uxth	r0, r4
 8016e1c:	b00b      	add	sp, #44	; 0x2c
 8016e1e:	bd30      	pop	{r4, r5, pc}

08016e20 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8016e20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016e24:	b0e9      	sub	sp, #420	; 0x1a4
 8016e26:	468b      	mov	fp, r1
 8016e28:	f8dd a1c8 	ldr.w	sl, [sp, #456]	; 0x1c8
 8016e2c:	9007      	str	r0, [sp, #28]
 8016e2e:	461c      	mov	r4, r3
 8016e30:	f1ba 0f00 	cmp.w	sl, #0
 8016e34:	f000 80cd 	beq.w	8016fd2 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b2>
 8016e38:	681b      	ldr	r3, [r3, #0]
 8016e3a:	2b00      	cmp	r3, #0
 8016e3c:	f000 80c9 	beq.w	8016fd2 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b2>
 8016e40:	7ba3      	ldrb	r3, [r4, #14]
 8016e42:	2b00      	cmp	r3, #0
 8016e44:	f000 80c5 	beq.w	8016fd2 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b2>
 8016e48:	6810      	ldr	r0, [r2, #0]
 8016e4a:	6851      	ldr	r1, [r2, #4]
 8016e4c:	f9bb 2004 	ldrsh.w	r2, [fp, #4]
 8016e50:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 8016e54:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8016e58:	464b      	mov	r3, r9
 8016e5a:	c303      	stmia	r3!, {r0, r1}
 8016e5c:	79a2      	ldrb	r2, [r4, #6]
 8016e5e:	f9bb 3006 	ldrsh.w	r3, [fp, #6]
 8016e62:	7967      	ldrb	r7, [r4, #5]
 8016e64:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8016e68:	a90e      	add	r1, sp, #56	; 0x38
 8016e6a:	4648      	mov	r0, r9
 8016e6c:	2500      	movs	r5, #0
 8016e6e:	950e      	str	r5, [sp, #56]	; 0x38
 8016e70:	f7ff f9c8 	bl	8016204 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8016e74:	a90e      	add	r1, sp, #56	; 0x38
 8016e76:	79a2      	ldrb	r2, [r4, #6]
 8016e78:	4608      	mov	r0, r1
 8016e7a:	f7ff f9c3 	bl	8016204 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8016e7e:	2f00      	cmp	r7, #0
 8016e80:	d16a      	bne.n	8016f58 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8016e82:	f894 8004 	ldrb.w	r8, [r4, #4]
 8016e86:	ebb8 0805 	subs.w	r8, r8, r5
 8016e8a:	bf18      	it	ne
 8016e8c:	f04f 0801 	movne.w	r8, #1
 8016e90:	f8cd 8014 	str.w	r8, [sp, #20]
 8016e94:	a81d      	add	r0, sp, #116	; 0x74
 8016e96:	f002 f92a 	bl	80190ee <_ZN8touchgfx12TextProviderC1Ev>
 8016e9a:	6820      	ldr	r0, [r4, #0]
 8016e9c:	6803      	ldr	r3, [r0, #0]
 8016e9e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016ea0:	4798      	blx	r3
 8016ea2:	4605      	mov	r5, r0
 8016ea4:	6820      	ldr	r0, [r4, #0]
 8016ea6:	6803      	ldr	r3, [r0, #0]
 8016ea8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016eaa:	4798      	blx	r3
 8016eac:	462b      	mov	r3, r5
 8016eae:	9000      	str	r0, [sp, #0]
 8016eb0:	9a73      	ldr	r2, [sp, #460]	; 0x1cc
 8016eb2:	4651      	mov	r1, sl
 8016eb4:	a81d      	add	r0, sp, #116	; 0x74
 8016eb6:	f002 f985 	bl	80191c4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016eba:	6820      	ldr	r0, [r4, #0]
 8016ebc:	6803      	ldr	r3, [r0, #0]
 8016ebe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016ec0:	4798      	blx	r3
 8016ec2:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8016ec6:	182e      	adds	r6, r5, r0
 8016ec8:	2e00      	cmp	r6, #0
 8016eca:	dd51      	ble.n	8016f70 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x150>
 8016ecc:	f9b9 3002 	ldrsh.w	r3, [r9, #2]
 8016ed0:	4283      	cmp	r3, r0
 8016ed2:	db4d      	blt.n	8016f70 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x150>
 8016ed4:	441d      	add	r5, r3
 8016ed6:	fb95 f5f6 	sdiv	r5, r5, r6
 8016eda:	a836      	add	r0, sp, #216	; 0xd8
 8016edc:	f002 f907 	bl	80190ee <_ZN8touchgfx12TextProviderC1Ev>
 8016ee0:	7c23      	ldrb	r3, [r4, #16]
 8016ee2:	b17b      	cbz	r3, 8016f04 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xe4>
 8016ee4:	6820      	ldr	r0, [r4, #0]
 8016ee6:	6803      	ldr	r3, [r0, #0]
 8016ee8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016eea:	4798      	blx	r3
 8016eec:	9006      	str	r0, [sp, #24]
 8016eee:	6820      	ldr	r0, [r4, #0]
 8016ef0:	6802      	ldr	r2, [r0, #0]
 8016ef2:	6c92      	ldr	r2, [r2, #72]	; 0x48
 8016ef4:	4790      	blx	r2
 8016ef6:	9b06      	ldr	r3, [sp, #24]
 8016ef8:	9000      	str	r0, [sp, #0]
 8016efa:	9a73      	ldr	r2, [sp, #460]	; 0x1cc
 8016efc:	4651      	mov	r1, sl
 8016efe:	a836      	add	r0, sp, #216	; 0xd8
 8016f00:	f002 f960 	bl	80191c4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016f04:	7be1      	ldrb	r1, [r4, #15]
 8016f06:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8016f0a:	7963      	ldrb	r3, [r4, #5]
 8016f0c:	1a52      	subs	r2, r2, r1
 8016f0e:	7c21      	ldrb	r1, [r4, #16]
 8016f10:	9101      	str	r1, [sp, #4]
 8016f12:	f10d 0a54 	add.w	sl, sp, #84	; 0x54
 8016f16:	6821      	ldr	r1, [r4, #0]
 8016f18:	9100      	str	r1, [sp, #0]
 8016f1a:	b292      	uxth	r2, r2
 8016f1c:	a936      	add	r1, sp, #216	; 0xd8
 8016f1e:	4650      	mov	r0, sl
 8016f20:	f7ff f8fa 	bl	8016118 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8016f24:	7c23      	ldrb	r3, [r4, #16]
 8016f26:	bb2b      	cbnz	r3, 8016f74 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x154>
 8016f28:	fa1f fa86 	uxth.w	sl, r6
 8016f2c:	2d00      	cmp	r5, #0
 8016f2e:	dd53      	ble.n	8016fd8 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b8>
 8016f30:	a81d      	add	r0, sp, #116	; 0x74
 8016f32:	f003 f9d1 	bl	801a2d8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016f36:	2800      	cmp	r0, #0
 8016f38:	d04b      	beq.n	8016fd2 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b2>
 8016f3a:	280a      	cmp	r0, #10
 8016f3c:	d1f6      	bne.n	8016f2c <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x10c>
 8016f3e:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 8016f42:	4453      	add	r3, sl
 8016f44:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8016f48:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8016f4c:	eba3 030a 	sub.w	r3, r3, sl
 8016f50:	3d01      	subs	r5, #1
 8016f52:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8016f56:	e7e9      	b.n	8016f2c <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x10c>
 8016f58:	2f01      	cmp	r7, #1
 8016f5a:	d107      	bne.n	8016f6c <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14c>
 8016f5c:	7923      	ldrb	r3, [r4, #4]
 8016f5e:	3b02      	subs	r3, #2
 8016f60:	bf18      	it	ne
 8016f62:	2301      	movne	r3, #1
 8016f64:	9305      	str	r3, [sp, #20]
 8016f66:	f04f 0801 	mov.w	r8, #1
 8016f6a:	e793      	b.n	8016e94 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x74>
 8016f6c:	9505      	str	r5, [sp, #20]
 8016f6e:	e7fa      	b.n	8016f66 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x146>
 8016f70:	2500      	movs	r5, #0
 8016f72:	e7b2      	b.n	8016eda <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xba>
 8016f74:	0073      	lsls	r3, r6, #1
 8016f76:	9306      	str	r3, [sp, #24]
 8016f78:	2d00      	cmp	r5, #0
 8016f7a:	dd2d      	ble.n	8016fd8 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b8>
 8016f7c:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 8016f80:	9b06      	ldr	r3, [sp, #24]
 8016f82:	428b      	cmp	r3, r1
 8016f84:	bfd4      	ite	le
 8016f86:	2100      	movle	r1, #0
 8016f88:	2101      	movgt	r1, #1
 8016f8a:	4650      	mov	r0, sl
 8016f8c:	f7ff fe54 	bl	8016c38 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8016f90:	f8ba 3012 	ldrh.w	r3, [sl, #18]
 8016f94:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8016f98:	3b01      	subs	r3, #1
 8016f9a:	b29b      	uxth	r3, r3
 8016f9c:	4293      	cmp	r3, r2
 8016f9e:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8016fa2:	d006      	beq.n	8016fb2 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x192>
 8016fa4:	4639      	mov	r1, r7
 8016fa6:	a81d      	add	r0, sp, #116	; 0x74
 8016fa8:	f7f1 fd92 	bl	8008ad0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8016fac:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8016fb0:	e7f2      	b.n	8016f98 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x178>
 8016fb2:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8016fb6:	b2b3      	uxth	r3, r6
 8016fb8:	441a      	add	r2, r3
 8016fba:	f8ad 203a 	strh.w	r2, [sp, #58]	; 0x3a
 8016fbe:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 8016fc2:	1ad3      	subs	r3, r2, r3
 8016fc4:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8016fc8:	f8ba 3000 	ldrh.w	r3, [sl]
 8016fcc:	3d01      	subs	r5, #1
 8016fce:	2b00      	cmp	r3, #0
 8016fd0:	d1d2      	bne.n	8016f78 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x158>
 8016fd2:	b069      	add	sp, #420	; 0x1a4
 8016fd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016fd8:	2500      	movs	r5, #0
 8016fda:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 8016fde:	f8ad 3048 	strh.w	r3, [sp, #72]	; 0x48
 8016fe2:	e9cd 5b10 	strd	r5, fp, [sp, #64]	; 0x40
 8016fe6:	e9cd 9413 	strd	r9, r4, [sp, #76]	; 0x4c
 8016fea:	0073      	lsls	r3, r6, #1
 8016fec:	9306      	str	r3, [sp, #24]
 8016fee:	f10d 0a74 	add.w	sl, sp, #116	; 0x74
 8016ff2:	7c23      	ldrb	r3, [r4, #16]
 8016ff4:	f8ad 502e 	strh.w	r5, [sp, #46]	; 0x2e
 8016ff8:	b14b      	cbz	r3, 801700e <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ee>
 8016ffa:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 8016ffe:	9b06      	ldr	r3, [sp, #24]
 8017000:	428b      	cmp	r3, r1
 8017002:	bfd4      	ite	le
 8017004:	2100      	movle	r1, #0
 8017006:	2101      	movgt	r1, #1
 8017008:	a815      	add	r0, sp, #84	; 0x54
 801700a:	f7ff fe15 	bl	8016c38 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 801700e:	f1b8 0f00 	cmp.w	r8, #0
 8017012:	d069      	beq.n	80170e8 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x2c8>
 8017014:	9b05      	ldr	r3, [sp, #20]
 8017016:	2b00      	cmp	r3, #0
 8017018:	d061      	beq.n	80170de <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x2be>
 801701a:	7c23      	ldrb	r3, [r4, #16]
 801701c:	b9c3      	cbnz	r3, 8017050 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 801701e:	2264      	movs	r2, #100	; 0x64
 8017020:	4651      	mov	r1, sl
 8017022:	a84f      	add	r0, sp, #316	; 0x13c
 8017024:	f010 fd4c 	bl	8027ac0 <memcpy>
 8017028:	463b      	mov	r3, r7
 801702a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801702e:	6821      	ldr	r1, [r4, #0]
 8017030:	a84f      	add	r0, sp, #316	; 0x13c
 8017032:	f7ff f8ab 	bl	801618c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8017036:	b200      	sxth	r0, r0
 8017038:	7922      	ldrb	r2, [r4, #4]
 801703a:	2f00      	cmp	r7, #0
 801703c:	d144      	bne.n	80170c8 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x2a8>
 801703e:	2a01      	cmp	r2, #1
 8017040:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8017044:	d107      	bne.n	8017056 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x236>
 8017046:	1a1b      	subs	r3, r3, r0
 8017048:	2002      	movs	r0, #2
 801704a:	fb93 f3f0 	sdiv	r3, r3, r0
 801704e:	e005      	b.n	801705c <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23c>
 8017050:	f9bd 006e 	ldrsh.w	r0, [sp, #110]	; 0x6e
 8017054:	e7f0      	b.n	8017038 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x218>
 8017056:	7be2      	ldrb	r2, [r4, #15]
 8017058:	1a9b      	subs	r3, r3, r2
 801705a:	1a1b      	subs	r3, r3, r0
 801705c:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8017060:	7c23      	ldrb	r3, [r4, #16]
 8017062:	2b00      	cmp	r3, #0
 8017064:	d042      	beq.n	80170ec <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x2cc>
 8017066:	f8bd 2066 	ldrh.w	r2, [sp, #102]	; 0x66
 801706a:	f89d 3072 	ldrb.w	r3, [sp, #114]	; 0x72
 801706e:	9807      	ldr	r0, [sp, #28]
 8017070:	f10d 0b40 	add.w	fp, sp, #64	; 0x40
 8017074:	e9cd 3b02 	strd	r3, fp, [sp, #8]
 8017078:	e9cd a200 	strd	sl, r2, [sp]
 801707c:	463b      	mov	r3, r7
 801707e:	6822      	ldr	r2, [r4, #0]
 8017080:	f10d 012e 	add.w	r1, sp, #46	; 0x2e
 8017084:	f7ff fab8 	bl	80165f8 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE>
 8017088:	f8bb 3008 	ldrh.w	r3, [fp, #8]
 801708c:	b2b2      	uxth	r2, r6
 801708e:	4611      	mov	r1, r2
 8017090:	4413      	add	r3, r2
 8017092:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 8017096:	1a52      	subs	r2, r2, r1
 8017098:	7c21      	ldrb	r1, [r4, #16]
 801709a:	b21b      	sxth	r3, r3
 801709c:	b212      	sxth	r2, r2
 801709e:	f8ab 3008 	strh.w	r3, [fp, #8]
 80170a2:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 80170a6:	b109      	cbz	r1, 80170ac <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x28c>
 80170a8:	42b2      	cmp	r2, r6
 80170aa:	db92      	blt.n	8016fd2 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b2>
 80170ac:	f8b9 2006 	ldrh.w	r2, [r9, #6]
 80170b0:	f8b9 1002 	ldrh.w	r1, [r9, #2]
 80170b4:	440a      	add	r2, r1
 80170b6:	b212      	sxth	r2, r2
 80170b8:	4293      	cmp	r3, r2
 80170ba:	dc8a      	bgt.n	8016fd2 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b2>
 80170bc:	4650      	mov	r0, sl
 80170be:	f002 f83d 	bl	801913c <_ZN8touchgfx12TextProvider11endOfStringEv>
 80170c2:	2800      	cmp	r0, #0
 80170c4:	d095      	beq.n	8016ff2 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d2>
 80170c6:	e784      	b.n	8016fd2 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b2>
 80170c8:	2a01      	cmp	r2, #1
 80170ca:	d103      	bne.n	80170d4 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x2b4>
 80170cc:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 80170d0:	4403      	add	r3, r0
 80170d2:	e7b9      	b.n	8017048 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x228>
 80170d4:	2a00      	cmp	r2, #0
 80170d6:	d1c3      	bne.n	8017060 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x240>
 80170d8:	7be3      	ldrb	r3, [r4, #15]
 80170da:	4403      	add	r3, r0
 80170dc:	e7be      	b.n	801705c <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23c>
 80170de:	7be2      	ldrb	r2, [r4, #15]
 80170e0:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 80170e4:	1a9b      	subs	r3, r3, r2
 80170e6:	e7b9      	b.n	801705c <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23c>
 80170e8:	7be3      	ldrb	r3, [r4, #15]
 80170ea:	e7b7      	b.n	801705c <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23c>
 80170ec:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80170f0:	e7bd      	b.n	801706e <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>

080170f2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 80170f2:	b510      	push	{r4, lr}
 80170f4:	2b02      	cmp	r3, #2
 80170f6:	f9b0 4000 	ldrsh.w	r4, [r0]
 80170fa:	d00b      	beq.n	8017114 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 80170fc:	2b03      	cmp	r3, #3
 80170fe:	d00e      	beq.n	801711e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 8017100:	2b01      	cmp	r3, #1
 8017102:	d001      	beq.n	8017108 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 8017104:	1860      	adds	r0, r4, r1
 8017106:	bd10      	pop	{r4, pc}
 8017108:	8880      	ldrh	r0, [r0, #4]
 801710a:	4420      	add	r0, r4
 801710c:	b200      	sxth	r0, r0
 801710e:	1a80      	subs	r0, r0, r2
 8017110:	3801      	subs	r0, #1
 8017112:	e7f8      	b.n	8017106 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 8017114:	8880      	ldrh	r0, [r0, #4]
 8017116:	4420      	add	r0, r4
 8017118:	b200      	sxth	r0, r0
 801711a:	1a40      	subs	r0, r0, r1
 801711c:	e7f8      	b.n	8017110 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 801711e:	18a0      	adds	r0, r4, r2
 8017120:	e7f1      	b.n	8017106 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

08017122 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8017122:	b510      	push	{r4, lr}
 8017124:	2b02      	cmp	r3, #2
 8017126:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 801712a:	d006      	beq.n	801713a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 801712c:	2b03      	cmp	r3, #3
 801712e:	d00a      	beq.n	8017146 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8017130:	2b01      	cmp	r3, #1
 8017132:	bf14      	ite	ne
 8017134:	18a0      	addne	r0, r4, r2
 8017136:	1860      	addeq	r0, r4, r1
 8017138:	bd10      	pop	{r4, pc}
 801713a:	88c0      	ldrh	r0, [r0, #6]
 801713c:	4420      	add	r0, r4
 801713e:	b200      	sxth	r0, r0
 8017140:	1a80      	subs	r0, r0, r2
 8017142:	3801      	subs	r0, #1
 8017144:	e7f8      	b.n	8017138 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 8017146:	88c0      	ldrh	r0, [r0, #6]
 8017148:	4420      	add	r0, r4
 801714a:	b200      	sxth	r0, r0
 801714c:	1a40      	subs	r0, r0, r1
 801714e:	e7f8      	b.n	8017142 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>

08017150 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8017150:	4b01      	ldr	r3, [pc, #4]	; (8017158 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8017152:	2200      	movs	r2, #0
 8017154:	601a      	str	r2, [r3, #0]
 8017156:	4770      	bx	lr
 8017158:	2002bd3c 	.word	0x2002bd3c

0801715c <_ZN8touchgfx16TouchCalibration4clzuEm>:
 801715c:	4603      	mov	r3, r0
 801715e:	b1c8      	cbz	r0, 8017194 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8017160:	0c02      	lsrs	r2, r0, #16
 8017162:	0412      	lsls	r2, r2, #16
 8017164:	b9a2      	cbnz	r2, 8017190 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8017166:	0403      	lsls	r3, r0, #16
 8017168:	2010      	movs	r0, #16
 801716a:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801716e:	bf04      	itt	eq
 8017170:	021b      	lsleq	r3, r3, #8
 8017172:	3008      	addeq	r0, #8
 8017174:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8017178:	bf04      	itt	eq
 801717a:	011b      	lsleq	r3, r3, #4
 801717c:	3004      	addeq	r0, #4
 801717e:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8017182:	bf04      	itt	eq
 8017184:	009b      	lsleq	r3, r3, #2
 8017186:	3002      	addeq	r0, #2
 8017188:	2b00      	cmp	r3, #0
 801718a:	db04      	blt.n	8017196 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 801718c:	3001      	adds	r0, #1
 801718e:	4770      	bx	lr
 8017190:	2000      	movs	r0, #0
 8017192:	e7ea      	b.n	801716a <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8017194:	2020      	movs	r0, #32
 8017196:	4770      	bx	lr

08017198 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8017198:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801719c:	b087      	sub	sp, #28
 801719e:	4681      	mov	r9, r0
 80171a0:	4698      	mov	r8, r3
 80171a2:	4610      	mov	r0, r2
 80171a4:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 80171a8:	460d      	mov	r5, r1
 80171aa:	b981      	cbnz	r1, 80171ce <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 80171ac:	b14b      	cbz	r3, 80171c2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 80171ae:	460b      	mov	r3, r1
 80171b0:	e9cd 4700 	strd	r4, r7, [sp]
 80171b4:	464a      	mov	r2, r9
 80171b6:	4641      	mov	r1, r8
 80171b8:	f7ff ffee 	bl	8017198 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80171bc:	b007      	add	sp, #28
 80171be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80171c2:	f04f 33ff 	mov.w	r3, #4294967295
 80171c6:	603b      	str	r3, [r7, #0]
 80171c8:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80171cc:	e7f6      	b.n	80171bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 80171ce:	fa32 fa01 	lsrs.w	sl, r2, r1
 80171d2:	d107      	bne.n	80171e4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 80171d4:	fb09 f602 	mul.w	r6, r9, r2
 80171d8:	fbb6 f0f4 	udiv	r0, r6, r4
 80171dc:	fb04 6610 	mls	r6, r4, r0, r6
 80171e0:	603e      	str	r6, [r7, #0]
 80171e2:	e7eb      	b.n	80171bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 80171e4:	2601      	movs	r6, #1
 80171e6:	408e      	lsls	r6, r1
 80171e8:	3e01      	subs	r6, #1
 80171ea:	4016      	ands	r6, r2
 80171ec:	fa09 fb01 	lsl.w	fp, r9, r1
 80171f0:	4630      	mov	r0, r6
 80171f2:	fbbb f3f4 	udiv	r3, fp, r4
 80171f6:	9302      	str	r3, [sp, #8]
 80171f8:	fb0a f303 	mul.w	r3, sl, r3
 80171fc:	9303      	str	r3, [sp, #12]
 80171fe:	f7ff ffad 	bl	801715c <_ZN8touchgfx16TouchCalibration4clzuEm>
 8017202:	464a      	mov	r2, r9
 8017204:	460b      	mov	r3, r1
 8017206:	e9cd 4700 	strd	r4, r7, [sp]
 801720a:	4601      	mov	r1, r0
 801720c:	4630      	mov	r0, r6
 801720e:	f7ff ffc3 	bl	8017198 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8017212:	9b02      	ldr	r3, [sp, #8]
 8017214:	fb04 bb13 	mls	fp, r4, r3, fp
 8017218:	4606      	mov	r6, r0
 801721a:	4658      	mov	r0, fp
 801721c:	eb05 0108 	add.w	r1, r5, r8
 8017220:	f7ff ff9c 	bl	801715c <_ZN8touchgfx16TouchCalibration4clzuEm>
 8017224:	ab05      	add	r3, sp, #20
 8017226:	e9cd 4300 	strd	r4, r3, [sp]
 801722a:	465a      	mov	r2, fp
 801722c:	4603      	mov	r3, r0
 801722e:	4650      	mov	r0, sl
 8017230:	f7ff ffb2 	bl	8017198 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8017234:	6839      	ldr	r1, [r7, #0]
 8017236:	9a05      	ldr	r2, [sp, #20]
 8017238:	9b03      	ldr	r3, [sp, #12]
 801723a:	4411      	add	r1, r2
 801723c:	fbb1 f2f4 	udiv	r2, r1, r4
 8017240:	18d3      	adds	r3, r2, r3
 8017242:	441e      	add	r6, r3
 8017244:	fb04 1412 	mls	r4, r4, r2, r1
 8017248:	4430      	add	r0, r6
 801724a:	603c      	str	r4, [r7, #0]
 801724c:	e7b6      	b.n	80171bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0801724e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 801724e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017252:	b085      	sub	sp, #20
 8017254:	f1b0 0900 	subs.w	r9, r0, #0
 8017258:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801725a:	461d      	mov	r5, r3
 801725c:	bfbf      	itttt	lt
 801725e:	6823      	ldrlt	r3, [r4, #0]
 8017260:	425b      	neglt	r3, r3
 8017262:	f1c9 0900 	rsblt	r9, r9, #0
 8017266:	6023      	strlt	r3, [r4, #0]
 8017268:	bfb4      	ite	lt
 801726a:	f04f 36ff 	movlt.w	r6, #4294967295
 801726e:	2601      	movge	r6, #1
 8017270:	2a00      	cmp	r2, #0
 8017272:	4617      	mov	r7, r2
 8017274:	da04      	bge.n	8017280 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8017276:	6823      	ldr	r3, [r4, #0]
 8017278:	425b      	negs	r3, r3
 801727a:	4257      	negs	r7, r2
 801727c:	4276      	negs	r6, r6
 801727e:	6023      	str	r3, [r4, #0]
 8017280:	2d00      	cmp	r5, #0
 8017282:	4638      	mov	r0, r7
 8017284:	bfba      	itte	lt
 8017286:	426d      	neglt	r5, r5
 8017288:	f04f 38ff 	movlt.w	r8, #4294967295
 801728c:	f04f 0801 	movge.w	r8, #1
 8017290:	f7ff ff64 	bl	801715c <_ZN8touchgfx16TouchCalibration4clzuEm>
 8017294:	ab03      	add	r3, sp, #12
 8017296:	e9cd 5300 	strd	r5, r3, [sp]
 801729a:	463a      	mov	r2, r7
 801729c:	4603      	mov	r3, r0
 801729e:	4648      	mov	r0, r9
 80172a0:	f7ff ff7a 	bl	8017198 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80172a4:	6823      	ldr	r3, [r4, #0]
 80172a6:	9a03      	ldr	r2, [sp, #12]
 80172a8:	4546      	cmp	r6, r8
 80172aa:	441a      	add	r2, r3
 80172ac:	fb92 f3f5 	sdiv	r3, r2, r5
 80172b0:	4418      	add	r0, r3
 80172b2:	bf18      	it	ne
 80172b4:	4240      	negne	r0, r0
 80172b6:	fb05 2313 	mls	r3, r5, r3, r2
 80172ba:	1c72      	adds	r2, r6, #1
 80172bc:	6023      	str	r3, [r4, #0]
 80172be:	d105      	bne.n	80172cc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 80172c0:	2b00      	cmp	r3, #0
 80172c2:	f1c3 0200 	rsb	r2, r3, #0
 80172c6:	db0b      	blt.n	80172e0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 80172c8:	6022      	str	r2, [r4, #0]
 80172ca:	e006      	b.n	80172da <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80172cc:	2e01      	cmp	r6, #1
 80172ce:	d104      	bne.n	80172da <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80172d0:	2b00      	cmp	r3, #0
 80172d2:	da02      	bge.n	80172da <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80172d4:	442b      	add	r3, r5
 80172d6:	3801      	subs	r0, #1
 80172d8:	6023      	str	r3, [r4, #0]
 80172da:	b005      	add	sp, #20
 80172dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80172e0:	3801      	subs	r0, #1
 80172e2:	1b52      	subs	r2, r2, r5
 80172e4:	e7f0      	b.n	80172c8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

080172e8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 80172e8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80172ec:	4c1c      	ldr	r4, [pc, #112]	; (8017360 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 80172ee:	6807      	ldr	r7, [r0, #0]
 80172f0:	69a3      	ldr	r3, [r4, #24]
 80172f2:	4605      	mov	r5, r0
 80172f4:	b92b      	cbnz	r3, 8017302 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 80172f6:	6840      	ldr	r0, [r0, #4]
 80172f8:	e9c5 7000 	strd	r7, r0, [r5]
 80172fc:	b004      	add	sp, #16
 80172fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017302:	68a2      	ldr	r2, [r4, #8]
 8017304:	6820      	ldr	r0, [r4, #0]
 8017306:	ae04      	add	r6, sp, #16
 8017308:	f04f 0802 	mov.w	r8, #2
 801730c:	fb93 f1f8 	sdiv	r1, r3, r8
 8017310:	440a      	add	r2, r1
 8017312:	f846 2d04 	str.w	r2, [r6, #-4]!
 8017316:	69e1      	ldr	r1, [r4, #28]
 8017318:	9600      	str	r6, [sp, #0]
 801731a:	463a      	mov	r2, r7
 801731c:	f7ff ff97 	bl	801724e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8017320:	69a3      	ldr	r3, [r4, #24]
 8017322:	686a      	ldr	r2, [r5, #4]
 8017324:	6a21      	ldr	r1, [r4, #32]
 8017326:	9600      	str	r6, [sp, #0]
 8017328:	4607      	mov	r7, r0
 801732a:	6860      	ldr	r0, [r4, #4]
 801732c:	f7ff ff8f 	bl	801724e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8017330:	6962      	ldr	r2, [r4, #20]
 8017332:	69a3      	ldr	r3, [r4, #24]
 8017334:	fb93 f8f8 	sdiv	r8, r3, r8
 8017338:	4442      	add	r2, r8
 801733a:	9203      	str	r2, [sp, #12]
 801733c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801733e:	682a      	ldr	r2, [r5, #0]
 8017340:	9600      	str	r6, [sp, #0]
 8017342:	4407      	add	r7, r0
 8017344:	68e0      	ldr	r0, [r4, #12]
 8017346:	f7ff ff82 	bl	801724e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801734a:	9600      	str	r6, [sp, #0]
 801734c:	4680      	mov	r8, r0
 801734e:	69a3      	ldr	r3, [r4, #24]
 8017350:	686a      	ldr	r2, [r5, #4]
 8017352:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8017354:	6920      	ldr	r0, [r4, #16]
 8017356:	f7ff ff7a 	bl	801724e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801735a:	4440      	add	r0, r8
 801735c:	e7cc      	b.n	80172f8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801735e:	bf00      	nop
 8017360:	2002bd40 	.word	0x2002bd40

08017364 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8017364:	4b07      	ldr	r3, [pc, #28]	; (8017384 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8017366:	781b      	ldrb	r3, [r3, #0]
 8017368:	2b01      	cmp	r3, #1
 801736a:	d109      	bne.n	8017380 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 801736c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8017370:	f9b0 2000 	ldrsh.w	r2, [r0]
 8017374:	8003      	strh	r3, [r0, #0]
 8017376:	4b04      	ldr	r3, [pc, #16]	; (8017388 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8017378:	881b      	ldrh	r3, [r3, #0]
 801737a:	3b01      	subs	r3, #1
 801737c:	1a9b      	subs	r3, r3, r2
 801737e:	800b      	strh	r3, [r1, #0]
 8017380:	4770      	bx	lr
 8017382:	bf00      	nop
 8017384:	2002bd2c 	.word	0x2002bd2c
 8017388:	2002bd30 	.word	0x2002bd30

0801738c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 801738c:	b510      	push	{r4, lr}
 801738e:	4b07      	ldr	r3, [pc, #28]	; (80173ac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8017390:	781b      	ldrb	r3, [r3, #0]
 8017392:	2b01      	cmp	r3, #1
 8017394:	d108      	bne.n	80173a8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8017396:	4b06      	ldr	r3, [pc, #24]	; (80173b0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8017398:	880c      	ldrh	r4, [r1, #0]
 801739a:	881b      	ldrh	r3, [r3, #0]
 801739c:	f9b0 2000 	ldrsh.w	r2, [r0]
 80173a0:	3b01      	subs	r3, #1
 80173a2:	1b1b      	subs	r3, r3, r4
 80173a4:	8003      	strh	r3, [r0, #0]
 80173a6:	800a      	strh	r2, [r1, #0]
 80173a8:	bd10      	pop	{r4, pc}
 80173aa:	bf00      	nop
 80173ac:	2002bd2c 	.word	0x2002bd2c
 80173b0:	2002bd30 	.word	0x2002bd30

080173b4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 80173b4:	b510      	push	{r4, lr}
 80173b6:	4b0a      	ldr	r3, [pc, #40]	; (80173e0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 80173b8:	781b      	ldrb	r3, [r3, #0]
 80173ba:	2b01      	cmp	r3, #1
 80173bc:	d10e      	bne.n	80173dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 80173be:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80173c2:	8843      	ldrh	r3, [r0, #2]
 80173c4:	f9b0 4000 	ldrsh.w	r4, [r0]
 80173c8:	8044      	strh	r4, [r0, #2]
 80173ca:	18ca      	adds	r2, r1, r3
 80173cc:	4b05      	ldr	r3, [pc, #20]	; (80173e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 80173ce:	881b      	ldrh	r3, [r3, #0]
 80173d0:	1a9b      	subs	r3, r3, r2
 80173d2:	8003      	strh	r3, [r0, #0]
 80173d4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80173d8:	80c3      	strh	r3, [r0, #6]
 80173da:	8081      	strh	r1, [r0, #4]
 80173dc:	bd10      	pop	{r4, pc}
 80173de:	bf00      	nop
 80173e0:	2002bd2c 	.word	0x2002bd2c
 80173e4:	2002bd30 	.word	0x2002bd30

080173e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 80173e8:	4b08      	ldr	r3, [pc, #32]	; (801740c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 80173ea:	781b      	ldrb	r3, [r3, #0]
 80173ec:	2b01      	cmp	r3, #1
 80173ee:	d10c      	bne.n	801740a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 80173f0:	8803      	ldrh	r3, [r0, #0]
 80173f2:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 80173f6:	8842      	ldrh	r2, [r0, #2]
 80173f8:	8002      	strh	r2, [r0, #0]
 80173fa:	185a      	adds	r2, r3, r1
 80173fc:	4b04      	ldr	r3, [pc, #16]	; (8017410 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 80173fe:	881b      	ldrh	r3, [r3, #0]
 8017400:	1a9b      	subs	r3, r3, r2
 8017402:	8043      	strh	r3, [r0, #2]
 8017404:	88c3      	ldrh	r3, [r0, #6]
 8017406:	8083      	strh	r3, [r0, #4]
 8017408:	80c1      	strh	r1, [r0, #6]
 801740a:	4770      	bx	lr
 801740c:	2002bd2c 	.word	0x2002bd2c
 8017410:	2002bd30 	.word	0x2002bd30

08017414 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8017414:	b510      	push	{r4, lr}
 8017416:	4b07      	ldr	r3, [pc, #28]	; (8017434 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8017418:	781b      	ldrb	r3, [r3, #0]
 801741a:	2b01      	cmp	r3, #1
 801741c:	d108      	bne.n	8017430 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801741e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8017422:	f9b0 4000 	ldrsh.w	r4, [r0]
 8017426:	8003      	strh	r3, [r0, #0]
 8017428:	8893      	ldrh	r3, [r2, #4]
 801742a:	3b01      	subs	r3, #1
 801742c:	1b1b      	subs	r3, r3, r4
 801742e:	800b      	strh	r3, [r1, #0]
 8017430:	bd10      	pop	{r4, pc}
 8017432:	bf00      	nop
 8017434:	2002bd2c 	.word	0x2002bd2c

08017438 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8017438:	b510      	push	{r4, lr}
 801743a:	4b0a      	ldr	r3, [pc, #40]	; (8017464 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 801743c:	781b      	ldrb	r3, [r3, #0]
 801743e:	2b01      	cmp	r3, #1
 8017440:	460a      	mov	r2, r1
 8017442:	d10d      	bne.n	8017460 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8017444:	8881      	ldrh	r1, [r0, #4]
 8017446:	8803      	ldrh	r3, [r0, #0]
 8017448:	440b      	add	r3, r1
 801744a:	4601      	mov	r1, r0
 801744c:	3b01      	subs	r3, #1
 801744e:	f821 3b02 	strh.w	r3, [r1], #2
 8017452:	f7ff ffdf 	bl	8017414 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8017456:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801745a:	88c2      	ldrh	r2, [r0, #6]
 801745c:	8082      	strh	r2, [r0, #4]
 801745e:	80c3      	strh	r3, [r0, #6]
 8017460:	bd10      	pop	{r4, pc}
 8017462:	bf00      	nop
 8017464:	2002bd2c 	.word	0x2002bd2c

08017468 <_ZN8touchgfx11Application13requestRedrawEv>:
 8017468:	4b06      	ldr	r3, [pc, #24]	; (8017484 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 801746a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801746e:	4b06      	ldr	r3, [pc, #24]	; (8017488 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8017470:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 8017474:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017478:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 801747c:	2100      	movs	r1, #0
 801747e:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 8017482:	4770      	bx	lr
 8017484:	2002bd28 	.word	0x2002bd28
 8017488:	2002bd2a 	.word	0x2002bd2a

0801748c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 801748c:	4b03      	ldr	r3, [pc, #12]	; (801749c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 801748e:	6818      	ldr	r0, [r3, #0]
 8017490:	b110      	cbz	r0, 8017498 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8017492:	6803      	ldr	r3, [r0, #0]
 8017494:	699b      	ldr	r3, [r3, #24]
 8017496:	4718      	bx	r3
 8017498:	4770      	bx	lr
 801749a:	bf00      	nop
 801749c:	2002bd70 	.word	0x2002bd70

080174a0 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 80174a0:	4770      	bx	lr
	...

080174a4 <_ZN8touchgfx11Application4drawEv>:
 80174a4:	b507      	push	{r0, r1, r2, lr}
 80174a6:	4b09      	ldr	r3, [pc, #36]	; (80174cc <_ZN8touchgfx11Application4drawEv+0x28>)
 80174a8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80174ac:	4b08      	ldr	r3, [pc, #32]	; (80174d0 <_ZN8touchgfx11Application4drawEv+0x2c>)
 80174ae:	f8ad 2004 	strh.w	r2, [sp, #4]
 80174b2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80174b6:	f8ad 3006 	strh.w	r3, [sp, #6]
 80174ba:	6803      	ldr	r3, [r0, #0]
 80174bc:	2100      	movs	r1, #0
 80174be:	9100      	str	r1, [sp, #0]
 80174c0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80174c2:	4669      	mov	r1, sp
 80174c4:	4798      	blx	r3
 80174c6:	b003      	add	sp, #12
 80174c8:	f85d fb04 	ldr.w	pc, [sp], #4
 80174cc:	2002bd28 	.word	0x2002bd28
 80174d0:	2002bd2a 	.word	0x2002bd2a

080174d4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 80174d4:	4b03      	ldr	r3, [pc, #12]	; (80174e4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 80174d6:	6818      	ldr	r0, [r3, #0]
 80174d8:	b110      	cbz	r0, 80174e0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 80174da:	6803      	ldr	r3, [r0, #0]
 80174dc:	69db      	ldr	r3, [r3, #28]
 80174de:	4718      	bx	r3
 80174e0:	4770      	bx	lr
 80174e2:	bf00      	nop
 80174e4:	2002bd70 	.word	0x2002bd70

080174e8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 80174e8:	4b03      	ldr	r3, [pc, #12]	; (80174f8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 80174ea:	6818      	ldr	r0, [r3, #0]
 80174ec:	b110      	cbz	r0, 80174f4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 80174ee:	6803      	ldr	r3, [r0, #0]
 80174f0:	6a1b      	ldr	r3, [r3, #32]
 80174f2:	4718      	bx	r3
 80174f4:	4770      	bx	lr
 80174f6:	bf00      	nop
 80174f8:	2002bd70 	.word	0x2002bd70

080174fc <_ZN8touchgfx11Application14handleKeyEventEh>:
 80174fc:	4b03      	ldr	r3, [pc, #12]	; (801750c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 80174fe:	6818      	ldr	r0, [r3, #0]
 8017500:	b110      	cbz	r0, 8017508 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8017502:	6803      	ldr	r3, [r0, #0]
 8017504:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017506:	4718      	bx	r3
 8017508:	4770      	bx	lr
 801750a:	bf00      	nop
 801750c:	2002bd70 	.word	0x2002bd70

08017510 <_ZN8touchgfx11ApplicationD1Ev>:
 8017510:	4770      	bx	lr

08017512 <_ZN8touchgfx11ApplicationD0Ev>:
 8017512:	b510      	push	{r4, lr}
 8017514:	f44f 719c 	mov.w	r1, #312	; 0x138
 8017518:	4604      	mov	r4, r0
 801751a:	f010 f903 	bl	8027724 <_ZdlPvj>
 801751e:	4620      	mov	r0, r4
 8017520:	bd10      	pop	{r4, pc}
	...

08017524 <_ZN8touchgfx11Application15handleTickEventEv>:
 8017524:	b570      	push	{r4, r5, r6, lr}
 8017526:	4d38      	ldr	r5, [pc, #224]	; (8017608 <_ZN8touchgfx11Application15handleTickEventEv+0xe4>)
 8017528:	4604      	mov	r4, r0
 801752a:	6828      	ldr	r0, [r5, #0]
 801752c:	b140      	cbz	r0, 8017540 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801752e:	7a03      	ldrb	r3, [r0, #8]
 8017530:	b933      	cbnz	r3, 8017540 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8017532:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 8017536:	6803      	ldr	r3, [r0, #0]
 8017538:	689b      	ldr	r3, [r3, #8]
 801753a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801753e:	4718      	bx	r3
 8017540:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
 8017544:	b97b      	cbnz	r3, 8017566 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8017546:	b170      	cbz	r0, 8017566 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8017548:	7a03      	ldrb	r3, [r0, #8]
 801754a:	b163      	cbz	r3, 8017566 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801754c:	4b2f      	ldr	r3, [pc, #188]	; (801760c <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 801754e:	6818      	ldr	r0, [r3, #0]
 8017550:	b110      	cbz	r0, 8017558 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8017552:	6803      	ldr	r3, [r0, #0]
 8017554:	691b      	ldr	r3, [r3, #16]
 8017556:	4798      	blx	r3
 8017558:	6828      	ldr	r0, [r5, #0]
 801755a:	6803      	ldr	r3, [r0, #0]
 801755c:	68db      	ldr	r3, [r3, #12]
 801755e:	4798      	blx	r3
 8017560:	2301      	movs	r3, #1
 8017562:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 8017566:	2500      	movs	r5, #0
 8017568:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 801756c:	42a8      	cmp	r0, r5
 801756e:	dd0c      	ble.n	801758a <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 8017570:	1963      	adds	r3, r4, r5
 8017572:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 8017576:	b132      	cbz	r2, 8017586 <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 8017578:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 801757c:	4413      	add	r3, r2
 801757e:	6858      	ldr	r0, [r3, #4]
 8017580:	6803      	ldr	r3, [r0, #0]
 8017582:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017584:	4798      	blx	r3
 8017586:	3501      	adds	r5, #1
 8017588:	e7ee      	b.n	8017568 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 801758a:	2300      	movs	r3, #0
 801758c:	461a      	mov	r2, r3
 801758e:	4298      	cmp	r0, r3
 8017590:	d10f      	bne.n	80175b2 <_ZN8touchgfx11Application15handleTickEventEv+0x8e>
 8017592:	1d25      	adds	r5, r4, #4
 8017594:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 8017598:	4291      	cmp	r1, r2
 801759a:	dd2d      	ble.n	80175f8 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>
 801759c:	1e48      	subs	r0, r1, #1
 801759e:	b280      	uxth	r0, r0
 80175a0:	4288      	cmp	r0, r1
 80175a2:	d31a      	bcc.n	80175da <_ZN8touchgfx11Application15handleTickEventEv+0xb6>
 80175a4:	4b1a      	ldr	r3, [pc, #104]	; (8017610 <_ZN8touchgfx11Application15handleTickEventEv+0xec>)
 80175a6:	4a1b      	ldr	r2, [pc, #108]	; (8017614 <_ZN8touchgfx11Application15handleTickEventEv+0xf0>)
 80175a8:	481b      	ldr	r0, [pc, #108]	; (8017618 <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 80175aa:	f240 11a9 	movw	r1, #425	; 0x1a9
 80175ae:	f010 f8e7 	bl	8027780 <__assert_func>
 80175b2:	18e1      	adds	r1, r4, r3
 80175b4:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 80175b8:	b16d      	cbz	r5, 80175d6 <_ZN8touchgfx11Application15handleTickEventEv+0xb2>
 80175ba:	429a      	cmp	r2, r3
 80175bc:	d00a      	beq.n	80175d4 <_ZN8touchgfx11Application15handleTickEventEv+0xb0>
 80175be:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 80175c2:	4431      	add	r1, r6
 80175c4:	684e      	ldr	r6, [r1, #4]
 80175c6:	b291      	uxth	r1, r2
 80175c8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80175cc:	604e      	str	r6, [r1, #4]
 80175ce:	18a1      	adds	r1, r4, r2
 80175d0:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 80175d4:	3201      	adds	r2, #1
 80175d6:	3301      	adds	r3, #1
 80175d8:	e7d9      	b.n	801758e <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 80175da:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 80175de:	3304      	adds	r3, #4
 80175e0:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 80175e4:	428b      	cmp	r3, r1
 80175e6:	d004      	beq.n	80175f2 <_ZN8touchgfx11Application15handleTickEventEv+0xce>
 80175e8:	f853 6f04 	ldr.w	r6, [r3, #4]!
 80175ec:	f843 6c04 	str.w	r6, [r3, #-4]
 80175f0:	e7f8      	b.n	80175e4 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 80175f2:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 80175f6:	e7cd      	b.n	8017594 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 80175f8:	4b04      	ldr	r3, [pc, #16]	; (801760c <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 80175fa:	6818      	ldr	r0, [r3, #0]
 80175fc:	b110      	cbz	r0, 8017604 <_ZN8touchgfx11Application15handleTickEventEv+0xe0>
 80175fe:	6803      	ldr	r3, [r0, #0]
 8017600:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8017602:	e79a      	b.n	801753a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8017604:	bd70      	pop	{r4, r5, r6, pc}
 8017606:	bf00      	nop
 8017608:	2002bd74 	.word	0x2002bd74
 801760c:	2002bd70 	.word	0x2002bd70
 8017610:	0802c5c0 	.word	0x0802c5c0
 8017614:	0802c819 	.word	0x0802c819
 8017618:	0802c5ce 	.word	0x0802c5ce

0801761c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 801761c:	b570      	push	{r4, r5, r6, lr}
 801761e:	4606      	mov	r6, r0
 8017620:	460c      	mov	r4, r1
 8017622:	b929      	cbnz	r1, 8017630 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 8017624:	4b0c      	ldr	r3, [pc, #48]	; (8017658 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 8017626:	4a0d      	ldr	r2, [pc, #52]	; (801765c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 8017628:	480d      	ldr	r0, [pc, #52]	; (8017660 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 801762a:	2167      	movs	r1, #103	; 0x67
 801762c:	f010 f8a8 	bl	8027780 <__assert_func>
 8017630:	4d0c      	ldr	r5, [pc, #48]	; (8017664 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 8017632:	2300      	movs	r3, #0
 8017634:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 8017638:	6828      	ldr	r0, [r5, #0]
 801763a:	b110      	cbz	r0, 8017642 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 801763c:	6803      	ldr	r3, [r0, #0]
 801763e:	695b      	ldr	r3, [r3, #20]
 8017640:	4798      	blx	r3
 8017642:	602c      	str	r4, [r5, #0]
 8017644:	6823      	ldr	r3, [r4, #0]
 8017646:	4620      	mov	r0, r4
 8017648:	68db      	ldr	r3, [r3, #12]
 801764a:	4798      	blx	r3
 801764c:	6833      	ldr	r3, [r6, #0]
 801764e:	4630      	mov	r0, r6
 8017650:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8017652:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017656:	4718      	bx	r3
 8017658:	0802c58c 	.word	0x0802c58c
 801765c:	0802c694 	.word	0x0802c694
 8017660:	0802c596 	.word	0x0802c596
 8017664:	2002bd70 	.word	0x2002bd70

08017668 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8017668:	b510      	push	{r4, lr}
 801766a:	f9b1 4000 	ldrsh.w	r4, [r1]
 801766e:	888a      	ldrh	r2, [r1, #4]
 8017670:	f9b0 3000 	ldrsh.w	r3, [r0]
 8017674:	4422      	add	r2, r4
 8017676:	b212      	sxth	r2, r2
 8017678:	4293      	cmp	r3, r2
 801767a:	da15      	bge.n	80176a8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801767c:	8882      	ldrh	r2, [r0, #4]
 801767e:	4413      	add	r3, r2
 8017680:	b21b      	sxth	r3, r3
 8017682:	429c      	cmp	r4, r3
 8017684:	da10      	bge.n	80176a8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8017686:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801768a:	88c9      	ldrh	r1, [r1, #6]
 801768c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8017690:	4419      	add	r1, r3
 8017692:	b209      	sxth	r1, r1
 8017694:	428a      	cmp	r2, r1
 8017696:	da07      	bge.n	80176a8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8017698:	88c0      	ldrh	r0, [r0, #6]
 801769a:	4410      	add	r0, r2
 801769c:	b200      	sxth	r0, r0
 801769e:	4283      	cmp	r3, r0
 80176a0:	bfac      	ite	ge
 80176a2:	2000      	movge	r0, #0
 80176a4:	2001      	movlt	r0, #1
 80176a6:	bd10      	pop	{r4, pc}
 80176a8:	2000      	movs	r0, #0
 80176aa:	e7fc      	b.n	80176a6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

080176ac <_ZNK8touchgfx4Rect8includesERKS0_>:
 80176ac:	b570      	push	{r4, r5, r6, lr}
 80176ae:	f9b1 4000 	ldrsh.w	r4, [r1]
 80176b2:	f9b0 5000 	ldrsh.w	r5, [r0]
 80176b6:	42ac      	cmp	r4, r5
 80176b8:	db18      	blt.n	80176ec <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 80176ba:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 80176be:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80176c2:	429a      	cmp	r2, r3
 80176c4:	db12      	blt.n	80176ec <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 80176c6:	8886      	ldrh	r6, [r0, #4]
 80176c8:	4435      	add	r5, r6
 80176ca:	888e      	ldrh	r6, [r1, #4]
 80176cc:	4434      	add	r4, r6
 80176ce:	b22d      	sxth	r5, r5
 80176d0:	b224      	sxth	r4, r4
 80176d2:	42a5      	cmp	r5, r4
 80176d4:	db0a      	blt.n	80176ec <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 80176d6:	88c0      	ldrh	r0, [r0, #6]
 80176d8:	4418      	add	r0, r3
 80176da:	88cb      	ldrh	r3, [r1, #6]
 80176dc:	441a      	add	r2, r3
 80176de:	b200      	sxth	r0, r0
 80176e0:	b212      	sxth	r2, r2
 80176e2:	4290      	cmp	r0, r2
 80176e4:	bfb4      	ite	lt
 80176e6:	2000      	movlt	r0, #0
 80176e8:	2001      	movge	r0, #1
 80176ea:	bd70      	pop	{r4, r5, r6, pc}
 80176ec:	2000      	movs	r0, #0
 80176ee:	e7fc      	b.n	80176ea <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

080176f0 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 80176f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80176f2:	4604      	mov	r4, r0
 80176f4:	4608      	mov	r0, r1
 80176f6:	460d      	mov	r5, r1
 80176f8:	f7fc f841 	bl	801377e <_ZNK8touchgfx4Rect7isEmptyEv>
 80176fc:	b978      	cbnz	r0, 801771e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 80176fe:	4620      	mov	r0, r4
 8017700:	f7fc f83d 	bl	801377e <_ZNK8touchgfx4Rect7isEmptyEv>
 8017704:	f9b5 6000 	ldrsh.w	r6, [r5]
 8017708:	b150      	cbz	r0, 8017720 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 801770a:	8026      	strh	r6, [r4, #0]
 801770c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8017710:	8063      	strh	r3, [r4, #2]
 8017712:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8017716:	80a3      	strh	r3, [r4, #4]
 8017718:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 801771c:	80e3      	strh	r3, [r4, #6]
 801771e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017720:	f9b4 1000 	ldrsh.w	r1, [r4]
 8017724:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8017728:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 801772c:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8017730:	88ed      	ldrh	r5, [r5, #6]
 8017732:	42b1      	cmp	r1, r6
 8017734:	460f      	mov	r7, r1
 8017736:	bfa8      	it	ge
 8017738:	4637      	movge	r7, r6
 801773a:	4293      	cmp	r3, r2
 801773c:	4618      	mov	r0, r3
 801773e:	4466      	add	r6, ip
 8017740:	bfa8      	it	ge
 8017742:	4610      	movge	r0, r2
 8017744:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8017748:	8027      	strh	r7, [r4, #0]
 801774a:	442a      	add	r2, r5
 801774c:	88e5      	ldrh	r5, [r4, #6]
 801774e:	8060      	strh	r0, [r4, #2]
 8017750:	4461      	add	r1, ip
 8017752:	442b      	add	r3, r5
 8017754:	b236      	sxth	r6, r6
 8017756:	b209      	sxth	r1, r1
 8017758:	b212      	sxth	r2, r2
 801775a:	b21b      	sxth	r3, r3
 801775c:	428e      	cmp	r6, r1
 801775e:	bfac      	ite	ge
 8017760:	ebc7 0106 	rsbge	r1, r7, r6
 8017764:	ebc7 0101 	rsblt	r1, r7, r1
 8017768:	429a      	cmp	r2, r3
 801776a:	bfac      	ite	ge
 801776c:	ebc0 0202 	rsbge	r2, r0, r2
 8017770:	ebc0 0203 	rsblt	r2, r0, r3
 8017774:	80a1      	strh	r1, [r4, #4]
 8017776:	80e2      	strh	r2, [r4, #6]
 8017778:	e7d1      	b.n	801771e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0801777c <_ZN8touchgfx11Application11getInstanceEv>:
 801777c:	4b01      	ldr	r3, [pc, #4]	; (8017784 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 801777e:	6818      	ldr	r0, [r3, #0]
 8017780:	4770      	bx	lr
 8017782:	bf00      	nop
 8017784:	2002bd80 	.word	0x2002bd80

08017788 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>:
 8017788:	b570      	push	{r4, r5, r6, lr}
 801778a:	f8b0 3084 	ldrh.w	r3, [r0, #132]	; 0x84
 801778e:	1d04      	adds	r4, r0, #4
 8017790:	2200      	movs	r2, #0
 8017792:	b295      	uxth	r5, r2
 8017794:	42ab      	cmp	r3, r5
 8017796:	d90f      	bls.n	80177b8 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x30>
 8017798:	f854 6b04 	ldr.w	r6, [r4], #4
 801779c:	428e      	cmp	r6, r1
 801779e:	4615      	mov	r5, r2
 80177a0:	f102 0201 	add.w	r2, r2, #1
 80177a4:	d1f5      	bne.n	8017792 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0xa>
 80177a6:	4428      	add	r0, r5
 80177a8:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 80177ac:	2bff      	cmp	r3, #255	; 0xff
 80177ae:	d002      	beq.n	80177b6 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 80177b0:	3301      	adds	r3, #1
 80177b2:	f880 3088 	strb.w	r3, [r0, #136]	; 0x88
 80177b6:	bd70      	pop	{r4, r5, r6, pc}
 80177b8:	2b20      	cmp	r3, #32
 80177ba:	d106      	bne.n	80177ca <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x42>
 80177bc:	4b08      	ldr	r3, [pc, #32]	; (80177e0 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x58>)
 80177be:	4a09      	ldr	r2, [pc, #36]	; (80177e4 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x5c>)
 80177c0:	4809      	ldr	r0, [pc, #36]	; (80177e8 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x60>)
 80177c2:	f240 215f 	movw	r1, #607	; 0x25f
 80177c6:	f00f ffdb 	bl	8027780 <__assert_func>
 80177ca:	18c2      	adds	r2, r0, r3
 80177cc:	2401      	movs	r4, #1
 80177ce:	f882 4088 	strb.w	r4, [r2, #136]	; 0x88
 80177d2:	191a      	adds	r2, r3, r4
 80177d4:	f8a0 2084 	strh.w	r2, [r0, #132]	; 0x84
 80177d8:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 80177dc:	6041      	str	r1, [r0, #4]
 80177de:	e7ea      	b.n	80177b6 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 80177e0:	0802c5f7 	.word	0x0802c5f7
 80177e4:	0802c6d8 	.word	0x0802c6d8
 80177e8:	0802c596 	.word	0x0802c596

080177ec <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>:
 80177ec:	b570      	push	{r4, r5, r6, lr}
 80177ee:	f8b0 6084 	ldrh.w	r6, [r0, #132]	; 0x84
 80177f2:	1d04      	adds	r4, r0, #4
 80177f4:	2300      	movs	r3, #0
 80177f6:	b29a      	uxth	r2, r3
 80177f8:	4296      	cmp	r6, r2
 80177fa:	d90a      	bls.n	8017812 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x26>
 80177fc:	f854 2b04 	ldr.w	r2, [r4], #4
 8017800:	428a      	cmp	r2, r1
 8017802:	d107      	bne.n	8017814 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 8017804:	18c5      	adds	r5, r0, r3
 8017806:	f895 2088 	ldrb.w	r2, [r5, #136]	; 0x88
 801780a:	b11a      	cbz	r2, 8017814 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 801780c:	3a01      	subs	r2, #1
 801780e:	f885 2088 	strb.w	r2, [r5, #136]	; 0x88
 8017812:	bd70      	pop	{r4, r5, r6, pc}
 8017814:	3301      	adds	r3, #1
 8017816:	e7ee      	b.n	80177f6 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0xa>

08017818 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 8017818:	2300      	movs	r3, #0
 801781a:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 801781e:	f100 0288 	add.w	r2, r0, #136	; 0x88
 8017822:	30a8      	adds	r0, #168	; 0xa8
 8017824:	f802 3b01 	strb.w	r3, [r2], #1
 8017828:	4282      	cmp	r2, r0
 801782a:	d1fb      	bne.n	8017824 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 801782c:	4770      	bx	lr

0801782e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 801782e:	4603      	mov	r3, r0
 8017830:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8017834:	2200      	movs	r2, #0
 8017836:	801a      	strh	r2, [r3, #0]
 8017838:	805a      	strh	r2, [r3, #2]
 801783a:	809a      	strh	r2, [r3, #4]
 801783c:	80da      	strh	r2, [r3, #6]
 801783e:	3308      	adds	r3, #8
 8017840:	428b      	cmp	r3, r1
 8017842:	d1f8      	bne.n	8017836 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8017844:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8017848:	4770      	bx	lr
	...

0801784c <_ZN8touchgfx11ApplicationC1Ev>:
 801784c:	b570      	push	{r4, r5, r6, lr}
 801784e:	4b1a      	ldr	r3, [pc, #104]	; (80178b8 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 8017850:	6003      	str	r3, [r0, #0]
 8017852:	2500      	movs	r5, #0
 8017854:	4604      	mov	r4, r0
 8017856:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 801785a:	30a8      	adds	r0, #168	; 0xa8
 801785c:	f7ff ffe7 	bl	801782e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8017860:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 8017864:	f7ff ffe3 	bl	801782e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8017868:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 801786c:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 8017870:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8017874:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8017878:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 801787c:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 8017880:	490e      	ldr	r1, [pc, #56]	; (80178bc <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 8017882:	480f      	ldr	r0, [pc, #60]	; (80178c0 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 8017884:	4e0f      	ldr	r6, [pc, #60]	; (80178c4 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8017886:	f00f fe21 	bl	80274cc <CRC_Lock>
 801788a:	4b0f      	ldr	r3, [pc, #60]	; (80178c8 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 801788c:	b158      	cbz	r0, 80178a6 <_ZN8touchgfx11ApplicationC1Ev+0x5a>
 801788e:	801d      	strh	r5, [r3, #0]
 8017890:	4a0e      	ldr	r2, [pc, #56]	; (80178cc <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8017892:	2300      	movs	r3, #0
 8017894:	6013      	str	r3, [r2, #0]
 8017896:	4a0e      	ldr	r2, [pc, #56]	; (80178d0 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8017898:	6033      	str	r3, [r6, #0]
 801789a:	4620      	mov	r0, r4
 801789c:	6013      	str	r3, [r2, #0]
 801789e:	f7ff ffbb 	bl	8017818 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 80178a2:	4620      	mov	r0, r4
 80178a4:	bd70      	pop	{r4, r5, r6, pc}
 80178a6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80178aa:	2002      	movs	r0, #2
 80178ac:	801a      	strh	r2, [r3, #0]
 80178ae:	6030      	str	r0, [r6, #0]
 80178b0:	f001 f9e2 	bl	8018c78 <_ZN8touchgfx6Screen4drawEv>
 80178b4:	e7ec      	b.n	8017890 <_ZN8touchgfx11ApplicationC1Ev+0x44>
 80178b6:	bf00      	nop
 80178b8:	0802c658 	.word	0x0802c658
 80178bc:	b5e8b5cd 	.word	0xb5e8b5cd
 80178c0:	f407a5c2 	.word	0xf407a5c2
 80178c4:	2002bd70 	.word	0x2002bd70
 80178c8:	20000060 	.word	0x20000060
 80178cc:	2002bd80 	.word	0x2002bd80
 80178d0:	2002bd74 	.word	0x2002bd74

080178d4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 80178d4:	b510      	push	{r4, lr}
 80178d6:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 80178da:	428b      	cmp	r3, r1
 80178dc:	d806      	bhi.n	80178ec <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x18>
 80178de:	4b0b      	ldr	r3, [pc, #44]	; (801790c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x38>)
 80178e0:	4a0b      	ldr	r2, [pc, #44]	; (8017910 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3c>)
 80178e2:	480c      	ldr	r0, [pc, #48]	; (8017914 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x40>)
 80178e4:	f44f 71de 	mov.w	r1, #444	; 0x1bc
 80178e8:	f00f ff4a 	bl	8027780 <__assert_func>
 80178ec:	3b01      	subs	r3, #1
 80178ee:	b29b      	uxth	r3, r3
 80178f0:	428b      	cmp	r3, r1
 80178f2:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 80178f6:	d908      	bls.n	801790a <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x36>
 80178f8:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 80178fc:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8017900:	681a      	ldr	r2, [r3, #0]
 8017902:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8017906:	685a      	ldr	r2, [r3, #4]
 8017908:	6062      	str	r2, [r4, #4]
 801790a:	bd10      	pop	{r4, pc}
 801790c:	0802c5c0 	.word	0x0802c5c0
 8017910:	0802c71d 	.word	0x0802c71d
 8017914:	0802c5ce 	.word	0x0802c5ce

08017918 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 8017918:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801791a:	466b      	mov	r3, sp
 801791c:	e883 0006 	stmia.w	r3, {r1, r2}
 8017920:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 8017924:	2a07      	cmp	r2, #7
 8017926:	4604      	mov	r4, r0
 8017928:	d906      	bls.n	8017938 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 801792a:	4b09      	ldr	r3, [pc, #36]	; (8017950 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 801792c:	4a09      	ldr	r2, [pc, #36]	; (8017954 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 801792e:	480a      	ldr	r0, [pc, #40]	; (8017958 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 8017930:	f44f 71c1 	mov.w	r1, #386	; 0x182
 8017934:	f00f ff24 	bl	8027780 <__assert_func>
 8017938:	1c51      	adds	r1, r2, #1
 801793a:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 801793e:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 8017942:	cb03      	ldmia	r3!, {r0, r1}
 8017944:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 8017948:	6069      	str	r1, [r5, #4]
 801794a:	b003      	add	sp, #12
 801794c:	bd30      	pop	{r4, r5, pc}
 801794e:	bf00      	nop
 8017950:	0802c61f 	.word	0x0802c61f
 8017954:	0802c7b3 	.word	0x0802c7b3
 8017958:	0802c5ce 	.word	0x0802c5ce

0801795c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 801795c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017960:	b08d      	sub	sp, #52	; 0x34
 8017962:	ac08      	add	r4, sp, #32
 8017964:	4683      	mov	fp, r0
 8017966:	4620      	mov	r0, r4
 8017968:	e884 0006 	stmia.w	r4, {r1, r2}
 801796c:	f7fb ff07 	bl	801377e <_ZNK8touchgfx4Rect7isEmptyEv>
 8017970:	2800      	cmp	r0, #0
 8017972:	d16a      	bne.n	8017a4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 8017974:	9402      	str	r4, [sp, #8]
 8017976:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 801797a:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 801797e:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 8017982:	2400      	movs	r4, #0
 8017984:	9301      	str	r3, [sp, #4]
 8017986:	36a0      	adds	r6, #160	; 0xa0
 8017988:	42a5      	cmp	r5, r4
 801798a:	d00d      	beq.n	80179a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c>
 801798c:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 8017990:	9802      	ldr	r0, [sp, #8]
 8017992:	f7ff fe8b 	bl	80176ac <_ZNK8touchgfx4Rect8includesERKS0_>
 8017996:	b128      	cbz	r0, 80179a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 8017998:	1e69      	subs	r1, r5, #1
 801799a:	1b09      	subs	r1, r1, r4
 801799c:	b289      	uxth	r1, r1
 801799e:	9801      	ldr	r0, [sp, #4]
 80179a0:	f7ff ff98 	bl	80178d4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80179a4:	3401      	adds	r4, #1
 80179a6:	e7ef      	b.n	8017988 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80179a8:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 80179ac:	9703      	str	r7, [sp, #12]
 80179ae:	1e7b      	subs	r3, r7, #1
 80179b0:	9300      	str	r3, [sp, #0]
 80179b2:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 80179b6:	2400      	movs	r4, #0
 80179b8:	4655      	mov	r5, sl
 80179ba:	9704      	str	r7, [sp, #16]
 80179bc:	4626      	mov	r6, r4
 80179be:	9b04      	ldr	r3, [sp, #16]
 80179c0:	2b00      	cmp	r3, #0
 80179c2:	d078      	beq.n	8017ab6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15a>
 80179c4:	9902      	ldr	r1, [sp, #8]
 80179c6:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 80179ca:	f7ff fe4d 	bl	8017668 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80179ce:	b360      	cbz	r0, 8017a2a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 80179d0:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80179d4:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 80179d8:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 80179dc:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 80179e0:	45e6      	cmp	lr, ip
 80179e2:	db35      	blt.n	8017a50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 80179e4:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 80179e8:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 80179ec:	4472      	add	r2, lr
 80179ee:	4463      	add	r3, ip
 80179f0:	b212      	sxth	r2, r2
 80179f2:	b21b      	sxth	r3, r3
 80179f4:	429a      	cmp	r2, r3
 80179f6:	dc2b      	bgt.n	8017a50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 80179f8:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 80179fc:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8017a00:	fa1f f288 	uxth.w	r2, r8
 8017a04:	4413      	add	r3, r2
 8017a06:	b29b      	uxth	r3, r3
 8017a08:	45c1      	cmp	r9, r8
 8017a0a:	fa0f fe83 	sxth.w	lr, r3
 8017a0e:	fa1f fc89 	uxth.w	ip, r9
 8017a12:	db0f      	blt.n	8017a34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xd8>
 8017a14:	eba3 030c 	sub.w	r3, r3, ip
 8017a18:	1ac9      	subs	r1, r1, r3
 8017a1a:	b209      	sxth	r1, r1
 8017a1c:	2900      	cmp	r1, #0
 8017a1e:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 8017a22:	dd12      	ble.n	8017a4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 8017a24:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 8017a28:	4604      	mov	r4, r0
 8017a2a:	9b04      	ldr	r3, [sp, #16]
 8017a2c:	3b01      	subs	r3, #1
 8017a2e:	9304      	str	r3, [sp, #16]
 8017a30:	3d08      	subs	r5, #8
 8017a32:	e7c4      	b.n	80179be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 8017a34:	4461      	add	r1, ip
 8017a36:	b209      	sxth	r1, r1
 8017a38:	4571      	cmp	r1, lr
 8017a3a:	dc3a      	bgt.n	8017ab2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 8017a3c:	eba2 020c 	sub.w	r2, r2, ip
 8017a40:	b212      	sxth	r2, r2
 8017a42:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 8017a46:	2a00      	cmp	r2, #0
 8017a48:	dcee      	bgt.n	8017a28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 8017a4a:	b00d      	add	sp, #52	; 0x34
 8017a4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017a50:	45c1      	cmp	r9, r8
 8017a52:	db2e      	blt.n	8017ab2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 8017a54:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 8017a58:	4499      	add	r9, r3
 8017a5a:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 8017a5e:	4498      	add	r8, r3
 8017a60:	fa0f f989 	sxth.w	r9, r9
 8017a64:	fa0f f888 	sxth.w	r8, r8
 8017a68:	45c1      	cmp	r9, r8
 8017a6a:	dc22      	bgt.n	8017ab2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 8017a6c:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 8017a70:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8017a74:	fa1f f28c 	uxth.w	r2, ip
 8017a78:	4413      	add	r3, r2
 8017a7a:	b29b      	uxth	r3, r3
 8017a7c:	45e6      	cmp	lr, ip
 8017a7e:	fa1f f88e 	uxth.w	r8, lr
 8017a82:	fa0f f983 	sxth.w	r9, r3
 8017a86:	db0a      	blt.n	8017a9e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x142>
 8017a88:	eba3 0308 	sub.w	r3, r3, r8
 8017a8c:	1ac9      	subs	r1, r1, r3
 8017a8e:	b209      	sxth	r1, r1
 8017a90:	2900      	cmp	r1, #0
 8017a92:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 8017a96:	ddd8      	ble.n	8017a4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 8017a98:	f8ad 9020 	strh.w	r9, [sp, #32]
 8017a9c:	e7c4      	b.n	8017a28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 8017a9e:	4441      	add	r1, r8
 8017aa0:	b209      	sxth	r1, r1
 8017aa2:	4549      	cmp	r1, r9
 8017aa4:	dc05      	bgt.n	8017ab2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 8017aa6:	eba2 0208 	sub.w	r2, r2, r8
 8017aaa:	b212      	sxth	r2, r2
 8017aac:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8017ab0:	e7c9      	b.n	8017a46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8017ab2:	4606      	mov	r6, r0
 8017ab4:	e7b9      	b.n	8017a2a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 8017ab6:	2c00      	cmp	r4, #0
 8017ab8:	f47f af7d 	bne.w	80179b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 8017abc:	2e00      	cmp	r6, #0
 8017abe:	f000 81dd 	beq.w	8017e7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 8017ac2:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 8017ac6:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 8017aca:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 8017ace:	b2b9      	uxth	r1, r7
 8017ad0:	9104      	str	r1, [sp, #16]
 8017ad2:	9804      	ldr	r0, [sp, #16]
 8017ad4:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8017ad8:	4401      	add	r1, r0
 8017ada:	b2b3      	uxth	r3, r6
 8017adc:	b289      	uxth	r1, r1
 8017ade:	441a      	add	r2, r3
 8017ae0:	9105      	str	r1, [sp, #20]
 8017ae2:	b292      	uxth	r2, r2
 8017ae4:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 8017ae8:	fa0f f882 	sxth.w	r8, r2
 8017aec:	4655      	mov	r5, sl
 8017aee:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8017af2:	9b03      	ldr	r3, [sp, #12]
 8017af4:	2b00      	cmp	r3, #0
 8017af6:	d054      	beq.n	8017ba2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 8017af8:	9902      	ldr	r1, [sp, #8]
 8017afa:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8017afe:	f7ff fdb3 	bl	8017668 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017b02:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8017b06:	b1d8      	cbz	r0, 8017b40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8017b08:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 8017b0c:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 8017b10:	4576      	cmp	r6, lr
 8017b12:	dc26      	bgt.n	8017b62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8017b14:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 8017b18:	44f4      	add	ip, lr
 8017b1a:	fa0f fc8c 	sxth.w	ip, ip
 8017b1e:	45e0      	cmp	r8, ip
 8017b20:	db1f      	blt.n	8017b62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8017b22:	428f      	cmp	r7, r1
 8017b24:	fa1f fc81 	uxth.w	ip, r1
 8017b28:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 8017b2c:	dc0f      	bgt.n	8017b4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8017b2e:	9805      	ldr	r0, [sp, #20]
 8017b30:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 8017b34:	eba0 0c0c 	sub.w	ip, r0, ip
 8017b38:	eba1 010c 	sub.w	r1, r1, ip
 8017b3c:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 8017b40:	4620      	mov	r0, r4
 8017b42:	9903      	ldr	r1, [sp, #12]
 8017b44:	3901      	subs	r1, #1
 8017b46:	9103      	str	r1, [sp, #12]
 8017b48:	3d08      	subs	r5, #8
 8017b4a:	4604      	mov	r4, r0
 8017b4c:	e7cf      	b.n	8017aee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x192>
 8017b4e:	4461      	add	r1, ip
 8017b50:	b209      	sxth	r1, r1
 8017b52:	4549      	cmp	r1, r9
 8017b54:	dcf5      	bgt.n	8017b42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8017b56:	9904      	ldr	r1, [sp, #16]
 8017b58:	eba1 0c0c 	sub.w	ip, r1, ip
 8017b5c:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 8017b60:	e7ee      	b.n	8017b40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8017b62:	428f      	cmp	r7, r1
 8017b64:	dced      	bgt.n	8017b42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8017b66:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 8017b6a:	4461      	add	r1, ip
 8017b6c:	b209      	sxth	r1, r1
 8017b6e:	4589      	cmp	r9, r1
 8017b70:	dbe7      	blt.n	8017b42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8017b72:	4576      	cmp	r6, lr
 8017b74:	fa1f fc8e 	uxth.w	ip, lr
 8017b78:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 8017b7c:	dc08      	bgt.n	8017b90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x234>
 8017b7e:	eba2 0c0c 	sub.w	ip, r2, ip
 8017b82:	eba1 010c 	sub.w	r1, r1, ip
 8017b86:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 8017b8a:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 8017b8e:	e7d7      	b.n	8017b40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8017b90:	4461      	add	r1, ip
 8017b92:	b209      	sxth	r1, r1
 8017b94:	4588      	cmp	r8, r1
 8017b96:	dbd4      	blt.n	8017b42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8017b98:	eba3 0c0c 	sub.w	ip, r3, ip
 8017b9c:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 8017ba0:	e7ce      	b.n	8017b40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8017ba2:	2c00      	cmp	r4, #0
 8017ba4:	f000 816a 	beq.w	8017e7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 8017ba8:	9b00      	ldr	r3, [sp, #0]
 8017baa:	3301      	adds	r3, #1
 8017bac:	f000 8166 	beq.w	8017e7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 8017bb0:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 8017bb4:	4621      	mov	r1, r4
 8017bb6:	9802      	ldr	r0, [sp, #8]
 8017bb8:	f7ff fd78 	bl	80176ac <_ZNK8touchgfx4Rect8includesERKS0_>
 8017bbc:	b120      	cbz	r0, 8017bc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26c>
 8017bbe:	f8bd 1000 	ldrh.w	r1, [sp]
 8017bc2:	9801      	ldr	r0, [sp, #4]
 8017bc4:	f7ff fe86 	bl	80178d4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017bc8:	9902      	ldr	r1, [sp, #8]
 8017bca:	4620      	mov	r0, r4
 8017bcc:	f7ff fd4c 	bl	8017668 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017bd0:	2800      	cmp	r0, #0
 8017bd2:	f000 809b 	beq.w	8017d0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3b0>
 8017bd6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8017bda:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 8017bde:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 8017be2:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 8017be6:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8017bea:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 8017bee:	fa1f f288 	uxth.w	r2, r8
 8017bf2:	19d5      	adds	r5, r2, r7
 8017bf4:	fa1f f985 	uxth.w	r9, r5
 8017bf8:	fa0f f589 	sxth.w	r5, r9
 8017bfc:	b2a1      	uxth	r1, r4
 8017bfe:	440b      	add	r3, r1
 8017c00:	9503      	str	r5, [sp, #12]
 8017c02:	45a0      	cmp	r8, r4
 8017c04:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 8017c08:	9507      	str	r5, [sp, #28]
 8017c0a:	b29b      	uxth	r3, r3
 8017c0c:	f340 809d 	ble.w	8017d4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8017c10:	1a52      	subs	r2, r2, r1
 8017c12:	b292      	uxth	r2, r2
 8017c14:	4584      	cmp	ip, r0
 8017c16:	fa0f fe83 	sxth.w	lr, r3
 8017c1a:	b215      	sxth	r5, r2
 8017c1c:	dd2f      	ble.n	8017c7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 8017c1e:	9e00      	ldr	r6, [sp, #0]
 8017c20:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8017c24:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 8017c28:	9e03      	ldr	r6, [sp, #12]
 8017c2a:	eba6 060e 	sub.w	r6, r6, lr
 8017c2e:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 8017c32:	fa1f fc8c 	uxth.w	ip, ip
 8017c36:	b280      	uxth	r0, r0
 8017c38:	ebac 0300 	sub.w	r3, ip, r0
 8017c3c:	448c      	add	ip, r1
 8017c3e:	4470      	add	r0, lr
 8017c40:	b29b      	uxth	r3, r3
 8017c42:	fa0f fc8c 	sxth.w	ip, ip
 8017c46:	b200      	sxth	r0, r0
 8017c48:	b21c      	sxth	r4, r3
 8017c4a:	ebac 0000 	sub.w	r0, ip, r0
 8017c4e:	4366      	muls	r6, r4
 8017c50:	4368      	muls	r0, r5
 8017c52:	4286      	cmp	r6, r0
 8017c54:	db09      	blt.n	8017c6a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x30e>
 8017c56:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 8017c5a:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 8017c5e:	4417      	add	r7, r2
 8017c60:	f8ad 3020 	strh.w	r3, [sp, #32]
 8017c64:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 8017c68:	e685      	b.n	8017976 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8017c6a:	440b      	add	r3, r1
 8017c6c:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8017c70:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 8017c74:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 8017c78:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8017c7c:	e67b      	b.n	8017976 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8017c7e:	9e03      	ldr	r6, [sp, #12]
 8017c80:	45b6      	cmp	lr, r6
 8017c82:	da28      	bge.n	8017cd6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37a>
 8017c84:	9b00      	ldr	r3, [sp, #0]
 8017c86:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 8017c8a:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 8017c8e:	eb04 030c 	add.w	r3, r4, ip
 8017c92:	fa1f f883 	uxth.w	r8, r3
 8017c96:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 8017c9a:	4403      	add	r3, r0
 8017c9c:	eba3 0308 	sub.w	r3, r3, r8
 8017ca0:	b29b      	uxth	r3, r3
 8017ca2:	fa0f f988 	sxth.w	r9, r8
 8017ca6:	eba0 000c 	sub.w	r0, r0, ip
 8017caa:	fa0f f883 	sxth.w	r8, r3
 8017cae:	eba6 060e 	sub.w	r6, r6, lr
 8017cb2:	4368      	muls	r0, r5
 8017cb4:	fb08 f606 	mul.w	r6, r8, r6
 8017cb8:	42b0      	cmp	r0, r6
 8017cba:	dc06      	bgt.n	8017cca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x36e>
 8017cbc:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 8017cc0:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 8017cc4:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 8017cc8:	e7c9      	b.n	8017c5e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x302>
 8017cca:	4423      	add	r3, r4
 8017ccc:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 8017cd0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8017cd4:	e64f      	b.n	8017976 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8017cd6:	9807      	ldr	r0, [sp, #28]
 8017cd8:	eba3 0309 	sub.w	r3, r3, r9
 8017cdc:	b29b      	uxth	r3, r3
 8017cde:	2806      	cmp	r0, #6
 8017ce0:	fa0f fc83 	sxth.w	ip, r3
 8017ce4:	d818      	bhi.n	8017d18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3bc>
 8017ce6:	4652      	mov	r2, sl
 8017ce8:	ab0a      	add	r3, sp, #40	; 0x28
 8017cea:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 8017cee:	6851      	ldr	r1, [r2, #4]
 8017cf0:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 8017cf4:	c303      	stmia	r3!, {r0, r1}
 8017cf6:	9b03      	ldr	r3, [sp, #12]
 8017cf8:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 8017cfc:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 8017d00:	ab0a      	add	r3, sp, #40	; 0x28
 8017d02:	e893 0006 	ldmia.w	r3, {r1, r2}
 8017d06:	9801      	ldr	r0, [sp, #4]
 8017d08:	f7ff fe06 	bl	8017918 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8017d0c:	9b00      	ldr	r3, [sp, #0]
 8017d0e:	3b01      	subs	r3, #1
 8017d10:	9300      	str	r3, [sp, #0]
 8017d12:	f1aa 0a08 	sub.w	sl, sl, #8
 8017d16:	e747      	b.n	8017ba8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8017d18:	9800      	ldr	r0, [sp, #0]
 8017d1a:	45ac      	cmp	ip, r5
 8017d1c:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 8017d20:	db0c      	blt.n	8017d3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e0>
 8017d22:	4417      	add	r7, r2
 8017d24:	b2bf      	uxth	r7, r7
 8017d26:	4458      	add	r0, fp
 8017d28:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 8017d2c:	440f      	add	r7, r1
 8017d2e:	f8ad 4020 	strh.w	r4, [sp, #32]
 8017d32:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 8017d36:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 8017d3a:	e61c      	b.n	8017976 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8017d3c:	4458      	add	r0, fp
 8017d3e:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 8017d42:	443b      	add	r3, r7
 8017d44:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8017d48:	e615      	b.n	8017976 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8017d4a:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 8017d4e:	fa1f f18c 	uxth.w	r1, ip
 8017d52:	eb01 0e05 	add.w	lr, r1, r5
 8017d56:	b282      	uxth	r2, r0
 8017d58:	fa1f fe8e 	uxth.w	lr, lr
 8017d5c:	9204      	str	r2, [sp, #16]
 8017d5e:	fa0f f28e 	sxth.w	r2, lr
 8017d62:	9205      	str	r2, [sp, #20]
 8017d64:	9e04      	ldr	r6, [sp, #16]
 8017d66:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 8017d6a:	4432      	add	r2, r6
 8017d6c:	b292      	uxth	r2, r2
 8017d6e:	4584      	cmp	ip, r0
 8017d70:	9206      	str	r2, [sp, #24]
 8017d72:	da26      	bge.n	8017dc2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x466>
 8017d74:	eba3 0309 	sub.w	r3, r3, r9
 8017d78:	eba2 020e 	sub.w	r2, r2, lr
 8017d7c:	b29b      	uxth	r3, r3
 8017d7e:	b292      	uxth	r2, r2
 8017d80:	fa0f fa83 	sxth.w	sl, r3
 8017d84:	b211      	sxth	r1, r2
 8017d86:	eba0 000c 	sub.w	r0, r0, ip
 8017d8a:	eba4 0408 	sub.w	r4, r4, r8
 8017d8e:	fb0a f000 	mul.w	r0, sl, r0
 8017d92:	434c      	muls	r4, r1
 8017d94:	42a0      	cmp	r0, r4
 8017d96:	9800      	ldr	r0, [sp, #0]
 8017d98:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 8017d9c:	dc06      	bgt.n	8017dac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x450>
 8017d9e:	4458      	add	r0, fp
 8017da0:	9a05      	ldr	r2, [sp, #20]
 8017da2:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 8017da6:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 8017daa:	e7ca      	b.n	8017d42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 8017dac:	eb0b 0300 	add.w	r3, fp, r0
 8017db0:	9903      	ldr	r1, [sp, #12]
 8017db2:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 8017db6:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 8017dba:	442a      	add	r2, r5
 8017dbc:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 8017dc0:	e5d9      	b.n	8017976 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8017dc2:	9e04      	ldr	r6, [sp, #16]
 8017dc4:	9a03      	ldr	r2, [sp, #12]
 8017dc6:	1b89      	subs	r1, r1, r6
 8017dc8:	b21e      	sxth	r6, r3
 8017dca:	b289      	uxth	r1, r1
 8017dcc:	4296      	cmp	r6, r2
 8017dce:	fa0f fc81 	sxth.w	ip, r1
 8017dd2:	dd26      	ble.n	8017e22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c6>
 8017dd4:	eba3 0309 	sub.w	r3, r3, r9
 8017dd8:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 8017ddc:	9e05      	ldr	r6, [sp, #20]
 8017dde:	b29b      	uxth	r3, r3
 8017de0:	eba6 0902 	sub.w	r9, r6, r2
 8017de4:	b218      	sxth	r0, r3
 8017de6:	eba4 0408 	sub.w	r4, r4, r8
 8017dea:	fb0c f404 	mul.w	r4, ip, r4
 8017dee:	fb00 f909 	mul.w	r9, r0, r9
 8017df2:	9a00      	ldr	r2, [sp, #0]
 8017df4:	454c      	cmp	r4, r9
 8017df6:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8017dfa:	db03      	blt.n	8017e04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4a8>
 8017dfc:	445a      	add	r2, fp
 8017dfe:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 8017e02:	e79e      	b.n	8017d42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 8017e04:	eb0b 0302 	add.w	r3, fp, r2
 8017e08:	9a03      	ldr	r2, [sp, #12]
 8017e0a:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 8017e0e:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 8017e12:	4429      	add	r1, r5
 8017e14:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 8017e18:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8017e1c:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 8017e20:	e5a9      	b.n	8017976 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8017e22:	9b06      	ldr	r3, [sp, #24]
 8017e24:	9c07      	ldr	r4, [sp, #28]
 8017e26:	eba3 020e 	sub.w	r2, r3, lr
 8017e2a:	b292      	uxth	r2, r2
 8017e2c:	2c06      	cmp	r4, #6
 8017e2e:	b213      	sxth	r3, r2
 8017e30:	d80d      	bhi.n	8017e4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4f2>
 8017e32:	4651      	mov	r1, sl
 8017e34:	aa0a      	add	r2, sp, #40	; 0x28
 8017e36:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 8017e3a:	6849      	ldr	r1, [r1, #4]
 8017e3c:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 8017e40:	9b05      	ldr	r3, [sp, #20]
 8017e42:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 8017e46:	c203      	stmia	r2!, {r0, r1}
 8017e48:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 8017e4c:	e758      	b.n	8017d00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3a4>
 8017e4e:	9c00      	ldr	r4, [sp, #0]
 8017e50:	4563      	cmp	r3, ip
 8017e52:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8017e56:	db0d      	blt.n	8017e74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x518>
 8017e58:	4429      	add	r1, r5
 8017e5a:	9a04      	ldr	r2, [sp, #16]
 8017e5c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8017e60:	b289      	uxth	r1, r1
 8017e62:	445c      	add	r4, fp
 8017e64:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 8017e68:	4411      	add	r1, r2
 8017e6a:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 8017e6e:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 8017e72:	e580      	b.n	8017976 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8017e74:	445c      	add	r4, fp
 8017e76:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 8017e7a:	e79e      	b.n	8017dba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45e>
 8017e7c:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 8017e80:	2f07      	cmp	r7, #7
 8017e82:	d806      	bhi.n	8017e92 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x536>
 8017e84:	ab08      	add	r3, sp, #32
 8017e86:	e893 0006 	ldmia.w	r3, {r1, r2}
 8017e8a:	9801      	ldr	r0, [sp, #4]
 8017e8c:	f7ff fd44 	bl	8017918 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8017e90:	e5db      	b.n	8017a4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 8017e92:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8017e96:	f107 39ff 	add.w	r9, r7, #4294967295
 8017e9a:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8017e9e:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 8017ea2:	f04f 35ff 	mov.w	r5, #4294967295
 8017ea6:	2400      	movs	r4, #0
 8017ea8:	9304      	str	r3, [sp, #16]
 8017eaa:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 8017eae:	9300      	str	r3, [sp, #0]
 8017eb0:	f109 32ff 	add.w	r2, r9, #4294967295
 8017eb4:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 8017eb8:	9303      	str	r3, [sp, #12]
 8017eba:	4690      	mov	r8, r2
 8017ebc:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8017ec0:	f1b8 3fff 	cmp.w	r8, #4294967295
 8017ec4:	bf14      	ite	ne
 8017ec6:	9904      	ldrne	r1, [sp, #16]
 8017ec8:	f8dd e008 	ldreq.w	lr, [sp, #8]
 8017ecc:	6818      	ldr	r0, [r3, #0]
 8017ece:	9206      	str	r2, [sp, #24]
 8017ed0:	bf18      	it	ne
 8017ed2:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 8017ed6:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 8017eda:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8017ede:	f8be 6004 	ldrh.w	r6, [lr, #4]
 8017ee2:	9305      	str	r3, [sp, #20]
 8017ee4:	fb16 f601 	smulbb	r6, r6, r1
 8017ee8:	6859      	ldr	r1, [r3, #4]
 8017eea:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8017eee:	4671      	mov	r1, lr
 8017ef0:	a80a      	add	r0, sp, #40	; 0x28
 8017ef2:	f7ff fbfd 	bl	80176f0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8017ef6:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 8017efa:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8017efe:	9b03      	ldr	r3, [sp, #12]
 8017f00:	9a00      	ldr	r2, [sp, #0]
 8017f02:	fb11 f100 	smulbb	r1, r1, r0
 8017f06:	fb02 6603 	mla	r6, r2, r3, r6
 8017f0a:	1b8e      	subs	r6, r1, r6
 8017f0c:	2008      	movs	r0, #8
 8017f0e:	fb91 f1f0 	sdiv	r1, r1, r0
 8017f12:	42b1      	cmp	r1, r6
 8017f14:	dc21      	bgt.n	8017f5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 8017f16:	4556      	cmp	r6, sl
 8017f18:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 8017f1c:	da03      	bge.n	8017f26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8017f1e:	b1e6      	cbz	r6, 8017f5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 8017f20:	46b2      	mov	sl, r6
 8017f22:	4645      	mov	r5, r8
 8017f24:	464c      	mov	r4, r9
 8017f26:	f108 38ff 	add.w	r8, r8, #4294967295
 8017f2a:	f118 0f02 	cmn.w	r8, #2
 8017f2e:	d1c7      	bne.n	8017ec0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x564>
 8017f30:	f1b2 3fff 	cmp.w	r2, #4294967295
 8017f34:	f1a7 0708 	sub.w	r7, r7, #8
 8017f38:	4691      	mov	r9, r2
 8017f3a:	d1b6      	bne.n	8017eaa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54e>
 8017f3c:	9b01      	ldr	r3, [sp, #4]
 8017f3e:	b2a6      	uxth	r6, r4
 8017f40:	00e4      	lsls	r4, r4, #3
 8017f42:	1918      	adds	r0, r3, r4
 8017f44:	1c6b      	adds	r3, r5, #1
 8017f46:	d10b      	bne.n	8017f60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x604>
 8017f48:	4601      	mov	r1, r0
 8017f4a:	9802      	ldr	r0, [sp, #8]
 8017f4c:	f7ff fbd0 	bl	80176f0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8017f50:	4631      	mov	r1, r6
 8017f52:	9801      	ldr	r0, [sp, #4]
 8017f54:	f7ff fcbe 	bl	80178d4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017f58:	e50d      	b.n	8017976 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8017f5a:	4645      	mov	r5, r8
 8017f5c:	464c      	mov	r4, r9
 8017f5e:	e7ed      	b.n	8017f3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e0>
 8017f60:	9b01      	ldr	r3, [sp, #4]
 8017f62:	00ed      	lsls	r5, r5, #3
 8017f64:	1959      	adds	r1, r3, r5
 8017f66:	f7ff fbc3 	bl	80176f0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8017f6a:	9b02      	ldr	r3, [sp, #8]
 8017f6c:	cb03      	ldmia	r3!, {r0, r1}
 8017f6e:	445d      	add	r5, fp
 8017f70:	445c      	add	r4, fp
 8017f72:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 8017f76:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 8017f7a:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 8017f7e:	9b02      	ldr	r3, [sp, #8]
 8017f80:	6861      	ldr	r1, [r4, #4]
 8017f82:	c303      	stmia	r3!, {r0, r1}
 8017f84:	e7e4      	b.n	8017f50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5f4>
	...

08017f88 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8017f88:	b530      	push	{r4, r5, lr}
 8017f8a:	4b1d      	ldr	r3, [pc, #116]	; (8018000 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 8017f8c:	b085      	sub	sp, #20
 8017f8e:	460c      	mov	r4, r1
 8017f90:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017f94:	4b1b      	ldr	r3, [pc, #108]	; (8018004 <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 8017f96:	f8ad 2004 	strh.w	r2, [sp, #4]
 8017f9a:	2100      	movs	r1, #0
 8017f9c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017fa0:	9100      	str	r1, [sp, #0]
 8017fa2:	4605      	mov	r5, r0
 8017fa4:	6861      	ldr	r1, [r4, #4]
 8017fa6:	6820      	ldr	r0, [r4, #0]
 8017fa8:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017fac:	ab02      	add	r3, sp, #8
 8017fae:	c303      	stmia	r3!, {r0, r1}
 8017fb0:	4669      	mov	r1, sp
 8017fb2:	a802      	add	r0, sp, #8
 8017fb4:	f7fb fba0 	bl	80136f8 <_ZN8touchgfx4RectaNERKS0_>
 8017fb8:	ab02      	add	r3, sp, #8
 8017fba:	cb03      	ldmia	r3!, {r0, r1}
 8017fbc:	4b12      	ldr	r3, [pc, #72]	; (8018008 <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 8017fbe:	6020      	str	r0, [r4, #0]
 8017fc0:	6818      	ldr	r0, [r3, #0]
 8017fc2:	6061      	str	r1, [r4, #4]
 8017fc4:	b138      	cbz	r0, 8017fd6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 8017fc6:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
 8017fca:	b133      	cbz	r3, 8017fda <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 8017fcc:	6821      	ldr	r1, [r4, #0]
 8017fce:	6862      	ldr	r2, [r4, #4]
 8017fd0:	4628      	mov	r0, r5
 8017fd2:	f7ff fcc3 	bl	801795c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8017fd6:	b005      	add	sp, #20
 8017fd8:	bd30      	pop	{r4, r5, pc}
 8017fda:	6803      	ldr	r3, [r0, #0]
 8017fdc:	4621      	mov	r1, r4
 8017fde:	689b      	ldr	r3, [r3, #8]
 8017fe0:	4798      	blx	r3
 8017fe2:	4b0a      	ldr	r3, [pc, #40]	; (801800c <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 8017fe4:	6818      	ldr	r0, [r3, #0]
 8017fe6:	b118      	cbz	r0, 8017ff0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 8017fe8:	6803      	ldr	r3, [r0, #0]
 8017fea:	4621      	mov	r1, r4
 8017fec:	689b      	ldr	r3, [r3, #8]
 8017fee:	4798      	blx	r3
 8017ff0:	4b07      	ldr	r3, [pc, #28]	; (8018010 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 8017ff2:	6818      	ldr	r0, [r3, #0]
 8017ff4:	6803      	ldr	r3, [r0, #0]
 8017ff6:	4621      	mov	r1, r4
 8017ff8:	69db      	ldr	r3, [r3, #28]
 8017ffa:	4798      	blx	r3
 8017ffc:	e7eb      	b.n	8017fd6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 8017ffe:	bf00      	nop
 8018000:	2002bd28 	.word	0x2002bd28
 8018004:	2002bd2a 	.word	0x2002bd2a
 8018008:	2002bd70 	.word	0x2002bd70
 801800c:	2002bd6c 	.word	0x2002bd6c
 8018010:	2002bd34 	.word	0x2002bd34

08018014 <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 8018014:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018018:	4604      	mov	r4, r0
 801801a:	b09b      	sub	sp, #108	; 0x6c
 801801c:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
 8018020:	b129      	cbz	r1, 801802e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 8018022:	2300      	movs	r3, #0
 8018024:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 8018028:	b01b      	add	sp, #108	; 0x6c
 801802a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801802e:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 8018032:	4630      	mov	r0, r6
 8018034:	f7fb fba3 	bl	801377e <_ZNK8touchgfx4Rect7isEmptyEv>
 8018038:	4605      	mov	r5, r0
 801803a:	b940      	cbnz	r0, 801804e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
 801803c:	e896 0006 	ldmia.w	r6, {r1, r2}
 8018040:	4620      	mov	r0, r4
 8018042:	f7ff fc8b 	bl	801795c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8018046:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 801804a:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 801804e:	4ba7      	ldr	r3, [pc, #668]	; (80182ec <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d8>)
 8018050:	681b      	ldr	r3, [r3, #0]
 8018052:	b33b      	cbz	r3, 80180a4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 8018054:	4da6      	ldr	r5, [pc, #664]	; (80182f0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2dc>)
 8018056:	4628      	mov	r0, r5
 8018058:	f7fb fb91 	bl	801377e <_ZNK8touchgfx4Rect7isEmptyEv>
 801805c:	4606      	mov	r6, r0
 801805e:	bb08      	cbnz	r0, 80180a4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 8018060:	4628      	mov	r0, r5
 8018062:	f7ff f9a7 	bl	80173b4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8018066:	6829      	ldr	r1, [r5, #0]
 8018068:	686a      	ldr	r2, [r5, #4]
 801806a:	4620      	mov	r0, r4
 801806c:	f7ff fc76 	bl	801795c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8018070:	802e      	strh	r6, [r5, #0]
 8018072:	806e      	strh	r6, [r5, #2]
 8018074:	80ae      	strh	r6, [r5, #4]
 8018076:	80ee      	strh	r6, [r5, #6]
 8018078:	4f9e      	ldr	r7, [pc, #632]	; (80182f4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e0>)
 801807a:	a809      	add	r0, sp, #36	; 0x24
 801807c:	f7ff fbd7 	bl	801782e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8018080:	883d      	ldrh	r5, [r7, #0]
 8018082:	462e      	mov	r6, r5
 8018084:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8018088:	42b3      	cmp	r3, r6
 801808a:	d910      	bls.n	80180ae <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
 801808c:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8018090:	a809      	add	r0, sp, #36	; 0x24
 8018092:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 8018096:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 801809a:	3601      	adds	r6, #1
 801809c:	f7ff fc3c 	bl	8017918 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 80180a0:	b2b6      	uxth	r6, r6
 80180a2:	e7ef      	b.n	8018084 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 80180a4:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 80180a8:	2b00      	cmp	r3, #0
 80180aa:	d1e5      	bne.n	8018078 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
 80180ac:	e7bc      	b.n	8018028 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 80180ae:	462e      	mov	r6, r5
 80180b0:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 80180b4:	42b3      	cmp	r3, r6
 80180b6:	d90b      	bls.n	80180d0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
 80180b8:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 80180bc:	4620      	mov	r0, r4
 80180be:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 80180c2:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 80180c6:	3601      	adds	r6, #1
 80180c8:	f7ff fc48 	bl	801795c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80180cc:	b2b6      	uxth	r6, r6
 80180ce:	e7ef      	b.n	80180b0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 80180d0:	4a89      	ldr	r2, [pc, #548]	; (80182f8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e4>)
 80180d2:	6813      	ldr	r3, [r2, #0]
 80180d4:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80180d8:	2b01      	cmp	r3, #1
 80180da:	4690      	mov	r8, r2
 80180dc:	f040 8094 	bne.w	8018208 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f4>
 80180e0:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 80180e4:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 80180e8:	33aa      	adds	r3, #170	; 0xaa
 80180ea:	f04f 0900 	mov.w	r9, #0
 80180ee:	42a8      	cmp	r0, r5
 80180f0:	f103 0308 	add.w	r3, r3, #8
 80180f4:	dd0a      	ble.n	801810c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
 80180f6:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 80180fa:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 80180fe:	440a      	add	r2, r1
 8018100:	b212      	sxth	r2, r2
 8018102:	4591      	cmp	r9, r2
 8018104:	bfb8      	it	lt
 8018106:	4691      	movlt	r9, r2
 8018108:	3501      	adds	r5, #1
 801810a:	e7f0      	b.n	80180ee <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
 801810c:	4b7b      	ldr	r3, [pc, #492]	; (80182fc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e8>)
 801810e:	4e7c      	ldr	r6, [pc, #496]	; (8018300 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ec>)
 8018110:	881d      	ldrh	r5, [r3, #0]
 8018112:	2300      	movs	r3, #0
 8018114:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8018118:	2d0f      	cmp	r5, #15
 801811a:	bf8c      	ite	hi
 801811c:	08ed      	lsrhi	r5, r5, #3
 801811e:	2501      	movls	r5, #1
 8018120:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8018124:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 8018128:	f8d8 0000 	ldr.w	r0, [r8]
 801812c:	440b      	add	r3, r1
 801812e:	b21b      	sxth	r3, r3
 8018130:	4599      	cmp	r9, r3
 8018132:	6802      	ldr	r2, [r0, #0]
 8018134:	dd4b      	ble.n	80181ce <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ba>
 8018136:	f8d2 3094 	ldr.w	r3, [r2, #148]	; 0x94
 801813a:	4798      	blx	r3
 801813c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8018140:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8018144:	4413      	add	r3, r2
 8018146:	b21b      	sxth	r3, r3
 8018148:	195a      	adds	r2, r3, r5
 801814a:	4290      	cmp	r0, r2
 801814c:	da07      	bge.n	801815e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 801814e:	4581      	cmp	r9, r0
 8018150:	dd05      	ble.n	801815e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 8018152:	4298      	cmp	r0, r3
 8018154:	da33      	bge.n	80181be <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 8018156:	2b00      	cmp	r3, #0
 8018158:	dd31      	ble.n	80181be <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 801815a:	4648      	mov	r0, r9
 801815c:	e004      	b.n	8018168 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
 801815e:	4298      	cmp	r0, r3
 8018160:	dbfb      	blt.n	801815a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
 8018162:	4548      	cmp	r0, r9
 8018164:	bfa8      	it	ge
 8018166:	4648      	movge	r0, r9
 8018168:	f9b6 2000 	ldrsh.w	r2, [r6]
 801816c:	f8b7 a000 	ldrh.w	sl, [r7]
 8018170:	f8ad 3016 	strh.w	r3, [sp, #22]
 8018174:	2100      	movs	r1, #0
 8018176:	1ac0      	subs	r0, r0, r3
 8018178:	f8ad 1014 	strh.w	r1, [sp, #20]
 801817c:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018180:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018184:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8018188:	4553      	cmp	r3, sl
 801818a:	d9c9      	bls.n	8018120 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 801818c:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 8018190:	ab07      	add	r3, sp, #28
 8018192:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8018196:	6851      	ldr	r1, [r2, #4]
 8018198:	c303      	stmia	r3!, {r0, r1}
 801819a:	a807      	add	r0, sp, #28
 801819c:	a905      	add	r1, sp, #20
 801819e:	f7fb faab 	bl	80136f8 <_ZN8touchgfx4RectaNERKS0_>
 80181a2:	a807      	add	r0, sp, #28
 80181a4:	f7fb faeb 	bl	801377e <_ZNK8touchgfx4Rect7isEmptyEv>
 80181a8:	b920      	cbnz	r0, 80181b4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
 80181aa:	6823      	ldr	r3, [r4, #0]
 80181ac:	a907      	add	r1, sp, #28
 80181ae:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80181b0:	4620      	mov	r0, r4
 80181b2:	4798      	blx	r3
 80181b4:	f10a 0a01 	add.w	sl, sl, #1
 80181b8:	fa1f fa8a 	uxth.w	sl, sl
 80181bc:	e7e2      	b.n	8018184 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
 80181be:	f8d8 0000 	ldr.w	r0, [r8]
 80181c2:	6803      	ldr	r3, [r0, #0]
 80181c4:	2101      	movs	r1, #1
 80181c6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80181ca:	4798      	blx	r3
 80181cc:	e7a8      	b.n	8018120 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 80181ce:	6a53      	ldr	r3, [r2, #36]	; 0x24
 80181d0:	4798      	blx	r3
 80181d2:	4b4c      	ldr	r3, [pc, #304]	; (8018304 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f0>)
 80181d4:	781b      	ldrb	r3, [r3, #0]
 80181d6:	2b00      	cmp	r3, #0
 80181d8:	f43f af26 	beq.w	8018028 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 80181dc:	2300      	movs	r3, #0
 80181de:	883d      	ldrh	r5, [r7, #0]
 80181e0:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 80181e4:	34ea      	adds	r4, #234	; 0xea
 80181e6:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 80181ea:	42ab      	cmp	r3, r5
 80181ec:	f67f af1c 	bls.w	8018028 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 80181f0:	ab1a      	add	r3, sp, #104	; 0x68
 80181f2:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80181f6:	3b44      	subs	r3, #68	; 0x44
 80181f8:	e893 0006 	ldmia.w	r3, {r1, r2}
 80181fc:	4620      	mov	r0, r4
 80181fe:	3501      	adds	r5, #1
 8018200:	f7ff fb8a 	bl	8017918 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8018204:	b2ad      	uxth	r5, r5
 8018206:	e7ee      	b.n	80181e6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d2>
 8018208:	2b02      	cmp	r3, #2
 801820a:	f040 813e 	bne.w	801848a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x476>
 801820e:	4b3e      	ldr	r3, [pc, #248]	; (8018308 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f4>)
 8018210:	781b      	ldrb	r3, [r3, #0]
 8018212:	2b01      	cmp	r3, #1
 8018214:	d02c      	beq.n	8018270 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25c>
 8018216:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
 801821a:	883a      	ldrh	r2, [r7, #0]
 801821c:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 8018220:	3201      	adds	r2, #1
 8018222:	b292      	uxth	r2, r2
 8018224:	2900      	cmp	r1, #0
 8018226:	d0d4      	beq.n	80181d2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 8018228:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 801822c:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 8018230:	441d      	add	r5, r3
 8018232:	b22d      	sxth	r5, r5
 8018234:	4610      	mov	r0, r2
 8018236:	f04f 0a00 	mov.w	sl, #0
 801823a:	b283      	uxth	r3, r0
 801823c:	4299      	cmp	r1, r3
 801823e:	ea4f 06ca 	mov.w	r6, sl, lsl #3
 8018242:	f240 80c5 	bls.w	80183d0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3bc>
 8018246:	4426      	add	r6, r4
 8018248:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
 801824c:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
 8018250:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
 8018254:	4573      	cmp	r3, lr
 8018256:	4684      	mov	ip, r0
 8018258:	f340 80a7 	ble.w	80183aa <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x396>
 801825c:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
 8018260:	4475      	add	r5, lr
 8018262:	b22d      	sxth	r5, r5
 8018264:	429d      	cmp	r5, r3
 8018266:	bfa8      	it	ge
 8018268:	461d      	movge	r5, r3
 801826a:	3001      	adds	r0, #1
 801826c:	46e2      	mov	sl, ip
 801826e:	e7e4      	b.n	801823a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x226>
 8018270:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 8018274:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 8018278:	f1bb 0f00 	cmp.w	fp, #0
 801827c:	d0a9      	beq.n	80181d2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 801827e:	883b      	ldrh	r3, [r7, #0]
 8018280:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 8018284:	3301      	adds	r3, #1
 8018286:	b29b      	uxth	r3, r3
 8018288:	2600      	movs	r6, #0
 801828a:	b299      	uxth	r1, r3
 801828c:	458b      	cmp	fp, r1
 801828e:	ea4f 05c6 	mov.w	r5, r6, lsl #3
 8018292:	d93b      	bls.n	801830c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f8>
 8018294:	4425      	add	r5, r4
 8018296:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 801829a:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 801829e:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 80182a2:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 80182a6:	4408      	add	r0, r1
 80182a8:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 80182ac:	4471      	add	r1, lr
 80182ae:	b200      	sxth	r0, r0
 80182b0:	b209      	sxth	r1, r1
 80182b2:	4288      	cmp	r0, r1
 80182b4:	469c      	mov	ip, r3
 80182b6:	da06      	bge.n	80182c6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2b2>
 80182b8:	4586      	cmp	lr, r0
 80182ba:	4672      	mov	r2, lr
 80182bc:	bfb8      	it	lt
 80182be:	4602      	movlt	r2, r0
 80182c0:	3301      	adds	r3, #1
 80182c2:	4666      	mov	r6, ip
 80182c4:	e7e1      	b.n	801828a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x276>
 80182c6:	d10b      	bne.n	80182e0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2cc>
 80182c8:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 80182cc:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 80182d0:	458c      	cmp	ip, r1
 80182d2:	bfb4      	ite	lt
 80182d4:	469c      	movlt	ip, r3
 80182d6:	46b4      	movge	ip, r6
 80182d8:	4572      	cmp	r2, lr
 80182da:	bfb8      	it	lt
 80182dc:	4672      	movlt	r2, lr
 80182de:	e7ef      	b.n	80182c0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ac>
 80182e0:	428a      	cmp	r2, r1
 80182e2:	bfb8      	it	lt
 80182e4:	460a      	movlt	r2, r1
 80182e6:	46b4      	mov	ip, r6
 80182e8:	e7ea      	b.n	80182c0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ac>
 80182ea:	bf00      	nop
 80182ec:	2002bd6c 	.word	0x2002bd6c
 80182f0:	2002bd78 	.word	0x2002bd78
 80182f4:	20000060 	.word	0x20000060
 80182f8:	2002bd34 	.word	0x2002bd34
 80182fc:	2002bd2a 	.word	0x2002bd2a
 8018300:	2002bd28 	.word	0x2002bd28
 8018304:	2002bd32 	.word	0x2002bd32
 8018308:	2002bd2c 	.word	0x2002bd2c
 801830c:	1961      	adds	r1, r4, r5
 801830e:	ab07      	add	r3, sp, #28
 8018310:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 8018314:	6849      	ldr	r1, [r1, #4]
 8018316:	c303      	stmia	r3!, {r0, r1}
 8018318:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801831c:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8018320:	2b13      	cmp	r3, #19
 8018322:	bfd8      	it	le
 8018324:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8018328:	f8ad 201c 	strh.w	r2, [sp, #28]
 801832c:	440b      	add	r3, r1
 801832e:	1a9b      	subs	r3, r3, r2
 8018330:	a807      	add	r0, sp, #28
 8018332:	f8ad 3020 	strh.w	r3, [sp, #32]
 8018336:	f7ff f857 	bl	80173e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801833a:	a807      	add	r0, sp, #28
 801833c:	f7fb fa1f 	bl	801377e <_ZNK8touchgfx4Rect7isEmptyEv>
 8018340:	2800      	cmp	r0, #0
 8018342:	d197      	bne.n	8018274 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 8018344:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8018348:	f8d8 0000 	ldr.w	r0, [r8]
 801834c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8018350:	f8d0 e000 	ldr.w	lr, [r0]
 8018354:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8018358:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 801835c:	f1bc 0f14 	cmp.w	ip, #20
 8018360:	bfa8      	it	ge
 8018362:	f04f 0c14 	movge.w	ip, #20
 8018366:	fa1f fc8c 	uxth.w	ip, ip
 801836a:	f8cd c000 	str.w	ip, [sp]
 801836e:	f8de a088 	ldr.w	sl, [lr, #136]	; 0x88
 8018372:	47d0      	blx	sl
 8018374:	4682      	mov	sl, r0
 8018376:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801837a:	a807      	add	r0, sp, #28
 801837c:	f7ff f81a 	bl	80173b4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8018380:	6823      	ldr	r3, [r4, #0]
 8018382:	4425      	add	r5, r4
 8018384:	4620      	mov	r0, r4
 8018386:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8018388:	a907      	add	r1, sp, #28
 801838a:	4798      	blx	r3
 801838c:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 8018390:	eba0 000a 	sub.w	r0, r0, sl
 8018394:	b200      	sxth	r0, r0
 8018396:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 801839a:	2800      	cmp	r0, #0
 801839c:	f47f af6a 	bne.w	8018274 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 80183a0:	b2b1      	uxth	r1, r6
 80183a2:	4648      	mov	r0, r9
 80183a4:	f7ff fa96 	bl	80178d4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80183a8:	e764      	b.n	8018274 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 80183aa:	d10c      	bne.n	80183c6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b2>
 80183ac:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
 80183b0:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
 80183b4:	45b4      	cmp	ip, r6
 80183b6:	bfb4      	ite	lt
 80183b8:	4684      	movlt	ip, r0
 80183ba:	46d4      	movge	ip, sl
 80183bc:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
 80183c0:	4433      	add	r3, r6
 80183c2:	b21b      	sxth	r3, r3
 80183c4:	e74e      	b.n	8018264 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x250>
 80183c6:	4575      	cmp	r5, lr
 80183c8:	bfa8      	it	ge
 80183ca:	4675      	movge	r5, lr
 80183cc:	46d4      	mov	ip, sl
 80183ce:	e74c      	b.n	801826a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x256>
 80183d0:	eb0b 0006 	add.w	r0, fp, r6
 80183d4:	4426      	add	r6, r4
 80183d6:	e9cd 1202 	strd	r1, r2, [sp, #8]
 80183da:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
 80183de:	f1b9 0f13 	cmp.w	r9, #19
 80183e2:	bfde      	ittt	le
 80183e4:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
 80183e8:	444d      	addle	r5, r9
 80183ea:	b22d      	sxthle	r5, r5
 80183ec:	f7fb f9c7 	bl	801377e <_ZNK8touchgfx4Rect7isEmptyEv>
 80183f0:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 80183f4:	2800      	cmp	r0, #0
 80183f6:	f47f af15 	bne.w	8018224 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x210>
 80183fa:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
 80183fe:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8018402:	eba5 050c 	sub.w	r5, r5, ip
 8018406:	fa1f f28c 	uxth.w	r2, ip
 801840a:	fa1f f989 	uxth.w	r9, r9
 801840e:	eb02 0009 	add.w	r0, r2, r9
 8018412:	2d14      	cmp	r5, #20
 8018414:	bfa8      	it	ge
 8018416:	2514      	movge	r5, #20
 8018418:	b200      	sxth	r0, r0
 801841a:	fa1f fe85 	uxth.w	lr, r5
 801841e:	eba0 000c 	sub.w	r0, r0, ip
 8018422:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
 8018426:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
 801842a:	f8ad 101c 	strh.w	r1, [sp, #28]
 801842e:	4586      	cmp	lr, r0
 8018430:	f8d8 0000 	ldr.w	r0, [r8]
 8018434:	f8ad c01e 	strh.w	ip, [sp, #30]
 8018438:	f8ad 3020 	strh.w	r3, [sp, #32]
 801843c:	bfb8      	it	lt
 801843e:	46f1      	movlt	r9, lr
 8018440:	6805      	ldr	r5, [r0, #0]
 8018442:	f8cd 9000 	str.w	r9, [sp]
 8018446:	b29b      	uxth	r3, r3
 8018448:	b289      	uxth	r1, r1
 801844a:	f8d5 5088 	ldr.w	r5, [r5, #136]	; 0x88
 801844e:	47a8      	blx	r5
 8018450:	6823      	ldr	r3, [r4, #0]
 8018452:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8018456:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8018458:	a907      	add	r1, sp, #28
 801845a:	4620      	mov	r0, r4
 801845c:	4798      	blx	r3
 801845e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8018462:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
 8018466:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
 801846a:	1a5b      	subs	r3, r3, r1
 801846c:	440a      	add	r2, r1
 801846e:	b21b      	sxth	r3, r3
 8018470:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
 8018474:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
 8018478:	2b00      	cmp	r3, #0
 801847a:	f47f aece 	bne.w	801821a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x206>
 801847e:	fa1f f18a 	uxth.w	r1, sl
 8018482:	4658      	mov	r0, fp
 8018484:	f7ff fa26 	bl	80178d4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8018488:	e6c7      	b.n	801821a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x206>
 801848a:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 801848e:	42ab      	cmp	r3, r5
 8018490:	f67f ae9f 	bls.w	80181d2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 8018494:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 8018498:	ab07      	add	r3, sp, #28
 801849a:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 801849e:	6851      	ldr	r1, [r2, #4]
 80184a0:	c303      	stmia	r3!, {r0, r1}
 80184a2:	a807      	add	r0, sp, #28
 80184a4:	f7fb f96b 	bl	801377e <_ZNK8touchgfx4Rect7isEmptyEv>
 80184a8:	b920      	cbnz	r0, 80184b4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x4a0>
 80184aa:	6823      	ldr	r3, [r4, #0]
 80184ac:	a907      	add	r1, sp, #28
 80184ae:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80184b0:	4620      	mov	r0, r4
 80184b2:	4798      	blx	r3
 80184b4:	3501      	adds	r5, #1
 80184b6:	b2ad      	uxth	r5, r5
 80184b8:	e7e7      	b.n	801848a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x476>
 80184ba:	bf00      	nop

080184bc <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 80184bc:	4b03      	ldr	r3, [pc, #12]	; (80184cc <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 80184be:	2200      	movs	r2, #0
 80184c0:	801a      	strh	r2, [r3, #0]
 80184c2:	805a      	strh	r2, [r3, #2]
 80184c4:	809a      	strh	r2, [r3, #4]
 80184c6:	80da      	strh	r2, [r3, #6]
 80184c8:	4770      	bx	lr
 80184ca:	bf00      	nop
 80184cc:	2002bd78 	.word	0x2002bd78

080184d0 <_ZNK8touchgfx4Font17getStringWidthRTLEhPKtSt9__va_list>:
 80184d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80184d4:	4604      	mov	r4, r0
 80184d6:	b09c      	sub	sp, #112	; 0x70
 80184d8:	a803      	add	r0, sp, #12
 80184da:	4615      	mov	r5, r2
 80184dc:	460e      	mov	r6, r1
 80184de:	461f      	mov	r7, r3
 80184e0:	f000 fe05 	bl	80190ee <_ZN8touchgfx12TextProviderC1Ev>
 80184e4:	6823      	ldr	r3, [r4, #0]
 80184e6:	4620      	mov	r0, r4
 80184e8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80184ea:	4798      	blx	r3
 80184ec:	6823      	ldr	r3, [r4, #0]
 80184ee:	4680      	mov	r8, r0
 80184f0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80184f2:	4620      	mov	r0, r4
 80184f4:	4798      	blx	r3
 80184f6:	4629      	mov	r1, r5
 80184f8:	9000      	str	r0, [sp, #0]
 80184fa:	4643      	mov	r3, r8
 80184fc:	463a      	mov	r2, r7
 80184fe:	a803      	add	r0, sp, #12
 8018500:	f000 fe60 	bl	80191c4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018504:	2500      	movs	r5, #0
 8018506:	a803      	add	r0, sp, #12
 8018508:	f000 fe18 	bl	801913c <_ZN8touchgfx12TextProvider11endOfStringEv>
 801850c:	b958      	cbnz	r0, 8018526 <_ZNK8touchgfx4Font17getStringWidthRTLEhPKtSt9__va_list+0x56>
 801850e:	4633      	mov	r3, r6
 8018510:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8018514:	4621      	mov	r1, r4
 8018516:	a803      	add	r0, sp, #12
 8018518:	f7fd fe38 	bl	801618c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801851c:	b203      	sxth	r3, r0
 801851e:	42ab      	cmp	r3, r5
 8018520:	bfc8      	it	gt
 8018522:	4605      	movgt	r5, r0
 8018524:	e7ef      	b.n	8018506 <_ZNK8touchgfx4Font17getStringWidthRTLEhPKtSt9__va_list+0x36>
 8018526:	4628      	mov	r0, r5
 8018528:	b01c      	add	sp, #112	; 0x70
 801852a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801852e <_ZNK8touchgfx4Font12getCharWidthEt>:
 801852e:	b508      	push	{r3, lr}
 8018530:	6803      	ldr	r3, [r0, #0]
 8018532:	68db      	ldr	r3, [r3, #12]
 8018534:	4798      	blx	r3
 8018536:	b128      	cbz	r0, 8018544 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8018538:	7b43      	ldrb	r3, [r0, #13]
 801853a:	7a80      	ldrb	r0, [r0, #10]
 801853c:	005b      	lsls	r3, r3, #1
 801853e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8018542:	4318      	orrs	r0, r3
 8018544:	bd08      	pop	{r3, pc}

08018546 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8018546:	b40e      	push	{r1, r2, r3}
 8018548:	b5f0      	push	{r4, r5, r6, r7, lr}
 801854a:	b09e      	sub	sp, #120	; 0x78
 801854c:	ab23      	add	r3, sp, #140	; 0x8c
 801854e:	4605      	mov	r5, r0
 8018550:	f853 4b04 	ldr.w	r4, [r3], #4
 8018554:	9303      	str	r3, [sp, #12]
 8018556:	a805      	add	r0, sp, #20
 8018558:	f000 fdc9 	bl	80190ee <_ZN8touchgfx12TextProviderC1Ev>
 801855c:	682b      	ldr	r3, [r5, #0]
 801855e:	4628      	mov	r0, r5
 8018560:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018562:	4798      	blx	r3
 8018564:	682b      	ldr	r3, [r5, #0]
 8018566:	4606      	mov	r6, r0
 8018568:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801856a:	4628      	mov	r0, r5
 801856c:	4798      	blx	r3
 801856e:	4633      	mov	r3, r6
 8018570:	ae1e      	add	r6, sp, #120	; 0x78
 8018572:	4621      	mov	r1, r4
 8018574:	9000      	str	r0, [sp, #0]
 8018576:	9a03      	ldr	r2, [sp, #12]
 8018578:	2400      	movs	r4, #0
 801857a:	a805      	add	r0, sp, #20
 801857c:	f000 fe22 	bl	80191c4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018580:	f846 4d68 	str.w	r4, [r6, #-104]!
 8018584:	462a      	mov	r2, r5
 8018586:	4633      	mov	r3, r6
 8018588:	4621      	mov	r1, r4
 801858a:	a805      	add	r0, sp, #20
 801858c:	f001 fdaa 	bl	801a0e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8018590:	b1f0      	cbz	r0, 80185d0 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8018592:	280a      	cmp	r0, #10
 8018594:	d018      	beq.n	80185c8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8018596:	9f04      	ldr	r7, [sp, #16]
 8018598:	b1b7      	cbz	r7, 80185c8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801859a:	7b78      	ldrb	r0, [r7, #13]
 801859c:	7a3b      	ldrb	r3, [r7, #8]
 801859e:	88aa      	ldrh	r2, [r5, #4]
 80185a0:	00c1      	lsls	r1, r0, #3
 80185a2:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80185a6:	4319      	orrs	r1, r3
 80185a8:	0643      	lsls	r3, r0, #25
 80185aa:	bf44      	itt	mi
 80185ac:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 80185b0:	b219      	sxthmi	r1, r3
 80185b2:	0100      	lsls	r0, r0, #4
 80185b4:	79fb      	ldrb	r3, [r7, #7]
 80185b6:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80185ba:	4303      	orrs	r3, r0
 80185bc:	4413      	add	r3, r2
 80185be:	1a5b      	subs	r3, r3, r1
 80185c0:	b29b      	uxth	r3, r3
 80185c2:	42a3      	cmp	r3, r4
 80185c4:	bfc8      	it	gt
 80185c6:	b21c      	sxthgt	r4, r3
 80185c8:	4633      	mov	r3, r6
 80185ca:	462a      	mov	r2, r5
 80185cc:	2100      	movs	r1, #0
 80185ce:	e7dc      	b.n	801858a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 80185d0:	b2a0      	uxth	r0, r4
 80185d2:	b01e      	add	sp, #120	; 0x78
 80185d4:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80185d8:	b003      	add	sp, #12
 80185da:	4770      	bx	lr

080185dc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 80185dc:	b40e      	push	{r1, r2, r3}
 80185de:	b570      	push	{r4, r5, r6, lr}
 80185e0:	b09d      	sub	sp, #116	; 0x74
 80185e2:	ab21      	add	r3, sp, #132	; 0x84
 80185e4:	4604      	mov	r4, r0
 80185e6:	f853 5b04 	ldr.w	r5, [r3], #4
 80185ea:	9302      	str	r3, [sp, #8]
 80185ec:	a803      	add	r0, sp, #12
 80185ee:	f000 fd7e 	bl	80190ee <_ZN8touchgfx12TextProviderC1Ev>
 80185f2:	6823      	ldr	r3, [r4, #0]
 80185f4:	4620      	mov	r0, r4
 80185f6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80185f8:	4798      	blx	r3
 80185fa:	6823      	ldr	r3, [r4, #0]
 80185fc:	4606      	mov	r6, r0
 80185fe:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8018600:	4620      	mov	r0, r4
 8018602:	4798      	blx	r3
 8018604:	4633      	mov	r3, r6
 8018606:	9000      	str	r0, [sp, #0]
 8018608:	9a02      	ldr	r2, [sp, #8]
 801860a:	4629      	mov	r1, r5
 801860c:	a803      	add	r0, sp, #12
 801860e:	f000 fdd9 	bl	80191c4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018612:	a803      	add	r0, sp, #12
 8018614:	f001 fe60 	bl	801a2d8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8018618:	2401      	movs	r4, #1
 801861a:	b2a3      	uxth	r3, r4
 801861c:	b140      	cbz	r0, 8018630 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 801861e:	280a      	cmp	r0, #10
 8018620:	bf08      	it	eq
 8018622:	3301      	addeq	r3, #1
 8018624:	a803      	add	r0, sp, #12
 8018626:	bf08      	it	eq
 8018628:	b21c      	sxtheq	r4, r3
 801862a:	f001 fe55 	bl	801a2d8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801862e:	e7f4      	b.n	801861a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8018630:	4618      	mov	r0, r3
 8018632:	b01d      	add	sp, #116	; 0x74
 8018634:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018638:	b003      	add	sp, #12
 801863a:	4770      	bx	lr

0801863c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801863c:	b40e      	push	{r1, r2, r3}
 801863e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018640:	b09e      	sub	sp, #120	; 0x78
 8018642:	ab23      	add	r3, sp, #140	; 0x8c
 8018644:	4604      	mov	r4, r0
 8018646:	f853 5b04 	ldr.w	r5, [r3], #4
 801864a:	9303      	str	r3, [sp, #12]
 801864c:	a805      	add	r0, sp, #20
 801864e:	f000 fd4e 	bl	80190ee <_ZN8touchgfx12TextProviderC1Ev>
 8018652:	6823      	ldr	r3, [r4, #0]
 8018654:	4620      	mov	r0, r4
 8018656:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018658:	4798      	blx	r3
 801865a:	6823      	ldr	r3, [r4, #0]
 801865c:	4606      	mov	r6, r0
 801865e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8018660:	4620      	mov	r0, r4
 8018662:	4798      	blx	r3
 8018664:	4633      	mov	r3, r6
 8018666:	4629      	mov	r1, r5
 8018668:	9000      	str	r0, [sp, #0]
 801866a:	9a03      	ldr	r2, [sp, #12]
 801866c:	a805      	add	r0, sp, #20
 801866e:	ad1e      	add	r5, sp, #120	; 0x78
 8018670:	f000 fda8 	bl	80191c4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018674:	2100      	movs	r1, #0
 8018676:	f845 1d68 	str.w	r1, [r5, #-104]!
 801867a:	4622      	mov	r2, r4
 801867c:	462b      	mov	r3, r5
 801867e:	a805      	add	r0, sp, #20
 8018680:	f001 fd30 	bl	801a0e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8018684:	26ff      	movs	r6, #255	; 0xff
 8018686:	b1d8      	cbz	r0, 80186c0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 8018688:	280a      	cmp	r0, #10
 801868a:	d012      	beq.n	80186b2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 801868c:	9804      	ldr	r0, [sp, #16]
 801868e:	b180      	cbz	r0, 80186b2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8018690:	7b47      	ldrb	r7, [r0, #13]
 8018692:	7922      	ldrb	r2, [r4, #4]
 8018694:	00fb      	lsls	r3, r7, #3
 8018696:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801869a:	7a03      	ldrb	r3, [r0, #8]
 801869c:	430b      	orrs	r3, r1
 801869e:	0679      	lsls	r1, r7, #25
 80186a0:	bf44      	itt	mi
 80186a2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80186a6:	b21b      	sxthmi	r3, r3
 80186a8:	1ad3      	subs	r3, r2, r3
 80186aa:	b2db      	uxtb	r3, r3
 80186ac:	429e      	cmp	r6, r3
 80186ae:	bf28      	it	cs
 80186b0:	461e      	movcs	r6, r3
 80186b2:	462b      	mov	r3, r5
 80186b4:	4622      	mov	r2, r4
 80186b6:	2100      	movs	r1, #0
 80186b8:	a805      	add	r0, sp, #20
 80186ba:	f001 fd13 	bl	801a0e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80186be:	e7e2      	b.n	8018686 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 80186c0:	4630      	mov	r0, r6
 80186c2:	b01e      	add	sp, #120	; 0x78
 80186c4:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80186c8:	b003      	add	sp, #12
 80186ca:	4770      	bx	lr

080186cc <_ZNK8touchgfx8Drawable10invalidateEv>:
 80186cc:	b513      	push	{r0, r1, r4, lr}
 80186ce:	6803      	ldr	r3, [r0, #0]
 80186d0:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80186d4:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80186d8:	f8ad 1004 	strh.w	r1, [sp, #4]
 80186dc:	2400      	movs	r4, #0
 80186de:	9400      	str	r4, [sp, #0]
 80186e0:	f8ad 2006 	strh.w	r2, [sp, #6]
 80186e4:	691b      	ldr	r3, [r3, #16]
 80186e6:	4669      	mov	r1, sp
 80186e8:	4798      	blx	r3
 80186ea:	b002      	add	sp, #8
 80186ec:	bd10      	pop	{r4, pc}

080186ee <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80186ee:	b538      	push	{r3, r4, r5, lr}
 80186f0:	680b      	ldr	r3, [r1, #0]
 80186f2:	460c      	mov	r4, r1
 80186f4:	68db      	ldr	r3, [r3, #12]
 80186f6:	4605      	mov	r5, r0
 80186f8:	4798      	blx	r3
 80186fa:	6823      	ldr	r3, [r4, #0]
 80186fc:	4620      	mov	r0, r4
 80186fe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018700:	4629      	mov	r1, r5
 8018702:	4798      	blx	r3
 8018704:	4628      	mov	r0, r5
 8018706:	bd38      	pop	{r3, r4, r5, pc}

08018708 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8018708:	b410      	push	{r4}
 801870a:	880a      	ldrh	r2, [r1, #0]
 801870c:	8884      	ldrh	r4, [r0, #4]
 801870e:	4422      	add	r2, r4
 8018710:	800a      	strh	r2, [r1, #0]
 8018712:	88c4      	ldrh	r4, [r0, #6]
 8018714:	884a      	ldrh	r2, [r1, #2]
 8018716:	4422      	add	r2, r4
 8018718:	804a      	strh	r2, [r1, #2]
 801871a:	6940      	ldr	r0, [r0, #20]
 801871c:	b120      	cbz	r0, 8018728 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 801871e:	6803      	ldr	r3, [r0, #0]
 8018720:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018724:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018726:	4718      	bx	r3
 8018728:	f85d 4b04 	ldr.w	r4, [sp], #4
 801872c:	4770      	bx	lr

0801872e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 801872e:	b570      	push	{r4, r5, r6, lr}
 8018730:	8882      	ldrh	r2, [r0, #4]
 8018732:	880b      	ldrh	r3, [r1, #0]
 8018734:	4413      	add	r3, r2
 8018736:	800b      	strh	r3, [r1, #0]
 8018738:	88c2      	ldrh	r2, [r0, #6]
 801873a:	884b      	ldrh	r3, [r1, #2]
 801873c:	460c      	mov	r4, r1
 801873e:	4413      	add	r3, r2
 8018740:	804b      	strh	r3, [r1, #2]
 8018742:	4605      	mov	r5, r0
 8018744:	1d01      	adds	r1, r0, #4
 8018746:	4620      	mov	r0, r4
 8018748:	f7fa ffd6 	bl	80136f8 <_ZN8touchgfx4RectaNERKS0_>
 801874c:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8018750:	2b00      	cmp	r3, #0
 8018752:	dd0b      	ble.n	801876c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8018754:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8018758:	2b00      	cmp	r3, #0
 801875a:	dd07      	ble.n	801876c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801875c:	6968      	ldr	r0, [r5, #20]
 801875e:	b128      	cbz	r0, 801876c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8018760:	6803      	ldr	r3, [r0, #0]
 8018762:	4621      	mov	r1, r4
 8018764:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8018766:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801876a:	4718      	bx	r3
 801876c:	bd70      	pop	{r4, r5, r6, pc}
	...

08018770 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8018770:	b570      	push	{r4, r5, r6, lr}
 8018772:	8882      	ldrh	r2, [r0, #4]
 8018774:	880b      	ldrh	r3, [r1, #0]
 8018776:	4413      	add	r3, r2
 8018778:	800b      	strh	r3, [r1, #0]
 801877a:	88c2      	ldrh	r2, [r0, #6]
 801877c:	884b      	ldrh	r3, [r1, #2]
 801877e:	460c      	mov	r4, r1
 8018780:	4413      	add	r3, r2
 8018782:	804b      	strh	r3, [r1, #2]
 8018784:	4605      	mov	r5, r0
 8018786:	1d01      	adds	r1, r0, #4
 8018788:	4620      	mov	r0, r4
 801878a:	f7fa ffb5 	bl	80136f8 <_ZN8touchgfx4RectaNERKS0_>
 801878e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8018792:	2b00      	cmp	r3, #0
 8018794:	dd15      	ble.n	80187c2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x52>
 8018796:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801879a:	2b00      	cmp	r3, #0
 801879c:	dd11      	ble.n	80187c2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x52>
 801879e:	6968      	ldr	r0, [r5, #20]
 80187a0:	b128      	cbz	r0, 80187ae <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 80187a2:	6803      	ldr	r3, [r0, #0]
 80187a4:	691b      	ldr	r3, [r3, #16]
 80187a6:	4621      	mov	r1, r4
 80187a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80187ac:	4718      	bx	r3
 80187ae:	4b05      	ldr	r3, [pc, #20]	; (80187c4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x54>)
 80187b0:	681b      	ldr	r3, [r3, #0]
 80187b2:	3304      	adds	r3, #4
 80187b4:	429d      	cmp	r5, r3
 80187b6:	d104      	bne.n	80187c2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x52>
 80187b8:	f7fe ffe0 	bl	801777c <_ZN8touchgfx11Application11getInstanceEv>
 80187bc:	6803      	ldr	r3, [r0, #0]
 80187be:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80187c0:	e7f1      	b.n	80187a6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x36>
 80187c2:	bd70      	pop	{r4, r5, r6, pc}
 80187c4:	2002bd70 	.word	0x2002bd70

080187c8 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80187c8:	b570      	push	{r4, r5, r6, lr}
 80187ca:	4604      	mov	r4, r0
 80187cc:	4616      	mov	r6, r2
 80187ce:	460d      	mov	r5, r1
 80187d0:	b901      	cbnz	r1, 80187d4 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80187d2:	b192      	cbz	r2, 80187fa <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80187d4:	6823      	ldr	r3, [r4, #0]
 80187d6:	4620      	mov	r0, r4
 80187d8:	695b      	ldr	r3, [r3, #20]
 80187da:	4798      	blx	r3
 80187dc:	88e2      	ldrh	r2, [r4, #6]
 80187de:	88a1      	ldrh	r1, [r4, #4]
 80187e0:	4432      	add	r2, r6
 80187e2:	4429      	add	r1, r5
 80187e4:	4620      	mov	r0, r4
 80187e6:	b212      	sxth	r2, r2
 80187e8:	b209      	sxth	r1, r1
 80187ea:	f7e9 fe8d 	bl	8002508 <_ZN8touchgfx8Drawable5setXYEss>
 80187ee:	6823      	ldr	r3, [r4, #0]
 80187f0:	4620      	mov	r0, r4
 80187f2:	695b      	ldr	r3, [r3, #20]
 80187f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80187f8:	4718      	bx	r3
 80187fa:	bd70      	pop	{r4, r5, r6, pc}

080187fc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80187fc:	b510      	push	{r4, lr}
 80187fe:	4604      	mov	r4, r0
 8018800:	4608      	mov	r0, r1
 8018802:	2300      	movs	r3, #0
 8018804:	8023      	strh	r3, [r4, #0]
 8018806:	8063      	strh	r3, [r4, #2]
 8018808:	6803      	ldr	r3, [r0, #0]
 801880a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801880e:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8018812:	80a1      	strh	r1, [r4, #4]
 8018814:	80e2      	strh	r2, [r4, #6]
 8018816:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018818:	4621      	mov	r1, r4
 801881a:	4798      	blx	r3
 801881c:	4620      	mov	r0, r4
 801881e:	bd10      	pop	{r4, pc}

08018820 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 8018820:	b530      	push	{r4, r5, lr}
 8018822:	8083      	strh	r3, [r0, #4]
 8018824:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8018828:	f89d 5010 	ldrb.w	r5, [sp, #16]
 801882c:	7183      	strb	r3, [r0, #6]
 801882e:	79c3      	ldrb	r3, [r0, #7]
 8018830:	6101      	str	r1, [r0, #16]
 8018832:	f365 0306 	bfi	r3, r5, #0, #7
 8018836:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801883a:	8282      	strh	r2, [r0, #20]
 801883c:	f365 13c7 	bfi	r3, r5, #7, #1
 8018840:	71c3      	strb	r3, [r0, #7]
 8018842:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8018846:	7203      	strb	r3, [r0, #8]
 8018848:	f89d 301c 	ldrb.w	r3, [sp, #28]
 801884c:	7243      	strb	r3, [r0, #9]
 801884e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8018852:	8143      	strh	r3, [r0, #10]
 8018854:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8018858:	8183      	strh	r3, [r0, #12]
 801885a:	4b01      	ldr	r3, [pc, #4]	; (8018860 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 801885c:	6003      	str	r3, [r0, #0]
 801885e:	bd30      	pop	{r4, r5, pc}
 8018860:	0802c91c 	.word	0x0802c91c

08018864 <_ZNK8touchgfx9ConstFont4findEt>:
 8018864:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018866:	6904      	ldr	r4, [r0, #16]
 8018868:	b3bc      	cbz	r4, 80188da <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801886a:	88a3      	ldrh	r3, [r4, #4]
 801886c:	8a82      	ldrh	r2, [r0, #20]
 801886e:	1acb      	subs	r3, r1, r3
 8018870:	f102 32ff 	add.w	r2, r2, #4294967295
 8018874:	d431      	bmi.n	80188da <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018876:	4293      	cmp	r3, r2
 8018878:	dd0c      	ble.n	8018894 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801887a:	230e      	movs	r3, #14
 801887c:	fb03 4302 	mla	r3, r3, r2, r4
 8018880:	889b      	ldrh	r3, [r3, #4]
 8018882:	1a5b      	subs	r3, r3, r1
 8018884:	1ad3      	subs	r3, r2, r3
 8018886:	429a      	cmp	r2, r3
 8018888:	db27      	blt.n	80188da <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801888a:	2b00      	cmp	r3, #0
 801888c:	bfbc      	itt	lt
 801888e:	2302      	movlt	r3, #2
 8018890:	fb92 f3f3 	sdivlt	r3, r2, r3
 8018894:	2500      	movs	r5, #0
 8018896:	260e      	movs	r6, #14
 8018898:	4295      	cmp	r5, r2
 801889a:	dc1e      	bgt.n	80188da <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801889c:	fb06 4003 	mla	r0, r6, r3, r4
 80188a0:	8887      	ldrh	r7, [r0, #4]
 80188a2:	42b9      	cmp	r1, r7
 80188a4:	d01a      	beq.n	80188dc <_ZNK8touchgfx9ConstFont4findEt+0x78>
 80188a6:	d20d      	bcs.n	80188c4 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 80188a8:	1e5a      	subs	r2, r3, #1
 80188aa:	4295      	cmp	r5, r2
 80188ac:	dc15      	bgt.n	80188da <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80188ae:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 80188b2:	1a5b      	subs	r3, r3, r1
 80188b4:	1ad3      	subs	r3, r2, r3
 80188b6:	429a      	cmp	r2, r3
 80188b8:	db0f      	blt.n	80188da <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80188ba:	429d      	cmp	r5, r3
 80188bc:	ddec      	ble.n	8018898 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80188be:	1953      	adds	r3, r2, r5
 80188c0:	105b      	asrs	r3, r3, #1
 80188c2:	e7e9      	b.n	8018898 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80188c4:	1c5d      	adds	r5, r3, #1
 80188c6:	42aa      	cmp	r2, r5
 80188c8:	db07      	blt.n	80188da <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80188ca:	8a43      	ldrh	r3, [r0, #18]
 80188cc:	1acb      	subs	r3, r1, r3
 80188ce:	442b      	add	r3, r5
 80188d0:	429d      	cmp	r5, r3
 80188d2:	dc02      	bgt.n	80188da <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80188d4:	429a      	cmp	r2, r3
 80188d6:	dadf      	bge.n	8018898 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80188d8:	e7f1      	b.n	80188be <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80188da:	2000      	movs	r0, #0
 80188dc:	bdf0      	pop	{r4, r5, r6, r7, pc}

080188de <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80188de:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80188e0:	4604      	mov	r4, r0
 80188e2:	4617      	mov	r7, r2
 80188e4:	461e      	mov	r6, r3
 80188e6:	b911      	cbnz	r1, 80188ee <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80188e8:	2500      	movs	r5, #0
 80188ea:	4628      	mov	r0, r5
 80188ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80188ee:	290a      	cmp	r1, #10
 80188f0:	d0fa      	beq.n	80188e8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80188f2:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80188f6:	4291      	cmp	r1, r2
 80188f8:	d0f6      	beq.n	80188e8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80188fa:	f242 020b 	movw	r2, #8203	; 0x200b
 80188fe:	4291      	cmp	r1, r2
 8018900:	d0f2      	beq.n	80188e8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8018902:	f7ff ffaf 	bl	8018864 <_ZNK8touchgfx9ConstFont4findEt>
 8018906:	4605      	mov	r5, r0
 8018908:	b950      	cbnz	r0, 8018920 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 801890a:	6823      	ldr	r3, [r4, #0]
 801890c:	4620      	mov	r0, r4
 801890e:	691b      	ldr	r3, [r3, #16]
 8018910:	4798      	blx	r3
 8018912:	4601      	mov	r1, r0
 8018914:	4620      	mov	r0, r4
 8018916:	f7ff ffa5 	bl	8018864 <_ZNK8touchgfx9ConstFont4findEt>
 801891a:	4605      	mov	r5, r0
 801891c:	2800      	cmp	r0, #0
 801891e:	d0e3      	beq.n	80188e8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8018920:	6823      	ldr	r3, [r4, #0]
 8018922:	4629      	mov	r1, r5
 8018924:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8018926:	4620      	mov	r0, r4
 8018928:	4798      	blx	r3
 801892a:	6038      	str	r0, [r7, #0]
 801892c:	6823      	ldr	r3, [r4, #0]
 801892e:	4620      	mov	r0, r4
 8018930:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8018932:	4798      	blx	r3
 8018934:	7030      	strb	r0, [r6, #0]
 8018936:	e7d8      	b.n	80188ea <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08018938 <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 8018938:	2000      	movs	r0, #0
 801893a:	4770      	bx	lr

0801893c <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 801893c:	2001      	movs	r0, #1
 801893e:	4770      	bx	lr

08018940 <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 8018940:	2002      	movs	r0, #2
 8018942:	4770      	bx	lr

08018944 <_ZN8touchgfx6ScreenD1Ev>:
 8018944:	4770      	bx	lr

08018946 <_ZN8touchgfx12GestureEventD1Ev>:
 8018946:	4770      	bx	lr

08018948 <_ZN8touchgfx9DragEventD1Ev>:
 8018948:	4770      	bx	lr

0801894a <_ZN8touchgfx10ClickEventD1Ev>:
 801894a:	4770      	bx	lr

0801894c <_ZN8touchgfx10ClickEventD0Ev>:
 801894c:	b510      	push	{r4, lr}
 801894e:	210c      	movs	r1, #12
 8018950:	4604      	mov	r4, r0
 8018952:	f00e fee7 	bl	8027724 <_ZdlPvj>
 8018956:	4620      	mov	r0, r4
 8018958:	bd10      	pop	{r4, pc}

0801895a <_ZN8touchgfx9DragEventD0Ev>:
 801895a:	b510      	push	{r4, lr}
 801895c:	2110      	movs	r1, #16
 801895e:	4604      	mov	r4, r0
 8018960:	f00e fee0 	bl	8027724 <_ZdlPvj>
 8018964:	4620      	mov	r0, r4
 8018966:	bd10      	pop	{r4, pc}

08018968 <_ZN8touchgfx12GestureEventD0Ev>:
 8018968:	b510      	push	{r4, lr}
 801896a:	210c      	movs	r1, #12
 801896c:	4604      	mov	r4, r0
 801896e:	f00e fed9 	bl	8027724 <_ZdlPvj>
 8018972:	4620      	mov	r0, r4
 8018974:	bd10      	pop	{r4, pc}

08018976 <_ZN8touchgfx6ScreenD0Ev>:
 8018976:	b510      	push	{r4, lr}
 8018978:	213c      	movs	r1, #60	; 0x3c
 801897a:	4604      	mov	r4, r0
 801897c:	f00e fed2 	bl	8027724 <_ZdlPvj>
 8018980:	4620      	mov	r0, r4
 8018982:	bd10      	pop	{r4, pc}

08018984 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8018984:	b530      	push	{r4, r5, lr}
 8018986:	460d      	mov	r5, r1
 8018988:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801898a:	b087      	sub	sp, #28
 801898c:	4604      	mov	r4, r0
 801898e:	b301      	cbz	r1, 80189d2 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8018990:	a801      	add	r0, sp, #4
 8018992:	f7ff ff33 	bl	80187fc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018996:	892a      	ldrh	r2, [r5, #8]
 8018998:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801899c:	7928      	ldrb	r0, [r5, #4]
 801899e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80189a2:	f88d 0010 	strb.w	r0, [sp, #16]
 80189a6:	1ad2      	subs	r2, r2, r3
 80189a8:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80189aa:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80189ac:	f8ad 1012 	strh.w	r1, [sp, #18]
 80189b0:	441a      	add	r2, r3
 80189b2:	896b      	ldrh	r3, [r5, #10]
 80189b4:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 80189b8:	f8ad 2014 	strh.w	r2, [sp, #20]
 80189bc:	1b5b      	subs	r3, r3, r5
 80189be:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 80189c0:	442b      	add	r3, r5
 80189c2:	4d05      	ldr	r5, [pc, #20]	; (80189d8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 80189c4:	9503      	str	r5, [sp, #12]
 80189c6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80189ca:	6803      	ldr	r3, [r0, #0]
 80189cc:	a903      	add	r1, sp, #12
 80189ce:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80189d0:	4798      	blx	r3
 80189d2:	b007      	add	sp, #28
 80189d4:	bd30      	pop	{r4, r5, pc}
 80189d6:	bf00      	nop
 80189d8:	0802c99c 	.word	0x0802c99c

080189dc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 80189dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80189e0:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80189e2:	b08a      	sub	sp, #40	; 0x28
 80189e4:	4604      	mov	r4, r0
 80189e6:	460d      	mov	r5, r1
 80189e8:	b113      	cbz	r3, 80189f0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 80189ea:	790b      	ldrb	r3, [r1, #4]
 80189ec:	2b00      	cmp	r3, #0
 80189ee:	d044      	beq.n	8018a7a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80189f0:	f104 0804 	add.w	r8, r4, #4
 80189f4:	4641      	mov	r1, r8
 80189f6:	a803      	add	r0, sp, #12
 80189f8:	f7ff ff00 	bl	80187fc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80189fc:	792b      	ldrb	r3, [r5, #4]
 80189fe:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8018a02:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8018a06:	b983      	cbnz	r3, 8018a2a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8018a08:	892a      	ldrh	r2, [r5, #8]
 8018a0a:	88e9      	ldrh	r1, [r5, #6]
 8018a0c:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8018a10:	1b92      	subs	r2, r2, r6
 8018a12:	1bc9      	subs	r1, r1, r7
 8018a14:	9301      	str	r3, [sp, #4]
 8018a16:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8018a1a:	9300      	str	r3, [sp, #0]
 8018a1c:	b212      	sxth	r2, r2
 8018a1e:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8018a22:	b209      	sxth	r1, r1
 8018a24:	4640      	mov	r0, r8
 8018a26:	f7fa fd83 	bl	8013530 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8018a2a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8018a2c:	b329      	cbz	r1, 8018a7a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8018a2e:	a805      	add	r0, sp, #20
 8018a30:	f7ff fee4 	bl	80187fc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018a34:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8018a38:	792b      	ldrb	r3, [r5, #4]
 8018a3a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8018a3c:	f88d 3020 	strb.w	r3, [sp, #32]
 8018a40:	1abf      	subs	r7, r7, r2
 8018a42:	88ea      	ldrh	r2, [r5, #6]
 8018a44:	4417      	add	r7, r2
 8018a46:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8018a48:	4417      	add	r7, r2
 8018a4a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8018a4e:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8018a52:	1ab6      	subs	r6, r6, r2
 8018a54:	892a      	ldrh	r2, [r5, #8]
 8018a56:	4416      	add	r6, r2
 8018a58:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8018a5a:	4416      	add	r6, r2
 8018a5c:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8018a60:	4a07      	ldr	r2, [pc, #28]	; (8018a80 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8018a62:	9207      	str	r2, [sp, #28]
 8018a64:	2600      	movs	r6, #0
 8018a66:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8018a6a:	6803      	ldr	r3, [r0, #0]
 8018a6c:	a907      	add	r1, sp, #28
 8018a6e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8018a70:	4798      	blx	r3
 8018a72:	792b      	ldrb	r3, [r5, #4]
 8018a74:	b10b      	cbz	r3, 8018a7a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8018a76:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8018a7a:	b00a      	add	sp, #40	; 0x28
 8018a7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018a80:	0802c974 	.word	0x0802c974

08018a84 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8018a84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018a88:	460c      	mov	r4, r1
 8018a8a:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8018a8c:	b088      	sub	sp, #32
 8018a8e:	4605      	mov	r5, r0
 8018a90:	2900      	cmp	r1, #0
 8018a92:	d06d      	beq.n	8018b70 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8018a94:	4668      	mov	r0, sp
 8018a96:	f7ff feb1 	bl	80187fc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018a9a:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8018a9c:	88e3      	ldrh	r3, [r4, #6]
 8018a9e:	f9bd 8000 	ldrsh.w	r8, [sp]
 8018aa2:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8018aa6:	440b      	add	r3, r1
 8018aa8:	b21b      	sxth	r3, r3
 8018aaa:	4543      	cmp	r3, r8
 8018aac:	db31      	blt.n	8018b12 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018aae:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8018ab2:	44c4      	add	ip, r8
 8018ab4:	fa0f fc8c 	sxth.w	ip, ip
 8018ab8:	4563      	cmp	r3, ip
 8018aba:	da2a      	bge.n	8018b12 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018abc:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8018abe:	8926      	ldrh	r6, [r4, #8]
 8018ac0:	4416      	add	r6, r2
 8018ac2:	b236      	sxth	r6, r6
 8018ac4:	42be      	cmp	r6, r7
 8018ac6:	db24      	blt.n	8018b12 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018ac8:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8018acc:	4438      	add	r0, r7
 8018ace:	b200      	sxth	r0, r0
 8018ad0:	4286      	cmp	r6, r0
 8018ad2:	da1e      	bge.n	8018b12 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018ad4:	8963      	ldrh	r3, [r4, #10]
 8018ad6:	4419      	add	r1, r3
 8018ad8:	b209      	sxth	r1, r1
 8018ada:	4541      	cmp	r1, r8
 8018adc:	db08      	blt.n	8018af0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8018ade:	4561      	cmp	r1, ip
 8018ae0:	da06      	bge.n	8018af0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8018ae2:	89a3      	ldrh	r3, [r4, #12]
 8018ae4:	441a      	add	r2, r3
 8018ae6:	b212      	sxth	r2, r2
 8018ae8:	42ba      	cmp	r2, r7
 8018aea:	db01      	blt.n	8018af0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8018aec:	4282      	cmp	r2, r0
 8018aee:	db10      	blt.n	8018b12 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018af0:	4b21      	ldr	r3, [pc, #132]	; (8018b78 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8018af2:	9304      	str	r3, [sp, #16]
 8018af4:	2302      	movs	r3, #2
 8018af6:	f88d 3014 	strb.w	r3, [sp, #20]
 8018afa:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8018afc:	2300      	movs	r3, #0
 8018afe:	f8ad 3016 	strh.w	r3, [sp, #22]
 8018b02:	f8ad 3018 	strh.w	r3, [sp, #24]
 8018b06:	f8ad 301a 	strh.w	r3, [sp, #26]
 8018b0a:	6803      	ldr	r3, [r0, #0]
 8018b0c:	a904      	add	r1, sp, #16
 8018b0e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8018b10:	4798      	blx	r3
 8018b12:	1d29      	adds	r1, r5, #4
 8018b14:	a802      	add	r0, sp, #8
 8018b16:	f7ff fe71 	bl	80187fc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018b1a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8018b1e:	88e0      	ldrh	r0, [r4, #6]
 8018b20:	7921      	ldrb	r1, [r4, #4]
 8018b22:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8018b26:	8922      	ldrh	r2, [r4, #8]
 8018b28:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8018b2a:	f88d 1014 	strb.w	r1, [sp, #20]
 8018b2e:	eba3 0808 	sub.w	r8, r3, r8
 8018b32:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8018b36:	1bdf      	subs	r7, r3, r7
 8018b38:	b2bb      	uxth	r3, r7
 8018b3a:	fa1f f888 	uxth.w	r8, r8
 8018b3e:	8967      	ldrh	r7, [r4, #10]
 8018b40:	89a4      	ldrh	r4, [r4, #12]
 8018b42:	4440      	add	r0, r8
 8018b44:	4460      	add	r0, ip
 8018b46:	441a      	add	r2, r3
 8018b48:	44b8      	add	r8, r7
 8018b4a:	4423      	add	r3, r4
 8018b4c:	f8ad 0016 	strh.w	r0, [sp, #22]
 8018b50:	4433      	add	r3, r6
 8018b52:	4432      	add	r2, r6
 8018b54:	44e0      	add	r8, ip
 8018b56:	4c09      	ldr	r4, [pc, #36]	; (8018b7c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8018b58:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8018b5a:	9404      	str	r4, [sp, #16]
 8018b5c:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018b60:	f8ad 801a 	strh.w	r8, [sp, #26]
 8018b64:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018b68:	6803      	ldr	r3, [r0, #0]
 8018b6a:	a904      	add	r1, sp, #16
 8018b6c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8018b6e:	4798      	blx	r3
 8018b70:	b008      	add	sp, #32
 8018b72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018b76:	bf00      	nop
 8018b78:	0802c974 	.word	0x0802c974
 8018b7c:	0802c988 	.word	0x0802c988

08018b80 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8018b80:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8018b82:	4604      	mov	r4, r0
 8018b84:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8018b88:	3201      	adds	r2, #1
 8018b8a:	d112      	bne.n	8018bb2 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8018b8c:	6803      	ldr	r3, [r0, #0]
 8018b8e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8018b92:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8018b96:	f8ad 1004 	strh.w	r1, [sp, #4]
 8018b9a:	2500      	movs	r5, #0
 8018b9c:	9500      	str	r5, [sp, #0]
 8018b9e:	466d      	mov	r5, sp
 8018ba0:	4629      	mov	r1, r5
 8018ba2:	f8ad 2006 	strh.w	r2, [sp, #6]
 8018ba6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8018ba8:	4798      	blx	r3
 8018baa:	e895 0003 	ldmia.w	r5, {r0, r1}
 8018bae:	e884 0003 	stmia.w	r4, {r0, r1}
 8018bb2:	4620      	mov	r0, r4
 8018bb4:	b003      	add	sp, #12
 8018bb6:	bd30      	pop	{r4, r5, pc}

08018bb8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8018bb8:	b513      	push	{r0, r1, r4, lr}
 8018bba:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8018bbe:	3301      	adds	r3, #1
 8018bc0:	4604      	mov	r4, r0
 8018bc2:	d109      	bne.n	8018bd8 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8018bc4:	4601      	mov	r1, r0
 8018bc6:	4668      	mov	r0, sp
 8018bc8:	f7ff fe18 	bl	80187fc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018bcc:	f8bd 3000 	ldrh.w	r3, [sp]
 8018bd0:	8423      	strh	r3, [r4, #32]
 8018bd2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8018bd6:	8463      	strh	r3, [r4, #34]	; 0x22
 8018bd8:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8018bdc:	b002      	add	sp, #8
 8018bde:	bd10      	pop	{r4, pc}

08018be0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8018be0:	b513      	push	{r0, r1, r4, lr}
 8018be2:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8018be6:	3301      	adds	r3, #1
 8018be8:	4604      	mov	r4, r0
 8018bea:	d109      	bne.n	8018c00 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8018bec:	4601      	mov	r1, r0
 8018bee:	4668      	mov	r0, sp
 8018bf0:	f7ff fe04 	bl	80187fc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018bf4:	f8bd 3000 	ldrh.w	r3, [sp]
 8018bf8:	8423      	strh	r3, [r4, #32]
 8018bfa:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8018bfe:	8463      	strh	r3, [r4, #34]	; 0x22
 8018c00:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8018c04:	b002      	add	sp, #8
 8018c06:	bd10      	pop	{r4, pc}

08018c08 <_ZN8touchgfx6ScreenC1Ev>:
 8018c08:	b570      	push	{r4, r5, r6, lr}
 8018c0a:	4605      	mov	r5, r0
 8018c0c:	4b16      	ldr	r3, [pc, #88]	; (8018c68 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8018c0e:	f845 3b04 	str.w	r3, [r5], #4
 8018c12:	2300      	movs	r3, #0
 8018c14:	8103      	strh	r3, [r0, #8]
 8018c16:	8143      	strh	r3, [r0, #10]
 8018c18:	8183      	strh	r3, [r0, #12]
 8018c1a:	81c3      	strh	r3, [r0, #14]
 8018c1c:	8203      	strh	r3, [r0, #16]
 8018c1e:	8243      	strh	r3, [r0, #18]
 8018c20:	8283      	strh	r3, [r0, #20]
 8018c22:	82c3      	strh	r3, [r0, #22]
 8018c24:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8018c28:	6203      	str	r3, [r0, #32]
 8018c2a:	8483      	strh	r3, [r0, #36]	; 0x24
 8018c2c:	84c3      	strh	r3, [r0, #38]	; 0x26
 8018c2e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8018c32:	4a0e      	ldr	r2, [pc, #56]	; (8018c6c <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8018c34:	6343      	str	r3, [r0, #52]	; 0x34
 8018c36:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8018c3a:	4b0d      	ldr	r3, [pc, #52]	; (8018c70 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8018c3c:	6042      	str	r2, [r0, #4]
 8018c3e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8018c42:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8018c44:	4a0b      	ldr	r2, [pc, #44]	; (8018c74 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8018c46:	4604      	mov	r4, r0
 8018c48:	2101      	movs	r1, #1
 8018c4a:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8018c4e:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8018c52:	f9b2 1000 	ldrsh.w	r1, [r2]
 8018c56:	4628      	mov	r0, r5
 8018c58:	4798      	blx	r3
 8018c5a:	6863      	ldr	r3, [r4, #4]
 8018c5c:	4628      	mov	r0, r5
 8018c5e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018c60:	4631      	mov	r1, r6
 8018c62:	4798      	blx	r3
 8018c64:	4620      	mov	r0, r4
 8018c66:	bd70      	pop	{r4, r5, r6, pc}
 8018c68:	0802c9b0 	.word	0x0802c9b0
 8018c6c:	0802b7d4 	.word	0x0802b7d4
 8018c70:	2002bd2a 	.word	0x2002bd2a
 8018c74:	2002bd28 	.word	0x2002bd28

08018c78 <_ZN8touchgfx6Screen4drawEv>:
 8018c78:	b507      	push	{r0, r1, r2, lr}
 8018c7a:	4b09      	ldr	r3, [pc, #36]	; (8018ca0 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8018c7c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018c80:	4b08      	ldr	r3, [pc, #32]	; (8018ca4 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8018c82:	f8ad 2004 	strh.w	r2, [sp, #4]
 8018c86:	f9b3 3000 	ldrsh.w	r3, [r3]
 8018c8a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018c8e:	6803      	ldr	r3, [r0, #0]
 8018c90:	2100      	movs	r1, #0
 8018c92:	9100      	str	r1, [sp, #0]
 8018c94:	689b      	ldr	r3, [r3, #8]
 8018c96:	4669      	mov	r1, sp
 8018c98:	4798      	blx	r3
 8018c9a:	b003      	add	sp, #12
 8018c9c:	f85d fb04 	ldr.w	pc, [sp], #4
 8018ca0:	2002bd28 	.word	0x2002bd28
 8018ca4:	2002bd2a 	.word	0x2002bd2a

08018ca8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8018ca8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018cac:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8018cb0:	2b00      	cmp	r3, #0
 8018cb2:	b089      	sub	sp, #36	; 0x24
 8018cb4:	4680      	mov	r8, r0
 8018cb6:	460c      	mov	r4, r1
 8018cb8:	4615      	mov	r5, r2
 8018cba:	dd0e      	ble.n	8018cda <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8018cbc:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8018cc0:	2b00      	cmp	r3, #0
 8018cc2:	dd0a      	ble.n	8018cda <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8018cc4:	4628      	mov	r0, r5
 8018cc6:	f7ff ff5b 	bl	8018b80 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8018cca:	4621      	mov	r1, r4
 8018ccc:	f7fe fccc 	bl	8017668 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018cd0:	69eb      	ldr	r3, [r5, #28]
 8018cd2:	b928      	cbnz	r0, 8018ce0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8018cd4:	461d      	mov	r5, r3
 8018cd6:	2b00      	cmp	r3, #0
 8018cd8:	d1f4      	bne.n	8018cc4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8018cda:	b009      	add	sp, #36	; 0x24
 8018cdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018ce0:	ae04      	add	r6, sp, #16
 8018ce2:	2b00      	cmp	r3, #0
 8018ce4:	f000 80b5 	beq.w	8018e52 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8018ce8:	682b      	ldr	r3, [r5, #0]
 8018cea:	4629      	mov	r1, r5
 8018cec:	68db      	ldr	r3, [r3, #12]
 8018cee:	a802      	add	r0, sp, #8
 8018cf0:	4798      	blx	r3
 8018cf2:	4628      	mov	r0, r5
 8018cf4:	f7ff ff60 	bl	8018bb8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8018cf8:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8018cfc:	4407      	add	r7, r0
 8018cfe:	4628      	mov	r0, r5
 8018d00:	f7ff ff6e 	bl	8018be0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8018d04:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8018d08:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8018d0c:	f8ad 2014 	strh.w	r2, [sp, #20]
 8018d10:	4418      	add	r0, r3
 8018d12:	4621      	mov	r1, r4
 8018d14:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8018d18:	f8ad 0012 	strh.w	r0, [sp, #18]
 8018d1c:	b23f      	sxth	r7, r7
 8018d1e:	4630      	mov	r0, r6
 8018d20:	f8ad 3016 	strh.w	r3, [sp, #22]
 8018d24:	f8ad 7010 	strh.w	r7, [sp, #16]
 8018d28:	f7fa fce6 	bl	80136f8 <_ZN8touchgfx4RectaNERKS0_>
 8018d2c:	4628      	mov	r0, r5
 8018d2e:	f7ff ff27 	bl	8018b80 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8018d32:	4602      	mov	r2, r0
 8018d34:	e896 0003 	ldmia.w	r6, {r0, r1}
 8018d38:	ab06      	add	r3, sp, #24
 8018d3a:	e883 0003 	stmia.w	r3, {r0, r1}
 8018d3e:	4611      	mov	r1, r2
 8018d40:	4618      	mov	r0, r3
 8018d42:	f7fa fcd9 	bl	80136f8 <_ZN8touchgfx4RectaNERKS0_>
 8018d46:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8018d4a:	f9b4 1000 	ldrsh.w	r1, [r4]
 8018d4e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8018d52:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8018d56:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8018d5a:	4299      	cmp	r1, r3
 8018d5c:	d10b      	bne.n	8018d76 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8018d5e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018d62:	4552      	cmp	r2, sl
 8018d64:	d107      	bne.n	8018d76 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8018d66:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8018d6a:	455a      	cmp	r2, fp
 8018d6c:	d103      	bne.n	8018d76 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8018d6e:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8018d72:	454a      	cmp	r2, r9
 8018d74:	d06d      	beq.n	8018e52 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8018d76:	f1bb 0f00 	cmp.w	fp, #0
 8018d7a:	dd65      	ble.n	8018e48 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8018d7c:	f1b9 0f00 	cmp.w	r9, #0
 8018d80:	dd62      	ble.n	8018e48 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8018d82:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018d86:	fa1f f08a 	uxth.w	r0, sl
 8018d8a:	4552      	cmp	r2, sl
 8018d8c:	9000      	str	r0, [sp, #0]
 8018d8e:	da12      	bge.n	8018db6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8018d90:	9301      	str	r3, [sp, #4]
 8018d92:	9b00      	ldr	r3, [sp, #0]
 8018d94:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018d98:	f8ad 2012 	strh.w	r2, [sp, #18]
 8018d9c:	1a9a      	subs	r2, r3, r2
 8018d9e:	f8ad 1010 	strh.w	r1, [sp, #16]
 8018da2:	f8ad 0014 	strh.w	r0, [sp, #20]
 8018da6:	f8ad 2016 	strh.w	r2, [sp, #22]
 8018daa:	69ea      	ldr	r2, [r5, #28]
 8018dac:	4631      	mov	r1, r6
 8018dae:	4640      	mov	r0, r8
 8018db0:	f7ff ff7a 	bl	8018ca8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8018db4:	9b01      	ldr	r3, [sp, #4]
 8018db6:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018dba:	429a      	cmp	r2, r3
 8018dbc:	b29f      	uxth	r7, r3
 8018dbe:	da0d      	bge.n	8018ddc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8018dc0:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018dc4:	1aba      	subs	r2, r7, r2
 8018dc6:	f8ad a012 	strh.w	sl, [sp, #18]
 8018dca:	f8ad 2014 	strh.w	r2, [sp, #20]
 8018dce:	f8ad 9016 	strh.w	r9, [sp, #22]
 8018dd2:	69ea      	ldr	r2, [r5, #28]
 8018dd4:	4631      	mov	r1, r6
 8018dd6:	4640      	mov	r0, r8
 8018dd8:	f7ff ff66 	bl	8018ca8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8018ddc:	8822      	ldrh	r2, [r4, #0]
 8018dde:	88a3      	ldrh	r3, [r4, #4]
 8018de0:	445f      	add	r7, fp
 8018de2:	4413      	add	r3, r2
 8018de4:	b29b      	uxth	r3, r3
 8018de6:	b2bf      	uxth	r7, r7
 8018de8:	b23a      	sxth	r2, r7
 8018dea:	b219      	sxth	r1, r3
 8018dec:	4291      	cmp	r1, r2
 8018dee:	dd0d      	ble.n	8018e0c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8018df0:	1bdb      	subs	r3, r3, r7
 8018df2:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018df6:	f8ad a012 	strh.w	sl, [sp, #18]
 8018dfa:	f8ad 3014 	strh.w	r3, [sp, #20]
 8018dfe:	f8ad 9016 	strh.w	r9, [sp, #22]
 8018e02:	69ea      	ldr	r2, [r5, #28]
 8018e04:	4631      	mov	r1, r6
 8018e06:	4640      	mov	r0, r8
 8018e08:	f7ff ff4e 	bl	8018ca8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8018e0c:	88e2      	ldrh	r2, [r4, #6]
 8018e0e:	8863      	ldrh	r3, [r4, #2]
 8018e10:	4413      	add	r3, r2
 8018e12:	9a00      	ldr	r2, [sp, #0]
 8018e14:	444a      	add	r2, r9
 8018e16:	b29b      	uxth	r3, r3
 8018e18:	fa1f f982 	uxth.w	r9, r2
 8018e1c:	fa0f f289 	sxth.w	r2, r9
 8018e20:	b219      	sxth	r1, r3
 8018e22:	428a      	cmp	r2, r1
 8018e24:	da15      	bge.n	8018e52 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8018e26:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018e2a:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018e2e:	f8ad 1014 	strh.w	r1, [sp, #20]
 8018e32:	eba3 0309 	sub.w	r3, r3, r9
 8018e36:	f8ad 0010 	strh.w	r0, [sp, #16]
 8018e3a:	f8ad 2012 	strh.w	r2, [sp, #18]
 8018e3e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8018e42:	69ea      	ldr	r2, [r5, #28]
 8018e44:	4631      	mov	r1, r6
 8018e46:	e001      	b.n	8018e4c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8018e48:	69ea      	ldr	r2, [r5, #28]
 8018e4a:	4621      	mov	r1, r4
 8018e4c:	4640      	mov	r0, r8
 8018e4e:	f7ff ff2b 	bl	8018ca8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8018e52:	4628      	mov	r0, r5
 8018e54:	f7ff fe94 	bl	8018b80 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8018e58:	6861      	ldr	r1, [r4, #4]
 8018e5a:	4602      	mov	r2, r0
 8018e5c:	6820      	ldr	r0, [r4, #0]
 8018e5e:	4633      	mov	r3, r6
 8018e60:	c303      	stmia	r3!, {r0, r1}
 8018e62:	4611      	mov	r1, r2
 8018e64:	4630      	mov	r0, r6
 8018e66:	f7fa fc47 	bl	80136f8 <_ZN8touchgfx4RectaNERKS0_>
 8018e6a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8018e6e:	2b00      	cmp	r3, #0
 8018e70:	f77f af33 	ble.w	8018cda <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8018e74:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8018e78:	2b00      	cmp	r3, #0
 8018e7a:	f77f af2e 	ble.w	8018cda <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8018e7e:	4628      	mov	r0, r5
 8018e80:	f7ff fe9a 	bl	8018bb8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8018e84:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8018e88:	1a18      	subs	r0, r3, r0
 8018e8a:	f8ad 0010 	strh.w	r0, [sp, #16]
 8018e8e:	4628      	mov	r0, r5
 8018e90:	f7ff fea6 	bl	8018be0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8018e94:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8018e98:	1a18      	subs	r0, r3, r0
 8018e9a:	f8ad 0012 	strh.w	r0, [sp, #18]
 8018e9e:	682b      	ldr	r3, [r5, #0]
 8018ea0:	4631      	mov	r1, r6
 8018ea2:	689b      	ldr	r3, [r3, #8]
 8018ea4:	4628      	mov	r0, r5
 8018ea6:	4798      	blx	r3
 8018ea8:	e717      	b.n	8018cda <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08018eaa <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8018eaa:	b570      	push	{r4, r5, r6, lr}
 8018eac:	460c      	mov	r4, r1
 8018eae:	b086      	sub	sp, #24
 8018eb0:	1d06      	adds	r6, r0, #4
 8018eb2:	2300      	movs	r3, #0
 8018eb4:	4631      	mov	r1, r6
 8018eb6:	4605      	mov	r5, r0
 8018eb8:	a802      	add	r0, sp, #8
 8018eba:	9301      	str	r3, [sp, #4]
 8018ebc:	f7ff fc9e 	bl	80187fc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018ec0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8018ec4:	8822      	ldrh	r2, [r4, #0]
 8018ec6:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8018eca:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018ece:	f8ad 0014 	strh.w	r0, [sp, #20]
 8018ed2:	1ad2      	subs	r2, r2, r3
 8018ed4:	8863      	ldrh	r3, [r4, #2]
 8018ed6:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018eda:	1a5b      	subs	r3, r3, r1
 8018edc:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8018ee0:	f8ad 1016 	strh.w	r1, [sp, #22]
 8018ee4:	aa01      	add	r2, sp, #4
 8018ee6:	a904      	add	r1, sp, #16
 8018ee8:	4630      	mov	r0, r6
 8018eea:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018eee:	f7fa fcdb 	bl	80138a8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8018ef2:	9a01      	ldr	r2, [sp, #4]
 8018ef4:	b11a      	cbz	r2, 8018efe <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8018ef6:	4621      	mov	r1, r4
 8018ef8:	4628      	mov	r0, r5
 8018efa:	f7ff fed5 	bl	8018ca8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8018efe:	b006      	add	sp, #24
 8018f00:	bd70      	pop	{r4, r5, r6, pc}

08018f02 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8018f02:	b530      	push	{r4, r5, lr}
 8018f04:	4602      	mov	r2, r0
 8018f06:	4604      	mov	r4, r0
 8018f08:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8018f0c:	b085      	sub	sp, #20
 8018f0e:	460d      	mov	r5, r1
 8018f10:	6851      	ldr	r1, [r2, #4]
 8018f12:	466b      	mov	r3, sp
 8018f14:	c303      	stmia	r3!, {r0, r1}
 8018f16:	4629      	mov	r1, r5
 8018f18:	4668      	mov	r0, sp
 8018f1a:	f7fa fbed 	bl	80136f8 <_ZN8touchgfx4RectaNERKS0_>
 8018f1e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8018f22:	b12b      	cbz	r3, 8018f30 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8018f24:	4669      	mov	r1, sp
 8018f26:	4620      	mov	r0, r4
 8018f28:	f7ff ffbf 	bl	8018eaa <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8018f2c:	b005      	add	sp, #20
 8018f2e:	bd30      	pop	{r4, r5, pc}
 8018f30:	3404      	adds	r4, #4
 8018f32:	4621      	mov	r1, r4
 8018f34:	a802      	add	r0, sp, #8
 8018f36:	f7ff fc61 	bl	80187fc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018f3a:	f8bd 3000 	ldrh.w	r3, [sp]
 8018f3e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8018f42:	1a9b      	subs	r3, r3, r2
 8018f44:	f8ad 3000 	strh.w	r3, [sp]
 8018f48:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8018f4c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8018f50:	4669      	mov	r1, sp
 8018f52:	1a9b      	subs	r3, r3, r2
 8018f54:	4620      	mov	r0, r4
 8018f56:	f8ad 3002 	strh.w	r3, [sp, #2]
 8018f5a:	f7fa fc6c 	bl	8013836 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8018f5e:	e7e5      	b.n	8018f2c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08018f60 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8018f60:	680a      	ldr	r2, [r1, #0]
 8018f62:	460b      	mov	r3, r1
 8018f64:	6992      	ldr	r2, [r2, #24]
 8018f66:	1d01      	adds	r1, r0, #4
 8018f68:	4618      	mov	r0, r3
 8018f6a:	4710      	bx	r2

08018f6c <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>:
 8018f6c:	4298      	cmp	r0, r3
 8018f6e:	d200      	bcs.n	8018f72 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x6>
 8018f70:	b913      	cbnz	r3, 8018f78 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0xc>
 8018f72:	440a      	add	r2, r1
 8018f74:	b210      	sxth	r0, r2
 8018f76:	4770      	bx	lr
 8018f78:	ee07 0a90 	vmov	s15, r0
 8018f7c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8018f80:	ee07 3a90 	vmov	s15, r3
 8018f84:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018f88:	eddf 4a15 	vldr	s9, [pc, #84]	; 8018fe0 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x74>
 8018f8c:	eddf 5a15 	vldr	s11, [pc, #84]	; 8018fe4 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x78>
 8018f90:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8018f94:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018f98:	ee37 7a66 	vsub.f32	s14, s14, s13
 8018f9c:	ee07 2a90 	vmov	s15, r2
 8018fa0:	eee7 5a24 	vfma.f32	s11, s14, s9
 8018fa4:	ee27 5a07 	vmul.f32	s10, s14, s14
 8018fa8:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8018fac:	eee5 6a25 	vfma.f32	s13, s10, s11
 8018fb0:	ee07 1a90 	vmov	s15, r1
 8018fb4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018fb8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8018fbc:	eee6 7a26 	vfma.f32	s15, s12, s13
 8018fc0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018fc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018fc8:	bfcc      	ite	gt
 8018fca:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8018fce:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8018fd2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018fd6:	ee17 3a90 	vmov	r3, s15
 8018fda:	b218      	sxth	r0, r3
 8018fdc:	4770      	bx	lr
 8018fde:	bf00      	nop
 8018fe0:	402ce6b0 	.word	0x402ce6b0
 8018fe4:	3fd9cd60 	.word	0x3fd9cd60

08018fe8 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst>:
 8018fe8:	4298      	cmp	r0, r3
 8018fea:	d200      	bcs.n	8018fee <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0x6>
 8018fec:	b913      	cbnz	r3, 8018ff4 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0xc>
 8018fee:	1888      	adds	r0, r1, r2
 8018ff0:	b200      	sxth	r0, r0
 8018ff2:	4770      	bx	lr
 8018ff4:	ee07 0a90 	vmov	s15, r0
 8018ff8:	ee07 3a10 	vmov	s14, r3
 8018ffc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8019000:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8019004:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8019008:	2002      	movs	r0, #2
 801900a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801900e:	fb92 f0f0 	sdiv	r0, r2, r0
 8019012:	ee07 0a90 	vmov	s15, r0
 8019016:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 801901a:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801901e:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8019022:	ee07 1a90 	vmov	s15, r1
 8019026:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801902a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801902e:	eddf 4a16 	vldr	s9, [pc, #88]	; 8019088 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0xa0>
 8019032:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8019036:	d518      	bpl.n	801906a <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0x82>
 8019038:	ed9f 5a14 	vldr	s10, [pc, #80]	; 801908c <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0xa4>
 801903c:	eea7 5a24 	vfma.f32	s10, s14, s9
 8019040:	ee67 5a07 	vmul.f32	s11, s14, s14
 8019044:	ee25 7a85 	vmul.f32	s14, s11, s10
 8019048:	eee7 7a26 	vfma.f32	s15, s14, s13
 801904c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019050:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019054:	bfcc      	ite	gt
 8019056:	ee77 7a86 	vaddgt.f32	s15, s15, s12
 801905a:	ee77 7ac6 	vsuble.f32	s15, s15, s12
 801905e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8019062:	ee17 3a90 	vmov	r3, s15
 8019066:	b218      	sxth	r0, r3
 8019068:	4770      	bx	lr
 801906a:	eef0 5a00 	vmov.f32	s11, #0	; 0x40000000  2.0
 801906e:	ee37 7a65 	vsub.f32	s14, s14, s11
 8019072:	ed9f 5a07 	vldr	s10, [pc, #28]	; 8019090 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0xa8>
 8019076:	eea7 5a24 	vfma.f32	s10, s14, s9
 801907a:	ee27 4a07 	vmul.f32	s8, s14, s14
 801907e:	eee4 5a05 	vfma.f32	s11, s8, s10
 8019082:	eee5 7aa6 	vfma.f32	s15, s11, s13
 8019086:	e7e1      	b.n	801904c <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0x64>
 8019088:	406612ff 	.word	0x406612ff
 801908c:	c02612ff 	.word	0xc02612ff
 8019090:	402612ff 	.word	0x402612ff

08019094 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8019094:	4298      	cmp	r0, r3
 8019096:	d200      	bcs.n	801909a <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 8019098:	b913      	cbnz	r3, 80190a0 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 801909a:	440a      	add	r2, r1
 801909c:	b210      	sxth	r0, r2
 801909e:	4770      	bx	lr
 80190a0:	ee07 2a90 	vmov	s15, r2
 80190a4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80190a8:	ee07 0a90 	vmov	s15, r0
 80190ac:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80190b0:	ee67 7a27 	vmul.f32	s15, s14, s15
 80190b4:	ee07 3a10 	vmov	s14, r3
 80190b8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80190bc:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80190c0:	ee07 1a90 	vmov	s15, r1
 80190c4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80190c8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80190cc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80190d0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80190d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190d8:	bfcc      	ite	gt
 80190da:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80190de:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80190e2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80190e6:	ee17 3a90 	vmov	r3, s15
 80190ea:	b218      	sxth	r0, r3
 80190ec:	4770      	bx	lr

080190ee <_ZN8touchgfx12TextProviderC1Ev>:
 80190ee:	b538      	push	{r3, r4, r5, lr}
 80190f0:	2500      	movs	r5, #0
 80190f2:	2302      	movs	r3, #2
 80190f4:	4604      	mov	r4, r0
 80190f6:	e9c0 5500 	strd	r5, r5, [r0]
 80190fa:	7403      	strb	r3, [r0, #16]
 80190fc:	6145      	str	r5, [r0, #20]
 80190fe:	7605      	strb	r5, [r0, #24]
 8019100:	83c5      	strh	r5, [r0, #30]
 8019102:	8405      	strh	r5, [r0, #32]
 8019104:	86c5      	strh	r5, [r0, #54]	; 0x36
 8019106:	8705      	strh	r5, [r0, #56]	; 0x38
 8019108:	87c5      	strh	r5, [r0, #62]	; 0x3e
 801910a:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 801910e:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8019112:	220e      	movs	r2, #14
 8019114:	4629      	mov	r1, r5
 8019116:	304c      	adds	r0, #76	; 0x4c
 8019118:	f00e fce0 	bl	8027adc <memset>
 801911c:	2301      	movs	r3, #1
 801911e:	4620      	mov	r0, r4
 8019120:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8019124:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8019128:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 801912c:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8019130:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8019134:	f7ef fd12 	bl	8008b5c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8019138:	4620      	mov	r0, r4
 801913a:	bd38      	pop	{r3, r4, r5, pc}

0801913c <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801913c:	b508      	push	{r3, lr}
 801913e:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8019140:	b92b      	cbnz	r3, 801914e <_ZN8touchgfx12TextProvider11endOfStringEv+0x12>
 8019142:	4b07      	ldr	r3, [pc, #28]	; (8019160 <_ZN8touchgfx12TextProvider11endOfStringEv+0x24>)
 8019144:	4a07      	ldr	r2, [pc, #28]	; (8019164 <_ZN8touchgfx12TextProvider11endOfStringEv+0x28>)
 8019146:	4808      	ldr	r0, [pc, #32]	; (8019168 <_ZN8touchgfx12TextProvider11endOfStringEv+0x2c>)
 8019148:	21c0      	movs	r1, #192	; 0xc0
 801914a:	f00e fb19 	bl	8027780 <__assert_func>
 801914e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8019150:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019154:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8019156:	fab0 f080 	clz	r0, r0
 801915a:	0940      	lsrs	r0, r0, #5
 801915c:	bd08      	pop	{r3, pc}
 801915e:	bf00      	nop
 8019160:	0802a468 	.word	0x0802a468
 8019164:	0802cc0b 	.word	0x0802cc0b
 8019168:	0802a53a 	.word	0x0802a53a

0801916c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801916c:	b530      	push	{r4, r5, lr}
 801916e:	2500      	movs	r5, #0
 8019170:	2401      	movs	r4, #1
 8019172:	6843      	ldr	r3, [r0, #4]
 8019174:	b913      	cbnz	r3, 801917c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8019176:	6803      	ldr	r3, [r0, #0]
 8019178:	b313      	cbz	r3, 80191c0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801917a:	6043      	str	r3, [r0, #4]
 801917c:	7e03      	ldrb	r3, [r0, #24]
 801917e:	b143      	cbz	r3, 8019192 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8019180:	6943      	ldr	r3, [r0, #20]
 8019182:	b12b      	cbz	r3, 8019190 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8019184:	881a      	ldrh	r2, [r3, #0]
 8019186:	b11a      	cbz	r2, 8019190 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8019188:	1c9a      	adds	r2, r3, #2
 801918a:	6142      	str	r2, [r0, #20]
 801918c:	8818      	ldrh	r0, [r3, #0]
 801918e:	bd30      	pop	{r4, r5, pc}
 8019190:	7605      	strb	r5, [r0, #24]
 8019192:	6843      	ldr	r3, [r0, #4]
 8019194:	8819      	ldrh	r1, [r3, #0]
 8019196:	b199      	cbz	r1, 80191c0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8019198:	1c9a      	adds	r2, r3, #2
 801919a:	2902      	cmp	r1, #2
 801919c:	6042      	str	r2, [r0, #4]
 801919e:	d1f5      	bne.n	801918c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 80191a0:	7c03      	ldrb	r3, [r0, #16]
 80191a2:	2b01      	cmp	r3, #1
 80191a4:	d8e5      	bhi.n	8019172 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80191a6:	1c5a      	adds	r2, r3, #1
 80191a8:	3302      	adds	r3, #2
 80191aa:	7402      	strb	r2, [r0, #16]
 80191ac:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80191b0:	6143      	str	r3, [r0, #20]
 80191b2:	2b00      	cmp	r3, #0
 80191b4:	d0dd      	beq.n	8019172 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80191b6:	881b      	ldrh	r3, [r3, #0]
 80191b8:	2b00      	cmp	r3, #0
 80191ba:	d0da      	beq.n	8019172 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80191bc:	7604      	strb	r4, [r0, #24]
 80191be:	e7d8      	b.n	8019172 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80191c0:	2000      	movs	r0, #0
 80191c2:	e7e4      	b.n	801918e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

080191c4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 80191c4:	b430      	push	{r4, r5}
 80191c6:	6815      	ldr	r5, [r2, #0]
 80191c8:	6085      	str	r5, [r0, #8]
 80191ca:	6852      	ldr	r2, [r2, #4]
 80191cc:	60c2      	str	r2, [r0, #12]
 80191ce:	6443      	str	r3, [r0, #68]	; 0x44
 80191d0:	2200      	movs	r2, #0
 80191d2:	9b02      	ldr	r3, [sp, #8]
 80191d4:	7402      	strb	r2, [r0, #16]
 80191d6:	6001      	str	r1, [r0, #0]
 80191d8:	6483      	str	r3, [r0, #72]	; 0x48
 80191da:	6042      	str	r2, [r0, #4]
 80191dc:	6142      	str	r2, [r0, #20]
 80191de:	7602      	strb	r2, [r0, #24]
 80191e0:	8702      	strh	r2, [r0, #56]	; 0x38
 80191e2:	8402      	strh	r2, [r0, #32]
 80191e4:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 80191e8:	bc30      	pop	{r4, r5}
 80191ea:	f7ef bcb7 	b.w	8008b5c <_ZN8touchgfx12TextProvider18initializeInternalEv>

080191ee <_ZN8touchgfx12TextProvider20unicodeConverterInitEv>:
 80191ee:	2301      	movs	r3, #1
 80191f0:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 80191f4:	4770      	bx	lr
	...

080191f8 <_ZN8touchgfx12TextProvider16unicodeConverterEh>:
 80191f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80191fc:	b089      	sub	sp, #36	; 0x24
 80191fe:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8019200:	9302      	str	r3, [sp, #8]
 8019202:	b92b      	cbnz	r3, 8019210 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x18>
 8019204:	4bb4      	ldr	r3, [pc, #720]	; (80194d8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2e0>)
 8019206:	4ab5      	ldr	r2, [pc, #724]	; (80194dc <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2e4>)
 8019208:	21c0      	movs	r1, #192	; 0xc0
 801920a:	48b5      	ldr	r0, [pc, #724]	; (80194e0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2e8>)
 801920c:	f00e fab8 	bl	8027780 <__assert_func>
 8019210:	f8b0 b036 	ldrh.w	fp, [r0, #54]	; 0x36
 8019214:	eb00 064b 	add.w	r6, r0, fp, lsl #1
 8019218:	8c73      	ldrh	r3, [r6, #34]	; 0x22
 801921a:	2b00      	cmp	r3, #0
 801921c:	f000 8158 	beq.w	80194d0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8019220:	2b7f      	cmp	r3, #127	; 0x7f
 8019222:	d819      	bhi.n	8019258 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x60>
 8019224:	2901      	cmp	r1, #1
 8019226:	d117      	bne.n	8019258 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x60>
 8019228:	2b3c      	cmp	r3, #60	; 0x3c
 801922a:	f000 83fd 	beq.w	8019a28 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x830>
 801922e:	2b3e      	cmp	r3, #62	; 0x3e
 8019230:	f000 83fc 	beq.w	8019a2c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x834>
 8019234:	2b28      	cmp	r3, #40	; 0x28
 8019236:	f000 83fb 	beq.w	8019a30 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x838>
 801923a:	2b29      	cmp	r3, #41	; 0x29
 801923c:	f000 83fa 	beq.w	8019a34 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x83c>
 8019240:	2b5b      	cmp	r3, #91	; 0x5b
 8019242:	f000 83f9 	beq.w	8019a38 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x840>
 8019246:	2b5d      	cmp	r3, #93	; 0x5d
 8019248:	f000 83f8 	beq.w	8019a3c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x844>
 801924c:	2b7b      	cmp	r3, #123	; 0x7b
 801924e:	f000 83f7 	beq.w	8019a40 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x848>
 8019252:	2b7d      	cmp	r3, #125	; 0x7d
 8019254:	f000 83f6 	beq.w	8019a44 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x84c>
 8019258:	9a02      	ldr	r2, [sp, #8]
 801925a:	2a01      	cmp	r2, #1
 801925c:	d803      	bhi.n	8019266 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6e>
 801925e:	4ba1      	ldr	r3, [pc, #644]	; (80194e4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2ec>)
 8019260:	4aa1      	ldr	r2, [pc, #644]	; (80194e8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2f0>)
 8019262:	21c5      	movs	r1, #197	; 0xc5
 8019264:	e7d1      	b.n	801920a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x12>
 8019266:	f10b 0201 	add.w	r2, fp, #1
 801926a:	b292      	uxth	r2, r2
 801926c:	2a09      	cmp	r2, #9
 801926e:	4611      	mov	r1, r2
 8019270:	bf88      	it	hi
 8019272:	f1a2 010a 	subhi.w	r1, r2, #10
 8019276:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801927a:	9104      	str	r1, [sp, #16]
 801927c:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 801927e:	9101      	str	r1, [sp, #4]
 8019280:	9902      	ldr	r1, [sp, #8]
 8019282:	2902      	cmp	r1, #2
 8019284:	d0eb      	beq.n	801925e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x66>
 8019286:	f10b 0102 	add.w	r1, fp, #2
 801928a:	b289      	uxth	r1, r1
 801928c:	2909      	cmp	r1, #9
 801928e:	bf88      	it	hi
 8019290:	390a      	subhi	r1, #10
 8019292:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8019296:	9c01      	ldr	r4, [sp, #4]
 8019298:	8c4d      	ldrh	r5, [r1, #34]	; 0x22
 801929a:	f240 6151 	movw	r1, #1617	; 0x651
 801929e:	428c      	cmp	r4, r1
 80192a0:	d125      	bne.n	80192ee <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xf6>
 80192a2:	f2a3 614b 	subw	r1, r3, #1611	; 0x64b
 80192a6:	b289      	uxth	r1, r1
 80192a8:	2914      	cmp	r1, #20
 80192aa:	d914      	bls.n	80192d6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xde>
 80192ac:	f023 0104 	bic.w	r1, r3, #4
 80192b0:	b289      	uxth	r1, r1
 80192b2:	f5b1 6fce 	cmp.w	r1, #1648	; 0x670
 80192b6:	d00e      	beq.n	80192d6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xde>
 80192b8:	f2a3 61d6 	subw	r1, r3, #1750	; 0x6d6
 80192bc:	b289      	uxth	r1, r1
 80192be:	2917      	cmp	r1, #23
 80192c0:	d804      	bhi.n	80192cc <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xd4>
 80192c2:	4f8a      	ldr	r7, [pc, #552]	; (80194ec <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2f4>)
 80192c4:	fa27 f101 	lsr.w	r1, r7, r1
 80192c8:	07c9      	lsls	r1, r1, #31
 80192ca:	d404      	bmi.n	80192d6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xde>
 80192cc:	f6a3 01e4 	subw	r1, r3, #2276	; 0x8e4
 80192d0:	b289      	uxth	r1, r1
 80192d2:	291a      	cmp	r1, #26
 80192d4:	d80b      	bhi.n	80192ee <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xf6>
 80192d6:	2a0a      	cmp	r2, #10
 80192d8:	bf28      	it	cs
 80192da:	2200      	movcs	r2, #0
 80192dc:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80192e0:	f240 6151 	movw	r1, #1617	; 0x651
 80192e4:	8471      	strh	r1, [r6, #34]	; 0x22
 80192e6:	8453      	strh	r3, [r2, #34]	; 0x22
 80192e8:	461a      	mov	r2, r3
 80192ea:	9b01      	ldr	r3, [sp, #4]
 80192ec:	9201      	str	r2, [sp, #4]
 80192ee:	f2a3 6222 	subw	r2, r3, #1570	; 0x622
 80192f2:	b292      	uxth	r2, r2
 80192f4:	2a18      	cmp	r2, #24
 80192f6:	d90e      	bls.n	8019316 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x11e>
 80192f8:	f5a3 62c8 	sub.w	r2, r3, #1600	; 0x640
 80192fc:	b292      	uxth	r2, r2
 80192fe:	2a0a      	cmp	r2, #10
 8019300:	d909      	bls.n	8019316 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x11e>
 8019302:	f46f 69ce 	mvn.w	r9, #1648	; 0x670
 8019306:	eb03 0209 	add.w	r2, r3, r9
 801930a:	b292      	uxth	r2, r2
 801930c:	2a62      	cmp	r2, #98	; 0x62
 801930e:	d902      	bls.n	8019316 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x11e>
 8019310:	2b20      	cmp	r3, #32
 8019312:	f040 80dd 	bne.w	80194d0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8019316:	9a02      	ldr	r2, [sp, #8]
 8019318:	2a03      	cmp	r2, #3
 801931a:	d0a0      	beq.n	801925e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x66>
 801931c:	f10b 0103 	add.w	r1, fp, #3
 8019320:	b289      	uxth	r1, r1
 8019322:	2909      	cmp	r1, #9
 8019324:	460a      	mov	r2, r1
 8019326:	bf88      	it	hi
 8019328:	f1a1 020a 	subhi.w	r2, r1, #10
 801932c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8019330:	f8b2 c022 	ldrh.w	ip, [r2, #34]	; 0x22
 8019334:	9a02      	ldr	r2, [sp, #8]
 8019336:	2a04      	cmp	r2, #4
 8019338:	d091      	beq.n	801925e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x66>
 801933a:	f10b 0204 	add.w	r2, fp, #4
 801933e:	b292      	uxth	r2, r2
 8019340:	2a09      	cmp	r2, #9
 8019342:	bf88      	it	hi
 8019344:	3a0a      	subhi	r2, #10
 8019346:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801934a:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801934c:	f2a2 6622 	subw	r6, r2, #1570	; 0x622
 8019350:	2e18      	cmp	r6, #24
 8019352:	f240 80cd 	bls.w	80194f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2f8>
 8019356:	f5a2 66c8 	sub.w	r6, r2, #1600	; 0x640
 801935a:	2e0a      	cmp	r6, #10
 801935c:	f240 80c8 	bls.w	80194f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2f8>
 8019360:	f46f 68ce 	mvn.w	r8, #1648	; 0x670
 8019364:	4442      	add	r2, r8
 8019366:	2a62      	cmp	r2, #98	; 0x62
 8019368:	f240 80c2 	bls.w	80194f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2f8>
 801936c:	f2a3 6227 	subw	r2, r3, #1575	; 0x627
 8019370:	b292      	uxth	r2, r2
 8019372:	2a21      	cmp	r2, #33	; 0x21
 8019374:	f200 80bc 	bhi.w	80194f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2f8>
 8019378:	f2a5 6227 	subw	r2, r5, #1575	; 0x627
 801937c:	b292      	uxth	r2, r2
 801937e:	2a23      	cmp	r2, #35	; 0x23
 8019380:	d82d      	bhi.n	80193de <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e6>
 8019382:	f2ac 622f 	subw	r2, ip, #1583	; 0x62f
 8019386:	b292      	uxth	r2, r2
 8019388:	2a18      	cmp	r2, #24
 801938a:	d828      	bhi.n	80193de <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e6>
 801938c:	eb05 0285 	add.w	r2, r5, r5, lsl #2
 8019390:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8019394:	f5a2 4282 	sub.w	r2, r2, #16640	; 0x4100
 8019398:	ebc3 1603 	rsb	r6, r3, r3, lsl #4
 801939c:	3a1a      	subs	r2, #26
 801939e:	ebc6 1606 	rsb	r6, r6, r6, lsl #4
 80193a2:	eb02 0286 	add.w	r2, r2, r6, lsl #2
 80193a6:	6c87      	ldr	r7, [r0, #72]	; 0x48
 80193a8:	4462      	add	r2, ip
 80193aa:	b292      	uxth	r2, r2
 80193ac:	b1bf      	cbz	r7, 80193de <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e6>
 80193ae:	8b3e      	ldrh	r6, [r7, #24]
 80193b0:	b1ae      	cbz	r6, 80193de <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e6>
 80193b2:	f8d7 9000 	ldr.w	r9, [r7]
 80193b6:	f04f 0e00 	mov.w	lr, #0
 80193ba:	eb06 070e 	add.w	r7, r6, lr
 80193be:	107f      	asrs	r7, r7, #1
 80193c0:	240a      	movs	r4, #10
 80193c2:	fb04 fa07 	mul.w	sl, r4, r7
 80193c6:	eb09 080a 	add.w	r8, r9, sl
 80193ca:	f839 a00a 	ldrh.w	sl, [r9, sl]
 80193ce:	4552      	cmp	r2, sl
 80193d0:	d968      	bls.n	80194a4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2ac>
 80193d2:	f107 0e01 	add.w	lr, r7, #1
 80193d6:	e000      	b.n	80193da <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e2>
 80193d8:	463e      	mov	r6, r7
 80193da:	4576      	cmp	r6, lr
 80193dc:	dced      	bgt.n	80193ba <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1c2>
 80193de:	f5a3 62c5 	sub.w	r2, r3, #1576	; 0x628
 80193e2:	b292      	uxth	r2, r2
 80193e4:	2a22      	cmp	r2, #34	; 0x22
 80193e6:	f240 8086 	bls.w	80194f6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2fe>
 80193ea:	9a01      	ldr	r2, [sp, #4]
 80193ec:	f2a2 624b 	subw	r2, r2, #1611	; 0x64b
 80193f0:	b292      	uxth	r2, r2
 80193f2:	2a14      	cmp	r2, #20
 80193f4:	d91c      	bls.n	8019430 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x238>
 80193f6:	9a01      	ldr	r2, [sp, #4]
 80193f8:	f5b2 6fce 	cmp.w	r2, #1648	; 0x670
 80193fc:	d018      	beq.n	8019430 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x238>
 80193fe:	9901      	ldr	r1, [sp, #4]
 8019400:	f240 6274 	movw	r2, #1652	; 0x674
 8019404:	4291      	cmp	r1, r2
 8019406:	d013      	beq.n	8019430 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x238>
 8019408:	f2a1 62d6 	subw	r2, r1, #1750	; 0x6d6
 801940c:	b292      	uxth	r2, r2
 801940e:	2a17      	cmp	r2, #23
 8019410:	d804      	bhi.n	801941c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x224>
 8019412:	4936      	ldr	r1, [pc, #216]	; (80194ec <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2f4>)
 8019414:	fa21 f202 	lsr.w	r2, r1, r2
 8019418:	07d7      	lsls	r7, r2, #31
 801941a:	d409      	bmi.n	8019430 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x238>
 801941c:	9a01      	ldr	r2, [sp, #4]
 801941e:	f6a2 02e4 	subw	r2, r2, #2276	; 0x8e4
 8019422:	b292      	uxth	r2, r2
 8019424:	2a1a      	cmp	r2, #26
 8019426:	d903      	bls.n	8019430 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x238>
 8019428:	2200      	movs	r2, #0
 801942a:	46ac      	mov	ip, r5
 801942c:	9d01      	ldr	r5, [sp, #4]
 801942e:	9201      	str	r2, [sp, #4]
 8019430:	2b20      	cmp	r3, #32
 8019432:	d005      	beq.n	8019440 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x248>
 8019434:	f2a3 6226 	subw	r2, r3, #1574	; 0x626
 8019438:	b292      	uxth	r2, r2
 801943a:	2a24      	cmp	r2, #36	; 0x24
 801943c:	f200 814e 	bhi.w	80196dc <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4e4>
 8019440:	f2a5 6222 	subw	r2, r5, #1570	; 0x622
 8019444:	b292      	uxth	r2, r2
 8019446:	2ab3      	cmp	r2, #179	; 0xb3
 8019448:	f200 8148 	bhi.w	80196dc <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4e4>
 801944c:	f240 6244 	movw	r2, #1604	; 0x644
 8019450:	4295      	cmp	r5, r2
 8019452:	d104      	bne.n	801945e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x266>
 8019454:	f240 6227 	movw	r2, #1575	; 0x627
 8019458:	4594      	cmp	ip, r2
 801945a:	f000 813f 	beq.w	80196dc <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4e4>
 801945e:	9901      	ldr	r1, [sp, #4]
 8019460:	f240 624f 	movw	r2, #1615	; 0x64f
 8019464:	4291      	cmp	r1, r2
 8019466:	f000 8139 	beq.w	80196dc <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4e4>
 801946a:	6c81      	ldr	r1, [r0, #72]	; 0x48
 801946c:	2900      	cmp	r1, #0
 801946e:	f000 8135 	beq.w	80196dc <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4e4>
 8019472:	8b8a      	ldrh	r2, [r1, #28]
 8019474:	2a00      	cmp	r2, #0
 8019476:	f000 8132 	beq.w	80196de <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4e6>
 801947a:	b2ed      	uxtb	r5, r5
 801947c:	ea45 2503 	orr.w	r5, r5, r3, lsl #8
 8019480:	6889      	ldr	r1, [r1, #8]
 8019482:	b2ad      	uxth	r5, r5
 8019484:	2700      	movs	r7, #0
 8019486:	f04f 080a 	mov.w	r8, #10
 801948a:	19d6      	adds	r6, r2, r7
 801948c:	1076      	asrs	r6, r6, #1
 801948e:	fb08 fc06 	mul.w	ip, r8, r6
 8019492:	eb01 0e0c 	add.w	lr, r1, ip
 8019496:	f831 c00c 	ldrh.w	ip, [r1, ip]
 801949a:	4565      	cmp	r5, ip
 801949c:	f240 8121 	bls.w	80196e2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4ea>
 80194a0:	1c77      	adds	r7, r6, #1
 80194a2:	e118      	b.n	80196d6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4de>
 80194a4:	d398      	bcc.n	80193d8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e0>
 80194a6:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 80194aa:	9c01      	ldr	r4, [sp, #4]
 80194ac:	42a2      	cmp	r2, r4
 80194ae:	d196      	bne.n	80193de <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e6>
 80194b0:	9b02      	ldr	r3, [sp, #8]
 80194b2:	86c1      	strh	r1, [r0, #54]	; 0x36
 80194b4:	3b03      	subs	r3, #3
 80194b6:	2909      	cmp	r1, #9
 80194b8:	8703      	strh	r3, [r0, #56]	; 0x38
 80194ba:	bf88      	it	hi
 80194bc:	f1ab 0207 	subhi.w	r2, fp, #7
 80194c0:	f04f 0301 	mov.w	r3, #1
 80194c4:	bf88      	it	hi
 80194c6:	86c2      	strhhi	r2, [r0, #54]	; 0x36
 80194c8:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 80194cc:	f8b8 3002 	ldrh.w	r3, [r8, #2]
 80194d0:	4618      	mov	r0, r3
 80194d2:	b009      	add	sp, #36	; 0x24
 80194d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80194d8:	0802a468 	.word	0x0802a468
 80194dc:	0802cc0b 	.word	0x0802cc0b
 80194e0:	0802a53a 	.word	0x0802a53a
 80194e4:	0802a566 	.word	0x0802a566
 80194e8:	0802cb39 	.word	0x0802cb39
 80194ec:	00f67e7f 	.word	0x00f67e7f
 80194f0:	2b20      	cmp	r3, #32
 80194f2:	f47f af74 	bne.w	80193de <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e6>
 80194f6:	9a01      	ldr	r2, [sp, #4]
 80194f8:	f2a2 622c 	subw	r2, r2, #1580	; 0x62c
 80194fc:	b292      	uxth	r2, r2
 80194fe:	2a25      	cmp	r2, #37	; 0x25
 8019500:	f63f af73 	bhi.w	80193ea <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1f2>
 8019504:	f2a5 612c 	subw	r1, r5, #1580	; 0x62c
 8019508:	b289      	uxth	r1, r1
 801950a:	2925      	cmp	r1, #37	; 0x25
 801950c:	d915      	bls.n	801953a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x342>
 801950e:	f5b5 6fce 	cmp.w	r5, #1648	; 0x670
 8019512:	f000 82ee 	beq.w	8019af2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8fa>
 8019516:	f240 62d2 	movw	r2, #1746	; 0x6d2
 801951a:	4295      	cmp	r5, r2
 801951c:	f47f af65 	bne.w	80193ea <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1f2>
 8019520:	9a01      	ldr	r2, [sp, #4]
 8019522:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8019526:	00d2      	lsls	r2, r2, #3
 8019528:	2b20      	cmp	r3, #32
 801952a:	b292      	uxth	r2, r2
 801952c:	d107      	bne.n	801953e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x346>
 801952e:	f5a2 5240 	sub.w	r2, r2, #12288	; 0x3000
 8019532:	3a30      	subs	r2, #48	; 0x30
 8019534:	b292      	uxth	r2, r2
 8019536:	2127      	movs	r1, #39	; 0x27
 8019538:	e018      	b.n	801956c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x374>
 801953a:	2b20      	cmp	r3, #32
 801953c:	d035      	beq.n	80195aa <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3b2>
 801953e:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8019542:	ebc3 1242 	rsb	r2, r3, r2, lsl #5
 8019546:	0112      	lsls	r2, r2, #4
 8019548:	f502 42e5 	add.w	r2, r2, #29312	; 0x7280
 801954c:	b292      	uxth	r2, r2
 801954e:	9c01      	ldr	r4, [sp, #4]
 8019550:	eb04 0684 	add.w	r6, r4, r4, lsl #2
 8019554:	eb02 02c6 	add.w	r2, r2, r6, lsl #3
 8019558:	f5b5 6fce 	cmp.w	r5, #1648	; 0x670
 801955c:	b292      	uxth	r2, r2
 801955e:	f000 82d4 	beq.w	8019b0a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x912>
 8019562:	f240 66d2 	movw	r6, #1746	; 0x6d2
 8019566:	42b5      	cmp	r5, r6
 8019568:	bf08      	it	eq
 801956a:	2127      	moveq	r1, #39	; 0x27
 801956c:	6c87      	ldr	r7, [r0, #72]	; 0x48
 801956e:	2f00      	cmp	r7, #0
 8019570:	f43f af3b 	beq.w	80193ea <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1f2>
 8019574:	8b7e      	ldrh	r6, [r7, #26]
 8019576:	2e00      	cmp	r6, #0
 8019578:	f43f af37 	beq.w	80193ea <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1f2>
 801957c:	440a      	add	r2, r1
 801957e:	f502 6212 	add.w	r2, r2, #2336	; 0x920
 8019582:	6879      	ldr	r1, [r7, #4]
 8019584:	b292      	uxth	r2, r2
 8019586:	f04f 0e00 	mov.w	lr, #0
 801958a:	f04f 0a0a 	mov.w	sl, #10
 801958e:	eb06 070e 	add.w	r7, r6, lr
 8019592:	107f      	asrs	r7, r7, #1
 8019594:	fb0a f807 	mul.w	r8, sl, r7
 8019598:	eb01 0908 	add.w	r9, r1, r8
 801959c:	f831 8008 	ldrh.w	r8, [r1, r8]
 80195a0:	4542      	cmp	r2, r8
 80195a2:	d909      	bls.n	80195b8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3c0>
 80195a4:	f107 0e01 	add.w	lr, r7, #1
 80195a8:	e003      	b.n	80195b2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3ba>
 80195aa:	f64c 72d0 	movw	r2, #53200	; 0xcfd0
 80195ae:	e7ce      	b.n	801954e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x356>
 80195b0:	463e      	mov	r6, r7
 80195b2:	4576      	cmp	r6, lr
 80195b4:	dceb      	bgt.n	801958e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x396>
 80195b6:	e718      	b.n	80193ea <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1f2>
 80195b8:	d3fa      	bcc.n	80195b0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3b8>
 80195ba:	2200      	movs	r2, #0
 80195bc:	9201      	str	r2, [sp, #4]
 80195be:	f109 0102 	add.w	r1, r9, #2
 80195c2:	2202      	movs	r2, #2
 80195c4:	9c01      	ldr	r4, [sp, #4]
 80195c6:	4fbe      	ldr	r7, [pc, #760]	; (80198c0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6c8>)
 80195c8:	2c00      	cmp	r4, #0
 80195ca:	bf0c      	ite	eq
 80195cc:	4616      	moveq	r6, r2
 80195ce:	1c56      	addne	r6, r2, #1
 80195d0:	3601      	adds	r6, #1
 80195d2:	9c02      	ldr	r4, [sp, #8]
 80195d4:	b2b5      	uxth	r5, r6
 80195d6:	42ac      	cmp	r4, r5
 80195d8:	f67f ae41 	bls.w	801925e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x66>
 80195dc:	445d      	add	r5, fp
 80195de:	b2ad      	uxth	r5, r5
 80195e0:	2d09      	cmp	r5, #9
 80195e2:	bf88      	it	hi
 80195e4:	3d0a      	subhi	r5, #10
 80195e6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80195ea:	8c6d      	ldrh	r5, [r5, #34]	; 0x22
 80195ec:	f2a5 6c4b 	subw	ip, r5, #1611	; 0x64b
 80195f0:	f1bc 0f14 	cmp.w	ip, #20
 80195f4:	d97a      	bls.n	80196ec <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4f4>
 80195f6:	f025 0c04 	bic.w	ip, r5, #4
 80195fa:	f5bc 6fce 	cmp.w	ip, #1648	; 0x670
 80195fe:	d075      	beq.n	80196ec <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4f4>
 8019600:	f2a5 6cd6 	subw	ip, r5, #1750	; 0x6d6
 8019604:	fa1f fc8c 	uxth.w	ip, ip
 8019608:	f1bc 0f17 	cmp.w	ip, #23
 801960c:	d804      	bhi.n	8019618 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x420>
 801960e:	fa27 fc0c 	lsr.w	ip, r7, ip
 8019612:	f01c 0f01 	tst.w	ip, #1
 8019616:	d169      	bne.n	80196ec <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4f4>
 8019618:	f6a5 0ce4 	subw	ip, r5, #2276	; 0x8e4
 801961c:	f1bc 0f1a 	cmp.w	ip, #26
 8019620:	d964      	bls.n	80196ec <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4f4>
 8019622:	f2a5 6622 	subw	r6, r5, #1570	; 0x622
 8019626:	2e18      	cmp	r6, #24
 8019628:	d962      	bls.n	80196f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4f8>
 801962a:	f5a5 66c8 	sub.w	r6, r5, #1600	; 0x640
 801962e:	2e0a      	cmp	r6, #10
 8019630:	d95e      	bls.n	80196f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4f8>
 8019632:	f46f 66ce 	mvn.w	r6, #1648	; 0x670
 8019636:	4435      	add	r5, r6
 8019638:	2d62      	cmp	r5, #98	; 0x62
 801963a:	bf94      	ite	ls
 801963c:	2400      	movls	r4, #0
 801963e:	2401      	movhi	r4, #1
 8019640:	f890 5060 	ldrb.w	r5, [r0, #96]	; 0x60
 8019644:	9403      	str	r4, [sp, #12]
 8019646:	f085 0401 	eor.w	r4, r5, #1
 801964a:	9406      	str	r4, [sp, #24]
 801964c:	9c03      	ldr	r4, [sp, #12]
 801964e:	2c00      	cmp	r4, #0
 8019650:	9c06      	ldr	r4, [sp, #24]
 8019652:	bf0c      	ite	eq
 8019654:	2502      	moveq	r5, #2
 8019656:	2500      	movne	r5, #0
 8019658:	eb05 0904 	add.w	r9, r5, r4
 801965c:	2900      	cmp	r1, #0
 801965e:	f000 817f 	beq.w	8019960 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x768>
 8019662:	f831 5019 	ldrh.w	r5, [r1, r9, lsl #1]
 8019666:	2d00      	cmp	r5, #0
 8019668:	f040 821a 	bne.w	8019aa0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8a8>
 801966c:	2a00      	cmp	r2, #0
 801966e:	f000 8217 	beq.w	8019aa0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8a8>
 8019672:	eb0b 0502 	add.w	r5, fp, r2
 8019676:	b2ad      	uxth	r5, r5
 8019678:	2d09      	cmp	r5, #9
 801967a:	bf88      	it	hi
 801967c:	3d0a      	subhi	r5, #10
 801967e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8019682:	f8df c23c 	ldr.w	ip, [pc, #572]	; 80198c0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6c8>
 8019686:	8c6f      	ldrh	r7, [r5, #34]	; 0x22
 8019688:	1c56      	adds	r6, r2, #1
 801968a:	f2a7 654b 	subw	r5, r7, #1611	; 0x64b
 801968e:	2d14      	cmp	r5, #20
 8019690:	d911      	bls.n	80196b6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4be>
 8019692:	f027 0504 	bic.w	r5, r7, #4
 8019696:	f5b5 6fce 	cmp.w	r5, #1648	; 0x670
 801969a:	d00c      	beq.n	80196b6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4be>
 801969c:	f2a7 65d6 	subw	r5, r7, #1750	; 0x6d6
 80196a0:	b2ad      	uxth	r5, r5
 80196a2:	2d17      	cmp	r5, #23
 80196a4:	d803      	bhi.n	80196ae <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4b6>
 80196a6:	fa2c f505 	lsr.w	r5, ip, r5
 80196aa:	07ed      	lsls	r5, r5, #31
 80196ac:	d403      	bmi.n	80196b6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4be>
 80196ae:	f6a7 05e4 	subw	r5, r7, #2276	; 0x8e4
 80196b2:	2d1a      	cmp	r5, #26
 80196b4:	d81e      	bhi.n	80196f4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4fc>
 80196b6:	9c02      	ldr	r4, [sp, #8]
 80196b8:	b2b5      	uxth	r5, r6
 80196ba:	42ac      	cmp	r4, r5
 80196bc:	f67f adcf 	bls.w	801925e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x66>
 80196c0:	445d      	add	r5, fp
 80196c2:	b2ad      	uxth	r5, r5
 80196c4:	2d09      	cmp	r5, #9
 80196c6:	bf88      	it	hi
 80196c8:	3d0a      	subhi	r5, #10
 80196ca:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80196ce:	3601      	adds	r6, #1
 80196d0:	8c6f      	ldrh	r7, [r5, #34]	; 0x22
 80196d2:	e7da      	b.n	801968a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x492>
 80196d4:	4632      	mov	r2, r6
 80196d6:	4297      	cmp	r7, r2
 80196d8:	f6ff aed7 	blt.w	801948a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x292>
 80196dc:	2200      	movs	r2, #0
 80196de:	4611      	mov	r1, r2
 80196e0:	e770      	b.n	80195c4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3cc>
 80196e2:	d3f7      	bcc.n	80196d4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4dc>
 80196e4:	f10e 0102 	add.w	r1, lr, #2
 80196e8:	2201      	movs	r2, #1
 80196ea:	e76b      	b.n	80195c4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3cc>
 80196ec:	3601      	adds	r6, #1
 80196ee:	e770      	b.n	80195d2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3da>
 80196f0:	2400      	movs	r4, #0
 80196f2:	e7a5      	b.n	8019640 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x448>
 80196f4:	f8d0 c048 	ldr.w	ip, [r0, #72]	; 0x48
 80196f8:	f1bc 0f00 	cmp.w	ip, #0
 80196fc:	d076      	beq.n	80197ec <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5f4>
 80196fe:	f46f 64c4 	mvn.w	r4, #1568	; 0x620
 8019702:	193d      	adds	r5, r7, r4
 8019704:	2d19      	cmp	r5, #25
 8019706:	d840      	bhi.n	801978a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x592>
 8019708:	f107 5700 	add.w	r7, r7, #536870912	; 0x20000000
 801970c:	f46f 6ac4 	mvn.w	sl, #1568	; 0x620
 8019710:	f8dc 500c 	ldr.w	r5, [ip, #12]
 8019714:	4457      	add	r7, sl
 8019716:	eb05 05c7 	add.w	r5, r5, r7, lsl #3
 801971a:	9c02      	ldr	r4, [sp, #8]
 801971c:	f106 0e01 	add.w	lr, r6, #1
 8019720:	b2b6      	uxth	r6, r6
 8019722:	42a6      	cmp	r6, r4
 8019724:	f4bf ad9b 	bcs.w	801925e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x66>
 8019728:	445e      	add	r6, fp
 801972a:	b2b6      	uxth	r6, r6
 801972c:	2e09      	cmp	r6, #9
 801972e:	bf88      	it	hi
 8019730:	3e0a      	subhi	r6, #10
 8019732:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8019736:	f8df 8188 	ldr.w	r8, [pc, #392]	; 80198c0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6c8>
 801973a:	8c77      	ldrh	r7, [r6, #34]	; 0x22
 801973c:	f2a7 664b 	subw	r6, r7, #1611	; 0x64b
 8019740:	2e14      	cmp	r6, #20
 8019742:	d911      	bls.n	8019768 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x570>
 8019744:	f027 0604 	bic.w	r6, r7, #4
 8019748:	f5b6 6fce 	cmp.w	r6, #1648	; 0x670
 801974c:	d00c      	beq.n	8019768 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x570>
 801974e:	f2a7 66d6 	subw	r6, r7, #1750	; 0x6d6
 8019752:	b2b6      	uxth	r6, r6
 8019754:	2e17      	cmp	r6, #23
 8019756:	d803      	bhi.n	8019760 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x568>
 8019758:	fa28 f606 	lsr.w	r6, r8, r6
 801975c:	07f4      	lsls	r4, r6, #31
 801975e:	d403      	bmi.n	8019768 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x570>
 8019760:	f6a7 06e4 	subw	r6, r7, #2276	; 0x8e4
 8019764:	2e1a      	cmp	r6, #26
 8019766:	d847      	bhi.n	80197f8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x600>
 8019768:	9c02      	ldr	r4, [sp, #8]
 801976a:	fa1f f68e 	uxth.w	r6, lr
 801976e:	42b4      	cmp	r4, r6
 8019770:	f67f ad75 	bls.w	801925e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x66>
 8019774:	445e      	add	r6, fp
 8019776:	b2b6      	uxth	r6, r6
 8019778:	2e09      	cmp	r6, #9
 801977a:	bf88      	it	hi
 801977c:	3e0a      	subhi	r6, #10
 801977e:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8019782:	f10e 0e01 	add.w	lr, lr, #1
 8019786:	8c77      	ldrh	r7, [r6, #34]	; 0x22
 8019788:	e7d8      	b.n	801973c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x544>
 801978a:	f46f 68c8 	mvn.w	r8, #1600	; 0x640
 801978e:	eb07 0508 	add.w	r5, r7, r8
 8019792:	2d09      	cmp	r5, #9
 8019794:	d807      	bhi.n	80197a6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5ae>
 8019796:	f107 5700 	add.w	r7, r7, #536870912	; 0x20000000
 801979a:	f46f 6ec8 	mvn.w	lr, #1600	; 0x640
 801979e:	4477      	add	r7, lr
 80197a0:	f8dc 5010 	ldr.w	r5, [ip, #16]
 80197a4:	e7b7      	b.n	8019716 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x51e>
 80197a6:	f46f 65ce 	mvn.w	r5, #1648	; 0x670
 80197aa:	197d      	adds	r5, r7, r5
 80197ac:	2d62      	cmp	r5, #98	; 0x62
 80197ae:	d81d      	bhi.n	80197ec <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5f4>
 80197b0:	f8bc 501e 	ldrh.w	r5, [ip, #30]
 80197b4:	2d00      	cmp	r5, #0
 80197b6:	d0b0      	beq.n	801971a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x522>
 80197b8:	f8dc 4014 	ldr.w	r4, [ip, #20]
 80197bc:	9405      	str	r4, [sp, #20]
 80197be:	f04f 0800 	mov.w	r8, #0
 80197c2:	eb05 0e08 	add.w	lr, r5, r8
 80197c6:	240a      	movs	r4, #10
 80197c8:	ea4f 0e6e 	mov.w	lr, lr, asr #1
 80197cc:	fb04 fa0e 	mul.w	sl, r4, lr
 80197d0:	9c05      	ldr	r4, [sp, #20]
 80197d2:	4454      	add	r4, sl
 80197d4:	9407      	str	r4, [sp, #28]
 80197d6:	9c05      	ldr	r4, [sp, #20]
 80197d8:	f834 a00a 	ldrh.w	sl, [r4, sl]
 80197dc:	45ba      	cmp	sl, r7
 80197de:	d207      	bcs.n	80197f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5f8>
 80197e0:	f10e 0801 	add.w	r8, lr, #1
 80197e4:	e000      	b.n	80197e8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5f0>
 80197e6:	4675      	mov	r5, lr
 80197e8:	45a8      	cmp	r8, r5
 80197ea:	dbea      	blt.n	80197c2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5ca>
 80197ec:	2500      	movs	r5, #0
 80197ee:	e794      	b.n	801971a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x522>
 80197f0:	d8f9      	bhi.n	80197e6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5ee>
 80197f2:	9d07      	ldr	r5, [sp, #28]
 80197f4:	3502      	adds	r5, #2
 80197f6:	e790      	b.n	801971a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x522>
 80197f8:	f1bc 0f00 	cmp.w	ip, #0
 80197fc:	d05a      	beq.n	80198b4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6bc>
 80197fe:	f46f 68c4 	mvn.w	r8, #1568	; 0x620
 8019802:	eb07 0608 	add.w	r6, r7, r8
 8019806:	2e19      	cmp	r6, #25
 8019808:	d823      	bhi.n	8019852 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x65a>
 801980a:	f46f 66c4 	mvn.w	r6, #1568	; 0x620
 801980e:	f107 5700 	add.w	r7, r7, #536870912	; 0x20000000
 8019812:	4437      	add	r7, r6
 8019814:	f8dc 600c 	ldr.w	r6, [ip, #12]
 8019818:	eb06 06c7 	add.w	r6, r6, r7, lsl #3
 801981c:	b155      	cbz	r5, 8019834 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x63c>
 801981e:	88ed      	ldrh	r5, [r5, #6]
 8019820:	b145      	cbz	r5, 8019834 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x63c>
 8019822:	b13e      	cbz	r6, 8019834 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x63c>
 8019824:	8875      	ldrh	r5, [r6, #2]
 8019826:	2d00      	cmp	r5, #0
 8019828:	f040 810e 	bne.w	8019a48 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x850>
 801982c:	88f5      	ldrh	r5, [r6, #6]
 801982e:	2d00      	cmp	r5, #0
 8019830:	f040 810a 	bne.w	8019a48 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x850>
 8019834:	f1b9 0f02 	cmp.w	r9, #2
 8019838:	d144      	bne.n	80198c4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6cc>
 801983a:	880d      	ldrh	r5, [r1, #0]
 801983c:	2d00      	cmp	r5, #0
 801983e:	f000 8103 	beq.w	8019a48 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x850>
 8019842:	f240 6544 	movw	r5, #1604	; 0x644
 8019846:	42ab      	cmp	r3, r5
 8019848:	f040 80fe 	bne.w	8019a48 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x850>
 801984c:	2401      	movs	r4, #1
 801984e:	9403      	str	r4, [sp, #12]
 8019850:	e0de      	b.n	8019a10 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x818>
 8019852:	f46f 64c8 	mvn.w	r4, #1600	; 0x640
 8019856:	193e      	adds	r6, r7, r4
 8019858:	2e09      	cmp	r6, #9
 801985a:	d807      	bhi.n	801986c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x674>
 801985c:	f107 5700 	add.w	r7, r7, #536870912	; 0x20000000
 8019860:	f46f 6ac8 	mvn.w	sl, #1600	; 0x640
 8019864:	4457      	add	r7, sl
 8019866:	f8dc 6010 	ldr.w	r6, [ip, #16]
 801986a:	e7d5      	b.n	8019818 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x620>
 801986c:	f46f 68ce 	mvn.w	r8, #1648	; 0x670
 8019870:	eb07 0608 	add.w	r6, r7, r8
 8019874:	2e62      	cmp	r6, #98	; 0x62
 8019876:	d81d      	bhi.n	80198b4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6bc>
 8019878:	f8bc 601e 	ldrh.w	r6, [ip, #30]
 801987c:	2e00      	cmp	r6, #0
 801987e:	d0cd      	beq.n	801981c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x624>
 8019880:	f8dc 4014 	ldr.w	r4, [ip, #20]
 8019884:	9405      	str	r4, [sp, #20]
 8019886:	f04f 0800 	mov.w	r8, #0
 801988a:	eb06 0e08 	add.w	lr, r6, r8
 801988e:	240a      	movs	r4, #10
 8019890:	ea4f 0e6e 	mov.w	lr, lr, asr #1
 8019894:	fb04 fa0e 	mul.w	sl, r4, lr
 8019898:	9c05      	ldr	r4, [sp, #20]
 801989a:	4454      	add	r4, sl
 801989c:	9407      	str	r4, [sp, #28]
 801989e:	9c05      	ldr	r4, [sp, #20]
 80198a0:	f834 a00a 	ldrh.w	sl, [r4, sl]
 80198a4:	45ba      	cmp	sl, r7
 80198a6:	d207      	bcs.n	80198b8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6c0>
 80198a8:	f10e 0801 	add.w	r8, lr, #1
 80198ac:	e000      	b.n	80198b0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6b8>
 80198ae:	4676      	mov	r6, lr
 80198b0:	45b0      	cmp	r8, r6
 80198b2:	dbea      	blt.n	801988a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x692>
 80198b4:	2600      	movs	r6, #0
 80198b6:	e7b1      	b.n	801981c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x624>
 80198b8:	d8f9      	bhi.n	80198ae <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6b6>
 80198ba:	9e07      	ldr	r6, [sp, #28]
 80198bc:	3602      	adds	r6, #2
 80198be:	e7ad      	b.n	801981c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x624>
 80198c0:	00f67e7f 	.word	0x00f67e7f
 80198c4:	f1b9 0f03 	cmp.w	r9, #3
 80198c8:	f040 80be 	bne.w	8019a48 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x850>
 80198cc:	884d      	ldrh	r5, [r1, #2]
 80198ce:	2d00      	cmp	r5, #0
 80198d0:	f000 80ba 	beq.w	8019a48 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x850>
 80198d4:	f240 6544 	movw	r5, #1604	; 0x644
 80198d8:	42ab      	cmp	r3, r5
 80198da:	f040 80b5 	bne.w	8019a48 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x850>
 80198de:	2401      	movs	r4, #1
 80198e0:	9403      	str	r4, [sp, #12]
 80198e2:	884d      	ldrh	r5, [r1, #2]
 80198e4:	2d00      	cmp	r5, #0
 80198e6:	f000 8093 	beq.w	8019a10 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x818>
 80198ea:	f04f 0901 	mov.w	r9, #1
 80198ee:	e0de      	b.n	8019aae <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8b6>
 80198f0:	f46f 65c8 	mvn.w	r5, #1600	; 0x640
 80198f4:	195d      	adds	r5, r3, r5
 80198f6:	b2ad      	uxth	r5, r5
 80198f8:	2d09      	cmp	r5, #9
 80198fa:	d807      	bhi.n	801990c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x714>
 80198fc:	f103 5500 	add.w	r5, r3, #536870912	; 0x20000000
 8019900:	f46f 64c8 	mvn.w	r4, #1600	; 0x640
 8019904:	4425      	add	r5, r4
 8019906:	f8dc 6010 	ldr.w	r6, [ip, #16]
 801990a:	e0ae      	b.n	8019a6a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x872>
 801990c:	f46f 6ace 	mvn.w	sl, #1648	; 0x670
 8019910:	eb03 050a 	add.w	r5, r3, sl
 8019914:	b2ad      	uxth	r5, r5
 8019916:	2d62      	cmp	r5, #98	; 0x62
 8019918:	d81b      	bhi.n	8019952 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x75a>
 801991a:	f8bc 801e 	ldrh.w	r8, [ip, #30]
 801991e:	f1b8 0f00 	cmp.w	r8, #0
 8019922:	f000 80a4 	beq.w	8019a6e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x876>
 8019926:	f8dc 7014 	ldr.w	r7, [ip, #20]
 801992a:	2600      	movs	r6, #0
 801992c:	46c4      	mov	ip, r8
 801992e:	f04f 0a0a 	mov.w	sl, #10
 8019932:	eb0c 0506 	add.w	r5, ip, r6
 8019936:	106d      	asrs	r5, r5, #1
 8019938:	fb0a fe05 	mul.w	lr, sl, r5
 801993c:	eb07 080e 	add.w	r8, r7, lr
 8019940:	f837 e00e 	ldrh.w	lr, [r7, lr]
 8019944:	459e      	cmp	lr, r3
 8019946:	d207      	bcs.n	8019958 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x760>
 8019948:	1c6e      	adds	r6, r5, #1
 801994a:	e000      	b.n	801994e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x756>
 801994c:	46ac      	mov	ip, r5
 801994e:	4566      	cmp	r6, ip
 8019950:	dbef      	blt.n	8019932 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x73a>
 8019952:	f04f 0800 	mov.w	r8, #0
 8019956:	e08a      	b.n	8019a6e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x876>
 8019958:	d8f8      	bhi.n	801994c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x754>
 801995a:	f108 0802 	add.w	r8, r8, #2
 801995e:	e086      	b.n	8019a6e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x876>
 8019960:	6c86      	ldr	r6, [r0, #72]	; 0x48
 8019962:	b18e      	cbz	r6, 8019988 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x790>
 8019964:	f46f 68c4 	mvn.w	r8, #1568	; 0x620
 8019968:	eb03 0508 	add.w	r5, r3, r8
 801996c:	b2ad      	uxth	r5, r5
 801996e:	2d19      	cmp	r5, #25
 8019970:	d812      	bhi.n	8019998 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7a0>
 8019972:	f103 5100 	add.w	r1, r3, #536870912	; 0x20000000
 8019976:	f46f 6cc4 	mvn.w	ip, #1568	; 0x620
 801997a:	68f5      	ldr	r5, [r6, #12]
 801997c:	4461      	add	r1, ip
 801997e:	eb05 01c1 	add.w	r1, r5, r1, lsl #3
 8019982:	2900      	cmp	r1, #0
 8019984:	f040 808c 	bne.w	8019aa0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8a8>
 8019988:	f5b3 6fc8 	cmp.w	r3, #1600	; 0x640
 801998c:	f47f ada0 	bne.w	80194d0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8019990:	2200      	movs	r2, #0
 8019992:	f880 2060 	strb.w	r2, [r0, #96]	; 0x60
 8019996:	e59b      	b.n	80194d0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8019998:	f46f 67c8 	mvn.w	r7, #1600	; 0x640
 801999c:	19dd      	adds	r5, r3, r7
 801999e:	b2ad      	uxth	r5, r5
 80199a0:	2d09      	cmp	r5, #9
 80199a2:	d806      	bhi.n	80199b2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7ba>
 80199a4:	f46f 65c8 	mvn.w	r5, #1600	; 0x640
 80199a8:	f103 5100 	add.w	r1, r3, #536870912	; 0x20000000
 80199ac:	4429      	add	r1, r5
 80199ae:	6935      	ldr	r5, [r6, #16]
 80199b0:	e7e5      	b.n	801997e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x786>
 80199b2:	f46f 64ce 	mvn.w	r4, #1648	; 0x670
 80199b6:	191d      	adds	r5, r3, r4
 80199b8:	b2ad      	uxth	r5, r5
 80199ba:	2d62      	cmp	r5, #98	; 0x62
 80199bc:	d8e4      	bhi.n	8019988 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x790>
 80199be:	8bf5      	ldrh	r5, [r6, #30]
 80199c0:	2d00      	cmp	r5, #0
 80199c2:	d0e1      	beq.n	8019988 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x790>
 80199c4:	6977      	ldr	r7, [r6, #20]
 80199c6:	f04f 080a 	mov.w	r8, #10
 80199ca:	186e      	adds	r6, r5, r1
 80199cc:	1076      	asrs	r6, r6, #1
 80199ce:	fb08 fc06 	mul.w	ip, r8, r6
 80199d2:	eb07 0e0c 	add.w	lr, r7, ip
 80199d6:	f837 c00c 	ldrh.w	ip, [r7, ip]
 80199da:	459c      	cmp	ip, r3
 80199dc:	d205      	bcs.n	80199ea <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7f2>
 80199de:	1c71      	adds	r1, r6, #1
 80199e0:	e000      	b.n	80199e4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7ec>
 80199e2:	4635      	mov	r5, r6
 80199e4:	428d      	cmp	r5, r1
 80199e6:	dcf0      	bgt.n	80199ca <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7d2>
 80199e8:	e7ce      	b.n	8019988 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x790>
 80199ea:	d8fa      	bhi.n	80199e2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7ea>
 80199ec:	f10e 0102 	add.w	r1, lr, #2
 80199f0:	e056      	b.n	8019aa0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8a8>
 80199f2:	f1b9 0f03 	cmp.w	r9, #3
 80199f6:	d104      	bne.n	8019a02 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x80a>
 80199f8:	88cd      	ldrh	r5, [r1, #6]
 80199fa:	2d00      	cmp	r5, #0
 80199fc:	f43f af6f 	beq.w	80198de <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6e6>
 8019a00:	e055      	b.n	8019aae <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8b6>
 8019a02:	f1b9 0f01 	cmp.w	r9, #1
 8019a06:	f43f af6c 	beq.w	80198e2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6ea>
 8019a0a:	f1b9 0f00 	cmp.w	r9, #0
 8019a0e:	d14e      	bne.n	8019aae <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8b6>
 8019a10:	880d      	ldrh	r5, [r1, #0]
 8019a12:	b935      	cbnz	r5, 8019a22 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x82a>
 8019a14:	884d      	ldrh	r5, [r1, #2]
 8019a16:	f115 0900 	adds.w	r9, r5, #0
 8019a1a:	bf18      	it	ne
 8019a1c:	f04f 0901 	movne.w	r9, #1
 8019a20:	e045      	b.n	8019aae <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8b6>
 8019a22:	f04f 0900 	mov.w	r9, #0
 8019a26:	e042      	b.n	8019aae <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8b6>
 8019a28:	233e      	movs	r3, #62	; 0x3e
 8019a2a:	e551      	b.n	80194d0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8019a2c:	233c      	movs	r3, #60	; 0x3c
 8019a2e:	e54f      	b.n	80194d0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8019a30:	2329      	movs	r3, #41	; 0x29
 8019a32:	e54d      	b.n	80194d0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8019a34:	2328      	movs	r3, #40	; 0x28
 8019a36:	e54b      	b.n	80194d0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8019a38:	235d      	movs	r3, #93	; 0x5d
 8019a3a:	e549      	b.n	80194d0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8019a3c:	235b      	movs	r3, #91	; 0x5b
 8019a3e:	e547      	b.n	80194d0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8019a40:	237d      	movs	r3, #125	; 0x7d
 8019a42:	e545      	b.n	80194d0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8019a44:	237b      	movs	r3, #123	; 0x7b
 8019a46:	e543      	b.n	80194d0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8019a48:	f1bc 0f00 	cmp.w	ip, #0
 8019a4c:	d081      	beq.n	8019952 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x75a>
 8019a4e:	f46f 67c4 	mvn.w	r7, #1568	; 0x620
 8019a52:	19dd      	adds	r5, r3, r7
 8019a54:	b2ad      	uxth	r5, r5
 8019a56:	2d19      	cmp	r5, #25
 8019a58:	f63f af4a 	bhi.w	80198f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6f8>
 8019a5c:	f46f 66c4 	mvn.w	r6, #1568	; 0x620
 8019a60:	f103 5500 	add.w	r5, r3, #536870912	; 0x20000000
 8019a64:	4435      	add	r5, r6
 8019a66:	f8dc 600c 	ldr.w	r6, [ip, #12]
 8019a6a:	eb06 08c5 	add.w	r8, r6, r5, lsl #3
 8019a6e:	9c04      	ldr	r4, [sp, #16]
 8019a70:	8c65      	ldrh	r5, [r4, #34]	; 0x22
 8019a72:	f2a5 6522 	subw	r5, r5, #1570	; 0x622
 8019a76:	b2ad      	uxth	r5, r5
 8019a78:	2db1      	cmp	r5, #177	; 0xb1
 8019a7a:	bf8c      	ite	hi
 8019a7c:	2600      	movhi	r6, #0
 8019a7e:	2602      	movls	r6, #2
 8019a80:	f1b8 0f00 	cmp.w	r8, #0
 8019a84:	d00c      	beq.n	8019aa0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8a8>
 8019a86:	9c06      	ldr	r4, [sp, #24]
 8019a88:	4426      	add	r6, r4
 8019a8a:	f838 7016 	ldrh.w	r7, [r8, r6, lsl #1]
 8019a8e:	b13f      	cbz	r7, 8019aa0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8a8>
 8019a90:	2db1      	cmp	r5, #177	; 0xb1
 8019a92:	bf94      	ite	ls
 8019a94:	2200      	movls	r2, #0
 8019a96:	2201      	movhi	r2, #1
 8019a98:	9203      	str	r2, [sp, #12]
 8019a9a:	46b1      	mov	r9, r6
 8019a9c:	4641      	mov	r1, r8
 8019a9e:	2200      	movs	r2, #0
 8019aa0:	f1b9 0f02 	cmp.w	r9, #2
 8019aa4:	d1a5      	bne.n	80199f2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7fa>
 8019aa6:	888d      	ldrh	r5, [r1, #4]
 8019aa8:	2d00      	cmp	r5, #0
 8019aaa:	f43f aecf 	beq.w	801984c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x654>
 8019aae:	eb01 0549 	add.w	r5, r1, r9, lsl #1
 8019ab2:	f831 1019 	ldrh.w	r1, [r1, r9, lsl #1]
 8019ab6:	2900      	cmp	r1, #0
 8019ab8:	f43f ad0a 	beq.w	80194d0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8019abc:	9b03      	ldr	r3, [sp, #12]
 8019abe:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 8019ac2:	9b02      	ldr	r3, [sp, #8]
 8019ac4:	b292      	uxth	r2, r2
 8019ac6:	1a9b      	subs	r3, r3, r2
 8019ac8:	445a      	add	r2, fp
 8019aca:	b292      	uxth	r2, r2
 8019acc:	8703      	strh	r3, [r0, #56]	; 0x38
 8019ace:	2a09      	cmp	r2, #9
 8019ad0:	9b01      	ldr	r3, [sp, #4]
 8019ad2:	bf88      	it	hi
 8019ad4:	3a0a      	subhi	r2, #10
 8019ad6:	86c2      	strh	r2, [r0, #54]	; 0x36
 8019ad8:	b14b      	cbz	r3, 8019aee <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8f6>
 8019ada:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8019adc:	3301      	adds	r3, #1
 8019ade:	b29b      	uxth	r3, r3
 8019ae0:	2b0a      	cmp	r3, #10
 8019ae2:	bf28      	it	cs
 8019ae4:	2300      	movcs	r3, #0
 8019ae6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019aea:	9b01      	ldr	r3, [sp, #4]
 8019aec:	8443      	strh	r3, [r0, #34]	; 0x22
 8019aee:	882b      	ldrh	r3, [r5, #0]
 8019af0:	e4ee      	b.n	80194d0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8019af2:	9a01      	ldr	r2, [sp, #4]
 8019af4:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8019af8:	00d2      	lsls	r2, r2, #3
 8019afa:	2b20      	cmp	r3, #32
 8019afc:	b292      	uxth	r2, r2
 8019afe:	f47f ad1e 	bne.w	801953e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x346>
 8019b02:	f5a2 5240 	sub.w	r2, r2, #12288	; 0x3000
 8019b06:	3a30      	subs	r2, #48	; 0x30
 8019b08:	b292      	uxth	r2, r2
 8019b0a:	f240 6152 	movw	r1, #1618	; 0x652
 8019b0e:	e52d      	b.n	801956c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x374>

08019b10 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8019b10:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019b12:	4605      	mov	r5, r0
 8019b14:	4608      	mov	r0, r1
 8019b16:	b1e9      	cbz	r1, 8019b54 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8019b18:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8019b1c:	460b      	mov	r3, r1
 8019b1e:	f101 0708 	add.w	r7, r1, #8
 8019b22:	4622      	mov	r2, r4
 8019b24:	6818      	ldr	r0, [r3, #0]
 8019b26:	6859      	ldr	r1, [r3, #4]
 8019b28:	4626      	mov	r6, r4
 8019b2a:	c603      	stmia	r6!, {r0, r1}
 8019b2c:	3308      	adds	r3, #8
 8019b2e:	42bb      	cmp	r3, r7
 8019b30:	4634      	mov	r4, r6
 8019b32:	d1f7      	bne.n	8019b24 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8019b34:	6818      	ldr	r0, [r3, #0]
 8019b36:	6030      	str	r0, [r6, #0]
 8019b38:	889b      	ldrh	r3, [r3, #4]
 8019b3a:	80b3      	strh	r3, [r6, #4]
 8019b3c:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8019b40:	015b      	lsls	r3, r3, #5
 8019b42:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8019b46:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8019b4a:	430b      	orrs	r3, r1
 8019b4c:	425b      	negs	r3, r3
 8019b4e:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8019b52:	4610      	mov	r0, r2
 8019b54:	bdf0      	pop	{r4, r5, r6, r7, pc}

08019b56 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8019b56:	b538      	push	{r3, r4, r5, lr}
 8019b58:	460c      	mov	r4, r1
 8019b5a:	6811      	ldr	r1, [r2, #0]
 8019b5c:	4610      	mov	r0, r2
 8019b5e:	68cd      	ldr	r5, [r1, #12]
 8019b60:	4619      	mov	r1, r3
 8019b62:	47a8      	blx	r5
 8019b64:	2800      	cmp	r0, #0
 8019b66:	bf08      	it	eq
 8019b68:	4620      	moveq	r0, r4
 8019b6a:	bd38      	pop	{r3, r4, r5, pc}

08019b6c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8019b6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8019b6e:	4604      	mov	r4, r0
 8019b70:	4615      	mov	r5, r2
 8019b72:	4608      	mov	r0, r1
 8019b74:	b93a      	cbnz	r2, 8019b86 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8019b76:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8019b7a:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8019b7e:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8019b82:	4628      	mov	r0, r5
 8019b84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8019b86:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8019b8a:	8893      	ldrh	r3, [r2, #4]
 8019b8c:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8019b90:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8019b94:	79ee      	ldrb	r6, [r5, #7]
 8019b96:	4316      	orrs	r6, r2
 8019b98:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 8019b9c:	189a      	adds	r2, r3, r2
 8019b9e:	b291      	uxth	r1, r2
 8019ba0:	291d      	cmp	r1, #29
 8019ba2:	b2b7      	uxth	r7, r6
 8019ba4:	f200 8083 	bhi.w	8019cae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 8019ba8:	2201      	movs	r2, #1
 8019baa:	408a      	lsls	r2, r1
 8019bac:	4978      	ldr	r1, [pc, #480]	; (8019d90 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 8019bae:	420a      	tst	r2, r1
 8019bb0:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8019bb4:	d12d      	bne.n	8019c12 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 8019bb6:	f412 7f60 	tst.w	r2, #896	; 0x380
 8019bba:	d078      	beq.n	8019cae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 8019bbc:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8019bc0:	462b      	mov	r3, r5
 8019bc2:	f105 0e08 	add.w	lr, r5, #8
 8019bc6:	4615      	mov	r5, r2
 8019bc8:	6818      	ldr	r0, [r3, #0]
 8019bca:	6859      	ldr	r1, [r3, #4]
 8019bcc:	4694      	mov	ip, r2
 8019bce:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8019bd2:	3308      	adds	r3, #8
 8019bd4:	4573      	cmp	r3, lr
 8019bd6:	4662      	mov	r2, ip
 8019bd8:	d1f6      	bne.n	8019bc8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 8019bda:	6818      	ldr	r0, [r3, #0]
 8019bdc:	f8cc 0000 	str.w	r0, [ip]
 8019be0:	889b      	ldrh	r3, [r3, #4]
 8019be2:	f8ac 3004 	strh.w	r3, [ip, #4]
 8019be6:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8019bea:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8019bee:	b2b3      	uxth	r3, r6
 8019bf0:	1aca      	subs	r2, r1, r3
 8019bf2:	b292      	uxth	r2, r2
 8019bf4:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8019bf8:	10d2      	asrs	r2, r2, #3
 8019bfa:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8019bfe:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8019c02:	4302      	orrs	r2, r0
 8019c04:	1bcf      	subs	r7, r1, r7
 8019c06:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8019c0a:	1afb      	subs	r3, r7, r3
 8019c0c:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8019c10:	e7b7      	b.n	8019b82 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8019c12:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8019c14:	b92b      	cbnz	r3, 8019c22 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 8019c16:	4b5f      	ldr	r3, [pc, #380]	; (8019d94 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 8019c18:	4a5f      	ldr	r2, [pc, #380]	; (8019d98 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 8019c1a:	4860      	ldr	r0, [pc, #384]	; (8019d9c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 8019c1c:	21c0      	movs	r1, #192	; 0xc0
 8019c1e:	f00d fdaf 	bl	8027780 <__assert_func>
 8019c22:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8019c24:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8019c28:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8019c2a:	f640 6333 	movw	r3, #3635	; 0xe33
 8019c2e:	4299      	cmp	r1, r3
 8019c30:	d110      	bne.n	8019c54 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 8019c32:	6803      	ldr	r3, [r0, #0]
 8019c34:	68db      	ldr	r3, [r3, #12]
 8019c36:	4798      	blx	r3
 8019c38:	7b41      	ldrb	r1, [r0, #13]
 8019c3a:	00cb      	lsls	r3, r1, #3
 8019c3c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8019c40:	7a03      	ldrb	r3, [r0, #8]
 8019c42:	0648      	lsls	r0, r1, #25
 8019c44:	ea43 0302 	orr.w	r3, r3, r2
 8019c48:	bf44      	itt	mi
 8019c4a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019c4e:	b21b      	sxthmi	r3, r3
 8019c50:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8019c54:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8019c58:	443b      	add	r3, r7
 8019c5a:	4433      	add	r3, r6
 8019c5c:	b29b      	uxth	r3, r3
 8019c5e:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8019c62:	462a      	mov	r2, r5
 8019c64:	f105 0c08 	add.w	ip, r5, #8
 8019c68:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8019c6c:	4635      	mov	r5, r6
 8019c6e:	6810      	ldr	r0, [r2, #0]
 8019c70:	6851      	ldr	r1, [r2, #4]
 8019c72:	4637      	mov	r7, r6
 8019c74:	c703      	stmia	r7!, {r0, r1}
 8019c76:	3208      	adds	r2, #8
 8019c78:	4562      	cmp	r2, ip
 8019c7a:	463e      	mov	r6, r7
 8019c7c:	d1f7      	bne.n	8019c6e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 8019c7e:	6810      	ldr	r0, [r2, #0]
 8019c80:	6038      	str	r0, [r7, #0]
 8019c82:	8892      	ldrh	r2, [r2, #4]
 8019c84:	80ba      	strh	r2, [r7, #4]
 8019c86:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8019c8a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8019c8e:	10db      	asrs	r3, r3, #3
 8019c90:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8019c94:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8019c98:	4313      	orrs	r3, r2
 8019c9a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8019c9e:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8019ca2:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8019ca6:	1a9b      	subs	r3, r3, r2
 8019ca8:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8019cac:	e769      	b.n	8019b82 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8019cae:	f023 0204 	bic.w	r2, r3, #4
 8019cb2:	f640 611b 	movw	r1, #3611	; 0xe1b
 8019cb6:	428a      	cmp	r2, r1
 8019cb8:	d003      	beq.n	8019cc2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 8019cba:	f640 621d 	movw	r2, #3613	; 0xe1d
 8019cbe:	4293      	cmp	r3, r2
 8019cc0:	d120      	bne.n	8019d04 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 8019cc2:	3b01      	subs	r3, #1
 8019cc4:	4602      	mov	r2, r0
 8019cc6:	b29b      	uxth	r3, r3
 8019cc8:	4629      	mov	r1, r5
 8019cca:	4620      	mov	r0, r4
 8019ccc:	f7ff ff43 	bl	8019b56 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8019cd0:	7b41      	ldrb	r1, [r0, #13]
 8019cd2:	00cb      	lsls	r3, r1, #3
 8019cd4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8019cd8:	7a03      	ldrb	r3, [r0, #8]
 8019cda:	0649      	lsls	r1, r1, #25
 8019cdc:	ea43 0302 	orr.w	r3, r3, r2
 8019ce0:	bf44      	itt	mi
 8019ce2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019ce6:	b21b      	sxthmi	r3, r3
 8019ce8:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8019cec:	7b6b      	ldrb	r3, [r5, #13]
 8019cee:	7aaa      	ldrb	r2, [r5, #10]
 8019cf0:	005b      	lsls	r3, r3, #1
 8019cf2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8019cf6:	4313      	orrs	r3, r2
 8019cf8:	115a      	asrs	r2, r3, #5
 8019cfa:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8019cfe:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8019d02:	e036      	b.n	8019d72 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 8019d04:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8019d08:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8019d0c:	7a2a      	ldrb	r2, [r5, #8]
 8019d0e:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8019d12:	ea42 0201 	orr.w	r2, r2, r1
 8019d16:	bf1c      	itt	ne
 8019d18:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8019d1c:	b212      	sxthne	r2, r2
 8019d1e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8019d22:	f640 6109 	movw	r1, #3593	; 0xe09
 8019d26:	f023 0210 	bic.w	r2, r3, #16
 8019d2a:	428a      	cmp	r2, r1
 8019d2c:	d003      	beq.n	8019d36 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 8019d2e:	f640 6213 	movw	r2, #3603	; 0xe13
 8019d32:	4293      	cmp	r3, r2
 8019d34:	d12a      	bne.n	8019d8c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 8019d36:	7b6e      	ldrb	r6, [r5, #13]
 8019d38:	0076      	lsls	r6, r6, #1
 8019d3a:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8019d3e:	7aae      	ldrb	r6, [r5, #10]
 8019d40:	4316      	orrs	r6, r2
 8019d42:	f640 6213 	movw	r2, #3603	; 0xe13
 8019d46:	4293      	cmp	r3, r2
 8019d48:	bf18      	it	ne
 8019d4a:	f103 33ff 	addne.w	r3, r3, #4294967295
 8019d4e:	4602      	mov	r2, r0
 8019d50:	bf14      	ite	ne
 8019d52:	b29b      	uxthne	r3, r3
 8019d54:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8019d58:	4629      	mov	r1, r5
 8019d5a:	4620      	mov	r0, r4
 8019d5c:	f7ff fefb 	bl	8019b56 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8019d60:	7b43      	ldrb	r3, [r0, #13]
 8019d62:	7a82      	ldrb	r2, [r0, #10]
 8019d64:	005b      	lsls	r3, r3, #1
 8019d66:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8019d6a:	4313      	orrs	r3, r2
 8019d6c:	1af6      	subs	r6, r6, r3
 8019d6e:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8019d72:	7b69      	ldrb	r1, [r5, #13]
 8019d74:	00cb      	lsls	r3, r1, #3
 8019d76:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8019d7a:	7a2b      	ldrb	r3, [r5, #8]
 8019d7c:	4313      	orrs	r3, r2
 8019d7e:	064a      	lsls	r2, r1, #25
 8019d80:	bf44      	itt	mi
 8019d82:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019d86:	b21b      	sxthmi	r3, r3
 8019d88:	1bdb      	subs	r3, r3, r7
 8019d8a:	e73f      	b.n	8019c0c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 8019d8c:	2300      	movs	r3, #0
 8019d8e:	e7b6      	b.n	8019cfe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 8019d90:	3fc00079 	.word	0x3fc00079
 8019d94:	0802a468 	.word	0x0802a468
 8019d98:	0802cc0b 	.word	0x0802cc0b
 8019d9c:	0802a53a 	.word	0x0802a53a

08019da0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8019da0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8019da4:	4604      	mov	r4, r0
 8019da6:	b942      	cbnz	r2, 8019dba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8019da8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8019dac:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8019db0:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8019db4:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8019db8:	e046      	b.n	8019e48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 8019dba:	7b51      	ldrb	r1, [r2, #13]
 8019dbc:	8893      	ldrh	r3, [r2, #4]
 8019dbe:	010f      	lsls	r7, r1, #4
 8019dc0:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8019dc4:	79d7      	ldrb	r7, [r2, #7]
 8019dc6:	4307      	orrs	r7, r0
 8019dc8:	2f04      	cmp	r7, #4
 8019dca:	b2bd      	uxth	r5, r7
 8019dcc:	bfcc      	ite	gt
 8019dce:	08bf      	lsrgt	r7, r7, #2
 8019dd0:	2701      	movle	r7, #1
 8019dd2:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8019dd6:	f200 80ab 	bhi.w	8019f30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 8019dda:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8019dde:	4283      	cmp	r3, r0
 8019de0:	d216      	bcs.n	8019e10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8019de2:	f240 605b 	movw	r0, #1627	; 0x65b
 8019de6:	4283      	cmp	r3, r0
 8019de8:	d859      	bhi.n	8019e9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 8019dea:	f240 6057 	movw	r0, #1623	; 0x657
 8019dee:	4283      	cmp	r3, r0
 8019df0:	d20e      	bcs.n	8019e10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8019df2:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8019df6:	d24a      	bcs.n	8019e8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 8019df8:	f240 604e 	movw	r0, #1614	; 0x64e
 8019dfc:	4283      	cmp	r3, r0
 8019dfe:	d207      	bcs.n	8019e10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8019e00:	f240 601a 	movw	r0, #1562	; 0x61a
 8019e04:	4283      	cmp	r3, r0
 8019e06:	d02a      	beq.n	8019e5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8019e08:	d821      	bhi.n	8019e4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 8019e0a:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8019e0e:	d35b      	bcc.n	8019ec8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8019e10:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8019e14:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8019e18:	f040 80d0 	bne.w	8019fbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 8019e1c:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8019e20:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8019e24:	f040 80ca 	bne.w	8019fbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 8019e28:	00cb      	lsls	r3, r1, #3
 8019e2a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8019e2e:	7a13      	ldrb	r3, [r2, #8]
 8019e30:	0649      	lsls	r1, r1, #25
 8019e32:	ea43 0300 	orr.w	r3, r3, r0
 8019e36:	bf44      	itt	mi
 8019e38:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019e3c:	b21b      	sxthmi	r3, r3
 8019e3e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8019e42:	1b5d      	subs	r5, r3, r5
 8019e44:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8019e48:	4610      	mov	r0, r2
 8019e4a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019e4e:	f240 604b 	movw	r0, #1611	; 0x64b
 8019e52:	4283      	cmp	r3, r0
 8019e54:	d338      	bcc.n	8019ec8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8019e56:	f240 604c 	movw	r0, #1612	; 0x64c
 8019e5a:	4283      	cmp	r3, r0
 8019e5c:	d9d8      	bls.n	8019e10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8019e5e:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8019e62:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8019e66:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8019e6a:	f040 80f1 	bne.w	801a050 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 8019e6e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8019e72:	f040 80ed 	bne.w	801a050 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 8019e76:	00cb      	lsls	r3, r1, #3
 8019e78:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8019e7c:	7a13      	ldrb	r3, [r2, #8]
 8019e7e:	064e      	lsls	r6, r1, #25
 8019e80:	ea43 0300 	orr.w	r3, r3, r0
 8019e84:	bf44      	itt	mi
 8019e86:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019e8a:	b21b      	sxthmi	r3, r3
 8019e8c:	e7d9      	b.n	8019e42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 8019e8e:	f240 6054 	movw	r0, #1620	; 0x654
 8019e92:	4283      	cmp	r3, r0
 8019e94:	d8e3      	bhi.n	8019e5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8019e96:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8019e9a:	d9e0      	bls.n	8019e5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8019e9c:	e7b8      	b.n	8019e10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8019e9e:	f240 6074 	movw	r0, #1652	; 0x674
 8019ea2:	4283      	cmp	r3, r0
 8019ea4:	d0b4      	beq.n	8019e10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8019ea6:	d82d      	bhi.n	8019f04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 8019ea8:	f240 605e 	movw	r0, #1630	; 0x65e
 8019eac:	4283      	cmp	r3, r0
 8019eae:	d804      	bhi.n	8019eba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 8019eb0:	f240 605d 	movw	r0, #1629	; 0x65d
 8019eb4:	4283      	cmp	r3, r0
 8019eb6:	d3d2      	bcc.n	8019e5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8019eb8:	e7aa      	b.n	8019e10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8019eba:	f240 605f 	movw	r0, #1631	; 0x65f
 8019ebe:	4283      	cmp	r3, r0
 8019ec0:	d0cd      	beq.n	8019e5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8019ec2:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8019ec6:	d0a3      	beq.n	8019e10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8019ec8:	00cb      	lsls	r3, r1, #3
 8019eca:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8019ece:	7a13      	ldrb	r3, [r2, #8]
 8019ed0:	0649      	lsls	r1, r1, #25
 8019ed2:	ea43 0300 	orr.w	r3, r3, r0
 8019ed6:	bf44      	itt	mi
 8019ed8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019edc:	b21b      	sxthmi	r3, r3
 8019ede:	1b5d      	subs	r5, r3, r5
 8019ee0:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8019ee4:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8019ee8:	7b53      	ldrb	r3, [r2, #13]
 8019eea:	015b      	lsls	r3, r3, #5
 8019eec:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8019ef0:	7993      	ldrb	r3, [r2, #6]
 8019ef2:	430b      	orrs	r3, r1
 8019ef4:	005b      	lsls	r3, r3, #1
 8019ef6:	2105      	movs	r1, #5
 8019ef8:	fb93 f3f1 	sdiv	r3, r3, r1
 8019efc:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8019f00:	440b      	add	r3, r1
 8019f02:	e757      	b.n	8019db4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8019f04:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8019f08:	4283      	cmp	r3, r0
 8019f0a:	d809      	bhi.n	8019f20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 8019f0c:	f240 60df 	movw	r0, #1759	; 0x6df
 8019f10:	4283      	cmp	r3, r0
 8019f12:	f4bf af7d 	bcs.w	8019e10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8019f16:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8019f1a:	2b05      	cmp	r3, #5
 8019f1c:	d8d4      	bhi.n	8019ec8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8019f1e:	e777      	b.n	8019e10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8019f20:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8019f24:	4283      	cmp	r3, r0
 8019f26:	d09a      	beq.n	8019e5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8019f28:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8019f2c:	4283      	cmp	r3, r0
 8019f2e:	e7ca      	b.n	8019ec6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 8019f30:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8019f34:	d22b      	bcs.n	8019f8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 8019f36:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8019f3a:	4283      	cmp	r3, r0
 8019f3c:	d28f      	bcs.n	8019e5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8019f3e:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8019f42:	4283      	cmp	r3, r0
 8019f44:	d816      	bhi.n	8019f74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 8019f46:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8019f4a:	4283      	cmp	r3, r0
 8019f4c:	f4bf af60 	bcs.w	8019e10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8019f50:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8019f54:	4283      	cmp	r3, r0
 8019f56:	d80a      	bhi.n	8019f6e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 8019f58:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8019f5c:	4283      	cmp	r3, r0
 8019f5e:	f4bf af57 	bcs.w	8019e10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8019f62:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8019f66:	4283      	cmp	r3, r0
 8019f68:	f43f af79 	beq.w	8019e5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8019f6c:	e7ac      	b.n	8019ec8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8019f6e:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8019f72:	e7f8      	b.n	8019f66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 8019f74:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8019f78:	4283      	cmp	r3, r0
 8019f7a:	d802      	bhi.n	8019f82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 8019f7c:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8019f80:	e798      	b.n	8019eb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 8019f82:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8019f86:	4283      	cmp	r3, r0
 8019f88:	f47f af42 	bne.w	8019e10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8019f8c:	e767      	b.n	8019e5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8019f8e:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8019f92:	4283      	cmp	r3, r0
 8019f94:	f43f af63 	beq.w	8019e5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8019f98:	d802      	bhi.n	8019fa0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 8019f9a:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8019f9e:	e7f2      	b.n	8019f86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 8019fa0:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8019fa4:	4283      	cmp	r3, r0
 8019fa6:	d805      	bhi.n	8019fb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 8019fa8:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8019fac:	4283      	cmp	r3, r0
 8019fae:	f4ff af2f 	bcc.w	8019e10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8019fb2:	e754      	b.n	8019e5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8019fb4:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8019fb8:	4283      	cmp	r3, r0
 8019fba:	e7af      	b.n	8019f1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 8019fbc:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8019fc0:	4617      	mov	r7, r2
 8019fc2:	f102 0808 	add.w	r8, r2, #8
 8019fc6:	4666      	mov	r6, ip
 8019fc8:	6838      	ldr	r0, [r7, #0]
 8019fca:	6879      	ldr	r1, [r7, #4]
 8019fcc:	46e6      	mov	lr, ip
 8019fce:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8019fd2:	3708      	adds	r7, #8
 8019fd4:	4547      	cmp	r7, r8
 8019fd6:	46f4      	mov	ip, lr
 8019fd8:	d1f6      	bne.n	8019fc8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 8019fda:	6838      	ldr	r0, [r7, #0]
 8019fdc:	f8ce 0000 	str.w	r0, [lr]
 8019fe0:	88b9      	ldrh	r1, [r7, #4]
 8019fe2:	f8ae 1004 	strh.w	r1, [lr, #4]
 8019fe6:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8019fea:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8019fee:	d009      	beq.n	801a004 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 8019ff0:	7b51      	ldrb	r1, [r2, #13]
 8019ff2:	7992      	ldrb	r2, [r2, #6]
 8019ff4:	0149      	lsls	r1, r1, #5
 8019ff6:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8019ffa:	4311      	orrs	r1, r2
 8019ffc:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801a000:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801a004:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801a008:	d00d      	beq.n	801a026 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 801a00a:	442b      	add	r3, r5
 801a00c:	b29b      	uxth	r3, r3
 801a00e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801a012:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801a016:	10db      	asrs	r3, r3, #3
 801a018:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801a01c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801a020:	4313      	orrs	r3, r2
 801a022:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801a026:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801a02a:	00cb      	lsls	r3, r1, #3
 801a02c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801a030:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801a034:	064f      	lsls	r7, r1, #25
 801a036:	ea43 0302 	orr.w	r3, r3, r2
 801a03a:	bf44      	itt	mi
 801a03c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801a040:	b21b      	sxthmi	r3, r3
 801a042:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801a046:	1b5d      	subs	r5, r3, r5
 801a048:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801a04c:	4632      	mov	r2, r6
 801a04e:	e6fb      	b.n	8019e48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 801a050:	f104 0e4c 	add.w	lr, r4, #76	; 0x4c
 801a054:	4694      	mov	ip, r2
 801a056:	f102 0908 	add.w	r9, r2, #8
 801a05a:	4676      	mov	r6, lr
 801a05c:	f8dc 0000 	ldr.w	r0, [ip]
 801a060:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801a064:	46f0      	mov	r8, lr
 801a066:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801a06a:	f10c 0c08 	add.w	ip, ip, #8
 801a06e:	45cc      	cmp	ip, r9
 801a070:	46c6      	mov	lr, r8
 801a072:	d1f3      	bne.n	801a05c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 801a074:	f8dc 0000 	ldr.w	r0, [ip]
 801a078:	f8c8 0000 	str.w	r0, [r8]
 801a07c:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 801a080:	f8a8 1004 	strh.w	r1, [r8, #4]
 801a084:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801a088:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801a08c:	d009      	beq.n	801a0a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 801a08e:	7b51      	ldrb	r1, [r2, #13]
 801a090:	7992      	ldrb	r2, [r2, #6]
 801a092:	0149      	lsls	r1, r1, #5
 801a094:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801a098:	4311      	orrs	r1, r2
 801a09a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801a09e:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801a0a2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801a0a6:	d00d      	beq.n	801a0c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 801a0a8:	1bdb      	subs	r3, r3, r7
 801a0aa:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801a0ae:	b29b      	uxth	r3, r3
 801a0b0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801a0b4:	10db      	asrs	r3, r3, #3
 801a0b6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801a0ba:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801a0be:	4313      	orrs	r3, r2
 801a0c0:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801a0c4:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801a0c8:	00cb      	lsls	r3, r1, #3
 801a0ca:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801a0ce:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801a0d2:	0648      	lsls	r0, r1, #25
 801a0d4:	ea43 0302 	orr.w	r3, r3, r2
 801a0d8:	bf44      	itt	mi
 801a0da:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801a0de:	b21b      	sxthmi	r3, r3
 801a0e0:	e7b1      	b.n	801a046 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

0801a0e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 801a0e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a0e8:	461e      	mov	r6, r3
 801a0ea:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 801a0ec:	4604      	mov	r4, r0
 801a0ee:	4617      	mov	r7, r2
 801a0f0:	b92b      	cbnz	r3, 801a0fe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 801a0f2:	4b25      	ldr	r3, [pc, #148]	; (801a188 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 801a0f4:	4a25      	ldr	r2, [pc, #148]	; (801a18c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 801a0f6:	4826      	ldr	r0, [pc, #152]	; (801a190 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 801a0f8:	21c0      	movs	r1, #192	; 0xc0
 801a0fa:	f00d fb41 	bl	8027780 <__assert_func>
 801a0fe:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801a100:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801a104:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801a108:	f7ee fce2 	bl	8008ad0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801a10c:	4605      	mov	r5, r0
 801a10e:	b918      	cbnz	r0, 801a118 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 801a110:	6030      	str	r0, [r6, #0]
 801a112:	4628      	mov	r0, r5
 801a114:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a118:	683b      	ldr	r3, [r7, #0]
 801a11a:	4601      	mov	r1, r0
 801a11c:	68db      	ldr	r3, [r3, #12]
 801a11e:	4638      	mov	r0, r7
 801a120:	4798      	blx	r3
 801a122:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801a126:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801a12a:	4602      	mov	r2, r0
 801a12c:	6030      	str	r0, [r6, #0]
 801a12e:	d213      	bcs.n	801a158 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 801a130:	4643      	mov	r3, r8
 801a132:	4639      	mov	r1, r7
 801a134:	4620      	mov	r0, r4
 801a136:	f7ff fe33 	bl	8019da0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801a13a:	6030      	str	r0, [r6, #0]
 801a13c:	6833      	ldr	r3, [r6, #0]
 801a13e:	b143      	cbz	r3, 801a152 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 801a140:	7b5a      	ldrb	r2, [r3, #13]
 801a142:	7a9b      	ldrb	r3, [r3, #10]
 801a144:	0052      	lsls	r2, r2, #1
 801a146:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801a14a:	4313      	orrs	r3, r2
 801a14c:	bf0c      	ite	eq
 801a14e:	2301      	moveq	r3, #1
 801a150:	2300      	movne	r3, #0
 801a152:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801a156:	e7dc      	b.n	801a112 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 801a158:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801a15c:	b29b      	uxth	r3, r3
 801a15e:	2b7f      	cmp	r3, #127	; 0x7f
 801a160:	d804      	bhi.n	801a16c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 801a162:	4639      	mov	r1, r7
 801a164:	4620      	mov	r0, r4
 801a166:	f7ff fd01 	bl	8019b6c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801a16a:	e7e6      	b.n	801a13a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 801a16c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801a170:	2b00      	cmp	r3, #0
 801a172:	d0e3      	beq.n	801a13c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 801a174:	f640 1302 	movw	r3, #2306	; 0x902
 801a178:	429d      	cmp	r5, r3
 801a17a:	d1df      	bne.n	801a13c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 801a17c:	4601      	mov	r1, r0
 801a17e:	4620      	mov	r0, r4
 801a180:	f7ff fcc6 	bl	8019b10 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801a184:	e7d9      	b.n	801a13a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 801a186:	bf00      	nop
 801a188:	0802a468 	.word	0x0802a468
 801a18c:	0802cc0b 	.word	0x0802cc0b
 801a190:	0802a53a 	.word	0x0802a53a

0801a194 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801a194:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801a198:	461e      	mov	r6, r3
 801a19a:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 801a19c:	4604      	mov	r4, r0
 801a19e:	4617      	mov	r7, r2
 801a1a0:	b92b      	cbnz	r3, 801a1ae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 801a1a2:	4b26      	ldr	r3, [pc, #152]	; (801a23c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 801a1a4:	4a26      	ldr	r2, [pc, #152]	; (801a240 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 801a1a6:	4827      	ldr	r0, [pc, #156]	; (801a244 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 801a1a8:	21c0      	movs	r1, #192	; 0xc0
 801a1aa:	f00d fae9 	bl	8027780 <__assert_func>
 801a1ae:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801a1b0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801a1b4:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801a1b8:	f7ee fc8a 	bl	8008ad0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801a1bc:	4605      	mov	r5, r0
 801a1be:	b918      	cbnz	r0, 801a1c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 801a1c0:	6030      	str	r0, [r6, #0]
 801a1c2:	4628      	mov	r0, r5
 801a1c4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801a1c8:	683b      	ldr	r3, [r7, #0]
 801a1ca:	4601      	mov	r1, r0
 801a1cc:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801a1d0:	4638      	mov	r0, r7
 801a1d2:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801a1d6:	47c8      	blx	r9
 801a1d8:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801a1dc:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801a1e0:	4602      	mov	r2, r0
 801a1e2:	6030      	str	r0, [r6, #0]
 801a1e4:	d213      	bcs.n	801a20e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 801a1e6:	4643      	mov	r3, r8
 801a1e8:	4639      	mov	r1, r7
 801a1ea:	4620      	mov	r0, r4
 801a1ec:	f7ff fdd8 	bl	8019da0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801a1f0:	6030      	str	r0, [r6, #0]
 801a1f2:	6833      	ldr	r3, [r6, #0]
 801a1f4:	b143      	cbz	r3, 801a208 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 801a1f6:	7b5a      	ldrb	r2, [r3, #13]
 801a1f8:	7a9b      	ldrb	r3, [r3, #10]
 801a1fa:	0052      	lsls	r2, r2, #1
 801a1fc:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801a200:	4313      	orrs	r3, r2
 801a202:	bf0c      	ite	eq
 801a204:	2301      	moveq	r3, #1
 801a206:	2300      	movne	r3, #0
 801a208:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801a20c:	e7d9      	b.n	801a1c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 801a20e:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801a212:	b29b      	uxth	r3, r3
 801a214:	2b7f      	cmp	r3, #127	; 0x7f
 801a216:	d804      	bhi.n	801a222 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 801a218:	4639      	mov	r1, r7
 801a21a:	4620      	mov	r0, r4
 801a21c:	f7ff fca6 	bl	8019b6c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801a220:	e7e6      	b.n	801a1f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 801a222:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801a226:	2b00      	cmp	r3, #0
 801a228:	d0e3      	beq.n	801a1f2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 801a22a:	f640 1302 	movw	r3, #2306	; 0x902
 801a22e:	429d      	cmp	r5, r3
 801a230:	d1df      	bne.n	801a1f2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 801a232:	4601      	mov	r1, r0
 801a234:	4620      	mov	r0, r4
 801a236:	f7ff fc6b 	bl	8019b10 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801a23a:	e7d9      	b.n	801a1f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 801a23c:	0802a468 	.word	0x0802a468
 801a240:	0802cc0b 	.word	0x0802cc0b
 801a244:	0802a53a 	.word	0x0802a53a

0801a248 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801a248:	b510      	push	{r4, lr}
 801a24a:	4604      	mov	r4, r0
 801a24c:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801a250:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801a252:	b9d9      	cbnz	r1, 801a28c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x44>
 801a254:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801a256:	2b0a      	cmp	r3, #10
 801a258:	d037      	beq.n	801a2ca <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 801a25a:	4620      	mov	r0, r4
 801a25c:	f7fe ff86 	bl	801916c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801a260:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801a262:	2b09      	cmp	r3, #9
 801a264:	d906      	bls.n	801a274 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2c>
 801a266:	4b19      	ldr	r3, [pc, #100]	; (801a2cc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 801a268:	4a19      	ldr	r2, [pc, #100]	; (801a2d0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 801a26a:	481a      	ldr	r0, [pc, #104]	; (801a2d4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x8c>)
 801a26c:	f44f 7182 	mov.w	r1, #260	; 0x104
 801a270:	f00d fa86 	bl	8027780 <__assert_func>
 801a274:	1c5a      	adds	r2, r3, #1
 801a276:	8722      	strh	r2, [r4, #56]	; 0x38
 801a278:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801a27a:	4413      	add	r3, r2
 801a27c:	b29b      	uxth	r3, r3
 801a27e:	2b09      	cmp	r3, #9
 801a280:	bf88      	it	hi
 801a282:	3b0a      	subhi	r3, #10
 801a284:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801a288:	8458      	strh	r0, [r3, #34]	; 0x22
 801a28a:	e7e3      	b.n	801a254 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xc>
 801a28c:	2b0a      	cmp	r3, #10
 801a28e:	d01c      	beq.n	801a2ca <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 801a290:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801a292:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801a296:	3901      	subs	r1, #1
 801a298:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801a29a:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 801a29e:	1c51      	adds	r1, r2, #1
 801a2a0:	b289      	uxth	r1, r1
 801a2a2:	2901      	cmp	r1, #1
 801a2a4:	bf8a      	itet	hi
 801a2a6:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801a2aa:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801a2ac:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801a2ae:	2b09      	cmp	r3, #9
 801a2b0:	d8d9      	bhi.n	801a266 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1e>
 801a2b2:	1c5a      	adds	r2, r3, #1
 801a2b4:	8722      	strh	r2, [r4, #56]	; 0x38
 801a2b6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801a2b8:	4413      	add	r3, r2
 801a2ba:	b29b      	uxth	r3, r3
 801a2bc:	2b09      	cmp	r3, #9
 801a2be:	bf88      	it	hi
 801a2c0:	3b0a      	subhi	r3, #10
 801a2c2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801a2c6:	8458      	strh	r0, [r3, #34]	; 0x22
 801a2c8:	e7c0      	b.n	801a24c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801a2ca:	bd10      	pop	{r4, pc}
 801a2cc:	0802c9dc 	.word	0x0802c9dc
 801a2d0:	0802cd61 	.word	0x0802cd61
 801a2d4:	0802a53a 	.word	0x0802a53a

0801a2d8 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801a2d8:	b538      	push	{r3, r4, r5, lr}
 801a2da:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801a2dc:	4604      	mov	r4, r0
 801a2de:	b92a      	cbnz	r2, 801a2ec <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 801a2e0:	4b13      	ldr	r3, [pc, #76]	; (801a330 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 801a2e2:	4a14      	ldr	r2, [pc, #80]	; (801a334 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 801a2e4:	4814      	ldr	r0, [pc, #80]	; (801a338 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 801a2e6:	21d5      	movs	r1, #213	; 0xd5
 801a2e8:	f00d fa4a 	bl	8027780 <__assert_func>
 801a2ec:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801a2ee:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 801a2f2:	3a01      	subs	r2, #1
 801a2f4:	8c4d      	ldrh	r5, [r1, #34]	; 0x22
 801a2f6:	8702      	strh	r2, [r0, #56]	; 0x38
 801a2f8:	1c5a      	adds	r2, r3, #1
 801a2fa:	b292      	uxth	r2, r2
 801a2fc:	2a09      	cmp	r2, #9
 801a2fe:	bf86      	itte	hi
 801a300:	3b09      	subhi	r3, #9
 801a302:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801a304:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801a306:	f7ff ff9f 	bl	801a248 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801a30a:	8c23      	ldrh	r3, [r4, #32]
 801a30c:	2b01      	cmp	r3, #1
 801a30e:	bf9c      	itt	ls
 801a310:	3301      	addls	r3, #1
 801a312:	8423      	strhls	r3, [r4, #32]
 801a314:	8be3      	ldrh	r3, [r4, #30]
 801a316:	b90b      	cbnz	r3, 801a31c <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 801a318:	2302      	movs	r3, #2
 801a31a:	83e3      	strh	r3, [r4, #30]
 801a31c:	8be3      	ldrh	r3, [r4, #30]
 801a31e:	3b01      	subs	r3, #1
 801a320:	b29b      	uxth	r3, r3
 801a322:	83e3      	strh	r3, [r4, #30]
 801a324:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a328:	4628      	mov	r0, r5
 801a32a:	8365      	strh	r5, [r4, #26]
 801a32c:	bd38      	pop	{r3, r4, r5, pc}
 801a32e:	bf00      	nop
 801a330:	0802a468 	.word	0x0802a468
 801a334:	0802ccb6 	.word	0x0802ccb6
 801a338:	0802a53a 	.word	0x0802a53a

0801a33c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801a33c:	b538      	push	{r3, r4, r5, lr}
 801a33e:	428a      	cmp	r2, r1
 801a340:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801a342:	d90c      	bls.n	801a35e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 801a344:	b92c      	cbnz	r4, 801a352 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 801a346:	4b1c      	ldr	r3, [pc, #112]	; (801a3b8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 801a348:	4a1c      	ldr	r2, [pc, #112]	; (801a3bc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 801a34a:	21e1      	movs	r1, #225	; 0xe1
 801a34c:	481c      	ldr	r0, [pc, #112]	; (801a3c0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 801a34e:	f00d fa17 	bl	8027780 <__assert_func>
 801a352:	3c01      	subs	r4, #1
 801a354:	8704      	strh	r4, [r0, #56]	; 0x38
 801a356:	4b1b      	ldr	r3, [pc, #108]	; (801a3c4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 801a358:	4a1b      	ldr	r2, [pc, #108]	; (801a3c8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 801a35a:	21c5      	movs	r1, #197	; 0xc5
 801a35c:	e7f6      	b.n	801a34c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 801a35e:	428c      	cmp	r4, r1
 801a360:	d203      	bcs.n	801a36a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 801a362:	4b1a      	ldr	r3, [pc, #104]	; (801a3cc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 801a364:	4a1a      	ldr	r2, [pc, #104]	; (801a3d0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 801a366:	21cb      	movs	r1, #203	; 0xcb
 801a368:	e7f0      	b.n	801a34c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 801a36a:	1a64      	subs	r4, r4, r1
 801a36c:	8704      	strh	r4, [r0, #56]	; 0x38
 801a36e:	8ec4      	ldrh	r4, [r0, #54]	; 0x36
 801a370:	4421      	add	r1, r4
 801a372:	b289      	uxth	r1, r1
 801a374:	2909      	cmp	r1, #9
 801a376:	bf88      	it	hi
 801a378:	390a      	subhi	r1, #10
 801a37a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801a37c:	250a      	movs	r5, #10
 801a37e:	b1ba      	cbz	r2, 801a3b0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 801a380:	3a01      	subs	r2, #1
 801a382:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801a384:	b292      	uxth	r2, r2
 801a386:	2909      	cmp	r1, #9
 801a388:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801a38c:	d903      	bls.n	801a396 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 801a38e:	4b11      	ldr	r3, [pc, #68]	; (801a3d4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 801a390:	4a11      	ldr	r2, [pc, #68]	; (801a3d8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 801a392:	21e6      	movs	r1, #230	; 0xe6
 801a394:	e7da      	b.n	801a34c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 801a396:	3101      	adds	r1, #1
 801a398:	8701      	strh	r1, [r0, #56]	; 0x38
 801a39a:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801a39c:	b901      	cbnz	r1, 801a3a0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 801a39e:	86c5      	strh	r5, [r0, #54]	; 0x36
 801a3a0:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801a3a2:	3901      	subs	r1, #1
 801a3a4:	b289      	uxth	r1, r1
 801a3a6:	86c1      	strh	r1, [r0, #54]	; 0x36
 801a3a8:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801a3ac:	844c      	strh	r4, [r1, #34]	; 0x22
 801a3ae:	e7e6      	b.n	801a37e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 801a3b0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801a3b4:	f7ff bf48 	b.w	801a248 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801a3b8:	0802a468 	.word	0x0802a468
 801a3bc:	0802ca8f 	.word	0x0802ca8f
 801a3c0:	0802a53a 	.word	0x0802a53a
 801a3c4:	0802a566 	.word	0x0802a566
 801a3c8:	0802cb39 	.word	0x0802cb39
 801a3cc:	0802c9e8 	.word	0x0802c9e8
 801a3d0:	0802ce10 	.word	0x0802ce10
 801a3d4:	0802c9f4 	.word	0x0802c9f4
 801a3d8:	0802ca07 	.word	0x0802ca07

0801a3dc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801a3dc:	3a01      	subs	r2, #1
 801a3de:	b570      	push	{r4, r5, r6, lr}
 801a3e0:	b292      	uxth	r2, r2
 801a3e2:	f64f 76ff 	movw	r6, #65535	; 0xffff
 801a3e6:	42b2      	cmp	r2, r6
 801a3e8:	d019      	beq.n	801a41e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 801a3ea:	8c04      	ldrh	r4, [r0, #32]
 801a3ec:	f831 5b02 	ldrh.w	r5, [r1], #2
 801a3f0:	4294      	cmp	r4, r2
 801a3f2:	d805      	bhi.n	801a400 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 801a3f4:	4b19      	ldr	r3, [pc, #100]	; (801a45c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 801a3f6:	4a1a      	ldr	r2, [pc, #104]	; (801a460 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 801a3f8:	481a      	ldr	r0, [pc, #104]	; (801a464 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 801a3fa:	21c5      	movs	r1, #197	; 0xc5
 801a3fc:	f00d f9c0 	bl	8027780 <__assert_func>
 801a400:	8bc4      	ldrh	r4, [r0, #30]
 801a402:	4414      	add	r4, r2
 801a404:	b2a4      	uxth	r4, r4
 801a406:	2c01      	cmp	r4, #1
 801a408:	bf88      	it	hi
 801a40a:	3c02      	subhi	r4, #2
 801a40c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801a410:	3a01      	subs	r2, #1
 801a412:	8b64      	ldrh	r4, [r4, #26]
 801a414:	42ac      	cmp	r4, r5
 801a416:	b292      	uxth	r2, r2
 801a418:	d0e5      	beq.n	801a3e6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 801a41a:	2000      	movs	r0, #0
 801a41c:	bd70      	pop	{r4, r5, r6, pc}
 801a41e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801a422:	2400      	movs	r4, #0
 801a424:	4413      	add	r3, r2
 801a426:	b2a2      	uxth	r2, r4
 801a428:	429a      	cmp	r2, r3
 801a42a:	da14      	bge.n	801a456 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 801a42c:	8f06      	ldrh	r6, [r0, #56]	; 0x38
 801a42e:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801a432:	4296      	cmp	r6, r2
 801a434:	d802      	bhi.n	801a43c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 801a436:	4b09      	ldr	r3, [pc, #36]	; (801a45c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 801a438:	4a0b      	ldr	r2, [pc, #44]	; (801a468 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 801a43a:	e7dd      	b.n	801a3f8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 801a43c:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 801a43e:	4432      	add	r2, r6
 801a440:	b292      	uxth	r2, r2
 801a442:	2a09      	cmp	r2, #9
 801a444:	bf88      	it	hi
 801a446:	3a0a      	subhi	r2, #10
 801a448:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801a44c:	3401      	adds	r4, #1
 801a44e:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801a450:	42aa      	cmp	r2, r5
 801a452:	d0e8      	beq.n	801a426 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 801a454:	e7e1      	b.n	801a41a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 801a456:	2001      	movs	r0, #1
 801a458:	e7e0      	b.n	801a41c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 801a45a:	bf00      	nop
 801a45c:	0802a566 	.word	0x0802a566
 801a460:	0802ce94 	.word	0x0802ce94
 801a464:	0802a53a 	.word	0x0802a53a
 801a468:	0802cb39 	.word	0x0802cb39

0801a46c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801a46c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a470:	4605      	mov	r5, r0
 801a472:	4616      	mov	r6, r2
 801a474:	1c8c      	adds	r4, r1, #2
 801a476:	8809      	ldrh	r1, [r1, #0]
 801a478:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801a47c:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801a480:	42b3      	cmp	r3, r6
 801a482:	d124      	bne.n	801a4ce <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801a484:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801a488:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801a48c:	f001 070f 	and.w	r7, r1, #15
 801a490:	f8cd 8000 	str.w	r8, [sp]
 801a494:	464b      	mov	r3, r9
 801a496:	4652      	mov	r2, sl
 801a498:	4621      	mov	r1, r4
 801a49a:	4628      	mov	r0, r5
 801a49c:	f7ff ff9e 	bl	801a3dc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801a4a0:	4683      	mov	fp, r0
 801a4a2:	b168      	cbz	r0, 801a4c0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801a4a4:	eb0a 0109 	add.w	r1, sl, r9
 801a4a8:	4441      	add	r1, r8
 801a4aa:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801a4ae:	463a      	mov	r2, r7
 801a4b0:	4649      	mov	r1, r9
 801a4b2:	4628      	mov	r0, r5
 801a4b4:	f7ff ff42 	bl	801a33c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801a4b8:	4658      	mov	r0, fp
 801a4ba:	b003      	add	sp, #12
 801a4bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a4c0:	eb07 010a 	add.w	r1, r7, sl
 801a4c4:	4449      	add	r1, r9
 801a4c6:	4441      	add	r1, r8
 801a4c8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801a4cc:	e7d2      	b.n	801a474 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801a4ce:	f04f 0b00 	mov.w	fp, #0
 801a4d2:	e7f1      	b.n	801a4b8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801a4d4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801a4d4:	b570      	push	{r4, r5, r6, lr}
 801a4d6:	8810      	ldrh	r0, [r2, #0]
 801a4d8:	4298      	cmp	r0, r3
 801a4da:	d817      	bhi.n	801a50c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801a4dc:	1e48      	subs	r0, r1, #1
 801a4de:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801a4e2:	4298      	cmp	r0, r3
 801a4e4:	d312      	bcc.n	801a50c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801a4e6:	2400      	movs	r4, #0
 801a4e8:	428c      	cmp	r4, r1
 801a4ea:	d20f      	bcs.n	801a50c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801a4ec:	1860      	adds	r0, r4, r1
 801a4ee:	1040      	asrs	r0, r0, #1
 801a4f0:	0085      	lsls	r5, r0, #2
 801a4f2:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801a4f6:	42b3      	cmp	r3, r6
 801a4f8:	d902      	bls.n	801a500 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801a4fa:	3001      	adds	r0, #1
 801a4fc:	b284      	uxth	r4, r0
 801a4fe:	e7f3      	b.n	801a4e8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801a500:	d201      	bcs.n	801a506 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801a502:	b281      	uxth	r1, r0
 801a504:	e7f0      	b.n	801a4e8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801a506:	442a      	add	r2, r5
 801a508:	8850      	ldrh	r0, [r2, #2]
 801a50a:	bd70      	pop	{r4, r5, r6, pc}
 801a50c:	2000      	movs	r0, #0
 801a50e:	e7fc      	b.n	801a50a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801a510 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801a510:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a514:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801a516:	886f      	ldrh	r7, [r5, #2]
 801a518:	4604      	mov	r4, r0
 801a51a:	087f      	lsrs	r7, r7, #1
 801a51c:	260b      	movs	r6, #11
 801a51e:	3e01      	subs	r6, #1
 801a520:	d01b      	beq.n	801a55a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 801a522:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801a524:	b92b      	cbnz	r3, 801a532 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 801a526:	4b0e      	ldr	r3, [pc, #56]	; (801a560 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 801a528:	4a0e      	ldr	r2, [pc, #56]	; (801a564 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 801a52a:	480f      	ldr	r0, [pc, #60]	; (801a568 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 801a52c:	21c0      	movs	r1, #192	; 0xc0
 801a52e:	f00d f927 	bl	8027780 <__assert_func>
 801a532:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801a534:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801a538:	462a      	mov	r2, r5
 801a53a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801a53e:	4639      	mov	r1, r7
 801a540:	4643      	mov	r3, r8
 801a542:	4620      	mov	r0, r4
 801a544:	f7ff ffc6 	bl	801a4d4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801a548:	b138      	cbz	r0, 801a55a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 801a54a:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801a54e:	4642      	mov	r2, r8
 801a550:	4620      	mov	r0, r4
 801a552:	f7ff ff8b 	bl	801a46c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801a556:	2800      	cmp	r0, #0
 801a558:	d1e1      	bne.n	801a51e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801a55a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a55e:	bf00      	nop
 801a560:	0802a468 	.word	0x0802a468
 801a564:	0802cc0b 	.word	0x0802cc0b
 801a568:	0802a53a 	.word	0x0802a53a

0801a56c <_ZN8touchgfx8ceil28_4El>:
 801a56c:	f110 030f 	adds.w	r3, r0, #15
 801a570:	d401      	bmi.n	801a576 <_ZN8touchgfx8ceil28_4El+0xa>
 801a572:	1118      	asrs	r0, r3, #4
 801a574:	4770      	bx	lr
 801a576:	f1c0 0001 	rsb	r0, r0, #1
 801a57a:	f010 000f 	ands.w	r0, r0, #15
 801a57e:	bf18      	it	ne
 801a580:	2001      	movne	r0, #1
 801a582:	2210      	movs	r2, #16
 801a584:	fb93 f3f2 	sdiv	r3, r3, r2
 801a588:	1a18      	subs	r0, r3, r0
 801a58a:	4770      	bx	lr

0801a58c <_ZN8touchgfx11floorDivModEllRlS0_>:
 801a58c:	2900      	cmp	r1, #0
 801a58e:	b538      	push	{r3, r4, r5, lr}
 801a590:	dc05      	bgt.n	801a59e <_ZN8touchgfx11floorDivModEllRlS0_+0x12>
 801a592:	4b0f      	ldr	r3, [pc, #60]	; (801a5d0 <_ZN8touchgfx11floorDivModEllRlS0_+0x44>)
 801a594:	4a0f      	ldr	r2, [pc, #60]	; (801a5d4 <_ZN8touchgfx11floorDivModEllRlS0_+0x48>)
 801a596:	4810      	ldr	r0, [pc, #64]	; (801a5d8 <_ZN8touchgfx11floorDivModEllRlS0_+0x4c>)
 801a598:	21f7      	movs	r1, #247	; 0xf7
 801a59a:	f00d f8f1 	bl	8027780 <__assert_func>
 801a59e:	2800      	cmp	r0, #0
 801a5a0:	db06      	blt.n	801a5b0 <_ZN8touchgfx11floorDivModEllRlS0_+0x24>
 801a5a2:	fb90 f4f1 	sdiv	r4, r0, r1
 801a5a6:	6014      	str	r4, [r2, #0]
 801a5a8:	fb01 0114 	mls	r1, r1, r4, r0
 801a5ac:	6019      	str	r1, [r3, #0]
 801a5ae:	bd38      	pop	{r3, r4, r5, pc}
 801a5b0:	4240      	negs	r0, r0
 801a5b2:	fb90 f4f1 	sdiv	r4, r0, r1
 801a5b6:	4265      	negs	r5, r4
 801a5b8:	fb01 0014 	mls	r0, r1, r4, r0
 801a5bc:	6015      	str	r5, [r2, #0]
 801a5be:	6018      	str	r0, [r3, #0]
 801a5c0:	2800      	cmp	r0, #0
 801a5c2:	d0f4      	beq.n	801a5ae <_ZN8touchgfx11floorDivModEllRlS0_+0x22>
 801a5c4:	6810      	ldr	r0, [r2, #0]
 801a5c6:	3801      	subs	r0, #1
 801a5c8:	6010      	str	r0, [r2, #0]
 801a5ca:	6818      	ldr	r0, [r3, #0]
 801a5cc:	1a09      	subs	r1, r1, r0
 801a5ce:	e7ed      	b.n	801a5ac <_ZN8touchgfx11floorDivModEllRlS0_+0x20>
 801a5d0:	0802cf65 	.word	0x0802cf65
 801a5d4:	0802cfa4 	.word	0x0802cfa4
 801a5d8:	0802cf75 	.word	0x0802cf75

0801a5dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 801a5dc:	b570      	push	{r4, r5, r6, lr}
 801a5de:	694a      	ldr	r2, [r1, #20]
 801a5e0:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801a5e2:	684b      	ldr	r3, [r1, #4]
 801a5e4:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801a5e6:	1b54      	subs	r4, r2, r5
 801a5e8:	f000 8106 	beq.w	801a7f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801a5ec:	1b9b      	subs	r3, r3, r6
 801a5ee:	d003      	beq.n	801a5f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801a5f0:	4363      	muls	r3, r4
 801a5f2:	2210      	movs	r2, #16
 801a5f4:	fb93 f3f2 	sdiv	r3, r3, r2
 801a5f8:	680c      	ldr	r4, [r1, #0]
 801a5fa:	698a      	ldr	r2, [r1, #24]
 801a5fc:	1b65      	subs	r5, r4, r5
 801a5fe:	f000 80fd 	beq.w	801a7fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801a602:	1b92      	subs	r2, r2, r6
 801a604:	d003      	beq.n	801a60e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801a606:	436a      	muls	r2, r5
 801a608:	2410      	movs	r4, #16
 801a60a:	fb92 f2f4 	sdiv	r2, r2, r4
 801a60e:	1a9b      	subs	r3, r3, r2
 801a610:	ee07 3a90 	vmov	s15, r3
 801a614:	ed9f 4a88 	vldr	s8, [pc, #544]	; 801a838 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 801a618:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a61c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a620:	ee67 7a84 	vmul.f32	s15, s15, s8
 801a624:	460a      	mov	r2, r1
 801a626:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801a62a:	4603      	mov	r3, r0
 801a62c:	f100 040c 	add.w	r4, r0, #12
 801a630:	eeb1 6a43 	vneg.f32	s12, s6
 801a634:	edd2 7a02 	vldr	s15, [r2, #8]
 801a638:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801a63c:	3214      	adds	r2, #20
 801a63e:	ece3 6a01 	vstmia	r3!, {s13}
 801a642:	ed52 7a02 	vldr	s15, [r2, #-8]
 801a646:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801a64a:	429c      	cmp	r4, r3
 801a64c:	edc3 7a02 	vstr	s15, [r3, #8]
 801a650:	ed52 7a01 	vldr	s15, [r2, #-4]
 801a654:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801a658:	edc3 7a05 	vstr	s15, [r3, #20]
 801a65c:	d1ea      	bne.n	801a634 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801a65e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801a660:	698b      	ldr	r3, [r1, #24]
 801a662:	edd0 4a02 	vldr	s9, [r0, #8]
 801a666:	edd0 3a00 	vldr	s7, [r0]
 801a66a:	edd0 6a01 	vldr	s13, [r0, #4]
 801a66e:	ed90 5a05 	vldr	s10, [r0, #20]
 801a672:	ed90 2a03 	vldr	s4, [r0, #12]
 801a676:	edd0 5a04 	vldr	s11, [r0, #16]
 801a67a:	ed90 1a07 	vldr	s2, [r0, #28]
 801a67e:	edd0 2a06 	vldr	s5, [r0, #24]
 801a682:	1a9b      	subs	r3, r3, r2
 801a684:	ee07 3a90 	vmov	s15, r3
 801a688:	684b      	ldr	r3, [r1, #4]
 801a68a:	1a9b      	subs	r3, r3, r2
 801a68c:	ee07 3a10 	vmov	s14, r3
 801a690:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a694:	ee76 6ae4 	vsub.f32	s13, s13, s9
 801a698:	ee67 7a84 	vmul.f32	s15, s15, s8
 801a69c:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801a6a0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a6a4:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 801a6a8:	ee27 7a04 	vmul.f32	s14, s14, s8
 801a6ac:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801a6b0:	eee6 7a87 	vfma.f32	s15, s13, s14
 801a6b4:	ee32 5a45 	vsub.f32	s10, s4, s10
 801a6b8:	ee67 7a83 	vmul.f32	s15, s15, s6
 801a6bc:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 801a6c0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801a6c2:	694a      	ldr	r2, [r1, #20]
 801a6c4:	1b13      	subs	r3, r2, r4
 801a6c6:	ee07 3a10 	vmov	s14, r3
 801a6ca:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a6ce:	680b      	ldr	r3, [r1, #0]
 801a6d0:	ee27 7a04 	vmul.f32	s14, s14, s8
 801a6d4:	1b1b      	subs	r3, r3, r4
 801a6d6:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801a6da:	ee07 3a10 	vmov	s14, r3
 801a6de:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a6e2:	ee27 7a04 	vmul.f32	s14, s14, s8
 801a6e6:	eee6 4a87 	vfma.f32	s9, s13, s14
 801a6ea:	ee64 4a86 	vmul.f32	s9, s9, s12
 801a6ee:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801a6f2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801a6f4:	698b      	ldr	r3, [r1, #24]
 801a6f6:	1a9b      	subs	r3, r3, r2
 801a6f8:	ee06 3a90 	vmov	s13, r3
 801a6fc:	684b      	ldr	r3, [r1, #4]
 801a6fe:	1a9b      	subs	r3, r3, r2
 801a700:	ee07 3a10 	vmov	s14, r3
 801a704:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801a708:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a70c:	ee66 6a84 	vmul.f32	s13, s13, s8
 801a710:	ee27 7a04 	vmul.f32	s14, s14, s8
 801a714:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801a718:	eee5 6a87 	vfma.f32	s13, s11, s14
 801a71c:	ee66 6a83 	vmul.f32	s13, s13, s6
 801a720:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 801a724:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801a726:	694a      	ldr	r2, [r1, #20]
 801a728:	1b13      	subs	r3, r2, r4
 801a72a:	ee07 3a10 	vmov	s14, r3
 801a72e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a732:	680b      	ldr	r3, [r1, #0]
 801a734:	ee27 7a04 	vmul.f32	s14, s14, s8
 801a738:	1b1b      	subs	r3, r3, r4
 801a73a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801a73e:	ee07 3a10 	vmov	s14, r3
 801a742:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a746:	ee27 7a04 	vmul.f32	s14, s14, s8
 801a74a:	eea5 5a87 	vfma.f32	s10, s11, s14
 801a74e:	edd0 5a08 	vldr	s11, [r0, #32]
 801a752:	ee25 5a06 	vmul.f32	s10, s10, s12
 801a756:	ee31 1a65 	vsub.f32	s2, s2, s11
 801a75a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801a75e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801a760:	698b      	ldr	r3, [r1, #24]
 801a762:	1a9b      	subs	r3, r3, r2
 801a764:	ee07 3a10 	vmov	s14, r3
 801a768:	684b      	ldr	r3, [r1, #4]
 801a76a:	1a9b      	subs	r3, r3, r2
 801a76c:	ee01 3a90 	vmov	s3, r3
 801a770:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a774:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801a778:	ee27 7a04 	vmul.f32	s14, s14, s8
 801a77c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801a780:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801a784:	ee61 1a84 	vmul.f32	s3, s3, s8
 801a788:	eea1 7a21 	vfma.f32	s14, s2, s3
 801a78c:	ee27 7a03 	vmul.f32	s14, s14, s6
 801a790:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801a794:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801a796:	694a      	ldr	r2, [r1, #20]
 801a798:	1b13      	subs	r3, r2, r4
 801a79a:	ee03 3a10 	vmov	s6, r3
 801a79e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801a7a2:	680b      	ldr	r3, [r1, #0]
 801a7a4:	ee23 3a04 	vmul.f32	s6, s6, s8
 801a7a8:	1b1b      	subs	r3, r3, r4
 801a7aa:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801a7ae:	ee03 3a10 	vmov	s6, r3
 801a7b2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801a7b6:	ee23 4a04 	vmul.f32	s8, s6, s8
 801a7ba:	eee1 5a04 	vfma.f32	s11, s2, s8
 801a7be:	ee25 6a86 	vmul.f32	s12, s11, s12
 801a7c2:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801a7c6:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 801a7ca:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801a7ce:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801a7d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7d6:	dd13      	ble.n	801a800 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 801a7d8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801a7dc:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 801a7e0:	63c3      	str	r3, [r0, #60]	; 0x3c
 801a7e2:	eee3 7a87 	vfma.f32	s15, s7, s14
 801a7e6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a7ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a7ee:	dd15      	ble.n	801a81c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 801a7f0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801a7f4:	6403      	str	r3, [r0, #64]	; 0x40
 801a7f6:	bd70      	pop	{r4, r5, r6, pc}
 801a7f8:	4623      	mov	r3, r4
 801a7fa:	e6fd      	b.n	801a5f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801a7fc:	462a      	mov	r2, r5
 801a7fe:	e706      	b.n	801a60e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801a800:	d502      	bpl.n	801a808 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801a802:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801a806:	e7e9      	b.n	801a7dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801a808:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801a80c:	eea3 2a85 	vfma.f32	s4, s7, s10
 801a810:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801a814:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a818:	dade      	bge.n	801a7d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801a81a:	e7f2      	b.n	801a802 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801a81c:	d502      	bpl.n	801a824 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801a81e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801a822:	e7e7      	b.n	801a7f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801a824:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801a828:	eee3 4a86 	vfma.f32	s9, s7, s12
 801a82c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801a830:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a834:	dadc      	bge.n	801a7f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801a836:	e7f2      	b.n	801a81e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801a838:	3d800000 	.word	0x3d800000

0801a83c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801a83c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a840:	f04f 0814 	mov.w	r8, #20
 801a844:	fb08 f903 	mul.w	r9, r8, r3
 801a848:	eb02 0a09 	add.w	sl, r2, r9
 801a84c:	4604      	mov	r4, r0
 801a84e:	f8da 0004 	ldr.w	r0, [sl, #4]
 801a852:	4617      	mov	r7, r2
 801a854:	460d      	mov	r5, r1
 801a856:	461e      	mov	r6, r3
 801a858:	f7ff fe88 	bl	801a56c <_ZN8touchgfx8ceil28_4El>
 801a85c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a85e:	6160      	str	r0, [r4, #20]
 801a860:	fb08 f803 	mul.w	r8, r8, r3
 801a864:	eb07 0b08 	add.w	fp, r7, r8
 801a868:	9001      	str	r0, [sp, #4]
 801a86a:	f8db 0004 	ldr.w	r0, [fp, #4]
 801a86e:	f7ff fe7d 	bl	801a56c <_ZN8touchgfx8ceil28_4El>
 801a872:	9a01      	ldr	r2, [sp, #4]
 801a874:	1a80      	subs	r0, r0, r2
 801a876:	61a0      	str	r0, [r4, #24]
 801a878:	2800      	cmp	r0, #0
 801a87a:	f000 8088 	beq.w	801a98e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x152>
 801a87e:	f857 3009 	ldr.w	r3, [r7, r9]
 801a882:	f857 c008 	ldr.w	ip, [r7, r8]
 801a886:	f8da 1004 	ldr.w	r1, [sl, #4]
 801a88a:	f8db 0004 	ldr.w	r0, [fp, #4]
 801a88e:	ebac 0c03 	sub.w	ip, ip, r3
 801a892:	ea4f 1b0c 	mov.w	fp, ip, lsl #4
 801a896:	fb0b f202 	mul.w	r2, fp, r2
 801a89a:	fb0c 2211 	mls	r2, ip, r1, r2
 801a89e:	1a40      	subs	r0, r0, r1
 801a8a0:	ea4f 1800 	mov.w	r8, r0, lsl #4
 801a8a4:	fb00 2003 	mla	r0, r0, r3, r2
 801a8a8:	3801      	subs	r0, #1
 801a8aa:	f104 0310 	add.w	r3, r4, #16
 801a8ae:	4622      	mov	r2, r4
 801a8b0:	4641      	mov	r1, r8
 801a8b2:	4440      	add	r0, r8
 801a8b4:	f7ff fe6a 	bl	801a58c <_ZN8touchgfx11floorDivModEllRlS0_>
 801a8b8:	f104 0308 	add.w	r3, r4, #8
 801a8bc:	1d22      	adds	r2, r4, #4
 801a8be:	4641      	mov	r1, r8
 801a8c0:	4658      	mov	r0, fp
 801a8c2:	f7ff fe63 	bl	801a58c <_ZN8touchgfx11floorDivModEllRlS0_>
 801a8c6:	f8c4 800c 	str.w	r8, [r4, #12]
 801a8ca:	f8da 3004 	ldr.w	r3, [sl, #4]
 801a8ce:	6962      	ldr	r2, [r4, #20]
 801a8d0:	eddf 6a31 	vldr	s13, [pc, #196]	; 801a998 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801a8d4:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 801a8d8:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 801a8dc:	ee07 3a10 	vmov	s14, r3
 801a8e0:	6822      	ldr	r2, [r4, #0]
 801a8e2:	f857 3009 	ldr.w	r3, [r7, r9]
 801a8e6:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 801a8ea:	ee07 3a90 	vmov	s15, r3
 801a8ee:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a8f2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a8f6:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 801a8fa:	ee27 7a26 	vmul.f32	s14, s14, s13
 801a8fe:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801a902:	edd3 6a00 	vldr	s13, [r3]
 801a906:	eee6 6a07 	vfma.f32	s13, s12, s14
 801a90a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801a90e:	eee6 6a27 	vfma.f32	s13, s12, s15
 801a912:	edc4 6a07 	vstr	s13, [r4, #28]
 801a916:	edd4 6a01 	vldr	s13, [r4, #4]
 801a91a:	edd5 5a09 	vldr	s11, [r5, #36]	; 0x24
 801a91e:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 801a922:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801a926:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801a92a:	ed84 6a08 	vstr	s12, [r4, #32]
 801a92e:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 801a930:	6262      	str	r2, [r4, #36]	; 0x24
 801a932:	edd5 5a0c 	vldr	s11, [r5, #48]	; 0x30
 801a936:	ed93 6a03 	vldr	s12, [r3, #12]
 801a93a:	eea5 6a87 	vfma.f32	s12, s11, s14
 801a93e:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 801a942:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801a946:	ed84 6a0a 	vstr	s12, [r4, #40]	; 0x28
 801a94a:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 801a94e:	ed95 6a0c 	vldr	s12, [r5, #48]	; 0x30
 801a952:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801a956:	ed84 6a0b 	vstr	s12, [r4, #44]	; 0x2c
 801a95a:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 801a95c:	6322      	str	r2, [r4, #48]	; 0x30
 801a95e:	ed93 6a06 	vldr	s12, [r3, #24]
 801a962:	edd5 5a0e 	vldr	s11, [r5, #56]	; 0x38
 801a966:	eea5 6a87 	vfma.f32	s12, s11, s14
 801a96a:	eeb0 7a46 	vmov.f32	s14, s12
 801a96e:	ed95 6a0d 	vldr	s12, [r5, #52]	; 0x34
 801a972:	eea6 7a27 	vfma.f32	s14, s12, s15
 801a976:	ed84 7a0d 	vstr	s14, [r4, #52]	; 0x34
 801a97a:	ed95 7a0d 	vldr	s14, [r5, #52]	; 0x34
 801a97e:	edd5 7a0e 	vldr	s15, [r5, #56]	; 0x38
 801a982:	eee6 7a87 	vfma.f32	s15, s13, s14
 801a986:	edc4 7a0e 	vstr	s15, [r4, #56]	; 0x38
 801a98a:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 801a98c:	63e3      	str	r3, [r4, #60]	; 0x3c
 801a98e:	4620      	mov	r0, r4
 801a990:	b003      	add	sp, #12
 801a992:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a996:	bf00      	nop
 801a998:	3d800000 	.word	0x3d800000

0801a99c <_ZN8touchgfx7Unicode6strlenEPKt>:
 801a99c:	4602      	mov	r2, r0
 801a99e:	b148      	cbz	r0, 801a9b4 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801a9a0:	2300      	movs	r3, #0
 801a9a2:	b298      	uxth	r0, r3
 801a9a4:	3301      	adds	r3, #1
 801a9a6:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801a9aa:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801a9ae:	2900      	cmp	r1, #0
 801a9b0:	d1f7      	bne.n	801a9a2 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801a9b2:	4770      	bx	lr
 801a9b4:	4770      	bx	lr

0801a9b6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801a9b6:	b530      	push	{r4, r5, lr}
 801a9b8:	4604      	mov	r4, r0
 801a9ba:	b159      	cbz	r1, 801a9d4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 801a9bc:	b148      	cbz	r0, 801a9d2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801a9be:	2300      	movs	r3, #0
 801a9c0:	b298      	uxth	r0, r3
 801a9c2:	4282      	cmp	r2, r0
 801a9c4:	d905      	bls.n	801a9d2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801a9c6:	5ccd      	ldrb	r5, [r1, r3]
 801a9c8:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801a9cc:	3301      	adds	r3, #1
 801a9ce:	2d00      	cmp	r5, #0
 801a9d0:	d1f6      	bne.n	801a9c0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801a9d2:	bd30      	pop	{r4, r5, pc}
 801a9d4:	4608      	mov	r0, r1
 801a9d6:	e7fc      	b.n	801a9d2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0801a9d8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 801a9d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a9da:	b08b      	sub	sp, #44	; 0x2c
 801a9dc:	468c      	mov	ip, r1
 801a9de:	2100      	movs	r1, #0
 801a9e0:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801a9e4:	ae01      	add	r6, sp, #4
 801a9e6:	211f      	movs	r1, #31
 801a9e8:	fbb0 f7f3 	udiv	r7, r0, r3
 801a9ec:	fb03 0517 	mls	r5, r3, r7, r0
 801a9f0:	b2ec      	uxtb	r4, r5
 801a9f2:	2d09      	cmp	r5, #9
 801a9f4:	bfd4      	ite	le
 801a9f6:	3430      	addle	r4, #48	; 0x30
 801a9f8:	3457      	addgt	r4, #87	; 0x57
 801a9fa:	b2e4      	uxtb	r4, r4
 801a9fc:	558c      	strb	r4, [r1, r6]
 801a9fe:	4638      	mov	r0, r7
 801aa00:	1e4c      	subs	r4, r1, #1
 801aa02:	b92f      	cbnz	r7, 801aa10 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 801aa04:	4431      	add	r1, r6
 801aa06:	4660      	mov	r0, ip
 801aa08:	f7ff ffd5 	bl	801a9b6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801aa0c:	b00b      	add	sp, #44	; 0x2c
 801aa0e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801aa10:	4621      	mov	r1, r4
 801aa12:	e7e9      	b.n	801a9e8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

0801aa14 <_ZN8touchgfx7Unicode4itoaElPtti>:
 801aa14:	b5f0      	push	{r4, r5, r6, r7, lr}
 801aa16:	4607      	mov	r7, r0
 801aa18:	b08b      	sub	sp, #44	; 0x2c
 801aa1a:	4608      	mov	r0, r1
 801aa1c:	b341      	cbz	r1, 801aa70 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 801aa1e:	1e99      	subs	r1, r3, #2
 801aa20:	2922      	cmp	r1, #34	; 0x22
 801aa22:	d825      	bhi.n	801aa70 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 801aa24:	2100      	movs	r1, #0
 801aa26:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801aa2a:	463c      	mov	r4, r7
 801aa2c:	261f      	movs	r6, #31
 801aa2e:	f10d 0c04 	add.w	ip, sp, #4
 801aa32:	fb94 fef3 	sdiv	lr, r4, r3
 801aa36:	fb03 441e 	mls	r4, r3, lr, r4
 801aa3a:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 801aa3e:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801aa42:	b2ec      	uxtb	r4, r5
 801aa44:	2d09      	cmp	r5, #9
 801aa46:	bfd4      	ite	le
 801aa48:	3430      	addle	r4, #48	; 0x30
 801aa4a:	3457      	addgt	r4, #87	; 0x57
 801aa4c:	b2e4      	uxtb	r4, r4
 801aa4e:	f80c 4006 	strb.w	r4, [ip, r6]
 801aa52:	4674      	mov	r4, lr
 801aa54:	1e71      	subs	r1, r6, #1
 801aa56:	b96c      	cbnz	r4, 801aa74 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 801aa58:	2f00      	cmp	r7, #0
 801aa5a:	da05      	bge.n	801aa68 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 801aa5c:	ab0a      	add	r3, sp, #40	; 0x28
 801aa5e:	4419      	add	r1, r3
 801aa60:	232d      	movs	r3, #45	; 0x2d
 801aa62:	f801 3c24 	strb.w	r3, [r1, #-36]
 801aa66:	1eb1      	subs	r1, r6, #2
 801aa68:	3101      	adds	r1, #1
 801aa6a:	4461      	add	r1, ip
 801aa6c:	f7ff ffa3 	bl	801a9b6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801aa70:	b00b      	add	sp, #44	; 0x2c
 801aa72:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801aa74:	460e      	mov	r6, r1
 801aa76:	e7dc      	b.n	801aa32 <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

0801aa78 <_ZN8touchgfx7Unicode4atoiEPKt>:
 801aa78:	b510      	push	{r4, lr}
 801aa7a:	b158      	cbz	r0, 801aa94 <_ZN8touchgfx7Unicode4atoiEPKt+0x1c>
 801aa7c:	1e82      	subs	r2, r0, #2
 801aa7e:	210a      	movs	r1, #10
 801aa80:	2000      	movs	r0, #0
 801aa82:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 801aa86:	3b30      	subs	r3, #48	; 0x30
 801aa88:	b29c      	uxth	r4, r3
 801aa8a:	2c09      	cmp	r4, #9
 801aa8c:	d802      	bhi.n	801aa94 <_ZN8touchgfx7Unicode4atoiEPKt+0x1c>
 801aa8e:	fb01 3000 	mla	r0, r1, r0, r3
 801aa92:	e7f6      	b.n	801aa82 <_ZN8touchgfx7Unicode4atoiEPKt+0xa>
 801aa94:	bd10      	pop	{r4, pc}

0801aa96 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 801aa96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa9a:	4691      	mov	r9, r2
 801aa9c:	b085      	sub	sp, #20
 801aa9e:	6802      	ldr	r2, [r0, #0]
 801aaa0:	9201      	str	r2, [sp, #4]
 801aaa2:	4688      	mov	r8, r1
 801aaa4:	4683      	mov	fp, r0
 801aaa6:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 801aaaa:	9103      	str	r1, [sp, #12]
 801aaac:	4610      	mov	r0, r2
 801aaae:	461c      	mov	r4, r3
 801aab0:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801aab4:	9302      	str	r3, [sp, #8]
 801aab6:	f7ff ff71 	bl	801a99c <_ZN8touchgfx7Unicode6strlenEPKt>
 801aaba:	f1b8 0f00 	cmp.w	r8, #0
 801aabe:	bf0c      	ite	eq
 801aac0:	4684      	moveq	ip, r0
 801aac2:	f100 0c01 	addne.w	ip, r0, #1
 801aac6:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 801aaca:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801aace:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801aad0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801aad2:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 801aad6:	9903      	ldr	r1, [sp, #12]
 801aad8:	fa1f fc8c 	uxth.w	ip, ip
 801aadc:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801aae0:	d041      	beq.n	801ab66 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801aae2:	d834      	bhi.n	801ab4e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801aae4:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 801aae8:	d059      	beq.n	801ab9e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 801aaea:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 801aaee:	d03a      	beq.n	801ab66 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801aaf0:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801aaf4:	d034      	beq.n	801ab60 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801aaf6:	2400      	movs	r4, #0
 801aaf8:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801aafc:	3a01      	subs	r2, #1
 801aafe:	b169      	cbz	r1, 801ab1c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801ab00:	9911      	ldr	r1, [sp, #68]	; 0x44
 801ab02:	458c      	cmp	ip, r1
 801ab04:	da09      	bge.n	801ab1a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801ab06:	eba1 010c 	sub.w	r1, r1, ip
 801ab0a:	b289      	uxth	r1, r1
 801ab0c:	b933      	cbnz	r3, 801ab1c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801ab0e:	2e00      	cmp	r6, #0
 801ab10:	d051      	beq.n	801abb6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801ab12:	2800      	cmp	r0, #0
 801ab14:	d04f      	beq.n	801abb6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801ab16:	440c      	add	r4, r1
 801ab18:	b2a4      	uxth	r4, r4
 801ab1a:	2100      	movs	r1, #0
 801ab1c:	682b      	ldr	r3, [r5, #0]
 801ab1e:	4293      	cmp	r3, r2
 801ab20:	da07      	bge.n	801ab32 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801ab22:	f1b8 0f00 	cmp.w	r8, #0
 801ab26:	d004      	beq.n	801ab32 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801ab28:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801ab2c:	682b      	ldr	r3, [r5, #0]
 801ab2e:	3301      	adds	r3, #1
 801ab30:	602b      	str	r3, [r5, #0]
 801ab32:	2730      	movs	r7, #48	; 0x30
 801ab34:	2c00      	cmp	r4, #0
 801ab36:	d04e      	beq.n	801abd6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801ab38:	682e      	ldr	r6, [r5, #0]
 801ab3a:	3c01      	subs	r4, #1
 801ab3c:	42b2      	cmp	r2, r6
 801ab3e:	b2a4      	uxth	r4, r4
 801ab40:	dd49      	ble.n	801abd6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801ab42:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801ab46:	682b      	ldr	r3, [r5, #0]
 801ab48:	3301      	adds	r3, #1
 801ab4a:	602b      	str	r3, [r5, #0]
 801ab4c:	e7f2      	b.n	801ab34 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 801ab4e:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 801ab52:	d01d      	beq.n	801ab90 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801ab54:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 801ab58:	d002      	beq.n	801ab60 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801ab5a:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 801ab5e:	e7c9      	b.n	801aaf4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801ab60:	4684      	mov	ip, r0
 801ab62:	f04f 0800 	mov.w	r8, #0
 801ab66:	2c00      	cmp	r4, #0
 801ab68:	d0c6      	beq.n	801aaf8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801ab6a:	b947      	cbnz	r7, 801ab7e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801ab6c:	2801      	cmp	r0, #1
 801ab6e:	d106      	bne.n	801ab7e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801ab70:	8814      	ldrh	r4, [r2, #0]
 801ab72:	2c30      	cmp	r4, #48	; 0x30
 801ab74:	bf02      	ittt	eq
 801ab76:	3202      	addeq	r2, #2
 801ab78:	f8cb 2000 	streq.w	r2, [fp]
 801ab7c:	4638      	moveq	r0, r7
 801ab7e:	45bc      	cmp	ip, r7
 801ab80:	da14      	bge.n	801abac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 801ab82:	b2bf      	uxth	r7, r7
 801ab84:	eba7 040c 	sub.w	r4, r7, ip
 801ab88:	b2a4      	uxth	r4, r4
 801ab8a:	46bc      	mov	ip, r7
 801ab8c:	2600      	movs	r6, #0
 801ab8e:	e7b3      	b.n	801aaf8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801ab90:	4684      	mov	ip, r0
 801ab92:	b16c      	cbz	r4, 801abb0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801ab94:	42b8      	cmp	r0, r7
 801ab96:	dd00      	ble.n	801ab9a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801ab98:	b2b8      	uxth	r0, r7
 801ab9a:	2400      	movs	r4, #0
 801ab9c:	e003      	b.n	801aba6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 801ab9e:	f04f 0c01 	mov.w	ip, #1
 801aba2:	2400      	movs	r4, #0
 801aba4:	4660      	mov	r0, ip
 801aba6:	4626      	mov	r6, r4
 801aba8:	46a0      	mov	r8, r4
 801abaa:	e7a5      	b.n	801aaf8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801abac:	2400      	movs	r4, #0
 801abae:	e7ed      	b.n	801ab8c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801abb0:	4626      	mov	r6, r4
 801abb2:	46a0      	mov	r8, r4
 801abb4:	e7a0      	b.n	801aaf8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801abb6:	2900      	cmp	r1, #0
 801abb8:	d0b0      	beq.n	801ab1c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801abba:	2720      	movs	r7, #32
 801abbc:	682e      	ldr	r6, [r5, #0]
 801abbe:	2900      	cmp	r1, #0
 801abc0:	d0ac      	beq.n	801ab1c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801abc2:	3901      	subs	r1, #1
 801abc4:	4296      	cmp	r6, r2
 801abc6:	b289      	uxth	r1, r1
 801abc8:	daa7      	bge.n	801ab1a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801abca:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801abce:	682b      	ldr	r3, [r5, #0]
 801abd0:	3301      	adds	r3, #1
 801abd2:	602b      	str	r3, [r5, #0]
 801abd4:	e7f2      	b.n	801abbc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 801abd6:	b188      	cbz	r0, 801abfc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801abd8:	682b      	ldr	r3, [r5, #0]
 801abda:	3801      	subs	r0, #1
 801abdc:	429a      	cmp	r2, r3
 801abde:	b280      	uxth	r0, r0
 801abe0:	dd0c      	ble.n	801abfc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801abe2:	f8db 3000 	ldr.w	r3, [fp]
 801abe6:	1c9c      	adds	r4, r3, #2
 801abe8:	f8cb 4000 	str.w	r4, [fp]
 801abec:	881c      	ldrh	r4, [r3, #0]
 801abee:	682b      	ldr	r3, [r5, #0]
 801abf0:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801abf4:	682b      	ldr	r3, [r5, #0]
 801abf6:	3301      	adds	r3, #1
 801abf8:	602b      	str	r3, [r5, #0]
 801abfa:	e7ec      	b.n	801abd6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801abfc:	2620      	movs	r6, #32
 801abfe:	b151      	cbz	r1, 801ac16 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801ac00:	6828      	ldr	r0, [r5, #0]
 801ac02:	3901      	subs	r1, #1
 801ac04:	4282      	cmp	r2, r0
 801ac06:	b289      	uxth	r1, r1
 801ac08:	dd05      	ble.n	801ac16 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801ac0a:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801ac0e:	682b      	ldr	r3, [r5, #0]
 801ac10:	3301      	adds	r3, #1
 801ac12:	602b      	str	r3, [r5, #0]
 801ac14:	e7f3      	b.n	801abfe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801ac16:	b005      	add	sp, #20
 801ac18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ac1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801ac1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ac20:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801ac24:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 801ac28:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 801ac2c:	2400      	movs	r4, #0
 801ac2e:	8014      	strh	r4, [r2, #0]
 801ac30:	701c      	strb	r4, [r3, #0]
 801ac32:	f888 4000 	strb.w	r4, [r8]
 801ac36:	f88c 4000 	strb.w	r4, [ip]
 801ac3a:	f88e 4000 	strb.w	r4, [lr]
 801ac3e:	703c      	strb	r4, [r7, #0]
 801ac40:	6804      	ldr	r4, [r0, #0]
 801ac42:	b1a4      	cbz	r4, 801ac6e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801ac44:	8824      	ldrh	r4, [r4, #0]
 801ac46:	f04f 0901 	mov.w	r9, #1
 801ac4a:	b314      	cbz	r4, 801ac92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801ac4c:	2c2b      	cmp	r4, #43	; 0x2b
 801ac4e:	d001      	beq.n	801ac54 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801ac50:	2c20      	cmp	r4, #32
 801ac52:	d110      	bne.n	801ac76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801ac54:	8014      	strh	r4, [r2, #0]
 801ac56:	6804      	ldr	r4, [r0, #0]
 801ac58:	b10c      	cbz	r4, 801ac5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 801ac5a:	3402      	adds	r4, #2
 801ac5c:	6004      	str	r4, [r0, #0]
 801ac5e:	680c      	ldr	r4, [r1, #0]
 801ac60:	b10c      	cbz	r4, 801ac66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 801ac62:	3401      	adds	r4, #1
 801ac64:	600c      	str	r4, [r1, #0]
 801ac66:	6804      	ldr	r4, [r0, #0]
 801ac68:	b17c      	cbz	r4, 801ac8a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 801ac6a:	8824      	ldrh	r4, [r4, #0]
 801ac6c:	e7ed      	b.n	801ac4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801ac6e:	680c      	ldr	r4, [r1, #0]
 801ac70:	b17c      	cbz	r4, 801ac92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801ac72:	7824      	ldrb	r4, [r4, #0]
 801ac74:	e7e7      	b.n	801ac46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801ac76:	2c2d      	cmp	r4, #45	; 0x2d
 801ac78:	d102      	bne.n	801ac80 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 801ac7a:	f883 9000 	strb.w	r9, [r3]
 801ac7e:	e7ea      	b.n	801ac56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801ac80:	2c23      	cmp	r4, #35	; 0x23
 801ac82:	d107      	bne.n	801ac94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801ac84:	f888 9000 	strb.w	r9, [r8]
 801ac88:	e7e5      	b.n	801ac56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801ac8a:	680c      	ldr	r4, [r1, #0]
 801ac8c:	b10c      	cbz	r4, 801ac92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801ac8e:	7824      	ldrb	r4, [r4, #0]
 801ac90:	e7db      	b.n	801ac4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801ac92:	2400      	movs	r4, #0
 801ac94:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801ac98:	2b09      	cmp	r3, #9
 801ac9a:	d901      	bls.n	801aca0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801ac9c:	2c2a      	cmp	r4, #42	; 0x2a
 801ac9e:	d122      	bne.n	801ace6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801aca0:	2301      	movs	r3, #1
 801aca2:	2c30      	cmp	r4, #48	; 0x30
 801aca4:	f88e 3000 	strb.w	r3, [lr]
 801aca8:	d10d      	bne.n	801acc6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801acaa:	f88c 3000 	strb.w	r3, [ip]
 801acae:	6803      	ldr	r3, [r0, #0]
 801acb0:	b10b      	cbz	r3, 801acb6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 801acb2:	3302      	adds	r3, #2
 801acb4:	6003      	str	r3, [r0, #0]
 801acb6:	680b      	ldr	r3, [r1, #0]
 801acb8:	b10b      	cbz	r3, 801acbe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 801acba:	3301      	adds	r3, #1
 801acbc:	600b      	str	r3, [r1, #0]
 801acbe:	6803      	ldr	r3, [r0, #0]
 801acc0:	2b00      	cmp	r3, #0
 801acc2:	d02f      	beq.n	801ad24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801acc4:	881c      	ldrh	r4, [r3, #0]
 801acc6:	2c2a      	cmp	r4, #42	; 0x2a
 801acc8:	d135      	bne.n	801ad36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801acca:	f04f 33ff 	mov.w	r3, #4294967295
 801acce:	6033      	str	r3, [r6, #0]
 801acd0:	6803      	ldr	r3, [r0, #0]
 801acd2:	b10b      	cbz	r3, 801acd8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801acd4:	3302      	adds	r3, #2
 801acd6:	6003      	str	r3, [r0, #0]
 801acd8:	680b      	ldr	r3, [r1, #0]
 801acda:	b10b      	cbz	r3, 801ace0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801acdc:	3301      	adds	r3, #1
 801acde:	600b      	str	r3, [r1, #0]
 801ace0:	6803      	ldr	r3, [r0, #0]
 801ace2:	b31b      	cbz	r3, 801ad2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801ace4:	881c      	ldrh	r4, [r3, #0]
 801ace6:	2c2e      	cmp	r4, #46	; 0x2e
 801ace8:	d11a      	bne.n	801ad20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801acea:	2301      	movs	r3, #1
 801acec:	703b      	strb	r3, [r7, #0]
 801acee:	6803      	ldr	r3, [r0, #0]
 801acf0:	b10b      	cbz	r3, 801acf6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801acf2:	3302      	adds	r3, #2
 801acf4:	6003      	str	r3, [r0, #0]
 801acf6:	680b      	ldr	r3, [r1, #0]
 801acf8:	b10b      	cbz	r3, 801acfe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 801acfa:	3301      	adds	r3, #1
 801acfc:	600b      	str	r3, [r1, #0]
 801acfe:	6803      	ldr	r3, [r0, #0]
 801ad00:	2b00      	cmp	r3, #0
 801ad02:	d036      	beq.n	801ad72 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801ad04:	881b      	ldrh	r3, [r3, #0]
 801ad06:	2b2a      	cmp	r3, #42	; 0x2a
 801ad08:	d137      	bne.n	801ad7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801ad0a:	f04f 33ff 	mov.w	r3, #4294967295
 801ad0e:	602b      	str	r3, [r5, #0]
 801ad10:	6803      	ldr	r3, [r0, #0]
 801ad12:	b10b      	cbz	r3, 801ad18 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801ad14:	3302      	adds	r3, #2
 801ad16:	6003      	str	r3, [r0, #0]
 801ad18:	680b      	ldr	r3, [r1, #0]
 801ad1a:	b10b      	cbz	r3, 801ad20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801ad1c:	3301      	adds	r3, #1
 801ad1e:	600b      	str	r3, [r1, #0]
 801ad20:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801ad24:	680c      	ldr	r4, [r1, #0]
 801ad26:	b134      	cbz	r4, 801ad36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801ad28:	7824      	ldrb	r4, [r4, #0]
 801ad2a:	e7cc      	b.n	801acc6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801ad2c:	680b      	ldr	r3, [r1, #0]
 801ad2e:	2b00      	cmp	r3, #0
 801ad30:	d0f6      	beq.n	801ad20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801ad32:	781c      	ldrb	r4, [r3, #0]
 801ad34:	e7d7      	b.n	801ace6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801ad36:	2300      	movs	r3, #0
 801ad38:	6033      	str	r3, [r6, #0]
 801ad3a:	220a      	movs	r2, #10
 801ad3c:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 801ad40:	fa1f f38c 	uxth.w	r3, ip
 801ad44:	2b09      	cmp	r3, #9
 801ad46:	d8ce      	bhi.n	801ace6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801ad48:	6833      	ldr	r3, [r6, #0]
 801ad4a:	fb02 c303 	mla	r3, r2, r3, ip
 801ad4e:	6033      	str	r3, [r6, #0]
 801ad50:	6803      	ldr	r3, [r0, #0]
 801ad52:	b10b      	cbz	r3, 801ad58 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801ad54:	3302      	adds	r3, #2
 801ad56:	6003      	str	r3, [r0, #0]
 801ad58:	680b      	ldr	r3, [r1, #0]
 801ad5a:	b10b      	cbz	r3, 801ad60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801ad5c:	3301      	adds	r3, #1
 801ad5e:	600b      	str	r3, [r1, #0]
 801ad60:	6803      	ldr	r3, [r0, #0]
 801ad62:	b10b      	cbz	r3, 801ad68 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801ad64:	881c      	ldrh	r4, [r3, #0]
 801ad66:	e7e9      	b.n	801ad3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801ad68:	680c      	ldr	r4, [r1, #0]
 801ad6a:	2c00      	cmp	r4, #0
 801ad6c:	d0e6      	beq.n	801ad3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801ad6e:	7824      	ldrb	r4, [r4, #0]
 801ad70:	e7e4      	b.n	801ad3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801ad72:	680b      	ldr	r3, [r1, #0]
 801ad74:	b10b      	cbz	r3, 801ad7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801ad76:	781b      	ldrb	r3, [r3, #0]
 801ad78:	e7c5      	b.n	801ad06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 801ad7a:	2200      	movs	r2, #0
 801ad7c:	602a      	str	r2, [r5, #0]
 801ad7e:	240a      	movs	r4, #10
 801ad80:	3b30      	subs	r3, #48	; 0x30
 801ad82:	b29e      	uxth	r6, r3
 801ad84:	2e09      	cmp	r6, #9
 801ad86:	682a      	ldr	r2, [r5, #0]
 801ad88:	d813      	bhi.n	801adb2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 801ad8a:	fb04 3302 	mla	r3, r4, r2, r3
 801ad8e:	602b      	str	r3, [r5, #0]
 801ad90:	6803      	ldr	r3, [r0, #0]
 801ad92:	b10b      	cbz	r3, 801ad98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801ad94:	3302      	adds	r3, #2
 801ad96:	6003      	str	r3, [r0, #0]
 801ad98:	680b      	ldr	r3, [r1, #0]
 801ad9a:	b10b      	cbz	r3, 801ada0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801ad9c:	3301      	adds	r3, #1
 801ad9e:	600b      	str	r3, [r1, #0]
 801ada0:	6803      	ldr	r3, [r0, #0]
 801ada2:	b10b      	cbz	r3, 801ada8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801ada4:	881b      	ldrh	r3, [r3, #0]
 801ada6:	e7eb      	b.n	801ad80 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801ada8:	680b      	ldr	r3, [r1, #0]
 801adaa:	2b00      	cmp	r3, #0
 801adac:	d0e8      	beq.n	801ad80 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801adae:	781b      	ldrb	r3, [r3, #0]
 801adb0:	e7e6      	b.n	801ad80 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801adb2:	2a06      	cmp	r2, #6
 801adb4:	bfa8      	it	ge
 801adb6:	2206      	movge	r2, #6
 801adb8:	602a      	str	r2, [r5, #0]
 801adba:	e7b1      	b.n	801ad20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801adbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801adbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801adc0:	b0a3      	sub	sp, #140	; 0x8c
 801adc2:	2600      	movs	r6, #0
 801adc4:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 801adc8:	4607      	mov	r7, r0
 801adca:	4688      	mov	r8, r1
 801adcc:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801add0:	4631      	mov	r1, r6
 801add2:	2242      	movs	r2, #66	; 0x42
 801add4:	4648      	mov	r0, r9
 801add6:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 801add8:	960d      	str	r6, [sp, #52]	; 0x34
 801adda:	f00c fe7f 	bl	8027adc <memset>
 801adde:	b15f      	cbz	r7, 801adf8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801ade0:	f108 3aff 	add.w	sl, r8, #4294967295
 801ade4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ade6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ade8:	b152      	cbz	r2, 801ae00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 801adea:	8812      	ldrh	r2, [r2, #0]
 801adec:	b10a      	cbz	r2, 801adf2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801adee:	459a      	cmp	sl, r3
 801adf0:	dc2e      	bgt.n	801ae50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801adf2:	2200      	movs	r2, #0
 801adf4:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801adf8:	4638      	mov	r0, r7
 801adfa:	b023      	add	sp, #140	; 0x8c
 801adfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ae00:	9a08      	ldr	r2, [sp, #32]
 801ae02:	2a00      	cmp	r2, #0
 801ae04:	d0f5      	beq.n	801adf2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801ae06:	7812      	ldrb	r2, [r2, #0]
 801ae08:	e7f0      	b.n	801adec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 801ae0a:	2d00      	cmp	r5, #0
 801ae0c:	d0ea      	beq.n	801ade4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801ae0e:	782a      	ldrb	r2, [r5, #0]
 801ae10:	b142      	cbz	r2, 801ae24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 801ae12:	2a25      	cmp	r2, #37	; 0x25
 801ae14:	d001      	beq.n	801ae1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 801ae16:	459a      	cmp	sl, r3
 801ae18:	dc08      	bgt.n	801ae2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 801ae1a:	f1bb 0f00 	cmp.w	fp, #0
 801ae1e:	d121      	bne.n	801ae64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801ae20:	2d00      	cmp	r5, #0
 801ae22:	d0df      	beq.n	801ade4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801ae24:	782a      	ldrb	r2, [r5, #0]
 801ae26:	f04f 0b00 	mov.w	fp, #0
 801ae2a:	e01d      	b.n	801ae68 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801ae2c:	f1bb 0f00 	cmp.w	fp, #0
 801ae30:	d078      	beq.n	801af24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 801ae32:	f8bb 2000 	ldrh.w	r2, [fp]
 801ae36:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801ae3a:	f1bb 0f00 	cmp.w	fp, #0
 801ae3e:	d002      	beq.n	801ae46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801ae40:	f10b 0202 	add.w	r2, fp, #2
 801ae44:	9209      	str	r2, [sp, #36]	; 0x24
 801ae46:	b10d      	cbz	r5, 801ae4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 801ae48:	3501      	adds	r5, #1
 801ae4a:	9508      	str	r5, [sp, #32]
 801ae4c:	3301      	adds	r3, #1
 801ae4e:	930d      	str	r3, [sp, #52]	; 0x34
 801ae50:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 801ae54:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ae56:	f1bb 0f00 	cmp.w	fp, #0
 801ae5a:	d0d6      	beq.n	801ae0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801ae5c:	f8bb 2000 	ldrh.w	r2, [fp]
 801ae60:	2a00      	cmp	r2, #0
 801ae62:	d1d6      	bne.n	801ae12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801ae64:	f8bb 2000 	ldrh.w	r2, [fp]
 801ae68:	2a00      	cmp	r2, #0
 801ae6a:	d0bb      	beq.n	801ade4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801ae6c:	459a      	cmp	sl, r3
 801ae6e:	ddb9      	ble.n	801ade4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801ae70:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 801ae74:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 801ae78:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 801ae7c:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 801ae80:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 801ae84:	960e      	str	r6, [sp, #56]	; 0x38
 801ae86:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 801ae8a:	960f      	str	r6, [sp, #60]	; 0x3c
 801ae8c:	f1bb 0f00 	cmp.w	fp, #0
 801ae90:	d002      	beq.n	801ae98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 801ae92:	f10b 0302 	add.w	r3, fp, #2
 801ae96:	9309      	str	r3, [sp, #36]	; 0x24
 801ae98:	b10d      	cbz	r5, 801ae9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 801ae9a:	1c6b      	adds	r3, r5, #1
 801ae9c:	9308      	str	r3, [sp, #32]
 801ae9e:	ab0f      	add	r3, sp, #60	; 0x3c
 801aea0:	9305      	str	r3, [sp, #20]
 801aea2:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801aea6:	9304      	str	r3, [sp, #16]
 801aea8:	ab0e      	add	r3, sp, #56	; 0x38
 801aeaa:	9303      	str	r3, [sp, #12]
 801aeac:	ab0c      	add	r3, sp, #48	; 0x30
 801aeae:	9302      	str	r3, [sp, #8]
 801aeb0:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801aeb4:	9301      	str	r3, [sp, #4]
 801aeb6:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801aeba:	9300      	str	r3, [sp, #0]
 801aebc:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801aec0:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801aec4:	a908      	add	r1, sp, #32
 801aec6:	a809      	add	r0, sp, #36	; 0x24
 801aec8:	f7ff fea8 	bl	801ac1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801aecc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801aece:	2b00      	cmp	r3, #0
 801aed0:	bfbe      	ittt	lt
 801aed2:	6823      	ldrlt	r3, [r4, #0]
 801aed4:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801aed8:	930e      	strlt	r3, [sp, #56]	; 0x38
 801aeda:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801aedc:	bfb8      	it	lt
 801aede:	3404      	addlt	r4, #4
 801aee0:	2b00      	cmp	r3, #0
 801aee2:	bfb8      	it	lt
 801aee4:	6823      	ldrlt	r3, [r4, #0]
 801aee6:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801aeea:	bfbe      	ittt	lt
 801aeec:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801aef0:	930f      	strlt	r3, [sp, #60]	; 0x3c
 801aef2:	3404      	addlt	r4, #4
 801aef4:	b1d9      	cbz	r1, 801af2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 801aef6:	880b      	ldrh	r3, [r1, #0]
 801aef8:	2b69      	cmp	r3, #105	; 0x69
 801aefa:	d01f      	beq.n	801af3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801aefc:	d82f      	bhi.n	801af5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 801aefe:	2b58      	cmp	r3, #88	; 0x58
 801af00:	d01c      	beq.n	801af3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801af02:	d818      	bhi.n	801af36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801af04:	2b25      	cmp	r3, #37	; 0x25
 801af06:	d034      	beq.n	801af72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801af08:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801af0c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801af0e:	f1bb 0f00 	cmp.w	fp, #0
 801af12:	f000 80b8 	beq.w	801b086 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 801af16:	f8bb 5000 	ldrh.w	r5, [fp]
 801af1a:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801af1e:	3301      	adds	r3, #1
 801af20:	930d      	str	r3, [sp, #52]	; 0x34
 801af22:	e029      	b.n	801af78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801af24:	b10d      	cbz	r5, 801af2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 801af26:	782a      	ldrb	r2, [r5, #0]
 801af28:	e785      	b.n	801ae36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801af2a:	462a      	mov	r2, r5
 801af2c:	e783      	b.n	801ae36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801af2e:	2a00      	cmp	r2, #0
 801af30:	d0ea      	beq.n	801af08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801af32:	7813      	ldrb	r3, [r2, #0]
 801af34:	e7e0      	b.n	801aef8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 801af36:	3b63      	subs	r3, #99	; 0x63
 801af38:	2b01      	cmp	r3, #1
 801af3a:	d8e5      	bhi.n	801af08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801af3c:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 801af40:	b329      	cbz	r1, 801af8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 801af42:	880b      	ldrh	r3, [r1, #0]
 801af44:	2b69      	cmp	r3, #105	; 0x69
 801af46:	d063      	beq.n	801b010 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801af48:	d825      	bhi.n	801af96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 801af4a:	2b63      	cmp	r3, #99	; 0x63
 801af4c:	d038      	beq.n	801afc0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 801af4e:	2b64      	cmp	r3, #100	; 0x64
 801af50:	d05e      	beq.n	801b010 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801af52:	2b58      	cmp	r3, #88	; 0x58
 801af54:	d07b      	beq.n	801b04e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 801af56:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 801af5a:	4625      	mov	r5, r4
 801af5c:	e036      	b.n	801afcc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801af5e:	2b73      	cmp	r3, #115	; 0x73
 801af60:	d0ec      	beq.n	801af3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801af62:	d802      	bhi.n	801af6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801af64:	2b6f      	cmp	r3, #111	; 0x6f
 801af66:	d1cf      	bne.n	801af08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801af68:	e7e8      	b.n	801af3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801af6a:	2b75      	cmp	r3, #117	; 0x75
 801af6c:	d0e6      	beq.n	801af3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801af6e:	2b78      	cmp	r3, #120	; 0x78
 801af70:	e7f9      	b.n	801af66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 801af72:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801af74:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801af78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801af7a:	b10b      	cbz	r3, 801af80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801af7c:	3302      	adds	r3, #2
 801af7e:	9309      	str	r3, [sp, #36]	; 0x24
 801af80:	9b08      	ldr	r3, [sp, #32]
 801af82:	2b00      	cmp	r3, #0
 801af84:	f43f af2e 	beq.w	801ade4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801af88:	3301      	adds	r3, #1
 801af8a:	9308      	str	r3, [sp, #32]
 801af8c:	e72a      	b.n	801ade4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801af8e:	2a00      	cmp	r2, #0
 801af90:	d0e1      	beq.n	801af56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801af92:	7813      	ldrb	r3, [r2, #0]
 801af94:	e7d6      	b.n	801af44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 801af96:	2b73      	cmp	r3, #115	; 0x73
 801af98:	d036      	beq.n	801b008 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 801af9a:	d807      	bhi.n	801afac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801af9c:	2b6f      	cmp	r3, #111	; 0x6f
 801af9e:	d1da      	bne.n	801af56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801afa0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801afa2:	1d25      	adds	r5, r4, #4
 801afa4:	eba8 0202 	sub.w	r2, r8, r2
 801afa8:	2308      	movs	r3, #8
 801afaa:	e04a      	b.n	801b042 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801afac:	2b75      	cmp	r3, #117	; 0x75
 801afae:	d043      	beq.n	801b038 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801afb0:	2b78      	cmp	r3, #120	; 0x78
 801afb2:	d1d0      	bne.n	801af56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801afb4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801afb6:	1d25      	adds	r5, r4, #4
 801afb8:	eba8 0202 	sub.w	r2, r8, r2
 801afbc:	2310      	movs	r3, #16
 801afbe:	e040      	b.n	801b042 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801afc0:	7823      	ldrb	r3, [r4, #0]
 801afc2:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801afc6:	1d25      	adds	r5, r4, #4
 801afc8:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801afcc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801afce:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801afd2:	2b00      	cmp	r3, #0
 801afd4:	d052      	beq.n	801b07c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 801afd6:	881a      	ldrh	r2, [r3, #0]
 801afd8:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801afdc:	a80d      	add	r0, sp, #52	; 0x34
 801afde:	9005      	str	r0, [sp, #20]
 801afe0:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801afe4:	9004      	str	r0, [sp, #16]
 801afe6:	980e      	ldr	r0, [sp, #56]	; 0x38
 801afe8:	9003      	str	r0, [sp, #12]
 801afea:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801afee:	9002      	str	r0, [sp, #8]
 801aff0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801aff2:	9001      	str	r0, [sp, #4]
 801aff4:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801aff8:	9000      	str	r0, [sp, #0]
 801affa:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801affe:	a810      	add	r0, sp, #64	; 0x40
 801b000:	f7ff fd49 	bl	801aa96 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801b004:	462c      	mov	r4, r5
 801b006:	e7b7      	b.n	801af78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801b008:	6823      	ldr	r3, [r4, #0]
 801b00a:	1d25      	adds	r5, r4, #4
 801b00c:	9310      	str	r3, [sp, #64]	; 0x40
 801b00e:	e7dd      	b.n	801afcc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801b010:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801b012:	6820      	ldr	r0, [r4, #0]
 801b014:	eba8 0202 	sub.w	r2, r8, r2
 801b018:	230a      	movs	r3, #10
 801b01a:	b292      	uxth	r2, r2
 801b01c:	4649      	mov	r1, r9
 801b01e:	f7ff fcf9 	bl	801aa14 <_ZN8touchgfx7Unicode4itoaElPtti>
 801b022:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801b026:	2b2d      	cmp	r3, #45	; 0x2d
 801b028:	f104 0504 	add.w	r5, r4, #4
 801b02c:	d1ce      	bne.n	801afcc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801b02e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801b032:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b034:	3302      	adds	r3, #2
 801b036:	e7e9      	b.n	801b00c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801b038:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801b03a:	1d25      	adds	r5, r4, #4
 801b03c:	eba8 0202 	sub.w	r2, r8, r2
 801b040:	230a      	movs	r3, #10
 801b042:	b292      	uxth	r2, r2
 801b044:	4649      	mov	r1, r9
 801b046:	6820      	ldr	r0, [r4, #0]
 801b048:	f7ff fcc6 	bl	801a9d8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 801b04c:	e7be      	b.n	801afcc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801b04e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801b050:	6820      	ldr	r0, [r4, #0]
 801b052:	eba8 0202 	sub.w	r2, r8, r2
 801b056:	b292      	uxth	r2, r2
 801b058:	2310      	movs	r3, #16
 801b05a:	4649      	mov	r1, r9
 801b05c:	f7ff fcbc 	bl	801a9d8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 801b060:	1d25      	adds	r5, r4, #4
 801b062:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 801b066:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 801b06a:	2b00      	cmp	r3, #0
 801b06c:	d0ae      	beq.n	801afcc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801b06e:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 801b072:	2919      	cmp	r1, #25
 801b074:	d8f7      	bhi.n	801b066 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801b076:	3b20      	subs	r3, #32
 801b078:	8013      	strh	r3, [r2, #0]
 801b07a:	e7f4      	b.n	801b066 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801b07c:	9a08      	ldr	r2, [sp, #32]
 801b07e:	2a00      	cmp	r2, #0
 801b080:	d0aa      	beq.n	801afd8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801b082:	7812      	ldrb	r2, [r2, #0]
 801b084:	e7a8      	b.n	801afd8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801b086:	2d00      	cmp	r5, #0
 801b088:	f43f af47 	beq.w	801af1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801b08c:	782d      	ldrb	r5, [r5, #0]
 801b08e:	e744      	b.n	801af1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801b090 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list>:
 801b090:	b507      	push	{r0, r1, r2, lr}
 801b092:	9300      	str	r3, [sp, #0]
 801b094:	2300      	movs	r3, #0
 801b096:	f7ff fe91 	bl	801adbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801b09a:	b003      	add	sp, #12
 801b09c:	f85d fb04 	ldr.w	pc, [sp], #4

0801b0a0 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>:
 801b0a0:	b40c      	push	{r2, r3}
 801b0a2:	b507      	push	{r0, r1, r2, lr}
 801b0a4:	ab04      	add	r3, sp, #16
 801b0a6:	f853 2b04 	ldr.w	r2, [r3], #4
 801b0aa:	9301      	str	r3, [sp, #4]
 801b0ac:	f7ff fff0 	bl	801b090 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list>
 801b0b0:	b003      	add	sp, #12
 801b0b2:	f85d eb04 	ldr.w	lr, [sp], #4
 801b0b6:	b002      	add	sp, #8
 801b0b8:	4770      	bx	lr

0801b0ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801b0ba:	b507      	push	{r0, r1, r2, lr}
 801b0bc:	9300      	str	r3, [sp, #0]
 801b0be:	4613      	mov	r3, r2
 801b0c0:	2200      	movs	r2, #0
 801b0c2:	f7ff fe7b 	bl	801adbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801b0c6:	b003      	add	sp, #12
 801b0c8:	f85d fb04 	ldr.w	pc, [sp], #4

0801b0cc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801b0cc:	b40c      	push	{r2, r3}
 801b0ce:	b507      	push	{r0, r1, r2, lr}
 801b0d0:	ab04      	add	r3, sp, #16
 801b0d2:	f853 2b04 	ldr.w	r2, [r3], #4
 801b0d6:	9301      	str	r3, [sp, #4]
 801b0d8:	f7ff ffef 	bl	801b0ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801b0dc:	b003      	add	sp, #12
 801b0de:	f85d eb04 	ldr.w	lr, [sp], #4
 801b0e2:	b002      	add	sp, #8
 801b0e4:	4770      	bx	lr
	...

0801b0e8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 801b0e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b0ec:	b0c3      	sub	sp, #268	; 0x10c
 801b0ee:	2600      	movs	r6, #0
 801b0f0:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 801b0f4:	4607      	mov	r7, r0
 801b0f6:	4689      	mov	r9, r1
 801b0f8:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801b0fc:	4631      	mov	r1, r6
 801b0fe:	22c8      	movs	r2, #200	; 0xc8
 801b100:	4640      	mov	r0, r8
 801b102:	f8dd a130 	ldr.w	sl, [sp, #304]	; 0x130
 801b106:	960c      	str	r6, [sp, #48]	; 0x30
 801b108:	f00c fce8 	bl	8027adc <memset>
 801b10c:	b16f      	cbz	r7, 801b12a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x42>
 801b10e:	f04f 0b0a 	mov.w	fp, #10
 801b112:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b114:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b116:	b162      	cbz	r2, 801b132 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x4a>
 801b118:	8812      	ldrh	r2, [r2, #0]
 801b11a:	b11a      	cbz	r2, 801b124 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3c>
 801b11c:	f109 31ff 	add.w	r1, r9, #4294967295
 801b120:	4299      	cmp	r1, r3
 801b122:	dc26      	bgt.n	801b172 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8a>
 801b124:	2200      	movs	r2, #0
 801b126:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801b12a:	4638      	mov	r0, r7
 801b12c:	b043      	add	sp, #268	; 0x10c
 801b12e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b132:	9a08      	ldr	r2, [sp, #32]
 801b134:	2a00      	cmp	r2, #0
 801b136:	d0f5      	beq.n	801b124 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3c>
 801b138:	7812      	ldrb	r2, [r2, #0]
 801b13a:	e7ee      	b.n	801b11a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x32>
 801b13c:	2c00      	cmp	r4, #0
 801b13e:	d0e8      	beq.n	801b112 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2a>
 801b140:	7822      	ldrb	r2, [r4, #0]
 801b142:	b132      	cbz	r2, 801b152 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6a>
 801b144:	2a25      	cmp	r2, #37	; 0x25
 801b146:	d001      	beq.n	801b14c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x64>
 801b148:	4299      	cmp	r1, r3
 801b14a:	dc05      	bgt.n	801b158 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x70>
 801b14c:	b9cd      	cbnz	r5, 801b182 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x9a>
 801b14e:	2c00      	cmp	r4, #0
 801b150:	d0df      	beq.n	801b112 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2a>
 801b152:	7822      	ldrb	r2, [r4, #0]
 801b154:	2500      	movs	r5, #0
 801b156:	e015      	b.n	801b184 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x9c>
 801b158:	2d00      	cmp	r5, #0
 801b15a:	d073      	beq.n	801b244 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x15c>
 801b15c:	882a      	ldrh	r2, [r5, #0]
 801b15e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801b162:	b10d      	cbz	r5, 801b168 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x80>
 801b164:	3502      	adds	r5, #2
 801b166:	9509      	str	r5, [sp, #36]	; 0x24
 801b168:	b10c      	cbz	r4, 801b16e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x86>
 801b16a:	3401      	adds	r4, #1
 801b16c:	9408      	str	r4, [sp, #32]
 801b16e:	3301      	adds	r3, #1
 801b170:	930c      	str	r3, [sp, #48]	; 0x30
 801b172:	e9dd 4508 	ldrd	r4, r5, [sp, #32]
 801b176:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b178:	2d00      	cmp	r5, #0
 801b17a:	d0df      	beq.n	801b13c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x54>
 801b17c:	882a      	ldrh	r2, [r5, #0]
 801b17e:	2a00      	cmp	r2, #0
 801b180:	d1e0      	bne.n	801b144 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5c>
 801b182:	882a      	ldrh	r2, [r5, #0]
 801b184:	2a00      	cmp	r2, #0
 801b186:	d0c4      	beq.n	801b112 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2a>
 801b188:	4299      	cmp	r1, r3
 801b18a:	ddc2      	ble.n	801b112 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2a>
 801b18c:	2300      	movs	r3, #0
 801b18e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801b192:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801b196:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801b19a:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 801b19e:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801b1a2:	930d      	str	r3, [sp, #52]	; 0x34
 801b1a4:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 801b1a8:	930e      	str	r3, [sp, #56]	; 0x38
 801b1aa:	b10d      	cbz	r5, 801b1b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xc8>
 801b1ac:	1cab      	adds	r3, r5, #2
 801b1ae:	9309      	str	r3, [sp, #36]	; 0x24
 801b1b0:	b10c      	cbz	r4, 801b1b6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xce>
 801b1b2:	1c63      	adds	r3, r4, #1
 801b1b4:	9308      	str	r3, [sp, #32]
 801b1b6:	ab0e      	add	r3, sp, #56	; 0x38
 801b1b8:	9305      	str	r3, [sp, #20]
 801b1ba:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801b1be:	9304      	str	r3, [sp, #16]
 801b1c0:	ab0d      	add	r3, sp, #52	; 0x34
 801b1c2:	9303      	str	r3, [sp, #12]
 801b1c4:	ab0b      	add	r3, sp, #44	; 0x2c
 801b1c6:	9302      	str	r3, [sp, #8]
 801b1c8:	f10d 032b 	add.w	r3, sp, #43	; 0x2b
 801b1cc:	9301      	str	r3, [sp, #4]
 801b1ce:	f10d 032a 	add.w	r3, sp, #42	; 0x2a
 801b1d2:	9300      	str	r3, [sp, #0]
 801b1d4:	f10d 022e 	add.w	r2, sp, #46	; 0x2e
 801b1d8:	f10d 0329 	add.w	r3, sp, #41	; 0x29
 801b1dc:	a908      	add	r1, sp, #32
 801b1de:	a809      	add	r0, sp, #36	; 0x24
 801b1e0:	f7ff fd1c 	bl	801ac1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801b1e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b1e6:	2b00      	cmp	r3, #0
 801b1e8:	da0b      	bge.n	801b202 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x11a>
 801b1ea:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 801b1ee:	edd3 7a00 	vldr	s15, [r3]
 801b1f2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801b1f6:	3601      	adds	r6, #1
 801b1f8:	ee17 3a90 	vmov	r3, s15
 801b1fc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b200:	930d      	str	r3, [sp, #52]	; 0x34
 801b202:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b204:	2b00      	cmp	r3, #0
 801b206:	da0b      	bge.n	801b220 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x138>
 801b208:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 801b20c:	edd3 7a00 	vldr	s15, [r3]
 801b210:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801b214:	3601      	adds	r6, #1
 801b216:	ee17 3a90 	vmov	r3, s15
 801b21a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b21e:	930e      	str	r3, [sp, #56]	; 0x38
 801b220:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b222:	b1a3      	cbz	r3, 801b24e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x166>
 801b224:	881a      	ldrh	r2, [r3, #0]
 801b226:	2a25      	cmp	r2, #37	; 0x25
 801b228:	d016      	beq.n	801b258 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x170>
 801b22a:	2a66      	cmp	r2, #102	; 0x66
 801b22c:	d01a      	beq.n	801b264 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17c>
 801b22e:	e9cd 4508 	strd	r4, r5, [sp, #32]
 801b232:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b234:	2d00      	cmp	r5, #0
 801b236:	f000 80fd 	beq.w	801b434 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34c>
 801b23a:	882c      	ldrh	r4, [r5, #0]
 801b23c:	f827 4013 	strh.w	r4, [r7, r3, lsl #1]
 801b240:	3301      	adds	r3, #1
 801b242:	e00d      	b.n	801b260 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x178>
 801b244:	b10c      	cbz	r4, 801b24a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x162>
 801b246:	7822      	ldrb	r2, [r4, #0]
 801b248:	e789      	b.n	801b15e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x76>
 801b24a:	4622      	mov	r2, r4
 801b24c:	e787      	b.n	801b15e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x76>
 801b24e:	9b08      	ldr	r3, [sp, #32]
 801b250:	2b00      	cmp	r3, #0
 801b252:	d0ec      	beq.n	801b22e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x146>
 801b254:	781a      	ldrb	r2, [r3, #0]
 801b256:	e7e6      	b.n	801b226 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x13e>
 801b258:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b25a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801b25e:	3302      	adds	r3, #2
 801b260:	930c      	str	r3, [sp, #48]	; 0x30
 801b262:	e04b      	b.n	801b2fc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x214>
 801b264:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 801b268:	ed93 7a00 	vldr	s14, [r3]
 801b26c:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 801b270:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
 801b274:	3601      	adds	r6, #1
 801b276:	b923      	cbnz	r3, 801b282 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 801b278:	2301      	movs	r3, #1
 801b27a:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 801b27e:	2306      	movs	r3, #6
 801b280:	930e      	str	r3, [sp, #56]	; 0x38
 801b282:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 801b286:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b28a:	bf48      	it	mi
 801b28c:	eeb1 7a47 	vnegmi.f32	s14, s14
 801b290:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 801b294:	ee77 6a67 	vsub.f32	s13, s14, s15
 801b298:	bf48      	it	mi
 801b29a:	232d      	movmi	r3, #45	; 0x2d
 801b29c:	eef4 6a47 	vcmp.f32	s13, s14
 801b2a0:	bf48      	it	mi
 801b2a2:	f8ad 302e 	strhmi.w	r3, [sp, #46]	; 0x2e
 801b2a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b2aa:	d132      	bne.n	801b312 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x22a>
 801b2ac:	ee77 7a27 	vadd.f32	s15, s14, s15
 801b2b0:	eef4 7a47 	vcmp.f32	s15, s14
 801b2b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b2b8:	d12b      	bne.n	801b312 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x22a>
 801b2ba:	4b61      	ldr	r3, [pc, #388]	; (801b440 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x358>)
 801b2bc:	9310      	str	r3, [sp, #64]	; 0x40
 801b2be:	2366      	movs	r3, #102	; 0x66
 801b2c0:	9311      	str	r3, [sp, #68]	; 0x44
 801b2c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b2c4:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801b2c8:	2b00      	cmp	r3, #0
 801b2ca:	f000 80ad 	beq.w	801b428 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x340>
 801b2ce:	881a      	ldrh	r2, [r3, #0]
 801b2d0:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 801b2d4:	a80c      	add	r0, sp, #48	; 0x30
 801b2d6:	9005      	str	r0, [sp, #20]
 801b2d8:	f89d 0029 	ldrb.w	r0, [sp, #41]	; 0x29
 801b2dc:	9004      	str	r0, [sp, #16]
 801b2de:	980d      	ldr	r0, [sp, #52]	; 0x34
 801b2e0:	9003      	str	r0, [sp, #12]
 801b2e2:	f89d 002c 	ldrb.w	r0, [sp, #44]	; 0x2c
 801b2e6:	9002      	str	r0, [sp, #8]
 801b2e8:	980e      	ldr	r0, [sp, #56]	; 0x38
 801b2ea:	9001      	str	r0, [sp, #4]
 801b2ec:	f89d 002b 	ldrb.w	r0, [sp, #43]	; 0x2b
 801b2f0:	9000      	str	r0, [sp, #0]
 801b2f2:	e9cd 9706 	strd	r9, r7, [sp, #24]
 801b2f6:	a80f      	add	r0, sp, #60	; 0x3c
 801b2f8:	f7ff fbcd 	bl	801aa96 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801b2fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b2fe:	b10b      	cbz	r3, 801b304 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21c>
 801b300:	3302      	adds	r3, #2
 801b302:	9309      	str	r3, [sp, #36]	; 0x24
 801b304:	9b08      	ldr	r3, [sp, #32]
 801b306:	2b00      	cmp	r3, #0
 801b308:	f43f af03 	beq.w	801b112 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2a>
 801b30c:	3301      	adds	r3, #1
 801b30e:	9308      	str	r3, [sp, #32]
 801b310:	e6ff      	b.n	801b112 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2a>
 801b312:	eeb4 7a47 	vcmp.f32	s14, s14
 801b316:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b31a:	d10b      	bne.n	801b334 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x24c>
 801b31c:	980e      	ldr	r0, [sp, #56]	; 0x38
 801b31e:	eddf 7a49 	vldr	s15, [pc, #292]	; 801b444 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35c>
 801b322:	2300      	movs	r3, #0
 801b324:	eeb2 6a04 	vmov.f32	s12, #36	; 0x41200000  10.0
 801b328:	4283      	cmp	r3, r0
 801b32a:	da07      	bge.n	801b33c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x254>
 801b32c:	eec7 7a86 	vdiv.f32	s15, s15, s12
 801b330:	3301      	adds	r3, #1
 801b332:	e7f9      	b.n	801b328 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x240>
 801b334:	4b44      	ldr	r3, [pc, #272]	; (801b448 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x360>)
 801b336:	9310      	str	r3, [sp, #64]	; 0x40
 801b338:	236e      	movs	r3, #110	; 0x6e
 801b33a:	e7c1      	b.n	801b2c0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1d8>
 801b33c:	ee77 7a87 	vadd.f32	s15, s15, s14
 801b340:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b344:	eeb0 7a67 	vmov.f32	s14, s15
 801b348:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801b34c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b350:	da27      	bge.n	801b3a2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ba>
 801b352:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b354:	2100      	movs	r1, #0
 801b356:	eba9 0202 	sub.w	r2, r9, r2
 801b35a:	eef6 5a00 	vmov.f32	s11, #96	; 0x3f000000  0.5
 801b35e:	eef4 6ae5 	vcmpe.f32	s13, s11
 801b362:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b366:	b28c      	uxth	r4, r1
 801b368:	db21      	blt.n	801b3ae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c6>
 801b36a:	1a53      	subs	r3, r2, r1
 801b36c:	2b00      	cmp	r3, #0
 801b36e:	dd1e      	ble.n	801b3ae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c6>
 801b370:	2963      	cmp	r1, #99	; 0x63
 801b372:	d01b      	beq.n	801b3ac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c4>
 801b374:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801b378:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801b37c:	ee17 3a10 	vmov	r3, s14
 801b380:	2b09      	cmp	r3, #9
 801b382:	bfa8      	it	ge
 801b384:	2309      	movge	r3, #9
 801b386:	ee07 3a10 	vmov	s14, r3
 801b38a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b38e:	f103 0430 	add.w	r4, r3, #48	; 0x30
 801b392:	f828 4011 	strh.w	r4, [r8, r1, lsl #1]
 801b396:	eee7 7a66 	vfms.f32	s15, s14, s13
 801b39a:	3101      	adds	r1, #1
 801b39c:	eec6 6a86 	vdiv.f32	s13, s13, s12
 801b3a0:	e7dd      	b.n	801b35e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x276>
 801b3a2:	ee66 6a86 	vmul.f32	s13, s13, s12
 801b3a6:	ee87 7a06 	vdiv.f32	s14, s14, s12
 801b3aa:	e7cd      	b.n	801b348 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x260>
 801b3ac:	460c      	mov	r4, r1
 801b3ae:	2a63      	cmp	r2, #99	; 0x63
 801b3b0:	bfd4      	ite	le
 801b3b2:	ebc4 0202 	rsble	r2, r4, r2
 801b3b6:	f1c4 0263 	rsbgt	r2, r4, #99	; 0x63
 801b3ba:	2a00      	cmp	r2, #0
 801b3bc:	dd2f      	ble.n	801b41e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 801b3be:	4603      	mov	r3, r0
 801b3c0:	2501      	movs	r5, #1
 801b3c2:	2b00      	cmp	r3, #0
 801b3c4:	dd0d      	ble.n	801b3e2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2fa>
 801b3c6:	ee67 7a86 	vmul.f32	s15, s15, s12
 801b3ca:	3b01      	subs	r3, #1
 801b3cc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801b3d0:	ee17 1a10 	vmov	r1, s14
 801b3d4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b3d8:	fb0b 1505 	mla	r5, fp, r5, r1
 801b3dc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801b3e0:	e7ef      	b.n	801b3c2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2da>
 801b3e2:	2800      	cmp	r0, #0
 801b3e4:	f100 33ff 	add.w	r3, r0, #4294967295
 801b3e8:	bfac      	ite	ge
 801b3ea:	1a18      	subge	r0, r3, r0
 801b3ec:	4618      	movlt	r0, r3
 801b3ee:	0064      	lsls	r4, r4, #1
 801b3f0:	900e      	str	r0, [sp, #56]	; 0x38
 801b3f2:	230a      	movs	r3, #10
 801b3f4:	b292      	uxth	r2, r2
 801b3f6:	eb08 0104 	add.w	r1, r8, r4
 801b3fa:	4628      	mov	r0, r5
 801b3fc:	f7ff fb0a 	bl	801aa14 <_ZN8touchgfx7Unicode4itoaElPtti>
 801b400:	2d01      	cmp	r5, #1
 801b402:	dc0a      	bgt.n	801b41a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x332>
 801b404:	f89d 302a 	ldrb.w	r3, [sp, #42]	; 0x2a
 801b408:	2b00      	cmp	r3, #0
 801b40a:	bf0c      	ite	eq
 801b40c:	2300      	moveq	r3, #0
 801b40e:	232e      	movne	r3, #46	; 0x2e
 801b410:	aa42      	add	r2, sp, #264	; 0x108
 801b412:	4414      	add	r4, r2
 801b414:	f824 3cc8 	strh.w	r3, [r4, #-200]
 801b418:	e753      	b.n	801b2c2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 801b41a:	232e      	movs	r3, #46	; 0x2e
 801b41c:	e7f8      	b.n	801b410 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x328>
 801b41e:	ab42      	add	r3, sp, #264	; 0x108
 801b420:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 801b424:	2300      	movs	r3, #0
 801b426:	e7f5      	b.n	801b414 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x32c>
 801b428:	9a08      	ldr	r2, [sp, #32]
 801b42a:	2a00      	cmp	r2, #0
 801b42c:	f43f af50 	beq.w	801b2d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e8>
 801b430:	7812      	ldrb	r2, [r2, #0]
 801b432:	e74d      	b.n	801b2d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e8>
 801b434:	2c00      	cmp	r4, #0
 801b436:	f43f af01 	beq.w	801b23c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x154>
 801b43a:	7824      	ldrb	r4, [r4, #0]
 801b43c:	e6fe      	b.n	801b23c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x154>
 801b43e:	bf00      	nop
 801b440:	006e0069 	.word	0x006e0069
 801b444:	3f000002 	.word	0x3f000002
 801b448:	0061006e 	.word	0x0061006e

0801b44c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 801b44c:	b507      	push	{r0, r1, r2, lr}
 801b44e:	9300      	str	r3, [sp, #0]
 801b450:	4613      	mov	r3, r2
 801b452:	2200      	movs	r2, #0
 801b454:	f7ff fe48 	bl	801b0e8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 801b458:	b003      	add	sp, #12
 801b45a:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0801b460 <_ZN8touchgfx7Unicode15skip_whitespaceEPKt>:
 801b460:	4906      	ldr	r1, [pc, #24]	; (801b47c <_ZN8touchgfx7Unicode15skip_whitespaceEPKt+0x1c>)
 801b462:	4602      	mov	r2, r0
 801b464:	4610      	mov	r0, r2
 801b466:	3202      	adds	r2, #2
 801b468:	8803      	ldrh	r3, [r0, #0]
 801b46a:	3b09      	subs	r3, #9
 801b46c:	b29b      	uxth	r3, r3
 801b46e:	2b17      	cmp	r3, #23
 801b470:	d803      	bhi.n	801b47a <_ZN8touchgfx7Unicode15skip_whitespaceEPKt+0x1a>
 801b472:	fa21 f303 	lsr.w	r3, r1, r3
 801b476:	07db      	lsls	r3, r3, #31
 801b478:	d4f4      	bmi.n	801b464 <_ZN8touchgfx7Unicode15skip_whitespaceEPKt+0x4>
 801b47a:	4770      	bx	lr
 801b47c:	0080001b 	.word	0x0080001b

0801b480 <_ZN8touchgfx7Unicode25strncmp_ignore_whitespaceEPKtS2_t>:
 801b480:	b570      	push	{r4, r5, r6, lr}
 801b482:	460d      	mov	r5, r1
 801b484:	4614      	mov	r4, r2
 801b486:	b182      	cbz	r2, 801b4aa <_ZN8touchgfx7Unicode25strncmp_ignore_whitespaceEPKtS2_t+0x2a>
 801b488:	4288      	cmp	r0, r1
 801b48a:	d00e      	beq.n	801b4aa <_ZN8touchgfx7Unicode25strncmp_ignore_whitespaceEPKtS2_t+0x2a>
 801b48c:	b180      	cbz	r0, 801b4b0 <_ZN8touchgfx7Unicode25strncmp_ignore_whitespaceEPKtS2_t+0x30>
 801b48e:	b1b1      	cbz	r1, 801b4be <_ZN8touchgfx7Unicode25strncmp_ignore_whitespaceEPKtS2_t+0x3e>
 801b490:	f7ff ffe6 	bl	801b460 <_ZN8touchgfx7Unicode15skip_whitespaceEPKt>
 801b494:	4606      	mov	r6, r0
 801b496:	4628      	mov	r0, r5
 801b498:	f7ff ffe2 	bl	801b460 <_ZN8touchgfx7Unicode15skip_whitespaceEPKt>
 801b49c:	8833      	ldrh	r3, [r6, #0]
 801b49e:	8802      	ldrh	r2, [r0, #0]
 801b4a0:	3c01      	subs	r4, #1
 801b4a2:	4293      	cmp	r3, r2
 801b4a4:	b2a4      	uxth	r4, r4
 801b4a6:	d102      	bne.n	801b4ae <_ZN8touchgfx7Unicode25strncmp_ignore_whitespaceEPKtS2_t+0x2e>
 801b4a8:	b92c      	cbnz	r4, 801b4b6 <_ZN8touchgfx7Unicode25strncmp_ignore_whitespaceEPKtS2_t+0x36>
 801b4aa:	2000      	movs	r0, #0
 801b4ac:	bd70      	pop	{r4, r5, r6, pc}
 801b4ae:	d206      	bcs.n	801b4be <_ZN8touchgfx7Unicode25strncmp_ignore_whitespaceEPKtS2_t+0x3e>
 801b4b0:	f04f 30ff 	mov.w	r0, #4294967295
 801b4b4:	e7fa      	b.n	801b4ac <_ZN8touchgfx7Unicode25strncmp_ignore_whitespaceEPKtS2_t+0x2c>
 801b4b6:	b123      	cbz	r3, 801b4c2 <_ZN8touchgfx7Unicode25strncmp_ignore_whitespaceEPKtS2_t+0x42>
 801b4b8:	1c85      	adds	r5, r0, #2
 801b4ba:	1cb0      	adds	r0, r6, #2
 801b4bc:	e7e8      	b.n	801b490 <_ZN8touchgfx7Unicode25strncmp_ignore_whitespaceEPKtS2_t+0x10>
 801b4be:	2001      	movs	r0, #1
 801b4c0:	e7f4      	b.n	801b4ac <_ZN8touchgfx7Unicode25strncmp_ignore_whitespaceEPKtS2_t+0x2c>
 801b4c2:	4618      	mov	r0, r3
 801b4c4:	e7f2      	b.n	801b4ac <_ZN8touchgfx7Unicode25strncmp_ignore_whitespaceEPKtS2_t+0x2c>
	...

0801b4c8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801b4c8:	4b01      	ldr	r3, [pc, #4]	; (801b4d0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801b4ca:	6018      	str	r0, [r3, #0]
 801b4cc:	4770      	bx	lr
 801b4ce:	bf00      	nop
 801b4d0:	2002bd94 	.word	0x2002bd94

0801b4d4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801b4d4:	4b06      	ldr	r3, [pc, #24]	; (801b4f0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801b4d6:	881a      	ldrh	r2, [r3, #0]
 801b4d8:	4282      	cmp	r2, r0
 801b4da:	d807      	bhi.n	801b4ec <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801b4dc:	4b05      	ldr	r3, [pc, #20]	; (801b4f4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801b4de:	881b      	ldrh	r3, [r3, #0]
 801b4e0:	4413      	add	r3, r2
 801b4e2:	4298      	cmp	r0, r3
 801b4e4:	bfac      	ite	ge
 801b4e6:	2000      	movge	r0, #0
 801b4e8:	2001      	movlt	r0, #1
 801b4ea:	4770      	bx	lr
 801b4ec:	2000      	movs	r0, #0
 801b4ee:	4770      	bx	lr
 801b4f0:	2002bdb4 	.word	0x2002bdb4
 801b4f4:	2002bdb8 	.word	0x2002bdb8

0801b4f8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801b4f8:	b508      	push	{r3, lr}
 801b4fa:	4601      	mov	r1, r0
 801b4fc:	f7ff ffea 	bl	801b4d4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801b500:	b118      	cbz	r0, 801b50a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801b502:	4b02      	ldr	r3, [pc, #8]	; (801b50c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801b504:	681b      	ldr	r3, [r3, #0]
 801b506:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801b50a:	bd08      	pop	{r3, pc}
 801b50c:	2002bd98 	.word	0x2002bd98

0801b510 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801b510:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b514:	4d28      	ldr	r5, [pc, #160]	; (801b5b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801b516:	682b      	ldr	r3, [r5, #0]
 801b518:	2b00      	cmp	r3, #0
 801b51a:	d04a      	beq.n	801b5b2 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 801b51c:	4a27      	ldr	r2, [pc, #156]	; (801b5bc <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801b51e:	4e28      	ldr	r6, [pc, #160]	; (801b5c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801b520:	8810      	ldrh	r0, [r2, #0]
 801b522:	f8b6 8000 	ldrh.w	r8, [r6]
 801b526:	4c27      	ldr	r4, [pc, #156]	; (801b5c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801b528:	4f27      	ldr	r7, [pc, #156]	; (801b5c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801b52a:	4440      	add	r0, r8
 801b52c:	1c41      	adds	r1, r0, #1
 801b52e:	f021 0101 	bic.w	r1, r1, #1
 801b532:	0409      	lsls	r1, r1, #16
 801b534:	0c09      	lsrs	r1, r1, #16
 801b536:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 801b53a:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 801b53e:	eb03 020e 	add.w	r2, r3, lr
 801b542:	eb0e 010c 	add.w	r1, lr, ip
 801b546:	6022      	str	r2, [r4, #0]
 801b548:	185a      	adds	r2, r3, r1
 801b54a:	603a      	str	r2, [r7, #0]
 801b54c:	220e      	movs	r2, #14
 801b54e:	fb02 f208 	mul.w	r2, r2, r8
 801b552:	3203      	adds	r2, #3
 801b554:	f022 0203 	bic.w	r2, r2, #3
 801b558:	4411      	add	r1, r2
 801b55a:	440b      	add	r3, r1
 801b55c:	491b      	ldr	r1, [pc, #108]	; (801b5cc <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 801b55e:	600b      	str	r3, [r1, #0]
 801b560:	491b      	ldr	r1, [pc, #108]	; (801b5d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 801b562:	2300      	movs	r3, #0
 801b564:	800b      	strh	r3, [r1, #0]
 801b566:	491b      	ldr	r1, [pc, #108]	; (801b5d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 801b568:	6809      	ldr	r1, [r1, #0]
 801b56a:	eba1 010e 	sub.w	r1, r1, lr
 801b56e:	eba1 010c 	sub.w	r1, r1, ip
 801b572:	1a8a      	subs	r2, r1, r2
 801b574:	4918      	ldr	r1, [pc, #96]	; (801b5d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
 801b576:	600a      	str	r2, [r1, #0]
 801b578:	4a18      	ldr	r2, [pc, #96]	; (801b5dc <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
 801b57a:	469c      	mov	ip, r3
 801b57c:	8013      	strh	r3, [r2, #0]
 801b57e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801b582:	4283      	cmp	r3, r0
 801b584:	d10d      	bne.n	801b5a2 <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
 801b586:	8835      	ldrh	r5, [r6, #0]
 801b588:	6838      	ldr	r0, [r7, #0]
 801b58a:	2300      	movs	r3, #0
 801b58c:	240e      	movs	r4, #14
 801b58e:	429d      	cmp	r5, r3
 801b590:	d90f      	bls.n	801b5b2 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 801b592:	fb04 0203 	mla	r2, r4, r3, r0
 801b596:	3301      	adds	r3, #1
 801b598:	7b11      	ldrb	r1, [r2, #12]
 801b59a:	f36f 1145 	bfc	r1, #5, #1
 801b59e:	7311      	strb	r1, [r2, #12]
 801b5a0:	e7f5      	b.n	801b58e <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
 801b5a2:	682a      	ldr	r2, [r5, #0]
 801b5a4:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801b5a8:	6822      	ldr	r2, [r4, #0]
 801b5aa:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 801b5ae:	3301      	adds	r3, #1
 801b5b0:	e7e7      	b.n	801b582 <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
 801b5b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b5b6:	bf00      	nop
 801b5b8:	2002bd98 	.word	0x2002bd98
 801b5bc:	2002bdb4 	.word	0x2002bdb4
 801b5c0:	2002bdb8 	.word	0x2002bdb8
 801b5c4:	2002bdac 	.word	0x2002bdac
 801b5c8:	2002bd9c 	.word	0x2002bd9c
 801b5cc:	2002bda4 	.word	0x2002bda4
 801b5d0:	2002bdb6 	.word	0x2002bdb6
 801b5d4:	2002bda0 	.word	0x2002bda0
 801b5d8:	2002bdb0 	.word	0x2002bdb0
 801b5dc:	2002bda8 	.word	0x2002bda8

0801b5e0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801b5e0:	b510      	push	{r4, lr}
 801b5e2:	4b10      	ldr	r3, [pc, #64]	; (801b624 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 801b5e4:	681b      	ldr	r3, [r3, #0]
 801b5e6:	b9db      	cbnz	r3, 801b620 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 801b5e8:	b1d1      	cbz	r1, 801b620 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 801b5ea:	4b0f      	ldr	r3, [pc, #60]	; (801b628 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 801b5ec:	801a      	strh	r2, [r3, #0]
 801b5ee:	4b0f      	ldr	r3, [pc, #60]	; (801b62c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 801b5f0:	881b      	ldrh	r3, [r3, #0]
 801b5f2:	b292      	uxth	r2, r2
 801b5f4:	240e      	movs	r4, #14
 801b5f6:	4413      	add	r3, r2
 801b5f8:	4362      	muls	r2, r4
 801b5fa:	2406      	movs	r4, #6
 801b5fc:	fb04 2203 	mla	r2, r4, r3, r2
 801b600:	428a      	cmp	r2, r1
 801b602:	d305      	bcc.n	801b610 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 801b604:	4b0a      	ldr	r3, [pc, #40]	; (801b630 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 801b606:	4a0b      	ldr	r2, [pc, #44]	; (801b634 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 801b608:	480b      	ldr	r0, [pc, #44]	; (801b638 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 801b60a:	2135      	movs	r1, #53	; 0x35
 801b60c:	f00c f8b8 	bl	8027780 <__assert_func>
 801b610:	4b0a      	ldr	r3, [pc, #40]	; (801b63c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 801b612:	6019      	str	r1, [r3, #0]
 801b614:	4b0a      	ldr	r3, [pc, #40]	; (801b640 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 801b616:	6018      	str	r0, [r3, #0]
 801b618:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b61c:	f7ff bf78 	b.w	801b510 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801b620:	bd10      	pop	{r4, pc}
 801b622:	bf00      	nop
 801b624:	2002bda4 	.word	0x2002bda4
 801b628:	2002bdb8 	.word	0x2002bdb8
 801b62c:	2002bdb4 	.word	0x2002bdb4
 801b630:	0802d042 	.word	0x0802d042
 801b634:	0802d09b 	.word	0x0802d09b
 801b638:	0802d01d 	.word	0x0802d01d
 801b63c:	2002bda0 	.word	0x2002bda0
 801b640:	2002bd98 	.word	0x2002bd98

0801b644 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801b644:	b470      	push	{r4, r5, r6}
 801b646:	4c07      	ldr	r4, [pc, #28]	; (801b664 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801b648:	6826      	ldr	r6, [r4, #0]
 801b64a:	4605      	mov	r5, r0
 801b64c:	4610      	mov	r0, r2
 801b64e:	9a03      	ldr	r2, [sp, #12]
 801b650:	b936      	cbnz	r6, 801b660 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801b652:	6025      	str	r5, [r4, #0]
 801b654:	4c04      	ldr	r4, [pc, #16]	; (801b668 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801b656:	8021      	strh	r1, [r4, #0]
 801b658:	bc70      	pop	{r4, r5, r6}
 801b65a:	4619      	mov	r1, r3
 801b65c:	f7ff bfc0 	b.w	801b5e0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801b660:	bc70      	pop	{r4, r5, r6}
 801b662:	4770      	bx	lr
 801b664:	2002bdbc 	.word	0x2002bdbc
 801b668:	2002bdb4 	.word	0x2002bdb4

0801b66c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801b66c:	b508      	push	{r3, lr}
 801b66e:	4b14      	ldr	r3, [pc, #80]	; (801b6c0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801b670:	6819      	ldr	r1, [r3, #0]
 801b672:	b931      	cbnz	r1, 801b682 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 801b674:	4b13      	ldr	r3, [pc, #76]	; (801b6c4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801b676:	4a14      	ldr	r2, [pc, #80]	; (801b6c8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801b678:	4814      	ldr	r0, [pc, #80]	; (801b6cc <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801b67a:	f240 4185 	movw	r1, #1157	; 0x485
 801b67e:	f00c f87f 	bl	8027780 <__assert_func>
 801b682:	4a13      	ldr	r2, [pc, #76]	; (801b6d0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801b684:	8803      	ldrh	r3, [r0, #0]
 801b686:	8812      	ldrh	r2, [r2, #0]
 801b688:	4293      	cmp	r3, r2
 801b68a:	d204      	bcs.n	801b696 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 801b68c:	2214      	movs	r2, #20
 801b68e:	fb02 1303 	mla	r3, r2, r3, r1
 801b692:	8918      	ldrh	r0, [r3, #8]
 801b694:	bd08      	pop	{r3, pc}
 801b696:	490f      	ldr	r1, [pc, #60]	; (801b6d4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 801b698:	8809      	ldrh	r1, [r1, #0]
 801b69a:	4411      	add	r1, r2
 801b69c:	428b      	cmp	r3, r1
 801b69e:	da06      	bge.n	801b6ae <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 801b6a0:	1a9b      	subs	r3, r3, r2
 801b6a2:	4a0d      	ldr	r2, [pc, #52]	; (801b6d8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 801b6a4:	6812      	ldr	r2, [r2, #0]
 801b6a6:	210e      	movs	r1, #14
 801b6a8:	fb01 2303 	mla	r3, r1, r3, r2
 801b6ac:	e7f1      	b.n	801b692 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 801b6ae:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801b6b2:	4293      	cmp	r3, r2
 801b6b4:	bf0a      	itet	eq
 801b6b6:	4b09      	ldreq	r3, [pc, #36]	; (801b6dc <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 801b6b8:	2000      	movne	r0, #0
 801b6ba:	8818      	ldrheq	r0, [r3, #0]
 801b6bc:	e7ea      	b.n	801b694 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 801b6be:	bf00      	nop
 801b6c0:	2002bdbc 	.word	0x2002bdbc
 801b6c4:	0802c298 	.word	0x0802c298
 801b6c8:	0802d148 	.word	0x0802d148
 801b6cc:	0802d01d 	.word	0x0802d01d
 801b6d0:	2002bdb4 	.word	0x2002bdb4
 801b6d4:	2002bdb8 	.word	0x2002bdb8
 801b6d8:	2002bd9c 	.word	0x2002bd9c
 801b6dc:	2002bd28 	.word	0x2002bd28

0801b6e0 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801b6e0:	b508      	push	{r3, lr}
 801b6e2:	4b14      	ldr	r3, [pc, #80]	; (801b734 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801b6e4:	6819      	ldr	r1, [r3, #0]
 801b6e6:	b931      	cbnz	r1, 801b6f6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 801b6e8:	4b13      	ldr	r3, [pc, #76]	; (801b738 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801b6ea:	4a14      	ldr	r2, [pc, #80]	; (801b73c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801b6ec:	4814      	ldr	r0, [pc, #80]	; (801b740 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801b6ee:	f240 4199 	movw	r1, #1177	; 0x499
 801b6f2:	f00c f845 	bl	8027780 <__assert_func>
 801b6f6:	4a13      	ldr	r2, [pc, #76]	; (801b744 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801b6f8:	8803      	ldrh	r3, [r0, #0]
 801b6fa:	8812      	ldrh	r2, [r2, #0]
 801b6fc:	4293      	cmp	r3, r2
 801b6fe:	d204      	bcs.n	801b70a <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 801b700:	2214      	movs	r2, #20
 801b702:	fb02 1303 	mla	r3, r2, r3, r1
 801b706:	8958      	ldrh	r0, [r3, #10]
 801b708:	bd08      	pop	{r3, pc}
 801b70a:	490f      	ldr	r1, [pc, #60]	; (801b748 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 801b70c:	8809      	ldrh	r1, [r1, #0]
 801b70e:	4411      	add	r1, r2
 801b710:	428b      	cmp	r3, r1
 801b712:	da06      	bge.n	801b722 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 801b714:	1a9b      	subs	r3, r3, r2
 801b716:	4a0d      	ldr	r2, [pc, #52]	; (801b74c <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 801b718:	6812      	ldr	r2, [r2, #0]
 801b71a:	210e      	movs	r1, #14
 801b71c:	fb01 2303 	mla	r3, r1, r3, r2
 801b720:	e7f1      	b.n	801b706 <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 801b722:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801b726:	4293      	cmp	r3, r2
 801b728:	bf0a      	itet	eq
 801b72a:	4b09      	ldreq	r3, [pc, #36]	; (801b750 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 801b72c:	2000      	movne	r0, #0
 801b72e:	8818      	ldrheq	r0, [r3, #0]
 801b730:	e7ea      	b.n	801b708 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 801b732:	bf00      	nop
 801b734:	2002bdbc 	.word	0x2002bdbc
 801b738:	0802c298 	.word	0x0802c298
 801b73c:	0802d174 	.word	0x0802d174
 801b740:	0802d01d 	.word	0x0802d01d
 801b744:	2002bdb4 	.word	0x2002bdb4
 801b748:	2002bdb8 	.word	0x2002bdb8
 801b74c:	2002bd9c 	.word	0x2002bd9c
 801b750:	2002bd2a 	.word	0x2002bd2a

0801b754 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801b754:	b510      	push	{r4, lr}
 801b756:	4b23      	ldr	r3, [pc, #140]	; (801b7e4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801b758:	681c      	ldr	r4, [r3, #0]
 801b75a:	b934      	cbnz	r4, 801b76a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 801b75c:	4b22      	ldr	r3, [pc, #136]	; (801b7e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801b75e:	4a23      	ldr	r2, [pc, #140]	; (801b7ec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 801b760:	4823      	ldr	r0, [pc, #140]	; (801b7f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 801b762:	f240 41ad 	movw	r1, #1197	; 0x4ad
 801b766:	f00c f80b 	bl	8027780 <__assert_func>
 801b76a:	4a22      	ldr	r2, [pc, #136]	; (801b7f4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 801b76c:	880b      	ldrh	r3, [r1, #0]
 801b76e:	8812      	ldrh	r2, [r2, #0]
 801b770:	4293      	cmp	r3, r2
 801b772:	d211      	bcs.n	801b798 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 801b774:	2214      	movs	r2, #20
 801b776:	fb02 4303 	mla	r3, r2, r3, r4
 801b77a:	8a1a      	ldrh	r2, [r3, #16]
 801b77c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801b780:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801b784:	8a5b      	ldrh	r3, [r3, #18]
 801b786:	8004      	strh	r4, [r0, #0]
 801b788:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801b78c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801b790:	8041      	strh	r1, [r0, #2]
 801b792:	8082      	strh	r2, [r0, #4]
 801b794:	80c3      	strh	r3, [r0, #6]
 801b796:	e00e      	b.n	801b7b6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 801b798:	4917      	ldr	r1, [pc, #92]	; (801b7f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 801b79a:	8809      	ldrh	r1, [r1, #0]
 801b79c:	4411      	add	r1, r2
 801b79e:	428b      	cmp	r3, r1
 801b7a0:	da0a      	bge.n	801b7b8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 801b7a2:	1a9b      	subs	r3, r3, r2
 801b7a4:	4a15      	ldr	r2, [pc, #84]	; (801b7fc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 801b7a6:	6812      	ldr	r2, [r2, #0]
 801b7a8:	210e      	movs	r1, #14
 801b7aa:	fb01 2303 	mla	r3, r1, r3, r2
 801b7ae:	681a      	ldr	r2, [r3, #0]
 801b7b0:	6002      	str	r2, [r0, #0]
 801b7b2:	685a      	ldr	r2, [r3, #4]
 801b7b4:	6042      	str	r2, [r0, #4]
 801b7b6:	bd10      	pop	{r4, pc}
 801b7b8:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801b7bc:	4293      	cmp	r3, r2
 801b7be:	d10b      	bne.n	801b7d8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 801b7c0:	4b0f      	ldr	r3, [pc, #60]	; (801b800 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 801b7c2:	f9b3 1000 	ldrsh.w	r1, [r3]
 801b7c6:	4b0f      	ldr	r3, [pc, #60]	; (801b804 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 801b7c8:	8081      	strh	r1, [r0, #4]
 801b7ca:	f9b3 2000 	ldrsh.w	r2, [r3]
 801b7ce:	80c2      	strh	r2, [r0, #6]
 801b7d0:	2300      	movs	r3, #0
 801b7d2:	8003      	strh	r3, [r0, #0]
 801b7d4:	8043      	strh	r3, [r0, #2]
 801b7d6:	e7ee      	b.n	801b7b6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 801b7d8:	2300      	movs	r3, #0
 801b7da:	8003      	strh	r3, [r0, #0]
 801b7dc:	8043      	strh	r3, [r0, #2]
 801b7de:	8083      	strh	r3, [r0, #4]
 801b7e0:	e7d8      	b.n	801b794 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 801b7e2:	bf00      	nop
 801b7e4:	2002bdbc 	.word	0x2002bdbc
 801b7e8:	0802c298 	.word	0x0802c298
 801b7ec:	0802d0e1 	.word	0x0802d0e1
 801b7f0:	0802d01d 	.word	0x0802d01d
 801b7f4:	2002bdb4 	.word	0x2002bdb4
 801b7f8:	2002bdb8 	.word	0x2002bdb8
 801b7fc:	2002bd9c 	.word	0x2002bd9c
 801b800:	2002bd28 	.word	0x2002bd28
 801b804:	2002bd2a 	.word	0x2002bd2a

0801b808 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801b808:	4b18      	ldr	r3, [pc, #96]	; (801b86c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801b80a:	681b      	ldr	r3, [r3, #0]
 801b80c:	b34b      	cbz	r3, 801b862 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 801b80e:	4a18      	ldr	r2, [pc, #96]	; (801b870 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801b810:	8800      	ldrh	r0, [r0, #0]
 801b812:	8812      	ldrh	r2, [r2, #0]
 801b814:	4290      	cmp	r0, r2
 801b816:	d211      	bcs.n	801b83c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 801b818:	2214      	movs	r2, #20
 801b81a:	fb02 3300 	mla	r3, r2, r0, r3
 801b81e:	8a1a      	ldrh	r2, [r3, #16]
 801b820:	8919      	ldrh	r1, [r3, #8]
 801b822:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801b826:	428a      	cmp	r2, r1
 801b828:	db1d      	blt.n	801b866 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 801b82a:	8a58      	ldrh	r0, [r3, #18]
 801b82c:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801b830:	895b      	ldrh	r3, [r3, #10]
 801b832:	4298      	cmp	r0, r3
 801b834:	bfac      	ite	ge
 801b836:	2000      	movge	r0, #0
 801b838:	2001      	movlt	r0, #1
 801b83a:	4770      	bx	lr
 801b83c:	4b0d      	ldr	r3, [pc, #52]	; (801b874 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801b83e:	881b      	ldrh	r3, [r3, #0]
 801b840:	4413      	add	r3, r2
 801b842:	4298      	cmp	r0, r3
 801b844:	da0d      	bge.n	801b862 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 801b846:	4b0c      	ldr	r3, [pc, #48]	; (801b878 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 801b848:	681b      	ldr	r3, [r3, #0]
 801b84a:	1a80      	subs	r0, r0, r2
 801b84c:	220e      	movs	r2, #14
 801b84e:	fb02 3300 	mla	r3, r2, r0, r3
 801b852:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801b856:	891a      	ldrh	r2, [r3, #8]
 801b858:	4291      	cmp	r1, r2
 801b85a:	db04      	blt.n	801b866 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 801b85c:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801b860:	e7e6      	b.n	801b830 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 801b862:	2000      	movs	r0, #0
 801b864:	4770      	bx	lr
 801b866:	2001      	movs	r0, #1
 801b868:	4770      	bx	lr
 801b86a:	bf00      	nop
 801b86c:	2002bdbc 	.word	0x2002bdbc
 801b870:	2002bdb4 	.word	0x2002bdb4
 801b874:	2002bdb8 	.word	0x2002bdb8
 801b878:	2002bd9c 	.word	0x2002bd9c

0801b87c <_ZNK8touchgfx6Bitmap7getDataEv>:
 801b87c:	b508      	push	{r3, lr}
 801b87e:	4b12      	ldr	r3, [pc, #72]	; (801b8c8 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801b880:	6819      	ldr	r1, [r3, #0]
 801b882:	b931      	cbnz	r1, 801b892 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801b884:	4b11      	ldr	r3, [pc, #68]	; (801b8cc <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801b886:	4a12      	ldr	r2, [pc, #72]	; (801b8d0 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801b888:	4812      	ldr	r0, [pc, #72]	; (801b8d4 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801b88a:	f240 41d1 	movw	r1, #1233	; 0x4d1
 801b88e:	f00b ff77 	bl	8027780 <__assert_func>
 801b892:	8803      	ldrh	r3, [r0, #0]
 801b894:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801b898:	4293      	cmp	r3, r2
 801b89a:	d012      	beq.n	801b8c2 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801b89c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801b8a0:	4293      	cmp	r3, r2
 801b8a2:	d103      	bne.n	801b8ac <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 801b8a4:	4b0c      	ldr	r3, [pc, #48]	; (801b8d8 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801b8a6:	681b      	ldr	r3, [r3, #0]
 801b8a8:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801b8aa:	bd08      	pop	{r3, pc}
 801b8ac:	4a0b      	ldr	r2, [pc, #44]	; (801b8dc <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 801b8ae:	6812      	ldr	r2, [r2, #0]
 801b8b0:	b11a      	cbz	r2, 801b8ba <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 801b8b2:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801b8b6:	2800      	cmp	r0, #0
 801b8b8:	d1f7      	bne.n	801b8aa <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 801b8ba:	2214      	movs	r2, #20
 801b8bc:	4353      	muls	r3, r2
 801b8be:	58c8      	ldr	r0, [r1, r3]
 801b8c0:	e7f3      	b.n	801b8aa <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 801b8c2:	2000      	movs	r0, #0
 801b8c4:	e7f1      	b.n	801b8aa <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 801b8c6:	bf00      	nop
 801b8c8:	2002bdbc 	.word	0x2002bdbc
 801b8cc:	0802c298 	.word	0x0802c298
 801b8d0:	0802d117 	.word	0x0802d117
 801b8d4:	0802d01d 	.word	0x0802d01d
 801b8d8:	2002bd34 	.word	0x2002bd34
 801b8dc:	2002bd98 	.word	0x2002bd98

0801b8e0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801b8e0:	8802      	ldrh	r2, [r0, #0]
 801b8e2:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 801b8e6:	429a      	cmp	r2, r3
 801b8e8:	d845      	bhi.n	801b976 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 801b8ea:	4b24      	ldr	r3, [pc, #144]	; (801b97c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801b8ec:	8818      	ldrh	r0, [r3, #0]
 801b8ee:	4282      	cmp	r2, r0
 801b8f0:	d221      	bcs.n	801b936 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 801b8f2:	4b23      	ldr	r3, [pc, #140]	; (801b980 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801b8f4:	6819      	ldr	r1, [r3, #0]
 801b8f6:	2314      	movs	r3, #20
 801b8f8:	fb03 1302 	mla	r3, r3, r2, r1
 801b8fc:	6858      	ldr	r0, [r3, #4]
 801b8fe:	2800      	cmp	r0, #0
 801b900:	d03a      	beq.n	801b978 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 801b902:	4920      	ldr	r1, [pc, #128]	; (801b984 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801b904:	6809      	ldr	r1, [r1, #0]
 801b906:	2900      	cmp	r1, #0
 801b908:	d036      	beq.n	801b978 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 801b90a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801b90e:	2900      	cmp	r1, #0
 801b910:	d032      	beq.n	801b978 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 801b912:	891a      	ldrh	r2, [r3, #8]
 801b914:	8958      	ldrh	r0, [r3, #10]
 801b916:	4350      	muls	r0, r2
 801b918:	7c5a      	ldrb	r2, [r3, #17]
 801b91a:	7cdb      	ldrb	r3, [r3, #19]
 801b91c:	0952      	lsrs	r2, r2, #5
 801b91e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801b922:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801b926:	2b0b      	cmp	r3, #11
 801b928:	bf18      	it	ne
 801b92a:	0040      	lslne	r0, r0, #1
 801b92c:	3003      	adds	r0, #3
 801b92e:	f020 0003 	bic.w	r0, r0, #3
 801b932:	4408      	add	r0, r1
 801b934:	4770      	bx	lr
 801b936:	4b14      	ldr	r3, [pc, #80]	; (801b988 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 801b938:	881b      	ldrh	r3, [r3, #0]
 801b93a:	4403      	add	r3, r0
 801b93c:	429a      	cmp	r2, r3
 801b93e:	da1a      	bge.n	801b976 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 801b940:	4b12      	ldr	r3, [pc, #72]	; (801b98c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 801b942:	681b      	ldr	r3, [r3, #0]
 801b944:	1a10      	subs	r0, r2, r0
 801b946:	210e      	movs	r1, #14
 801b948:	fb01 3000 	mla	r0, r1, r0, r3
 801b94c:	7b03      	ldrb	r3, [r0, #12]
 801b94e:	f003 031f 	and.w	r3, r3, #31
 801b952:	2b0b      	cmp	r3, #11
 801b954:	d10b      	bne.n	801b96e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801b956:	8903      	ldrh	r3, [r0, #8]
 801b958:	8940      	ldrh	r0, [r0, #10]
 801b95a:	4358      	muls	r0, r3
 801b95c:	4b09      	ldr	r3, [pc, #36]	; (801b984 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801b95e:	6819      	ldr	r1, [r3, #0]
 801b960:	3003      	adds	r0, #3
 801b962:	f020 0303 	bic.w	r3, r0, #3
 801b966:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801b96a:	4418      	add	r0, r3
 801b96c:	4770      	bx	lr
 801b96e:	2b0d      	cmp	r3, #13
 801b970:	d101      	bne.n	801b976 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 801b972:	300d      	adds	r0, #13
 801b974:	4770      	bx	lr
 801b976:	2000      	movs	r0, #0
 801b978:	4770      	bx	lr
 801b97a:	bf00      	nop
 801b97c:	2002bdb4 	.word	0x2002bdb4
 801b980:	2002bdbc 	.word	0x2002bdbc
 801b984:	2002bd98 	.word	0x2002bd98
 801b988:	2002bdb8 	.word	0x2002bdb8
 801b98c:	2002bd9c 	.word	0x2002bd9c

0801b990 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801b990:	b510      	push	{r4, lr}
 801b992:	4b17      	ldr	r3, [pc, #92]	; (801b9f0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801b994:	6819      	ldr	r1, [r3, #0]
 801b996:	8803      	ldrh	r3, [r0, #0]
 801b998:	b1e9      	cbz	r1, 801b9d6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 801b99a:	4a16      	ldr	r2, [pc, #88]	; (801b9f4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801b99c:	8812      	ldrh	r2, [r2, #0]
 801b99e:	429a      	cmp	r2, r3
 801b9a0:	d90a      	bls.n	801b9b8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x28>
 801b9a2:	2214      	movs	r2, #20
 801b9a4:	fb02 1303 	mla	r3, r2, r3, r1
 801b9a8:	7c58      	ldrb	r0, [r3, #17]
 801b9aa:	0942      	lsrs	r2, r0, #5
 801b9ac:	7cd8      	ldrb	r0, [r3, #19]
 801b9ae:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801b9b2:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801b9b6:	bd10      	pop	{r4, pc}
 801b9b8:	490f      	ldr	r1, [pc, #60]	; (801b9f8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801b9ba:	8809      	ldrh	r1, [r1, #0]
 801b9bc:	4411      	add	r1, r2
 801b9be:	428b      	cmp	r3, r1
 801b9c0:	da09      	bge.n	801b9d6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 801b9c2:	1a9b      	subs	r3, r3, r2
 801b9c4:	4a0d      	ldr	r2, [pc, #52]	; (801b9fc <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801b9c6:	6812      	ldr	r2, [r2, #0]
 801b9c8:	210e      	movs	r1, #14
 801b9ca:	fb01 2303 	mla	r3, r1, r3, r2
 801b9ce:	7b18      	ldrb	r0, [r3, #12]
 801b9d0:	f000 001f 	and.w	r0, r0, #31
 801b9d4:	e7ef      	b.n	801b9b6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801b9d6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801b9da:	4293      	cmp	r3, r2
 801b9dc:	d106      	bne.n	801b9ec <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 801b9de:	f7f8 fb39 	bl	8014054 <_ZN8touchgfx3HAL3lcdEv>
 801b9e2:	6803      	ldr	r3, [r0, #0]
 801b9e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b9e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801b9ea:	4718      	bx	r3
 801b9ec:	2000      	movs	r0, #0
 801b9ee:	e7e2      	b.n	801b9b6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801b9f0:	2002bdbc 	.word	0x2002bdbc
 801b9f4:	2002bdb4 	.word	0x2002bdb4
 801b9f8:	2002bdb8 	.word	0x2002bdb8
 801b9fc:	2002bd9c 	.word	0x2002bd9c

0801ba00 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801ba00:	2010      	movs	r0, #16
 801ba02:	4770      	bx	lr

0801ba04 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801ba04:	2000      	movs	r0, #0
 801ba06:	4770      	bx	lr

0801ba08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801ba08:	2bff      	cmp	r3, #255	; 0xff
 801ba0a:	d050      	beq.n	801baae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801ba0c:	2a0b      	cmp	r2, #11
 801ba0e:	d04a      	beq.n	801baa6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801ba10:	d80e      	bhi.n	801ba30 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801ba12:	2a03      	cmp	r2, #3
 801ba14:	d03f      	beq.n	801ba96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801ba16:	d804      	bhi.n	801ba22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801ba18:	2a01      	cmp	r2, #1
 801ba1a:	d03e      	beq.n	801ba9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801ba1c:	d93f      	bls.n	801ba9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801ba1e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801ba20:	4770      	bx	lr
 801ba22:	2a09      	cmp	r2, #9
 801ba24:	d03f      	beq.n	801baa6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801ba26:	d83c      	bhi.n	801baa2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801ba28:	2a08      	cmp	r2, #8
 801ba2a:	d03a      	beq.n	801baa2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801ba2c:	2000      	movs	r0, #0
 801ba2e:	4770      	bx	lr
 801ba30:	2a2f      	cmp	r2, #47	; 0x2f
 801ba32:	d024      	beq.n	801ba7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801ba34:	d80d      	bhi.n	801ba52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801ba36:	2a2d      	cmp	r2, #45	; 0x2d
 801ba38:	d014      	beq.n	801ba64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801ba3a:	d826      	bhi.n	801ba8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801ba3c:	2a2c      	cmp	r2, #44	; 0x2c
 801ba3e:	d1f5      	bne.n	801ba2c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ba40:	684b      	ldr	r3, [r1, #4]
 801ba42:	781b      	ldrb	r3, [r3, #0]
 801ba44:	2b01      	cmp	r3, #1
 801ba46:	d018      	beq.n	801ba7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801ba48:	d323      	bcc.n	801ba92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801ba4a:	2b02      	cmp	r3, #2
 801ba4c:	d1ee      	bne.n	801ba2c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ba4e:	6880      	ldr	r0, [r0, #8]
 801ba50:	4770      	bx	lr
 801ba52:	2a31      	cmp	r2, #49	; 0x31
 801ba54:	d004      	beq.n	801ba60 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801ba56:	d328      	bcc.n	801baaa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801ba58:	2a32      	cmp	r2, #50	; 0x32
 801ba5a:	d026      	beq.n	801baaa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801ba5c:	2a33      	cmp	r2, #51	; 0x33
 801ba5e:	d1e5      	bne.n	801ba2c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ba60:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801ba62:	4770      	bx	lr
 801ba64:	684b      	ldr	r3, [r1, #4]
 801ba66:	781b      	ldrb	r3, [r3, #0]
 801ba68:	2b01      	cmp	r3, #1
 801ba6a:	d004      	beq.n	801ba76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801ba6c:	d30b      	bcc.n	801ba86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801ba6e:	2b02      	cmp	r3, #2
 801ba70:	d1dc      	bne.n	801ba2c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ba72:	6900      	ldr	r0, [r0, #16]
 801ba74:	4770      	bx	lr
 801ba76:	6a00      	ldr	r0, [r0, #32]
 801ba78:	4770      	bx	lr
 801ba7a:	6980      	ldr	r0, [r0, #24]
 801ba7c:	4770      	bx	lr
 801ba7e:	684b      	ldr	r3, [r1, #4]
 801ba80:	781b      	ldrb	r3, [r3, #0]
 801ba82:	2b00      	cmp	r3, #0
 801ba84:	d1d2      	bne.n	801ba2c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ba86:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801ba88:	4770      	bx	lr
 801ba8a:	684b      	ldr	r3, [r1, #4]
 801ba8c:	781b      	ldrb	r3, [r3, #0]
 801ba8e:	2b00      	cmp	r3, #0
 801ba90:	d1cc      	bne.n	801ba2c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ba92:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801ba94:	4770      	bx	lr
 801ba96:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801ba98:	4770      	bx	lr
 801ba9a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801ba9c:	4770      	bx	lr
 801ba9e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801baa0:	4770      	bx	lr
 801baa2:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801baa4:	4770      	bx	lr
 801baa6:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801baa8:	4770      	bx	lr
 801baaa:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801baac:	4770      	bx	lr
 801baae:	2a0b      	cmp	r2, #11
 801bab0:	d049      	beq.n	801bb46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801bab2:	d80e      	bhi.n	801bad2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801bab4:	2a03      	cmp	r2, #3
 801bab6:	d040      	beq.n	801bb3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801bab8:	d804      	bhi.n	801bac4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801baba:	2a01      	cmp	r2, #1
 801babc:	d03f      	beq.n	801bb3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801babe:	d940      	bls.n	801bb42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801bac0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801bac2:	4770      	bx	lr
 801bac4:	2a09      	cmp	r2, #9
 801bac6:	d03e      	beq.n	801bb46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801bac8:	d801      	bhi.n	801bace <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801baca:	2a08      	cmp	r2, #8
 801bacc:	d1ae      	bne.n	801ba2c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801bace:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801bad0:	4770      	bx	lr
 801bad2:	2a2f      	cmp	r2, #47	; 0x2f
 801bad4:	d024      	beq.n	801bb20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801bad6:	d80d      	bhi.n	801baf4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801bad8:	2a2d      	cmp	r2, #45	; 0x2d
 801bada:	d014      	beq.n	801bb06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801badc:	d826      	bhi.n	801bb2c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801bade:	2a2c      	cmp	r2, #44	; 0x2c
 801bae0:	d1a4      	bne.n	801ba2c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801bae2:	684b      	ldr	r3, [r1, #4]
 801bae4:	781b      	ldrb	r3, [r3, #0]
 801bae6:	2b01      	cmp	r3, #1
 801bae8:	d018      	beq.n	801bb1c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801baea:	d324      	bcc.n	801bb36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801baec:	2b02      	cmp	r3, #2
 801baee:	d19d      	bne.n	801ba2c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801baf0:	68c0      	ldr	r0, [r0, #12]
 801baf2:	4770      	bx	lr
 801baf4:	2a31      	cmp	r2, #49	; 0x31
 801baf6:	d004      	beq.n	801bb02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801baf8:	d327      	bcc.n	801bb4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801bafa:	2a32      	cmp	r2, #50	; 0x32
 801bafc:	d025      	beq.n	801bb4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801bafe:	2a33      	cmp	r2, #51	; 0x33
 801bb00:	d194      	bne.n	801ba2c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801bb02:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801bb04:	4770      	bx	lr
 801bb06:	684b      	ldr	r3, [r1, #4]
 801bb08:	781b      	ldrb	r3, [r3, #0]
 801bb0a:	2b01      	cmp	r3, #1
 801bb0c:	d004      	beq.n	801bb18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801bb0e:	d30b      	bcc.n	801bb28 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801bb10:	2b02      	cmp	r3, #2
 801bb12:	d18b      	bne.n	801ba2c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801bb14:	6940      	ldr	r0, [r0, #20]
 801bb16:	4770      	bx	lr
 801bb18:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801bb1a:	4770      	bx	lr
 801bb1c:	69c0      	ldr	r0, [r0, #28]
 801bb1e:	4770      	bx	lr
 801bb20:	684b      	ldr	r3, [r1, #4]
 801bb22:	781b      	ldrb	r3, [r3, #0]
 801bb24:	2b00      	cmp	r3, #0
 801bb26:	d181      	bne.n	801ba2c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801bb28:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801bb2a:	4770      	bx	lr
 801bb2c:	684b      	ldr	r3, [r1, #4]
 801bb2e:	781b      	ldrb	r3, [r3, #0]
 801bb30:	2b00      	cmp	r3, #0
 801bb32:	f47f af7b 	bne.w	801ba2c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801bb36:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801bb38:	4770      	bx	lr
 801bb3a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801bb3c:	4770      	bx	lr
 801bb3e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801bb40:	4770      	bx	lr
 801bb42:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801bb44:	4770      	bx	lr
 801bb46:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801bb48:	4770      	bx	lr
 801bb4a:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801bb4c:	4770      	bx	lr

0801bb4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bb4e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb52:	b087      	sub	sp, #28
 801bb54:	9815      	ldr	r0, [sp, #84]	; 0x54
 801bb56:	9205      	str	r2, [sp, #20]
 801bb58:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801bb5c:	9202      	str	r2, [sp, #8]
 801bb5e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801bb62:	9101      	str	r1, [sp, #4]
 801bb64:	6841      	ldr	r1, [r0, #4]
 801bb66:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801bb6a:	fb01 2404 	mla	r4, r1, r4, r2
 801bb6e:	6802      	ldr	r2, [r0, #0]
 801bb70:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801bb74:	f8de 2000 	ldr.w	r2, [lr]
 801bb78:	9203      	str	r2, [sp, #12]
 801bb7a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801bb7e:	3204      	adds	r2, #4
 801bb80:	9204      	str	r2, [sp, #16]
 801bb82:	9a02      	ldr	r2, [sp, #8]
 801bb84:	43d6      	mvns	r6, r2
 801bb86:	b2f6      	uxtb	r6, r6
 801bb88:	9a01      	ldr	r2, [sp, #4]
 801bb8a:	2a00      	cmp	r2, #0
 801bb8c:	dc03      	bgt.n	801bb96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801bb8e:	9a05      	ldr	r2, [sp, #20]
 801bb90:	2a00      	cmp	r2, #0
 801bb92:	f340 8129 	ble.w	801bde8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801bb96:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801bb98:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801bb9c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801bba0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801bba4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801bba6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801bbaa:	2b00      	cmp	r3, #0
 801bbac:	dd0e      	ble.n	801bbcc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801bbae:	1408      	asrs	r0, r1, #16
 801bbb0:	d405      	bmi.n	801bbbe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bbb2:	4560      	cmp	r0, ip
 801bbb4:	da03      	bge.n	801bbbe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bbb6:	1410      	asrs	r0, r2, #16
 801bbb8:	d401      	bmi.n	801bbbe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801bbba:	42b8      	cmp	r0, r7
 801bbbc:	db07      	blt.n	801bbce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801bbbe:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801bbc0:	4401      	add	r1, r0
 801bbc2:	9814      	ldr	r0, [sp, #80]	; 0x50
 801bbc4:	3b01      	subs	r3, #1
 801bbc6:	4402      	add	r2, r0
 801bbc8:	3402      	adds	r4, #2
 801bbca:	e7ee      	b.n	801bbaa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801bbcc:	d071      	beq.n	801bcb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801bbce:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801bbd0:	1e58      	subs	r0, r3, #1
 801bbd2:	fb05 1500 	mla	r5, r5, r0, r1
 801bbd6:	142d      	asrs	r5, r5, #16
 801bbd8:	d45f      	bmi.n	801bc9a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801bbda:	4565      	cmp	r5, ip
 801bbdc:	da5d      	bge.n	801bc9a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801bbde:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801bbe0:	fb05 2000 	mla	r0, r5, r0, r2
 801bbe4:	1400      	asrs	r0, r0, #16
 801bbe6:	d458      	bmi.n	801bc9a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801bbe8:	42b8      	cmp	r0, r7
 801bbea:	da56      	bge.n	801bc9a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801bbec:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801bbf0:	4699      	mov	r9, r3
 801bbf2:	46a2      	mov	sl, r4
 801bbf4:	f1b9 0f00 	cmp.w	r9, #0
 801bbf8:	dd57      	ble.n	801bcaa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801bbfa:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801bbfe:	9803      	ldr	r0, [sp, #12]
 801bc00:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801bc04:	140d      	asrs	r5, r1, #16
 801bc06:	fb07 000c 	mla	r0, r7, ip, r0
 801bc0a:	f109 39ff 	add.w	r9, r9, #4294967295
 801bc0e:	5d40      	ldrb	r0, [r0, r5]
 801bc10:	9d04      	ldr	r5, [sp, #16]
 801bc12:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801bc16:	f8ba 5000 	ldrh.w	r5, [sl]
 801bc1a:	122f      	asrs	r7, r5, #8
 801bc1c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801bc20:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bc24:	fb17 f706 	smulbb	r7, r7, r6
 801bc28:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801bc2c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bc30:	00ed      	lsls	r5, r5, #3
 801bc32:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801bc36:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801bc3a:	10c7      	asrs	r7, r0, #3
 801bc3c:	b2ed      	uxtb	r5, r5
 801bc3e:	00c0      	lsls	r0, r0, #3
 801bc40:	fb18 f806 	smulbb	r8, r8, r6
 801bc44:	fb15 f506 	smulbb	r5, r5, r6
 801bc48:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bc4c:	b2c0      	uxtb	r0, r0
 801bc4e:	fa1f fc8c 	uxth.w	ip, ip
 801bc52:	fb07 870b 	mla	r7, r7, fp, r8
 801bc56:	fb00 500b 	mla	r0, r0, fp, r5
 801bc5a:	b280      	uxth	r0, r0
 801bc5c:	b2bf      	uxth	r7, r7
 801bc5e:	f10c 0501 	add.w	r5, ip, #1
 801bc62:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801bc66:	f107 0801 	add.w	r8, r7, #1
 801bc6a:	1c45      	adds	r5, r0, #1
 801bc6c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801bc70:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801bc74:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801bc76:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bc7a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801bc7e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801bc82:	ea45 0c0c 	orr.w	ip, r5, ip
 801bc86:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801bc8a:	4401      	add	r1, r0
 801bc8c:	9814      	ldr	r0, [sp, #80]	; 0x50
 801bc8e:	ea4c 0c08 	orr.w	ip, ip, r8
 801bc92:	f82a cb02 	strh.w	ip, [sl], #2
 801bc96:	4402      	add	r2, r0
 801bc98:	e7ac      	b.n	801bbf4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801bc9a:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801bc9e:	f04f 0800 	mov.w	r8, #0
 801bca2:	eb03 0008 	add.w	r0, r3, r8
 801bca6:	2800      	cmp	r0, #0
 801bca8:	dc41      	bgt.n	801bd2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801bcaa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bcae:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bcb2:	9b01      	ldr	r3, [sp, #4]
 801bcb4:	2b00      	cmp	r3, #0
 801bcb6:	f340 8097 	ble.w	801bde8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801bcba:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bcbe:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801bcc2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801bcc6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bcc8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bccc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bcd0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bcd4:	eef0 6a62 	vmov.f32	s13, s5
 801bcd8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bcdc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bce0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bce4:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801bce8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bcec:	eef0 6a43 	vmov.f32	s13, s6
 801bcf0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bcf4:	ee12 2a90 	vmov	r2, s5
 801bcf8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bcfc:	fb92 f3f3 	sdiv	r3, r2, r3
 801bd00:	ee13 2a10 	vmov	r2, s6
 801bd04:	9313      	str	r3, [sp, #76]	; 0x4c
 801bd06:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bd08:	fb92 f3f3 	sdiv	r3, r2, r3
 801bd0c:	9314      	str	r3, [sp, #80]	; 0x50
 801bd0e:	9b01      	ldr	r3, [sp, #4]
 801bd10:	9a05      	ldr	r2, [sp, #20]
 801bd12:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bd16:	3b01      	subs	r3, #1
 801bd18:	9301      	str	r3, [sp, #4]
 801bd1a:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801bd1e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bd20:	eeb0 3a67 	vmov.f32	s6, s15
 801bd24:	bf08      	it	eq
 801bd26:	4613      	moveq	r3, r2
 801bd28:	eef0 2a47 	vmov.f32	s5, s14
 801bd2c:	e72c      	b.n	801bb88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801bd2e:	140f      	asrs	r7, r1, #16
 801bd30:	d453      	bmi.n	801bdda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801bd32:	f8de 5008 	ldr.w	r5, [lr, #8]
 801bd36:	42bd      	cmp	r5, r7
 801bd38:	dd4f      	ble.n	801bdda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801bd3a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801bd3e:	d44c      	bmi.n	801bdda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801bd40:	f8de 000c 	ldr.w	r0, [lr, #12]
 801bd44:	4560      	cmp	r0, ip
 801bd46:	dd48      	ble.n	801bdda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801bd48:	9803      	ldr	r0, [sp, #12]
 801bd4a:	b22d      	sxth	r5, r5
 801bd4c:	fb0c 0505 	mla	r5, ip, r5, r0
 801bd50:	5de8      	ldrb	r0, [r5, r7]
 801bd52:	9d04      	ldr	r5, [sp, #16]
 801bd54:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801bd58:	f06f 0501 	mvn.w	r5, #1
 801bd5c:	fb05 fb08 	mul.w	fp, r5, r8
 801bd60:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801bd64:	f834 500b 	ldrh.w	r5, [r4, fp]
 801bd68:	122f      	asrs	r7, r5, #8
 801bd6a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bd6e:	fb17 f706 	smulbb	r7, r7, r6
 801bd72:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801bd76:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bd7a:	00ed      	lsls	r5, r5, #3
 801bd7c:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801bd80:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801bd84:	10c7      	asrs	r7, r0, #3
 801bd86:	b2ed      	uxtb	r5, r5
 801bd88:	00c0      	lsls	r0, r0, #3
 801bd8a:	fb19 f906 	smulbb	r9, r9, r6
 801bd8e:	fb15 f506 	smulbb	r5, r5, r6
 801bd92:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bd96:	b2c0      	uxtb	r0, r0
 801bd98:	fa1f fc8c 	uxth.w	ip, ip
 801bd9c:	fb07 970a 	mla	r7, r7, sl, r9
 801bda0:	fb00 500a 	mla	r0, r0, sl, r5
 801bda4:	b2bf      	uxth	r7, r7
 801bda6:	b280      	uxth	r0, r0
 801bda8:	f10c 0501 	add.w	r5, ip, #1
 801bdac:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801bdb0:	f107 0901 	add.w	r9, r7, #1
 801bdb4:	1c45      	adds	r5, r0, #1
 801bdb6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801bdba:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801bdbe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bdc2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801bdc6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801bdca:	ea45 0c0c 	orr.w	ip, r5, ip
 801bdce:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801bdd2:	ea4c 0c09 	orr.w	ip, ip, r9
 801bdd6:	f824 c00b 	strh.w	ip, [r4, fp]
 801bdda:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801bddc:	4401      	add	r1, r0
 801bdde:	9814      	ldr	r0, [sp, #80]	; 0x50
 801bde0:	f108 38ff 	add.w	r8, r8, #4294967295
 801bde4:	4402      	add	r2, r0
 801bde6:	e75c      	b.n	801bca2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801bde8:	b007      	add	sp, #28
 801bdea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bdee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bdee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bdf2:	b085      	sub	sp, #20
 801bdf4:	4693      	mov	fp, r2
 801bdf6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801bdf8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801bdfa:	6870      	ldr	r0, [r6, #4]
 801bdfc:	9100      	str	r1, [sp, #0]
 801bdfe:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801be02:	fb00 2404 	mla	r4, r0, r4, r2
 801be06:	6832      	ldr	r2, [r6, #0]
 801be08:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801be0c:	682a      	ldr	r2, [r5, #0]
 801be0e:	9201      	str	r2, [sp, #4]
 801be10:	686a      	ldr	r2, [r5, #4]
 801be12:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801be16:	3204      	adds	r2, #4
 801be18:	9202      	str	r2, [sp, #8]
 801be1a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801be1e:	9a00      	ldr	r2, [sp, #0]
 801be20:	2a00      	cmp	r2, #0
 801be22:	dc03      	bgt.n	801be2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801be24:	f1bb 0f00 	cmp.w	fp, #0
 801be28:	f340 80a0 	ble.w	801bf6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801be2c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801be2e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801be32:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801be36:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801be3a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801be3c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801be40:	2b00      	cmp	r3, #0
 801be42:	dd0c      	ble.n	801be5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801be44:	1406      	asrs	r6, r0, #16
 801be46:	d405      	bmi.n	801be54 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801be48:	454e      	cmp	r6, r9
 801be4a:	da03      	bge.n	801be54 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801be4c:	1416      	asrs	r6, r2, #16
 801be4e:	d401      	bmi.n	801be54 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801be50:	4546      	cmp	r6, r8
 801be52:	db05      	blt.n	801be60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801be54:	4470      	add	r0, lr
 801be56:	4462      	add	r2, ip
 801be58:	3b01      	subs	r3, #1
 801be5a:	3402      	adds	r4, #2
 801be5c:	e7f0      	b.n	801be40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801be5e:	d00f      	beq.n	801be80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801be60:	1e5e      	subs	r6, r3, #1
 801be62:	fb0e 0706 	mla	r7, lr, r6, r0
 801be66:	143f      	asrs	r7, r7, #16
 801be68:	d541      	bpl.n	801beee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801be6a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801be6e:	4698      	mov	r8, r3
 801be70:	9603      	str	r6, [sp, #12]
 801be72:	f1b8 0f00 	cmp.w	r8, #0
 801be76:	dc59      	bgt.n	801bf2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801be78:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801be7c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801be80:	9b00      	ldr	r3, [sp, #0]
 801be82:	2b00      	cmp	r3, #0
 801be84:	dd72      	ble.n	801bf6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801be86:	ee30 0a04 	vadd.f32	s0, s0, s8
 801be8a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801be8e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801be92:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801be94:	ee31 1a05 	vadd.f32	s2, s2, s10
 801be98:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801be9c:	eeb0 6a62 	vmov.f32	s12, s5
 801bea0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bea4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bea8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801beac:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801beb0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801beb4:	eeb0 6a43 	vmov.f32	s12, s6
 801beb8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bebc:	ee12 2a90 	vmov	r2, s5
 801bec0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bec4:	fb92 fef3 	sdiv	lr, r2, r3
 801bec8:	ee13 2a10 	vmov	r2, s6
 801becc:	fb92 fcf3 	sdiv	ip, r2, r3
 801bed0:	9b00      	ldr	r3, [sp, #0]
 801bed2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bed6:	3b01      	subs	r3, #1
 801bed8:	9300      	str	r3, [sp, #0]
 801beda:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801bede:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bee0:	eeb0 3a67 	vmov.f32	s6, s15
 801bee4:	bf08      	it	eq
 801bee6:	465b      	moveq	r3, fp
 801bee8:	eef0 2a47 	vmov.f32	s5, s14
 801beec:	e797      	b.n	801be1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801beee:	454f      	cmp	r7, r9
 801bef0:	dabb      	bge.n	801be6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801bef2:	fb0c 2606 	mla	r6, ip, r6, r2
 801bef6:	1436      	asrs	r6, r6, #16
 801bef8:	d4b7      	bmi.n	801be6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801befa:	4546      	cmp	r6, r8
 801befc:	dab5      	bge.n	801be6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801befe:	461e      	mov	r6, r3
 801bf00:	46a0      	mov	r8, r4
 801bf02:	2e00      	cmp	r6, #0
 801bf04:	ddb8      	ble.n	801be78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801bf06:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801bf0a:	9901      	ldr	r1, [sp, #4]
 801bf0c:	1417      	asrs	r7, r2, #16
 801bf0e:	ea4f 4920 	mov.w	r9, r0, asr #16
 801bf12:	fb0a 1707 	mla	r7, sl, r7, r1
 801bf16:	9902      	ldr	r1, [sp, #8]
 801bf18:	f817 7009 	ldrb.w	r7, [r7, r9]
 801bf1c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801bf20:	f828 7b02 	strh.w	r7, [r8], #2
 801bf24:	4470      	add	r0, lr
 801bf26:	4462      	add	r2, ip
 801bf28:	3e01      	subs	r6, #1
 801bf2a:	e7ea      	b.n	801bf02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801bf2c:	ea5f 4920 	movs.w	r9, r0, asr #16
 801bf30:	d417      	bmi.n	801bf62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801bf32:	68ae      	ldr	r6, [r5, #8]
 801bf34:	454e      	cmp	r6, r9
 801bf36:	dd14      	ble.n	801bf62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801bf38:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801bf3c:	d411      	bmi.n	801bf62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801bf3e:	68ef      	ldr	r7, [r5, #12]
 801bf40:	4557      	cmp	r7, sl
 801bf42:	dd0e      	ble.n	801bf62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801bf44:	9f01      	ldr	r7, [sp, #4]
 801bf46:	b236      	sxth	r6, r6
 801bf48:	fb0a 7606 	mla	r6, sl, r6, r7
 801bf4c:	9f02      	ldr	r7, [sp, #8]
 801bf4e:	f816 6009 	ldrb.w	r6, [r6, r9]
 801bf52:	f06f 0101 	mvn.w	r1, #1
 801bf56:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801bf5a:	fb01 f608 	mul.w	r6, r1, r8
 801bf5e:	9903      	ldr	r1, [sp, #12]
 801bf60:	538f      	strh	r7, [r1, r6]
 801bf62:	4470      	add	r0, lr
 801bf64:	4462      	add	r2, ip
 801bf66:	f108 38ff 	add.w	r8, r8, #4294967295
 801bf6a:	e782      	b.n	801be72 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801bf6c:	b005      	add	sp, #20
 801bf6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bf72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bf72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bf76:	b087      	sub	sp, #28
 801bf78:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bf7a:	9205      	str	r2, [sp, #20]
 801bf7c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801bf80:	9203      	str	r2, [sp, #12]
 801bf82:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801bf86:	9102      	str	r1, [sp, #8]
 801bf88:	6861      	ldr	r1, [r4, #4]
 801bf8a:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801bf8e:	fb01 2000 	mla	r0, r1, r0, r2
 801bf92:	6822      	ldr	r2, [r4, #0]
 801bf94:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801bf98:	9200      	str	r2, [sp, #0]
 801bf9a:	f8dc 2000 	ldr.w	r2, [ip]
 801bf9e:	9204      	str	r2, [sp, #16]
 801bfa0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801bfa4:	3204      	adds	r2, #4
 801bfa6:	9201      	str	r2, [sp, #4]
 801bfa8:	9a03      	ldr	r2, [sp, #12]
 801bfaa:	43d5      	mvns	r5, r2
 801bfac:	b2ed      	uxtb	r5, r5
 801bfae:	9a02      	ldr	r2, [sp, #8]
 801bfb0:	2a00      	cmp	r2, #0
 801bfb2:	dc03      	bgt.n	801bfbc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801bfb4:	9a05      	ldr	r2, [sp, #20]
 801bfb6:	2a00      	cmp	r2, #0
 801bfb8:	f340 812c 	ble.w	801c214 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801bfbc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801bfbe:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801bfc2:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801bfc6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801bfca:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801bfcc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801bfd0:	2b00      	cmp	r3, #0
 801bfd2:	dd10      	ble.n	801bff6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801bfd4:	140c      	asrs	r4, r1, #16
 801bfd6:	d405      	bmi.n	801bfe4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801bfd8:	4574      	cmp	r4, lr
 801bfda:	da03      	bge.n	801bfe4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801bfdc:	1414      	asrs	r4, r2, #16
 801bfde:	d401      	bmi.n	801bfe4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801bfe0:	42bc      	cmp	r4, r7
 801bfe2:	db09      	blt.n	801bff8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801bfe4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bfe6:	9800      	ldr	r0, [sp, #0]
 801bfe8:	4421      	add	r1, r4
 801bfea:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bfec:	3002      	adds	r0, #2
 801bfee:	4422      	add	r2, r4
 801bff0:	3b01      	subs	r3, #1
 801bff2:	9000      	str	r0, [sp, #0]
 801bff4:	e7ec      	b.n	801bfd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801bff6:	d071      	beq.n	801c0dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801bff8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801bffa:	1e5c      	subs	r4, r3, #1
 801bffc:	fb06 1604 	mla	r6, r6, r4, r1
 801c000:	1436      	asrs	r6, r6, #16
 801c002:	d45d      	bmi.n	801c0c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801c004:	4576      	cmp	r6, lr
 801c006:	da5b      	bge.n	801c0c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801c008:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801c00a:	fb06 2404 	mla	r4, r6, r4, r2
 801c00e:	1424      	asrs	r4, r4, #16
 801c010:	d456      	bmi.n	801c0c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801c012:	42bc      	cmp	r4, r7
 801c014:	da54      	bge.n	801c0c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801c016:	f8dd 9000 	ldr.w	r9, [sp]
 801c01a:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801c01e:	4698      	mov	r8, r3
 801c020:	f1b8 0f00 	cmp.w	r8, #0
 801c024:	dd54      	ble.n	801c0d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801c026:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801c02a:	9804      	ldr	r0, [sp, #16]
 801c02c:	1414      	asrs	r4, r2, #16
 801c02e:	fb07 0404 	mla	r4, r7, r4, r0
 801c032:	140e      	asrs	r6, r1, #16
 801c034:	9801      	ldr	r0, [sp, #4]
 801c036:	f814 e006 	ldrb.w	lr, [r4, r6]
 801c03a:	f8b9 4000 	ldrh.w	r4, [r9]
 801c03e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801c042:	eb00 0b0e 	add.w	fp, r0, lr
 801c046:	1227      	asrs	r7, r4, #8
 801c048:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801c04c:	f89b b001 	ldrb.w	fp, [fp, #1]
 801c050:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801c054:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c056:	fb16 f60a 	smulbb	r6, r6, sl
 801c05a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c05e:	fb07 6705 	mla	r7, r7, r5, r6
 801c062:	10e6      	asrs	r6, r4, #3
 801c064:	00e4      	lsls	r4, r4, #3
 801c066:	b2e4      	uxtb	r4, r4
 801c068:	fb1b fb0a 	smulbb	fp, fp, sl
 801c06c:	fb14 f405 	smulbb	r4, r4, r5
 801c070:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c074:	b2bf      	uxth	r7, r7
 801c076:	fb06 b605 	mla	r6, r6, r5, fp
 801c07a:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801c07e:	b2b6      	uxth	r6, r6
 801c080:	fa1f fe8e 	uxth.w	lr, lr
 801c084:	1c7c      	adds	r4, r7, #1
 801c086:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801c08a:	f106 0b01 	add.w	fp, r6, #1
 801c08e:	f10e 0401 	add.w	r4, lr, #1
 801c092:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801c096:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801c09a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c09e:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801c0a2:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801c0a6:	4327      	orrs	r7, r4
 801c0a8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801c0ac:	4401      	add	r1, r0
 801c0ae:	9814      	ldr	r0, [sp, #80]	; 0x50
 801c0b0:	ea47 070b 	orr.w	r7, r7, fp
 801c0b4:	f829 7b02 	strh.w	r7, [r9], #2
 801c0b8:	4402      	add	r2, r0
 801c0ba:	f108 38ff 	add.w	r8, r8, #4294967295
 801c0be:	e7af      	b.n	801c020 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801c0c0:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801c0c4:	f04f 0e00 	mov.w	lr, #0
 801c0c8:	eb03 040e 	add.w	r4, r3, lr
 801c0cc:	2c00      	cmp	r4, #0
 801c0ce:	dc43      	bgt.n	801c158 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801c0d0:	9a00      	ldr	r2, [sp, #0]
 801c0d2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c0d6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c0da:	9300      	str	r3, [sp, #0]
 801c0dc:	9b02      	ldr	r3, [sp, #8]
 801c0de:	2b00      	cmp	r3, #0
 801c0e0:	f340 8098 	ble.w	801c214 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801c0e4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c0e8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c0ec:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c0f0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c0f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c0f6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c0fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c0fe:	eef0 6a62 	vmov.f32	s13, s5
 801c102:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c106:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c10a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c10e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801c112:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c116:	eef0 6a43 	vmov.f32	s13, s6
 801c11a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c11e:	ee12 2a90 	vmov	r2, s5
 801c122:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c126:	fb92 f3f3 	sdiv	r3, r2, r3
 801c12a:	ee13 2a10 	vmov	r2, s6
 801c12e:	9313      	str	r3, [sp, #76]	; 0x4c
 801c130:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c132:	fb92 f3f3 	sdiv	r3, r2, r3
 801c136:	9314      	str	r3, [sp, #80]	; 0x50
 801c138:	9b02      	ldr	r3, [sp, #8]
 801c13a:	9a05      	ldr	r2, [sp, #20]
 801c13c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c140:	3b01      	subs	r3, #1
 801c142:	9302      	str	r3, [sp, #8]
 801c144:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801c148:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c14a:	eeb0 3a67 	vmov.f32	s6, s15
 801c14e:	bf08      	it	eq
 801c150:	4613      	moveq	r3, r2
 801c152:	eef0 2a47 	vmov.f32	s5, s14
 801c156:	e72a      	b.n	801bfae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801c158:	140f      	asrs	r7, r1, #16
 801c15a:	d454      	bmi.n	801c206 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801c15c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801c160:	42be      	cmp	r6, r7
 801c162:	dd50      	ble.n	801c206 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801c164:	ea5f 4822 	movs.w	r8, r2, asr #16
 801c168:	d44d      	bmi.n	801c206 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801c16a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801c16e:	4544      	cmp	r4, r8
 801c170:	dd49      	ble.n	801c206 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801c172:	9c04      	ldr	r4, [sp, #16]
 801c174:	b236      	sxth	r6, r6
 801c176:	fb08 4606 	mla	r6, r8, r6, r4
 801c17a:	f06f 0001 	mvn.w	r0, #1
 801c17e:	f816 8007 	ldrb.w	r8, [r6, r7]
 801c182:	9c01      	ldr	r4, [sp, #4]
 801c184:	fb00 fa0e 	mul.w	sl, r0, lr
 801c188:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801c18c:	9800      	ldr	r0, [sp, #0]
 801c18e:	eb04 0b08 	add.w	fp, r4, r8
 801c192:	f830 400a 	ldrh.w	r4, [r0, sl]
 801c196:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801c19a:	9801      	ldr	r0, [sp, #4]
 801c19c:	f89b b001 	ldrb.w	fp, [fp, #1]
 801c1a0:	f810 8008 	ldrb.w	r8, [r0, r8]
 801c1a4:	9800      	ldr	r0, [sp, #0]
 801c1a6:	1227      	asrs	r7, r4, #8
 801c1a8:	fb16 f609 	smulbb	r6, r6, r9
 801c1ac:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c1b0:	fb07 6705 	mla	r7, r7, r5, r6
 801c1b4:	10e6      	asrs	r6, r4, #3
 801c1b6:	00e4      	lsls	r4, r4, #3
 801c1b8:	b2e4      	uxtb	r4, r4
 801c1ba:	fb1b fb09 	smulbb	fp, fp, r9
 801c1be:	fb14 f405 	smulbb	r4, r4, r5
 801c1c2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c1c6:	b2bf      	uxth	r7, r7
 801c1c8:	fb06 b605 	mla	r6, r6, r5, fp
 801c1cc:	fb08 4809 	mla	r8, r8, r9, r4
 801c1d0:	b2b6      	uxth	r6, r6
 801c1d2:	fa1f f888 	uxth.w	r8, r8
 801c1d6:	1c7c      	adds	r4, r7, #1
 801c1d8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801c1dc:	f106 0b01 	add.w	fp, r6, #1
 801c1e0:	f108 0401 	add.w	r4, r8, #1
 801c1e4:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801c1e8:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801c1ec:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c1f0:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801c1f4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801c1f8:	4327      	orrs	r7, r4
 801c1fa:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801c1fe:	ea47 070b 	orr.w	r7, r7, fp
 801c202:	f820 700a 	strh.w	r7, [r0, sl]
 801c206:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c208:	4401      	add	r1, r0
 801c20a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801c20c:	f10e 3eff 	add.w	lr, lr, #4294967295
 801c210:	4402      	add	r2, r0
 801c212:	e759      	b.n	801c0c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801c214:	b007      	add	sp, #28
 801c216:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801c21c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c21c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c220:	b085      	sub	sp, #20
 801c222:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c226:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801c228:	9203      	str	r2, [sp, #12]
 801c22a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801c22e:	6870      	ldr	r0, [r6, #4]
 801c230:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801c232:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801c236:	686f      	ldr	r7, [r5, #4]
 801c238:	9101      	str	r1, [sp, #4]
 801c23a:	fb00 2404 	mla	r4, r0, r4, r2
 801c23e:	6832      	ldr	r2, [r6, #0]
 801c240:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c244:	682a      	ldr	r2, [r5, #0]
 801c246:	9202      	str	r2, [sp, #8]
 801c248:	3704      	adds	r7, #4
 801c24a:	9a01      	ldr	r2, [sp, #4]
 801c24c:	2a00      	cmp	r2, #0
 801c24e:	dc03      	bgt.n	801c258 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801c250:	9a03      	ldr	r2, [sp, #12]
 801c252:	2a00      	cmp	r2, #0
 801c254:	f340 80cc 	ble.w	801c3f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801c258:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c25a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801c25e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801c262:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c266:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c268:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c26c:	2b00      	cmp	r3, #0
 801c26e:	dd0d      	ble.n	801c28c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c270:	1406      	asrs	r6, r0, #16
 801c272:	d405      	bmi.n	801c280 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801c274:	454e      	cmp	r6, r9
 801c276:	da03      	bge.n	801c280 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801c278:	1416      	asrs	r6, r2, #16
 801c27a:	d401      	bmi.n	801c280 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801c27c:	4546      	cmp	r6, r8
 801c27e:	db06      	blt.n	801c28e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c280:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801c282:	4460      	add	r0, ip
 801c284:	4432      	add	r2, r6
 801c286:	3b01      	subs	r3, #1
 801c288:	3402      	adds	r4, #2
 801c28a:	e7ef      	b.n	801c26c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801c28c:	d00f      	beq.n	801c2ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c28e:	1e5e      	subs	r6, r3, #1
 801c290:	fb0c 0e06 	mla	lr, ip, r6, r0
 801c294:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801c298:	d543      	bpl.n	801c322 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801c29a:	4698      	mov	r8, r3
 801c29c:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801c2a0:	f1b8 0f00 	cmp.w	r8, #0
 801c2a4:	dc71      	bgt.n	801c38a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801c2a6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c2aa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c2ae:	9b01      	ldr	r3, [sp, #4]
 801c2b0:	2b00      	cmp	r3, #0
 801c2b2:	f340 809d 	ble.w	801c3f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801c2b6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c2ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c2be:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c2c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c2c4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c2c8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c2cc:	eeb0 6a62 	vmov.f32	s12, s5
 801c2d0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c2d4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c2d8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c2dc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801c2e0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c2e4:	eeb0 6a43 	vmov.f32	s12, s6
 801c2e8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c2ec:	ee12 2a90 	vmov	r2, s5
 801c2f0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c2f4:	fb92 fcf3 	sdiv	ip, r2, r3
 801c2f8:	ee13 2a10 	vmov	r2, s6
 801c2fc:	fb92 f3f3 	sdiv	r3, r2, r3
 801c300:	9312      	str	r3, [sp, #72]	; 0x48
 801c302:	9b01      	ldr	r3, [sp, #4]
 801c304:	9a03      	ldr	r2, [sp, #12]
 801c306:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c30a:	3b01      	subs	r3, #1
 801c30c:	9301      	str	r3, [sp, #4]
 801c30e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801c312:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c314:	eeb0 3a67 	vmov.f32	s6, s15
 801c318:	bf08      	it	eq
 801c31a:	4613      	moveq	r3, r2
 801c31c:	eef0 2a47 	vmov.f32	s5, s14
 801c320:	e793      	b.n	801c24a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801c322:	45ce      	cmp	lr, r9
 801c324:	dab9      	bge.n	801c29a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801c326:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c328:	fb01 2606 	mla	r6, r1, r6, r2
 801c32c:	1436      	asrs	r6, r6, #16
 801c32e:	d4b4      	bmi.n	801c29a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801c330:	4546      	cmp	r6, r8
 801c332:	dab2      	bge.n	801c29a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801c334:	4698      	mov	r8, r3
 801c336:	46a2      	mov	sl, r4
 801c338:	f1b8 0f00 	cmp.w	r8, #0
 801c33c:	ddb3      	ble.n	801c2a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801c33e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801c342:	9902      	ldr	r1, [sp, #8]
 801c344:	1416      	asrs	r6, r2, #16
 801c346:	fb09 1606 	mla	r6, r9, r6, r1
 801c34a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801c34e:	492a      	ldr	r1, [pc, #168]	; (801c3f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801c350:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801c354:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801c358:	eb07 0b0e 	add.w	fp, r7, lr
 801c35c:	4460      	add	r0, ip
 801c35e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801c362:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801c366:	00f6      	lsls	r6, r6, #3
 801c368:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801c36c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c370:	ea49 0606 	orr.w	r6, r9, r6
 801c374:	f817 900e 	ldrb.w	r9, [r7, lr]
 801c378:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c37a:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801c37e:	f82a 6b02 	strh.w	r6, [sl], #2
 801c382:	440a      	add	r2, r1
 801c384:	f108 38ff 	add.w	r8, r8, #4294967295
 801c388:	e7d6      	b.n	801c338 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801c38a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801c38e:	d429      	bmi.n	801c3e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801c390:	68ae      	ldr	r6, [r5, #8]
 801c392:	454e      	cmp	r6, r9
 801c394:	dd26      	ble.n	801c3e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801c396:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801c39a:	d423      	bmi.n	801c3e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801c39c:	68e9      	ldr	r1, [r5, #12]
 801c39e:	4559      	cmp	r1, fp
 801c3a0:	dd20      	ble.n	801c3e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801c3a2:	9902      	ldr	r1, [sp, #8]
 801c3a4:	fa0f fe86 	sxth.w	lr, r6
 801c3a8:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801c3ac:	f06f 0101 	mvn.w	r1, #1
 801c3b0:	f81e e009 	ldrb.w	lr, [lr, r9]
 801c3b4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801c3b8:	eb07 060e 	add.w	r6, r7, lr
 801c3bc:	fb01 f908 	mul.w	r9, r1, r8
 801c3c0:	f896 b002 	ldrb.w	fp, [r6, #2]
 801c3c4:	7876      	ldrb	r6, [r6, #1]
 801c3c6:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801c3ca:	00f6      	lsls	r6, r6, #3
 801c3cc:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801c3d0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c3d4:	ea4b 0606 	orr.w	r6, fp, r6
 801c3d8:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801c3dc:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801c3e0:	f82a 6009 	strh.w	r6, [sl, r9]
 801c3e4:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c3e6:	4460      	add	r0, ip
 801c3e8:	440a      	add	r2, r1
 801c3ea:	f108 38ff 	add.w	r8, r8, #4294967295
 801c3ee:	e757      	b.n	801c2a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801c3f0:	b005      	add	sp, #20
 801c3f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c3f6:	bf00      	nop
 801c3f8:	fffff800 	.word	0xfffff800

0801c3fc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c3fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c400:	b087      	sub	sp, #28
 801c402:	468b      	mov	fp, r1
 801c404:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c406:	9204      	str	r2, [sp, #16]
 801c408:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c40c:	9205      	str	r2, [sp, #20]
 801c40e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801c412:	6841      	ldr	r1, [r0, #4]
 801c414:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801c418:	fb01 2404 	mla	r4, r1, r4, r2
 801c41c:	6802      	ldr	r2, [r0, #0]
 801c41e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c422:	f8dc 2000 	ldr.w	r2, [ip]
 801c426:	9201      	str	r2, [sp, #4]
 801c428:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801c42c:	3204      	adds	r2, #4
 801c42e:	9202      	str	r2, [sp, #8]
 801c430:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c434:	f1bb 0f00 	cmp.w	fp, #0
 801c438:	dc03      	bgt.n	801c442 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801c43a:	9a04      	ldr	r2, [sp, #16]
 801c43c:	2a00      	cmp	r2, #0
 801c43e:	f340 8138 	ble.w	801c6b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801c442:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c444:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801c448:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801c44c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c450:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c452:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c456:	2b00      	cmp	r3, #0
 801c458:	dd0e      	ble.n	801c478 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801c45a:	1402      	asrs	r2, r0, #16
 801c45c:	d405      	bmi.n	801c46a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c45e:	42ba      	cmp	r2, r7
 801c460:	da03      	bge.n	801c46a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c462:	140a      	asrs	r2, r1, #16
 801c464:	d401      	bmi.n	801c46a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c466:	42b2      	cmp	r2, r6
 801c468:	db07      	blt.n	801c47a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801c46a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c46c:	4410      	add	r0, r2
 801c46e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c470:	3b01      	subs	r3, #1
 801c472:	4411      	add	r1, r2
 801c474:	3402      	adds	r4, #2
 801c476:	e7ee      	b.n	801c456 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801c478:	d019      	beq.n	801c4ae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801c47a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c47c:	1e5a      	subs	r2, r3, #1
 801c47e:	fb05 0502 	mla	r5, r5, r2, r0
 801c482:	142d      	asrs	r5, r5, #16
 801c484:	d409      	bmi.n	801c49a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801c486:	42bd      	cmp	r5, r7
 801c488:	da07      	bge.n	801c49a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801c48a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c48c:	fb05 1202 	mla	r2, r5, r2, r1
 801c490:	1412      	asrs	r2, r2, #16
 801c492:	d402      	bmi.n	801c49a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801c494:	42b2      	cmp	r2, r6
 801c496:	f2c0 80ac 	blt.w	801c5f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801c49a:	f04f 0e00 	mov.w	lr, #0
 801c49e:	eb03 020e 	add.w	r2, r3, lr
 801c4a2:	2a00      	cmp	r2, #0
 801c4a4:	dc3e      	bgt.n	801c524 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801c4a6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c4aa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c4ae:	f1bb 0f00 	cmp.w	fp, #0
 801c4b2:	f340 80fe 	ble.w	801c6b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801c4b6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c4ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c4be:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c4c2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c4c4:	f1bb 0b01 	subs.w	fp, fp, #1
 801c4c8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c4cc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c4d0:	eeb0 6a62 	vmov.f32	s12, s5
 801c4d4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c4d8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c4dc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c4e0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801c4e4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c4e8:	eeb0 6a43 	vmov.f32	s12, s6
 801c4ec:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c4f0:	ee12 2a90 	vmov	r2, s5
 801c4f4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c4f8:	fb92 f3f3 	sdiv	r3, r2, r3
 801c4fc:	ee13 2a10 	vmov	r2, s6
 801c500:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c504:	9313      	str	r3, [sp, #76]	; 0x4c
 801c506:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c508:	fb92 f3f3 	sdiv	r3, r2, r3
 801c50c:	9a04      	ldr	r2, [sp, #16]
 801c50e:	9314      	str	r3, [sp, #80]	; 0x50
 801c510:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801c514:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c516:	eeb0 3a67 	vmov.f32	s6, s15
 801c51a:	bf08      	it	eq
 801c51c:	4613      	moveq	r3, r2
 801c51e:	eef0 2a47 	vmov.f32	s5, s14
 801c522:	e787      	b.n	801c434 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801c524:	1406      	asrs	r6, r0, #16
 801c526:	d45d      	bmi.n	801c5e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801c528:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801c52c:	42b5      	cmp	r5, r6
 801c52e:	dd59      	ble.n	801c5e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801c530:	140f      	asrs	r7, r1, #16
 801c532:	d457      	bmi.n	801c5e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801c534:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801c538:	42ba      	cmp	r2, r7
 801c53a:	dd53      	ble.n	801c5e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801c53c:	9a01      	ldr	r2, [sp, #4]
 801c53e:	b22d      	sxth	r5, r5
 801c540:	fb07 2505 	mla	r5, r7, r5, r2
 801c544:	5daa      	ldrb	r2, [r5, r6]
 801c546:	9d02      	ldr	r5, [sp, #8]
 801c548:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801c54c:	0e2e      	lsrs	r6, r5, #24
 801c54e:	d049      	beq.n	801c5e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801c550:	f06f 0201 	mvn.w	r2, #1
 801c554:	fb02 f20e 	mul.w	r2, r2, lr
 801c558:	9203      	str	r2, [sp, #12]
 801c55a:	f834 8002 	ldrh.w	r8, [r4, r2]
 801c55e:	9a05      	ldr	r2, [sp, #20]
 801c560:	4356      	muls	r6, r2
 801c562:	1c72      	adds	r2, r6, #1
 801c564:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801c568:	1212      	asrs	r2, r2, #8
 801c56a:	fa1f f982 	uxth.w	r9, r2
 801c56e:	ea4f 2728 	mov.w	r7, r8, asr #8
 801c572:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801c576:	43d2      	mvns	r2, r2
 801c578:	b2d2      	uxtb	r2, r2
 801c57a:	fb16 f609 	smulbb	r6, r6, r9
 801c57e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c582:	fb07 6702 	mla	r7, r7, r2, r6
 801c586:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801c58a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801c58e:	b2ed      	uxtb	r5, r5
 801c590:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801c594:	fa5f f888 	uxtb.w	r8, r8
 801c598:	fb15 f509 	smulbb	r5, r5, r9
 801c59c:	fb08 5502 	mla	r5, r8, r2, r5
 801c5a0:	b2bf      	uxth	r7, r7
 801c5a2:	fb1a fa09 	smulbb	sl, sl, r9
 801c5a6:	b2ad      	uxth	r5, r5
 801c5a8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c5ac:	fb06 a602 	mla	r6, r6, r2, sl
 801c5b0:	1c7a      	adds	r2, r7, #1
 801c5b2:	f105 0a01 	add.w	sl, r5, #1
 801c5b6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801c5ba:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c5be:	b2b6      	uxth	r6, r6
 801c5c0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c5c4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c5c8:	ea4a 0707 	orr.w	r7, sl, r7
 801c5cc:	f106 0a01 	add.w	sl, r6, #1
 801c5d0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801c5d4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c5d8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c5dc:	9a03      	ldr	r2, [sp, #12]
 801c5de:	ea47 070a 	orr.w	r7, r7, sl
 801c5e2:	52a7      	strh	r7, [r4, r2]
 801c5e4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c5e6:	4410      	add	r0, r2
 801c5e8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c5ea:	f10e 3eff 	add.w	lr, lr, #4294967295
 801c5ee:	4411      	add	r1, r2
 801c5f0:	e755      	b.n	801c49e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c5f2:	f04f 0800 	mov.w	r8, #0
 801c5f6:	eba3 0208 	sub.w	r2, r3, r8
 801c5fa:	2a00      	cmp	r2, #0
 801c5fc:	f77f af53 	ble.w	801c4a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801c600:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801c604:	9f01      	ldr	r7, [sp, #4]
 801c606:	140a      	asrs	r2, r1, #16
 801c608:	1405      	asrs	r5, r0, #16
 801c60a:	fb06 7202 	mla	r2, r6, r2, r7
 801c60e:	5d52      	ldrb	r2, [r2, r5]
 801c610:	9d02      	ldr	r5, [sp, #8]
 801c612:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801c616:	0e2e      	lsrs	r6, r5, #24
 801c618:	d044      	beq.n	801c6a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801c61a:	9a05      	ldr	r2, [sp, #20]
 801c61c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801c620:	4356      	muls	r6, r2
 801c622:	1c72      	adds	r2, r6, #1
 801c624:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801c628:	1212      	asrs	r2, r2, #8
 801c62a:	fa1f f982 	uxth.w	r9, r2
 801c62e:	ea4f 272e 	mov.w	r7, lr, asr #8
 801c632:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801c636:	43d2      	mvns	r2, r2
 801c638:	b2d2      	uxtb	r2, r2
 801c63a:	fb16 f609 	smulbb	r6, r6, r9
 801c63e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c642:	fb07 6702 	mla	r7, r7, r2, r6
 801c646:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801c64a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801c64e:	b2ed      	uxtb	r5, r5
 801c650:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c654:	fa5f fe8e 	uxtb.w	lr, lr
 801c658:	fb15 f509 	smulbb	r5, r5, r9
 801c65c:	fb0e 5502 	mla	r5, lr, r2, r5
 801c660:	b2bf      	uxth	r7, r7
 801c662:	fb1a fa09 	smulbb	sl, sl, r9
 801c666:	b2ad      	uxth	r5, r5
 801c668:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c66c:	fb06 a602 	mla	r6, r6, r2, sl
 801c670:	1c7a      	adds	r2, r7, #1
 801c672:	f105 0a01 	add.w	sl, r5, #1
 801c676:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801c67a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c67e:	b2b6      	uxth	r6, r6
 801c680:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c684:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c688:	ea4a 0707 	orr.w	r7, sl, r7
 801c68c:	f106 0a01 	add.w	sl, r6, #1
 801c690:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801c694:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c698:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c69c:	ea47 070a 	orr.w	r7, r7, sl
 801c6a0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801c6a4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c6a6:	4410      	add	r0, r2
 801c6a8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c6aa:	f108 0801 	add.w	r8, r8, #1
 801c6ae:	4411      	add	r1, r2
 801c6b0:	e7a1      	b.n	801c5f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801c6b2:	b007      	add	sp, #28
 801c6b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c6b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c6b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c6bc:	b085      	sub	sp, #20
 801c6be:	468b      	mov	fp, r1
 801c6c0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c6c2:	9203      	str	r2, [sp, #12]
 801c6c4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801c6c8:	6841      	ldr	r1, [r0, #4]
 801c6ca:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801c6ce:	fb01 2404 	mla	r4, r1, r4, r2
 801c6d2:	6802      	ldr	r2, [r0, #0]
 801c6d4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c6d8:	f8de 2000 	ldr.w	r2, [lr]
 801c6dc:	9200      	str	r2, [sp, #0]
 801c6de:	f8de 2004 	ldr.w	r2, [lr, #4]
 801c6e2:	3204      	adds	r2, #4
 801c6e4:	9201      	str	r2, [sp, #4]
 801c6e6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c6ea:	f1bb 0f00 	cmp.w	fp, #0
 801c6ee:	dc03      	bgt.n	801c6f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801c6f0:	9a03      	ldr	r2, [sp, #12]
 801c6f2:	2a00      	cmp	r2, #0
 801c6f4:	f340 8153 	ble.w	801c99e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801c6f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c6fa:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801c6fe:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801c702:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c706:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c708:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c70c:	2b00      	cmp	r3, #0
 801c70e:	dd0e      	ble.n	801c72e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c710:	1408      	asrs	r0, r1, #16
 801c712:	d405      	bmi.n	801c720 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801c714:	42b8      	cmp	r0, r7
 801c716:	da03      	bge.n	801c720 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801c718:	1410      	asrs	r0, r2, #16
 801c71a:	d401      	bmi.n	801c720 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801c71c:	42b0      	cmp	r0, r6
 801c71e:	db07      	blt.n	801c730 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c720:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c722:	4401      	add	r1, r0
 801c724:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c726:	3b01      	subs	r3, #1
 801c728:	4402      	add	r2, r0
 801c72a:	3402      	adds	r4, #2
 801c72c:	e7ee      	b.n	801c70c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801c72e:	d017      	beq.n	801c760 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801c730:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801c732:	1e58      	subs	r0, r3, #1
 801c734:	fb05 1500 	mla	r5, r5, r0, r1
 801c738:	142d      	asrs	r5, r5, #16
 801c73a:	d409      	bmi.n	801c750 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801c73c:	42bd      	cmp	r5, r7
 801c73e:	da07      	bge.n	801c750 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801c740:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801c742:	fb05 2000 	mla	r0, r5, r0, r2
 801c746:	1400      	asrs	r0, r0, #16
 801c748:	d402      	bmi.n	801c750 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801c74a:	42b0      	cmp	r0, r6
 801c74c:	f2c0 80bc 	blt.w	801c8c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801c750:	2600      	movs	r6, #0
 801c752:	1998      	adds	r0, r3, r6
 801c754:	2800      	cmp	r0, #0
 801c756:	dc3e      	bgt.n	801c7d6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801c758:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c75c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c760:	f1bb 0f00 	cmp.w	fp, #0
 801c764:	f340 811b 	ble.w	801c99e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801c768:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c76c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c770:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c774:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c776:	f1bb 0b01 	subs.w	fp, fp, #1
 801c77a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c77e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c782:	eeb0 6a62 	vmov.f32	s12, s5
 801c786:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c78a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c78e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c792:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801c796:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c79a:	eeb0 6a43 	vmov.f32	s12, s6
 801c79e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c7a2:	ee12 2a90 	vmov	r2, s5
 801c7a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c7aa:	fb92 f3f3 	sdiv	r3, r2, r3
 801c7ae:	ee13 2a10 	vmov	r2, s6
 801c7b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c7b6:	9311      	str	r3, [sp, #68]	; 0x44
 801c7b8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c7ba:	fb92 f3f3 	sdiv	r3, r2, r3
 801c7be:	9a03      	ldr	r2, [sp, #12]
 801c7c0:	9312      	str	r3, [sp, #72]	; 0x48
 801c7c2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801c7c6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c7c8:	eeb0 3a67 	vmov.f32	s6, s15
 801c7cc:	bf08      	it	eq
 801c7ce:	4613      	moveq	r3, r2
 801c7d0:	eef0 2a47 	vmov.f32	s5, s14
 801c7d4:	e789      	b.n	801c6ea <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801c7d6:	140f      	asrs	r7, r1, #16
 801c7d8:	d426      	bmi.n	801c828 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801c7da:	f8de 5008 	ldr.w	r5, [lr, #8]
 801c7de:	42bd      	cmp	r5, r7
 801c7e0:	dd22      	ble.n	801c828 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801c7e2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801c7e6:	d41f      	bmi.n	801c828 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801c7e8:	f8de 000c 	ldr.w	r0, [lr, #12]
 801c7ec:	4560      	cmp	r0, ip
 801c7ee:	dd1b      	ble.n	801c828 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801c7f0:	9800      	ldr	r0, [sp, #0]
 801c7f2:	b22d      	sxth	r5, r5
 801c7f4:	fb0c 0505 	mla	r5, ip, r5, r0
 801c7f8:	5de8      	ldrb	r0, [r5, r7]
 801c7fa:	9d01      	ldr	r5, [sp, #4]
 801c7fc:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801c800:	0e07      	lsrs	r7, r0, #24
 801c802:	2fff      	cmp	r7, #255	; 0xff
 801c804:	d116      	bne.n	801c834 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c806:	f06f 0501 	mvn.w	r5, #1
 801c80a:	fb05 f706 	mul.w	r7, r5, r6
 801c80e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801c812:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801c816:	0945      	lsrs	r5, r0, #5
 801c818:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c81c:	ea4c 0505 	orr.w	r5, ip, r5
 801c820:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801c824:	4305      	orrs	r5, r0
 801c826:	53e5      	strh	r5, [r4, r7]
 801c828:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c82a:	4401      	add	r1, r0
 801c82c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c82e:	3e01      	subs	r6, #1
 801c830:	4402      	add	r2, r0
 801c832:	e78e      	b.n	801c752 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c834:	b2fd      	uxtb	r5, r7
 801c836:	2f00      	cmp	r7, #0
 801c838:	d0f6      	beq.n	801c828 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801c83a:	f06f 0701 	mvn.w	r7, #1
 801c83e:	4377      	muls	r7, r6
 801c840:	fa1f f985 	uxth.w	r9, r5
 801c844:	f834 8007 	ldrh.w	r8, [r4, r7]
 801c848:	9702      	str	r7, [sp, #8]
 801c84a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801c84e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801c852:	43ed      	mvns	r5, r5
 801c854:	b2ed      	uxtb	r5, r5
 801c856:	fb17 f709 	smulbb	r7, r7, r9
 801c85a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c85e:	fb0c 7c05 	mla	ip, ip, r5, r7
 801c862:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801c866:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801c86a:	b2c0      	uxtb	r0, r0
 801c86c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801c870:	fa5f f888 	uxtb.w	r8, r8
 801c874:	fb10 f009 	smulbb	r0, r0, r9
 801c878:	fb08 0005 	mla	r0, r8, r5, r0
 801c87c:	b280      	uxth	r0, r0
 801c87e:	fa1f fc8c 	uxth.w	ip, ip
 801c882:	fb1a fa09 	smulbb	sl, sl, r9
 801c886:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c88a:	fb07 a705 	mla	r7, r7, r5, sl
 801c88e:	f100 0a01 	add.w	sl, r0, #1
 801c892:	f10c 0501 	add.w	r5, ip, #1
 801c896:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801c89a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c89e:	b2bf      	uxth	r7, r7
 801c8a0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c8a4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c8a8:	ea4a 0c0c 	orr.w	ip, sl, ip
 801c8ac:	f107 0a01 	add.w	sl, r7, #1
 801c8b0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801c8b4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c8b8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c8bc:	9802      	ldr	r0, [sp, #8]
 801c8be:	ea4c 0c0a 	orr.w	ip, ip, sl
 801c8c2:	f824 c000 	strh.w	ip, [r4, r0]
 801c8c6:	e7af      	b.n	801c828 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801c8c8:	f04f 0800 	mov.w	r8, #0
 801c8cc:	eba3 0008 	sub.w	r0, r3, r8
 801c8d0:	2800      	cmp	r0, #0
 801c8d2:	f77f af41 	ble.w	801c758 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c8d6:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801c8da:	9f00      	ldr	r7, [sp, #0]
 801c8dc:	1410      	asrs	r0, r2, #16
 801c8de:	140d      	asrs	r5, r1, #16
 801c8e0:	fb06 7000 	mla	r0, r6, r0, r7
 801c8e4:	5d40      	ldrb	r0, [r0, r5]
 801c8e6:	9d01      	ldr	r5, [sp, #4]
 801c8e8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801c8ec:	0e2e      	lsrs	r6, r5, #24
 801c8ee:	2eff      	cmp	r6, #255	; 0xff
 801c8f0:	d112      	bne.n	801c918 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801c8f2:	482c      	ldr	r0, [pc, #176]	; (801c9a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801c8f4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801c8f8:	0968      	lsrs	r0, r5, #5
 801c8fa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c8fe:	4330      	orrs	r0, r6
 801c900:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c904:	4328      	orrs	r0, r5
 801c906:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801c90a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c90c:	4401      	add	r1, r0
 801c90e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c910:	f108 0801 	add.w	r8, r8, #1
 801c914:	4402      	add	r2, r0
 801c916:	e7d9      	b.n	801c8cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801c918:	b2f0      	uxtb	r0, r6
 801c91a:	2e00      	cmp	r6, #0
 801c91c:	d0f5      	beq.n	801c90a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801c91e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801c922:	fa1f f980 	uxth.w	r9, r0
 801c926:	ea4f 272c 	mov.w	r7, ip, asr #8
 801c92a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801c92e:	43c0      	mvns	r0, r0
 801c930:	b2c0      	uxtb	r0, r0
 801c932:	fb16 f609 	smulbb	r6, r6, r9
 801c936:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c93a:	fb07 6700 	mla	r7, r7, r0, r6
 801c93e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801c942:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801c946:	b2ed      	uxtb	r5, r5
 801c948:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c94c:	fa5f fc8c 	uxtb.w	ip, ip
 801c950:	fb15 f509 	smulbb	r5, r5, r9
 801c954:	fb0c 5500 	mla	r5, ip, r0, r5
 801c958:	b2bf      	uxth	r7, r7
 801c95a:	fb1a fa09 	smulbb	sl, sl, r9
 801c95e:	b2ad      	uxth	r5, r5
 801c960:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c964:	fb06 a600 	mla	r6, r6, r0, sl
 801c968:	1c78      	adds	r0, r7, #1
 801c96a:	f105 0a01 	add.w	sl, r5, #1
 801c96e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801c972:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c976:	b2b6      	uxth	r6, r6
 801c978:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c97c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c980:	ea4a 0707 	orr.w	r7, sl, r7
 801c984:	f106 0a01 	add.w	sl, r6, #1
 801c988:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801c98c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c990:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c994:	ea47 070a 	orr.w	r7, r7, sl
 801c998:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801c99c:	e7b5      	b.n	801c90a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801c99e:	b005      	add	sp, #20
 801c9a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c9a4:	fffff800 	.word	0xfffff800

0801c9a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c9a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c9ac:	b087      	sub	sp, #28
 801c9ae:	468b      	mov	fp, r1
 801c9b0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801c9b2:	9204      	str	r2, [sp, #16]
 801c9b4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c9b8:	9205      	str	r2, [sp, #20]
 801c9ba:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801c9be:	6861      	ldr	r1, [r4, #4]
 801c9c0:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801c9c4:	fb01 2000 	mla	r0, r1, r0, r2
 801c9c8:	6822      	ldr	r2, [r4, #0]
 801c9ca:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801c9ce:	f8de 2000 	ldr.w	r2, [lr]
 801c9d2:	9201      	str	r2, [sp, #4]
 801c9d4:	f8de 2004 	ldr.w	r2, [lr, #4]
 801c9d8:	9202      	str	r2, [sp, #8]
 801c9da:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c9de:	f1bb 0f00 	cmp.w	fp, #0
 801c9e2:	dc03      	bgt.n	801c9ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801c9e4:	9a04      	ldr	r2, [sp, #16]
 801c9e6:	2a00      	cmp	r2, #0
 801c9e8:	f340 8142 	ble.w	801cc70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801c9ec:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c9ee:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801c9f2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801c9f6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c9fa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c9fc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ca00:	2b00      	cmp	r3, #0
 801ca02:	dd0e      	ble.n	801ca22 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ca04:	140c      	asrs	r4, r1, #16
 801ca06:	d405      	bmi.n	801ca14 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ca08:	42bc      	cmp	r4, r7
 801ca0a:	da03      	bge.n	801ca14 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ca0c:	1414      	asrs	r4, r2, #16
 801ca0e:	d401      	bmi.n	801ca14 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ca10:	42b4      	cmp	r4, r6
 801ca12:	db07      	blt.n	801ca24 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ca14:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ca16:	4421      	add	r1, r4
 801ca18:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ca1a:	3b01      	subs	r3, #1
 801ca1c:	4422      	add	r2, r4
 801ca1e:	3002      	adds	r0, #2
 801ca20:	e7ee      	b.n	801ca00 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801ca22:	d019      	beq.n	801ca58 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801ca24:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ca26:	1e5c      	subs	r4, r3, #1
 801ca28:	fb05 1504 	mla	r5, r5, r4, r1
 801ca2c:	142d      	asrs	r5, r5, #16
 801ca2e:	d409      	bmi.n	801ca44 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801ca30:	42bd      	cmp	r5, r7
 801ca32:	da07      	bge.n	801ca44 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801ca34:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ca36:	fb05 2404 	mla	r4, r5, r4, r2
 801ca3a:	1424      	asrs	r4, r4, #16
 801ca3c:	d402      	bmi.n	801ca44 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801ca3e:	42b4      	cmp	r4, r6
 801ca40:	f2c0 80b1 	blt.w	801cba6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801ca44:	f04f 0800 	mov.w	r8, #0
 801ca48:	eb03 0408 	add.w	r4, r3, r8
 801ca4c:	2c00      	cmp	r4, #0
 801ca4e:	dc3e      	bgt.n	801cace <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801ca50:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ca54:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ca58:	f1bb 0f00 	cmp.w	fp, #0
 801ca5c:	f340 8108 	ble.w	801cc70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801ca60:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ca64:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ca68:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ca6c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ca6e:	f1bb 0b01 	subs.w	fp, fp, #1
 801ca72:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ca76:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ca7a:	eeb0 6a62 	vmov.f32	s12, s5
 801ca7e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ca82:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ca86:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ca8a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801ca8e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ca92:	eeb0 6a43 	vmov.f32	s12, s6
 801ca96:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ca9a:	ee12 2a90 	vmov	r2, s5
 801ca9e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801caa2:	fb92 f3f3 	sdiv	r3, r2, r3
 801caa6:	ee13 2a10 	vmov	r2, s6
 801caaa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801caae:	9313      	str	r3, [sp, #76]	; 0x4c
 801cab0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cab2:	fb92 f3f3 	sdiv	r3, r2, r3
 801cab6:	9a04      	ldr	r2, [sp, #16]
 801cab8:	9314      	str	r3, [sp, #80]	; 0x50
 801caba:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801cabe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cac0:	eeb0 3a67 	vmov.f32	s6, s15
 801cac4:	bf08      	it	eq
 801cac6:	4613      	moveq	r3, r2
 801cac8:	eef0 2a47 	vmov.f32	s5, s14
 801cacc:	e787      	b.n	801c9de <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801cace:	140e      	asrs	r6, r1, #16
 801cad0:	d462      	bmi.n	801cb98 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801cad2:	f8de 5008 	ldr.w	r5, [lr, #8]
 801cad6:	42b5      	cmp	r5, r6
 801cad8:	dd5e      	ble.n	801cb98 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801cada:	1417      	asrs	r7, r2, #16
 801cadc:	d45c      	bmi.n	801cb98 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801cade:	f8de 400c 	ldr.w	r4, [lr, #12]
 801cae2:	42bc      	cmp	r4, r7
 801cae4:	dd58      	ble.n	801cb98 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801cae6:	b22d      	sxth	r5, r5
 801cae8:	fb07 6505 	mla	r5, r7, r5, r6
 801caec:	9c02      	ldr	r4, [sp, #8]
 801caee:	5d66      	ldrb	r6, [r4, r5]
 801caf0:	2e00      	cmp	r6, #0
 801caf2:	d051      	beq.n	801cb98 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801caf4:	9c01      	ldr	r4, [sp, #4]
 801caf6:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801cafa:	f06f 0401 	mvn.w	r4, #1
 801cafe:	fb04 f408 	mul.w	r4, r4, r8
 801cb02:	9403      	str	r4, [sp, #12]
 801cb04:	5b05      	ldrh	r5, [r0, r4]
 801cb06:	9c05      	ldr	r4, [sp, #20]
 801cb08:	4366      	muls	r6, r4
 801cb0a:	1c74      	adds	r4, r6, #1
 801cb0c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801cb10:	1224      	asrs	r4, r4, #8
 801cb12:	b2a7      	uxth	r7, r4
 801cb14:	122e      	asrs	r6, r5, #8
 801cb16:	43e4      	mvns	r4, r4
 801cb18:	b2e4      	uxtb	r4, r4
 801cb1a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801cb1e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801cb22:	fb16 f604 	smulbb	r6, r6, r4
 801cb26:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801cb2a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801cb2e:	00ed      	lsls	r5, r5, #3
 801cb30:	fb0c 6c07 	mla	ip, ip, r7, r6
 801cb34:	b2ed      	uxtb	r5, r5
 801cb36:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801cb3a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801cb3e:	fb15 f504 	smulbb	r5, r5, r4
 801cb42:	fa5f f989 	uxtb.w	r9, r9
 801cb46:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801cb4a:	fb09 5507 	mla	r5, r9, r7, r5
 801cb4e:	fb1a fa04 	smulbb	sl, sl, r4
 801cb52:	fa1f fc8c 	uxth.w	ip, ip
 801cb56:	b2ad      	uxth	r5, r5
 801cb58:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801cb5c:	fb06 a607 	mla	r6, r6, r7, sl
 801cb60:	f10c 0401 	add.w	r4, ip, #1
 801cb64:	f105 0a01 	add.w	sl, r5, #1
 801cb68:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801cb6c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801cb70:	b2b6      	uxth	r6, r6
 801cb72:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801cb76:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801cb7a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801cb7e:	f106 0a01 	add.w	sl, r6, #1
 801cb82:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801cb86:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801cb8a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801cb8e:	9c03      	ldr	r4, [sp, #12]
 801cb90:	ea4c 0c0a 	orr.w	ip, ip, sl
 801cb94:	f820 c004 	strh.w	ip, [r0, r4]
 801cb98:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801cb9a:	4421      	add	r1, r4
 801cb9c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801cb9e:	f108 38ff 	add.w	r8, r8, #4294967295
 801cba2:	4422      	add	r2, r4
 801cba4:	e750      	b.n	801ca48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801cba6:	f04f 0900 	mov.w	r9, #0
 801cbaa:	eba3 0409 	sub.w	r4, r3, r9
 801cbae:	2c00      	cmp	r4, #0
 801cbb0:	f77f af4e 	ble.w	801ca50 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801cbb4:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801cbb8:	140d      	asrs	r5, r1, #16
 801cbba:	1414      	asrs	r4, r2, #16
 801cbbc:	fb06 5404 	mla	r4, r6, r4, r5
 801cbc0:	9d02      	ldr	r5, [sp, #8]
 801cbc2:	5d2e      	ldrb	r6, [r5, r4]
 801cbc4:	2e00      	cmp	r6, #0
 801cbc6:	d04c      	beq.n	801cc62 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801cbc8:	9d01      	ldr	r5, [sp, #4]
 801cbca:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801cbce:	9c05      	ldr	r4, [sp, #20]
 801cbd0:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801cbd4:	4366      	muls	r6, r4
 801cbd6:	1c74      	adds	r4, r6, #1
 801cbd8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801cbdc:	1224      	asrs	r4, r4, #8
 801cbde:	b2a7      	uxth	r7, r4
 801cbe0:	122e      	asrs	r6, r5, #8
 801cbe2:	43e4      	mvns	r4, r4
 801cbe4:	b2e4      	uxtb	r4, r4
 801cbe6:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801cbea:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801cbee:	fb16 f604 	smulbb	r6, r6, r4
 801cbf2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801cbf6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801cbfa:	00ed      	lsls	r5, r5, #3
 801cbfc:	fb0c 6c07 	mla	ip, ip, r7, r6
 801cc00:	b2ed      	uxtb	r5, r5
 801cc02:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801cc06:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801cc0a:	fb15 f504 	smulbb	r5, r5, r4
 801cc0e:	fa5f f888 	uxtb.w	r8, r8
 801cc12:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801cc16:	fb08 5507 	mla	r5, r8, r7, r5
 801cc1a:	fb1a fa04 	smulbb	sl, sl, r4
 801cc1e:	fa1f fc8c 	uxth.w	ip, ip
 801cc22:	b2ad      	uxth	r5, r5
 801cc24:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801cc28:	fb06 a607 	mla	r6, r6, r7, sl
 801cc2c:	f10c 0401 	add.w	r4, ip, #1
 801cc30:	f105 0a01 	add.w	sl, r5, #1
 801cc34:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801cc38:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801cc3c:	b2b6      	uxth	r6, r6
 801cc3e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801cc42:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801cc46:	ea4a 0c0c 	orr.w	ip, sl, ip
 801cc4a:	f106 0a01 	add.w	sl, r6, #1
 801cc4e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801cc52:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801cc56:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801cc5a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801cc5e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801cc62:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801cc64:	4421      	add	r1, r4
 801cc66:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801cc68:	f109 0901 	add.w	r9, r9, #1
 801cc6c:	4422      	add	r2, r4
 801cc6e:	e79c      	b.n	801cbaa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801cc70:	b007      	add	sp, #28
 801cc72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cc76 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cc76:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cc7a:	b085      	sub	sp, #20
 801cc7c:	468b      	mov	fp, r1
 801cc7e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801cc80:	9203      	str	r2, [sp, #12]
 801cc82:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801cc86:	6861      	ldr	r1, [r4, #4]
 801cc88:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801cc8c:	fb01 2000 	mla	r0, r1, r0, r2
 801cc90:	6822      	ldr	r2, [r4, #0]
 801cc92:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801cc96:	f8d8 2000 	ldr.w	r2, [r8]
 801cc9a:	9200      	str	r2, [sp, #0]
 801cc9c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801cca0:	9201      	str	r2, [sp, #4]
 801cca2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801cca6:	f1bb 0f00 	cmp.w	fp, #0
 801ccaa:	dc03      	bgt.n	801ccb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801ccac:	9a03      	ldr	r2, [sp, #12]
 801ccae:	2a00      	cmp	r2, #0
 801ccb0:	f340 8146 	ble.w	801cf40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801ccb4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ccb6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801ccba:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801ccbe:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ccc2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ccc4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ccc8:	2b00      	cmp	r3, #0
 801ccca:	dd0e      	ble.n	801ccea <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801cccc:	140c      	asrs	r4, r1, #16
 801ccce:	d405      	bmi.n	801ccdc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ccd0:	42bc      	cmp	r4, r7
 801ccd2:	da03      	bge.n	801ccdc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ccd4:	1414      	asrs	r4, r2, #16
 801ccd6:	d401      	bmi.n	801ccdc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ccd8:	42b4      	cmp	r4, r6
 801ccda:	db07      	blt.n	801ccec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ccdc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ccde:	4421      	add	r1, r4
 801cce0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801cce2:	3b01      	subs	r3, #1
 801cce4:	4422      	add	r2, r4
 801cce6:	3002      	adds	r0, #2
 801cce8:	e7ee      	b.n	801ccc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ccea:	d017      	beq.n	801cd1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801ccec:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ccee:	1e5c      	subs	r4, r3, #1
 801ccf0:	fb05 1504 	mla	r5, r5, r4, r1
 801ccf4:	142d      	asrs	r5, r5, #16
 801ccf6:	d409      	bmi.n	801cd0c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ccf8:	42bd      	cmp	r5, r7
 801ccfa:	da07      	bge.n	801cd0c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ccfc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ccfe:	fb05 2404 	mla	r4, r5, r4, r2
 801cd02:	1424      	asrs	r4, r4, #16
 801cd04:	d402      	bmi.n	801cd0c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801cd06:	42b4      	cmp	r4, r6
 801cd08:	f2c0 80b3 	blt.w	801ce72 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801cd0c:	2600      	movs	r6, #0
 801cd0e:	199c      	adds	r4, r3, r6
 801cd10:	2c00      	cmp	r4, #0
 801cd12:	dc3e      	bgt.n	801cd92 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801cd14:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cd18:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cd1c:	f1bb 0f00 	cmp.w	fp, #0
 801cd20:	f340 810e 	ble.w	801cf40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801cd24:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cd28:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cd2c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801cd30:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cd32:	f1bb 0b01 	subs.w	fp, fp, #1
 801cd36:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cd3a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cd3e:	eeb0 6a62 	vmov.f32	s12, s5
 801cd42:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cd46:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cd4a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cd4e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801cd52:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cd56:	eeb0 6a43 	vmov.f32	s12, s6
 801cd5a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cd5e:	ee12 2a90 	vmov	r2, s5
 801cd62:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cd66:	fb92 f3f3 	sdiv	r3, r2, r3
 801cd6a:	ee13 2a10 	vmov	r2, s6
 801cd6e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cd72:	9311      	str	r3, [sp, #68]	; 0x44
 801cd74:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cd76:	fb92 f3f3 	sdiv	r3, r2, r3
 801cd7a:	9a03      	ldr	r2, [sp, #12]
 801cd7c:	9312      	str	r3, [sp, #72]	; 0x48
 801cd7e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801cd82:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cd84:	eeb0 3a67 	vmov.f32	s6, s15
 801cd88:	bf08      	it	eq
 801cd8a:	4613      	moveq	r3, r2
 801cd8c:	eef0 2a47 	vmov.f32	s5, s14
 801cd90:	e789      	b.n	801cca6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801cd92:	140f      	asrs	r7, r1, #16
 801cd94:	d418      	bmi.n	801cdc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801cd96:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801cd9a:	42bd      	cmp	r5, r7
 801cd9c:	dd14      	ble.n	801cdc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801cd9e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801cda2:	d411      	bmi.n	801cdc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801cda4:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801cda8:	4564      	cmp	r4, ip
 801cdaa:	dd0d      	ble.n	801cdc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801cdac:	b22d      	sxth	r5, r5
 801cdae:	fb0c 7505 	mla	r5, ip, r5, r7
 801cdb2:	9c01      	ldr	r4, [sp, #4]
 801cdb4:	5d64      	ldrb	r4, [r4, r5]
 801cdb6:	2cff      	cmp	r4, #255	; 0xff
 801cdb8:	d10c      	bne.n	801cdd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801cdba:	9c00      	ldr	r4, [sp, #0]
 801cdbc:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801cdc0:	f06f 0401 	mvn.w	r4, #1
 801cdc4:	4374      	muls	r4, r6
 801cdc6:	5305      	strh	r5, [r0, r4]
 801cdc8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801cdca:	4421      	add	r1, r4
 801cdcc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801cdce:	3e01      	subs	r6, #1
 801cdd0:	4422      	add	r2, r4
 801cdd2:	e79c      	b.n	801cd0e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801cdd4:	2c00      	cmp	r4, #0
 801cdd6:	d0f7      	beq.n	801cdc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801cdd8:	9f00      	ldr	r7, [sp, #0]
 801cdda:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801cdde:	f06f 0501 	mvn.w	r5, #1
 801cde2:	4375      	muls	r5, r6
 801cde4:	9502      	str	r5, [sp, #8]
 801cde6:	5b45      	ldrh	r5, [r0, r5]
 801cde8:	fa1f fc84 	uxth.w	ip, r4
 801cdec:	122f      	asrs	r7, r5, #8
 801cdee:	43e4      	mvns	r4, r4
 801cdf0:	b2e4      	uxtb	r4, r4
 801cdf2:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801cdf6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cdfa:	fb17 f704 	smulbb	r7, r7, r4
 801cdfe:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ce02:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ce06:	00ed      	lsls	r5, r5, #3
 801ce08:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801ce0c:	b2ed      	uxtb	r5, r5
 801ce0e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801ce12:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801ce16:	fb15 f504 	smulbb	r5, r5, r4
 801ce1a:	fa5f f989 	uxtb.w	r9, r9
 801ce1e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ce22:	fb09 550c 	mla	r5, r9, ip, r5
 801ce26:	fb1a fa04 	smulbb	sl, sl, r4
 801ce2a:	fa1f fe8e 	uxth.w	lr, lr
 801ce2e:	b2ad      	uxth	r5, r5
 801ce30:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ce34:	fb07 a70c 	mla	r7, r7, ip, sl
 801ce38:	f10e 0401 	add.w	r4, lr, #1
 801ce3c:	f105 0a01 	add.w	sl, r5, #1
 801ce40:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801ce44:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ce48:	b2bf      	uxth	r7, r7
 801ce4a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ce4e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801ce52:	ea4a 0e0e 	orr.w	lr, sl, lr
 801ce56:	f107 0a01 	add.w	sl, r7, #1
 801ce5a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801ce5e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ce62:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ce66:	9c02      	ldr	r4, [sp, #8]
 801ce68:	ea4e 0e0a 	orr.w	lr, lr, sl
 801ce6c:	f820 e004 	strh.w	lr, [r0, r4]
 801ce70:	e7aa      	b.n	801cdc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ce72:	f04f 0900 	mov.w	r9, #0
 801ce76:	eba3 0409 	sub.w	r4, r3, r9
 801ce7a:	2c00      	cmp	r4, #0
 801ce7c:	f77f af4a 	ble.w	801cd14 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ce80:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801ce84:	1414      	asrs	r4, r2, #16
 801ce86:	140d      	asrs	r5, r1, #16
 801ce88:	fb06 5504 	mla	r5, r6, r4, r5
 801ce8c:	9c01      	ldr	r4, [sp, #4]
 801ce8e:	5d64      	ldrb	r4, [r4, r5]
 801ce90:	2cff      	cmp	r4, #255	; 0xff
 801ce92:	d10b      	bne.n	801ceac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801ce94:	9c00      	ldr	r4, [sp, #0]
 801ce96:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801ce9a:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801ce9e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801cea0:	4421      	add	r1, r4
 801cea2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801cea4:	f109 0901 	add.w	r9, r9, #1
 801cea8:	4422      	add	r2, r4
 801ceaa:	e7e4      	b.n	801ce76 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801ceac:	2c00      	cmp	r4, #0
 801ceae:	d0f6      	beq.n	801ce9e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801ceb0:	9e00      	ldr	r6, [sp, #0]
 801ceb2:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801ceb6:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801ceba:	b2a7      	uxth	r7, r4
 801cebc:	122e      	asrs	r6, r5, #8
 801cebe:	43e4      	mvns	r4, r4
 801cec0:	b2e4      	uxtb	r4, r4
 801cec2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801cec6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ceca:	fb16 f604 	smulbb	r6, r6, r4
 801cece:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ced2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ced6:	00ed      	lsls	r5, r5, #3
 801ced8:	fb0c 6c07 	mla	ip, ip, r7, r6
 801cedc:	b2ed      	uxtb	r5, r5
 801cede:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801cee2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801cee6:	fb15 f504 	smulbb	r5, r5, r4
 801ceea:	fa5f fe8e 	uxtb.w	lr, lr
 801ceee:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801cef2:	fb0e 5507 	mla	r5, lr, r7, r5
 801cef6:	fb1a fa04 	smulbb	sl, sl, r4
 801cefa:	fa1f fc8c 	uxth.w	ip, ip
 801cefe:	b2ad      	uxth	r5, r5
 801cf00:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801cf04:	fb06 a607 	mla	r6, r6, r7, sl
 801cf08:	f10c 0401 	add.w	r4, ip, #1
 801cf0c:	f105 0a01 	add.w	sl, r5, #1
 801cf10:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801cf14:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801cf18:	b2b6      	uxth	r6, r6
 801cf1a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801cf1e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801cf22:	ea4a 0c0c 	orr.w	ip, sl, ip
 801cf26:	f106 0a01 	add.w	sl, r6, #1
 801cf2a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801cf2e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801cf32:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801cf36:	ea4c 0c0a 	orr.w	ip, ip, sl
 801cf3a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801cf3e:	e7ae      	b.n	801ce9e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801cf40:	b005      	add	sp, #20
 801cf42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cf46 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cf46:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cf4a:	b085      	sub	sp, #20
 801cf4c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cf4e:	9203      	str	r2, [sp, #12]
 801cf50:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801cf54:	9201      	str	r2, [sp, #4]
 801cf56:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801cf5a:	9100      	str	r1, [sp, #0]
 801cf5c:	6841      	ldr	r1, [r0, #4]
 801cf5e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801cf62:	fb01 2404 	mla	r4, r1, r4, r2
 801cf66:	6802      	ldr	r2, [r0, #0]
 801cf68:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801cf6c:	f8de 2000 	ldr.w	r2, [lr]
 801cf70:	9202      	str	r2, [sp, #8]
 801cf72:	9a01      	ldr	r2, [sp, #4]
 801cf74:	43d6      	mvns	r6, r2
 801cf76:	b2f6      	uxtb	r6, r6
 801cf78:	9a00      	ldr	r2, [sp, #0]
 801cf7a:	2a00      	cmp	r2, #0
 801cf7c:	dc03      	bgt.n	801cf86 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801cf7e:	9a03      	ldr	r2, [sp, #12]
 801cf80:	2a00      	cmp	r2, #0
 801cf82:	f340 8124 	ble.w	801d1ce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801cf86:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801cf88:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801cf8c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801cf90:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801cf94:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801cf96:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801cf9a:	2b00      	cmp	r3, #0
 801cf9c:	dd0e      	ble.n	801cfbc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801cf9e:	1408      	asrs	r0, r1, #16
 801cfa0:	d405      	bmi.n	801cfae <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801cfa2:	4560      	cmp	r0, ip
 801cfa4:	da03      	bge.n	801cfae <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801cfa6:	1410      	asrs	r0, r2, #16
 801cfa8:	d401      	bmi.n	801cfae <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801cfaa:	42b8      	cmp	r0, r7
 801cfac:	db07      	blt.n	801cfbe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801cfae:	9811      	ldr	r0, [sp, #68]	; 0x44
 801cfb0:	4401      	add	r1, r0
 801cfb2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801cfb4:	3b01      	subs	r3, #1
 801cfb6:	4402      	add	r2, r0
 801cfb8:	3402      	adds	r4, #2
 801cfba:	e7ee      	b.n	801cf9a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801cfbc:	d06e      	beq.n	801d09c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801cfbe:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801cfc0:	1e58      	subs	r0, r3, #1
 801cfc2:	fb05 1500 	mla	r5, r5, r0, r1
 801cfc6:	142d      	asrs	r5, r5, #16
 801cfc8:	d45c      	bmi.n	801d084 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801cfca:	4565      	cmp	r5, ip
 801cfcc:	da5a      	bge.n	801d084 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801cfce:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801cfd0:	fb05 2000 	mla	r0, r5, r0, r2
 801cfd4:	1400      	asrs	r0, r0, #16
 801cfd6:	d455      	bmi.n	801d084 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801cfd8:	42b8      	cmp	r0, r7
 801cfda:	da53      	bge.n	801d084 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801cfdc:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801cfe0:	4699      	mov	r9, r3
 801cfe2:	46a2      	mov	sl, r4
 801cfe4:	f1b9 0f00 	cmp.w	r9, #0
 801cfe8:	dd54      	ble.n	801d094 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801cfea:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801cfee:	140d      	asrs	r5, r1, #16
 801cff0:	1410      	asrs	r0, r2, #16
 801cff2:	fb07 5000 	mla	r0, r7, r0, r5
 801cff6:	9d02      	ldr	r5, [sp, #8]
 801cff8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801cffc:	f8ba 5000 	ldrh.w	r5, [sl]
 801d000:	122f      	asrs	r7, r5, #8
 801d002:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801d006:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d00a:	fb17 f706 	smulbb	r7, r7, r6
 801d00e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801d012:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d016:	00ed      	lsls	r5, r5, #3
 801d018:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801d01c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801d020:	10c7      	asrs	r7, r0, #3
 801d022:	b2ed      	uxtb	r5, r5
 801d024:	00c0      	lsls	r0, r0, #3
 801d026:	fb18 f806 	smulbb	r8, r8, r6
 801d02a:	fb15 f506 	smulbb	r5, r5, r6
 801d02e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d032:	b2c0      	uxtb	r0, r0
 801d034:	fa1f fc8c 	uxth.w	ip, ip
 801d038:	fb07 870b 	mla	r7, r7, fp, r8
 801d03c:	fb00 500b 	mla	r0, r0, fp, r5
 801d040:	b280      	uxth	r0, r0
 801d042:	b2bf      	uxth	r7, r7
 801d044:	f10c 0501 	add.w	r5, ip, #1
 801d048:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801d04c:	f107 0801 	add.w	r8, r7, #1
 801d050:	1c45      	adds	r5, r0, #1
 801d052:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801d056:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801d05a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d05c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d060:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801d064:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801d068:	ea45 0c0c 	orr.w	ip, r5, ip
 801d06c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801d070:	4401      	add	r1, r0
 801d072:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d074:	ea4c 0c08 	orr.w	ip, ip, r8
 801d078:	f82a cb02 	strh.w	ip, [sl], #2
 801d07c:	4402      	add	r2, r0
 801d07e:	f109 39ff 	add.w	r9, r9, #4294967295
 801d082:	e7af      	b.n	801cfe4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d084:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801d088:	f04f 0800 	mov.w	r8, #0
 801d08c:	eb03 0008 	add.w	r0, r3, r8
 801d090:	2800      	cmp	r0, #0
 801d092:	dc41      	bgt.n	801d118 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801d094:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d098:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d09c:	9b00      	ldr	r3, [sp, #0]
 801d09e:	2b00      	cmp	r3, #0
 801d0a0:	f340 8095 	ble.w	801d1ce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801d0a4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d0a8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d0ac:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d0b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d0b2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d0b6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d0ba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d0be:	eef0 6a62 	vmov.f32	s13, s5
 801d0c2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d0c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d0ca:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d0ce:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801d0d2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d0d6:	eef0 6a43 	vmov.f32	s13, s6
 801d0da:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d0de:	ee12 2a90 	vmov	r2, s5
 801d0e2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d0e6:	fb92 f3f3 	sdiv	r3, r2, r3
 801d0ea:	ee13 2a10 	vmov	r2, s6
 801d0ee:	9311      	str	r3, [sp, #68]	; 0x44
 801d0f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d0f2:	fb92 f3f3 	sdiv	r3, r2, r3
 801d0f6:	9312      	str	r3, [sp, #72]	; 0x48
 801d0f8:	9b00      	ldr	r3, [sp, #0]
 801d0fa:	9a03      	ldr	r2, [sp, #12]
 801d0fc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d100:	3b01      	subs	r3, #1
 801d102:	9300      	str	r3, [sp, #0]
 801d104:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801d108:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d10a:	eeb0 3a67 	vmov.f32	s6, s15
 801d10e:	bf08      	it	eq
 801d110:	4613      	moveq	r3, r2
 801d112:	eef0 2a47 	vmov.f32	s5, s14
 801d116:	e72f      	b.n	801cf78 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801d118:	140f      	asrs	r7, r1, #16
 801d11a:	d451      	bmi.n	801d1c0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801d11c:	f8de 5008 	ldr.w	r5, [lr, #8]
 801d120:	42bd      	cmp	r5, r7
 801d122:	dd4d      	ble.n	801d1c0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801d124:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801d128:	d44a      	bmi.n	801d1c0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801d12a:	f8de 000c 	ldr.w	r0, [lr, #12]
 801d12e:	4560      	cmp	r0, ip
 801d130:	dd46      	ble.n	801d1c0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801d132:	b22d      	sxth	r5, r5
 801d134:	fb0c 7505 	mla	r5, ip, r5, r7
 801d138:	9802      	ldr	r0, [sp, #8]
 801d13a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801d13e:	f06f 0501 	mvn.w	r5, #1
 801d142:	fb05 fb08 	mul.w	fp, r5, r8
 801d146:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801d14a:	f834 500b 	ldrh.w	r5, [r4, fp]
 801d14e:	122f      	asrs	r7, r5, #8
 801d150:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d154:	fb17 f706 	smulbb	r7, r7, r6
 801d158:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801d15c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d160:	00ed      	lsls	r5, r5, #3
 801d162:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801d166:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801d16a:	10c7      	asrs	r7, r0, #3
 801d16c:	b2ed      	uxtb	r5, r5
 801d16e:	00c0      	lsls	r0, r0, #3
 801d170:	fb19 f906 	smulbb	r9, r9, r6
 801d174:	fb15 f506 	smulbb	r5, r5, r6
 801d178:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d17c:	b2c0      	uxtb	r0, r0
 801d17e:	fa1f fc8c 	uxth.w	ip, ip
 801d182:	fb07 970a 	mla	r7, r7, sl, r9
 801d186:	fb00 500a 	mla	r0, r0, sl, r5
 801d18a:	b2bf      	uxth	r7, r7
 801d18c:	b280      	uxth	r0, r0
 801d18e:	f10c 0501 	add.w	r5, ip, #1
 801d192:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801d196:	f107 0901 	add.w	r9, r7, #1
 801d19a:	1c45      	adds	r5, r0, #1
 801d19c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801d1a0:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801d1a4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d1a8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801d1ac:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d1b0:	ea45 0c0c 	orr.w	ip, r5, ip
 801d1b4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d1b8:	ea4c 0c09 	orr.w	ip, ip, r9
 801d1bc:	f824 c00b 	strh.w	ip, [r4, fp]
 801d1c0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d1c2:	4401      	add	r1, r0
 801d1c4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d1c6:	f108 38ff 	add.w	r8, r8, #4294967295
 801d1ca:	4402      	add	r2, r0
 801d1cc:	e75e      	b.n	801d08c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801d1ce:	b005      	add	sp, #20
 801d1d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d1d4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d1d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d1d8:	b085      	sub	sp, #20
 801d1da:	4693      	mov	fp, r2
 801d1dc:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801d1de:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801d1e0:	6870      	ldr	r0, [r6, #4]
 801d1e2:	9101      	str	r1, [sp, #4]
 801d1e4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801d1e8:	fb00 2404 	mla	r4, r0, r4, r2
 801d1ec:	6832      	ldr	r2, [r6, #0]
 801d1ee:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801d1f2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d1f6:	682a      	ldr	r2, [r5, #0]
 801d1f8:	9202      	str	r2, [sp, #8]
 801d1fa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d1fe:	9a01      	ldr	r2, [sp, #4]
 801d200:	2a00      	cmp	r2, #0
 801d202:	dc03      	bgt.n	801d20c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d204:	f1bb 0f00 	cmp.w	fp, #0
 801d208:	f340 809a 	ble.w	801d340 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801d20c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d20e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801d212:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801d216:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801d21a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d21c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d220:	2b00      	cmp	r3, #0
 801d222:	dd0c      	ble.n	801d23e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801d224:	1406      	asrs	r6, r0, #16
 801d226:	d405      	bmi.n	801d234 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801d228:	454e      	cmp	r6, r9
 801d22a:	da03      	bge.n	801d234 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801d22c:	1416      	asrs	r6, r2, #16
 801d22e:	d401      	bmi.n	801d234 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801d230:	4546      	cmp	r6, r8
 801d232:	db05      	blt.n	801d240 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d234:	4470      	add	r0, lr
 801d236:	4462      	add	r2, ip
 801d238:	3b01      	subs	r3, #1
 801d23a:	3402      	adds	r4, #2
 801d23c:	e7f0      	b.n	801d220 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801d23e:	d00f      	beq.n	801d260 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801d240:	1e5e      	subs	r6, r3, #1
 801d242:	fb0e 0706 	mla	r7, lr, r6, r0
 801d246:	143f      	asrs	r7, r7, #16
 801d248:	d541      	bpl.n	801d2ce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801d24a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801d24e:	4698      	mov	r8, r3
 801d250:	9603      	str	r6, [sp, #12]
 801d252:	f1b8 0f00 	cmp.w	r8, #0
 801d256:	dc56      	bgt.n	801d306 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801d258:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d25c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d260:	9b01      	ldr	r3, [sp, #4]
 801d262:	2b00      	cmp	r3, #0
 801d264:	dd6c      	ble.n	801d340 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801d266:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d26a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d26e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d272:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d274:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d278:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d27c:	eeb0 6a62 	vmov.f32	s12, s5
 801d280:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d284:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d288:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d28c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801d290:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d294:	eeb0 6a43 	vmov.f32	s12, s6
 801d298:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d29c:	ee12 2a90 	vmov	r2, s5
 801d2a0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d2a4:	fb92 fef3 	sdiv	lr, r2, r3
 801d2a8:	ee13 2a10 	vmov	r2, s6
 801d2ac:	fb92 fcf3 	sdiv	ip, r2, r3
 801d2b0:	9b01      	ldr	r3, [sp, #4]
 801d2b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d2b6:	3b01      	subs	r3, #1
 801d2b8:	9301      	str	r3, [sp, #4]
 801d2ba:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801d2be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d2c0:	eeb0 3a67 	vmov.f32	s6, s15
 801d2c4:	bf08      	it	eq
 801d2c6:	465b      	moveq	r3, fp
 801d2c8:	eef0 2a47 	vmov.f32	s5, s14
 801d2cc:	e797      	b.n	801d1fe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801d2ce:	454f      	cmp	r7, r9
 801d2d0:	dabb      	bge.n	801d24a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d2d2:	fb0c 2606 	mla	r6, ip, r6, r2
 801d2d6:	1436      	asrs	r6, r6, #16
 801d2d8:	d4b7      	bmi.n	801d24a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d2da:	4546      	cmp	r6, r8
 801d2dc:	dab5      	bge.n	801d24a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d2de:	461e      	mov	r6, r3
 801d2e0:	46a0      	mov	r8, r4
 801d2e2:	2e00      	cmp	r6, #0
 801d2e4:	ddb8      	ble.n	801d258 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d2e6:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801d2ea:	9902      	ldr	r1, [sp, #8]
 801d2ec:	1417      	asrs	r7, r2, #16
 801d2ee:	ea4f 4920 	mov.w	r9, r0, asr #16
 801d2f2:	fb0a 9707 	mla	r7, sl, r7, r9
 801d2f6:	4470      	add	r0, lr
 801d2f8:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801d2fc:	f828 7b02 	strh.w	r7, [r8], #2
 801d300:	4462      	add	r2, ip
 801d302:	3e01      	subs	r6, #1
 801d304:	e7ed      	b.n	801d2e2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801d306:	ea5f 4920 	movs.w	r9, r0, asr #16
 801d30a:	d414      	bmi.n	801d336 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801d30c:	68ae      	ldr	r6, [r5, #8]
 801d30e:	454e      	cmp	r6, r9
 801d310:	dd11      	ble.n	801d336 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801d312:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801d316:	d40e      	bmi.n	801d336 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801d318:	68ef      	ldr	r7, [r5, #12]
 801d31a:	4557      	cmp	r7, sl
 801d31c:	dd0b      	ble.n	801d336 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801d31e:	b236      	sxth	r6, r6
 801d320:	fb0a 9606 	mla	r6, sl, r6, r9
 801d324:	9f02      	ldr	r7, [sp, #8]
 801d326:	f06f 0101 	mvn.w	r1, #1
 801d32a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801d32e:	fb01 f608 	mul.w	r6, r1, r8
 801d332:	9903      	ldr	r1, [sp, #12]
 801d334:	538f      	strh	r7, [r1, r6]
 801d336:	4470      	add	r0, lr
 801d338:	4462      	add	r2, ip
 801d33a:	f108 38ff 	add.w	r8, r8, #4294967295
 801d33e:	e788      	b.n	801d252 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d340:	b005      	add	sp, #20
 801d342:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d346 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d346:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d34a:	b087      	sub	sp, #28
 801d34c:	468b      	mov	fp, r1
 801d34e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801d350:	9203      	str	r2, [sp, #12]
 801d352:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d356:	9204      	str	r2, [sp, #16]
 801d358:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801d35c:	6841      	ldr	r1, [r0, #4]
 801d35e:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801d362:	fb01 2505 	mla	r5, r1, r5, r2
 801d366:	6802      	ldr	r2, [r0, #0]
 801d368:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801d36c:	f8d9 2000 	ldr.w	r2, [r9]
 801d370:	9201      	str	r2, [sp, #4]
 801d372:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d376:	f1bb 0f00 	cmp.w	fp, #0
 801d37a:	dc03      	bgt.n	801d384 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801d37c:	9a03      	ldr	r2, [sp, #12]
 801d37e:	2a00      	cmp	r2, #0
 801d380:	f340 8159 	ble.w	801d636 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801d384:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d386:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801d38a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801d38e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801d392:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d394:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d398:	2b00      	cmp	r3, #0
 801d39a:	dd0e      	ble.n	801d3ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801d39c:	1402      	asrs	r2, r0, #16
 801d39e:	d405      	bmi.n	801d3ac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d3a0:	42ba      	cmp	r2, r7
 801d3a2:	da03      	bge.n	801d3ac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d3a4:	140a      	asrs	r2, r1, #16
 801d3a6:	d401      	bmi.n	801d3ac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d3a8:	42b2      	cmp	r2, r6
 801d3aa:	db07      	blt.n	801d3bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d3ac:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d3ae:	4410      	add	r0, r2
 801d3b0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d3b2:	3b01      	subs	r3, #1
 801d3b4:	4411      	add	r1, r2
 801d3b6:	3502      	adds	r5, #2
 801d3b8:	e7ee      	b.n	801d398 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801d3ba:	d017      	beq.n	801d3ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801d3bc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d3be:	1e5a      	subs	r2, r3, #1
 801d3c0:	fb04 0402 	mla	r4, r4, r2, r0
 801d3c4:	1424      	asrs	r4, r4, #16
 801d3c6:	d409      	bmi.n	801d3dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d3c8:	42bc      	cmp	r4, r7
 801d3ca:	da07      	bge.n	801d3dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d3cc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d3ce:	fb04 1202 	mla	r2, r4, r2, r1
 801d3d2:	1412      	asrs	r2, r2, #16
 801d3d4:	d402      	bmi.n	801d3dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d3d6:	42b2      	cmp	r2, r6
 801d3d8:	f2c0 80bf 	blt.w	801d55a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d3dc:	2700      	movs	r7, #0
 801d3de:	19da      	adds	r2, r3, r7
 801d3e0:	2a00      	cmp	r2, #0
 801d3e2:	dc3e      	bgt.n	801d462 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801d3e4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d3e8:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801d3ec:	f1bb 0f00 	cmp.w	fp, #0
 801d3f0:	f340 8121 	ble.w	801d636 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801d3f4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d3f8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d3fc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d400:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d402:	f1bb 0b01 	subs.w	fp, fp, #1
 801d406:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d40a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d40e:	eeb0 6a62 	vmov.f32	s12, s5
 801d412:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d416:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d41a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d41e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801d422:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d426:	eeb0 6a43 	vmov.f32	s12, s6
 801d42a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d42e:	ee12 2a90 	vmov	r2, s5
 801d432:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d436:	fb92 f3f3 	sdiv	r3, r2, r3
 801d43a:	ee13 2a10 	vmov	r2, s6
 801d43e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d442:	9313      	str	r3, [sp, #76]	; 0x4c
 801d444:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d446:	fb92 f3f3 	sdiv	r3, r2, r3
 801d44a:	9a03      	ldr	r2, [sp, #12]
 801d44c:	9314      	str	r3, [sp, #80]	; 0x50
 801d44e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801d452:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d454:	eeb0 3a67 	vmov.f32	s6, s15
 801d458:	bf08      	it	eq
 801d45a:	4613      	moveq	r3, r2
 801d45c:	eef0 2a47 	vmov.f32	s5, s14
 801d460:	e789      	b.n	801d376 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801d462:	1406      	asrs	r6, r0, #16
 801d464:	d42d      	bmi.n	801d4c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801d466:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801d46a:	42b4      	cmp	r4, r6
 801d46c:	dd29      	ble.n	801d4c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801d46e:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801d472:	d426      	bmi.n	801d4c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801d474:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801d478:	4562      	cmp	r2, ip
 801d47a:	dd22      	ble.n	801d4c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801d47c:	b224      	sxth	r4, r4
 801d47e:	9a01      	ldr	r2, [sp, #4]
 801d480:	fb0c 6404 	mla	r4, ip, r4, r6
 801d484:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801d488:	0e22      	lsrs	r2, r4, #24
 801d48a:	d01a      	beq.n	801d4c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801d48c:	9e04      	ldr	r6, [sp, #16]
 801d48e:	4372      	muls	r2, r6
 801d490:	1c56      	adds	r6, r2, #1
 801d492:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801d496:	1212      	asrs	r2, r2, #8
 801d498:	0a26      	lsrs	r6, r4, #8
 801d49a:	2aff      	cmp	r2, #255	; 0xff
 801d49c:	9605      	str	r6, [sp, #20]
 801d49e:	d116      	bne.n	801d4ce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801d4a0:	f06f 0201 	mvn.w	r2, #1
 801d4a4:	fb02 fc07 	mul.w	ip, r2, r7
 801d4a8:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801d4ac:	0962      	lsrs	r2, r4, #5
 801d4ae:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d4b2:	f026 0607 	bic.w	r6, r6, #7
 801d4b6:	4316      	orrs	r6, r2
 801d4b8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801d4bc:	4326      	orrs	r6, r4
 801d4be:	f825 600c 	strh.w	r6, [r5, ip]
 801d4c2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d4c4:	4410      	add	r0, r2
 801d4c6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d4c8:	3f01      	subs	r7, #1
 801d4ca:	4411      	add	r1, r2
 801d4cc:	e787      	b.n	801d3de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d4ce:	f06f 0601 	mvn.w	r6, #1
 801d4d2:	437e      	muls	r6, r7
 801d4d4:	fa1f fa82 	uxth.w	sl, r2
 801d4d8:	f835 8006 	ldrh.w	r8, [r5, r6]
 801d4dc:	9602      	str	r6, [sp, #8]
 801d4de:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801d4e2:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801d4e6:	43d2      	mvns	r2, r2
 801d4e8:	b2d2      	uxtb	r2, r2
 801d4ea:	fb1c fc0a 	smulbb	ip, ip, sl
 801d4ee:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801d4f2:	fb0e ce02 	mla	lr, lr, r2, ip
 801d4f6:	b2e4      	uxtb	r4, r4
 801d4f8:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801d4fc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d500:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801d504:	fa5f f888 	uxtb.w	r8, r8
 801d508:	fb14 f40a 	smulbb	r4, r4, sl
 801d50c:	fb08 4402 	mla	r4, r8, r2, r4
 801d510:	fa1f fe8e 	uxth.w	lr, lr
 801d514:	fb16 f60a 	smulbb	r6, r6, sl
 801d518:	b2a4      	uxth	r4, r4
 801d51a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801d51e:	fb0c 6c02 	mla	ip, ip, r2, r6
 801d522:	f10e 0201 	add.w	r2, lr, #1
 801d526:	1c66      	adds	r6, r4, #1
 801d528:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801d52c:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801d530:	fa1f fc8c 	uxth.w	ip, ip
 801d534:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801d538:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801d53c:	ea46 0e0e 	orr.w	lr, r6, lr
 801d540:	f10c 0601 	add.w	r6, ip, #1
 801d544:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801d548:	0976      	lsrs	r6, r6, #5
 801d54a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d54e:	9a02      	ldr	r2, [sp, #8]
 801d550:	ea4e 0e06 	orr.w	lr, lr, r6
 801d554:	f825 e002 	strh.w	lr, [r5, r2]
 801d558:	e7b3      	b.n	801d4c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801d55a:	f04f 0800 	mov.w	r8, #0
 801d55e:	eba3 0208 	sub.w	r2, r3, r8
 801d562:	2a00      	cmp	r2, #0
 801d564:	f77f af3e 	ble.w	801d3e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d568:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801d56c:	1404      	asrs	r4, r0, #16
 801d56e:	140a      	asrs	r2, r1, #16
 801d570:	fb06 4202 	mla	r2, r6, r2, r4
 801d574:	9c01      	ldr	r4, [sp, #4]
 801d576:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801d57a:	0e22      	lsrs	r2, r4, #24
 801d57c:	d016      	beq.n	801d5ac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801d57e:	9e04      	ldr	r6, [sp, #16]
 801d580:	4372      	muls	r2, r6
 801d582:	1c56      	adds	r6, r2, #1
 801d584:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801d588:	1212      	asrs	r2, r2, #8
 801d58a:	2aff      	cmp	r2, #255	; 0xff
 801d58c:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801d590:	d113      	bne.n	801d5ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801d592:	0962      	lsrs	r2, r4, #5
 801d594:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801d598:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d59c:	f026 0607 	bic.w	r6, r6, #7
 801d5a0:	4316      	orrs	r6, r2
 801d5a2:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801d5a6:	4326      	orrs	r6, r4
 801d5a8:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801d5ac:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d5ae:	4410      	add	r0, r2
 801d5b0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d5b2:	f108 0801 	add.w	r8, r8, #1
 801d5b6:	4411      	add	r1, r2
 801d5b8:	e7d1      	b.n	801d55e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801d5ba:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801d5be:	fa1f fa82 	uxth.w	sl, r2
 801d5c2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801d5c6:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801d5ca:	43d2      	mvns	r2, r2
 801d5cc:	b2d2      	uxtb	r2, r2
 801d5ce:	fb17 f70a 	smulbb	r7, r7, sl
 801d5d2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d5d6:	fb0c 7c02 	mla	ip, ip, r2, r7
 801d5da:	b2e4      	uxtb	r4, r4
 801d5dc:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801d5e0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d5e4:	fa5f fe8e 	uxtb.w	lr, lr
 801d5e8:	fb14 f40a 	smulbb	r4, r4, sl
 801d5ec:	fb0e 4402 	mla	r4, lr, r2, r4
 801d5f0:	b2f6      	uxtb	r6, r6
 801d5f2:	fa1f fc8c 	uxth.w	ip, ip
 801d5f6:	fb16 f60a 	smulbb	r6, r6, sl
 801d5fa:	b2a4      	uxth	r4, r4
 801d5fc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d600:	fb07 6702 	mla	r7, r7, r2, r6
 801d604:	f10c 0201 	add.w	r2, ip, #1
 801d608:	1c66      	adds	r6, r4, #1
 801d60a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801d60e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801d612:	b2bf      	uxth	r7, r7
 801d614:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801d618:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d61c:	ea46 0c0c 	orr.w	ip, r6, ip
 801d620:	1c7e      	adds	r6, r7, #1
 801d622:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801d626:	0976      	lsrs	r6, r6, #5
 801d628:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d62c:	ea4c 0c06 	orr.w	ip, ip, r6
 801d630:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801d634:	e7ba      	b.n	801d5ac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801d636:	b007      	add	sp, #28
 801d638:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d63c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d63c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d640:	b085      	sub	sp, #20
 801d642:	468b      	mov	fp, r1
 801d644:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d646:	9203      	str	r2, [sp, #12]
 801d648:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801d64c:	6841      	ldr	r1, [r0, #4]
 801d64e:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801d652:	fb01 2404 	mla	r4, r1, r4, r2
 801d656:	6802      	ldr	r2, [r0, #0]
 801d658:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d65c:	f8d8 2000 	ldr.w	r2, [r8]
 801d660:	9201      	str	r2, [sp, #4]
 801d662:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d666:	f1bb 0f00 	cmp.w	fp, #0
 801d66a:	dc03      	bgt.n	801d674 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d66c:	9a03      	ldr	r2, [sp, #12]
 801d66e:	2a00      	cmp	r2, #0
 801d670:	f340 814f 	ble.w	801d912 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801d674:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d676:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801d67a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801d67e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d682:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d684:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d688:	2b00      	cmp	r3, #0
 801d68a:	dd0e      	ble.n	801d6aa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d68c:	1408      	asrs	r0, r1, #16
 801d68e:	d405      	bmi.n	801d69c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801d690:	42b8      	cmp	r0, r7
 801d692:	da03      	bge.n	801d69c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801d694:	1410      	asrs	r0, r2, #16
 801d696:	d401      	bmi.n	801d69c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801d698:	42b0      	cmp	r0, r6
 801d69a:	db07      	blt.n	801d6ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801d69c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d69e:	4401      	add	r1, r0
 801d6a0:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d6a2:	3b01      	subs	r3, #1
 801d6a4:	4402      	add	r2, r0
 801d6a6:	3402      	adds	r4, #2
 801d6a8:	e7ee      	b.n	801d688 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801d6aa:	d017      	beq.n	801d6dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801d6ac:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d6ae:	1e58      	subs	r0, r3, #1
 801d6b0:	fb05 1500 	mla	r5, r5, r0, r1
 801d6b4:	142d      	asrs	r5, r5, #16
 801d6b6:	d409      	bmi.n	801d6cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d6b8:	42bd      	cmp	r5, r7
 801d6ba:	da07      	bge.n	801d6cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d6bc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d6be:	fb05 2000 	mla	r0, r5, r0, r2
 801d6c2:	1400      	asrs	r0, r0, #16
 801d6c4:	d402      	bmi.n	801d6cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d6c6:	42b0      	cmp	r0, r6
 801d6c8:	f2c0 80ba 	blt.w	801d840 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801d6cc:	2600      	movs	r6, #0
 801d6ce:	1998      	adds	r0, r3, r6
 801d6d0:	2800      	cmp	r0, #0
 801d6d2:	dc3e      	bgt.n	801d752 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801d6d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d6d8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d6dc:	f1bb 0f00 	cmp.w	fp, #0
 801d6e0:	f340 8117 	ble.w	801d912 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801d6e4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d6e8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d6ec:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d6f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d6f2:	f1bb 0b01 	subs.w	fp, fp, #1
 801d6f6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d6fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d6fe:	eeb0 6a62 	vmov.f32	s12, s5
 801d702:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d706:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d70a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d70e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801d712:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d716:	eeb0 6a43 	vmov.f32	s12, s6
 801d71a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d71e:	ee12 2a90 	vmov	r2, s5
 801d722:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d726:	fb92 f3f3 	sdiv	r3, r2, r3
 801d72a:	ee13 2a10 	vmov	r2, s6
 801d72e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d732:	9311      	str	r3, [sp, #68]	; 0x44
 801d734:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d736:	fb92 f3f3 	sdiv	r3, r2, r3
 801d73a:	9a03      	ldr	r2, [sp, #12]
 801d73c:	9312      	str	r3, [sp, #72]	; 0x48
 801d73e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801d742:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d744:	eeb0 3a67 	vmov.f32	s6, s15
 801d748:	bf08      	it	eq
 801d74a:	4613      	moveq	r3, r2
 801d74c:	eef0 2a47 	vmov.f32	s5, s14
 801d750:	e789      	b.n	801d666 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801d752:	140f      	asrs	r7, r1, #16
 801d754:	d424      	bmi.n	801d7a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d756:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801d75a:	42bd      	cmp	r5, r7
 801d75c:	dd20      	ble.n	801d7a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d75e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801d762:	d41d      	bmi.n	801d7a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d764:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801d768:	4560      	cmp	r0, ip
 801d76a:	dd19      	ble.n	801d7a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d76c:	b22d      	sxth	r5, r5
 801d76e:	fb0c 7505 	mla	r5, ip, r5, r7
 801d772:	9801      	ldr	r0, [sp, #4]
 801d774:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801d778:	0e07      	lsrs	r7, r0, #24
 801d77a:	2fff      	cmp	r7, #255	; 0xff
 801d77c:	d116      	bne.n	801d7ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d77e:	f06f 0501 	mvn.w	r5, #1
 801d782:	fb05 f706 	mul.w	r7, r5, r6
 801d786:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801d78a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801d78e:	0945      	lsrs	r5, r0, #5
 801d790:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d794:	ea4c 0505 	orr.w	r5, ip, r5
 801d798:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801d79c:	4305      	orrs	r5, r0
 801d79e:	53e5      	strh	r5, [r4, r7]
 801d7a0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d7a2:	4401      	add	r1, r0
 801d7a4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d7a6:	3e01      	subs	r6, #1
 801d7a8:	4402      	add	r2, r0
 801d7aa:	e790      	b.n	801d6ce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d7ac:	b2fd      	uxtb	r5, r7
 801d7ae:	2f00      	cmp	r7, #0
 801d7b0:	d0f6      	beq.n	801d7a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d7b2:	f06f 0701 	mvn.w	r7, #1
 801d7b6:	4377      	muls	r7, r6
 801d7b8:	fa1f f985 	uxth.w	r9, r5
 801d7bc:	f834 e007 	ldrh.w	lr, [r4, r7]
 801d7c0:	9702      	str	r7, [sp, #8]
 801d7c2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801d7c6:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801d7ca:	43ed      	mvns	r5, r5
 801d7cc:	b2ed      	uxtb	r5, r5
 801d7ce:	fb17 f709 	smulbb	r7, r7, r9
 801d7d2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d7d6:	fb0c 7c05 	mla	ip, ip, r5, r7
 801d7da:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801d7de:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801d7e2:	b2c0      	uxtb	r0, r0
 801d7e4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d7e8:	fa5f fe8e 	uxtb.w	lr, lr
 801d7ec:	fb10 f009 	smulbb	r0, r0, r9
 801d7f0:	fb0e 0005 	mla	r0, lr, r5, r0
 801d7f4:	b280      	uxth	r0, r0
 801d7f6:	fa1f fc8c 	uxth.w	ip, ip
 801d7fa:	fb1a fa09 	smulbb	sl, sl, r9
 801d7fe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d802:	fb07 a705 	mla	r7, r7, r5, sl
 801d806:	f100 0a01 	add.w	sl, r0, #1
 801d80a:	f10c 0501 	add.w	r5, ip, #1
 801d80e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801d812:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801d816:	b2bf      	uxth	r7, r7
 801d818:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d81c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d820:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d824:	f107 0a01 	add.w	sl, r7, #1
 801d828:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801d82c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d830:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d834:	9802      	ldr	r0, [sp, #8]
 801d836:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d83a:	f824 c000 	strh.w	ip, [r4, r0]
 801d83e:	e7af      	b.n	801d7a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d840:	f04f 0e00 	mov.w	lr, #0
 801d844:	eba3 000e 	sub.w	r0, r3, lr
 801d848:	2800      	cmp	r0, #0
 801d84a:	f77f af43 	ble.w	801d6d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d84e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801d852:	140d      	asrs	r5, r1, #16
 801d854:	1410      	asrs	r0, r2, #16
 801d856:	fb06 5000 	mla	r0, r6, r0, r5
 801d85a:	9d01      	ldr	r5, [sp, #4]
 801d85c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801d860:	0e2e      	lsrs	r6, r5, #24
 801d862:	2eff      	cmp	r6, #255	; 0xff
 801d864:	d112      	bne.n	801d88c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801d866:	482c      	ldr	r0, [pc, #176]	; (801d918 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801d868:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801d86c:	0968      	lsrs	r0, r5, #5
 801d86e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d872:	4330      	orrs	r0, r6
 801d874:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801d878:	4328      	orrs	r0, r5
 801d87a:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801d87e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d880:	4401      	add	r1, r0
 801d882:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d884:	f10e 0e01 	add.w	lr, lr, #1
 801d888:	4402      	add	r2, r0
 801d88a:	e7db      	b.n	801d844 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801d88c:	b2f0      	uxtb	r0, r6
 801d88e:	2e00      	cmp	r6, #0
 801d890:	d0f5      	beq.n	801d87e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801d892:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801d896:	fa1f f980 	uxth.w	r9, r0
 801d89a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d89e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d8a2:	43c0      	mvns	r0, r0
 801d8a4:	b2c0      	uxtb	r0, r0
 801d8a6:	fb16 f609 	smulbb	r6, r6, r9
 801d8aa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d8ae:	fb07 6700 	mla	r7, r7, r0, r6
 801d8b2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d8b6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801d8ba:	b2ed      	uxtb	r5, r5
 801d8bc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d8c0:	fa5f fc8c 	uxtb.w	ip, ip
 801d8c4:	fb15 f509 	smulbb	r5, r5, r9
 801d8c8:	fb0c 5500 	mla	r5, ip, r0, r5
 801d8cc:	b2bf      	uxth	r7, r7
 801d8ce:	fb1a fa09 	smulbb	sl, sl, r9
 801d8d2:	b2ad      	uxth	r5, r5
 801d8d4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d8d8:	fb06 a600 	mla	r6, r6, r0, sl
 801d8dc:	1c78      	adds	r0, r7, #1
 801d8de:	f105 0a01 	add.w	sl, r5, #1
 801d8e2:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801d8e6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d8ea:	b2b6      	uxth	r6, r6
 801d8ec:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d8f0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d8f4:	ea4a 0707 	orr.w	r7, sl, r7
 801d8f8:	f106 0a01 	add.w	sl, r6, #1
 801d8fc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d900:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d904:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d908:	ea47 070a 	orr.w	r7, r7, sl
 801d90c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801d910:	e7b5      	b.n	801d87e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801d912:	b005      	add	sp, #20
 801d914:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d918:	fffff800 	.word	0xfffff800

0801d91c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d91c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d920:	b087      	sub	sp, #28
 801d922:	468b      	mov	fp, r1
 801d924:	9815      	ldr	r0, [sp, #84]	; 0x54
 801d926:	9203      	str	r2, [sp, #12]
 801d928:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d92c:	9204      	str	r2, [sp, #16]
 801d92e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801d932:	6841      	ldr	r1, [r0, #4]
 801d934:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801d938:	fb01 2404 	mla	r4, r1, r4, r2
 801d93c:	6802      	ldr	r2, [r0, #0]
 801d93e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d942:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801d946:	3201      	adds	r2, #1
 801d948:	f022 0201 	bic.w	r2, r2, #1
 801d94c:	9200      	str	r2, [sp, #0]
 801d94e:	f8d9 2000 	ldr.w	r2, [r9]
 801d952:	9201      	str	r2, [sp, #4]
 801d954:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d958:	f1bb 0f00 	cmp.w	fp, #0
 801d95c:	dc03      	bgt.n	801d966 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801d95e:	9a03      	ldr	r2, [sp, #12]
 801d960:	2a00      	cmp	r2, #0
 801d962:	f340 8169 	ble.w	801dc38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801d966:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d968:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801d96c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801d970:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801d974:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d976:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d97a:	2b00      	cmp	r3, #0
 801d97c:	dd0e      	ble.n	801d99c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801d97e:	1402      	asrs	r2, r0, #16
 801d980:	d405      	bmi.n	801d98e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d982:	42ba      	cmp	r2, r7
 801d984:	da03      	bge.n	801d98e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d986:	140a      	asrs	r2, r1, #16
 801d988:	d401      	bmi.n	801d98e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801d98a:	42b2      	cmp	r2, r6
 801d98c:	db07      	blt.n	801d99e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801d98e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d990:	4410      	add	r0, r2
 801d992:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d994:	3b01      	subs	r3, #1
 801d996:	4411      	add	r1, r2
 801d998:	3402      	adds	r4, #2
 801d99a:	e7ee      	b.n	801d97a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801d99c:	d017      	beq.n	801d9ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d99e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d9a0:	1e5a      	subs	r2, r3, #1
 801d9a2:	fb05 0502 	mla	r5, r5, r2, r0
 801d9a6:	142d      	asrs	r5, r5, #16
 801d9a8:	d409      	bmi.n	801d9be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801d9aa:	42bd      	cmp	r5, r7
 801d9ac:	da07      	bge.n	801d9be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801d9ae:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d9b0:	fb05 1202 	mla	r2, r5, r2, r1
 801d9b4:	1412      	asrs	r2, r2, #16
 801d9b6:	d402      	bmi.n	801d9be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801d9b8:	42b2      	cmp	r2, r6
 801d9ba:	f2c0 80c7 	blt.w	801db4c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801d9be:	2700      	movs	r7, #0
 801d9c0:	19da      	adds	r2, r3, r7
 801d9c2:	2a00      	cmp	r2, #0
 801d9c4:	dc3e      	bgt.n	801da44 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801d9c6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d9ca:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d9ce:	f1bb 0f00 	cmp.w	fp, #0
 801d9d2:	f340 8131 	ble.w	801dc38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801d9d6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d9da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d9de:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d9e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d9e4:	f1bb 0b01 	subs.w	fp, fp, #1
 801d9e8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d9ec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d9f0:	eeb0 6a62 	vmov.f32	s12, s5
 801d9f4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d9f8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d9fc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801da00:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801da04:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801da08:	eeb0 6a43 	vmov.f32	s12, s6
 801da0c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801da10:	ee12 2a90 	vmov	r2, s5
 801da14:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801da18:	fb92 f3f3 	sdiv	r3, r2, r3
 801da1c:	ee13 2a10 	vmov	r2, s6
 801da20:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801da24:	9313      	str	r3, [sp, #76]	; 0x4c
 801da26:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801da28:	fb92 f3f3 	sdiv	r3, r2, r3
 801da2c:	9a03      	ldr	r2, [sp, #12]
 801da2e:	9314      	str	r3, [sp, #80]	; 0x50
 801da30:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801da34:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801da36:	eeb0 3a67 	vmov.f32	s6, s15
 801da3a:	bf08      	it	eq
 801da3c:	4613      	moveq	r3, r2
 801da3e:	eef0 2a47 	vmov.f32	s5, s14
 801da42:	e789      	b.n	801d958 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801da44:	1405      	asrs	r5, r0, #16
 801da46:	d435      	bmi.n	801dab4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801da48:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801da4c:	42aa      	cmp	r2, r5
 801da4e:	dd31      	ble.n	801dab4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801da50:	140e      	asrs	r6, r1, #16
 801da52:	d42f      	bmi.n	801dab4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801da54:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801da58:	42b2      	cmp	r2, r6
 801da5a:	dd2b      	ble.n	801dab4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801da5c:	9a00      	ldr	r2, [sp, #0]
 801da5e:	fb06 5502 	mla	r5, r6, r2, r5
 801da62:	086a      	lsrs	r2, r5, #1
 801da64:	9e01      	ldr	r6, [sp, #4]
 801da66:	5cb2      	ldrb	r2, [r6, r2]
 801da68:	07ee      	lsls	r6, r5, #31
 801da6a:	bf54      	ite	pl
 801da6c:	f002 020f 	andpl.w	r2, r2, #15
 801da70:	1112      	asrmi	r2, r2, #4
 801da72:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801da76:	b2d2      	uxtb	r2, r2
 801da78:	b1e2      	cbz	r2, 801dab4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801da7a:	9d04      	ldr	r5, [sp, #16]
 801da7c:	436a      	muls	r2, r5
 801da7e:	1c55      	adds	r5, r2, #1
 801da80:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801da84:	4d6e      	ldr	r5, [pc, #440]	; (801dc40 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801da86:	682d      	ldr	r5, [r5, #0]
 801da88:	1212      	asrs	r2, r2, #8
 801da8a:	0a2e      	lsrs	r6, r5, #8
 801da8c:	2aff      	cmp	r2, #255	; 0xff
 801da8e:	9605      	str	r6, [sp, #20]
 801da90:	d116      	bne.n	801dac0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801da92:	f06f 0201 	mvn.w	r2, #1
 801da96:	fb02 fc07 	mul.w	ip, r2, r7
 801da9a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801da9e:	096a      	lsrs	r2, r5, #5
 801daa0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801daa4:	f026 0607 	bic.w	r6, r6, #7
 801daa8:	4316      	orrs	r6, r2
 801daaa:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801daae:	432e      	orrs	r6, r5
 801dab0:	f824 600c 	strh.w	r6, [r4, ip]
 801dab4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801dab6:	4410      	add	r0, r2
 801dab8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801daba:	3f01      	subs	r7, #1
 801dabc:	4411      	add	r1, r2
 801dabe:	e77f      	b.n	801d9c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801dac0:	f06f 0601 	mvn.w	r6, #1
 801dac4:	437e      	muls	r6, r7
 801dac6:	fa1f fa82 	uxth.w	sl, r2
 801daca:	f834 8006 	ldrh.w	r8, [r4, r6]
 801dace:	9602      	str	r6, [sp, #8]
 801dad0:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801dad4:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801dad8:	43d2      	mvns	r2, r2
 801dada:	b2d2      	uxtb	r2, r2
 801dadc:	fb1c fc0a 	smulbb	ip, ip, sl
 801dae0:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801dae4:	fb0e ce02 	mla	lr, lr, r2, ip
 801dae8:	b2ed      	uxtb	r5, r5
 801daea:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801daee:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801daf2:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801daf6:	fa5f f888 	uxtb.w	r8, r8
 801dafa:	fb15 f50a 	smulbb	r5, r5, sl
 801dafe:	fb08 5502 	mla	r5, r8, r2, r5
 801db02:	fa1f fe8e 	uxth.w	lr, lr
 801db06:	fb16 f60a 	smulbb	r6, r6, sl
 801db0a:	b2ad      	uxth	r5, r5
 801db0c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801db10:	fb0c 6c02 	mla	ip, ip, r2, r6
 801db14:	f10e 0201 	add.w	r2, lr, #1
 801db18:	1c6e      	adds	r6, r5, #1
 801db1a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801db1e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801db22:	fa1f fc8c 	uxth.w	ip, ip
 801db26:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801db2a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801db2e:	ea46 0e0e 	orr.w	lr, r6, lr
 801db32:	f10c 0601 	add.w	r6, ip, #1
 801db36:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801db3a:	0976      	lsrs	r6, r6, #5
 801db3c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801db40:	9a02      	ldr	r2, [sp, #8]
 801db42:	ea4e 0e06 	orr.w	lr, lr, r6
 801db46:	f824 e002 	strh.w	lr, [r4, r2]
 801db4a:	e7b3      	b.n	801dab4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801db4c:	f04f 0800 	mov.w	r8, #0
 801db50:	eba3 0208 	sub.w	r2, r3, r8
 801db54:	2a00      	cmp	r2, #0
 801db56:	f77f af36 	ble.w	801d9c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801db5a:	9e00      	ldr	r6, [sp, #0]
 801db5c:	1402      	asrs	r2, r0, #16
 801db5e:	140d      	asrs	r5, r1, #16
 801db60:	fb06 2505 	mla	r5, r6, r5, r2
 801db64:	086a      	lsrs	r2, r5, #1
 801db66:	9e01      	ldr	r6, [sp, #4]
 801db68:	5cb2      	ldrb	r2, [r6, r2]
 801db6a:	07ed      	lsls	r5, r5, #31
 801db6c:	bf54      	ite	pl
 801db6e:	f002 020f 	andpl.w	r2, r2, #15
 801db72:	1112      	asrmi	r2, r2, #4
 801db74:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801db78:	b2d2      	uxtb	r2, r2
 801db7a:	b1c2      	cbz	r2, 801dbae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801db7c:	9d04      	ldr	r5, [sp, #16]
 801db7e:	436a      	muls	r2, r5
 801db80:	1c55      	adds	r5, r2, #1
 801db82:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801db86:	4d2e      	ldr	r5, [pc, #184]	; (801dc40 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801db88:	1212      	asrs	r2, r2, #8
 801db8a:	682e      	ldr	r6, [r5, #0]
 801db8c:	2aff      	cmp	r2, #255	; 0xff
 801db8e:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801db92:	d113      	bne.n	801dbbc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801db94:	0972      	lsrs	r2, r6, #5
 801db96:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801db9a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801db9e:	f025 0507 	bic.w	r5, r5, #7
 801dba2:	4315      	orrs	r5, r2
 801dba4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801dba8:	4335      	orrs	r5, r6
 801dbaa:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801dbae:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801dbb0:	4410      	add	r0, r2
 801dbb2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801dbb4:	f108 0801 	add.w	r8, r8, #1
 801dbb8:	4411      	add	r1, r2
 801dbba:	e7c9      	b.n	801db50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801dbbc:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801dbc0:	fa1f fa82 	uxth.w	sl, r2
 801dbc4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801dbc8:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801dbcc:	43d2      	mvns	r2, r2
 801dbce:	b2d2      	uxtb	r2, r2
 801dbd0:	fb17 f70a 	smulbb	r7, r7, sl
 801dbd4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801dbd8:	fb0c 7c02 	mla	ip, ip, r2, r7
 801dbdc:	b2f6      	uxtb	r6, r6
 801dbde:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801dbe2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801dbe6:	fa5f fe8e 	uxtb.w	lr, lr
 801dbea:	fb16 f60a 	smulbb	r6, r6, sl
 801dbee:	fb0e 6602 	mla	r6, lr, r2, r6
 801dbf2:	b2ed      	uxtb	r5, r5
 801dbf4:	fa1f fc8c 	uxth.w	ip, ip
 801dbf8:	fb15 f50a 	smulbb	r5, r5, sl
 801dbfc:	b2b6      	uxth	r6, r6
 801dbfe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801dc02:	fb07 5702 	mla	r7, r7, r2, r5
 801dc06:	f10c 0201 	add.w	r2, ip, #1
 801dc0a:	1c75      	adds	r5, r6, #1
 801dc0c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801dc10:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801dc14:	b2bf      	uxth	r7, r7
 801dc16:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801dc1a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dc1e:	ea45 0c0c 	orr.w	ip, r5, ip
 801dc22:	1c7d      	adds	r5, r7, #1
 801dc24:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801dc28:	096d      	lsrs	r5, r5, #5
 801dc2a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801dc2e:	ea4c 0c05 	orr.w	ip, ip, r5
 801dc32:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801dc36:	e7ba      	b.n	801dbae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801dc38:	b007      	add	sp, #28
 801dc3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dc3e:	bf00      	nop
 801dc40:	2002bd3c 	.word	0x2002bd3c

0801dc44 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dc44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc48:	b087      	sub	sp, #28
 801dc4a:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801df58 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801dc4e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801dc50:	9205      	str	r2, [sp, #20]
 801dc52:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801dc56:	9101      	str	r1, [sp, #4]
 801dc58:	6841      	ldr	r1, [r0, #4]
 801dc5a:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801dc5e:	fb01 2404 	mla	r4, r1, r4, r2
 801dc62:	6802      	ldr	r2, [r0, #0]
 801dc64:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801dc68:	f8db 2008 	ldr.w	r2, [fp, #8]
 801dc6c:	3201      	adds	r2, #1
 801dc6e:	f022 0201 	bic.w	r2, r2, #1
 801dc72:	9202      	str	r2, [sp, #8]
 801dc74:	f8db 2000 	ldr.w	r2, [fp]
 801dc78:	9203      	str	r2, [sp, #12]
 801dc7a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801dc7e:	9a01      	ldr	r2, [sp, #4]
 801dc80:	2a00      	cmp	r2, #0
 801dc82:	dc03      	bgt.n	801dc8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801dc84:	9a05      	ldr	r2, [sp, #20]
 801dc86:	2a00      	cmp	r2, #0
 801dc88:	f340 8162 	ble.w	801df50 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801dc8c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801dc8e:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801dc92:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801dc96:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801dc9a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801dc9c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801dca0:	2b00      	cmp	r3, #0
 801dca2:	dd0e      	ble.n	801dcc2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801dca4:	1402      	asrs	r2, r0, #16
 801dca6:	d405      	bmi.n	801dcb4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801dca8:	42ba      	cmp	r2, r7
 801dcaa:	da03      	bge.n	801dcb4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801dcac:	140a      	asrs	r2, r1, #16
 801dcae:	d401      	bmi.n	801dcb4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801dcb0:	42b2      	cmp	r2, r6
 801dcb2:	db07      	blt.n	801dcc4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801dcb4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801dcb6:	4410      	add	r0, r2
 801dcb8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801dcba:	3b01      	subs	r3, #1
 801dcbc:	4411      	add	r1, r2
 801dcbe:	3402      	adds	r4, #2
 801dcc0:	e7ee      	b.n	801dca0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801dcc2:	d017      	beq.n	801dcf4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801dcc4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801dcc6:	1e5a      	subs	r2, r3, #1
 801dcc8:	fb05 0502 	mla	r5, r5, r2, r0
 801dccc:	142d      	asrs	r5, r5, #16
 801dcce:	d409      	bmi.n	801dce4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801dcd0:	42bd      	cmp	r5, r7
 801dcd2:	da07      	bge.n	801dce4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801dcd4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801dcd6:	fb05 1202 	mla	r2, r5, r2, r1
 801dcda:	1412      	asrs	r2, r2, #16
 801dcdc:	d402      	bmi.n	801dce4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801dcde:	42b2      	cmp	r2, r6
 801dce0:	f2c0 80c3 	blt.w	801de6a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801dce4:	2500      	movs	r5, #0
 801dce6:	195a      	adds	r2, r3, r5
 801dce8:	2a00      	cmp	r2, #0
 801dcea:	dc3f      	bgt.n	801dd6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801dcec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801dcf0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801dcf4:	9b01      	ldr	r3, [sp, #4]
 801dcf6:	2b00      	cmp	r3, #0
 801dcf8:	f340 812a 	ble.w	801df50 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801dcfc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dd00:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dd04:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801dd08:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801dd0a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dd0e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dd12:	eeb0 6a62 	vmov.f32	s12, s5
 801dd16:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dd1a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801dd1e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dd22:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801dd26:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dd2a:	eeb0 6a43 	vmov.f32	s12, s6
 801dd2e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dd32:	ee12 2a90 	vmov	r2, s5
 801dd36:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dd3a:	fb92 f3f3 	sdiv	r3, r2, r3
 801dd3e:	ee13 2a10 	vmov	r2, s6
 801dd42:	9313      	str	r3, [sp, #76]	; 0x4c
 801dd44:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801dd46:	fb92 f3f3 	sdiv	r3, r2, r3
 801dd4a:	9314      	str	r3, [sp, #80]	; 0x50
 801dd4c:	9b01      	ldr	r3, [sp, #4]
 801dd4e:	9a05      	ldr	r2, [sp, #20]
 801dd50:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801dd54:	3b01      	subs	r3, #1
 801dd56:	9301      	str	r3, [sp, #4]
 801dd58:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801dd5c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801dd5e:	eeb0 3a67 	vmov.f32	s6, s15
 801dd62:	bf08      	it	eq
 801dd64:	4613      	moveq	r3, r2
 801dd66:	eef0 2a47 	vmov.f32	s5, s14
 801dd6a:	e788      	b.n	801dc7e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801dd6c:	1406      	asrs	r6, r0, #16
 801dd6e:	d42c      	bmi.n	801ddca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801dd70:	f8db 2008 	ldr.w	r2, [fp, #8]
 801dd74:	42b2      	cmp	r2, r6
 801dd76:	dd28      	ble.n	801ddca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801dd78:	140f      	asrs	r7, r1, #16
 801dd7a:	d426      	bmi.n	801ddca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801dd7c:	f8db 200c 	ldr.w	r2, [fp, #12]
 801dd80:	42ba      	cmp	r2, r7
 801dd82:	dd22      	ble.n	801ddca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801dd84:	9a02      	ldr	r2, [sp, #8]
 801dd86:	fb07 6602 	mla	r6, r7, r2, r6
 801dd8a:	0872      	lsrs	r2, r6, #1
 801dd8c:	9f03      	ldr	r7, [sp, #12]
 801dd8e:	5cba      	ldrb	r2, [r7, r2]
 801dd90:	07f6      	lsls	r6, r6, #31
 801dd92:	bf54      	ite	pl
 801dd94:	f002 020f 	andpl.w	r2, r2, #15
 801dd98:	1112      	asrmi	r2, r2, #4
 801dd9a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801dd9e:	b2d2      	uxtb	r2, r2
 801dda0:	2aff      	cmp	r2, #255	; 0xff
 801dda2:	d118      	bne.n	801ddd6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801dda4:	f8d8 2000 	ldr.w	r2, [r8]
 801dda8:	f06f 0601 	mvn.w	r6, #1
 801ddac:	fb06 f705 	mul.w	r7, r6, r5
 801ddb0:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801ddb4:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801ddb8:	0956      	lsrs	r6, r2, #5
 801ddba:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ddbe:	ea4c 0606 	orr.w	r6, ip, r6
 801ddc2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ddc6:	4316      	orrs	r6, r2
 801ddc8:	53e6      	strh	r6, [r4, r7]
 801ddca:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ddcc:	4410      	add	r0, r2
 801ddce:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ddd0:	3d01      	subs	r5, #1
 801ddd2:	4411      	add	r1, r2
 801ddd4:	e787      	b.n	801dce6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ddd6:	2a00      	cmp	r2, #0
 801ddd8:	d0f7      	beq.n	801ddca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ddda:	f06f 0601 	mvn.w	r6, #1
 801ddde:	436e      	muls	r6, r5
 801dde0:	f8d8 c000 	ldr.w	ip, [r8]
 801dde4:	f834 e006 	ldrh.w	lr, [r4, r6]
 801dde8:	9604      	str	r6, [sp, #16]
 801ddea:	fa1f f982 	uxth.w	r9, r2
 801ddee:	ea4f 272e 	mov.w	r7, lr, asr #8
 801ddf2:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801ddf6:	43d2      	mvns	r2, r2
 801ddf8:	b2d2      	uxtb	r2, r2
 801ddfa:	fb16 f609 	smulbb	r6, r6, r9
 801ddfe:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801de02:	fb07 6702 	mla	r7, r7, r2, r6
 801de06:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801de0a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801de0e:	fa5f fc8c 	uxtb.w	ip, ip
 801de12:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801de16:	fa5f fe8e 	uxtb.w	lr, lr
 801de1a:	fb1c fc09 	smulbb	ip, ip, r9
 801de1e:	fb0e cc02 	mla	ip, lr, r2, ip
 801de22:	b2bf      	uxth	r7, r7
 801de24:	fb1a fa09 	smulbb	sl, sl, r9
 801de28:	fa1f fc8c 	uxth.w	ip, ip
 801de2c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801de30:	fb06 a602 	mla	r6, r6, r2, sl
 801de34:	1c7a      	adds	r2, r7, #1
 801de36:	f10c 0a01 	add.w	sl, ip, #1
 801de3a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801de3e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801de42:	b2b6      	uxth	r6, r6
 801de44:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801de48:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801de4c:	ea4a 0707 	orr.w	r7, sl, r7
 801de50:	f106 0a01 	add.w	sl, r6, #1
 801de54:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801de58:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801de5c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801de60:	9a04      	ldr	r2, [sp, #16]
 801de62:	ea47 070a 	orr.w	r7, r7, sl
 801de66:	52a7      	strh	r7, [r4, r2]
 801de68:	e7af      	b.n	801ddca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801de6a:	f04f 0e00 	mov.w	lr, #0
 801de6e:	eba3 020e 	sub.w	r2, r3, lr
 801de72:	2a00      	cmp	r2, #0
 801de74:	f77f af3a 	ble.w	801dcec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801de78:	9e02      	ldr	r6, [sp, #8]
 801de7a:	1402      	asrs	r2, r0, #16
 801de7c:	140d      	asrs	r5, r1, #16
 801de7e:	fb06 2505 	mla	r5, r6, r5, r2
 801de82:	086a      	lsrs	r2, r5, #1
 801de84:	9e03      	ldr	r6, [sp, #12]
 801de86:	5cb2      	ldrb	r2, [r6, r2]
 801de88:	07ed      	lsls	r5, r5, #31
 801de8a:	bf54      	ite	pl
 801de8c:	f002 020f 	andpl.w	r2, r2, #15
 801de90:	1112      	asrmi	r2, r2, #4
 801de92:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801de96:	b2d2      	uxtb	r2, r2
 801de98:	2aff      	cmp	r2, #255	; 0xff
 801de9a:	d115      	bne.n	801dec8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801de9c:	f8d8 5000 	ldr.w	r5, [r8]
 801dea0:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801dea4:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801dea8:	096a      	lsrs	r2, r5, #5
 801deaa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801deae:	4332      	orrs	r2, r6
 801deb0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801deb4:	432a      	orrs	r2, r5
 801deb6:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801deba:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801debc:	4410      	add	r0, r2
 801debe:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801dec0:	f10e 0e01 	add.w	lr, lr, #1
 801dec4:	4411      	add	r1, r2
 801dec6:	e7d2      	b.n	801de6e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801dec8:	2a00      	cmp	r2, #0
 801deca:	d0f6      	beq.n	801deba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801decc:	f8d8 7000 	ldr.w	r7, [r8]
 801ded0:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801ded4:	fa1f f982 	uxth.w	r9, r2
 801ded8:	ea4f 262c 	mov.w	r6, ip, asr #8
 801dedc:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801dee0:	43d2      	mvns	r2, r2
 801dee2:	b2d2      	uxtb	r2, r2
 801dee4:	fb15 f509 	smulbb	r5, r5, r9
 801dee8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801deec:	fb06 5602 	mla	r6, r6, r2, r5
 801def0:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801def4:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801def8:	b2ff      	uxtb	r7, r7
 801defa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801defe:	fa5f fc8c 	uxtb.w	ip, ip
 801df02:	fb17 f709 	smulbb	r7, r7, r9
 801df06:	fb0c 7702 	mla	r7, ip, r2, r7
 801df0a:	b2b6      	uxth	r6, r6
 801df0c:	fb1a fa09 	smulbb	sl, sl, r9
 801df10:	b2bf      	uxth	r7, r7
 801df12:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801df16:	fb05 a502 	mla	r5, r5, r2, sl
 801df1a:	1c72      	adds	r2, r6, #1
 801df1c:	f107 0a01 	add.w	sl, r7, #1
 801df20:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801df24:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801df28:	b2ad      	uxth	r5, r5
 801df2a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801df2e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801df32:	ea4a 0606 	orr.w	r6, sl, r6
 801df36:	f105 0a01 	add.w	sl, r5, #1
 801df3a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801df3e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801df42:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801df46:	ea46 060a 	orr.w	r6, r6, sl
 801df4a:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801df4e:	e7b4      	b.n	801deba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801df50:	b007      	add	sp, #28
 801df52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801df56:	bf00      	nop
 801df58:	2002bd3c 	.word	0x2002bd3c

0801df5c <_ZN8touchgfx8LCD16bppD1Ev>:
 801df5c:	4770      	bx	lr

0801df5e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801df5e:	4770      	bx	lr

0801df60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801df60:	4770      	bx	lr

0801df62 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801df62:	4770      	bx	lr

0801df64 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801df64:	4770      	bx	lr

0801df66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801df66:	4770      	bx	lr

0801df68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801df68:	4770      	bx	lr

0801df6a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801df6a:	4770      	bx	lr

0801df6c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801df6c:	4770      	bx	lr

0801df6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801df6e:	4770      	bx	lr

0801df70 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801df70:	4770      	bx	lr

0801df72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801df72:	4770      	bx	lr

0801df74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801df74:	4770      	bx	lr

0801df76 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801df76:	4770      	bx	lr

0801df78 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801df78:	4770      	bx	lr

0801df7a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801df7a:	4770      	bx	lr

0801df7c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801df7c:	4770      	bx	lr

0801df7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801df7e:	4770      	bx	lr

0801df80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801df80:	4770      	bx	lr

0801df82 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801df82:	4770      	bx	lr

0801df84 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801df84:	4770      	bx	lr

0801df86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801df86:	4770      	bx	lr

0801df88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801df88:	4770      	bx	lr

0801df8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801df8a:	4770      	bx	lr

0801df8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801df8c:	4770      	bx	lr

0801df8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801df8e:	4770      	bx	lr

0801df90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801df90:	4770      	bx	lr

0801df92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801df92:	4770      	bx	lr

0801df94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801df94:	4770      	bx	lr
	...

0801df98 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801df98:	b508      	push	{r3, lr}
 801df9a:	4b06      	ldr	r3, [pc, #24]	; (801dfb4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 801df9c:	8818      	ldrh	r0, [r3, #0]
 801df9e:	b928      	cbnz	r0, 801dfac <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 801dfa0:	4b05      	ldr	r3, [pc, #20]	; (801dfb8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 801dfa2:	4a06      	ldr	r2, [pc, #24]	; (801dfbc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 801dfa4:	4806      	ldr	r0, [pc, #24]	; (801dfc0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 801dfa6:	2150      	movs	r1, #80	; 0x50
 801dfa8:	f009 fbea 	bl	8027780 <__assert_func>
 801dfac:	0040      	lsls	r0, r0, #1
 801dfae:	b280      	uxth	r0, r0
 801dfb0:	bd08      	pop	{r3, pc}
 801dfb2:	bf00      	nop
 801dfb4:	2002bd2e 	.word	0x2002bd2e
 801dfb8:	0802d4f8 	.word	0x0802d4f8
 801dfbc:	0802daf4 	.word	0x0802daf4
 801dfc0:	0802d53a 	.word	0x0802d53a

0801dfc4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801dfc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dfc8:	b08b      	sub	sp, #44	; 0x2c
 801dfca:	460f      	mov	r7, r1
 801dfcc:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801dfd0:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801dfd4:	4616      	mov	r6, r2
 801dfd6:	f1bb 0f00 	cmp.w	fp, #0
 801dfda:	d049      	beq.n	801e070 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 801dfdc:	6810      	ldr	r0, [r2, #0]
 801dfde:	6851      	ldr	r1, [r2, #4]
 801dfe0:	ad06      	add	r5, sp, #24
 801dfe2:	c503      	stmia	r5!, {r0, r1}
 801dfe4:	6818      	ldr	r0, [r3, #0]
 801dfe6:	6859      	ldr	r1, [r3, #4]
 801dfe8:	ad08      	add	r5, sp, #32
 801dfea:	c503      	stmia	r5!, {r0, r1}
 801dfec:	a806      	add	r0, sp, #24
 801dfee:	f7f9 f9fb 	bl	80173e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dff2:	4631      	mov	r1, r6
 801dff4:	a808      	add	r0, sp, #32
 801dff6:	f7f9 fa1f 	bl	8017438 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dffa:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801dffe:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801e002:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801e006:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801e00a:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801e00e:	fb16 2103 	smlabb	r1, r6, r3, r2
 801e012:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801e016:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801e01a:	4f5f      	ldr	r7, [pc, #380]	; (801e198 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801e01c:	440a      	add	r2, r1
 801e01e:	f8ad 2020 	strh.w	r2, [sp, #32]
 801e022:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801e026:	6838      	ldr	r0, [r7, #0]
 801e028:	4413      	add	r3, r2
 801e02a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801e02e:	6803      	ldr	r3, [r0, #0]
 801e030:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e032:	4798      	blx	r3
 801e034:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801e038:	46b9      	mov	r9, r7
 801e03a:	d01c      	beq.n	801e076 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 801e03c:	f010 0f04 	tst.w	r0, #4
 801e040:	d01d      	beq.n	801e07e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801e042:	f8d9 0000 	ldr.w	r0, [r9]
 801e046:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801e04a:	6801      	ldr	r1, [r0, #0]
 801e04c:	f8cd b00c 	str.w	fp, [sp, #12]
 801e050:	2700      	movs	r7, #0
 801e052:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801e056:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801e05a:	9402      	str	r4, [sp, #8]
 801e05c:	b2ad      	uxth	r5, r5
 801e05e:	fa1f f488 	uxth.w	r4, r8
 801e062:	9501      	str	r5, [sp, #4]
 801e064:	9400      	str	r4, [sp, #0]
 801e066:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801e068:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801e06c:	4631      	mov	r1, r6
 801e06e:	47a0      	blx	r4
 801e070:	b00b      	add	sp, #44	; 0x2c
 801e072:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e076:	b914      	cbnz	r4, 801e07e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801e078:	f010 0f01 	tst.w	r0, #1
 801e07c:	e7e0      	b.n	801e040 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 801e07e:	f8d9 0000 	ldr.w	r0, [r9]
 801e082:	6803      	ldr	r3, [r0, #0]
 801e084:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e086:	4798      	blx	r3
 801e088:	4b44      	ldr	r3, [pc, #272]	; (801e19c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801e08a:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801e08e:	881a      	ldrh	r2, [r3, #0]
 801e090:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801e094:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801e098:	fb02 1404 	mla	r4, r2, r4, r1
 801e09c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801e0a0:	469a      	mov	sl, r3
 801e0a2:	fb05 f502 	mul.w	r5, r5, r2
 801e0a6:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801e0aa:	d059      	beq.n	801e160 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801e0ac:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801e0b0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801e0b4:	fa1f f28b 	uxth.w	r2, fp
 801e0b8:	fa1f f989 	uxth.w	r9, r9
 801e0bc:	469e      	mov	lr, r3
 801e0be:	42ac      	cmp	r4, r5
 801e0c0:	d264      	bcs.n	801e18c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801e0c2:	eb04 0a07 	add.w	sl, r4, r7
 801e0c6:	4554      	cmp	r4, sl
 801e0c8:	d23d      	bcs.n	801e146 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801e0ca:	8821      	ldrh	r1, [r4, #0]
 801e0cc:	f836 3b02 	ldrh.w	r3, [r6], #2
 801e0d0:	1208      	asrs	r0, r1, #8
 801e0d2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801e0d6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e0da:	fb10 f009 	smulbb	r0, r0, r9
 801e0de:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801e0e2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e0e6:	00c9      	lsls	r1, r1, #3
 801e0e8:	fb0c 0c02 	mla	ip, ip, r2, r0
 801e0ec:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801e0f0:	10d8      	asrs	r0, r3, #3
 801e0f2:	b2c9      	uxtb	r1, r1
 801e0f4:	00db      	lsls	r3, r3, #3
 801e0f6:	fa1f fc8c 	uxth.w	ip, ip
 801e0fa:	fb1b fb09 	smulbb	fp, fp, r9
 801e0fe:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801e102:	b2db      	uxtb	r3, r3
 801e104:	fb11 f109 	smulbb	r1, r1, r9
 801e108:	fb00 b002 	mla	r0, r0, r2, fp
 801e10c:	fb03 1302 	mla	r3, r3, r2, r1
 801e110:	f10c 0b01 	add.w	fp, ip, #1
 801e114:	b29b      	uxth	r3, r3
 801e116:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801e11a:	b280      	uxth	r0, r0
 801e11c:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801e120:	f103 0c01 	add.w	ip, r3, #1
 801e124:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801e128:	1c43      	adds	r3, r0, #1
 801e12a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801e12e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e132:	0940      	lsrs	r0, r0, #5
 801e134:	ea4c 0c0b 	orr.w	ip, ip, fp
 801e138:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e13c:	ea4c 0c00 	orr.w	ip, ip, r0
 801e140:	f824 cb02 	strh.w	ip, [r4], #2
 801e144:	e7bf      	b.n	801e0c6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801e146:	f8be 3000 	ldrh.w	r3, [lr]
 801e14a:	eba3 0308 	sub.w	r3, r3, r8
 801e14e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e152:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801e156:	eba3 0308 	sub.w	r3, r3, r8
 801e15a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801e15e:	e7ae      	b.n	801e0be <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801e160:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801e164:	f8d9 0000 	ldr.w	r0, [r9]
 801e168:	42ac      	cmp	r4, r5
 801e16a:	6803      	ldr	r3, [r0, #0]
 801e16c:	d20e      	bcs.n	801e18c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801e16e:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801e172:	4632      	mov	r2, r6
 801e174:	463b      	mov	r3, r7
 801e176:	4621      	mov	r1, r4
 801e178:	47c0      	blx	r8
 801e17a:	f8ba 3000 	ldrh.w	r3, [sl]
 801e17e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e182:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801e186:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801e18a:	e7eb      	b.n	801e164 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801e18c:	4b02      	ldr	r3, [pc, #8]	; (801e198 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801e18e:	6818      	ldr	r0, [r3, #0]
 801e190:	6803      	ldr	r3, [r0, #0]
 801e192:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e194:	4798      	blx	r3
 801e196:	e76b      	b.n	801e070 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 801e198:	2002bd34 	.word	0x2002bd34
 801e19c:	2002bd2e 	.word	0x2002bd2e

0801e1a0 <_ZN8touchgfx8LCD16bppD0Ev>:
 801e1a0:	b510      	push	{r4, lr}
 801e1a2:	2178      	movs	r1, #120	; 0x78
 801e1a4:	4604      	mov	r4, r0
 801e1a6:	f009 fabd 	bl	8027724 <_ZdlPvj>
 801e1aa:	4620      	mov	r0, r4
 801e1ac:	bd10      	pop	{r4, pc}

0801e1ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801e1ae:	b510      	push	{r4, lr}
 801e1b0:	2104      	movs	r1, #4
 801e1b2:	4604      	mov	r4, r0
 801e1b4:	f009 fab6 	bl	8027724 <_ZdlPvj>
 801e1b8:	4620      	mov	r0, r4
 801e1ba:	bd10      	pop	{r4, pc}

0801e1bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801e1bc:	b510      	push	{r4, lr}
 801e1be:	2104      	movs	r1, #4
 801e1c0:	4604      	mov	r4, r0
 801e1c2:	f009 faaf 	bl	8027724 <_ZdlPvj>
 801e1c6:	4620      	mov	r0, r4
 801e1c8:	bd10      	pop	{r4, pc}

0801e1ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801e1ca:	b510      	push	{r4, lr}
 801e1cc:	2104      	movs	r1, #4
 801e1ce:	4604      	mov	r4, r0
 801e1d0:	f009 faa8 	bl	8027724 <_ZdlPvj>
 801e1d4:	4620      	mov	r0, r4
 801e1d6:	bd10      	pop	{r4, pc}

0801e1d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801e1d8:	b510      	push	{r4, lr}
 801e1da:	2104      	movs	r1, #4
 801e1dc:	4604      	mov	r4, r0
 801e1de:	f009 faa1 	bl	8027724 <_ZdlPvj>
 801e1e2:	4620      	mov	r0, r4
 801e1e4:	bd10      	pop	{r4, pc}

0801e1e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801e1e6:	b510      	push	{r4, lr}
 801e1e8:	2104      	movs	r1, #4
 801e1ea:	4604      	mov	r4, r0
 801e1ec:	f009 fa9a 	bl	8027724 <_ZdlPvj>
 801e1f0:	4620      	mov	r0, r4
 801e1f2:	bd10      	pop	{r4, pc}

0801e1f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801e1f4:	b510      	push	{r4, lr}
 801e1f6:	2104      	movs	r1, #4
 801e1f8:	4604      	mov	r4, r0
 801e1fa:	f009 fa93 	bl	8027724 <_ZdlPvj>
 801e1fe:	4620      	mov	r0, r4
 801e200:	bd10      	pop	{r4, pc}

0801e202 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801e202:	b510      	push	{r4, lr}
 801e204:	2104      	movs	r1, #4
 801e206:	4604      	mov	r4, r0
 801e208:	f009 fa8c 	bl	8027724 <_ZdlPvj>
 801e20c:	4620      	mov	r0, r4
 801e20e:	bd10      	pop	{r4, pc}

0801e210 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801e210:	b510      	push	{r4, lr}
 801e212:	2104      	movs	r1, #4
 801e214:	4604      	mov	r4, r0
 801e216:	f009 fa85 	bl	8027724 <_ZdlPvj>
 801e21a:	4620      	mov	r0, r4
 801e21c:	bd10      	pop	{r4, pc}

0801e21e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801e21e:	b510      	push	{r4, lr}
 801e220:	2104      	movs	r1, #4
 801e222:	4604      	mov	r4, r0
 801e224:	f009 fa7e 	bl	8027724 <_ZdlPvj>
 801e228:	4620      	mov	r0, r4
 801e22a:	bd10      	pop	{r4, pc}

0801e22c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801e22c:	b510      	push	{r4, lr}
 801e22e:	2104      	movs	r1, #4
 801e230:	4604      	mov	r4, r0
 801e232:	f009 fa77 	bl	8027724 <_ZdlPvj>
 801e236:	4620      	mov	r0, r4
 801e238:	bd10      	pop	{r4, pc}

0801e23a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801e23a:	b510      	push	{r4, lr}
 801e23c:	2104      	movs	r1, #4
 801e23e:	4604      	mov	r4, r0
 801e240:	f009 fa70 	bl	8027724 <_ZdlPvj>
 801e244:	4620      	mov	r0, r4
 801e246:	bd10      	pop	{r4, pc}

0801e248 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801e248:	b510      	push	{r4, lr}
 801e24a:	2104      	movs	r1, #4
 801e24c:	4604      	mov	r4, r0
 801e24e:	f009 fa69 	bl	8027724 <_ZdlPvj>
 801e252:	4620      	mov	r0, r4
 801e254:	bd10      	pop	{r4, pc}

0801e256 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801e256:	b510      	push	{r4, lr}
 801e258:	2104      	movs	r1, #4
 801e25a:	4604      	mov	r4, r0
 801e25c:	f009 fa62 	bl	8027724 <_ZdlPvj>
 801e260:	4620      	mov	r0, r4
 801e262:	bd10      	pop	{r4, pc}

0801e264 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801e264:	b510      	push	{r4, lr}
 801e266:	2104      	movs	r1, #4
 801e268:	4604      	mov	r4, r0
 801e26a:	f009 fa5b 	bl	8027724 <_ZdlPvj>
 801e26e:	4620      	mov	r0, r4
 801e270:	bd10      	pop	{r4, pc}

0801e272 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801e272:	b510      	push	{r4, lr}
 801e274:	2104      	movs	r1, #4
 801e276:	4604      	mov	r4, r0
 801e278:	f009 fa54 	bl	8027724 <_ZdlPvj>
 801e27c:	4620      	mov	r0, r4
 801e27e:	bd10      	pop	{r4, pc}

0801e280 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801e280:	b510      	push	{r4, lr}
 801e282:	2104      	movs	r1, #4
 801e284:	4604      	mov	r4, r0
 801e286:	f009 fa4d 	bl	8027724 <_ZdlPvj>
 801e28a:	4620      	mov	r0, r4
 801e28c:	bd10      	pop	{r4, pc}

0801e28e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801e28e:	b510      	push	{r4, lr}
 801e290:	2104      	movs	r1, #4
 801e292:	4604      	mov	r4, r0
 801e294:	f009 fa46 	bl	8027724 <_ZdlPvj>
 801e298:	4620      	mov	r0, r4
 801e29a:	bd10      	pop	{r4, pc}

0801e29c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801e29c:	b510      	push	{r4, lr}
 801e29e:	2104      	movs	r1, #4
 801e2a0:	4604      	mov	r4, r0
 801e2a2:	f009 fa3f 	bl	8027724 <_ZdlPvj>
 801e2a6:	4620      	mov	r0, r4
 801e2a8:	bd10      	pop	{r4, pc}

0801e2aa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801e2aa:	b510      	push	{r4, lr}
 801e2ac:	2104      	movs	r1, #4
 801e2ae:	4604      	mov	r4, r0
 801e2b0:	f009 fa38 	bl	8027724 <_ZdlPvj>
 801e2b4:	4620      	mov	r0, r4
 801e2b6:	bd10      	pop	{r4, pc}

0801e2b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801e2b8:	b510      	push	{r4, lr}
 801e2ba:	2104      	movs	r1, #4
 801e2bc:	4604      	mov	r4, r0
 801e2be:	f009 fa31 	bl	8027724 <_ZdlPvj>
 801e2c2:	4620      	mov	r0, r4
 801e2c4:	bd10      	pop	{r4, pc}

0801e2c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801e2c6:	b510      	push	{r4, lr}
 801e2c8:	2104      	movs	r1, #4
 801e2ca:	4604      	mov	r4, r0
 801e2cc:	f009 fa2a 	bl	8027724 <_ZdlPvj>
 801e2d0:	4620      	mov	r0, r4
 801e2d2:	bd10      	pop	{r4, pc}

0801e2d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801e2d4:	b510      	push	{r4, lr}
 801e2d6:	2104      	movs	r1, #4
 801e2d8:	4604      	mov	r4, r0
 801e2da:	f009 fa23 	bl	8027724 <_ZdlPvj>
 801e2de:	4620      	mov	r0, r4
 801e2e0:	bd10      	pop	{r4, pc}

0801e2e2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801e2e2:	b510      	push	{r4, lr}
 801e2e4:	2104      	movs	r1, #4
 801e2e6:	4604      	mov	r4, r0
 801e2e8:	f009 fa1c 	bl	8027724 <_ZdlPvj>
 801e2ec:	4620      	mov	r0, r4
 801e2ee:	bd10      	pop	{r4, pc}

0801e2f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801e2f0:	b510      	push	{r4, lr}
 801e2f2:	2104      	movs	r1, #4
 801e2f4:	4604      	mov	r4, r0
 801e2f6:	f009 fa15 	bl	8027724 <_ZdlPvj>
 801e2fa:	4620      	mov	r0, r4
 801e2fc:	bd10      	pop	{r4, pc}

0801e2fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801e2fe:	b510      	push	{r4, lr}
 801e300:	2104      	movs	r1, #4
 801e302:	4604      	mov	r4, r0
 801e304:	f009 fa0e 	bl	8027724 <_ZdlPvj>
 801e308:	4620      	mov	r0, r4
 801e30a:	bd10      	pop	{r4, pc}

0801e30c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801e30c:	b510      	push	{r4, lr}
 801e30e:	2104      	movs	r1, #4
 801e310:	4604      	mov	r4, r0
 801e312:	f009 fa07 	bl	8027724 <_ZdlPvj>
 801e316:	4620      	mov	r0, r4
 801e318:	bd10      	pop	{r4, pc}

0801e31a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801e31a:	b510      	push	{r4, lr}
 801e31c:	2104      	movs	r1, #4
 801e31e:	4604      	mov	r4, r0
 801e320:	f009 fa00 	bl	8027724 <_ZdlPvj>
 801e324:	4620      	mov	r0, r4
 801e326:	bd10      	pop	{r4, pc}

0801e328 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801e328:	b510      	push	{r4, lr}
 801e32a:	2104      	movs	r1, #4
 801e32c:	4604      	mov	r4, r0
 801e32e:	f009 f9f9 	bl	8027724 <_ZdlPvj>
 801e332:	4620      	mov	r0, r4
 801e334:	bd10      	pop	{r4, pc}
	...

0801e338 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801e338:	b5f0      	push	{r4, r5, r6, r7, lr}
 801e33a:	4606      	mov	r6, r0
 801e33c:	b087      	sub	sp, #28
 801e33e:	460c      	mov	r4, r1
 801e340:	4617      	mov	r7, r2
 801e342:	461d      	mov	r5, r3
 801e344:	b333      	cbz	r3, 801e394 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801e346:	4608      	mov	r0, r1
 801e348:	f7f5 fa19 	bl	801377e <_ZNK8touchgfx4Rect7isEmptyEv>
 801e34c:	bb10      	cbnz	r0, 801e394 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801e34e:	6820      	ldr	r0, [r4, #0]
 801e350:	6861      	ldr	r1, [r4, #4]
 801e352:	4c1c      	ldr	r4, [pc, #112]	; (801e3c4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801e354:	ab04      	add	r3, sp, #16
 801e356:	c303      	stmia	r3!, {r0, r1}
 801e358:	a804      	add	r0, sp, #16
 801e35a:	f7f9 f845 	bl	80173e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e35e:	6820      	ldr	r0, [r4, #0]
 801e360:	6803      	ldr	r3, [r0, #0]
 801e362:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e364:	4798      	blx	r3
 801e366:	2dff      	cmp	r5, #255	; 0xff
 801e368:	d016      	beq.n	801e398 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801e36a:	f010 0f08 	tst.w	r0, #8
 801e36e:	6820      	ldr	r0, [r4, #0]
 801e370:	d015      	beq.n	801e39e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801e372:	2400      	movs	r4, #0
 801e374:	6801      	ldr	r1, [r0, #0]
 801e376:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801e37a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e37e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801e382:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801e386:	9401      	str	r4, [sp, #4]
 801e388:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801e38c:	9400      	str	r4, [sp, #0]
 801e38e:	6dcc      	ldr	r4, [r1, #92]	; 0x5c
 801e390:	4639      	mov	r1, r7
 801e392:	47a0      	blx	r4
 801e394:	b007      	add	sp, #28
 801e396:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801e398:	f010 0f02 	tst.w	r0, #2
 801e39c:	e7e7      	b.n	801e36e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801e39e:	6803      	ldr	r3, [r0, #0]
 801e3a0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e3a2:	4798      	blx	r3
 801e3a4:	4b08      	ldr	r3, [pc, #32]	; (801e3c8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801e3a6:	881a      	ldrh	r2, [r3, #0]
 801e3a8:	6833      	ldr	r3, [r6, #0]
 801e3aa:	e9cd 7500 	strd	r7, r5, [sp]
 801e3ae:	4601      	mov	r1, r0
 801e3b0:	69dd      	ldr	r5, [r3, #28]
 801e3b2:	4630      	mov	r0, r6
 801e3b4:	ab04      	add	r3, sp, #16
 801e3b6:	47a8      	blx	r5
 801e3b8:	6820      	ldr	r0, [r4, #0]
 801e3ba:	6803      	ldr	r3, [r0, #0]
 801e3bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e3be:	4798      	blx	r3
 801e3c0:	e7e8      	b.n	801e394 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801e3c2:	bf00      	nop
 801e3c4:	2002bd34 	.word	0x2002bd34
 801e3c8:	2002bd2e 	.word	0x2002bd2e

0801e3cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801e3cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e3d0:	4f97      	ldr	r7, [pc, #604]	; (801e630 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x264>)
 801e3d2:	4616      	mov	r6, r2
 801e3d4:	683a      	ldr	r2, [r7, #0]
 801e3d6:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 801e3da:	2a02      	cmp	r2, #2
 801e3dc:	b08f      	sub	sp, #60	; 0x3c
 801e3de:	4604      	mov	r4, r0
 801e3e0:	4689      	mov	r9, r1
 801e3e2:	d106      	bne.n	801e3f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 801e3e4:	4b93      	ldr	r3, [pc, #588]	; (801e634 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x268>)
 801e3e6:	4a94      	ldr	r2, [pc, #592]	; (801e638 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 801e3e8:	f44f 7159 	mov.w	r1, #868	; 0x364
 801e3ec:	4893      	ldr	r0, [pc, #588]	; (801e63c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x270>)
 801e3ee:	f009 f9c7 	bl	8027780 <__assert_func>
 801e3f2:	ad0e      	add	r5, sp, #56	; 0x38
 801e3f4:	f825 3d24 	strh.w	r3, [r5, #-36]!
 801e3f8:	4628      	mov	r0, r5
 801e3fa:	f7fd fac9 	bl	801b990 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801e3fe:	6823      	ldr	r3, [r4, #0]
 801e400:	4680      	mov	r8, r0
 801e402:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801e404:	4620      	mov	r0, r4
 801e406:	4798      	blx	r3
 801e408:	4580      	cmp	r8, r0
 801e40a:	d004      	beq.n	801e416 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 801e40c:	4b8c      	ldr	r3, [pc, #560]	; (801e640 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 801e40e:	4a8a      	ldr	r2, [pc, #552]	; (801e638 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 801e410:	f240 3166 	movw	r1, #870	; 0x366
 801e414:	e7ea      	b.n	801e3ec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 801e416:	4628      	mov	r0, r5
 801e418:	f7fd fa30 	bl	801b87c <_ZNK8touchgfx6Bitmap7getDataEv>
 801e41c:	4680      	mov	r8, r0
 801e41e:	b920      	cbnz	r0, 801e42a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 801e420:	4b88      	ldr	r3, [pc, #544]	; (801e644 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 801e422:	4a85      	ldr	r2, [pc, #532]	; (801e638 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 801e424:	f44f 715a 	mov.w	r1, #872	; 0x368
 801e428:	e7e0      	b.n	801e3ec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 801e42a:	6830      	ldr	r0, [r6, #0]
 801e42c:	6871      	ldr	r1, [r6, #4]
 801e42e:	f9b6 a000 	ldrsh.w	sl, [r6]
 801e432:	ab06      	add	r3, sp, #24
 801e434:	c303      	stmia	r3!, {r0, r1}
 801e436:	f8d9 1004 	ldr.w	r1, [r9, #4]
 801e43a:	f8d9 0000 	ldr.w	r0, [r9]
 801e43e:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801e442:	ab08      	add	r3, sp, #32
 801e444:	c303      	stmia	r3!, {r0, r1}
 801e446:	4628      	mov	r0, r5
 801e448:	f7fd f910 	bl	801b66c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801e44c:	4606      	mov	r6, r0
 801e44e:	4628      	mov	r0, r5
 801e450:	f7fd f946 	bl	801b6e0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801e454:	f10d 0b20 	add.w	fp, sp, #32
 801e458:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 801e45c:	a806      	add	r0, sp, #24
 801e45e:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 801e462:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 801e466:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 801e46a:	f7f8 ffbd 	bl	80173e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e46e:	4658      	mov	r0, fp
 801e470:	f7f8 ffba 	bl	80173e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e474:	a80a      	add	r0, sp, #40	; 0x28
 801e476:	f7f8 ffb7 	bl	80173e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e47a:	4d73      	ldr	r5, [pc, #460]	; (801e648 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 801e47c:	4b73      	ldr	r3, [pc, #460]	; (801e64c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 801e47e:	f9b5 2000 	ldrsh.w	r2, [r5]
 801e482:	f9b3 3000 	ldrsh.w	r3, [r3]
 801e486:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801e48a:	2100      	movs	r1, #0
 801e48c:	910c      	str	r1, [sp, #48]	; 0x30
 801e48e:	4658      	mov	r0, fp
 801e490:	a90c      	add	r1, sp, #48	; 0x30
 801e492:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801e496:	f7f5 f92f 	bl	80136f8 <_ZN8touchgfx4RectaNERKS0_>
 801e49a:	4658      	mov	r0, fp
 801e49c:	f7f5 f96f 	bl	801377e <_ZNK8touchgfx4Rect7isEmptyEv>
 801e4a0:	2800      	cmp	r0, #0
 801e4a2:	f040 8099 	bne.w	801e5d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 801e4a6:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 801e4aa:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 801e4ae:	4288      	cmp	r0, r1
 801e4b0:	db37      	blt.n	801e522 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 801e4b2:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 801e4b6:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801e4ba:	429a      	cmp	r2, r3
 801e4bc:	db31      	blt.n	801e522 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 801e4be:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 801e4c2:	4430      	add	r0, r6
 801e4c4:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801e4c8:	4431      	add	r1, r6
 801e4ca:	b200      	sxth	r0, r0
 801e4cc:	b209      	sxth	r1, r1
 801e4ce:	4288      	cmp	r0, r1
 801e4d0:	dc27      	bgt.n	801e522 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 801e4d2:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 801e4d6:	440a      	add	r2, r1
 801e4d8:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 801e4dc:	440b      	add	r3, r1
 801e4de:	b212      	sxth	r2, r2
 801e4e0:	b21b      	sxth	r3, r3
 801e4e2:	429a      	cmp	r2, r3
 801e4e4:	dc1d      	bgt.n	801e522 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 801e4e6:	6823      	ldr	r3, [r4, #0]
 801e4e8:	4620      	mov	r0, r4
 801e4ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e4ec:	4798      	blx	r3
 801e4ee:	4682      	mov	sl, r0
 801e4f0:	6838      	ldr	r0, [r7, #0]
 801e4f2:	6803      	ldr	r3, [r0, #0]
 801e4f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801e4f6:	4798      	blx	r3
 801e4f8:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801e4fc:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801e500:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801e504:	1a5b      	subs	r3, r3, r1
 801e506:	b29b      	uxth	r3, r3
 801e508:	b21c      	sxth	r4, r3
 801e50a:	2c00      	cmp	r4, #0
 801e50c:	dc0e      	bgt.n	801e52c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x160>
 801e50e:	bf1f      	itttt	ne
 801e510:	f8ad 1020 	strhne.w	r1, [sp, #32]
 801e514:	f8bd 1024 	ldrhne.w	r1, [sp, #36]	; 0x24
 801e518:	185b      	addne	r3, r3, r1
 801e51a:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 801e51e:	4644      	mov	r4, r8
 801e520:	e009      	b.n	801e536 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x16a>
 801e522:	4b4b      	ldr	r3, [pc, #300]	; (801e650 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 801e524:	4a44      	ldr	r2, [pc, #272]	; (801e638 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 801e526:	f240 3176 	movw	r1, #886	; 0x376
 801e52a:	e75f      	b.n	801e3ec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 801e52c:	1ad3      	subs	r3, r2, r3
 801e52e:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801e532:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801e536:	f9bd 602a 	ldrsh.w	r6, [sp, #42]	; 0x2a
 801e53a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801e53e:	1b9b      	subs	r3, r3, r6
 801e540:	b29b      	uxth	r3, r3
 801e542:	b219      	sxth	r1, r3
 801e544:	2900      	cmp	r1, #0
 801e546:	dd4b      	ble.n	801e5e0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x214>
 801e548:	4351      	muls	r1, r2
 801e54a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801e54e:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801e552:	1acb      	subs	r3, r1, r3
 801e554:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801e558:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801e55c:	2e00      	cmp	r6, #0
 801e55e:	dd3b      	ble.n	801e5d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 801e560:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 801e564:	2b00      	cmp	r3, #0
 801e566:	dd37      	ble.n	801e5d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 801e568:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801e56c:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801e570:	fb0a f90c 	mul.w	r9, sl, ip
 801e574:	eb09 0941 	add.w	r9, r9, r1, lsl #1
 801e578:	4481      	add	r9, r0
 801e57a:	8828      	ldrh	r0, [r5, #0]
 801e57c:	f9bd 5024 	ldrsh.w	r5, [sp, #36]	; 0x24
 801e580:	42ae      	cmp	r6, r5
 801e582:	bfa8      	it	ge
 801e584:	462e      	movge	r6, r5
 801e586:	1a41      	subs	r1, r0, r1
 801e588:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801e58c:	428e      	cmp	r6, r1
 801e58e:	bfa8      	it	ge
 801e590:	460e      	movge	r6, r1
 801e592:	429d      	cmp	r5, r3
 801e594:	bfa8      	it	ge
 801e596:	461d      	movge	r5, r3
 801e598:	4b2c      	ldr	r3, [pc, #176]	; (801e64c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 801e59a:	881b      	ldrh	r3, [r3, #0]
 801e59c:	eba3 030c 	sub.w	r3, r3, ip
 801e5a0:	429d      	cmp	r5, r3
 801e5a2:	bfa8      	it	ge
 801e5a4:	461d      	movge	r5, r3
 801e5a6:	42b0      	cmp	r0, r6
 801e5a8:	d12c      	bne.n	801e604 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 801e5aa:	4290      	cmp	r0, r2
 801e5ac:	d12a      	bne.n	801e604 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 801e5ae:	6838      	ldr	r0, [r7, #0]
 801e5b0:	9203      	str	r2, [sp, #12]
 801e5b2:	6803      	ldr	r3, [r0, #0]
 801e5b4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e5b6:	4798      	blx	r3
 801e5b8:	07c3      	lsls	r3, r0, #31
 801e5ba:	d51a      	bpl.n	801e5f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x226>
 801e5bc:	9a03      	ldr	r2, [sp, #12]
 801e5be:	6838      	ldr	r0, [r7, #0]
 801e5c0:	f8ad 5026 	strh.w	r5, [sp, #38]	; 0x26
 801e5c4:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 801e5c8:	6803      	ldr	r3, [r0, #0]
 801e5ca:	9200      	str	r2, [sp, #0]
 801e5cc:	6e9d      	ldr	r5, [r3, #104]	; 0x68
 801e5ce:	e89b 0006 	ldmia.w	fp, {r1, r2}
 801e5d2:	4623      	mov	r3, r4
 801e5d4:	47a8      	blx	r5
 801e5d6:	4680      	mov	r8, r0
 801e5d8:	4640      	mov	r0, r8
 801e5da:	b00f      	add	sp, #60	; 0x3c
 801e5dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e5e0:	bf1f      	itttt	ne
 801e5e2:	f8bd 1026 	ldrhne.w	r1, [sp, #38]	; 0x26
 801e5e6:	f8ad 6022 	strhne.w	r6, [sp, #34]	; 0x22
 801e5ea:	185b      	addne	r3, r3, r1
 801e5ec:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 801e5f0:	e7b2      	b.n	801e558 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x18c>
 801e5f2:	6838      	ldr	r0, [r7, #0]
 801e5f4:	6803      	ldr	r3, [r0, #0]
 801e5f6:	464a      	mov	r2, r9
 801e5f8:	6b5e      	ldr	r6, [r3, #52]	; 0x34
 801e5fa:	4621      	mov	r1, r4
 801e5fc:	fb05 f30a 	mul.w	r3, r5, sl
 801e600:	47b0      	blx	r6
 801e602:	e7e9      	b.n	801e5d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 801e604:	4355      	muls	r5, r2
 801e606:	eb04 0345 	add.w	r3, r4, r5, lsl #1
 801e60a:	9303      	str	r3, [sp, #12]
 801e60c:	0076      	lsls	r6, r6, #1
 801e60e:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 801e612:	9b03      	ldr	r3, [sp, #12]
 801e614:	429c      	cmp	r4, r3
 801e616:	d2df      	bcs.n	801e5d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 801e618:	6838      	ldr	r0, [r7, #0]
 801e61a:	6803      	ldr	r3, [r0, #0]
 801e61c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801e61e:	464a      	mov	r2, r9
 801e620:	461d      	mov	r5, r3
 801e622:	4621      	mov	r1, r4
 801e624:	4633      	mov	r3, r6
 801e626:	47a8      	blx	r5
 801e628:	44d1      	add	r9, sl
 801e62a:	445c      	add	r4, fp
 801e62c:	e7f1      	b.n	801e612 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x246>
 801e62e:	bf00      	nop
 801e630:	2002bd34 	.word	0x2002bd34
 801e634:	0802d2f0 	.word	0x0802d2f0
 801e638:	0802dba4 	.word	0x0802dba4
 801e63c:	0802d3a2 	.word	0x0802d3a2
 801e640:	0802d3d4 	.word	0x0802d3d4
 801e644:	0802d429 	.word	0x0802d429
 801e648:	2002bd2e 	.word	0x2002bd2e
 801e64c:	2002bd30 	.word	0x2002bd30
 801e650:	0802d467 	.word	0x0802d467

0801e654 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801e654:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e658:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801e65c:	9e08      	ldr	r6, [sp, #32]
 801e65e:	4688      	mov	r8, r1
 801e660:	4614      	mov	r4, r2
 801e662:	461d      	mov	r5, r3
 801e664:	2f00      	cmp	r7, #0
 801e666:	f000 80b3 	beq.w	801e7d0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801e66a:	4618      	mov	r0, r3
 801e66c:	f7f5 f887 	bl	801377e <_ZNK8touchgfx4Rect7isEmptyEv>
 801e670:	2800      	cmp	r0, #0
 801e672:	f040 80ad 	bne.w	801e7d0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801e676:	f9b5 1000 	ldrsh.w	r1, [r5]
 801e67a:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801e67e:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801e682:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801e686:	fb04 1303 	mla	r3, r4, r3, r1
 801e68a:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801e68e:	4365      	muls	r5, r4
 801e690:	2fff      	cmp	r7, #255	; 0xff
 801e692:	eba4 0200 	sub.w	r2, r4, r0
 801e696:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801e69a:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801e69e:	d04b      	beq.n	801e738 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 801e6a0:	b2bc      	uxth	r4, r7
 801e6a2:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801e6a6:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801e6aa:	fa5f f788 	uxtb.w	r7, r8
 801e6ae:	b2f3      	uxtb	r3, r6
 801e6b0:	0040      	lsls	r0, r0, #1
 801e6b2:	fb0e fe04 	mul.w	lr, lr, r4
 801e6b6:	4367      	muls	r7, r4
 801e6b8:	4363      	muls	r3, r4
 801e6ba:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801e6be:	fa1f fc8c 	uxth.w	ip, ip
 801e6c2:	42a9      	cmp	r1, r5
 801e6c4:	f080 8084 	bcs.w	801e7d0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801e6c8:	eb01 0900 	add.w	r9, r1, r0
 801e6cc:	4549      	cmp	r1, r9
 801e6ce:	d231      	bcs.n	801e734 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 801e6d0:	880a      	ldrh	r2, [r1, #0]
 801e6d2:	1214      	asrs	r4, r2, #8
 801e6d4:	10d6      	asrs	r6, r2, #3
 801e6d6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801e6da:	00d2      	lsls	r2, r2, #3
 801e6dc:	b2d2      	uxtb	r2, r2
 801e6de:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801e6e2:	fb14 f40c 	smulbb	r4, r4, ip
 801e6e6:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e6ea:	4474      	add	r4, lr
 801e6ec:	fb12 f20c 	smulbb	r2, r2, ip
 801e6f0:	b2a4      	uxth	r4, r4
 801e6f2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e6f6:	441a      	add	r2, r3
 801e6f8:	b292      	uxth	r2, r2
 801e6fa:	f104 0a01 	add.w	sl, r4, #1
 801e6fe:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801e702:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801e706:	fb16 f60c 	smulbb	r6, r6, ip
 801e70a:	f102 0a01 	add.w	sl, r2, #1
 801e70e:	443e      	add	r6, r7
 801e710:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801e714:	b2b6      	uxth	r6, r6
 801e716:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801e71a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e71e:	4322      	orrs	r2, r4
 801e720:	1c74      	adds	r4, r6, #1
 801e722:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801e726:	0976      	lsrs	r6, r6, #5
 801e728:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e72c:	4332      	orrs	r2, r6
 801e72e:	f821 2b02 	strh.w	r2, [r1], #2
 801e732:	e7cb      	b.n	801e6cc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 801e734:	4441      	add	r1, r8
 801e736:	e7c4      	b.n	801e6c2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801e738:	4f26      	ldr	r7, [pc, #152]	; (801e7d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x180>)
 801e73a:	0973      	lsrs	r3, r6, #5
 801e73c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e740:	ea08 0707 	and.w	r7, r8, r7
 801e744:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801e748:	433b      	orrs	r3, r7
 801e74a:	4333      	orrs	r3, r6
 801e74c:	07e6      	lsls	r6, r4, #31
 801e74e:	b29b      	uxth	r3, r3
 801e750:	d50b      	bpl.n	801e76a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x116>
 801e752:	0040      	lsls	r0, r0, #1
 801e754:	0052      	lsls	r2, r2, #1
 801e756:	42a9      	cmp	r1, r5
 801e758:	d23a      	bcs.n	801e7d0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801e75a:	180c      	adds	r4, r1, r0
 801e75c:	42a1      	cmp	r1, r4
 801e75e:	d202      	bcs.n	801e766 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x112>
 801e760:	f821 3b02 	strh.w	r3, [r1], #2
 801e764:	e7fa      	b.n	801e75c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x108>
 801e766:	4411      	add	r1, r2
 801e768:	e7f5      	b.n	801e756 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x102>
 801e76a:	078f      	lsls	r7, r1, #30
 801e76c:	d008      	beq.n	801e780 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>
 801e76e:	0066      	lsls	r6, r4, #1
 801e770:	460a      	mov	r2, r1
 801e772:	42aa      	cmp	r2, r5
 801e774:	d202      	bcs.n	801e77c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>
 801e776:	8013      	strh	r3, [r2, #0]
 801e778:	4432      	add	r2, r6
 801e77a:	e7fa      	b.n	801e772 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11e>
 801e77c:	3102      	adds	r1, #2
 801e77e:	3801      	subs	r0, #1
 801e780:	07c6      	lsls	r6, r0, #31
 801e782:	d50b      	bpl.n	801e79c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 801e784:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801e788:	3a01      	subs	r2, #1
 801e78a:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801e78e:	0066      	lsls	r6, r4, #1
 801e790:	42aa      	cmp	r2, r5
 801e792:	d202      	bcs.n	801e79a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801e794:	8013      	strh	r3, [r2, #0]
 801e796:	4432      	add	r2, r6
 801e798:	e7fa      	b.n	801e790 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13c>
 801e79a:	3801      	subs	r0, #1
 801e79c:	b1c0      	cbz	r0, 801e7d0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801e79e:	1040      	asrs	r0, r0, #1
 801e7a0:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801e7a4:	0080      	lsls	r0, r0, #2
 801e7a6:	0064      	lsls	r4, r4, #1
 801e7a8:	42a9      	cmp	r1, r5
 801e7aa:	d211      	bcs.n	801e7d0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801e7ac:	078a      	lsls	r2, r1, #30
 801e7ae:	d006      	beq.n	801e7be <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16a>
 801e7b0:	4b09      	ldr	r3, [pc, #36]	; (801e7d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>)
 801e7b2:	4a0a      	ldr	r2, [pc, #40]	; (801e7dc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x188>)
 801e7b4:	480a      	ldr	r0, [pc, #40]	; (801e7e0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x18c>)
 801e7b6:	f44f 6185 	mov.w	r1, #1064	; 0x428
 801e7ba:	f008 ffe1 	bl	8027780 <__assert_func>
 801e7be:	180e      	adds	r6, r1, r0
 801e7c0:	460a      	mov	r2, r1
 801e7c2:	42b2      	cmp	r2, r6
 801e7c4:	d202      	bcs.n	801e7cc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x178>
 801e7c6:	f842 3b04 	str.w	r3, [r2], #4
 801e7ca:	e7fa      	b.n	801e7c2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16e>
 801e7cc:	4421      	add	r1, r4
 801e7ce:	e7eb      	b.n	801e7a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x154>
 801e7d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e7d4:	00fff800 	.word	0x00fff800
 801e7d8:	0802d1a1 	.word	0x0802d1a1
 801e7dc:	0802d7f0 	.word	0x0802d7f0
 801e7e0:	0802d3a2 	.word	0x0802d3a2

0801e7e4 <_ZN8touchgfx8LCD16bppC1Ev>:
 801e7e4:	2200      	movs	r2, #0
 801e7e6:	4910      	ldr	r1, [pc, #64]	; (801e828 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 801e7e8:	6042      	str	r2, [r0, #4]
 801e7ea:	6001      	str	r1, [r0, #0]
 801e7ec:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801e7f0:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801e7f4:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801e7f8:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801e7fc:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801e800:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801e804:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801e808:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801e80c:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801e810:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801e814:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801e818:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801e81c:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801e820:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801e824:	4770      	bx	lr
 801e826:	bf00      	nop
 801e828:	0802d7a8 	.word	0x0802d7a8

0801e82c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801e82c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e830:	460d      	mov	r5, r1
 801e832:	b08d      	sub	sp, #52	; 0x34
 801e834:	4604      	mov	r4, r0
 801e836:	6808      	ldr	r0, [r1, #0]
 801e838:	6849      	ldr	r1, [r1, #4]
 801e83a:	4699      	mov	r9, r3
 801e83c:	ab08      	add	r3, sp, #32
 801e83e:	c303      	stmia	r3!, {r0, r1}
 801e840:	6810      	ldr	r0, [r2, #0]
 801e842:	6851      	ldr	r1, [r2, #4]
 801e844:	ab0a      	add	r3, sp, #40	; 0x28
 801e846:	c303      	stmia	r3!, {r0, r1}
 801e848:	a808      	add	r0, sp, #32
 801e84a:	f7f8 fdcd 	bl	80173e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e84e:	4629      	mov	r1, r5
 801e850:	a80a      	add	r0, sp, #40	; 0x28
 801e852:	f7f8 fdf1 	bl	8017438 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e856:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801e85a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801e85e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801e862:	4d63      	ldr	r5, [pc, #396]	; (801e9f0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801e864:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801e868:	6828      	ldr	r0, [r5, #0]
 801e86a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801e86e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e872:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801e876:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801e87a:	440a      	add	r2, r1
 801e87c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801e880:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801e884:	4413      	add	r3, r2
 801e886:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801e88a:	6803      	ldr	r3, [r0, #0]
 801e88c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e88e:	4798      	blx	r3
 801e890:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801e894:	d119      	bne.n	801e8ca <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801e896:	f010 0f20 	tst.w	r0, #32
 801e89a:	6828      	ldr	r0, [r5, #0]
 801e89c:	d018      	beq.n	801e8d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801e89e:	2500      	movs	r5, #0
 801e8a0:	6801      	ldr	r1, [r0, #0]
 801e8a2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801e8a6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801e8aa:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801e8ae:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801e8b2:	9502      	str	r5, [sp, #8]
 801e8b4:	b2b6      	uxth	r6, r6
 801e8b6:	fa1f f588 	uxth.w	r5, r8
 801e8ba:	9601      	str	r6, [sp, #4]
 801e8bc:	9500      	str	r5, [sp, #0]
 801e8be:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801e8c0:	4621      	mov	r1, r4
 801e8c2:	47a8      	blx	r5
 801e8c4:	b00d      	add	sp, #52	; 0x34
 801e8c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e8ca:	f010 0f40 	tst.w	r0, #64	; 0x40
 801e8ce:	e7e4      	b.n	801e89a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801e8d0:	6803      	ldr	r3, [r0, #0]
 801e8d2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e8d4:	4798      	blx	r3
 801e8d6:	4947      	ldr	r1, [pc, #284]	; (801e9f4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801e8d8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801e8dc:	880b      	ldrh	r3, [r1, #0]
 801e8de:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801e8e2:	fb03 5202 	mla	r2, r3, r2, r5
 801e8e6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e8ea:	4373      	muls	r3, r6
 801e8ec:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801e8f0:	9307      	str	r3, [sp, #28]
 801e8f2:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801e8f6:	9306      	str	r3, [sp, #24]
 801e8f8:	468a      	mov	sl, r1
 801e8fa:	9b07      	ldr	r3, [sp, #28]
 801e8fc:	4298      	cmp	r0, r3
 801e8fe:	d270      	bcs.n	801e9e2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801e900:	9b06      	ldr	r3, [sp, #24]
 801e902:	4621      	mov	r1, r4
 801e904:	eb00 0b03 	add.w	fp, r0, r3
 801e908:	4558      	cmp	r0, fp
 801e90a:	d25d      	bcs.n	801e9c8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801e90c:	f851 4b04 	ldr.w	r4, [r1], #4
 801e910:	0e23      	lsrs	r3, r4, #24
 801e912:	d014      	beq.n	801e93e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801e914:	2bff      	cmp	r3, #255	; 0xff
 801e916:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801e91a:	d112      	bne.n	801e942 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801e91c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801e920:	d10f      	bne.n	801e942 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801e922:	0963      	lsrs	r3, r4, #5
 801e924:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801e928:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e92c:	f02c 0c07 	bic.w	ip, ip, #7
 801e930:	ea43 0c0c 	orr.w	ip, r3, ip
 801e934:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e938:	ea4c 0404 	orr.w	r4, ip, r4
 801e93c:	8004      	strh	r4, [r0, #0]
 801e93e:	3002      	adds	r0, #2
 801e940:	e7e2      	b.n	801e908 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801e942:	fb09 f303 	mul.w	r3, r9, r3
 801e946:	8807      	ldrh	r7, [r0, #0]
 801e948:	1c5a      	adds	r2, r3, #1
 801e94a:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801e94e:	1212      	asrs	r2, r2, #8
 801e950:	123e      	asrs	r6, r7, #8
 801e952:	b293      	uxth	r3, r2
 801e954:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801e958:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801e95c:	43d2      	mvns	r2, r2
 801e95e:	b2d2      	uxtb	r2, r2
 801e960:	10fd      	asrs	r5, r7, #3
 801e962:	fb1e fe03 	smulbb	lr, lr, r3
 801e966:	00ff      	lsls	r7, r7, #3
 801e968:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801e96c:	fb06 e602 	mla	r6, r6, r2, lr
 801e970:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e974:	b2ff      	uxtb	r7, r7
 801e976:	fa5f fc8c 	uxtb.w	ip, ip
 801e97a:	b2e4      	uxtb	r4, r4
 801e97c:	b2b6      	uxth	r6, r6
 801e97e:	fb1c fc03 	smulbb	ip, ip, r3
 801e982:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801e986:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801e98a:	fb14 f403 	smulbb	r4, r4, r3
 801e98e:	fb05 c502 	mla	r5, r5, r2, ip
 801e992:	f106 0e01 	add.w	lr, r6, #1
 801e996:	fb07 4702 	mla	r7, r7, r2, r4
 801e99a:	b2ad      	uxth	r5, r5
 801e99c:	b2bf      	uxth	r7, r7
 801e99e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801e9a2:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801e9a6:	f105 0c01 	add.w	ip, r5, #1
 801e9aa:	1c7e      	adds	r6, r7, #1
 801e9ac:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801e9b0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e9b4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e9b8:	096d      	lsrs	r5, r5, #5
 801e9ba:	ea46 060e 	orr.w	r6, r6, lr
 801e9be:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e9c2:	432e      	orrs	r6, r5
 801e9c4:	8006      	strh	r6, [r0, #0]
 801e9c6:	e7ba      	b.n	801e93e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801e9c8:	f8ba 3000 	ldrh.w	r3, [sl]
 801e9cc:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801e9d0:	eba3 0308 	sub.w	r3, r3, r8
 801e9d4:	eba4 0408 	sub.w	r4, r4, r8
 801e9d8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e9dc:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801e9e0:	e78b      	b.n	801e8fa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801e9e2:	4b03      	ldr	r3, [pc, #12]	; (801e9f0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801e9e4:	6818      	ldr	r0, [r3, #0]
 801e9e6:	6803      	ldr	r3, [r0, #0]
 801e9e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e9ea:	4798      	blx	r3
 801e9ec:	e76a      	b.n	801e8c4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801e9ee:	bf00      	nop
 801e9f0:	2002bd34 	.word	0x2002bd34
 801e9f4:	2002bd2e 	.word	0x2002bd2e

0801e9f8 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801e9f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801e9fc:	460c      	mov	r4, r1
 801e9fe:	b085      	sub	sp, #20
 801ea00:	6810      	ldr	r0, [r2, #0]
 801ea02:	6851      	ldr	r1, [r2, #4]
 801ea04:	466d      	mov	r5, sp
 801ea06:	c503      	stmia	r5!, {r0, r1}
 801ea08:	6818      	ldr	r0, [r3, #0]
 801ea0a:	6859      	ldr	r1, [r3, #4]
 801ea0c:	4616      	mov	r6, r2
 801ea0e:	c503      	stmia	r5!, {r0, r1}
 801ea10:	4668      	mov	r0, sp
 801ea12:	f7f8 fce9 	bl	80173e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ea16:	4631      	mov	r1, r6
 801ea18:	a802      	add	r0, sp, #8
 801ea1a:	f7f8 fd0d 	bl	8017438 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ea1e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801ea22:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801ea26:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801ea2a:	4d28      	ldr	r5, [pc, #160]	; (801eacc <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801ea2c:	4e28      	ldr	r6, [pc, #160]	; (801ead0 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801ea2e:	6828      	ldr	r0, [r5, #0]
 801ea30:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801ea34:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801ea38:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ea3c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801ea40:	f8bd 1000 	ldrh.w	r1, [sp]
 801ea44:	440a      	add	r2, r1
 801ea46:	f8ad 2008 	strh.w	r2, [sp, #8]
 801ea4a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801ea4e:	4413      	add	r3, r2
 801ea50:	f8ad 300a 	strh.w	r3, [sp, #10]
 801ea54:	6803      	ldr	r3, [r0, #0]
 801ea56:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ea58:	4798      	blx	r3
 801ea5a:	8833      	ldrh	r3, [r6, #0]
 801ea5c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801ea60:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801ea64:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801ead4 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801ea68:	fb03 1202 	mla	r2, r3, r2, r1
 801ea6c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ea70:	fb08 f303 	mul.w	r3, r8, r3
 801ea74:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ea78:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801ea7c:	4298      	cmp	r0, r3
 801ea7e:	d21d      	bcs.n	801eabc <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801ea80:	eb00 080c 	add.w	r8, r0, ip
 801ea84:	4540      	cmp	r0, r8
 801ea86:	d20f      	bcs.n	801eaa8 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801ea88:	f854 1b04 	ldr.w	r1, [r4], #4
 801ea8c:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801ea90:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801ea94:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ea98:	ea42 0209 	orr.w	r2, r2, r9
 801ea9c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801eaa0:	430a      	orrs	r2, r1
 801eaa2:	f820 2b02 	strh.w	r2, [r0], #2
 801eaa6:	e7ed      	b.n	801ea84 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801eaa8:	8832      	ldrh	r2, [r6, #0]
 801eaaa:	1bd2      	subs	r2, r2, r7
 801eaac:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801eab0:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801eab4:	1bd2      	subs	r2, r2, r7
 801eab6:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801eaba:	e7df      	b.n	801ea7c <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801eabc:	6828      	ldr	r0, [r5, #0]
 801eabe:	6803      	ldr	r3, [r0, #0]
 801eac0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801eac2:	4798      	blx	r3
 801eac4:	b005      	add	sp, #20
 801eac6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801eaca:	bf00      	nop
 801eacc:	2002bd34 	.word	0x2002bd34
 801ead0:	2002bd2e 	.word	0x2002bd2e
 801ead4:	fffff800 	.word	0xfffff800

0801ead8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801ead8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801eadc:	460e      	mov	r6, r1
 801eade:	b08e      	sub	sp, #56	; 0x38
 801eae0:	4604      	mov	r4, r0
 801eae2:	6808      	ldr	r0, [r1, #0]
 801eae4:	6849      	ldr	r1, [r1, #4]
 801eae6:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801ecc0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801eaea:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801ecc4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801eaee:	461d      	mov	r5, r3
 801eaf0:	ab0a      	add	r3, sp, #40	; 0x28
 801eaf2:	c303      	stmia	r3!, {r0, r1}
 801eaf4:	6810      	ldr	r0, [r2, #0]
 801eaf6:	6851      	ldr	r1, [r2, #4]
 801eaf8:	ab0c      	add	r3, sp, #48	; 0x30
 801eafa:	c303      	stmia	r3!, {r0, r1}
 801eafc:	a80a      	add	r0, sp, #40	; 0x28
 801eafe:	f7f8 fc73 	bl	80173e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801eb02:	4631      	mov	r1, r6
 801eb04:	a80c      	add	r0, sp, #48	; 0x30
 801eb06:	f7f8 fc97 	bl	8017438 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801eb0a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801eb0e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801eb12:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801eb16:	f8d8 0000 	ldr.w	r0, [r8]
 801eb1a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801eb1e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801eb22:	fb11 2103 	smlabb	r1, r1, r3, r2
 801eb26:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801eb2a:	440c      	add	r4, r1
 801eb2c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801eb30:	440a      	add	r2, r1
 801eb32:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801eb36:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801eb3a:	4413      	add	r3, r2
 801eb3c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801eb40:	6803      	ldr	r3, [r0, #0]
 801eb42:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801eb44:	4798      	blx	r3
 801eb46:	2dff      	cmp	r5, #255	; 0xff
 801eb48:	d124      	bne.n	801eb94 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801eb4a:	f010 0f01 	tst.w	r0, #1
 801eb4e:	f8d8 0000 	ldr.w	r0, [r8]
 801eb52:	d022      	beq.n	801eb9a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801eb54:	2100      	movs	r1, #0
 801eb56:	f8d0 c000 	ldr.w	ip, [r0]
 801eb5a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801eb5e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801eb62:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801eb66:	f04f 0e01 	mov.w	lr, #1
 801eb6a:	f8cd e018 	str.w	lr, [sp, #24]
 801eb6e:	f8b9 e000 	ldrh.w	lr, [r9]
 801eb72:	9503      	str	r5, [sp, #12]
 801eb74:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801eb78:	b2b6      	uxth	r6, r6
 801eb7a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801eb7e:	9102      	str	r1, [sp, #8]
 801eb80:	b2bf      	uxth	r7, r7
 801eb82:	9601      	str	r6, [sp, #4]
 801eb84:	9700      	str	r7, [sp, #0]
 801eb86:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801eb8a:	4621      	mov	r1, r4
 801eb8c:	47a8      	blx	r5
 801eb8e:	b00e      	add	sp, #56	; 0x38
 801eb90:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801eb94:	f010 0f04 	tst.w	r0, #4
 801eb98:	e7d9      	b.n	801eb4e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801eb9a:	6803      	ldr	r3, [r0, #0]
 801eb9c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801eb9e:	4798      	blx	r3
 801eba0:	f8b9 3000 	ldrh.w	r3, [r9]
 801eba4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801eba8:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801ebac:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801ebb0:	fb03 1202 	mla	r2, r3, r2, r1
 801ebb4:	ebac 0c07 	sub.w	ip, ip, r7
 801ebb8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ebbc:	435e      	muls	r6, r3
 801ebbe:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801ebc2:	2dff      	cmp	r5, #255	; 0xff
 801ebc4:	eba3 0707 	sub.w	r7, r3, r7
 801ebc8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801ebcc:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801ebd0:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801ebd4:	d049      	beq.n	801ec6a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801ebd6:	43eb      	mvns	r3, r5
 801ebd8:	fa1f f985 	uxth.w	r9, r5
 801ebdc:	b2db      	uxtb	r3, r3
 801ebde:	42b0      	cmp	r0, r6
 801ebe0:	d266      	bcs.n	801ecb0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801ebe2:	eb00 0a0e 	add.w	sl, r0, lr
 801ebe6:	4550      	cmp	r0, sl
 801ebe8:	4621      	mov	r1, r4
 801ebea:	f104 0403 	add.w	r4, r4, #3
 801ebee:	d25b      	bcs.n	801eca8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801ebf0:	8802      	ldrh	r2, [r0, #0]
 801ebf2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801ebf6:	ea4f 2822 	mov.w	r8, r2, asr #8
 801ebfa:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801ebfe:	fb11 f109 	smulbb	r1, r1, r9
 801ec02:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801ec06:	10d5      	asrs	r5, r2, #3
 801ec08:	fb08 1803 	mla	r8, r8, r3, r1
 801ec0c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801ec10:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ec14:	fb11 f109 	smulbb	r1, r1, r9
 801ec18:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ec1c:	fb05 1503 	mla	r5, r5, r3, r1
 801ec20:	00d2      	lsls	r2, r2, #3
 801ec22:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801ec26:	b2d2      	uxtb	r2, r2
 801ec28:	fb11 f109 	smulbb	r1, r1, r9
 801ec2c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ec30:	fa1f f888 	uxth.w	r8, r8
 801ec34:	fb02 1203 	mla	r2, r2, r3, r1
 801ec38:	b292      	uxth	r2, r2
 801ec3a:	f108 0101 	add.w	r1, r8, #1
 801ec3e:	b2ad      	uxth	r5, r5
 801ec40:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801ec44:	1c51      	adds	r1, r2, #1
 801ec46:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ec4a:	1c69      	adds	r1, r5, #1
 801ec4c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801ec50:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801ec54:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ec58:	096d      	lsrs	r5, r5, #5
 801ec5a:	ea42 0208 	orr.w	r2, r2, r8
 801ec5e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ec62:	432a      	orrs	r2, r5
 801ec64:	f820 2b02 	strh.w	r2, [r0], #2
 801ec68:	e7bd      	b.n	801ebe6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801ec6a:	4a14      	ldr	r2, [pc, #80]	; (801ecbc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801ec6c:	42b0      	cmp	r0, r6
 801ec6e:	d21f      	bcs.n	801ecb0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801ec70:	eb00 050e 	add.w	r5, r0, lr
 801ec74:	42a8      	cmp	r0, r5
 801ec76:	4621      	mov	r1, r4
 801ec78:	f104 0403 	add.w	r4, r4, #3
 801ec7c:	d210      	bcs.n	801eca0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801ec7e:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801ec82:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801ec86:	00db      	lsls	r3, r3, #3
 801ec88:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801ec8c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ec90:	430b      	orrs	r3, r1
 801ec92:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801ec96:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801ec9a:	f820 3b02 	strh.w	r3, [r0], #2
 801ec9e:	e7e9      	b.n	801ec74 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801eca0:	4438      	add	r0, r7
 801eca2:	eb01 040c 	add.w	r4, r1, ip
 801eca6:	e7e1      	b.n	801ec6c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801eca8:	4438      	add	r0, r7
 801ecaa:	eb01 040c 	add.w	r4, r1, ip
 801ecae:	e796      	b.n	801ebde <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801ecb0:	4b03      	ldr	r3, [pc, #12]	; (801ecc0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801ecb2:	6818      	ldr	r0, [r3, #0]
 801ecb4:	6803      	ldr	r3, [r0, #0]
 801ecb6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ecb8:	4798      	blx	r3
 801ecba:	e768      	b.n	801eb8e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801ecbc:	fffff800 	.word	0xfffff800
 801ecc0:	2002bd34 	.word	0x2002bd34
 801ecc4:	2002bd2e 	.word	0x2002bd2e

0801ecc8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801ecc8:	b570      	push	{r4, r5, r6, lr}
 801ecca:	9c04      	ldr	r4, [sp, #16]
 801eccc:	f89d 6018 	ldrb.w	r6, [sp, #24]
 801ecd0:	4605      	mov	r5, r0
 801ecd2:	4608      	mov	r0, r1
 801ecd4:	4619      	mov	r1, r3
 801ecd6:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801ecda:	2a0d      	cmp	r2, #13
 801ecdc:	d825      	bhi.n	801ed2a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x62>
 801ecde:	e8df f002 	tbb	[pc, r2]
 801ece2:	1807      	.short	0x1807
 801ece4:	1d1d1d13 	.word	0x1d1d1d13
 801ece8:	1d1d1d1d 	.word	0x1d1d1d1d
 801ecec:	1d1d1d1d 	.word	0x1d1d1d1d
 801ecf0:	e9cd 3604 	strd	r3, r6, [sp, #16]
 801ecf4:	682a      	ldr	r2, [r5, #0]
 801ecf6:	68d6      	ldr	r6, [r2, #12]
 801ecf8:	4623      	mov	r3, r4
 801ecfa:	460a      	mov	r2, r1
 801ecfc:	46b4      	mov	ip, r6
 801ecfe:	4601      	mov	r1, r0
 801ed00:	4628      	mov	r0, r5
 801ed02:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801ed06:	4760      	bx	ip
 801ed08:	4622      	mov	r2, r4
 801ed0a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801ed0e:	f7ff bd8d 	b.w	801e82c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ed12:	4622      	mov	r2, r4
 801ed14:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801ed18:	f7ff bede 	b.w	801ead8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801ed1c:	4b03      	ldr	r3, [pc, #12]	; (801ed2c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x64>)
 801ed1e:	4a04      	ldr	r2, [pc, #16]	; (801ed30 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x68>)
 801ed20:	4804      	ldr	r0, [pc, #16]	; (801ed34 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x6c>)
 801ed22:	f240 315d 	movw	r1, #861	; 0x35d
 801ed26:	f008 fd2b 	bl	8027780 <__assert_func>
 801ed2a:	bd70      	pop	{r4, r5, r6, pc}
 801ed2c:	0802d4c7 	.word	0x0802d4c7
 801ed30:	0802dc2a 	.word	0x0802dc2a
 801ed34:	0802d3a2 	.word	0x0802d3a2

0801ed38 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801ed38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ed3c:	b093      	sub	sp, #76	; 0x4c
 801ed3e:	880e      	ldrh	r6, [r1, #0]
 801ed40:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801ed44:	4681      	mov	r9, r0
 801ed46:	4688      	mov	r8, r1
 801ed48:	4615      	mov	r5, r2
 801ed4a:	b136      	cbz	r6, 801ed5a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x22>
 801ed4c:	4b70      	ldr	r3, [pc, #448]	; (801ef10 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 801ed4e:	4a71      	ldr	r2, [pc, #452]	; (801ef14 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 801ed50:	4871      	ldr	r0, [pc, #452]	; (801ef18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 801ed52:	f44f 71c5 	mov.w	r1, #394	; 0x18a
 801ed56:	f008 fd13 	bl	8027780 <__assert_func>
 801ed5a:	6810      	ldr	r0, [r2, #0]
 801ed5c:	6851      	ldr	r1, [r2, #4]
 801ed5e:	4f6f      	ldr	r7, [pc, #444]	; (801ef1c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 801ed60:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 801ef20 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>
 801ed64:	ac0e      	add	r4, sp, #56	; 0x38
 801ed66:	c403      	stmia	r4!, {r0, r1}
 801ed68:	6818      	ldr	r0, [r3, #0]
 801ed6a:	6859      	ldr	r1, [r3, #4]
 801ed6c:	ac10      	add	r4, sp, #64	; 0x40
 801ed6e:	c403      	stmia	r4!, {r0, r1}
 801ed70:	a80e      	add	r0, sp, #56	; 0x38
 801ed72:	f7f8 fb39 	bl	80173e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ed76:	4629      	mov	r1, r5
 801ed78:	a810      	add	r0, sp, #64	; 0x40
 801ed7a:	f7f8 fb5d 	bl	8017438 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ed7e:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801ed82:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801ed86:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801ed8a:	6838      	ldr	r0, [r7, #0]
 801ed8c:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801ed90:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801ed94:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ed98:	4489      	add	r9, r1
 801ed9a:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801ed9e:	440a      	add	r2, r1
 801eda0:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801eda4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801eda8:	4413      	add	r3, r2
 801edaa:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801edae:	6803      	ldr	r3, [r0, #0]
 801edb0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801edb2:	4798      	blx	r3
 801edb4:	f010 0f80 	tst.w	r0, #128	; 0x80
 801edb8:	6838      	ldr	r0, [r7, #0]
 801edba:	d01d      	beq.n	801edf8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xc0>
 801edbc:	6802      	ldr	r2, [r0, #0]
 801edbe:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801edc2:	e9cd 6608 	strd	r6, r6, [sp, #32]
 801edc6:	210b      	movs	r1, #11
 801edc8:	9107      	str	r1, [sp, #28]
 801edca:	f8bb 1000 	ldrh.w	r1, [fp]
 801edce:	9106      	str	r1, [sp, #24]
 801edd0:	2101      	movs	r1, #1
 801edd2:	e9cd a104 	strd	sl, r1, [sp, #16]
 801edd6:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801edda:	9103      	str	r1, [sp, #12]
 801eddc:	b2a4      	uxth	r4, r4
 801edde:	f8bd 1042 	ldrh.w	r1, [sp, #66]	; 0x42
 801ede2:	9100      	str	r1, [sp, #0]
 801ede4:	b2ad      	uxth	r5, r5
 801ede6:	9502      	str	r5, [sp, #8]
 801ede8:	9401      	str	r4, [sp, #4]
 801edea:	6bd4      	ldr	r4, [r2, #60]	; 0x3c
 801edec:	4649      	mov	r1, r9
 801edee:	4642      	mov	r2, r8
 801edf0:	47a0      	blx	r4
 801edf2:	b013      	add	sp, #76	; 0x4c
 801edf4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801edf8:	6803      	ldr	r3, [r0, #0]
 801edfa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801edfc:	4798      	blx	r3
 801edfe:	f8bb 3000 	ldrh.w	r3, [fp]
 801ee02:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801ee06:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801ee0a:	fb03 1202 	mla	r2, r3, r2, r1
 801ee0e:	435d      	muls	r5, r3
 801ee10:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ee14:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801ee18:	920c      	str	r2, [sp, #48]	; 0x30
 801ee1a:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801ee1e:	1b12      	subs	r2, r2, r4
 801ee20:	920d      	str	r2, [sp, #52]	; 0x34
 801ee22:	0062      	lsls	r2, r4, #1
 801ee24:	1b1c      	subs	r4, r3, r4
 801ee26:	0063      	lsls	r3, r4, #1
 801ee28:	920a      	str	r2, [sp, #40]	; 0x28
 801ee2a:	930b      	str	r3, [sp, #44]	; 0x2c
 801ee2c:	f04f 0e04 	mov.w	lr, #4
 801ee30:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ee32:	4298      	cmp	r0, r3
 801ee34:	d266      	bcs.n	801ef04 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1cc>
 801ee36:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ee38:	eb00 0b03 	add.w	fp, r0, r3
 801ee3c:	4558      	cmp	r0, fp
 801ee3e:	d25c      	bcs.n	801eefa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c2>
 801ee40:	f819 3b01 	ldrb.w	r3, [r9], #1
 801ee44:	fb1e e303 	smlabb	r3, lr, r3, lr
 801ee48:	f858 2003 	ldr.w	r2, [r8, r3]
 801ee4c:	0e11      	lsrs	r1, r2, #24
 801ee4e:	d012      	beq.n	801ee76 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 801ee50:	29ff      	cmp	r1, #255	; 0xff
 801ee52:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801ee56:	d110      	bne.n	801ee7a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 801ee58:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801ee5c:	d10d      	bne.n	801ee7a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 801ee5e:	0953      	lsrs	r3, r2, #5
 801ee60:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801ee64:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ee68:	f027 0707 	bic.w	r7, r7, #7
 801ee6c:	431f      	orrs	r7, r3
 801ee6e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ee72:	433a      	orrs	r2, r7
 801ee74:	8002      	strh	r2, [r0, #0]
 801ee76:	3002      	adds	r0, #2
 801ee78:	e7e0      	b.n	801ee3c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x104>
 801ee7a:	fb0a f101 	mul.w	r1, sl, r1
 801ee7e:	8806      	ldrh	r6, [r0, #0]
 801ee80:	1c4b      	adds	r3, r1, #1
 801ee82:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801ee86:	1235      	asrs	r5, r6, #8
 801ee88:	10f4      	asrs	r4, r6, #3
 801ee8a:	121b      	asrs	r3, r3, #8
 801ee8c:	00f6      	lsls	r6, r6, #3
 801ee8e:	b299      	uxth	r1, r3
 801ee90:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801ee94:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ee98:	b2f6      	uxtb	r6, r6
 801ee9a:	43db      	mvns	r3, r3
 801ee9c:	b2d2      	uxtb	r2, r2
 801ee9e:	b2db      	uxtb	r3, r3
 801eea0:	fb1c fc01 	smulbb	ip, ip, r1
 801eea4:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801eea8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801eeac:	fb12 f201 	smulbb	r2, r2, r1
 801eeb0:	fb05 c503 	mla	r5, r5, r3, ip
 801eeb4:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801eeb8:	b2ff      	uxtb	r7, r7
 801eeba:	fb06 2203 	mla	r2, r6, r3, r2
 801eebe:	b2ad      	uxth	r5, r5
 801eec0:	fb17 f701 	smulbb	r7, r7, r1
 801eec4:	b292      	uxth	r2, r2
 801eec6:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801eeca:	fb04 7403 	mla	r4, r4, r3, r7
 801eece:	f105 0c01 	add.w	ip, r5, #1
 801eed2:	1c57      	adds	r7, r2, #1
 801eed4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801eed8:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801eedc:	b2a4      	uxth	r4, r4
 801eede:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801eee2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801eee6:	433d      	orrs	r5, r7
 801eee8:	1c67      	adds	r7, r4, #1
 801eeea:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801eeee:	0964      	lsrs	r4, r4, #5
 801eef0:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801eef4:	4325      	orrs	r5, r4
 801eef6:	8005      	strh	r5, [r0, #0]
 801eef8:	e7bd      	b.n	801ee76 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 801eefa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801eefc:	4418      	add	r0, r3
 801eefe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ef00:	4499      	add	r9, r3
 801ef02:	e795      	b.n	801ee30 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xf8>
 801ef04:	4b05      	ldr	r3, [pc, #20]	; (801ef1c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 801ef06:	6818      	ldr	r0, [r3, #0]
 801ef08:	6803      	ldr	r3, [r0, #0]
 801ef0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ef0c:	4798      	blx	r3
 801ef0e:	e770      	b.n	801edf2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xba>
 801ef10:	0802d2a0 	.word	0x0802d2a0
 801ef14:	0802d9fb 	.word	0x0802d9fb
 801ef18:	0802d3a2 	.word	0x0802d3a2
 801ef1c:	2002bd34 	.word	0x2002bd34
 801ef20:	2002bd2e 	.word	0x2002bd2e

0801ef24 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801ef24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ef28:	4614      	mov	r4, r2
 801ef2a:	880a      	ldrh	r2, [r1, #0]
 801ef2c:	b087      	sub	sp, #28
 801ef2e:	2a02      	cmp	r2, #2
 801ef30:	4680      	mov	r8, r0
 801ef32:	460d      	mov	r5, r1
 801ef34:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801ef38:	d006      	beq.n	801ef48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 801ef3a:	4b63      	ldr	r3, [pc, #396]	; (801f0c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a4>)
 801ef3c:	4a63      	ldr	r2, [pc, #396]	; (801f0cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a8>)
 801ef3e:	4864      	ldr	r0, [pc, #400]	; (801f0d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ac>)
 801ef40:	f240 11e1 	movw	r1, #481	; 0x1e1
 801ef44:	f008 fc1c 	bl	8027780 <__assert_func>
 801ef48:	2e00      	cmp	r6, #0
 801ef4a:	f000 80b9 	beq.w	801f0c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19c>
 801ef4e:	6820      	ldr	r0, [r4, #0]
 801ef50:	6861      	ldr	r1, [r4, #4]
 801ef52:	af02      	add	r7, sp, #8
 801ef54:	c703      	stmia	r7!, {r0, r1}
 801ef56:	6818      	ldr	r0, [r3, #0]
 801ef58:	6859      	ldr	r1, [r3, #4]
 801ef5a:	af04      	add	r7, sp, #16
 801ef5c:	c703      	stmia	r7!, {r0, r1}
 801ef5e:	a802      	add	r0, sp, #8
 801ef60:	f7f8 fa42 	bl	80173e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ef64:	4621      	mov	r1, r4
 801ef66:	a804      	add	r0, sp, #16
 801ef68:	f7f8 fa66 	bl	8017438 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ef6c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801ef70:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801ef74:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801ef78:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801ef7c:	fb14 2103 	smlabb	r1, r4, r3, r2
 801ef80:	eb08 0401 	add.w	r4, r8, r1
 801ef84:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801ef88:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801ef8c:	440a      	add	r2, r1
 801ef8e:	f8ad 2010 	strh.w	r2, [sp, #16]
 801ef92:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801ef96:	4413      	add	r3, r2
 801ef98:	f8ad 3012 	strh.w	r3, [sp, #18]
 801ef9c:	4b4d      	ldr	r3, [pc, #308]	; (801f0d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 801ef9e:	6818      	ldr	r0, [r3, #0]
 801efa0:	6803      	ldr	r3, [r0, #0]
 801efa2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801efa4:	4798      	blx	r3
 801efa6:	4b4c      	ldr	r3, [pc, #304]	; (801f0d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b4>)
 801efa8:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801efac:	881a      	ldrh	r2, [r3, #0]
 801efae:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801efb2:	2eff      	cmp	r6, #255	; 0xff
 801efb4:	fb02 c101 	mla	r1, r2, r1, ip
 801efb8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801efbc:	fb02 f207 	mul.w	r2, r2, r7
 801efc0:	f105 0104 	add.w	r1, r5, #4
 801efc4:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801efc8:	461d      	mov	r5, r3
 801efca:	d05a      	beq.n	801f082 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x15e>
 801efcc:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801efd0:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801efd4:	b2b6      	uxth	r6, r6
 801efd6:	fa1f fe8e 	uxth.w	lr, lr
 801efda:	9301      	str	r3, [sp, #4]
 801efdc:	4282      	cmp	r2, r0
 801efde:	d96a      	bls.n	801f0b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 801efe0:	eb00 0b0a 	add.w	fp, r0, sl
 801efe4:	4583      	cmp	fp, r0
 801efe6:	d940      	bls.n	801f06a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x146>
 801efe8:	f814 3b01 	ldrb.w	r3, [r4], #1
 801efec:	8805      	ldrh	r5, [r0, #0]
 801efee:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801eff2:	122f      	asrs	r7, r5, #8
 801eff4:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801eff8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801effc:	fb17 f70e 	smulbb	r7, r7, lr
 801f000:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801f004:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f008:	00ed      	lsls	r5, r5, #3
 801f00a:	fb0c 7c06 	mla	ip, ip, r6, r7
 801f00e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801f012:	10df      	asrs	r7, r3, #3
 801f014:	b2ed      	uxtb	r5, r5
 801f016:	00db      	lsls	r3, r3, #3
 801f018:	fa1f fc8c 	uxth.w	ip, ip
 801f01c:	fb19 f90e 	smulbb	r9, r9, lr
 801f020:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f024:	b2db      	uxtb	r3, r3
 801f026:	fb15 f50e 	smulbb	r5, r5, lr
 801f02a:	fb07 9706 	mla	r7, r7, r6, r9
 801f02e:	fb03 5306 	mla	r3, r3, r6, r5
 801f032:	f10c 0901 	add.w	r9, ip, #1
 801f036:	b29b      	uxth	r3, r3
 801f038:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801f03c:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801f040:	f103 0c01 	add.w	ip, r3, #1
 801f044:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f048:	b2bf      	uxth	r7, r7
 801f04a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f04e:	ea4c 0c09 	orr.w	ip, ip, r9
 801f052:	f107 0901 	add.w	r9, r7, #1
 801f056:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801f05a:	097f      	lsrs	r7, r7, #5
 801f05c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801f060:	ea4c 0c07 	orr.w	ip, ip, r7
 801f064:	f820 cb02 	strh.w	ip, [r0], #2
 801f068:	e7bc      	b.n	801efe4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 801f06a:	9b01      	ldr	r3, [sp, #4]
 801f06c:	881b      	ldrh	r3, [r3, #0]
 801f06e:	eba3 0308 	sub.w	r3, r3, r8
 801f072:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f076:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801f07a:	eba3 0308 	sub.w	r3, r3, r8
 801f07e:	441c      	add	r4, r3
 801f080:	e7ac      	b.n	801efdc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xb8>
 801f082:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801f086:	4282      	cmp	r2, r0
 801f088:	d915      	bls.n	801f0b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 801f08a:	eb00 060a 	add.w	r6, r0, sl
 801f08e:	4286      	cmp	r6, r0
 801f090:	d906      	bls.n	801f0a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17c>
 801f092:	f814 3b01 	ldrb.w	r3, [r4], #1
 801f096:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801f09a:	f820 3b02 	strh.w	r3, [r0], #2
 801f09e:	e7f6      	b.n	801f08e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x16a>
 801f0a0:	882b      	ldrh	r3, [r5, #0]
 801f0a2:	eba3 0308 	sub.w	r3, r3, r8
 801f0a6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f0aa:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801f0ae:	eba3 0308 	sub.w	r3, r3, r8
 801f0b2:	441c      	add	r4, r3
 801f0b4:	e7e7      	b.n	801f086 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x162>
 801f0b6:	4b07      	ldr	r3, [pc, #28]	; (801f0d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 801f0b8:	6818      	ldr	r0, [r3, #0]
 801f0ba:	6803      	ldr	r3, [r0, #0]
 801f0bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f0be:	4798      	blx	r3
 801f0c0:	b007      	add	sp, #28
 801f0c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f0c6:	bf00      	nop
 801f0c8:	0802d1d0 	.word	0x0802d1d0
 801f0cc:	0802d865 	.word	0x0802d865
 801f0d0:	0802d3a2 	.word	0x0802d3a2
 801f0d4:	2002bd34 	.word	0x2002bd34
 801f0d8:	2002bd2e 	.word	0x2002bd2e

0801f0dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801f0dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f0e0:	f8b1 9000 	ldrh.w	r9, [r1]
 801f0e4:	b091      	sub	sp, #68	; 0x44
 801f0e6:	f1b9 0f01 	cmp.w	r9, #1
 801f0ea:	4604      	mov	r4, r0
 801f0ec:	460f      	mov	r7, r1
 801f0ee:	4690      	mov	r8, r2
 801f0f0:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801f0f4:	d006      	beq.n	801f104 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x28>
 801f0f6:	4b84      	ldr	r3, [pc, #528]	; (801f308 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x22c>)
 801f0f8:	4a84      	ldr	r2, [pc, #528]	; (801f30c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x230>)
 801f0fa:	4885      	ldr	r0, [pc, #532]	; (801f310 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x234>)
 801f0fc:	f240 212f 	movw	r1, #559	; 0x22f
 801f100:	f008 fb3e 	bl	8027780 <__assert_func>
 801f104:	2d00      	cmp	r5, #0
 801f106:	d04f      	beq.n	801f1a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 801f108:	6810      	ldr	r0, [r2, #0]
 801f10a:	6851      	ldr	r1, [r2, #4]
 801f10c:	f8df b208 	ldr.w	fp, [pc, #520]	; 801f318 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>
 801f110:	ae0c      	add	r6, sp, #48	; 0x30
 801f112:	c603      	stmia	r6!, {r0, r1}
 801f114:	6818      	ldr	r0, [r3, #0]
 801f116:	6859      	ldr	r1, [r3, #4]
 801f118:	ae0e      	add	r6, sp, #56	; 0x38
 801f11a:	c603      	stmia	r6!, {r0, r1}
 801f11c:	a80c      	add	r0, sp, #48	; 0x30
 801f11e:	f7f8 f963 	bl	80173e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f122:	4641      	mov	r1, r8
 801f124:	a80e      	add	r0, sp, #56	; 0x38
 801f126:	f7f8 f987 	bl	8017438 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f12a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801f12e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801f132:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801f136:	f8db 0000 	ldr.w	r0, [fp]
 801f13a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801f13e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801f142:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801f31c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x240>
 801f146:	fb11 2103 	smlabb	r1, r1, r3, r2
 801f14a:	440c      	add	r4, r1
 801f14c:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801f150:	440a      	add	r2, r1
 801f152:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801f156:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801f15a:	4413      	add	r3, r2
 801f15c:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801f160:	6803      	ldr	r3, [r0, #0]
 801f162:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f164:	4798      	blx	r3
 801f166:	f010 0f80 	tst.w	r0, #128	; 0x80
 801f16a:	f8db 0000 	ldr.w	r0, [fp]
 801f16e:	d01e      	beq.n	801f1ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xd2>
 801f170:	2200      	movs	r2, #0
 801f172:	6801      	ldr	r1, [r0, #0]
 801f174:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801f178:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801f17c:	220b      	movs	r2, #11
 801f17e:	9207      	str	r2, [sp, #28]
 801f180:	f8b8 2000 	ldrh.w	r2, [r8]
 801f184:	9504      	str	r5, [sp, #16]
 801f186:	e9cd 9205 	strd	r9, r2, [sp, #20]
 801f18a:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801f18e:	9203      	str	r2, [sp, #12]
 801f190:	fa1f f28a 	uxth.w	r2, sl
 801f194:	9202      	str	r2, [sp, #8]
 801f196:	b2b6      	uxth	r6, r6
 801f198:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801f19c:	9200      	str	r2, [sp, #0]
 801f19e:	9601      	str	r6, [sp, #4]
 801f1a0:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801f1a2:	463a      	mov	r2, r7
 801f1a4:	4621      	mov	r1, r4
 801f1a6:	47a8      	blx	r5
 801f1a8:	b011      	add	sp, #68	; 0x44
 801f1aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f1ae:	6803      	ldr	r3, [r0, #0]
 801f1b0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f1b2:	4798      	blx	r3
 801f1b4:	f8b8 2000 	ldrh.w	r2, [r8]
 801f1b8:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801f1bc:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801f1c0:	2dff      	cmp	r5, #255	; 0xff
 801f1c2:	fb02 1303 	mla	r3, r2, r3, r1
 801f1c6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f1ca:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801f1ce:	fb0a fa02 	mul.w	sl, sl, r2
 801f1d2:	d062      	beq.n	801f29a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1be>
 801f1d4:	ea6f 0c05 	mvn.w	ip, r5
 801f1d8:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801f1dc:	930a      	str	r3, [sp, #40]	; 0x28
 801f1de:	b2ad      	uxth	r5, r5
 801f1e0:	fa5f fc8c 	uxtb.w	ip, ip
 801f1e4:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801f1e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f1ea:	4298      	cmp	r0, r3
 801f1ec:	f080 8085 	bcs.w	801f2fa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 801f1f0:	eb00 0b09 	add.w	fp, r0, r9
 801f1f4:	4558      	cmp	r0, fp
 801f1f6:	d246      	bcs.n	801f286 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801f1f8:	f814 eb01 	ldrb.w	lr, [r4], #1
 801f1fc:	2303      	movs	r3, #3
 801f1fe:	2204      	movs	r2, #4
 801f200:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801f204:	eb07 0a0e 	add.w	sl, r7, lr
 801f208:	8803      	ldrh	r3, [r0, #0]
 801f20a:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801f20e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f212:	1219      	asrs	r1, r3, #8
 801f214:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f218:	fb18 f805 	smulbb	r8, r8, r5
 801f21c:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801f220:	10da      	asrs	r2, r3, #3
 801f222:	fb01 810c 	mla	r1, r1, ip, r8
 801f226:	00db      	lsls	r3, r3, #3
 801f228:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801f22c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f230:	b2db      	uxtb	r3, r3
 801f232:	fb18 f805 	smulbb	r8, r8, r5
 801f236:	fb1e fe05 	smulbb	lr, lr, r5
 801f23a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801f23e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801f242:	b289      	uxth	r1, r1
 801f244:	fb02 820c 	mla	r2, r2, ip, r8
 801f248:	fb03 e30c 	mla	r3, r3, ip, lr
 801f24c:	b292      	uxth	r2, r2
 801f24e:	b29b      	uxth	r3, r3
 801f250:	f101 0801 	add.w	r8, r1, #1
 801f254:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801f258:	f103 0e01 	add.w	lr, r3, #1
 801f25c:	f102 0801 	add.w	r8, r2, #1
 801f260:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801f264:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801f268:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801f26c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801f270:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801f274:	ea4e 0101 	orr.w	r1, lr, r1
 801f278:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801f27c:	ea41 0108 	orr.w	r1, r1, r8
 801f280:	f820 1b02 	strh.w	r1, [r0], #2
 801f284:	e7b6      	b.n	801f1f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x118>
 801f286:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f288:	881b      	ldrh	r3, [r3, #0]
 801f28a:	1b9b      	subs	r3, r3, r6
 801f28c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f290:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801f294:	1b9b      	subs	r3, r3, r6
 801f296:	441c      	add	r4, r3
 801f298:	e7a6      	b.n	801f1e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x10c>
 801f29a:	491e      	ldr	r1, [pc, #120]	; (801f314 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x238>)
 801f29c:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801f2a0:	2203      	movs	r2, #3
 801f2a2:	2504      	movs	r5, #4
 801f2a4:	4550      	cmp	r0, sl
 801f2a6:	d228      	bcs.n	801f2fa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 801f2a8:	eb00 0c09 	add.w	ip, r0, r9
 801f2ac:	4560      	cmp	r0, ip
 801f2ae:	4623      	mov	r3, r4
 801f2b0:	d219      	bcs.n	801f2e6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801f2b2:	f893 e000 	ldrb.w	lr, [r3]
 801f2b6:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801f2ba:	eb07 0b0e 	add.w	fp, r7, lr
 801f2be:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f2c2:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801f2c6:	f89b b001 	ldrb.w	fp, [fp, #1]
 801f2ca:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801f2ce:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801f2d2:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801f2d6:	ea43 030b 	orr.w	r3, r3, fp
 801f2da:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801f2de:	3401      	adds	r4, #1
 801f2e0:	f820 3b02 	strh.w	r3, [r0], #2
 801f2e4:	e7e2      	b.n	801f2ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>
 801f2e6:	f8b8 3000 	ldrh.w	r3, [r8]
 801f2ea:	1b9b      	subs	r3, r3, r6
 801f2ec:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f2f0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801f2f4:	1b9b      	subs	r3, r3, r6
 801f2f6:	441c      	add	r4, r3
 801f2f8:	e7d4      	b.n	801f2a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>
 801f2fa:	4b07      	ldr	r3, [pc, #28]	; (801f318 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>)
 801f2fc:	6818      	ldr	r0, [r3, #0]
 801f2fe:	6803      	ldr	r3, [r0, #0]
 801f300:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f302:	4798      	blx	r3
 801f304:	e750      	b.n	801f1a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 801f306:	bf00      	nop
 801f308:	0802d21e 	.word	0x0802d21e
 801f30c:	0802d8ee 	.word	0x0802d8ee
 801f310:	0802d3a2 	.word	0x0802d3a2
 801f314:	fffff800 	.word	0xfffff800
 801f318:	2002bd34 	.word	0x2002bd34
 801f31c:	2002bd2e 	.word	0x2002bd2e

0801f320 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801f320:	b430      	push	{r4, r5}
 801f322:	780d      	ldrb	r5, [r1, #0]
 801f324:	f89d 4008 	ldrb.w	r4, [sp, #8]
 801f328:	2d01      	cmp	r5, #1
 801f32a:	d00a      	beq.n	801f342 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 801f32c:	d305      	bcc.n	801f33a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 801f32e:	2d02      	cmp	r5, #2
 801f330:	d10b      	bne.n	801f34a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 801f332:	9402      	str	r4, [sp, #8]
 801f334:	bc30      	pop	{r4, r5}
 801f336:	f7ff bdf5 	b.w	801ef24 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801f33a:	9402      	str	r4, [sp, #8]
 801f33c:	bc30      	pop	{r4, r5}
 801f33e:	f7ff bcfb 	b.w	801ed38 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801f342:	9402      	str	r4, [sp, #8]
 801f344:	bc30      	pop	{r4, r5}
 801f346:	f7ff bec9 	b.w	801f0dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801f34a:	bc30      	pop	{r4, r5}
 801f34c:	4770      	bx	lr
	...

0801f350 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801f350:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f354:	4604      	mov	r4, r0
 801f356:	b087      	sub	sp, #28
 801f358:	6810      	ldr	r0, [r2, #0]
 801f35a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801f35e:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801f598 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801f362:	460e      	mov	r6, r1
 801f364:	6851      	ldr	r1, [r2, #4]
 801f366:	ad02      	add	r5, sp, #8
 801f368:	c503      	stmia	r5!, {r0, r1}
 801f36a:	6818      	ldr	r0, [r3, #0]
 801f36c:	6859      	ldr	r1, [r3, #4]
 801f36e:	ad04      	add	r5, sp, #16
 801f370:	4617      	mov	r7, r2
 801f372:	c503      	stmia	r5!, {r0, r1}
 801f374:	a802      	add	r0, sp, #8
 801f376:	f7f8 f837 	bl	80173e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f37a:	4639      	mov	r1, r7
 801f37c:	a804      	add	r0, sp, #16
 801f37e:	f7f8 f85b 	bl	8017438 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f382:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f386:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f38a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801f38e:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801f392:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801f396:	fb11 2103 	smlabb	r1, r1, r3, r2
 801f39a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801f39e:	440e      	add	r6, r1
 801f3a0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801f3a4:	440a      	add	r2, r1
 801f3a6:	f8ad 2010 	strh.w	r2, [sp, #16]
 801f3aa:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801f3ae:	4413      	add	r3, r2
 801f3b0:	f8ad 3012 	strh.w	r3, [sp, #18]
 801f3b4:	4b77      	ldr	r3, [pc, #476]	; (801f594 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801f3b6:	6818      	ldr	r0, [r3, #0]
 801f3b8:	6803      	ldr	r3, [r0, #0]
 801f3ba:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f3bc:	4798      	blx	r3
 801f3be:	f8b9 b000 	ldrh.w	fp, [r9]
 801f3c2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f3c6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f3ca:	fb0b 2303 	mla	r3, fp, r3, r2
 801f3ce:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f3d2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801f3d6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801f3da:	fb05 f50b 	mul.w	r5, r5, fp
 801f3de:	9300      	str	r3, [sp, #0]
 801f3e0:	d069      	beq.n	801f4b6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801f3e2:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801f3e6:	4558      	cmp	r0, fp
 801f3e8:	f080 80cc 	bcs.w	801f584 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801f3ec:	9b00      	ldr	r3, [sp, #0]
 801f3ee:	18c3      	adds	r3, r0, r3
 801f3f0:	9301      	str	r3, [sp, #4]
 801f3f2:	4631      	mov	r1, r6
 801f3f4:	9b01      	ldr	r3, [sp, #4]
 801f3f6:	4298      	cmp	r0, r3
 801f3f8:	d24f      	bcs.n	801f49a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801f3fa:	f811 2b01 	ldrb.w	r2, [r1], #1
 801f3fe:	2a00      	cmp	r2, #0
 801f400:	d048      	beq.n	801f494 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801f402:	fb0a f202 	mul.w	r2, sl, r2
 801f406:	1c53      	adds	r3, r2, #1
 801f408:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f40c:	121b      	asrs	r3, r3, #8
 801f40e:	d041      	beq.n	801f494 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801f410:	8802      	ldrh	r2, [r0, #0]
 801f412:	f8b4 c000 	ldrh.w	ip, [r4]
 801f416:	b29e      	uxth	r6, r3
 801f418:	1215      	asrs	r5, r2, #8
 801f41a:	43db      	mvns	r3, r3
 801f41c:	b2db      	uxtb	r3, r3
 801f41e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801f422:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f426:	fb15 f503 	smulbb	r5, r5, r3
 801f42a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801f42e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801f432:	00d2      	lsls	r2, r2, #3
 801f434:	fb07 5706 	mla	r7, r7, r6, r5
 801f438:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801f43c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801f440:	b2d2      	uxtb	r2, r2
 801f442:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f446:	b2bf      	uxth	r7, r7
 801f448:	fb1e fe03 	smulbb	lr, lr, r3
 801f44c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f450:	fa5f fc8c 	uxtb.w	ip, ip
 801f454:	fb12 f203 	smulbb	r2, r2, r3
 801f458:	fb05 e506 	mla	r5, r5, r6, lr
 801f45c:	fb0c 2c06 	mla	ip, ip, r6, r2
 801f460:	f107 0e01 	add.w	lr, r7, #1
 801f464:	fa1f fc8c 	uxth.w	ip, ip
 801f468:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801f46c:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801f470:	f10c 0701 	add.w	r7, ip, #1
 801f474:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f478:	b2ad      	uxth	r5, r5
 801f47a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f47e:	ea47 070e 	orr.w	r7, r7, lr
 801f482:	f105 0e01 	add.w	lr, r5, #1
 801f486:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801f48a:	096d      	lsrs	r5, r5, #5
 801f48c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f490:	432f      	orrs	r7, r5
 801f492:	8007      	strh	r7, [r0, #0]
 801f494:	3002      	adds	r0, #2
 801f496:	3402      	adds	r4, #2
 801f498:	e7ac      	b.n	801f3f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801f49a:	f8b9 3000 	ldrh.w	r3, [r9]
 801f49e:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801f4a2:	eba3 0308 	sub.w	r3, r3, r8
 801f4a6:	eba6 0608 	sub.w	r6, r6, r8
 801f4aa:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801f4ae:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f4b2:	440e      	add	r6, r1
 801f4b4:	e797      	b.n	801f3e6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801f4b6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801f4ba:	42a8      	cmp	r0, r5
 801f4bc:	d262      	bcs.n	801f584 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801f4be:	9b00      	ldr	r3, [sp, #0]
 801f4c0:	4631      	mov	r1, r6
 801f4c2:	eb00 0b03 	add.w	fp, r0, r3
 801f4c6:	4558      	cmp	r0, fp
 801f4c8:	d24e      	bcs.n	801f568 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801f4ca:	f811 3b01 	ldrb.w	r3, [r1], #1
 801f4ce:	b12b      	cbz	r3, 801f4dc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801f4d0:	2bff      	cmp	r3, #255	; 0xff
 801f4d2:	f8b4 e000 	ldrh.w	lr, [r4]
 801f4d6:	d104      	bne.n	801f4e2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801f4d8:	f8a0 e000 	strh.w	lr, [r0]
 801f4dc:	3002      	adds	r0, #2
 801f4de:	3402      	adds	r4, #2
 801f4e0:	e7f1      	b.n	801f4c6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801f4e2:	8802      	ldrh	r2, [r0, #0]
 801f4e4:	b29f      	uxth	r7, r3
 801f4e6:	1216      	asrs	r6, r2, #8
 801f4e8:	43db      	mvns	r3, r3
 801f4ea:	b2db      	uxtb	r3, r3
 801f4ec:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801f4f0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f4f4:	fb16 f603 	smulbb	r6, r6, r3
 801f4f8:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801f4fc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f500:	00d2      	lsls	r2, r2, #3
 801f502:	fb0c 6c07 	mla	ip, ip, r7, r6
 801f506:	b2d2      	uxtb	r2, r2
 801f508:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801f50c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801f510:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f514:	fb1a fa03 	smulbb	sl, sl, r3
 801f518:	fa1f fc8c 	uxth.w	ip, ip
 801f51c:	fb12 f303 	smulbb	r3, r2, r3
 801f520:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801f524:	fa5f fe8e 	uxtb.w	lr, lr
 801f528:	fb06 a607 	mla	r6, r6, r7, sl
 801f52c:	f10c 0201 	add.w	r2, ip, #1
 801f530:	fb0e 3307 	mla	r3, lr, r7, r3
 801f534:	b2b6      	uxth	r6, r6
 801f536:	b29b      	uxth	r3, r3
 801f538:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801f53c:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801f540:	f106 0a01 	add.w	sl, r6, #1
 801f544:	f103 0c01 	add.w	ip, r3, #1
 801f548:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f54c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801f550:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f554:	0976      	lsrs	r6, r6, #5
 801f556:	ea4c 0c02 	orr.w	ip, ip, r2
 801f55a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801f55e:	ea4c 0c06 	orr.w	ip, ip, r6
 801f562:	f8a0 c000 	strh.w	ip, [r0]
 801f566:	e7b9      	b.n	801f4dc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801f568:	f8b9 3000 	ldrh.w	r3, [r9]
 801f56c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801f570:	eba3 0308 	sub.w	r3, r3, r8
 801f574:	eba6 0608 	sub.w	r6, r6, r8
 801f578:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801f57c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f580:	440e      	add	r6, r1
 801f582:	e79a      	b.n	801f4ba <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801f584:	4b03      	ldr	r3, [pc, #12]	; (801f594 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801f586:	6818      	ldr	r0, [r3, #0]
 801f588:	6803      	ldr	r3, [r0, #0]
 801f58a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f58c:	4798      	blx	r3
 801f58e:	b007      	add	sp, #28
 801f590:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f594:	2002bd34 	.word	0x2002bd34
 801f598:	2002bd2e 	.word	0x2002bd2e

0801f59c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801f59c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f5a0:	b089      	sub	sp, #36	; 0x24
 801f5a2:	4682      	mov	sl, r0
 801f5a4:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801f5a8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f5aa:	460f      	mov	r7, r1
 801f5ac:	4691      	mov	r9, r2
 801f5ae:	4698      	mov	r8, r3
 801f5b0:	2e00      	cmp	r6, #0
 801f5b2:	d03d      	beq.n	801f630 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f5b4:	4608      	mov	r0, r1
 801f5b6:	f7fc f859 	bl	801b66c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801f5ba:	4605      	mov	r5, r0
 801f5bc:	4638      	mov	r0, r7
 801f5be:	f7fc f88f 	bl	801b6e0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801f5c2:	f8ad 000e 	strh.w	r0, [sp, #14]
 801f5c6:	4638      	mov	r0, r7
 801f5c8:	f8ad 9008 	strh.w	r9, [sp, #8]
 801f5cc:	f8ad 500c 	strh.w	r5, [sp, #12]
 801f5d0:	f8ad 800a 	strh.w	r8, [sp, #10]
 801f5d4:	f7fc f952 	bl	801b87c <_ZNK8touchgfx6Bitmap7getDataEv>
 801f5d8:	4605      	mov	r5, r0
 801f5da:	4638      	mov	r0, r7
 801f5dc:	f7fc f980 	bl	801b8e0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801f5e0:	4681      	mov	r9, r0
 801f5e2:	4638      	mov	r0, r7
 801f5e4:	f7fc f9d4 	bl	801b990 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801f5e8:	280b      	cmp	r0, #11
 801f5ea:	f200 816f 	bhi.w	801f8cc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x330>
 801f5ee:	e8df f010 	tbh	[pc, r0, lsl #1]
 801f5f2:	00c3      	.short	0x00c3
 801f5f4:	000c00b4 	.word	0x000c00b4
 801f5f8:	016d016d 	.word	0x016d016d
 801f5fc:	016d016d 	.word	0x016d016d
 801f600:	016d016d 	.word	0x016d016d
 801f604:	016d016d 	.word	0x016d016d
 801f608:	00bb      	.short	0x00bb
 801f60a:	4bb3      	ldr	r3, [pc, #716]	; (801f8d8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x33c>)
 801f60c:	6818      	ldr	r0, [r3, #0]
 801f60e:	6803      	ldr	r3, [r0, #0]
 801f610:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f612:	4798      	blx	r3
 801f614:	2eff      	cmp	r6, #255	; 0xff
 801f616:	d121      	bne.n	801f65c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 801f618:	0683      	lsls	r3, r0, #26
 801f61a:	d41f      	bmi.n	801f65c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 801f61c:	4638      	mov	r0, r7
 801f61e:	f7fc f8f3 	bl	801b808 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801f622:	b940      	cbnz	r0, 801f636 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801f624:	4623      	mov	r3, r4
 801f626:	aa02      	add	r2, sp, #8
 801f628:	4629      	mov	r1, r5
 801f62a:	4650      	mov	r0, sl
 801f62c:	f7ff f9e4 	bl	801e9f8 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801f630:	b009      	add	sp, #36	; 0x24
 801f632:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f636:	f10d 0818 	add.w	r8, sp, #24
 801f63a:	4639      	mov	r1, r7
 801f63c:	4640      	mov	r0, r8
 801f63e:	f7fc f889 	bl	801b754 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801f642:	e898 0003 	ldmia.w	r8, {r0, r1}
 801f646:	af04      	add	r7, sp, #16
 801f648:	e887 0003 	stmia.w	r7, {r0, r1}
 801f64c:	4638      	mov	r0, r7
 801f64e:	4621      	mov	r1, r4
 801f650:	f7f4 f852 	bl	80136f8 <_ZN8touchgfx4RectaNERKS0_>
 801f654:	4638      	mov	r0, r7
 801f656:	f7f4 f892 	bl	801377e <_ZNK8touchgfx4Rect7isEmptyEv>
 801f65a:	b130      	cbz	r0, 801f66a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xce>
 801f65c:	4633      	mov	r3, r6
 801f65e:	4622      	mov	r2, r4
 801f660:	a902      	add	r1, sp, #8
 801f662:	4628      	mov	r0, r5
 801f664:	f7ff f8e2 	bl	801e82c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f668:	e7e2      	b.n	801f630 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f66a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f66e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801f672:	4293      	cmp	r3, r2
 801f674:	dd12      	ble.n	801f69c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x100>
 801f676:	1a9b      	subs	r3, r3, r2
 801f678:	f9b4 0000 	ldrsh.w	r0, [r4]
 801f67c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801f680:	f8ad 0018 	strh.w	r0, [sp, #24]
 801f684:	f8ad 201a 	strh.w	r2, [sp, #26]
 801f688:	f8ad 101c 	strh.w	r1, [sp, #28]
 801f68c:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f690:	4642      	mov	r2, r8
 801f692:	4633      	mov	r3, r6
 801f694:	a902      	add	r1, sp, #8
 801f696:	4628      	mov	r0, r5
 801f698:	f7ff f8c8 	bl	801e82c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f69c:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801f6a0:	f9b4 2000 	ldrsh.w	r2, [r4]
 801f6a4:	4293      	cmp	r3, r2
 801f6a6:	dd12      	ble.n	801f6ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x132>
 801f6a8:	1a9b      	subs	r3, r3, r2
 801f6aa:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801f6ae:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801f6b2:	f8ad 2018 	strh.w	r2, [sp, #24]
 801f6b6:	f8ad 001a 	strh.w	r0, [sp, #26]
 801f6ba:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f6be:	f8ad 101e 	strh.w	r1, [sp, #30]
 801f6c2:	23ff      	movs	r3, #255	; 0xff
 801f6c4:	4642      	mov	r2, r8
 801f6c6:	a902      	add	r1, sp, #8
 801f6c8:	4628      	mov	r0, r5
 801f6ca:	f7ff f8af 	bl	801e82c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f6ce:	463b      	mov	r3, r7
 801f6d0:	aa02      	add	r2, sp, #8
 801f6d2:	4629      	mov	r1, r5
 801f6d4:	4650      	mov	r0, sl
 801f6d6:	f7ff f98f 	bl	801e9f8 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801f6da:	88a2      	ldrh	r2, [r4, #4]
 801f6dc:	8823      	ldrh	r3, [r4, #0]
 801f6de:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801f6e2:	4413      	add	r3, r2
 801f6e4:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f6e8:	440a      	add	r2, r1
 801f6ea:	b29b      	uxth	r3, r3
 801f6ec:	b292      	uxth	r2, r2
 801f6ee:	b211      	sxth	r1, r2
 801f6f0:	b218      	sxth	r0, r3
 801f6f2:	4288      	cmp	r0, r1
 801f6f4:	dd12      	ble.n	801f71c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x180>
 801f6f6:	1a9b      	subs	r3, r3, r2
 801f6f8:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801f6fc:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801f700:	f8ad 1018 	strh.w	r1, [sp, #24]
 801f704:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f708:	f8ad 001e 	strh.w	r0, [sp, #30]
 801f70c:	23ff      	movs	r3, #255	; 0xff
 801f70e:	4642      	mov	r2, r8
 801f710:	a902      	add	r1, sp, #8
 801f712:	4628      	mov	r0, r5
 801f714:	f8ad 601a 	strh.w	r6, [sp, #26]
 801f718:	f7ff f888 	bl	801e82c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f71c:	88e2      	ldrh	r2, [r4, #6]
 801f71e:	8863      	ldrh	r3, [r4, #2]
 801f720:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801f724:	4413      	add	r3, r2
 801f726:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801f72a:	440a      	add	r2, r1
 801f72c:	b29b      	uxth	r3, r3
 801f72e:	b292      	uxth	r2, r2
 801f730:	b211      	sxth	r1, r2
 801f732:	b218      	sxth	r0, r3
 801f734:	4288      	cmp	r0, r1
 801f736:	f77f af7b 	ble.w	801f630 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f73a:	1a9b      	subs	r3, r3, r2
 801f73c:	f9b4 6000 	ldrsh.w	r6, [r4]
 801f740:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801f744:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f748:	f8ad 6018 	strh.w	r6, [sp, #24]
 801f74c:	f8ad 101a 	strh.w	r1, [sp, #26]
 801f750:	f8ad 001c 	strh.w	r0, [sp, #28]
 801f754:	23ff      	movs	r3, #255	; 0xff
 801f756:	4642      	mov	r2, r8
 801f758:	e782      	b.n	801f660 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc4>
 801f75a:	4633      	mov	r3, r6
 801f75c:	4622      	mov	r2, r4
 801f75e:	a902      	add	r1, sp, #8
 801f760:	4628      	mov	r0, r5
 801f762:	f7ff f9b9 	bl	801ead8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801f766:	e763      	b.n	801f630 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f768:	9600      	str	r6, [sp, #0]
 801f76a:	4623      	mov	r3, r4
 801f76c:	aa02      	add	r2, sp, #8
 801f76e:	4649      	mov	r1, r9
 801f770:	4628      	mov	r0, r5
 801f772:	f7ff fdd5 	bl	801f320 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801f776:	e75b      	b.n	801f630 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f778:	4638      	mov	r0, r7
 801f77a:	f7fc f845 	bl	801b808 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801f77e:	b950      	cbnz	r0, 801f796 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fa>
 801f780:	e9cd 6000 	strd	r6, r0, [sp]
 801f784:	f8da 3000 	ldr.w	r3, [sl]
 801f788:	aa02      	add	r2, sp, #8
 801f78a:	68de      	ldr	r6, [r3, #12]
 801f78c:	4629      	mov	r1, r5
 801f78e:	4623      	mov	r3, r4
 801f790:	4650      	mov	r0, sl
 801f792:	47b0      	blx	r6
 801f794:	e74c      	b.n	801f630 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f796:	f10d 0818 	add.w	r8, sp, #24
 801f79a:	4639      	mov	r1, r7
 801f79c:	4640      	mov	r0, r8
 801f79e:	f7fb ffd9 	bl	801b754 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801f7a2:	e898 0003 	ldmia.w	r8, {r0, r1}
 801f7a6:	af04      	add	r7, sp, #16
 801f7a8:	e887 0003 	stmia.w	r7, {r0, r1}
 801f7ac:	4638      	mov	r0, r7
 801f7ae:	4621      	mov	r1, r4
 801f7b0:	f7f3 ffa2 	bl	80136f8 <_ZN8touchgfx4RectaNERKS0_>
 801f7b4:	4638      	mov	r0, r7
 801f7b6:	f7f3 ffe2 	bl	801377e <_ZNK8touchgfx4Rect7isEmptyEv>
 801f7ba:	b138      	cbz	r0, 801f7cc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 801f7bc:	9600      	str	r6, [sp, #0]
 801f7be:	4623      	mov	r3, r4
 801f7c0:	aa02      	add	r2, sp, #8
 801f7c2:	4649      	mov	r1, r9
 801f7c4:	4628      	mov	r0, r5
 801f7c6:	f7ff fdc3 	bl	801f350 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801f7ca:	e731      	b.n	801f630 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f7cc:	e9cd 6000 	strd	r6, r0, [sp]
 801f7d0:	f8da 3000 	ldr.w	r3, [sl]
 801f7d4:	aa02      	add	r2, sp, #8
 801f7d6:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801f7da:	4629      	mov	r1, r5
 801f7dc:	463b      	mov	r3, r7
 801f7de:	4650      	mov	r0, sl
 801f7e0:	47d8      	blx	fp
 801f7e2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f7e6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801f7ea:	4293      	cmp	r3, r2
 801f7ec:	dd13      	ble.n	801f816 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x27a>
 801f7ee:	f9b4 0000 	ldrsh.w	r0, [r4]
 801f7f2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801f7f6:	f8ad 0018 	strh.w	r0, [sp, #24]
 801f7fa:	1a9b      	subs	r3, r3, r2
 801f7fc:	f8ad 201a 	strh.w	r2, [sp, #26]
 801f800:	f8ad 101c 	strh.w	r1, [sp, #28]
 801f804:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f808:	9600      	str	r6, [sp, #0]
 801f80a:	4643      	mov	r3, r8
 801f80c:	aa02      	add	r2, sp, #8
 801f80e:	4649      	mov	r1, r9
 801f810:	4628      	mov	r0, r5
 801f812:	f7ff fd9d 	bl	801f350 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801f816:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801f81a:	f9b4 2000 	ldrsh.w	r2, [r4]
 801f81e:	4293      	cmp	r3, r2
 801f820:	dd13      	ble.n	801f84a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2ae>
 801f822:	1a9b      	subs	r3, r3, r2
 801f824:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801f828:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801f82c:	f8ad 2018 	strh.w	r2, [sp, #24]
 801f830:	f8ad 001a 	strh.w	r0, [sp, #26]
 801f834:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f838:	f8ad 101e 	strh.w	r1, [sp, #30]
 801f83c:	9600      	str	r6, [sp, #0]
 801f83e:	4643      	mov	r3, r8
 801f840:	aa02      	add	r2, sp, #8
 801f842:	4649      	mov	r1, r9
 801f844:	4628      	mov	r0, r5
 801f846:	f7ff fd83 	bl	801f350 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801f84a:	88a2      	ldrh	r2, [r4, #4]
 801f84c:	8823      	ldrh	r3, [r4, #0]
 801f84e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801f852:	4413      	add	r3, r2
 801f854:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f858:	440a      	add	r2, r1
 801f85a:	b29b      	uxth	r3, r3
 801f85c:	b292      	uxth	r2, r2
 801f85e:	b211      	sxth	r1, r2
 801f860:	b218      	sxth	r0, r3
 801f862:	4288      	cmp	r0, r1
 801f864:	dd13      	ble.n	801f88e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2f2>
 801f866:	1a9b      	subs	r3, r3, r2
 801f868:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801f86c:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801f870:	f8ad 1018 	strh.w	r1, [sp, #24]
 801f874:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f878:	f8ad 001e 	strh.w	r0, [sp, #30]
 801f87c:	9600      	str	r6, [sp, #0]
 801f87e:	4643      	mov	r3, r8
 801f880:	aa02      	add	r2, sp, #8
 801f882:	4649      	mov	r1, r9
 801f884:	4628      	mov	r0, r5
 801f886:	f8ad 701a 	strh.w	r7, [sp, #26]
 801f88a:	f7ff fd61 	bl	801f350 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801f88e:	88e2      	ldrh	r2, [r4, #6]
 801f890:	8863      	ldrh	r3, [r4, #2]
 801f892:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801f896:	4413      	add	r3, r2
 801f898:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801f89c:	440a      	add	r2, r1
 801f89e:	b29b      	uxth	r3, r3
 801f8a0:	b292      	uxth	r2, r2
 801f8a2:	b211      	sxth	r1, r2
 801f8a4:	b218      	sxth	r0, r3
 801f8a6:	4288      	cmp	r0, r1
 801f8a8:	f77f aec2 	ble.w	801f630 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f8ac:	f9b4 7000 	ldrsh.w	r7, [r4]
 801f8b0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801f8b4:	f8ad 7018 	strh.w	r7, [sp, #24]
 801f8b8:	1a9b      	subs	r3, r3, r2
 801f8ba:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f8be:	f8ad 101a 	strh.w	r1, [sp, #26]
 801f8c2:	f8ad 001c 	strh.w	r0, [sp, #28]
 801f8c6:	9600      	str	r6, [sp, #0]
 801f8c8:	4643      	mov	r3, r8
 801f8ca:	e779      	b.n	801f7c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801f8cc:	4b03      	ldr	r3, [pc, #12]	; (801f8dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x340>)
 801f8ce:	4a04      	ldr	r2, [pc, #16]	; (801f8e0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x344>)
 801f8d0:	4804      	ldr	r0, [pc, #16]	; (801f8e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x348>)
 801f8d2:	21b4      	movs	r1, #180	; 0xb4
 801f8d4:	f007 ff54 	bl	8027780 <__assert_func>
 801f8d8:	2002bd34 	.word	0x2002bd34
 801f8dc:	0802d26c 	.word	0x0802d26c
 801f8e0:	0802d977 	.word	0x0802d977
 801f8e4:	0802d3a2 	.word	0x0802d3a2

0801f8e8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801f8e8:	b508      	push	{r3, lr}
 801f8ea:	b180      	cbz	r0, 801f90e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 801f8ec:	2902      	cmp	r1, #2
 801f8ee:	d014      	beq.n	801f91a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 801f8f0:	2903      	cmp	r1, #3
 801f8f2:	d01d      	beq.n	801f930 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 801f8f4:	2901      	cmp	r1, #1
 801f8f6:	d101      	bne.n	801f8fc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 801f8f8:	2001      	movs	r0, #1
 801f8fa:	bd08      	pop	{r3, pc}
 801f8fc:	4b0e      	ldr	r3, [pc, #56]	; (801f938 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801f8fe:	8818      	ldrh	r0, [r3, #0]
 801f900:	b990      	cbnz	r0, 801f928 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801f902:	4b0e      	ldr	r3, [pc, #56]	; (801f93c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 801f904:	4a0e      	ldr	r2, [pc, #56]	; (801f940 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 801f906:	480f      	ldr	r0, [pc, #60]	; (801f944 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 801f908:	2150      	movs	r1, #80	; 0x50
 801f90a:	f007 ff39 	bl	8027780 <__assert_func>
 801f90e:	2902      	cmp	r1, #2
 801f910:	d00e      	beq.n	801f930 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 801f912:	2903      	cmp	r1, #3
 801f914:	d0f2      	beq.n	801f8fc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 801f916:	2901      	cmp	r1, #1
 801f918:	d1ee      	bne.n	801f8f8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 801f91a:	4b07      	ldr	r3, [pc, #28]	; (801f938 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801f91c:	8818      	ldrh	r0, [r3, #0]
 801f91e:	2800      	cmp	r0, #0
 801f920:	d0ef      	beq.n	801f902 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 801f922:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801f926:	e7e8      	b.n	801f8fa <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 801f928:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801f92c:	4240      	negs	r0, r0
 801f92e:	e7e4      	b.n	801f8fa <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 801f930:	f04f 30ff 	mov.w	r0, #4294967295
 801f934:	e7e1      	b.n	801f8fa <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 801f936:	bf00      	nop
 801f938:	2002bd2e 	.word	0x2002bd2e
 801f93c:	0802d4f8 	.word	0x0802d4f8
 801f940:	0802daf4 	.word	0x0802daf4
 801f944:	0802d53a 	.word	0x0802d53a

0801f948 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801f948:	b508      	push	{r3, lr}
 801f94a:	b180      	cbz	r0, 801f96e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 801f94c:	2902      	cmp	r1, #2
 801f94e:	d014      	beq.n	801f97a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 801f950:	2903      	cmp	r1, #3
 801f952:	d018      	beq.n	801f986 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 801f954:	2901      	cmp	r1, #1
 801f956:	d001      	beq.n	801f95c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 801f958:	2001      	movs	r0, #1
 801f95a:	e013      	b.n	801f984 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 801f95c:	4b0e      	ldr	r3, [pc, #56]	; (801f998 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801f95e:	8818      	ldrh	r0, [r3, #0]
 801f960:	b970      	cbnz	r0, 801f980 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 801f962:	4b0e      	ldr	r3, [pc, #56]	; (801f99c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 801f964:	4a0e      	ldr	r2, [pc, #56]	; (801f9a0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 801f966:	480f      	ldr	r0, [pc, #60]	; (801f9a4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 801f968:	2150      	movs	r1, #80	; 0x50
 801f96a:	f007 ff09 	bl	8027780 <__assert_func>
 801f96e:	2902      	cmp	r1, #2
 801f970:	d009      	beq.n	801f986 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 801f972:	2903      	cmp	r1, #3
 801f974:	d0f0      	beq.n	801f958 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 801f976:	2901      	cmp	r1, #1
 801f978:	d1f0      	bne.n	801f95c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 801f97a:	f04f 30ff 	mov.w	r0, #4294967295
 801f97e:	e001      	b.n	801f984 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 801f980:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801f984:	bd08      	pop	{r3, pc}
 801f986:	4b04      	ldr	r3, [pc, #16]	; (801f998 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801f988:	8818      	ldrh	r0, [r3, #0]
 801f98a:	2800      	cmp	r0, #0
 801f98c:	d0e9      	beq.n	801f962 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 801f98e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801f992:	4240      	negs	r0, r0
 801f994:	e7f6      	b.n	801f984 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 801f996:	bf00      	nop
 801f998:	2002bd2e 	.word	0x2002bd2e
 801f99c:	0802d4f8 	.word	0x0802d4f8
 801f9a0:	0802daf4 	.word	0x0802daf4
 801f9a4:	0802d53a 	.word	0x0802d53a

0801f9a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801f9a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f9ac:	b099      	sub	sp, #100	; 0x64
 801f9ae:	910b      	str	r1, [sp, #44]	; 0x2c
 801f9b0:	a914      	add	r1, sp, #80	; 0x50
 801f9b2:	e881 000c 	stmia.w	r1, {r2, r3}
 801f9b6:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801f9ba:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801f9be:	930a      	str	r3, [sp, #40]	; 0x28
 801f9c0:	f891 900d 	ldrb.w	r9, [r1, #13]
 801f9c4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801f9c8:	9311      	str	r3, [sp, #68]	; 0x44
 801f9ca:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801f9ce:	930c      	str	r3, [sp, #48]	; 0x30
 801f9d0:	7988      	ldrb	r0, [r1, #6]
 801f9d2:	f9bd 5088 	ldrsh.w	r5, [sp, #136]	; 0x88
 801f9d6:	f8bd 6090 	ldrh.w	r6, [sp, #144]	; 0x90
 801f9da:	f8bd 7094 	ldrh.w	r7, [sp, #148]	; 0x94
 801f9de:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801f9e2:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801f9e6:	ea4f 1349 	mov.w	r3, r9, lsl #5
 801f9ea:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801f9ee:	4303      	orrs	r3, r0
 801f9f0:	9309      	str	r3, [sp, #36]	; 0x24
 801f9f2:	f000 81a1 	beq.w	801fd38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801f9f6:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801f9fa:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801f9fe:	f891 9007 	ldrb.w	r9, [r1, #7]
 801fa02:	ea59 0903 	orrs.w	r9, r9, r3
 801fa06:	f000 8197 	beq.w	801fd38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801fa0a:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801fa0e:	b29b      	uxth	r3, r3
 801fa10:	2e00      	cmp	r6, #0
 801fa12:	f000 813a 	beq.w	801fc8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
 801fa16:	1af6      	subs	r6, r6, r3
 801fa18:	b2b6      	uxth	r6, r6
 801fa1a:	0433      	lsls	r3, r6, #16
 801fa1c:	d502      	bpl.n	801fa24 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 801fa1e:	1bad      	subs	r5, r5, r6
 801fa20:	b22d      	sxth	r5, r5
 801fa22:	2600      	movs	r6, #0
 801fa24:	f9b2 1000 	ldrsh.w	r1, [r2]
 801fa28:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 801fa2c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 801fa30:	428d      	cmp	r5, r1
 801fa32:	b28b      	uxth	r3, r1
 801fa34:	bfbf      	itttt	lt
 801fa36:	18f6      	addlt	r6, r6, r3
 801fa38:	1b75      	sublt	r5, r6, r5
 801fa3a:	b2ae      	uxthlt	r6, r5
 801fa3c:	460d      	movlt	r5, r1
 801fa3e:	8891      	ldrh	r1, [r2, #4]
 801fa40:	440b      	add	r3, r1
 801fa42:	b21b      	sxth	r3, r3
 801fa44:	9310      	str	r3, [sp, #64]	; 0x40
 801fa46:	88d3      	ldrh	r3, [r2, #6]
 801fa48:	8852      	ldrh	r2, [r2, #2]
 801fa4a:	4413      	add	r3, r2
 801fa4c:	b21b      	sxth	r3, r3
 801fa4e:	930f      	str	r3, [sp, #60]	; 0x3c
 801fa50:	4bbc      	ldr	r3, [pc, #752]	; (801fd44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801fa52:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801fa54:	f893 b000 	ldrb.w	fp, [r3]
 801fa58:	f10b 3cff 	add.w	ip, fp, #4294967295
 801fa5c:	f1dc 0300 	rsbs	r3, ip, #0
 801fa60:	eb43 030c 	adc.w	r3, r3, ip
 801fa64:	930e      	str	r3, [sp, #56]	; 0x38
 801fa66:	4629      	mov	r1, r5
 801fa68:	4653      	mov	r3, sl
 801fa6a:	a814      	add	r0, sp, #80	; 0x50
 801fa6c:	f7f7 fb41 	bl	80170f2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801fa70:	4629      	mov	r1, r5
 801fa72:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801fa76:	4653      	mov	r3, sl
 801fa78:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801fa7a:	a814      	add	r0, sp, #80	; 0x50
 801fa7c:	f7f7 fb51 	bl	8017122 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801fa80:	a918      	add	r1, sp, #96	; 0x60
 801fa82:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801fa86:	a817      	add	r0, sp, #92	; 0x5c
 801fa88:	f7f7 fc6c 	bl	8017364 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801fa8c:	f1ba 0f00 	cmp.w	sl, #0
 801fa90:	f040 80fe 	bne.w	801fc90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e8>
 801fa94:	f1bb 0f01 	cmp.w	fp, #1
 801fa98:	f040 8102 	bne.w	801fca0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f8>
 801fa9c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fa9e:	b153      	cbz	r3, 801fab6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10e>
 801faa0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801faa2:	2408      	movs	r4, #8
 801faa4:	fb94 f3f8 	sdiv	r3, r4, r8
 801faa8:	1e5c      	subs	r4, r3, #1
 801faaa:	4414      	add	r4, r2
 801faac:	fb94 f4f3 	sdiv	r4, r4, r3
 801fab0:	fb14 f403 	smulbb	r4, r4, r3
 801fab4:	b2a4      	uxth	r4, r4
 801fab6:	b906      	cbnz	r6, 801faba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 801fab8:	b16f      	cbz	r7, 801fad6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x12e>
 801faba:	fb07 6304 	mla	r3, r7, r4, r6
 801fabe:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801fac0:	fb08 f303 	mul.w	r3, r8, r3
 801fac4:	463a      	mov	r2, r7
 801fac6:	f003 0707 	and.w	r7, r3, #7
 801faca:	eb01 03d3 	add.w	r3, r1, r3, lsr #3
 801face:	9328      	str	r3, [sp, #160]	; 0xa0
 801fad0:	eba9 0302 	sub.w	r3, r9, r2
 801fad4:	930d      	str	r3, [sp, #52]	; 0x34
 801fad6:	4651      	mov	r1, sl
 801fad8:	980e      	ldr	r0, [sp, #56]	; 0x38
 801fada:	f7ff ff05 	bl	801f8e8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801fade:	4651      	mov	r1, sl
 801fae0:	4681      	mov	r9, r0
 801fae2:	980e      	ldr	r0, [sp, #56]	; 0x38
 801fae4:	f7ff ff30 	bl	801f948 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801fae8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801faea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801faec:	eba3 0a02 	sub.w	sl, r3, r2
 801faf0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801faf2:	459a      	cmp	sl, r3
 801faf4:	bfa8      	it	ge
 801faf6:	469a      	movge	sl, r3
 801faf8:	f1ba 0f00 	cmp.w	sl, #0
 801fafc:	4683      	mov	fp, r0
 801fafe:	f340 811b 	ble.w	801fd38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801fb02:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fb04:	1bad      	subs	r5, r5, r6
 801fb06:	1b5d      	subs	r5, r3, r5
 801fb08:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fb0a:	429d      	cmp	r5, r3
 801fb0c:	bfd4      	ite	le
 801fb0e:	ebc6 0605 	rsble	r6, r6, r5
 801fb12:	ebc6 0603 	rsbgt	r6, r6, r3
 801fb16:	2e00      	cmp	r6, #0
 801fb18:	f340 810e 	ble.w	801fd38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801fb1c:	1ba4      	subs	r4, r4, r6
 801fb1e:	fb08 f304 	mul.w	r3, r8, r4
 801fb22:	930f      	str	r3, [sp, #60]	; 0x3c
 801fb24:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fb26:	2b00      	cmp	r3, #0
 801fb28:	f040 8114 	bne.w	801fd54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801fb2c:	4b86      	ldr	r3, [pc, #536]	; (801fd48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801fb2e:	6818      	ldr	r0, [r3, #0]
 801fb30:	6803      	ldr	r3, [r0, #0]
 801fb32:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fb34:	4798      	blx	r3
 801fb36:	2301      	movs	r3, #1
 801fb38:	fa03 f308 	lsl.w	r3, r3, r8
 801fb3c:	4a83      	ldr	r2, [pc, #524]	; (801fd4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801fb3e:	3b01      	subs	r3, #1
 801fb40:	b2db      	uxtb	r3, r3
 801fb42:	8811      	ldrh	r1, [r2, #0]
 801fb44:	930e      	str	r3, [sp, #56]	; 0x38
 801fb46:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801fb4a:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801fb4e:	fb01 2303 	mla	r3, r1, r3, r2
 801fb52:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801fb56:	930a      	str	r3, [sp, #40]	; 0x28
 801fb58:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fb5a:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801fb5e:	9313      	str	r3, [sp, #76]	; 0x4c
 801fb60:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fb62:	0a19      	lsrs	r1, r3, #8
 801fb64:	b2cb      	uxtb	r3, r1
 801fb66:	9312      	str	r3, [sp, #72]	; 0x48
 801fb68:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fb6a:	b2db      	uxtb	r3, r3
 801fb6c:	9311      	str	r3, [sp, #68]	; 0x44
 801fb6e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fb70:	095a      	lsrs	r2, r3, #5
 801fb72:	4b77      	ldr	r3, [pc, #476]	; (801fd50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801fb74:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fb78:	400b      	ands	r3, r1
 801fb7a:	4313      	orrs	r3, r2
 801fb7c:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801fb7e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fb82:	4313      	orrs	r3, r2
 801fb84:	b29b      	uxth	r3, r3
 801fb86:	9310      	str	r3, [sp, #64]	; 0x40
 801fb88:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fb8a:	781a      	ldrb	r2, [r3, #0]
 801fb8c:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801fb90:	413a      	asrs	r2, r7
 801fb92:	fb06 b919 	mls	r9, r6, r9, fp
 801fb96:	fb03 fb06 	mul.w	fp, r3, r6
 801fb9a:	b2d2      	uxtb	r2, r2
 801fb9c:	930d      	str	r3, [sp, #52]	; 0x34
 801fb9e:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801fba2:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801fba6:	f0c0 80ea 	bcc.w	801fd7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d6>
 801fbaa:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801fbae:	46b6      	mov	lr, r6
 801fbb0:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801fbb4:	f0c0 80d2 	bcc.w	801fd5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 801fbb8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fbba:	4013      	ands	r3, r2
 801fbbc:	d055      	beq.n	801fc6a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c2>
 801fbbe:	20ff      	movs	r0, #255	; 0xff
 801fbc0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801fbc2:	fb90 f1f1 	sdiv	r1, r0, r1
 801fbc6:	434b      	muls	r3, r1
 801fbc8:	2bfe      	cmp	r3, #254	; 0xfe
 801fbca:	dd03      	ble.n	801fbd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x22c>
 801fbcc:	990c      	ldr	r1, [sp, #48]	; 0x30
 801fbce:	4281      	cmp	r1, r0
 801fbd0:	f000 80c2 	beq.w	801fd58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801fbd4:	990c      	ldr	r1, [sp, #48]	; 0x30
 801fbd6:	f8bc 4000 	ldrh.w	r4, [ip]
 801fbda:	fb11 f303 	smulbb	r3, r1, r3
 801fbde:	b29b      	uxth	r3, r3
 801fbe0:	1c59      	adds	r1, r3, #1
 801fbe2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801fbe6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fbea:	b29d      	uxth	r5, r3
 801fbec:	43db      	mvns	r3, r3
 801fbee:	b2db      	uxtb	r3, r3
 801fbf0:	9309      	str	r3, [sp, #36]	; 0x24
 801fbf2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801fbf4:	1220      	asrs	r0, r4, #8
 801fbf6:	fb13 f905 	smulbb	r9, r3, r5
 801fbfa:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801fbfe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fc00:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801fc04:	fb00 9003 	mla	r0, r0, r3, r9
 801fc08:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801fc0a:	10e1      	asrs	r1, r4, #3
 801fc0c:	fb13 f905 	smulbb	r9, r3, r5
 801fc10:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fc14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fc16:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801fc1a:	fb01 9103 	mla	r1, r1, r3, r9
 801fc1e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fc20:	00e4      	lsls	r4, r4, #3
 801fc22:	fb13 f505 	smulbb	r5, r3, r5
 801fc26:	b2e4      	uxtb	r4, r4
 801fc28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fc2a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801fc2e:	fb04 5403 	mla	r4, r4, r3, r5
 801fc32:	b280      	uxth	r0, r0
 801fc34:	b2a4      	uxth	r4, r4
 801fc36:	1c43      	adds	r3, r0, #1
 801fc38:	f104 0901 	add.w	r9, r4, #1
 801fc3c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801fc40:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801fc44:	b289      	uxth	r1, r1
 801fc46:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801fc4a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801fc4e:	ea49 0000 	orr.w	r0, r9, r0
 801fc52:	f101 0901 	add.w	r9, r1, #1
 801fc56:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801fc5a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801fc5e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801fc62:	ea40 0009 	orr.w	r0, r0, r9
 801fc66:	f8ac 0000 	strh.w	r0, [ip]
 801fc6a:	4447      	add	r7, r8
 801fc6c:	b2bf      	uxth	r7, r7
 801fc6e:	2f07      	cmp	r7, #7
 801fc70:	bf81      	itttt	hi
 801fc72:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801fc74:	785a      	ldrbhi	r2, [r3, #1]
 801fc76:	3301      	addhi	r3, #1
 801fc78:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801fc7a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fc7c:	bf9a      	itte	ls
 801fc7e:	fa42 f208 	asrls.w	r2, r2, r8
 801fc82:	b2d2      	uxtbls	r2, r2
 801fc84:	2700      	movhi	r7, #0
 801fc86:	449c      	add	ip, r3
 801fc88:	e792      	b.n	801fbb0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x208>
 801fc8a:	441d      	add	r5, r3
 801fc8c:	b22d      	sxth	r5, r5
 801fc8e:	e6c9      	b.n	801fa24 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 801fc90:	f1ba 0f01 	cmp.w	sl, #1
 801fc94:	f47f af02 	bne.w	801fa9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801fc98:	f1bb 0f01 	cmp.w	fp, #1
 801fc9c:	f47f aefe 	bne.w	801fa9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801fca0:	f8df b0a4 	ldr.w	fp, [pc, #164]	; 801fd48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801fca4:	f8db 0000 	ldr.w	r0, [fp]
 801fca8:	6803      	ldr	r3, [r0, #0]
 801fcaa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801fcac:	4798      	blx	r3
 801fcae:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801fcb2:	465a      	mov	r2, fp
 801fcb4:	d006      	beq.n	801fcc4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 801fcb6:	f1b8 0f04 	cmp.w	r8, #4
 801fcba:	d140      	bne.n	801fd3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801fcbc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fcbe:	3300      	adds	r3, #0
 801fcc0:	bf18      	it	ne
 801fcc2:	2301      	movne	r3, #1
 801fcc4:	0580      	lsls	r0, r0, #22
 801fcc6:	d563      	bpl.n	801fd90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 801fcc8:	f1b8 0f08 	cmp.w	r8, #8
 801fccc:	d160      	bne.n	801fd90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 801fcce:	2b00      	cmp	r3, #0
 801fcd0:	bf0c      	ite	eq
 801fcd2:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801fcd6:	f44f 7180 	movne.w	r1, #256	; 0x100
 801fcda:	2e00      	cmp	r6, #0
 801fcdc:	f47f aede 	bne.w	801fa9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801fce0:	2f00      	cmp	r7, #0
 801fce2:	f47f aedb 	bne.w	801fa9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801fce6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fce8:	9810      	ldr	r0, [sp, #64]	; 0x40
 801fcea:	18eb      	adds	r3, r5, r3
 801fcec:	4283      	cmp	r3, r0
 801fcee:	f73f aed5 	bgt.w	801fa9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801fcf2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fcf4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801fcf6:	444b      	add	r3, r9
 801fcf8:	4283      	cmp	r3, r0
 801fcfa:	f73f aecf 	bgt.w	801fa9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801fcfe:	6810      	ldr	r0, [r2, #0]
 801fd00:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801fd04:	6805      	ldr	r5, [r0, #0]
 801fd06:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801fd0a:	f1b8 0f08 	cmp.w	r8, #8
 801fd0e:	f04f 0600 	mov.w	r6, #0
 801fd12:	bf18      	it	ne
 801fd14:	3401      	addne	r4, #1
 801fd16:	e9cd 1605 	strd	r1, r6, [sp, #20]
 801fd1a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801fd1c:	9104      	str	r1, [sp, #16]
 801fd1e:	bf18      	it	ne
 801fd20:	f024 0401 	bicne.w	r4, r4, #1
 801fd24:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801fd26:	bf18      	it	ne
 801fd28:	b2a4      	uxthne	r4, r4
 801fd2a:	e9cd 4102 	strd	r4, r1, [sp, #8]
 801fd2e:	e9cd 4900 	strd	r4, r9, [sp]
 801fd32:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801fd34:	6d6c      	ldr	r4, [r5, #84]	; 0x54
 801fd36:	47a0      	blx	r4
 801fd38:	b019      	add	sp, #100	; 0x64
 801fd3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fd3e:	2300      	movs	r3, #0
 801fd40:	e7c0      	b.n	801fcc4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 801fd42:	bf00      	nop
 801fd44:	2002bd2c 	.word	0x2002bd2c
 801fd48:	2002bd34 	.word	0x2002bd34
 801fd4c:	2002bd2e 	.word	0x2002bd2e
 801fd50:	00fff800 	.word	0x00fff800
 801fd54:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801fd56:	e6ee      	b.n	801fb36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x18e>
 801fd58:	9810      	ldr	r0, [sp, #64]	; 0x40
 801fd5a:	e784      	b.n	801fc66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2be>
 801fd5c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801fd5e:	b153      	cbz	r3, 801fd76 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ce>
 801fd60:	441f      	add	r7, r3
 801fd62:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fd64:	b2bf      	uxth	r7, r7
 801fd66:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 801fd6a:	f007 0707 	and.w	r7, r7, #7
 801fd6e:	781a      	ldrb	r2, [r3, #0]
 801fd70:	9328      	str	r3, [sp, #160]	; 0xa0
 801fd72:	413a      	asrs	r2, r7
 801fd74:	b2d2      	uxtb	r2, r2
 801fd76:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fd78:	445b      	add	r3, fp
 801fd7a:	930a      	str	r3, [sp, #40]	; 0x28
 801fd7c:	e711      	b.n	801fba2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1fa>
 801fd7e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fd80:	2b00      	cmp	r3, #0
 801fd82:	d1d9      	bne.n	801fd38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801fd84:	4b05      	ldr	r3, [pc, #20]	; (801fd9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f4>)
 801fd86:	6818      	ldr	r0, [r3, #0]
 801fd88:	6803      	ldr	r3, [r0, #0]
 801fd8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fd8c:	4798      	blx	r3
 801fd8e:	e7d3      	b.n	801fd38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801fd90:	2b00      	cmp	r3, #0
 801fd92:	f43f ae83 	beq.w	801fa9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801fd96:	f44f 7180 	mov.w	r1, #256	; 0x100
 801fd9a:	e79e      	b.n	801fcda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x332>
 801fd9c:	2002bd34 	.word	0x2002bd34

0801fda0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801fda0:	b538      	push	{r3, r4, r5, lr}
 801fda2:	4c15      	ldr	r4, [pc, #84]	; (801fdf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801fda4:	7823      	ldrb	r3, [r4, #0]
 801fda6:	f3bf 8f5b 	dmb	ish
 801fdaa:	07da      	lsls	r2, r3, #31
 801fdac:	4605      	mov	r5, r0
 801fdae:	d40b      	bmi.n	801fdc8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801fdb0:	4620      	mov	r0, r4
 801fdb2:	f007 fcb9 	bl	8027728 <__cxa_guard_acquire>
 801fdb6:	b138      	cbz	r0, 801fdc8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801fdb8:	4620      	mov	r0, r4
 801fdba:	f007 fcc1 	bl	8027740 <__cxa_guard_release>
 801fdbe:	4a0f      	ldr	r2, [pc, #60]	; (801fdfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801fdc0:	490f      	ldr	r1, [pc, #60]	; (801fe00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801fdc2:	4810      	ldr	r0, [pc, #64]	; (801fe04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801fdc4:	f007 fca9 	bl	802771a <__aeabi_atexit>
 801fdc8:	4c0f      	ldr	r4, [pc, #60]	; (801fe08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801fdca:	7823      	ldrb	r3, [r4, #0]
 801fdcc:	f3bf 8f5b 	dmb	ish
 801fdd0:	07db      	lsls	r3, r3, #31
 801fdd2:	d40b      	bmi.n	801fdec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801fdd4:	4620      	mov	r0, r4
 801fdd6:	f007 fca7 	bl	8027728 <__cxa_guard_acquire>
 801fdda:	b138      	cbz	r0, 801fdec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801fddc:	4620      	mov	r0, r4
 801fdde:	f007 fcaf 	bl	8027740 <__cxa_guard_release>
 801fde2:	4a06      	ldr	r2, [pc, #24]	; (801fdfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801fde4:	4909      	ldr	r1, [pc, #36]	; (801fe0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801fde6:	480a      	ldr	r0, [pc, #40]	; (801fe10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801fde8:	f007 fc97 	bl	802771a <__aeabi_atexit>
 801fdec:	4b05      	ldr	r3, [pc, #20]	; (801fe04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801fdee:	612b      	str	r3, [r5, #16]
 801fdf0:	4b07      	ldr	r3, [pc, #28]	; (801fe10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801fdf2:	616b      	str	r3, [r5, #20]
 801fdf4:	bd38      	pop	{r3, r4, r5, pc}
 801fdf6:	bf00      	nop
 801fdf8:	2002be00 	.word	0x2002be00
 801fdfc:	20000000 	.word	0x20000000
 801fe00:	0801df91 	.word	0x0801df91
 801fe04:	200000a4 	.word	0x200000a4
 801fe08:	2002be04 	.word	0x2002be04
 801fe0c:	0801df8f 	.word	0x0801df8f
 801fe10:	200000a8 	.word	0x200000a8

0801fe14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801fe14:	b538      	push	{r3, r4, r5, lr}
 801fe16:	4c15      	ldr	r4, [pc, #84]	; (801fe6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801fe18:	7823      	ldrb	r3, [r4, #0]
 801fe1a:	f3bf 8f5b 	dmb	ish
 801fe1e:	07da      	lsls	r2, r3, #31
 801fe20:	4605      	mov	r5, r0
 801fe22:	d40b      	bmi.n	801fe3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801fe24:	4620      	mov	r0, r4
 801fe26:	f007 fc7f 	bl	8027728 <__cxa_guard_acquire>
 801fe2a:	b138      	cbz	r0, 801fe3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801fe2c:	4620      	mov	r0, r4
 801fe2e:	f007 fc87 	bl	8027740 <__cxa_guard_release>
 801fe32:	4a0f      	ldr	r2, [pc, #60]	; (801fe70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801fe34:	490f      	ldr	r1, [pc, #60]	; (801fe74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801fe36:	4810      	ldr	r0, [pc, #64]	; (801fe78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801fe38:	f007 fc6f 	bl	802771a <__aeabi_atexit>
 801fe3c:	4c0f      	ldr	r4, [pc, #60]	; (801fe7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801fe3e:	7823      	ldrb	r3, [r4, #0]
 801fe40:	f3bf 8f5b 	dmb	ish
 801fe44:	07db      	lsls	r3, r3, #31
 801fe46:	d40b      	bmi.n	801fe60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801fe48:	4620      	mov	r0, r4
 801fe4a:	f007 fc6d 	bl	8027728 <__cxa_guard_acquire>
 801fe4e:	b138      	cbz	r0, 801fe60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801fe50:	4620      	mov	r0, r4
 801fe52:	f007 fc75 	bl	8027740 <__cxa_guard_release>
 801fe56:	4a06      	ldr	r2, [pc, #24]	; (801fe70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801fe58:	4909      	ldr	r1, [pc, #36]	; (801fe80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801fe5a:	480a      	ldr	r0, [pc, #40]	; (801fe84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801fe5c:	f007 fc5d 	bl	802771a <__aeabi_atexit>
 801fe60:	4b05      	ldr	r3, [pc, #20]	; (801fe78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801fe62:	60ab      	str	r3, [r5, #8]
 801fe64:	4b07      	ldr	r3, [pc, #28]	; (801fe84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801fe66:	60eb      	str	r3, [r5, #12]
 801fe68:	bd38      	pop	{r3, r4, r5, pc}
 801fe6a:	bf00      	nop
 801fe6c:	2002bdd8 	.word	0x2002bdd8
 801fe70:	20000000 	.word	0x20000000
 801fe74:	0801df95 	.word	0x0801df95
 801fe78:	2000007c 	.word	0x2000007c
 801fe7c:	2002bddc 	.word	0x2002bddc
 801fe80:	0801df93 	.word	0x0801df93
 801fe84:	20000080 	.word	0x20000080

0801fe88 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801fe88:	b510      	push	{r4, lr}
 801fe8a:	4604      	mov	r4, r0
 801fe8c:	f7ff ff88 	bl	801fda0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801fe90:	4620      	mov	r0, r4
 801fe92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801fe96:	f7ff bfbd 	b.w	801fe14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801fe9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801fe9c:	b538      	push	{r3, r4, r5, lr}
 801fe9e:	4c15      	ldr	r4, [pc, #84]	; (801fef4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801fea0:	7823      	ldrb	r3, [r4, #0]
 801fea2:	f3bf 8f5b 	dmb	ish
 801fea6:	07da      	lsls	r2, r3, #31
 801fea8:	4605      	mov	r5, r0
 801feaa:	d40b      	bmi.n	801fec4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801feac:	4620      	mov	r0, r4
 801feae:	f007 fc3b 	bl	8027728 <__cxa_guard_acquire>
 801feb2:	b138      	cbz	r0, 801fec4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801feb4:	4620      	mov	r0, r4
 801feb6:	f007 fc43 	bl	8027740 <__cxa_guard_release>
 801feba:	4a0f      	ldr	r2, [pc, #60]	; (801fef8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801febc:	490f      	ldr	r1, [pc, #60]	; (801fefc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801febe:	4810      	ldr	r0, [pc, #64]	; (801ff00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801fec0:	f007 fc2b 	bl	802771a <__aeabi_atexit>
 801fec4:	4c0f      	ldr	r4, [pc, #60]	; (801ff04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801fec6:	7823      	ldrb	r3, [r4, #0]
 801fec8:	f3bf 8f5b 	dmb	ish
 801fecc:	07db      	lsls	r3, r3, #31
 801fece:	d40b      	bmi.n	801fee8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801fed0:	4620      	mov	r0, r4
 801fed2:	f007 fc29 	bl	8027728 <__cxa_guard_acquire>
 801fed6:	b138      	cbz	r0, 801fee8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801fed8:	4620      	mov	r0, r4
 801feda:	f007 fc31 	bl	8027740 <__cxa_guard_release>
 801fede:	4a06      	ldr	r2, [pc, #24]	; (801fef8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801fee0:	4909      	ldr	r1, [pc, #36]	; (801ff08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801fee2:	480a      	ldr	r0, [pc, #40]	; (801ff0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801fee4:	f007 fc19 	bl	802771a <__aeabi_atexit>
 801fee8:	4b05      	ldr	r3, [pc, #20]	; (801ff00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801feea:	622b      	str	r3, [r5, #32]
 801feec:	4b07      	ldr	r3, [pc, #28]	; (801ff0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801feee:	626b      	str	r3, [r5, #36]	; 0x24
 801fef0:	bd38      	pop	{r3, r4, r5, pc}
 801fef2:	bf00      	nop
 801fef4:	2002be08 	.word	0x2002be08
 801fef8:	20000000 	.word	0x20000000
 801fefc:	0801df89 	.word	0x0801df89
 801ff00:	200000ac 	.word	0x200000ac
 801ff04:	2002be0c 	.word	0x2002be0c
 801ff08:	0801df87 	.word	0x0801df87
 801ff0c:	200000b0 	.word	0x200000b0

0801ff10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801ff10:	b538      	push	{r3, r4, r5, lr}
 801ff12:	4c15      	ldr	r4, [pc, #84]	; (801ff68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801ff14:	7823      	ldrb	r3, [r4, #0]
 801ff16:	f3bf 8f5b 	dmb	ish
 801ff1a:	07da      	lsls	r2, r3, #31
 801ff1c:	4605      	mov	r5, r0
 801ff1e:	d40b      	bmi.n	801ff38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801ff20:	4620      	mov	r0, r4
 801ff22:	f007 fc01 	bl	8027728 <__cxa_guard_acquire>
 801ff26:	b138      	cbz	r0, 801ff38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801ff28:	4620      	mov	r0, r4
 801ff2a:	f007 fc09 	bl	8027740 <__cxa_guard_release>
 801ff2e:	4a0f      	ldr	r2, [pc, #60]	; (801ff6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801ff30:	490f      	ldr	r1, [pc, #60]	; (801ff70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801ff32:	4810      	ldr	r0, [pc, #64]	; (801ff74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801ff34:	f007 fbf1 	bl	802771a <__aeabi_atexit>
 801ff38:	4c0f      	ldr	r4, [pc, #60]	; (801ff78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801ff3a:	7823      	ldrb	r3, [r4, #0]
 801ff3c:	f3bf 8f5b 	dmb	ish
 801ff40:	07db      	lsls	r3, r3, #31
 801ff42:	d40b      	bmi.n	801ff5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801ff44:	4620      	mov	r0, r4
 801ff46:	f007 fbef 	bl	8027728 <__cxa_guard_acquire>
 801ff4a:	b138      	cbz	r0, 801ff5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801ff4c:	4620      	mov	r0, r4
 801ff4e:	f007 fbf7 	bl	8027740 <__cxa_guard_release>
 801ff52:	4a06      	ldr	r2, [pc, #24]	; (801ff6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801ff54:	4909      	ldr	r1, [pc, #36]	; (801ff7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801ff56:	480a      	ldr	r0, [pc, #40]	; (801ff80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801ff58:	f007 fbdf 	bl	802771a <__aeabi_atexit>
 801ff5c:	4b05      	ldr	r3, [pc, #20]	; (801ff74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801ff5e:	61ab      	str	r3, [r5, #24]
 801ff60:	4b07      	ldr	r3, [pc, #28]	; (801ff80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801ff62:	61eb      	str	r3, [r5, #28]
 801ff64:	bd38      	pop	{r3, r4, r5, pc}
 801ff66:	bf00      	nop
 801ff68:	2002bde0 	.word	0x2002bde0
 801ff6c:	20000000 	.word	0x20000000
 801ff70:	0801df8d 	.word	0x0801df8d
 801ff74:	20000084 	.word	0x20000084
 801ff78:	2002bde4 	.word	0x2002bde4
 801ff7c:	0801df8b 	.word	0x0801df8b
 801ff80:	20000088 	.word	0x20000088

0801ff84 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801ff84:	b510      	push	{r4, lr}
 801ff86:	4604      	mov	r4, r0
 801ff88:	f7ff ff88 	bl	801fe9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801ff8c:	4620      	mov	r0, r4
 801ff8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ff92:	f7ff bfbd 	b.w	801ff10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801ff98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801ff98:	b538      	push	{r3, r4, r5, lr}
 801ff9a:	4c15      	ldr	r4, [pc, #84]	; (801fff0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801ff9c:	7823      	ldrb	r3, [r4, #0]
 801ff9e:	f3bf 8f5b 	dmb	ish
 801ffa2:	07da      	lsls	r2, r3, #31
 801ffa4:	4605      	mov	r5, r0
 801ffa6:	d40b      	bmi.n	801ffc0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801ffa8:	4620      	mov	r0, r4
 801ffaa:	f007 fbbd 	bl	8027728 <__cxa_guard_acquire>
 801ffae:	b138      	cbz	r0, 801ffc0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801ffb0:	4620      	mov	r0, r4
 801ffb2:	f007 fbc5 	bl	8027740 <__cxa_guard_release>
 801ffb6:	4a0f      	ldr	r2, [pc, #60]	; (801fff4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801ffb8:	490f      	ldr	r1, [pc, #60]	; (801fff8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801ffba:	4810      	ldr	r0, [pc, #64]	; (801fffc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801ffbc:	f007 fbad 	bl	802771a <__aeabi_atexit>
 801ffc0:	4c0f      	ldr	r4, [pc, #60]	; (8020000 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801ffc2:	7823      	ldrb	r3, [r4, #0]
 801ffc4:	f3bf 8f5b 	dmb	ish
 801ffc8:	07db      	lsls	r3, r3, #31
 801ffca:	d40b      	bmi.n	801ffe4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801ffcc:	4620      	mov	r0, r4
 801ffce:	f007 fbab 	bl	8027728 <__cxa_guard_acquire>
 801ffd2:	b138      	cbz	r0, 801ffe4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801ffd4:	4620      	mov	r0, r4
 801ffd6:	f007 fbb3 	bl	8027740 <__cxa_guard_release>
 801ffda:	4a06      	ldr	r2, [pc, #24]	; (801fff4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801ffdc:	4909      	ldr	r1, [pc, #36]	; (8020004 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801ffde:	480a      	ldr	r0, [pc, #40]	; (8020008 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801ffe0:	f007 fb9b 	bl	802771a <__aeabi_atexit>
 801ffe4:	4b05      	ldr	r3, [pc, #20]	; (801fffc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801ffe6:	632b      	str	r3, [r5, #48]	; 0x30
 801ffe8:	4b07      	ldr	r3, [pc, #28]	; (8020008 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801ffea:	636b      	str	r3, [r5, #52]	; 0x34
 801ffec:	bd38      	pop	{r3, r4, r5, pc}
 801ffee:	bf00      	nop
 801fff0:	2002be18 	.word	0x2002be18
 801fff4:	20000000 	.word	0x20000000
 801fff8:	0801df81 	.word	0x0801df81
 801fffc:	200000bc 	.word	0x200000bc
 8020000:	2002be1c 	.word	0x2002be1c
 8020004:	0801df7f 	.word	0x0801df7f
 8020008:	200000c0 	.word	0x200000c0

0802000c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 802000c:	b538      	push	{r3, r4, r5, lr}
 802000e:	4c15      	ldr	r4, [pc, #84]	; (8020064 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8020010:	7823      	ldrb	r3, [r4, #0]
 8020012:	f3bf 8f5b 	dmb	ish
 8020016:	07da      	lsls	r2, r3, #31
 8020018:	4605      	mov	r5, r0
 802001a:	d40b      	bmi.n	8020034 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 802001c:	4620      	mov	r0, r4
 802001e:	f007 fb83 	bl	8027728 <__cxa_guard_acquire>
 8020022:	b138      	cbz	r0, 8020034 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8020024:	4620      	mov	r0, r4
 8020026:	f007 fb8b 	bl	8027740 <__cxa_guard_release>
 802002a:	4a0f      	ldr	r2, [pc, #60]	; (8020068 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 802002c:	490f      	ldr	r1, [pc, #60]	; (802006c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 802002e:	4810      	ldr	r0, [pc, #64]	; (8020070 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8020030:	f007 fb73 	bl	802771a <__aeabi_atexit>
 8020034:	4c0f      	ldr	r4, [pc, #60]	; (8020074 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8020036:	7823      	ldrb	r3, [r4, #0]
 8020038:	f3bf 8f5b 	dmb	ish
 802003c:	07db      	lsls	r3, r3, #31
 802003e:	d40b      	bmi.n	8020058 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8020040:	4620      	mov	r0, r4
 8020042:	f007 fb71 	bl	8027728 <__cxa_guard_acquire>
 8020046:	b138      	cbz	r0, 8020058 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8020048:	4620      	mov	r0, r4
 802004a:	f007 fb79 	bl	8027740 <__cxa_guard_release>
 802004e:	4a06      	ldr	r2, [pc, #24]	; (8020068 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8020050:	4909      	ldr	r1, [pc, #36]	; (8020078 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8020052:	480a      	ldr	r0, [pc, #40]	; (802007c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8020054:	f007 fb61 	bl	802771a <__aeabi_atexit>
 8020058:	4b05      	ldr	r3, [pc, #20]	; (8020070 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 802005a:	62ab      	str	r3, [r5, #40]	; 0x28
 802005c:	4b07      	ldr	r3, [pc, #28]	; (802007c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 802005e:	62eb      	str	r3, [r5, #44]	; 0x2c
 8020060:	bd38      	pop	{r3, r4, r5, pc}
 8020062:	bf00      	nop
 8020064:	2002bde8 	.word	0x2002bde8
 8020068:	20000000 	.word	0x20000000
 802006c:	0801df85 	.word	0x0801df85
 8020070:	2000008c 	.word	0x2000008c
 8020074:	2002bdec 	.word	0x2002bdec
 8020078:	0801df83 	.word	0x0801df83
 802007c:	20000090 	.word	0x20000090

08020080 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8020080:	b510      	push	{r4, lr}
 8020082:	4604      	mov	r4, r0
 8020084:	f7ff ff88 	bl	801ff98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8020088:	4620      	mov	r0, r4
 802008a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802008e:	f7ff bfbd 	b.w	802000c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08020094 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8020094:	b538      	push	{r3, r4, r5, lr}
 8020096:	4c15      	ldr	r4, [pc, #84]	; (80200ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8020098:	7823      	ldrb	r3, [r4, #0]
 802009a:	f3bf 8f5b 	dmb	ish
 802009e:	07da      	lsls	r2, r3, #31
 80200a0:	4605      	mov	r5, r0
 80200a2:	d40b      	bmi.n	80200bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80200a4:	4620      	mov	r0, r4
 80200a6:	f007 fb3f 	bl	8027728 <__cxa_guard_acquire>
 80200aa:	b138      	cbz	r0, 80200bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80200ac:	4620      	mov	r0, r4
 80200ae:	f007 fb47 	bl	8027740 <__cxa_guard_release>
 80200b2:	4a0f      	ldr	r2, [pc, #60]	; (80200f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80200b4:	490f      	ldr	r1, [pc, #60]	; (80200f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 80200b6:	4810      	ldr	r0, [pc, #64]	; (80200f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80200b8:	f007 fb2f 	bl	802771a <__aeabi_atexit>
 80200bc:	4c0f      	ldr	r4, [pc, #60]	; (80200fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 80200be:	7823      	ldrb	r3, [r4, #0]
 80200c0:	f3bf 8f5b 	dmb	ish
 80200c4:	07db      	lsls	r3, r3, #31
 80200c6:	d40b      	bmi.n	80200e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80200c8:	4620      	mov	r0, r4
 80200ca:	f007 fb2d 	bl	8027728 <__cxa_guard_acquire>
 80200ce:	b138      	cbz	r0, 80200e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80200d0:	4620      	mov	r0, r4
 80200d2:	f007 fb35 	bl	8027740 <__cxa_guard_release>
 80200d6:	4a06      	ldr	r2, [pc, #24]	; (80200f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80200d8:	4909      	ldr	r1, [pc, #36]	; (8020100 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 80200da:	480a      	ldr	r0, [pc, #40]	; (8020104 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80200dc:	f007 fb1d 	bl	802771a <__aeabi_atexit>
 80200e0:	4b05      	ldr	r3, [pc, #20]	; (80200f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80200e2:	652b      	str	r3, [r5, #80]	; 0x50
 80200e4:	4b07      	ldr	r3, [pc, #28]	; (8020104 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80200e6:	656b      	str	r3, [r5, #84]	; 0x54
 80200e8:	bd38      	pop	{r3, r4, r5, pc}
 80200ea:	bf00      	nop
 80200ec:	2002be20 	.word	0x2002be20
 80200f0:	20000000 	.word	0x20000000
 80200f4:	0801df71 	.word	0x0801df71
 80200f8:	200000c4 	.word	0x200000c4
 80200fc:	2002be24 	.word	0x2002be24
 8020100:	0801df6f 	.word	0x0801df6f
 8020104:	200000c8 	.word	0x200000c8

08020108 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8020108:	b538      	push	{r3, r4, r5, lr}
 802010a:	4c15      	ldr	r4, [pc, #84]	; (8020160 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 802010c:	7823      	ldrb	r3, [r4, #0]
 802010e:	f3bf 8f5b 	dmb	ish
 8020112:	07da      	lsls	r2, r3, #31
 8020114:	4605      	mov	r5, r0
 8020116:	d40b      	bmi.n	8020130 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8020118:	4620      	mov	r0, r4
 802011a:	f007 fb05 	bl	8027728 <__cxa_guard_acquire>
 802011e:	b138      	cbz	r0, 8020130 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8020120:	4620      	mov	r0, r4
 8020122:	f007 fb0d 	bl	8027740 <__cxa_guard_release>
 8020126:	4a0f      	ldr	r2, [pc, #60]	; (8020164 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8020128:	490f      	ldr	r1, [pc, #60]	; (8020168 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 802012a:	4810      	ldr	r0, [pc, #64]	; (802016c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 802012c:	f007 faf5 	bl	802771a <__aeabi_atexit>
 8020130:	4c0f      	ldr	r4, [pc, #60]	; (8020170 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8020132:	7823      	ldrb	r3, [r4, #0]
 8020134:	f3bf 8f5b 	dmb	ish
 8020138:	07db      	lsls	r3, r3, #31
 802013a:	d40b      	bmi.n	8020154 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 802013c:	4620      	mov	r0, r4
 802013e:	f007 faf3 	bl	8027728 <__cxa_guard_acquire>
 8020142:	b138      	cbz	r0, 8020154 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8020144:	4620      	mov	r0, r4
 8020146:	f007 fafb 	bl	8027740 <__cxa_guard_release>
 802014a:	4a06      	ldr	r2, [pc, #24]	; (8020164 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 802014c:	4909      	ldr	r1, [pc, #36]	; (8020174 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 802014e:	480a      	ldr	r0, [pc, #40]	; (8020178 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8020150:	f007 fae3 	bl	802771a <__aeabi_atexit>
 8020154:	4b05      	ldr	r3, [pc, #20]	; (802016c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8020156:	64ab      	str	r3, [r5, #72]	; 0x48
 8020158:	4b07      	ldr	r3, [pc, #28]	; (8020178 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 802015a:	64eb      	str	r3, [r5, #76]	; 0x4c
 802015c:	bd38      	pop	{r3, r4, r5, pc}
 802015e:	bf00      	nop
 8020160:	2002be28 	.word	0x2002be28
 8020164:	20000000 	.word	0x20000000
 8020168:	0801df75 	.word	0x0801df75
 802016c:	200000cc 	.word	0x200000cc
 8020170:	2002be2c 	.word	0x2002be2c
 8020174:	0801df73 	.word	0x0801df73
 8020178:	200000d0 	.word	0x200000d0

0802017c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 802017c:	b538      	push	{r3, r4, r5, lr}
 802017e:	4c15      	ldr	r4, [pc, #84]	; (80201d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8020180:	7823      	ldrb	r3, [r4, #0]
 8020182:	f3bf 8f5b 	dmb	ish
 8020186:	07da      	lsls	r2, r3, #31
 8020188:	4605      	mov	r5, r0
 802018a:	d40b      	bmi.n	80201a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 802018c:	4620      	mov	r0, r4
 802018e:	f007 facb 	bl	8027728 <__cxa_guard_acquire>
 8020192:	b138      	cbz	r0, 80201a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8020194:	4620      	mov	r0, r4
 8020196:	f007 fad3 	bl	8027740 <__cxa_guard_release>
 802019a:	4a0f      	ldr	r2, [pc, #60]	; (80201d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 802019c:	490f      	ldr	r1, [pc, #60]	; (80201dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 802019e:	4810      	ldr	r0, [pc, #64]	; (80201e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80201a0:	f007 fabb 	bl	802771a <__aeabi_atexit>
 80201a4:	4c0f      	ldr	r4, [pc, #60]	; (80201e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 80201a6:	7823      	ldrb	r3, [r4, #0]
 80201a8:	f3bf 8f5b 	dmb	ish
 80201ac:	07db      	lsls	r3, r3, #31
 80201ae:	d40b      	bmi.n	80201c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80201b0:	4620      	mov	r0, r4
 80201b2:	f007 fab9 	bl	8027728 <__cxa_guard_acquire>
 80201b6:	b138      	cbz	r0, 80201c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80201b8:	4620      	mov	r0, r4
 80201ba:	f007 fac1 	bl	8027740 <__cxa_guard_release>
 80201be:	4a06      	ldr	r2, [pc, #24]	; (80201d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80201c0:	4909      	ldr	r1, [pc, #36]	; (80201e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 80201c2:	480a      	ldr	r0, [pc, #40]	; (80201ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80201c4:	f007 faa9 	bl	802771a <__aeabi_atexit>
 80201c8:	4b05      	ldr	r3, [pc, #20]	; (80201e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80201ca:	642b      	str	r3, [r5, #64]	; 0x40
 80201cc:	4b07      	ldr	r3, [pc, #28]	; (80201ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80201ce:	646b      	str	r3, [r5, #68]	; 0x44
 80201d0:	bd38      	pop	{r3, r4, r5, pc}
 80201d2:	bf00      	nop
 80201d4:	2002bdf0 	.word	0x2002bdf0
 80201d8:	20000000 	.word	0x20000000
 80201dc:	0801df79 	.word	0x0801df79
 80201e0:	20000094 	.word	0x20000094
 80201e4:	2002bdf4 	.word	0x2002bdf4
 80201e8:	0801df77 	.word	0x0801df77
 80201ec:	20000098 	.word	0x20000098

080201f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 80201f0:	b538      	push	{r3, r4, r5, lr}
 80201f2:	4c15      	ldr	r4, [pc, #84]	; (8020248 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 80201f4:	7823      	ldrb	r3, [r4, #0]
 80201f6:	f3bf 8f5b 	dmb	ish
 80201fa:	07da      	lsls	r2, r3, #31
 80201fc:	4605      	mov	r5, r0
 80201fe:	d40b      	bmi.n	8020218 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8020200:	4620      	mov	r0, r4
 8020202:	f007 fa91 	bl	8027728 <__cxa_guard_acquire>
 8020206:	b138      	cbz	r0, 8020218 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8020208:	4620      	mov	r0, r4
 802020a:	f007 fa99 	bl	8027740 <__cxa_guard_release>
 802020e:	4a0f      	ldr	r2, [pc, #60]	; (802024c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8020210:	490f      	ldr	r1, [pc, #60]	; (8020250 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8020212:	4810      	ldr	r0, [pc, #64]	; (8020254 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8020214:	f007 fa81 	bl	802771a <__aeabi_atexit>
 8020218:	4c0f      	ldr	r4, [pc, #60]	; (8020258 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 802021a:	7823      	ldrb	r3, [r4, #0]
 802021c:	f3bf 8f5b 	dmb	ish
 8020220:	07db      	lsls	r3, r3, #31
 8020222:	d40b      	bmi.n	802023c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8020224:	4620      	mov	r0, r4
 8020226:	f007 fa7f 	bl	8027728 <__cxa_guard_acquire>
 802022a:	b138      	cbz	r0, 802023c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 802022c:	4620      	mov	r0, r4
 802022e:	f007 fa87 	bl	8027740 <__cxa_guard_release>
 8020232:	4a06      	ldr	r2, [pc, #24]	; (802024c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8020234:	4909      	ldr	r1, [pc, #36]	; (802025c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8020236:	480a      	ldr	r0, [pc, #40]	; (8020260 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8020238:	f007 fa6f 	bl	802771a <__aeabi_atexit>
 802023c:	4b05      	ldr	r3, [pc, #20]	; (8020254 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 802023e:	63ab      	str	r3, [r5, #56]	; 0x38
 8020240:	4b07      	ldr	r3, [pc, #28]	; (8020260 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8020242:	63eb      	str	r3, [r5, #60]	; 0x3c
 8020244:	bd38      	pop	{r3, r4, r5, pc}
 8020246:	bf00      	nop
 8020248:	2002be10 	.word	0x2002be10
 802024c:	20000000 	.word	0x20000000
 8020250:	0801df7d 	.word	0x0801df7d
 8020254:	200000b4 	.word	0x200000b4
 8020258:	2002be14 	.word	0x2002be14
 802025c:	0801df7b 	.word	0x0801df7b
 8020260:	200000b8 	.word	0x200000b8

08020264 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8020264:	b510      	push	{r4, lr}
 8020266:	4604      	mov	r4, r0
 8020268:	f7ff ff14 	bl	8020094 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 802026c:	4620      	mov	r0, r4
 802026e:	f7ff ff85 	bl	802017c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8020272:	4620      	mov	r0, r4
 8020274:	f7ff ff48 	bl	8020108 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8020278:	4620      	mov	r0, r4
 802027a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802027e:	f7ff bfb7 	b.w	80201f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08020284 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8020284:	b538      	push	{r3, r4, r5, lr}
 8020286:	4c15      	ldr	r4, [pc, #84]	; (80202dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8020288:	7823      	ldrb	r3, [r4, #0]
 802028a:	f3bf 8f5b 	dmb	ish
 802028e:	07da      	lsls	r2, r3, #31
 8020290:	4605      	mov	r5, r0
 8020292:	d40b      	bmi.n	80202ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8020294:	4620      	mov	r0, r4
 8020296:	f007 fa47 	bl	8027728 <__cxa_guard_acquire>
 802029a:	b138      	cbz	r0, 80202ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 802029c:	4620      	mov	r0, r4
 802029e:	f007 fa4f 	bl	8027740 <__cxa_guard_release>
 80202a2:	4a0f      	ldr	r2, [pc, #60]	; (80202e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80202a4:	490f      	ldr	r1, [pc, #60]	; (80202e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80202a6:	4810      	ldr	r0, [pc, #64]	; (80202e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80202a8:	f007 fa37 	bl	802771a <__aeabi_atexit>
 80202ac:	4c0f      	ldr	r4, [pc, #60]	; (80202ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80202ae:	7823      	ldrb	r3, [r4, #0]
 80202b0:	f3bf 8f5b 	dmb	ish
 80202b4:	07db      	lsls	r3, r3, #31
 80202b6:	d40b      	bmi.n	80202d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80202b8:	4620      	mov	r0, r4
 80202ba:	f007 fa35 	bl	8027728 <__cxa_guard_acquire>
 80202be:	b138      	cbz	r0, 80202d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80202c0:	4620      	mov	r0, r4
 80202c2:	f007 fa3d 	bl	8027740 <__cxa_guard_release>
 80202c6:	4a06      	ldr	r2, [pc, #24]	; (80202e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80202c8:	4909      	ldr	r1, [pc, #36]	; (80202f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80202ca:	480a      	ldr	r0, [pc, #40]	; (80202f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80202cc:	f007 fa25 	bl	802771a <__aeabi_atexit>
 80202d0:	4b05      	ldr	r3, [pc, #20]	; (80202e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80202d2:	662b      	str	r3, [r5, #96]	; 0x60
 80202d4:	4b07      	ldr	r3, [pc, #28]	; (80202f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80202d6:	666b      	str	r3, [r5, #100]	; 0x64
 80202d8:	bd38      	pop	{r3, r4, r5, pc}
 80202da:	bf00      	nop
 80202dc:	2002bdf8 	.word	0x2002bdf8
 80202e0:	20000000 	.word	0x20000000
 80202e4:	0801df69 	.word	0x0801df69
 80202e8:	2000009c 	.word	0x2000009c
 80202ec:	2002bdfc 	.word	0x2002bdfc
 80202f0:	0801df67 	.word	0x0801df67
 80202f4:	200000a0 	.word	0x200000a0

080202f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80202f8:	b538      	push	{r3, r4, r5, lr}
 80202fa:	4c15      	ldr	r4, [pc, #84]	; (8020350 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80202fc:	7823      	ldrb	r3, [r4, #0]
 80202fe:	f3bf 8f5b 	dmb	ish
 8020302:	07da      	lsls	r2, r3, #31
 8020304:	4605      	mov	r5, r0
 8020306:	d40b      	bmi.n	8020320 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8020308:	4620      	mov	r0, r4
 802030a:	f007 fa0d 	bl	8027728 <__cxa_guard_acquire>
 802030e:	b138      	cbz	r0, 8020320 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8020310:	4620      	mov	r0, r4
 8020312:	f007 fa15 	bl	8027740 <__cxa_guard_release>
 8020316:	4a0f      	ldr	r2, [pc, #60]	; (8020354 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8020318:	490f      	ldr	r1, [pc, #60]	; (8020358 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 802031a:	4810      	ldr	r0, [pc, #64]	; (802035c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 802031c:	f007 f9fd 	bl	802771a <__aeabi_atexit>
 8020320:	4c0f      	ldr	r4, [pc, #60]	; (8020360 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8020322:	7823      	ldrb	r3, [r4, #0]
 8020324:	f3bf 8f5b 	dmb	ish
 8020328:	07db      	lsls	r3, r3, #31
 802032a:	d40b      	bmi.n	8020344 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 802032c:	4620      	mov	r0, r4
 802032e:	f007 f9fb 	bl	8027728 <__cxa_guard_acquire>
 8020332:	b138      	cbz	r0, 8020344 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8020334:	4620      	mov	r0, r4
 8020336:	f007 fa03 	bl	8027740 <__cxa_guard_release>
 802033a:	4a06      	ldr	r2, [pc, #24]	; (8020354 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 802033c:	4909      	ldr	r1, [pc, #36]	; (8020364 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 802033e:	480a      	ldr	r0, [pc, #40]	; (8020368 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8020340:	f007 f9eb 	bl	802771a <__aeabi_atexit>
 8020344:	4b05      	ldr	r3, [pc, #20]	; (802035c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8020346:	65ab      	str	r3, [r5, #88]	; 0x58
 8020348:	4b07      	ldr	r3, [pc, #28]	; (8020368 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 802034a:	65eb      	str	r3, [r5, #92]	; 0x5c
 802034c:	bd38      	pop	{r3, r4, r5, pc}
 802034e:	bf00      	nop
 8020350:	2002bdd0 	.word	0x2002bdd0
 8020354:	20000000 	.word	0x20000000
 8020358:	0801df6d 	.word	0x0801df6d
 802035c:	20000074 	.word	0x20000074
 8020360:	2002bdd4 	.word	0x2002bdd4
 8020364:	0801df6b 	.word	0x0801df6b
 8020368:	20000078 	.word	0x20000078

0802036c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 802036c:	b510      	push	{r4, lr}
 802036e:	4604      	mov	r4, r0
 8020370:	f7ff ff88 	bl	8020284 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8020374:	4620      	mov	r0, r4
 8020376:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802037a:	f7ff bfbd 	b.w	80202f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08020380 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8020380:	b538      	push	{r3, r4, r5, lr}
 8020382:	4c15      	ldr	r4, [pc, #84]	; (80203d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8020384:	7823      	ldrb	r3, [r4, #0]
 8020386:	f3bf 8f5b 	dmb	ish
 802038a:	07da      	lsls	r2, r3, #31
 802038c:	4605      	mov	r5, r0
 802038e:	d40b      	bmi.n	80203a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8020390:	4620      	mov	r0, r4
 8020392:	f007 f9c9 	bl	8027728 <__cxa_guard_acquire>
 8020396:	b138      	cbz	r0, 80203a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8020398:	4620      	mov	r0, r4
 802039a:	f007 f9d1 	bl	8027740 <__cxa_guard_release>
 802039e:	4a0f      	ldr	r2, [pc, #60]	; (80203dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80203a0:	490f      	ldr	r1, [pc, #60]	; (80203e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80203a2:	4810      	ldr	r0, [pc, #64]	; (80203e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80203a4:	f007 f9b9 	bl	802771a <__aeabi_atexit>
 80203a8:	4c0f      	ldr	r4, [pc, #60]	; (80203e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80203aa:	7823      	ldrb	r3, [r4, #0]
 80203ac:	f3bf 8f5b 	dmb	ish
 80203b0:	07db      	lsls	r3, r3, #31
 80203b2:	d40b      	bmi.n	80203cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80203b4:	4620      	mov	r0, r4
 80203b6:	f007 f9b7 	bl	8027728 <__cxa_guard_acquire>
 80203ba:	b138      	cbz	r0, 80203cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80203bc:	4620      	mov	r0, r4
 80203be:	f007 f9bf 	bl	8027740 <__cxa_guard_release>
 80203c2:	4a06      	ldr	r2, [pc, #24]	; (80203dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80203c4:	4909      	ldr	r1, [pc, #36]	; (80203ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80203c6:	480a      	ldr	r0, [pc, #40]	; (80203f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80203c8:	f007 f9a7 	bl	802771a <__aeabi_atexit>
 80203cc:	4b05      	ldr	r3, [pc, #20]	; (80203e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80203ce:	672b      	str	r3, [r5, #112]	; 0x70
 80203d0:	4b07      	ldr	r3, [pc, #28]	; (80203f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80203d2:	676b      	str	r3, [r5, #116]	; 0x74
 80203d4:	bd38      	pop	{r3, r4, r5, pc}
 80203d6:	bf00      	nop
 80203d8:	2002bdc8 	.word	0x2002bdc8
 80203dc:	20000000 	.word	0x20000000
 80203e0:	0801df61 	.word	0x0801df61
 80203e4:	2000006c 	.word	0x2000006c
 80203e8:	2002bdcc 	.word	0x2002bdcc
 80203ec:	0801df5f 	.word	0x0801df5f
 80203f0:	20000070 	.word	0x20000070

080203f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80203f4:	b538      	push	{r3, r4, r5, lr}
 80203f6:	4c15      	ldr	r4, [pc, #84]	; (802044c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80203f8:	7823      	ldrb	r3, [r4, #0]
 80203fa:	f3bf 8f5b 	dmb	ish
 80203fe:	07da      	lsls	r2, r3, #31
 8020400:	4605      	mov	r5, r0
 8020402:	d40b      	bmi.n	802041c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8020404:	4620      	mov	r0, r4
 8020406:	f007 f98f 	bl	8027728 <__cxa_guard_acquire>
 802040a:	b138      	cbz	r0, 802041c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 802040c:	4620      	mov	r0, r4
 802040e:	f007 f997 	bl	8027740 <__cxa_guard_release>
 8020412:	4a0f      	ldr	r2, [pc, #60]	; (8020450 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8020414:	490f      	ldr	r1, [pc, #60]	; (8020454 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8020416:	4810      	ldr	r0, [pc, #64]	; (8020458 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8020418:	f007 f97f 	bl	802771a <__aeabi_atexit>
 802041c:	4c0f      	ldr	r4, [pc, #60]	; (802045c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 802041e:	7823      	ldrb	r3, [r4, #0]
 8020420:	f3bf 8f5b 	dmb	ish
 8020424:	07db      	lsls	r3, r3, #31
 8020426:	d40b      	bmi.n	8020440 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8020428:	4620      	mov	r0, r4
 802042a:	f007 f97d 	bl	8027728 <__cxa_guard_acquire>
 802042e:	b138      	cbz	r0, 8020440 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8020430:	4620      	mov	r0, r4
 8020432:	f007 f985 	bl	8027740 <__cxa_guard_release>
 8020436:	4a06      	ldr	r2, [pc, #24]	; (8020450 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8020438:	4909      	ldr	r1, [pc, #36]	; (8020460 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 802043a:	480a      	ldr	r0, [pc, #40]	; (8020464 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 802043c:	f007 f96d 	bl	802771a <__aeabi_atexit>
 8020440:	4b05      	ldr	r3, [pc, #20]	; (8020458 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8020442:	66ab      	str	r3, [r5, #104]	; 0x68
 8020444:	4b07      	ldr	r3, [pc, #28]	; (8020464 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8020446:	66eb      	str	r3, [r5, #108]	; 0x6c
 8020448:	bd38      	pop	{r3, r4, r5, pc}
 802044a:	bf00      	nop
 802044c:	2002bdc0 	.word	0x2002bdc0
 8020450:	20000000 	.word	0x20000000
 8020454:	0801df65 	.word	0x0801df65
 8020458:	20000064 	.word	0x20000064
 802045c:	2002bdc4 	.word	0x2002bdc4
 8020460:	0801df63 	.word	0x0801df63
 8020464:	20000068 	.word	0x20000068

08020468 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8020468:	b510      	push	{r4, lr}
 802046a:	4604      	mov	r4, r0
 802046c:	f7ff ff88 	bl	8020380 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8020470:	4620      	mov	r0, r4
 8020472:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020476:	f7ff bfbd 	b.w	80203f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0802047a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 802047a:	b510      	push	{r4, lr}
 802047c:	4604      	mov	r4, r0
 802047e:	f7ff fff3 	bl	8020468 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8020482:	4620      	mov	r0, r4
 8020484:	f7ff ff72 	bl	802036c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8020488:	4620      	mov	r0, r4
 802048a:	f7ff fdf9 	bl	8020080 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 802048e:	4620      	mov	r0, r4
 8020490:	f7ff fcfa 	bl	801fe88 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8020494:	4620      	mov	r0, r4
 8020496:	f7ff fd75 	bl	801ff84 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 802049a:	4620      	mov	r0, r4
 802049c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80204a0:	f7ff bee0 	b.w	8020264 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080204a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80204a4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80204a8:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 80204ac:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 80204b0:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80204b4:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 80204b8:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 80204bc:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80204c0:	8808      	ldrh	r0, [r1, #0]
 80204c2:	fb0e 4708 	mla	r7, lr, r8, r4
 80204c6:	f1be 0f00 	cmp.w	lr, #0
 80204ca:	eb02 0a07 	add.w	sl, r2, r7
 80204ce:	db37      	blt.n	8020540 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 80204d0:	45f3      	cmp	fp, lr
 80204d2:	dd35      	ble.n	8020540 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 80204d4:	2c00      	cmp	r4, #0
 80204d6:	db31      	blt.n	802053c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80204d8:	45a0      	cmp	r8, r4
 80204da:	dd2f      	ble.n	802053c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80204dc:	5dd2      	ldrb	r2, [r2, r7]
 80204de:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 80204e2:	1c62      	adds	r2, r4, #1
 80204e4:	d42f      	bmi.n	8020546 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80204e6:	4590      	cmp	r8, r2
 80204e8:	dd2d      	ble.n	8020546 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80204ea:	b366      	cbz	r6, 8020546 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80204ec:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80204f0:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80204f4:	f11e 0e01 	adds.w	lr, lr, #1
 80204f8:	d429      	bmi.n	802054e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 80204fa:	45f3      	cmp	fp, lr
 80204fc:	dd27      	ble.n	802054e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 80204fe:	f1bc 0f00 	cmp.w	ip, #0
 8020502:	f000 80a1 	beq.w	8020648 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a4>
 8020506:	2c00      	cmp	r4, #0
 8020508:	db1f      	blt.n	802054a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 802050a:	45a0      	cmp	r8, r4
 802050c:	dd1d      	ble.n	802054a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 802050e:	f81a 2008 	ldrb.w	r2, [sl, r8]
 8020512:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 8020516:	3401      	adds	r4, #1
 8020518:	d41c      	bmi.n	8020554 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 802051a:	45a0      	cmp	r8, r4
 802051c:	dd1a      	ble.n	8020554 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 802051e:	b1de      	cbz	r6, 8020558 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 8020520:	44d0      	add	r8, sl
 8020522:	f898 2001 	ldrb.w	r2, [r8, #1]
 8020526:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 802052a:	2e0f      	cmp	r6, #15
 802052c:	d915      	bls.n	802055a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 802052e:	4b49      	ldr	r3, [pc, #292]	; (8020654 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 8020530:	4a49      	ldr	r2, [pc, #292]	; (8020658 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 8020532:	484a      	ldr	r0, [pc, #296]	; (802065c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 8020534:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 8020538:	f007 f922 	bl	8027780 <__assert_func>
 802053c:	4681      	mov	r9, r0
 802053e:	e7d0      	b.n	80204e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 8020540:	4607      	mov	r7, r0
 8020542:	4681      	mov	r9, r0
 8020544:	e7d6      	b.n	80204f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8020546:	4607      	mov	r7, r0
 8020548:	e7d4      	b.n	80204f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 802054a:	4686      	mov	lr, r0
 802054c:	e7e3      	b.n	8020516 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 802054e:	4603      	mov	r3, r0
 8020550:	4686      	mov	lr, r0
 8020552:	e7ea      	b.n	802052a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8020554:	4603      	mov	r3, r0
 8020556:	e7e8      	b.n	802052a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8020558:	4603      	mov	r3, r0
 802055a:	f1bc 0f0f 	cmp.w	ip, #15
 802055e:	d8e6      	bhi.n	802052e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8020560:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8020564:	fb16 f80c 	smulbb	r8, r6, ip
 8020568:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802056c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8020570:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8020574:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8020578:	ea44 0909 	orr.w	r9, r4, r9
 802057c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020580:	f1cc 0410 	rsb	r4, ip, #16
 8020584:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8020588:	1ba4      	subs	r4, r4, r6
 802058a:	041a      	lsls	r2, r3, #16
 802058c:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8020590:	ea4a 0707 	orr.w	r7, sl, r7
 8020594:	4377      	muls	r7, r6
 8020596:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802059a:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 802059e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80205a2:	fb04 7409 	mla	r4, r4, r9, r7
 80205a6:	4313      	orrs	r3, r2
 80205a8:	ea4f 420e 	mov.w	r2, lr, lsl #16
 80205ac:	fb08 4303 	mla	r3, r8, r3, r4
 80205b0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80205b4:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 80205b8:	4322      	orrs	r2, r4
 80205ba:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 80205be:	fb0c 3202 	mla	r2, ip, r2, r3
 80205c2:	0d53      	lsrs	r3, r2, #21
 80205c4:	0952      	lsrs	r2, r2, #5
 80205c6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80205ca:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80205ce:	431a      	orrs	r2, r3
 80205d0:	b293      	uxth	r3, r2
 80205d2:	b2af      	uxth	r7, r5
 80205d4:	1202      	asrs	r2, r0, #8
 80205d6:	43ed      	mvns	r5, r5
 80205d8:	b2ed      	uxtb	r5, r5
 80205da:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80205de:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80205e2:	fb12 f205 	smulbb	r2, r2, r5
 80205e6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80205ea:	fb0c 2c07 	mla	ip, ip, r7, r2
 80205ee:	00dc      	lsls	r4, r3, #3
 80205f0:	10da      	asrs	r2, r3, #3
 80205f2:	10c6      	asrs	r6, r0, #3
 80205f4:	00c3      	lsls	r3, r0, #3
 80205f6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80205fa:	b2db      	uxtb	r3, r3
 80205fc:	fb16 f605 	smulbb	r6, r6, r5
 8020600:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020604:	b2e4      	uxtb	r4, r4
 8020606:	fb13 f305 	smulbb	r3, r3, r5
 802060a:	fa1f fc8c 	uxth.w	ip, ip
 802060e:	fb02 6207 	mla	r2, r2, r7, r6
 8020612:	fb04 3307 	mla	r3, r4, r7, r3
 8020616:	b296      	uxth	r6, r2
 8020618:	b29a      	uxth	r2, r3
 802061a:	f10c 0301 	add.w	r3, ip, #1
 802061e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8020622:	1c53      	adds	r3, r2, #1
 8020624:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020628:	1c72      	adds	r2, r6, #1
 802062a:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 802062e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8020632:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020636:	0952      	lsrs	r2, r2, #5
 8020638:	ea43 030c 	orr.w	r3, r3, ip
 802063c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020640:	4313      	orrs	r3, r2
 8020642:	800b      	strh	r3, [r1, #0]
 8020644:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020648:	2e0f      	cmp	r6, #15
 802064a:	f63f af70 	bhi.w	802052e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 802064e:	4603      	mov	r3, r0
 8020650:	4686      	mov	lr, r0
 8020652:	e785      	b.n	8020560 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 8020654:	0802d4b6 	.word	0x0802d4b6
 8020658:	0802db2f 	.word	0x0802db2f
 802065c:	0802d53a 	.word	0x0802d53a

08020660 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020660:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020664:	ed2d 8b08 	vpush	{d8-d11}
 8020668:	b099      	sub	sp, #100	; 0x64
 802066a:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 802066e:	9215      	str	r2, [sp, #84]	; 0x54
 8020670:	9309      	str	r3, [sp, #36]	; 0x24
 8020672:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8020674:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 8020678:	930d      	str	r3, [sp, #52]	; 0x34
 802067a:	910c      	str	r1, [sp, #48]	; 0x30
 802067c:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8020680:	9016      	str	r0, [sp, #88]	; 0x58
 8020682:	6850      	ldr	r0, [r2, #4]
 8020684:	6812      	ldr	r2, [r2, #0]
 8020686:	fb00 1303 	mla	r3, r0, r3, r1
 802068a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 802068e:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8020690:	681b      	ldr	r3, [r3, #0]
 8020692:	930b      	str	r3, [sp, #44]	; 0x2c
 8020694:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8020696:	685e      	ldr	r6, [r3, #4]
 8020698:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802069a:	43db      	mvns	r3, r3
 802069c:	b2db      	uxtb	r3, r3
 802069e:	eeb0 aa40 	vmov.f32	s20, s0
 80206a2:	eef0 9a60 	vmov.f32	s19, s1
 80206a6:	eeb0 9a41 	vmov.f32	s18, s2
 80206aa:	eeb0 8a62 	vmov.f32	s16, s5
 80206ae:	eef0 8a43 	vmov.f32	s17, s6
 80206b2:	eef0 ba44 	vmov.f32	s23, s8
 80206b6:	eeb0 ba64 	vmov.f32	s22, s9
 80206ba:	eef0 aa45 	vmov.f32	s21, s10
 80206be:	3604      	adds	r6, #4
 80206c0:	930a      	str	r3, [sp, #40]	; 0x28
 80206c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80206c4:	2b00      	cmp	r3, #0
 80206c6:	dc03      	bgt.n	80206d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80206c8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80206ca:	2b00      	cmp	r3, #0
 80206cc:	f340 8225 	ble.w	8020b1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 80206d0:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80206d2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80206d6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80206da:	1e48      	subs	r0, r1, #1
 80206dc:	1e57      	subs	r7, r2, #1
 80206de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80206e0:	2b00      	cmp	r3, #0
 80206e2:	f340 80e3 	ble.w	80208ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24c>
 80206e6:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 80206ea:	ea4f 4325 	mov.w	r3, r5, asr #16
 80206ee:	d406      	bmi.n	80206fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80206f0:	4584      	cmp	ip, r0
 80206f2:	da04      	bge.n	80206fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80206f4:	2b00      	cmp	r3, #0
 80206f6:	db02      	blt.n	80206fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80206f8:	42bb      	cmp	r3, r7
 80206fa:	f2c0 80d8 	blt.w	80208ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 80206fe:	f11c 0c01 	adds.w	ip, ip, #1
 8020702:	f100 80c9 	bmi.w	8020898 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8020706:	4561      	cmp	r1, ip
 8020708:	f2c0 80c6 	blt.w	8020898 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 802070c:	3301      	adds	r3, #1
 802070e:	f100 80c3 	bmi.w	8020898 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8020712:	429a      	cmp	r2, r3
 8020714:	f2c0 80c0 	blt.w	8020898 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8020718:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 802071c:	4647      	mov	r7, r8
 802071e:	f1bb 0f00 	cmp.w	fp, #0
 8020722:	f340 80e3 	ble.w	80208ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8020726:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8020728:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 802072a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802072e:	689b      	ldr	r3, [r3, #8]
 8020730:	ea5f 422a 	movs.w	r2, sl, asr #16
 8020734:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020738:	f3ca 3003 	ubfx	r0, sl, #12, #4
 802073c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020740:	f100 8121 	bmi.w	8020986 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8020744:	f103 39ff 	add.w	r9, r3, #4294967295
 8020748:	454a      	cmp	r2, r9
 802074a:	f280 811c 	bge.w	8020986 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 802074e:	f1bc 0f00 	cmp.w	ip, #0
 8020752:	f2c0 8118 	blt.w	8020986 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8020756:	f10e 39ff 	add.w	r9, lr, #4294967295
 802075a:	45cc      	cmp	ip, r9
 802075c:	f280 8113 	bge.w	8020986 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8020760:	b21b      	sxth	r3, r3
 8020762:	fb0c 2203 	mla	r2, ip, r3, r2
 8020766:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020768:	eb04 0902 	add.w	r9, r4, r2
 802076c:	5ca2      	ldrb	r2, [r4, r2]
 802076e:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8020772:	2800      	cmp	r0, #0
 8020774:	f000 80fe 	beq.w	8020974 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8020778:	f899 2001 	ldrb.w	r2, [r9, #1]
 802077c:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8020780:	9211      	str	r2, [sp, #68]	; 0x44
 8020782:	b151      	cbz	r1, 802079a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8020784:	eb09 0203 	add.w	r2, r9, r3
 8020788:	f819 3003 	ldrb.w	r3, [r9, r3]
 802078c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020790:	930f      	str	r3, [sp, #60]	; 0x3c
 8020792:	7853      	ldrb	r3, [r2, #1]
 8020794:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020798:	9312      	str	r3, [sp, #72]	; 0x48
 802079a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802079c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802079e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80207a2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80207a6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80207aa:	ea4c 0c03 	orr.w	ip, ip, r3
 80207ae:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80207b0:	041b      	lsls	r3, r3, #16
 80207b2:	fb10 f201 	smulbb	r2, r0, r1
 80207b6:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80207ba:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80207be:	10d2      	asrs	r2, r2, #3
 80207c0:	4323      	orrs	r3, r4
 80207c2:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 80207c6:	4353      	muls	r3, r2
 80207c8:	fb09 330c 	mla	r3, r9, ip, r3
 80207cc:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80207d0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80207d4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80207d8:	ea4c 0e0e 	orr.w	lr, ip, lr
 80207dc:	f1c1 0c10 	rsb	ip, r1, #16
 80207e0:	ebac 0c00 	sub.w	ip, ip, r0
 80207e4:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80207e8:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80207ec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80207ee:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80207f0:	0418      	lsls	r0, r3, #16
 80207f2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80207f6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80207fa:	4318      	orrs	r0, r3
 80207fc:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8020800:	fb02 c200 	mla	r2, r2, r0, ip
 8020804:	0d53      	lsrs	r3, r2, #21
 8020806:	0952      	lsrs	r2, r2, #5
 8020808:	8838      	ldrh	r0, [r7, #0]
 802080a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802080e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020812:	431a      	orrs	r2, r3
 8020814:	b292      	uxth	r2, r2
 8020816:	1201      	asrs	r1, r0, #8
 8020818:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 802081c:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8020820:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020824:	fb11 f104 	smulbb	r1, r1, r4
 8020828:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 802082c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8020830:	00c0      	lsls	r0, r0, #3
 8020832:	fb0c 1c03 	mla	ip, ip, r3, r1
 8020836:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 802083a:	10d1      	asrs	r1, r2, #3
 802083c:	b2c0      	uxtb	r0, r0
 802083e:	00d2      	lsls	r2, r2, #3
 8020840:	b2d2      	uxtb	r2, r2
 8020842:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020846:	fb1e fe04 	smulbb	lr, lr, r4
 802084a:	fb10 f004 	smulbb	r0, r0, r4
 802084e:	fa1f fc8c 	uxth.w	ip, ip
 8020852:	fb01 e103 	mla	r1, r1, r3, lr
 8020856:	fb02 0303 	mla	r3, r2, r3, r0
 802085a:	b29a      	uxth	r2, r3
 802085c:	f10c 0301 	add.w	r3, ip, #1
 8020860:	b289      	uxth	r1, r1
 8020862:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8020866:	1c53      	adds	r3, r2, #1
 8020868:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802086c:	1c4a      	adds	r2, r1, #1
 802086e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020872:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8020876:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802087a:	0949      	lsrs	r1, r1, #5
 802087c:	ea43 030c 	orr.w	r3, r3, ip
 8020880:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020884:	430b      	orrs	r3, r1
 8020886:	803b      	strh	r3, [r7, #0]
 8020888:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 802088a:	449a      	add	sl, r3
 802088c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802088e:	3702      	adds	r7, #2
 8020890:	441d      	add	r5, r3
 8020892:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020896:	e742      	b.n	802071e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8020898:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 802089a:	449a      	add	sl, r3
 802089c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802089e:	441d      	add	r5, r3
 80208a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80208a2:	3b01      	subs	r3, #1
 80208a4:	9309      	str	r3, [sp, #36]	; 0x24
 80208a6:	f108 0802 	add.w	r8, r8, #2
 80208aa:	e718      	b.n	80206de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80208ac:	d023      	beq.n	80208f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 80208ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80208b0:	982d      	ldr	r0, [sp, #180]	; 0xb4
 80208b2:	3b01      	subs	r3, #1
 80208b4:	fb00 a003 	mla	r0, r0, r3, sl
 80208b8:	1400      	asrs	r0, r0, #16
 80208ba:	f53f af2d 	bmi.w	8020718 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80208be:	3901      	subs	r1, #1
 80208c0:	4288      	cmp	r0, r1
 80208c2:	f6bf af29 	bge.w	8020718 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80208c6:	992e      	ldr	r1, [sp, #184]	; 0xb8
 80208c8:	fb01 5303 	mla	r3, r1, r3, r5
 80208cc:	141b      	asrs	r3, r3, #16
 80208ce:	f53f af23 	bmi.w	8020718 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80208d2:	3a01      	subs	r2, #1
 80208d4:	4293      	cmp	r3, r2
 80208d6:	f6bf af1f 	bge.w	8020718 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80208da:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80208de:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 80208e2:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 80208e6:	f1be 0f00 	cmp.w	lr, #0
 80208ea:	dc6c      	bgt.n	80209c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x366>
 80208ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80208ee:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80208f2:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80208f6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80208f8:	2b00      	cmp	r3, #0
 80208fa:	f340 810e 	ble.w	8020b1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 80208fe:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8020902:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020906:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802090a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802090c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8020910:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8020914:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8020918:	eef0 6a48 	vmov.f32	s13, s16
 802091c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8020920:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020924:	ee37 8a48 	vsub.f32	s16, s14, s16
 8020928:	ee16 aa90 	vmov	sl, s13
 802092c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8020930:	eef0 6a68 	vmov.f32	s13, s17
 8020934:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8020938:	ee18 2a10 	vmov	r2, s16
 802093c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8020940:	fb92 f3f3 	sdiv	r3, r2, r3
 8020944:	ee18 2a90 	vmov	r2, s17
 8020948:	932d      	str	r3, [sp, #180]	; 0xb4
 802094a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802094c:	fb92 f3f3 	sdiv	r3, r2, r3
 8020950:	932e      	str	r3, [sp, #184]	; 0xb8
 8020952:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020954:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8020956:	3b01      	subs	r3, #1
 8020958:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802095c:	930c      	str	r3, [sp, #48]	; 0x30
 802095e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020960:	bf08      	it	eq
 8020962:	4613      	moveq	r3, r2
 8020964:	ee16 5a90 	vmov	r5, s13
 8020968:	9309      	str	r3, [sp, #36]	; 0x24
 802096a:	eef0 8a67 	vmov.f32	s17, s15
 802096e:	eeb0 8a47 	vmov.f32	s16, s14
 8020972:	e6a6      	b.n	80206c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8020974:	2900      	cmp	r1, #0
 8020976:	f43f af10 	beq.w	802079a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 802097a:	f819 3003 	ldrb.w	r3, [r9, r3]
 802097e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020982:	930f      	str	r3, [sp, #60]	; 0x3c
 8020984:	e709      	b.n	802079a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8020986:	f112 0901 	adds.w	r9, r2, #1
 802098a:	f53f af7d 	bmi.w	8020888 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 802098e:	454b      	cmp	r3, r9
 8020990:	f6ff af7a 	blt.w	8020888 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8020994:	f11c 0901 	adds.w	r9, ip, #1
 8020998:	f53f af76 	bmi.w	8020888 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 802099c:	45ce      	cmp	lr, r9
 802099e:	f6ff af73 	blt.w	8020888 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80209a2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80209a4:	9202      	str	r2, [sp, #8]
 80209a6:	b21b      	sxth	r3, r3
 80209a8:	fa0f f28e 	sxth.w	r2, lr
 80209ac:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80209b0:	e9cd c003 	strd	ip, r0, [sp, #12]
 80209b4:	9201      	str	r2, [sp, #4]
 80209b6:	9300      	str	r3, [sp, #0]
 80209b8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80209ba:	9816      	ldr	r0, [sp, #88]	; 0x58
 80209bc:	4633      	mov	r3, r6
 80209be:	4639      	mov	r1, r7
 80209c0:	f7ff fd70 	bl	80204a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 80209c4:	e760      	b.n	8020888 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80209c6:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80209c8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80209ca:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80209ce:	ea4f 422a 	mov.w	r2, sl, asr #16
 80209d2:	1429      	asrs	r1, r5, #16
 80209d4:	fb03 2101 	mla	r1, r3, r1, r2
 80209d8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80209da:	440a      	add	r2, r1
 80209dc:	5c61      	ldrb	r1, [r4, r1]
 80209de:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 80209e2:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80209e6:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 80209ea:	f1bc 0f00 	cmp.w	ip, #0
 80209ee:	f000 808c 	beq.w	8020b0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 80209f2:	7857      	ldrb	r7, [r2, #1]
 80209f4:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 80209f8:	9413      	str	r4, [sp, #76]	; 0x4c
 80209fa:	b140      	cbz	r0, 8020a0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80209fc:	18d7      	adds	r7, r2, r3
 80209fe:	5cd3      	ldrb	r3, [r2, r3]
 8020a00:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020a04:	9310      	str	r3, [sp, #64]	; 0x40
 8020a06:	787b      	ldrb	r3, [r7, #1]
 8020a08:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020a0c:	9314      	str	r3, [sp, #80]	; 0x50
 8020a0e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8020a10:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020a12:	fb1c f200 	smulbb	r2, ip, r0
 8020a16:	041f      	lsls	r7, r3, #16
 8020a18:	10d2      	asrs	r2, r2, #3
 8020a1a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020a1e:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8020a22:	431f      	orrs	r7, r3
 8020a24:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8020a28:	9317      	str	r3, [sp, #92]	; 0x5c
 8020a2a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8020a2c:	041b      	lsls	r3, r3, #16
 8020a2e:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8020a32:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020a36:	ea43 030b 	orr.w	r3, r3, fp
 8020a3a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020a3c:	4353      	muls	r3, r2
 8020a3e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8020a42:	fb04 3707 	mla	r7, r4, r7, r3
 8020a46:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8020a4a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8020a4e:	ea43 0b01 	orr.w	fp, r3, r1
 8020a52:	f1c0 0110 	rsb	r1, r0, #16
 8020a56:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020a58:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020a5a:	eba1 0c0c 	sub.w	ip, r1, ip
 8020a5e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8020a62:	fb0c 770b 	mla	r7, ip, fp, r7
 8020a66:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020a6a:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8020a6e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020a72:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8020a76:	ea4c 0c0b 	orr.w	ip, ip, fp
 8020a7a:	fb02 770c 	mla	r7, r2, ip, r7
 8020a7e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8020a80:	0d79      	lsrs	r1, r7, #21
 8020a82:	097f      	lsrs	r7, r7, #5
 8020a84:	8812      	ldrh	r2, [r2, #0]
 8020a86:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020a8a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8020a8e:	430f      	orrs	r7, r1
 8020a90:	b2bb      	uxth	r3, r7
 8020a92:	1211      	asrs	r1, r2, #8
 8020a94:	1218      	asrs	r0, r3, #8
 8020a96:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020a9a:	fb11 f104 	smulbb	r1, r1, r4
 8020a9e:	10d7      	asrs	r7, r2, #3
 8020aa0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020aa4:	00d2      	lsls	r2, r2, #3
 8020aa6:	fb00 1009 	mla	r0, r0, r9, r1
 8020aaa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020aae:	10d9      	asrs	r1, r3, #3
 8020ab0:	b2d2      	uxtb	r2, r2
 8020ab2:	00db      	lsls	r3, r3, #3
 8020ab4:	fb17 f704 	smulbb	r7, r7, r4
 8020ab8:	fb12 f204 	smulbb	r2, r2, r4
 8020abc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020ac0:	b2db      	uxtb	r3, r3
 8020ac2:	b280      	uxth	r0, r0
 8020ac4:	fb01 7109 	mla	r1, r1, r9, r7
 8020ac8:	fb03 2309 	mla	r3, r3, r9, r2
 8020acc:	b29b      	uxth	r3, r3
 8020ace:	b289      	uxth	r1, r1
 8020ad0:	1c42      	adds	r2, r0, #1
 8020ad2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020ad6:	1c4f      	adds	r7, r1, #1
 8020ad8:	1c5a      	adds	r2, r3, #1
 8020ada:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8020ade:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8020ae2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8020ae6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020aea:	0949      	lsrs	r1, r1, #5
 8020aec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020aee:	4310      	orrs	r0, r2
 8020af0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020af4:	4308      	orrs	r0, r1
 8020af6:	f823 0b02 	strh.w	r0, [r3], #2
 8020afa:	930e      	str	r3, [sp, #56]	; 0x38
 8020afc:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8020afe:	449a      	add	sl, r3
 8020b00:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8020b02:	f10e 3eff 	add.w	lr, lr, #4294967295
 8020b06:	441d      	add	r5, r3
 8020b08:	e6ed      	b.n	80208e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 8020b0a:	2800      	cmp	r0, #0
 8020b0c:	f43f af7f 	beq.w	8020a0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8020b10:	5cd3      	ldrb	r3, [r2, r3]
 8020b12:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020b16:	9310      	str	r3, [sp, #64]	; 0x40
 8020b18:	e779      	b.n	8020a0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8020b1a:	b019      	add	sp, #100	; 0x64
 8020b1c:	ecbd 8b08 	vpop	{d8-d11}
 8020b20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020b24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8020b24:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020b28:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 8020b2c:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8020b30:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8020b34:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8020b38:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8020b3c:	8808      	ldrh	r0, [r1, #0]
 8020b3e:	fb06 570e 	mla	r7, r6, lr, r5
 8020b42:	2e00      	cmp	r6, #0
 8020b44:	eb02 0807 	add.w	r8, r2, r7
 8020b48:	db38      	blt.n	8020bbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8020b4a:	45b1      	cmp	r9, r6
 8020b4c:	dd36      	ble.n	8020bbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8020b4e:	2d00      	cmp	r5, #0
 8020b50:	db32      	blt.n	8020bb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8020b52:	45ae      	cmp	lr, r5
 8020b54:	dd30      	ble.n	8020bb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8020b56:	5dd2      	ldrb	r2, [r2, r7]
 8020b58:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8020b5c:	1c6a      	adds	r2, r5, #1
 8020b5e:	d430      	bmi.n	8020bc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8020b60:	4596      	cmp	lr, r2
 8020b62:	dd2e      	ble.n	8020bc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8020b64:	b36c      	cbz	r4, 8020bc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8020b66:	f898 2001 	ldrb.w	r2, [r8, #1]
 8020b6a:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8020b6e:	3601      	adds	r6, #1
 8020b70:	d42b      	bmi.n	8020bca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8020b72:	45b1      	cmp	r9, r6
 8020b74:	dd29      	ble.n	8020bca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8020b76:	f1bc 0f00 	cmp.w	ip, #0
 8020b7a:	d028      	beq.n	8020bce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8020b7c:	2d00      	cmp	r5, #0
 8020b7e:	db22      	blt.n	8020bc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8020b80:	45ae      	cmp	lr, r5
 8020b82:	dd20      	ble.n	8020bc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8020b84:	f818 600e 	ldrb.w	r6, [r8, lr]
 8020b88:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 8020b8c:	3501      	adds	r5, #1
 8020b8e:	d407      	bmi.n	8020ba0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8020b90:	45ae      	cmp	lr, r5
 8020b92:	dd05      	ble.n	8020ba0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8020b94:	b134      	cbz	r4, 8020ba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8020b96:	44c6      	add	lr, r8
 8020b98:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8020b9c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8020ba0:	2c0f      	cmp	r4, #15
 8020ba2:	d802      	bhi.n	8020baa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8020ba4:	f1bc 0f0f 	cmp.w	ip, #15
 8020ba8:	d914      	bls.n	8020bd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 8020baa:	4b26      	ldr	r3, [pc, #152]	; (8020c44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8020bac:	4a26      	ldr	r2, [pc, #152]	; (8020c48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 8020bae:	4827      	ldr	r0, [pc, #156]	; (8020c4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 8020bb0:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 8020bb4:	f006 fde4 	bl	8027780 <__assert_func>
 8020bb8:	4607      	mov	r7, r0
 8020bba:	e7cf      	b.n	8020b5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8020bbc:	4602      	mov	r2, r0
 8020bbe:	4607      	mov	r7, r0
 8020bc0:	e7d5      	b.n	8020b6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8020bc2:	4602      	mov	r2, r0
 8020bc4:	e7d3      	b.n	8020b6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8020bc6:	4606      	mov	r6, r0
 8020bc8:	e7e0      	b.n	8020b8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 8020bca:	4606      	mov	r6, r0
 8020bcc:	e7e8      	b.n	8020ba0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8020bce:	2c0f      	cmp	r4, #15
 8020bd0:	d8eb      	bhi.n	8020baa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8020bd2:	4606      	mov	r6, r0
 8020bd4:	043d      	lsls	r5, r7, #16
 8020bd6:	fb14 f30c 	smulbb	r3, r4, ip
 8020bda:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8020bde:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8020be2:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8020be6:	10db      	asrs	r3, r3, #3
 8020be8:	432f      	orrs	r7, r5
 8020bea:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8020bee:	f1cc 0510 	rsb	r5, ip, #16
 8020bf2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020bf6:	1b2d      	subs	r5, r5, r4
 8020bf8:	ea4e 0202 	orr.w	r2, lr, r2
 8020bfc:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8020c00:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8020c04:	4354      	muls	r4, r2
 8020c06:	fb05 4507 	mla	r5, r5, r7, r4
 8020c0a:	0404      	lsls	r4, r0, #16
 8020c0c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8020c10:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020c14:	4320      	orrs	r0, r4
 8020c16:	fb03 5400 	mla	r4, r3, r0, r5
 8020c1a:	0430      	lsls	r0, r6, #16
 8020c1c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8020c20:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8020c24:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8020c28:	4330      	orrs	r0, r6
 8020c2a:	fb03 4000 	mla	r0, r3, r0, r4
 8020c2e:	0d43      	lsrs	r3, r0, #21
 8020c30:	0940      	lsrs	r0, r0, #5
 8020c32:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020c36:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020c3a:	4318      	orrs	r0, r3
 8020c3c:	8008      	strh	r0, [r1, #0]
 8020c3e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020c42:	bf00      	nop
 8020c44:	0802d4b6 	.word	0x0802d4b6
 8020c48:	0802db2f 	.word	0x0802db2f
 8020c4c:	0802d53a 	.word	0x0802d53a

08020c50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020c50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020c54:	ed2d 8b0a 	vpush	{d8-d12}
 8020c58:	b093      	sub	sp, #76	; 0x4c
 8020c5a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8020c5e:	920f      	str	r2, [sp, #60]	; 0x3c
 8020c60:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8020c62:	9108      	str	r1, [sp, #32]
 8020c64:	9306      	str	r3, [sp, #24]
 8020c66:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8020c6a:	9010      	str	r0, [sp, #64]	; 0x40
 8020c6c:	6850      	ldr	r0, [r2, #4]
 8020c6e:	6812      	ldr	r2, [r2, #0]
 8020c70:	fb00 1303 	mla	r3, r0, r3, r1
 8020c74:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8020c78:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8020c7a:	681b      	ldr	r3, [r3, #0]
 8020c7c:	9307      	str	r3, [sp, #28]
 8020c7e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8020c80:	685f      	ldr	r7, [r3, #4]
 8020c82:	eeb0 aa40 	vmov.f32	s20, s0
 8020c86:	eef0 9a60 	vmov.f32	s19, s1
 8020c8a:	eeb0 9a41 	vmov.f32	s18, s2
 8020c8e:	eeb0 8a62 	vmov.f32	s16, s5
 8020c92:	eef0 8a43 	vmov.f32	s17, s6
 8020c96:	eeb0 ca44 	vmov.f32	s24, s8
 8020c9a:	eef0 ba64 	vmov.f32	s23, s9
 8020c9e:	eeb0 ba45 	vmov.f32	s22, s10
 8020ca2:	3704      	adds	r7, #4
 8020ca4:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8020ca8:	9b08      	ldr	r3, [sp, #32]
 8020caa:	2b00      	cmp	r3, #0
 8020cac:	dc03      	bgt.n	8020cb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8020cae:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020cb0:	2b00      	cmp	r3, #0
 8020cb2:	f340 81b2 	ble.w	802101a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8020cb6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8020cb8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020cbc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020cc0:	1e48      	subs	r0, r1, #1
 8020cc2:	f102 3cff 	add.w	ip, r2, #4294967295
 8020cc6:	9b06      	ldr	r3, [sp, #24]
 8020cc8:	2b00      	cmp	r3, #0
 8020cca:	f340 80a9 	ble.w	8020e20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 8020cce:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020cd2:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020cd6:	d406      	bmi.n	8020ce6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8020cd8:	4586      	cmp	lr, r0
 8020cda:	da04      	bge.n	8020ce6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8020cdc:	2b00      	cmp	r3, #0
 8020cde:	db02      	blt.n	8020ce6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8020ce0:	4563      	cmp	r3, ip
 8020ce2:	f2c0 809e 	blt.w	8020e22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8020ce6:	f11e 0e01 	adds.w	lr, lr, #1
 8020cea:	f100 808f 	bmi.w	8020e0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8020cee:	4571      	cmp	r1, lr
 8020cf0:	f2c0 808c 	blt.w	8020e0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8020cf4:	3301      	adds	r3, #1
 8020cf6:	f100 8089 	bmi.w	8020e0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8020cfa:	429a      	cmp	r2, r3
 8020cfc:	f2c0 8086 	blt.w	8020e0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8020d00:	f8dd b018 	ldr.w	fp, [sp, #24]
 8020d04:	46c8      	mov	r8, r9
 8020d06:	f1bb 0f00 	cmp.w	fp, #0
 8020d0a:	f340 80a6 	ble.w	8020e5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 8020d0e:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8020d10:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8020d12:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8020d16:	689b      	ldr	r3, [r3, #8]
 8020d18:	1422      	asrs	r2, r4, #16
 8020d1a:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8020d1e:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8020d22:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8020d26:	f100 80e3 	bmi.w	8020ef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8020d2a:	f103 3aff 	add.w	sl, r3, #4294967295
 8020d2e:	4552      	cmp	r2, sl
 8020d30:	f280 80de 	bge.w	8020ef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8020d34:	f1bc 0f00 	cmp.w	ip, #0
 8020d38:	f2c0 80da 	blt.w	8020ef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8020d3c:	f10e 3aff 	add.w	sl, lr, #4294967295
 8020d40:	45d4      	cmp	ip, sl
 8020d42:	f280 80d5 	bge.w	8020ef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8020d46:	b21b      	sxth	r3, r3
 8020d48:	fb0c 2203 	mla	r2, ip, r3, r2
 8020d4c:	9d07      	ldr	r5, [sp, #28]
 8020d4e:	eb05 0a02 	add.w	sl, r5, r2
 8020d52:	5caa      	ldrb	r2, [r5, r2]
 8020d54:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8020d58:	2800      	cmp	r0, #0
 8020d5a:	f000 80c0 	beq.w	8020ede <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 8020d5e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020d62:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8020d66:	920b      	str	r2, [sp, #44]	; 0x2c
 8020d68:	b151      	cbz	r1, 8020d80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8020d6a:	eb0a 0203 	add.w	r2, sl, r3
 8020d6e:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8020d72:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020d76:	9309      	str	r3, [sp, #36]	; 0x24
 8020d78:	7853      	ldrb	r3, [r2, #1]
 8020d7a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020d7e:	930c      	str	r3, [sp, #48]	; 0x30
 8020d80:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020d82:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020d84:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020d88:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020d8c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020d90:	ea4c 0c03 	orr.w	ip, ip, r3
 8020d94:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020d96:	041b      	lsls	r3, r3, #16
 8020d98:	fb10 f201 	smulbb	r2, r0, r1
 8020d9c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020da0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8020da4:	10d2      	asrs	r2, r2, #3
 8020da6:	432b      	orrs	r3, r5
 8020da8:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8020dac:	4353      	muls	r3, r2
 8020dae:	fb0a 330c 	mla	r3, sl, ip, r3
 8020db2:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8020db6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020dba:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020dbe:	ea4c 0e0e 	orr.w	lr, ip, lr
 8020dc2:	f1c1 0c10 	rsb	ip, r1, #16
 8020dc6:	ebac 0c00 	sub.w	ip, ip, r0
 8020dca:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8020dce:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8020dd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020dd4:	0418      	lsls	r0, r3, #16
 8020dd6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8020dda:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020dde:	4318      	orrs	r0, r3
 8020de0:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8020de4:	fb02 c200 	mla	r2, r2, r0, ip
 8020de8:	0d53      	lsrs	r3, r2, #21
 8020dea:	0952      	lsrs	r2, r2, #5
 8020dec:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020df0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020df4:	431a      	orrs	r2, r3
 8020df6:	f8a8 2000 	strh.w	r2, [r8]
 8020dfa:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8020dfc:	441c      	add	r4, r3
 8020dfe:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020e00:	f108 0802 	add.w	r8, r8, #2
 8020e04:	441e      	add	r6, r3
 8020e06:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020e0a:	e77c      	b.n	8020d06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8020e0c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8020e0e:	441c      	add	r4, r3
 8020e10:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020e12:	441e      	add	r6, r3
 8020e14:	9b06      	ldr	r3, [sp, #24]
 8020e16:	3b01      	subs	r3, #1
 8020e18:	9306      	str	r3, [sp, #24]
 8020e1a:	f109 0902 	add.w	r9, r9, #2
 8020e1e:	e752      	b.n	8020cc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8020e20:	d020      	beq.n	8020e64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020e22:	9b06      	ldr	r3, [sp, #24]
 8020e24:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8020e26:	3b01      	subs	r3, #1
 8020e28:	fb00 4003 	mla	r0, r0, r3, r4
 8020e2c:	1400      	asrs	r0, r0, #16
 8020e2e:	f53f af67 	bmi.w	8020d00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8020e32:	3901      	subs	r1, #1
 8020e34:	4288      	cmp	r0, r1
 8020e36:	f6bf af63 	bge.w	8020d00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8020e3a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8020e3c:	fb01 6303 	mla	r3, r1, r3, r6
 8020e40:	141b      	asrs	r3, r3, #16
 8020e42:	f53f af5d 	bmi.w	8020d00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8020e46:	3a01      	subs	r2, #1
 8020e48:	4293      	cmp	r3, r2
 8020e4a:	f6bf af59 	bge.w	8020d00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8020e4e:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8020e52:	46ca      	mov	sl, r9
 8020e54:	f1b8 0f00 	cmp.w	r8, #0
 8020e58:	dc67      	bgt.n	8020f2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8020e5a:	9b06      	ldr	r3, [sp, #24]
 8020e5c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8020e60:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8020e64:	9b08      	ldr	r3, [sp, #32]
 8020e66:	2b00      	cmp	r3, #0
 8020e68:	f340 80d7 	ble.w	802101a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8020e6c:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8020e70:	ee79 9aab 	vadd.f32	s19, s19, s23
 8020e74:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8020e78:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020e7a:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8020e7e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8020e82:	eef0 6a48 	vmov.f32	s13, s16
 8020e86:	ee69 7a27 	vmul.f32	s15, s18, s15
 8020e8a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020e8e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8020e92:	ee16 4a90 	vmov	r4, s13
 8020e96:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8020e9a:	eef0 6a68 	vmov.f32	s13, s17
 8020e9e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8020ea2:	ee18 2a10 	vmov	r2, s16
 8020ea6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8020eaa:	fb92 f3f3 	sdiv	r3, r2, r3
 8020eae:	ee18 2a90 	vmov	r2, s17
 8020eb2:	9329      	str	r3, [sp, #164]	; 0xa4
 8020eb4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020eb6:	fb92 f3f3 	sdiv	r3, r2, r3
 8020eba:	932a      	str	r3, [sp, #168]	; 0xa8
 8020ebc:	9b08      	ldr	r3, [sp, #32]
 8020ebe:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020ec0:	3b01      	subs	r3, #1
 8020ec2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020ec6:	9308      	str	r3, [sp, #32]
 8020ec8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020eca:	bf08      	it	eq
 8020ecc:	4613      	moveq	r3, r2
 8020ece:	ee16 6a90 	vmov	r6, s13
 8020ed2:	9306      	str	r3, [sp, #24]
 8020ed4:	eef0 8a67 	vmov.f32	s17, s15
 8020ed8:	eeb0 8a47 	vmov.f32	s16, s14
 8020edc:	e6e4      	b.n	8020ca8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8020ede:	2900      	cmp	r1, #0
 8020ee0:	f43f af4e 	beq.w	8020d80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8020ee4:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8020ee8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020eec:	9309      	str	r3, [sp, #36]	; 0x24
 8020eee:	e747      	b.n	8020d80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8020ef0:	f112 0a01 	adds.w	sl, r2, #1
 8020ef4:	d481      	bmi.n	8020dfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8020ef6:	4553      	cmp	r3, sl
 8020ef8:	f6ff af7f 	blt.w	8020dfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8020efc:	f11c 0a01 	adds.w	sl, ip, #1
 8020f00:	f53f af7b 	bmi.w	8020dfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8020f04:	45d6      	cmp	lr, sl
 8020f06:	f6ff af78 	blt.w	8020dfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8020f0a:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8020f0e:	b21b      	sxth	r3, r3
 8020f10:	fa0f f28e 	sxth.w	r2, lr
 8020f14:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8020f18:	9201      	str	r2, [sp, #4]
 8020f1a:	9300      	str	r3, [sp, #0]
 8020f1c:	9a07      	ldr	r2, [sp, #28]
 8020f1e:	9810      	ldr	r0, [sp, #64]	; 0x40
 8020f20:	463b      	mov	r3, r7
 8020f22:	4641      	mov	r1, r8
 8020f24:	f7ff fdfe 	bl	8020b24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8020f28:	e767      	b.n	8020dfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8020f2a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8020f2c:	9d07      	ldr	r5, [sp, #28]
 8020f2e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8020f32:	1422      	asrs	r2, r4, #16
 8020f34:	1431      	asrs	r1, r6, #16
 8020f36:	fb03 2101 	mla	r1, r3, r1, r2
 8020f3a:	9a07      	ldr	r2, [sp, #28]
 8020f3c:	440a      	add	r2, r1
 8020f3e:	5c69      	ldrb	r1, [r5, r1]
 8020f40:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8020f44:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8020f48:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8020f4c:	f1be 0f00 	cmp.w	lr, #0
 8020f50:	d05c      	beq.n	802100c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 8020f52:	f892 c001 	ldrb.w	ip, [r2, #1]
 8020f56:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8020f5a:	950d      	str	r5, [sp, #52]	; 0x34
 8020f5c:	b150      	cbz	r0, 8020f74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8020f5e:	eb02 0c03 	add.w	ip, r2, r3
 8020f62:	5cd3      	ldrb	r3, [r2, r3]
 8020f64:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020f68:	930a      	str	r3, [sp, #40]	; 0x28
 8020f6a:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8020f6e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020f72:	930e      	str	r3, [sp, #56]	; 0x38
 8020f74:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020f76:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8020f78:	fb1e f200 	smulbb	r2, lr, r0
 8020f7c:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020f80:	10d2      	asrs	r2, r2, #3
 8020f82:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020f86:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020f8a:	ea4c 0c03 	orr.w	ip, ip, r3
 8020f8e:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8020f92:	9311      	str	r3, [sp, #68]	; 0x44
 8020f94:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020f96:	041b      	lsls	r3, r3, #16
 8020f98:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8020f9c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020fa0:	ea43 030b 	orr.w	r3, r3, fp
 8020fa4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020fa6:	4353      	muls	r3, r2
 8020fa8:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8020fac:	fb05 3c0c 	mla	ip, r5, ip, r3
 8020fb0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8020fb4:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8020fb8:	ea43 0b01 	orr.w	fp, r3, r1
 8020fbc:	f1c0 0110 	rsb	r1, r0, #16
 8020fc0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020fc2:	eba1 0e0e 	sub.w	lr, r1, lr
 8020fc6:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8020fca:	fb0e cc0b 	mla	ip, lr, fp, ip
 8020fce:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8020fd2:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8020fd6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020fda:	ea4b 0e0e 	orr.w	lr, fp, lr
 8020fde:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8020fe2:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020fe6:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8020fea:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8020fee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020ff2:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8020ff6:	ea43 0c0c 	orr.w	ip, r3, ip
 8020ffa:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8020ffc:	f82a cb02 	strh.w	ip, [sl], #2
 8021000:	441c      	add	r4, r3
 8021002:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021004:	f108 38ff 	add.w	r8, r8, #4294967295
 8021008:	441e      	add	r6, r3
 802100a:	e723      	b.n	8020e54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 802100c:	2800      	cmp	r0, #0
 802100e:	d0b1      	beq.n	8020f74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8021010:	5cd3      	ldrb	r3, [r2, r3]
 8021012:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8021016:	930a      	str	r3, [sp, #40]	; 0x28
 8021018:	e7ac      	b.n	8020f74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 802101a:	b013      	add	sp, #76	; 0x4c
 802101c:	ecbd 8b0a 	vpop	{d8-d12}
 8021020:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021024 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8021024:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021028:	468b      	mov	fp, r1
 802102a:	8809      	ldrh	r1, [r1, #0]
 802102c:	b089      	sub	sp, #36	; 0x24
 802102e:	10cd      	asrs	r5, r1, #3
 8021030:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 8021034:	ea4f 2921 	mov.w	r9, r1, asr #8
 8021038:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802103c:	00c9      	lsls	r1, r1, #3
 802103e:	9500      	str	r5, [sp, #0]
 8021040:	b2c9      	uxtb	r1, r1
 8021042:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 8021046:	9101      	str	r1, [sp, #4]
 8021048:	9900      	ldr	r1, [sp, #0]
 802104a:	9202      	str	r2, [sp, #8]
 802104c:	fb04 650e 	mla	r5, r4, lr, r6
 8021050:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8021054:	eb02 0805 	add.w	r8, r2, r5
 8021058:	0209      	lsls	r1, r1, #8
 802105a:	9a01      	ldr	r2, [sp, #4]
 802105c:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 8021060:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8021064:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8021068:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 802106c:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8021070:	4311      	orrs	r1, r2
 8021072:	2c00      	cmp	r4, #0
 8021074:	9107      	str	r1, [sp, #28]
 8021076:	db43      	blt.n	8021100 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8021078:	45a2      	cmp	sl, r4
 802107a:	dd41      	ble.n	8021100 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 802107c:	2e00      	cmp	r6, #0
 802107e:	db3d      	blt.n	80210fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8021080:	45b6      	cmp	lr, r6
 8021082:	dd3b      	ble.n	80210fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8021084:	9a02      	ldr	r2, [sp, #8]
 8021086:	5d55      	ldrb	r5, [r2, r5]
 8021088:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802108c:	441d      	add	r5, r3
 802108e:	1c72      	adds	r2, r6, #1
 8021090:	d439      	bmi.n	8021106 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8021092:	4596      	cmp	lr, r2
 8021094:	dd37      	ble.n	8021106 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8021096:	2f00      	cmp	r7, #0
 8021098:	d035      	beq.n	8021106 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 802109a:	f898 1001 	ldrb.w	r1, [r8, #1]
 802109e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80210a2:	4419      	add	r1, r3
 80210a4:	3401      	adds	r4, #1
 80210a6:	d432      	bmi.n	802110e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80210a8:	45a2      	cmp	sl, r4
 80210aa:	dd30      	ble.n	802110e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80210ac:	b378      	cbz	r0, 802110e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80210ae:	2e00      	cmp	r6, #0
 80210b0:	db2b      	blt.n	802110a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 80210b2:	45b6      	cmp	lr, r6
 80210b4:	dd29      	ble.n	802110a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 80210b6:	f818 400e 	ldrb.w	r4, [r8, lr]
 80210ba:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80210be:	441c      	add	r4, r3
 80210c0:	3601      	adds	r6, #1
 80210c2:	d427      	bmi.n	8021114 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 80210c4:	45b6      	cmp	lr, r6
 80210c6:	dd25      	ble.n	8021114 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 80210c8:	b327      	cbz	r7, 8021114 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 80210ca:	44c6      	add	lr, r8
 80210cc:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80210d0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80210d4:	4413      	add	r3, r2
 80210d6:	782a      	ldrb	r2, [r5, #0]
 80210d8:	9202      	str	r2, [sp, #8]
 80210da:	780a      	ldrb	r2, [r1, #0]
 80210dc:	9203      	str	r2, [sp, #12]
 80210de:	7822      	ldrb	r2, [r4, #0]
 80210e0:	9204      	str	r2, [sp, #16]
 80210e2:	2f0f      	cmp	r7, #15
 80210e4:	781a      	ldrb	r2, [r3, #0]
 80210e6:	9205      	str	r2, [sp, #20]
 80210e8:	d801      	bhi.n	80210ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 80210ea:	280f      	cmp	r0, #15
 80210ec:	d914      	bls.n	8021118 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 80210ee:	4b3f      	ldr	r3, [pc, #252]	; (80211ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 80210f0:	4a3f      	ldr	r2, [pc, #252]	; (80211f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 80210f2:	4840      	ldr	r0, [pc, #256]	; (80211f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 80210f4:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 80210f8:	f006 fb42 	bl	8027780 <__assert_func>
 80210fc:	ad07      	add	r5, sp, #28
 80210fe:	e7c6      	b.n	802108e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 8021100:	a907      	add	r1, sp, #28
 8021102:	460d      	mov	r5, r1
 8021104:	e7ce      	b.n	80210a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8021106:	a907      	add	r1, sp, #28
 8021108:	e7cc      	b.n	80210a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 802110a:	ac07      	add	r4, sp, #28
 802110c:	e7d8      	b.n	80210c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 802110e:	ab07      	add	r3, sp, #28
 8021110:	461c      	mov	r4, r3
 8021112:	e7e0      	b.n	80210d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8021114:	ab07      	add	r3, sp, #28
 8021116:	e7de      	b.n	80210d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8021118:	b2ba      	uxth	r2, r7
 802111a:	b280      	uxth	r0, r0
 802111c:	fb02 fa00 	mul.w	sl, r2, r0
 8021120:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8021124:	0112      	lsls	r2, r2, #4
 8021126:	b280      	uxth	r0, r0
 8021128:	f891 8002 	ldrb.w	r8, [r1, #2]
 802112c:	7849      	ldrb	r1, [r1, #1]
 802112e:	78ae      	ldrb	r6, [r5, #2]
 8021130:	786d      	ldrb	r5, [r5, #1]
 8021132:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 8021136:	eba2 020a 	sub.w	r2, r2, sl
 802113a:	b292      	uxth	r2, r2
 802113c:	ebae 0e00 	sub.w	lr, lr, r0
 8021140:	fa1f fe8e 	uxth.w	lr, lr
 8021144:	4351      	muls	r1, r2
 8021146:	fb02 f808 	mul.w	r8, r2, r8
 802114a:	fb0e 8806 	mla	r8, lr, r6, r8
 802114e:	fb0e 1505 	mla	r5, lr, r5, r1
 8021152:	78a6      	ldrb	r6, [r4, #2]
 8021154:	7861      	ldrb	r1, [r4, #1]
 8021156:	fa1f f78c 	uxth.w	r7, ip
 802115a:	fb00 8806 	mla	r8, r0, r6, r8
 802115e:	fb00 5501 	mla	r5, r0, r1, r5
 8021162:	789e      	ldrb	r6, [r3, #2]
 8021164:	7859      	ldrb	r1, [r3, #1]
 8021166:	9b00      	ldr	r3, [sp, #0]
 8021168:	ea6f 0c0c 	mvn.w	ip, ip
 802116c:	fa5f fc8c 	uxtb.w	ip, ip
 8021170:	fb0a 5101 	mla	r1, sl, r1, r5
 8021174:	fb13 f50c 	smulbb	r5, r3, ip
 8021178:	9b03      	ldr	r3, [sp, #12]
 802117a:	435a      	muls	r2, r3
 802117c:	9b02      	ldr	r3, [sp, #8]
 802117e:	fb0e 2203 	mla	r2, lr, r3, r2
 8021182:	9b04      	ldr	r3, [sp, #16]
 8021184:	fb00 2003 	mla	r0, r0, r3, r2
 8021188:	9b05      	ldr	r3, [sp, #20]
 802118a:	fb0a 8606 	mla	r6, sl, r6, r8
 802118e:	fb19 f90c 	smulbb	r9, r9, ip
 8021192:	fb0a 0a03 	mla	sl, sl, r3, r0
 8021196:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802119a:	9b01      	ldr	r3, [sp, #4]
 802119c:	fb06 9607 	mla	r6, r6, r7, r9
 80211a0:	b2b6      	uxth	r6, r6
 80211a2:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 80211a6:	fb13 fc0c 	smulbb	ip, r3, ip
 80211aa:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80211ae:	fb01 5107 	mla	r1, r1, r7, r5
 80211b2:	f106 0901 	add.w	r9, r6, #1
 80211b6:	fb0a c707 	mla	r7, sl, r7, ip
 80211ba:	b2bf      	uxth	r7, r7
 80211bc:	b289      	uxth	r1, r1
 80211be:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 80211c2:	f406 4978 	and.w	r9, r6, #63488	; 0xf800
 80211c6:	1c4d      	adds	r5, r1, #1
 80211c8:	1c7e      	adds	r6, r7, #1
 80211ca:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80211ce:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 80211d2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80211d6:	0949      	lsrs	r1, r1, #5
 80211d8:	ea46 0609 	orr.w	r6, r6, r9
 80211dc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80211e0:	430e      	orrs	r6, r1
 80211e2:	f8ab 6000 	strh.w	r6, [fp]
 80211e6:	b009      	add	sp, #36	; 0x24
 80211e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80211ec:	0802d4b6 	.word	0x0802d4b6
 80211f0:	0802da86 	.word	0x0802da86
 80211f4:	0802d53a 	.word	0x0802d53a

080211f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80211f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80211fc:	ed2d 8b08 	vpush	{d8-d11}
 8021200:	b095      	sub	sp, #84	; 0x54
 8021202:	eeb0 aa40 	vmov.f32	s20, s0
 8021206:	9212      	str	r2, [sp, #72]	; 0x48
 8021208:	9309      	str	r3, [sp, #36]	; 0x24
 802120a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 802120c:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8021210:	930f      	str	r3, [sp, #60]	; 0x3c
 8021212:	910e      	str	r1, [sp, #56]	; 0x38
 8021214:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8021218:	9013      	str	r0, [sp, #76]	; 0x4c
 802121a:	6850      	ldr	r0, [r2, #4]
 802121c:	6812      	ldr	r2, [r2, #0]
 802121e:	fb00 1303 	mla	r3, r0, r3, r1
 8021222:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021226:	930a      	str	r3, [sp, #40]	; 0x28
 8021228:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802122a:	681b      	ldr	r3, [r3, #0]
 802122c:	930d      	str	r3, [sp, #52]	; 0x34
 802122e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8021230:	685c      	ldr	r4, [r3, #4]
 8021232:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021234:	43db      	mvns	r3, r3
 8021236:	b2db      	uxtb	r3, r3
 8021238:	eef0 9a60 	vmov.f32	s19, s1
 802123c:	eeb0 9a41 	vmov.f32	s18, s2
 8021240:	eeb0 8a62 	vmov.f32	s16, s5
 8021244:	eef0 8a43 	vmov.f32	s17, s6
 8021248:	eef0 ba44 	vmov.f32	s23, s8
 802124c:	eeb0 ba64 	vmov.f32	s22, s9
 8021250:	eef0 aa45 	vmov.f32	s21, s10
 8021254:	3404      	adds	r4, #4
 8021256:	930b      	str	r3, [sp, #44]	; 0x2c
 8021258:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802125a:	2b00      	cmp	r3, #0
 802125c:	dc03      	bgt.n	8021266 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802125e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8021260:	2b00      	cmp	r3, #0
 8021262:	f340 8255 	ble.w	8021710 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 8021266:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8021268:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802126c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021270:	1e48      	subs	r0, r1, #1
 8021272:	1e55      	subs	r5, r2, #1
 8021274:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021276:	2b00      	cmp	r3, #0
 8021278:	f340 80f9 	ble.w	802146e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802127c:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 802127e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021280:	1436      	asrs	r6, r6, #16
 8021282:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021286:	d406      	bmi.n	8021296 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8021288:	4286      	cmp	r6, r0
 802128a:	da04      	bge.n	8021296 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802128c:	2b00      	cmp	r3, #0
 802128e:	db02      	blt.n	8021296 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8021290:	42ab      	cmp	r3, r5
 8021292:	f2c0 80ed 	blt.w	8021470 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8021296:	3601      	adds	r6, #1
 8021298:	f100 80da 	bmi.w	8021450 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 802129c:	42b1      	cmp	r1, r6
 802129e:	f2c0 80d7 	blt.w	8021450 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80212a2:	3301      	adds	r3, #1
 80212a4:	f100 80d4 	bmi.w	8021450 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80212a8:	429a      	cmp	r2, r3
 80212aa:	f2c0 80d1 	blt.w	8021450 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80212ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80212b0:	9311      	str	r3, [sp, #68]	; 0x44
 80212b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80212b4:	930c      	str	r3, [sp, #48]	; 0x30
 80212b6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80212b8:	2b00      	cmp	r3, #0
 80212ba:	f340 80fa 	ble.w	80214b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80212be:	982e      	ldr	r0, [sp, #184]	; 0xb8
 80212c0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80212c2:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80212c4:	68c6      	ldr	r6, [r0, #12]
 80212c6:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80212c8:	141d      	asrs	r5, r3, #16
 80212ca:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80212ce:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80212d0:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80212d2:	1400      	asrs	r0, r0, #16
 80212d4:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80212d8:	6892      	ldr	r2, [r2, #8]
 80212da:	f100 813e 	bmi.w	802155a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80212de:	1e57      	subs	r7, r2, #1
 80212e0:	42b8      	cmp	r0, r7
 80212e2:	f280 813a 	bge.w	802155a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80212e6:	2d00      	cmp	r5, #0
 80212e8:	f2c0 8137 	blt.w	802155a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80212ec:	1e77      	subs	r7, r6, #1
 80212ee:	42bd      	cmp	r5, r7
 80212f0:	f280 8133 	bge.w	802155a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80212f4:	b212      	sxth	r2, r2
 80212f6:	fb05 0002 	mla	r0, r5, r2, r0
 80212fa:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80212fc:	f815 a000 	ldrb.w	sl, [r5, r0]
 8021300:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8021304:	182e      	adds	r6, r5, r0
 8021306:	eb04 050a 	add.w	r5, r4, sl
 802130a:	2b00      	cmp	r3, #0
 802130c:	f000 8117 	beq.w	802153e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 8021310:	f896 c001 	ldrb.w	ip, [r6, #1]
 8021314:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8021318:	44a4      	add	ip, r4
 802131a:	2900      	cmp	r1, #0
 802131c:	f000 8117 	beq.w	802154e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8021320:	18b0      	adds	r0, r6, r2
 8021322:	5cb2      	ldrb	r2, [r6, r2]
 8021324:	7840      	ldrb	r0, [r0, #1]
 8021326:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802132a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802132e:	4422      	add	r2, r4
 8021330:	4420      	add	r0, r4
 8021332:	b29b      	uxth	r3, r3
 8021334:	b289      	uxth	r1, r1
 8021336:	fb03 f901 	mul.w	r9, r3, r1
 802133a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802133e:	011b      	lsls	r3, r3, #4
 8021340:	b289      	uxth	r1, r1
 8021342:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8021346:	f895 b002 	ldrb.w	fp, [r5, #2]
 802134a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802134c:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8021350:	f8b6 e000 	ldrh.w	lr, [r6]
 8021354:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8021358:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 802135c:	eba3 0309 	sub.w	r3, r3, r9
 8021360:	b29b      	uxth	r3, r3
 8021362:	eba8 0801 	sub.w	r8, r8, r1
 8021366:	fa1f f888 	uxth.w	r8, r8
 802136a:	435f      	muls	r7, r3
 802136c:	fb08 770b 	mla	r7, r8, fp, r7
 8021370:	f892 b002 	ldrb.w	fp, [r2, #2]
 8021374:	9310      	str	r3, [sp, #64]	; 0x40
 8021376:	fb01 770b 	mla	r7, r1, fp, r7
 802137a:	f890 b002 	ldrb.w	fp, [r0, #2]
 802137e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021380:	fb09 770b 	mla	r7, r9, fp, r7
 8021384:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8021388:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802138c:	fb1b fb03 	smulbb	fp, fp, r3
 8021390:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8021394:	fb07 b706 	mla	r7, r7, r6, fp
 8021398:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802139a:	f895 b001 	ldrb.w	fp, [r5, #1]
 802139e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80213a2:	f89c c000 	ldrb.w	ip, [ip]
 80213a6:	435d      	muls	r5, r3
 80213a8:	fb08 550b 	mla	r5, r8, fp, r5
 80213ac:	f892 b001 	ldrb.w	fp, [r2, #1]
 80213b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80213b2:	fb01 550b 	mla	r5, r1, fp, r5
 80213b6:	f890 b001 	ldrb.w	fp, [r0, #1]
 80213ba:	fb09 550b 	mla	r5, r9, fp, r5
 80213be:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80213c2:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80213c6:	fb1b fb03 	smulbb	fp, fp, r3
 80213ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80213cc:	fb03 f30c 	mul.w	r3, r3, ip
 80213d0:	f892 c000 	ldrb.w	ip, [r2]
 80213d4:	fb08 330a 	mla	r3, r8, sl, r3
 80213d8:	fb01 330c 	mla	r3, r1, ip, r3
 80213dc:	f890 c000 	ldrb.w	ip, [r0]
 80213e0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80213e4:	fb09 3c0c 	mla	ip, r9, ip, r3
 80213e8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80213ea:	fa5f fe8e 	uxtb.w	lr, lr
 80213ee:	b2bf      	uxth	r7, r7
 80213f0:	fb1e fe03 	smulbb	lr, lr, r3
 80213f4:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80213f8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80213fc:	fb05 b506 	mla	r5, r5, r6, fp
 8021400:	1c7b      	adds	r3, r7, #1
 8021402:	fb0c e606 	mla	r6, ip, r6, lr
 8021406:	b2ad      	uxth	r5, r5
 8021408:	b2b6      	uxth	r6, r6
 802140a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802140e:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8021412:	f105 0b01 	add.w	fp, r5, #1
 8021416:	1c77      	adds	r7, r6, #1
 8021418:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 802141c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8021420:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021424:	096d      	lsrs	r5, r5, #5
 8021426:	431f      	orrs	r7, r3
 8021428:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802142c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802142e:	433d      	orrs	r5, r7
 8021430:	801d      	strh	r5, [r3, #0]
 8021432:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021434:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8021436:	3302      	adds	r3, #2
 8021438:	930c      	str	r3, [sp, #48]	; 0x30
 802143a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802143c:	4413      	add	r3, r2
 802143e:	9327      	str	r3, [sp, #156]	; 0x9c
 8021440:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8021442:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021444:	4413      	add	r3, r2
 8021446:	9328      	str	r3, [sp, #160]	; 0xa0
 8021448:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802144a:	3b01      	subs	r3, #1
 802144c:	9311      	str	r3, [sp, #68]	; 0x44
 802144e:	e732      	b.n	80212b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8021450:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021452:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 8021454:	4433      	add	r3, r6
 8021456:	9327      	str	r3, [sp, #156]	; 0x9c
 8021458:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 802145a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802145c:	4433      	add	r3, r6
 802145e:	9328      	str	r3, [sp, #160]	; 0xa0
 8021460:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021462:	3b01      	subs	r3, #1
 8021464:	9309      	str	r3, [sp, #36]	; 0x24
 8021466:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021468:	3302      	adds	r3, #2
 802146a:	930a      	str	r3, [sp, #40]	; 0x28
 802146c:	e702      	b.n	8021274 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802146e:	d027      	beq.n	80214c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8021470:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021472:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8021474:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8021476:	3b01      	subs	r3, #1
 8021478:	fb00 5003 	mla	r0, r0, r3, r5
 802147c:	1400      	asrs	r0, r0, #16
 802147e:	f53f af16 	bmi.w	80212ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8021482:	3901      	subs	r1, #1
 8021484:	4288      	cmp	r0, r1
 8021486:	f6bf af12 	bge.w	80212ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802148a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 802148c:	9828      	ldr	r0, [sp, #160]	; 0xa0
 802148e:	fb01 0303 	mla	r3, r1, r3, r0
 8021492:	141b      	asrs	r3, r3, #16
 8021494:	f53f af0b 	bmi.w	80212ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8021498:	3a01      	subs	r2, #1
 802149a:	4293      	cmp	r3, r2
 802149c:	f6bf af07 	bge.w	80212ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80214a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80214a2:	9311      	str	r3, [sp, #68]	; 0x44
 80214a4:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 80214a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80214aa:	930c      	str	r3, [sp, #48]	; 0x30
 80214ac:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80214ae:	2b00      	cmp	r3, #0
 80214b0:	dc70      	bgt.n	8021594 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 80214b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80214b4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80214b6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80214ba:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80214be:	930a      	str	r3, [sp, #40]	; 0x28
 80214c0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80214c2:	2b00      	cmp	r3, #0
 80214c4:	f340 8124 	ble.w	8021710 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 80214c8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80214cc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80214d0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80214d4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80214d6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80214da:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80214de:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80214e2:	eef0 6a48 	vmov.f32	s13, s16
 80214e6:	ee69 7a27 	vmul.f32	s15, s18, s15
 80214ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80214ee:	ee37 8a48 	vsub.f32	s16, s14, s16
 80214f2:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 80214f6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80214fa:	eef0 6a68 	vmov.f32	s13, s17
 80214fe:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8021502:	ee18 2a10 	vmov	r2, s16
 8021506:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 802150a:	fb92 f3f3 	sdiv	r3, r2, r3
 802150e:	ee18 2a90 	vmov	r2, s17
 8021512:	9329      	str	r3, [sp, #164]	; 0xa4
 8021514:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8021516:	fb92 f3f3 	sdiv	r3, r2, r3
 802151a:	932a      	str	r3, [sp, #168]	; 0xa8
 802151c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802151e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8021520:	3b01      	subs	r3, #1
 8021522:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021526:	930e      	str	r3, [sp, #56]	; 0x38
 8021528:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802152a:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 802152e:	bf08      	it	eq
 8021530:	4613      	moveq	r3, r2
 8021532:	9309      	str	r3, [sp, #36]	; 0x24
 8021534:	eef0 8a67 	vmov.f32	s17, s15
 8021538:	eeb0 8a47 	vmov.f32	s16, s14
 802153c:	e68c      	b.n	8021258 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 802153e:	b149      	cbz	r1, 8021554 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 8021540:	5cb2      	ldrb	r2, [r6, r2]
 8021542:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021546:	4422      	add	r2, r4
 8021548:	4628      	mov	r0, r5
 802154a:	46ac      	mov	ip, r5
 802154c:	e6f1      	b.n	8021332 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 802154e:	4628      	mov	r0, r5
 8021550:	462a      	mov	r2, r5
 8021552:	e6ee      	b.n	8021332 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8021554:	4628      	mov	r0, r5
 8021556:	462a      	mov	r2, r5
 8021558:	e7f7      	b.n	802154a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 802155a:	1c47      	adds	r7, r0, #1
 802155c:	f53f af69 	bmi.w	8021432 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8021560:	42ba      	cmp	r2, r7
 8021562:	f6ff af66 	blt.w	8021432 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8021566:	1c6f      	adds	r7, r5, #1
 8021568:	f53f af63 	bmi.w	8021432 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 802156c:	42be      	cmp	r6, r7
 802156e:	f6ff af60 	blt.w	8021432 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8021572:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8021574:	9002      	str	r0, [sp, #8]
 8021576:	b236      	sxth	r6, r6
 8021578:	b212      	sxth	r2, r2
 802157a:	e9cd 1705 	strd	r1, r7, [sp, #20]
 802157e:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8021582:	9200      	str	r2, [sp, #0]
 8021584:	9601      	str	r6, [sp, #4]
 8021586:	4623      	mov	r3, r4
 8021588:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 802158c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802158e:	f7ff fd49 	bl	8021024 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8021592:	e74e      	b.n	8021432 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8021594:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8021596:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8021598:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 802159a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802159c:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80215a0:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80215a2:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80215a6:	142d      	asrs	r5, r5, #16
 80215a8:	1400      	asrs	r0, r0, #16
 80215aa:	fb02 5000 	mla	r0, r2, r0, r5
 80215ae:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80215b0:	f815 9000 	ldrb.w	r9, [r5, r0]
 80215b4:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80215b8:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 80215bc:	182e      	adds	r6, r5, r0
 80215be:	eb04 0509 	add.w	r5, r4, r9
 80215c2:	2b00      	cmp	r3, #0
 80215c4:	f000 8096 	beq.w	80216f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 80215c8:	7877      	ldrb	r7, [r6, #1]
 80215ca:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80215ce:	4427      	add	r7, r4
 80215d0:	2900      	cmp	r1, #0
 80215d2:	f000 8097 	beq.w	8021704 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50c>
 80215d6:	18b0      	adds	r0, r6, r2
 80215d8:	5cb2      	ldrb	r2, [r6, r2]
 80215da:	7840      	ldrb	r0, [r0, #1]
 80215dc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80215e0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80215e4:	4422      	add	r2, r4
 80215e6:	4420      	add	r0, r4
 80215e8:	b29b      	uxth	r3, r3
 80215ea:	b289      	uxth	r1, r1
 80215ec:	fb03 f801 	mul.w	r8, r3, r1
 80215f0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80215f2:	f895 b002 	ldrb.w	fp, [r5, #2]
 80215f6:	f8b6 c000 	ldrh.w	ip, [r6]
 80215fa:	78be      	ldrb	r6, [r7, #2]
 80215fc:	f814 9009 	ldrb.w	r9, [r4, r9]
 8021600:	011b      	lsls	r3, r3, #4
 8021602:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8021606:	b289      	uxth	r1, r1
 8021608:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 802160c:	eba3 0308 	sub.w	r3, r3, r8
 8021610:	b29b      	uxth	r3, r3
 8021612:	ebae 0e01 	sub.w	lr, lr, r1
 8021616:	fa1f fe8e 	uxth.w	lr, lr
 802161a:	435e      	muls	r6, r3
 802161c:	fb0e 660b 	mla	r6, lr, fp, r6
 8021620:	f892 b002 	ldrb.w	fp, [r2, #2]
 8021624:	9310      	str	r3, [sp, #64]	; 0x40
 8021626:	fb01 660b 	mla	r6, r1, fp, r6
 802162a:	f890 b002 	ldrb.w	fp, [r0, #2]
 802162e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021630:	fb08 660b 	mla	r6, r8, fp, r6
 8021634:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8021638:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802163c:	fb1b fb03 	smulbb	fp, fp, r3
 8021640:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8021644:	fb06 b60a 	mla	r6, r6, sl, fp
 8021648:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802164a:	f895 b001 	ldrb.w	fp, [r5, #1]
 802164e:	787d      	ldrb	r5, [r7, #1]
 8021650:	783f      	ldrb	r7, [r7, #0]
 8021652:	435d      	muls	r5, r3
 8021654:	fb0e 550b 	mla	r5, lr, fp, r5
 8021658:	f892 b001 	ldrb.w	fp, [r2, #1]
 802165c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802165e:	fb01 550b 	mla	r5, r1, fp, r5
 8021662:	f890 b001 	ldrb.w	fp, [r0, #1]
 8021666:	fb08 550b 	mla	r5, r8, fp, r5
 802166a:	ea4f 0bec 	mov.w	fp, ip, asr #3
 802166e:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8021672:	fb1b fb03 	smulbb	fp, fp, r3
 8021676:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021678:	437b      	muls	r3, r7
 802167a:	7817      	ldrb	r7, [r2, #0]
 802167c:	fb0e 3309 	mla	r3, lr, r9, r3
 8021680:	fb01 3307 	mla	r3, r1, r7, r3
 8021684:	7807      	ldrb	r7, [r0, #0]
 8021686:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802168a:	fb08 3707 	mla	r7, r8, r7, r3
 802168e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021690:	fa5f fc8c 	uxtb.w	ip, ip
 8021694:	fb1c fc03 	smulbb	ip, ip, r3
 8021698:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802169c:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80216a0:	fb05 b50a 	mla	r5, r5, sl, fp
 80216a4:	fb07 c70a 	mla	r7, r7, sl, ip
 80216a8:	b2b6      	uxth	r6, r6
 80216aa:	b2ad      	uxth	r5, r5
 80216ac:	b2bf      	uxth	r7, r7
 80216ae:	1c73      	adds	r3, r6, #1
 80216b0:	1c7a      	adds	r2, r7, #1
 80216b2:	f105 0b01 	add.w	fp, r5, #1
 80216b6:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80216ba:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80216be:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80216c2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80216c6:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80216ca:	096d      	lsrs	r5, r5, #5
 80216cc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80216ce:	4316      	orrs	r6, r2
 80216d0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80216d4:	432e      	orrs	r6, r5
 80216d6:	f823 6b02 	strh.w	r6, [r3], #2
 80216da:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80216dc:	930c      	str	r3, [sp, #48]	; 0x30
 80216de:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80216e0:	4413      	add	r3, r2
 80216e2:	9327      	str	r3, [sp, #156]	; 0x9c
 80216e4:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80216e6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80216e8:	4413      	add	r3, r2
 80216ea:	9328      	str	r3, [sp, #160]	; 0xa0
 80216ec:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80216ee:	3b01      	subs	r3, #1
 80216f0:	9311      	str	r3, [sp, #68]	; 0x44
 80216f2:	e6db      	b.n	80214ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 80216f4:	b149      	cbz	r1, 802170a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 80216f6:	5cb2      	ldrb	r2, [r6, r2]
 80216f8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80216fc:	4422      	add	r2, r4
 80216fe:	4628      	mov	r0, r5
 8021700:	462f      	mov	r7, r5
 8021702:	e771      	b.n	80215e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8021704:	4628      	mov	r0, r5
 8021706:	462a      	mov	r2, r5
 8021708:	e76e      	b.n	80215e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 802170a:	4628      	mov	r0, r5
 802170c:	462a      	mov	r2, r5
 802170e:	e7f7      	b.n	8021700 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8021710:	b015      	add	sp, #84	; 0x54
 8021712:	ecbd 8b08 	vpop	{d8-d11}
 8021716:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0802171c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 802171c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021720:	880e      	ldrh	r6, [r1, #0]
 8021722:	b085      	sub	sp, #20
 8021724:	0230      	lsls	r0, r6, #8
 8021726:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 802172a:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 802172e:	0170      	lsls	r0, r6, #5
 8021730:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8021734:	9101      	str	r1, [sp, #4]
 8021736:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 802173a:	00f6      	lsls	r6, r6, #3
 802173c:	ea4b 0000 	orr.w	r0, fp, r0
 8021740:	b2f6      	uxtb	r6, r6
 8021742:	4691      	mov	r9, r2
 8021744:	fb05 7a0c 	mla	sl, r5, ip, r7
 8021748:	4306      	orrs	r6, r0
 802174a:	2d00      	cmp	r5, #0
 802174c:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8021750:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 8021754:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8021758:	9603      	str	r6, [sp, #12]
 802175a:	eb09 0e0a 	add.w	lr, r9, sl
 802175e:	db42      	blt.n	80217e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8021760:	45a8      	cmp	r8, r5
 8021762:	dd40      	ble.n	80217e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8021764:	2f00      	cmp	r7, #0
 8021766:	db3c      	blt.n	80217e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8021768:	45bc      	cmp	ip, r7
 802176a:	dd3a      	ble.n	80217e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 802176c:	f819 600a 	ldrb.w	r6, [r9, sl]
 8021770:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8021774:	441e      	add	r6, r3
 8021776:	1c78      	adds	r0, r7, #1
 8021778:	d438      	bmi.n	80217ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 802177a:	4584      	cmp	ip, r0
 802177c:	dd36      	ble.n	80217ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 802177e:	b3aa      	cbz	r2, 80217ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8021780:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8021784:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021788:	4418      	add	r0, r3
 802178a:	3501      	adds	r5, #1
 802178c:	d432      	bmi.n	80217f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 802178e:	45a8      	cmp	r8, r5
 8021790:	dd30      	ble.n	80217f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8021792:	b37c      	cbz	r4, 80217f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8021794:	2f00      	cmp	r7, #0
 8021796:	db2b      	blt.n	80217f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8021798:	45bc      	cmp	ip, r7
 802179a:	dd29      	ble.n	80217f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 802179c:	f81e 500c 	ldrb.w	r5, [lr, ip]
 80217a0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80217a4:	441d      	add	r5, r3
 80217a6:	3701      	adds	r7, #1
 80217a8:	d427      	bmi.n	80217fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 80217aa:	45bc      	cmp	ip, r7
 80217ac:	dd25      	ble.n	80217fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 80217ae:	b322      	cbz	r2, 80217fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 80217b0:	44f4      	add	ip, lr
 80217b2:	f89c 7001 	ldrb.w	r7, [ip, #1]
 80217b6:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80217ba:	443b      	add	r3, r7
 80217bc:	781f      	ldrb	r7, [r3, #0]
 80217be:	f896 9000 	ldrb.w	r9, [r6]
 80217c2:	f890 a000 	ldrb.w	sl, [r0]
 80217c6:	f895 8000 	ldrb.w	r8, [r5]
 80217ca:	2a0f      	cmp	r2, #15
 80217cc:	4639      	mov	r1, r7
 80217ce:	d801      	bhi.n	80217d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb8>
 80217d0:	2c0f      	cmp	r4, #15
 80217d2:	d914      	bls.n	80217fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe2>
 80217d4:	4b2c      	ldr	r3, [pc, #176]	; (8021888 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 80217d6:	4a2d      	ldr	r2, [pc, #180]	; (802188c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 80217d8:	482d      	ldr	r0, [pc, #180]	; (8021890 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x174>)
 80217da:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 80217de:	f005 ffcf 	bl	8027780 <__assert_func>
 80217e2:	ae03      	add	r6, sp, #12
 80217e4:	e7c7      	b.n	8021776 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5a>
 80217e6:	a803      	add	r0, sp, #12
 80217e8:	4606      	mov	r6, r0
 80217ea:	e7ce      	b.n	802178a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80217ec:	a803      	add	r0, sp, #12
 80217ee:	e7cc      	b.n	802178a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80217f0:	ad03      	add	r5, sp, #12
 80217f2:	e7d8      	b.n	80217a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8a>
 80217f4:	ab03      	add	r3, sp, #12
 80217f6:	461d      	mov	r5, r3
 80217f8:	e7e0      	b.n	80217bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 80217fa:	ab03      	add	r3, sp, #12
 80217fc:	e7de      	b.n	80217bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 80217fe:	b292      	uxth	r2, r2
 8021800:	b2a4      	uxth	r4, r4
 8021802:	fb02 fe04 	mul.w	lr, r2, r4
 8021806:	ebce 1404 	rsb	r4, lr, r4, lsl #4
 802180a:	0112      	lsls	r2, r2, #4
 802180c:	b2a4      	uxth	r4, r4
 802180e:	f890 c002 	ldrb.w	ip, [r0, #2]
 8021812:	f896 b002 	ldrb.w	fp, [r6, #2]
 8021816:	7840      	ldrb	r0, [r0, #1]
 8021818:	7876      	ldrb	r6, [r6, #1]
 802181a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 802181e:	eba2 020e 	sub.w	r2, r2, lr
 8021822:	b292      	uxth	r2, r2
 8021824:	1b3f      	subs	r7, r7, r4
 8021826:	b2bf      	uxth	r7, r7
 8021828:	fb02 fc0c 	mul.w	ip, r2, ip
 802182c:	fb07 cc0b 	mla	ip, r7, fp, ip
 8021830:	f895 b002 	ldrb.w	fp, [r5, #2]
 8021834:	fb04 cc0b 	mla	ip, r4, fp, ip
 8021838:	f893 b002 	ldrb.w	fp, [r3, #2]
 802183c:	785b      	ldrb	r3, [r3, #1]
 802183e:	fb0e cc0b 	mla	ip, lr, fp, ip
 8021842:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8021846:	fb02 fc0a 	mul.w	ip, r2, sl
 802184a:	4342      	muls	r2, r0
 802184c:	7868      	ldrb	r0, [r5, #1]
 802184e:	fb07 cc09 	mla	ip, r7, r9, ip
 8021852:	fb07 2206 	mla	r2, r7, r6, r2
 8021856:	fb04 cc08 	mla	ip, r4, r8, ip
 802185a:	fb04 2400 	mla	r4, r4, r0, r2
 802185e:	fb0e cc01 	mla	ip, lr, r1, ip
 8021862:	fb0e 4e03 	mla	lr, lr, r3, r4
 8021866:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 802186a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802186e:	ea4c 0c0b 	orr.w	ip, ip, fp
 8021872:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8021876:	9b01      	ldr	r3, [sp, #4]
 8021878:	ea4c 0c0e 	orr.w	ip, ip, lr
 802187c:	f8a3 c000 	strh.w	ip, [r3]
 8021880:	b005      	add	sp, #20
 8021882:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021886:	bf00      	nop
 8021888:	0802d4b6 	.word	0x0802d4b6
 802188c:	0802da86 	.word	0x0802da86
 8021890:	0802d53a 	.word	0x0802d53a

08021894 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021894:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021898:	ed2d 8b08 	vpush	{d8-d11}
 802189c:	b08f      	sub	sp, #60	; 0x3c
 802189e:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 80218a2:	920c      	str	r2, [sp, #48]	; 0x30
 80218a4:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80218a6:	910a      	str	r1, [sp, #40]	; 0x28
 80218a8:	9306      	str	r3, [sp, #24]
 80218aa:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80218ae:	900d      	str	r0, [sp, #52]	; 0x34
 80218b0:	6850      	ldr	r0, [r2, #4]
 80218b2:	6812      	ldr	r2, [r2, #0]
 80218b4:	fb00 1303 	mla	r3, r0, r3, r1
 80218b8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80218bc:	9307      	str	r3, [sp, #28]
 80218be:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80218c0:	681b      	ldr	r3, [r3, #0]
 80218c2:	9308      	str	r3, [sp, #32]
 80218c4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80218c6:	685c      	ldr	r4, [r3, #4]
 80218c8:	eeb0 aa40 	vmov.f32	s20, s0
 80218cc:	eef0 9a60 	vmov.f32	s19, s1
 80218d0:	eeb0 9a41 	vmov.f32	s18, s2
 80218d4:	eeb0 8a62 	vmov.f32	s16, s5
 80218d8:	eef0 8a43 	vmov.f32	s17, s6
 80218dc:	eef0 ba44 	vmov.f32	s23, s8
 80218e0:	eeb0 ba64 	vmov.f32	s22, s9
 80218e4:	eef0 aa45 	vmov.f32	s21, s10
 80218e8:	3404      	adds	r4, #4
 80218ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80218ec:	2b00      	cmp	r3, #0
 80218ee:	dc03      	bgt.n	80218f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80218f0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80218f2:	2b00      	cmp	r3, #0
 80218f4:	f340 81d6 	ble.w	8021ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 80218f8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80218fa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80218fe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021902:	1e48      	subs	r0, r1, #1
 8021904:	1e56      	subs	r6, r2, #1
 8021906:	9b06      	ldr	r3, [sp, #24]
 8021908:	2b00      	cmp	r3, #0
 802190a:	f340 80b7 	ble.w	8021a7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 802190e:	ea5f 472b 	movs.w	r7, fp, asr #16
 8021912:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021916:	d406      	bmi.n	8021926 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021918:	4287      	cmp	r7, r0
 802191a:	da04      	bge.n	8021926 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802191c:	2b00      	cmp	r3, #0
 802191e:	db02      	blt.n	8021926 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021920:	42b3      	cmp	r3, r6
 8021922:	f2c0 80ac 	blt.w	8021a7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8021926:	3701      	adds	r7, #1
 8021928:	f100 809d 	bmi.w	8021a66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 802192c:	42b9      	cmp	r1, r7
 802192e:	f2c0 809a 	blt.w	8021a66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8021932:	3301      	adds	r3, #1
 8021934:	f100 8097 	bmi.w	8021a66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8021938:	429a      	cmp	r2, r3
 802193a:	f2c0 8094 	blt.w	8021a66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 802193e:	9b06      	ldr	r3, [sp, #24]
 8021940:	930b      	str	r3, [sp, #44]	; 0x2c
 8021942:	9b07      	ldr	r3, [sp, #28]
 8021944:	9309      	str	r3, [sp, #36]	; 0x24
 8021946:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021948:	2b00      	cmp	r3, #0
 802194a:	f340 80b5 	ble.w	8021ab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 802194e:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8021950:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8021952:	68c7      	ldr	r7, [r0, #12]
 8021954:	6892      	ldr	r2, [r2, #8]
 8021956:	ea5f 402b 	movs.w	r0, fp, asr #16
 802195a:	ea4f 4625 	mov.w	r6, r5, asr #16
 802195e:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8021962:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8021966:	f100 80fb 	bmi.w	8021b60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 802196a:	f102 3cff 	add.w	ip, r2, #4294967295
 802196e:	4560      	cmp	r0, ip
 8021970:	f280 80f6 	bge.w	8021b60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8021974:	2e00      	cmp	r6, #0
 8021976:	f2c0 80f3 	blt.w	8021b60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 802197a:	f107 3cff 	add.w	ip, r7, #4294967295
 802197e:	4566      	cmp	r6, ip
 8021980:	f280 80ee 	bge.w	8021b60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8021984:	b212      	sxth	r2, r2
 8021986:	fb06 0002 	mla	r0, r6, r2, r0
 802198a:	9e08      	ldr	r6, [sp, #32]
 802198c:	1837      	adds	r7, r6, r0
 802198e:	5c30      	ldrb	r0, [r6, r0]
 8021990:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8021994:	eb04 0c08 	add.w	ip, r4, r8
 8021998:	2b00      	cmp	r3, #0
 802199a:	f000 80d3 	beq.w	8021b44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 802199e:	787e      	ldrb	r6, [r7, #1]
 80219a0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80219a4:	4426      	add	r6, r4
 80219a6:	2900      	cmp	r1, #0
 80219a8:	f000 80d4 	beq.w	8021b54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 80219ac:	18b8      	adds	r0, r7, r2
 80219ae:	5cba      	ldrb	r2, [r7, r2]
 80219b0:	7840      	ldrb	r0, [r0, #1]
 80219b2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80219b6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80219ba:	4422      	add	r2, r4
 80219bc:	4420      	add	r0, r4
 80219be:	b29b      	uxth	r3, r3
 80219c0:	b289      	uxth	r1, r1
 80219c2:	fb03 f901 	mul.w	r9, r3, r1
 80219c6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80219ca:	011b      	lsls	r3, r3, #4
 80219cc:	b289      	uxth	r1, r1
 80219ce:	78b7      	ldrb	r7, [r6, #2]
 80219d0:	f89c a002 	ldrb.w	sl, [ip, #2]
 80219d4:	f89c c001 	ldrb.w	ip, [ip, #1]
 80219d8:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80219dc:	eba3 0309 	sub.w	r3, r3, r9
 80219e0:	b29b      	uxth	r3, r3
 80219e2:	ebae 0e01 	sub.w	lr, lr, r1
 80219e6:	fa1f fe8e 	uxth.w	lr, lr
 80219ea:	435f      	muls	r7, r3
 80219ec:	fb0e 770a 	mla	r7, lr, sl, r7
 80219f0:	f892 a002 	ldrb.w	sl, [r2, #2]
 80219f4:	fb01 770a 	mla	r7, r1, sl, r7
 80219f8:	f890 a002 	ldrb.w	sl, [r0, #2]
 80219fc:	fb09 7a0a 	mla	sl, r9, sl, r7
 8021a00:	f814 7008 	ldrb.w	r7, [r4, r8]
 8021a04:	f896 8000 	ldrb.w	r8, [r6]
 8021a08:	7876      	ldrb	r6, [r6, #1]
 8021a0a:	fb03 f808 	mul.w	r8, r3, r8
 8021a0e:	fb0e 8807 	mla	r8, lr, r7, r8
 8021a12:	7817      	ldrb	r7, [r2, #0]
 8021a14:	fb01 8807 	mla	r8, r1, r7, r8
 8021a18:	7807      	ldrb	r7, [r0, #0]
 8021a1a:	fb09 8707 	mla	r7, r9, r7, r8
 8021a1e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8021a22:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021a26:	ea47 070a 	orr.w	r7, r7, sl
 8021a2a:	4373      	muls	r3, r6
 8021a2c:	f892 a001 	ldrb.w	sl, [r2, #1]
 8021a30:	fb0e 330c 	mla	r3, lr, ip, r3
 8021a34:	fb01 310a 	mla	r1, r1, sl, r3
 8021a38:	f890 a001 	ldrb.w	sl, [r0, #1]
 8021a3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021a3e:	fb09 1a0a 	mla	sl, r9, sl, r1
 8021a42:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8021a46:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8021a4a:	ea47 070a 	orr.w	r7, r7, sl
 8021a4e:	801f      	strh	r7, [r3, #0]
 8021a50:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021a52:	3302      	adds	r3, #2
 8021a54:	9309      	str	r3, [sp, #36]	; 0x24
 8021a56:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8021a58:	449b      	add	fp, r3
 8021a5a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021a5c:	441d      	add	r5, r3
 8021a5e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021a60:	3b01      	subs	r3, #1
 8021a62:	930b      	str	r3, [sp, #44]	; 0x2c
 8021a64:	e76f      	b.n	8021946 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8021a66:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8021a68:	449b      	add	fp, r3
 8021a6a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021a6c:	441d      	add	r5, r3
 8021a6e:	9b06      	ldr	r3, [sp, #24]
 8021a70:	3b01      	subs	r3, #1
 8021a72:	9306      	str	r3, [sp, #24]
 8021a74:	9b07      	ldr	r3, [sp, #28]
 8021a76:	3302      	adds	r3, #2
 8021a78:	9307      	str	r3, [sp, #28]
 8021a7a:	e744      	b.n	8021906 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8021a7c:	d023      	beq.n	8021ac6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 8021a7e:	9b06      	ldr	r3, [sp, #24]
 8021a80:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8021a82:	3b01      	subs	r3, #1
 8021a84:	fb00 b003 	mla	r0, r0, r3, fp
 8021a88:	1400      	asrs	r0, r0, #16
 8021a8a:	f53f af58 	bmi.w	802193e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8021a8e:	3901      	subs	r1, #1
 8021a90:	4288      	cmp	r0, r1
 8021a92:	f6bf af54 	bge.w	802193e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8021a96:	9924      	ldr	r1, [sp, #144]	; 0x90
 8021a98:	fb01 5303 	mla	r3, r1, r3, r5
 8021a9c:	141b      	asrs	r3, r3, #16
 8021a9e:	f53f af4e 	bmi.w	802193e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8021aa2:	3a01      	subs	r2, #1
 8021aa4:	4293      	cmp	r3, r2
 8021aa6:	f6bf af4a 	bge.w	802193e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8021aaa:	9b06      	ldr	r3, [sp, #24]
 8021aac:	9309      	str	r3, [sp, #36]	; 0x24
 8021aae:	9b07      	ldr	r3, [sp, #28]
 8021ab0:	930b      	str	r3, [sp, #44]	; 0x2c
 8021ab2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021ab4:	2b00      	cmp	r3, #0
 8021ab6:	dc70      	bgt.n	8021b9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8021ab8:	9b06      	ldr	r3, [sp, #24]
 8021aba:	9a07      	ldr	r2, [sp, #28]
 8021abc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8021ac0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021ac4:	9307      	str	r3, [sp, #28]
 8021ac6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021ac8:	2b00      	cmp	r3, #0
 8021aca:	f340 80eb 	ble.w	8021ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8021ace:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8021ad2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021ad6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8021ada:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021adc:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8021ae0:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8021ae4:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8021ae8:	eef0 6a48 	vmov.f32	s13, s16
 8021aec:	ee69 7a27 	vmul.f32	s15, s18, s15
 8021af0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021af4:	ee37 8a48 	vsub.f32	s16, s14, s16
 8021af8:	ee16 ba90 	vmov	fp, s13
 8021afc:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8021b00:	eef0 6a68 	vmov.f32	s13, s17
 8021b04:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8021b08:	ee18 2a10 	vmov	r2, s16
 8021b0c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8021b10:	fb92 f3f3 	sdiv	r3, r2, r3
 8021b14:	ee18 2a90 	vmov	r2, s17
 8021b18:	9323      	str	r3, [sp, #140]	; 0x8c
 8021b1a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021b1c:	fb92 f3f3 	sdiv	r3, r2, r3
 8021b20:	9324      	str	r3, [sp, #144]	; 0x90
 8021b22:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021b24:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021b26:	3b01      	subs	r3, #1
 8021b28:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021b2c:	930a      	str	r3, [sp, #40]	; 0x28
 8021b2e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021b30:	bf08      	it	eq
 8021b32:	4613      	moveq	r3, r2
 8021b34:	ee16 5a90 	vmov	r5, s13
 8021b38:	9306      	str	r3, [sp, #24]
 8021b3a:	eef0 8a67 	vmov.f32	s17, s15
 8021b3e:	eeb0 8a47 	vmov.f32	s16, s14
 8021b42:	e6d2      	b.n	80218ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8021b44:	b149      	cbz	r1, 8021b5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 8021b46:	5cba      	ldrb	r2, [r7, r2]
 8021b48:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021b4c:	4422      	add	r2, r4
 8021b4e:	4660      	mov	r0, ip
 8021b50:	4666      	mov	r6, ip
 8021b52:	e734      	b.n	80219be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8021b54:	4660      	mov	r0, ip
 8021b56:	4662      	mov	r2, ip
 8021b58:	e731      	b.n	80219be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8021b5a:	4660      	mov	r0, ip
 8021b5c:	4662      	mov	r2, ip
 8021b5e:	e7f7      	b.n	8021b50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8021b60:	f110 0c01 	adds.w	ip, r0, #1
 8021b64:	f53f af74 	bmi.w	8021a50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8021b68:	4562      	cmp	r2, ip
 8021b6a:	f6ff af71 	blt.w	8021a50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8021b6e:	f116 0c01 	adds.w	ip, r6, #1
 8021b72:	f53f af6d 	bmi.w	8021a50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8021b76:	4567      	cmp	r7, ip
 8021b78:	f6ff af6a 	blt.w	8021a50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8021b7c:	b23f      	sxth	r7, r7
 8021b7e:	b212      	sxth	r2, r2
 8021b80:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8021b84:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8021b88:	9200      	str	r2, [sp, #0]
 8021b8a:	9701      	str	r7, [sp, #4]
 8021b8c:	4623      	mov	r3, r4
 8021b8e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8021b92:	980d      	ldr	r0, [sp, #52]	; 0x34
 8021b94:	f7ff fdc2 	bl	802171c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8021b98:	e75a      	b.n	8021a50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8021b9a:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8021b9c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8021ba0:	ea4f 462b 	mov.w	r6, fp, asr #16
 8021ba4:	1428      	asrs	r0, r5, #16
 8021ba6:	fb02 6000 	mla	r0, r2, r0, r6
 8021baa:	9e08      	ldr	r6, [sp, #32]
 8021bac:	f816 8000 	ldrb.w	r8, [r6, r0]
 8021bb0:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8021bb4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8021bb8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8021bbc:	1837      	adds	r7, r6, r0
 8021bbe:	eb04 0c08 	add.w	ip, r4, r8
 8021bc2:	2b00      	cmp	r3, #0
 8021bc4:	d060      	beq.n	8021c88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8021bc6:	787e      	ldrb	r6, [r7, #1]
 8021bc8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8021bcc:	4426      	add	r6, r4
 8021bce:	2900      	cmp	r1, #0
 8021bd0:	d062      	beq.n	8021c98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 8021bd2:	18b8      	adds	r0, r7, r2
 8021bd4:	5cba      	ldrb	r2, [r7, r2]
 8021bd6:	7840      	ldrb	r0, [r0, #1]
 8021bd8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021bdc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021be0:	4422      	add	r2, r4
 8021be2:	4420      	add	r0, r4
 8021be4:	b29b      	uxth	r3, r3
 8021be6:	b289      	uxth	r1, r1
 8021be8:	fb03 f901 	mul.w	r9, r3, r1
 8021bec:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8021bf0:	011b      	lsls	r3, r3, #4
 8021bf2:	b289      	uxth	r1, r1
 8021bf4:	78b7      	ldrb	r7, [r6, #2]
 8021bf6:	f89c a002 	ldrb.w	sl, [ip, #2]
 8021bfa:	f89c c001 	ldrb.w	ip, [ip, #1]
 8021bfe:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8021c02:	eba3 0309 	sub.w	r3, r3, r9
 8021c06:	b29b      	uxth	r3, r3
 8021c08:	ebae 0e01 	sub.w	lr, lr, r1
 8021c0c:	fa1f fe8e 	uxth.w	lr, lr
 8021c10:	435f      	muls	r7, r3
 8021c12:	fb0e 770a 	mla	r7, lr, sl, r7
 8021c16:	f892 a002 	ldrb.w	sl, [r2, #2]
 8021c1a:	fb01 770a 	mla	r7, r1, sl, r7
 8021c1e:	f890 a002 	ldrb.w	sl, [r0, #2]
 8021c22:	fb09 7a0a 	mla	sl, r9, sl, r7
 8021c26:	f814 7008 	ldrb.w	r7, [r4, r8]
 8021c2a:	f896 8000 	ldrb.w	r8, [r6]
 8021c2e:	7876      	ldrb	r6, [r6, #1]
 8021c30:	fb03 f808 	mul.w	r8, r3, r8
 8021c34:	fb0e 8807 	mla	r8, lr, r7, r8
 8021c38:	7817      	ldrb	r7, [r2, #0]
 8021c3a:	fb01 8807 	mla	r8, r1, r7, r8
 8021c3e:	7807      	ldrb	r7, [r0, #0]
 8021c40:	fb09 8707 	mla	r7, r9, r7, r8
 8021c44:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8021c48:	4373      	muls	r3, r6
 8021c4a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021c4e:	7856      	ldrb	r6, [r2, #1]
 8021c50:	ea47 070a 	orr.w	r7, r7, sl
 8021c54:	fb0e 330c 	mla	r3, lr, ip, r3
 8021c58:	f890 a001 	ldrb.w	sl, [r0, #1]
 8021c5c:	fb01 3306 	mla	r3, r1, r6, r3
 8021c60:	fb09 3a0a 	mla	sl, r9, sl, r3
 8021c64:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8021c68:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021c6a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8021c6e:	ea47 070a 	orr.w	r7, r7, sl
 8021c72:	f823 7b02 	strh.w	r7, [r3], #2
 8021c76:	930b      	str	r3, [sp, #44]	; 0x2c
 8021c78:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8021c7a:	449b      	add	fp, r3
 8021c7c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021c7e:	441d      	add	r5, r3
 8021c80:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021c82:	3b01      	subs	r3, #1
 8021c84:	9309      	str	r3, [sp, #36]	; 0x24
 8021c86:	e714      	b.n	8021ab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 8021c88:	b149      	cbz	r1, 8021c9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 8021c8a:	5cba      	ldrb	r2, [r7, r2]
 8021c8c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021c90:	4422      	add	r2, r4
 8021c92:	4660      	mov	r0, ip
 8021c94:	4666      	mov	r6, ip
 8021c96:	e7a5      	b.n	8021be4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8021c98:	4660      	mov	r0, ip
 8021c9a:	4662      	mov	r2, ip
 8021c9c:	e7a2      	b.n	8021be4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8021c9e:	4660      	mov	r0, ip
 8021ca0:	4662      	mov	r2, ip
 8021ca2:	e7f7      	b.n	8021c94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 8021ca4:	b00f      	add	sp, #60	; 0x3c
 8021ca6:	ecbd 8b08 	vpop	{d8-d11}
 8021caa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08021cb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8021cb0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021cb4:	e9dd 540e 	ldrd	r5, r4, [sp, #56]	; 0x38
 8021cb8:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 8021cbc:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 8021cc0:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8021cc4:	f89d 7044 	ldrb.w	r7, [sp, #68]	; 0x44
 8021cc8:	fb04 560c 	mla	r6, r4, ip, r5
 8021ccc:	2c00      	cmp	r4, #0
 8021cce:	eb02 0e06 	add.w	lr, r2, r6
 8021cd2:	db3d      	blt.n	8021d50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 8021cd4:	45a0      	cmp	r8, r4
 8021cd6:	dd3b      	ble.n	8021d50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 8021cd8:	2d00      	cmp	r5, #0
 8021cda:	db37      	blt.n	8021d4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 8021cdc:	45ac      	cmp	ip, r5
 8021cde:	dd35      	ble.n	8021d4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 8021ce0:	5d92      	ldrb	r2, [r2, r6]
 8021ce2:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8021ce6:	1c6e      	adds	r6, r5, #1
 8021ce8:	d435      	bmi.n	8021d56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8021cea:	45b4      	cmp	ip, r6
 8021cec:	dd33      	ble.n	8021d56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8021cee:	b3a0      	cbz	r0, 8021d5a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xaa>
 8021cf0:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8021cf4:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8021cf8:	3401      	adds	r4, #1
 8021cfa:	d432      	bmi.n	8021d62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 8021cfc:	45a0      	cmp	r8, r4
 8021cfe:	dd30      	ble.n	8021d62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 8021d00:	b397      	cbz	r7, 8021d68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb8>
 8021d02:	2d00      	cmp	r5, #0
 8021d04:	db2b      	blt.n	8021d5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 8021d06:	45ac      	cmp	ip, r5
 8021d08:	dd29      	ble.n	8021d5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 8021d0a:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8021d0e:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8021d12:	3501      	adds	r5, #1
 8021d14:	d42b      	bmi.n	8021d6e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8021d16:	45ac      	cmp	ip, r5
 8021d18:	dd29      	ble.n	8021d6e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8021d1a:	b350      	cbz	r0, 8021d72 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8021d1c:	44f4      	add	ip, lr
 8021d1e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8021d22:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8021d26:	280f      	cmp	r0, #15
 8021d28:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8021d2c:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8021d30:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8021d34:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8021d38:	d801      	bhi.n	8021d3e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x8e>
 8021d3a:	2f0f      	cmp	r7, #15
 8021d3c:	d91b      	bls.n	8021d76 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc6>
 8021d3e:	4b8d      	ldr	r3, [pc, #564]	; (8021f74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8021d40:	4a8d      	ldr	r2, [pc, #564]	; (8021f78 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 8021d42:	488e      	ldr	r0, [pc, #568]	; (8021f7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 8021d44:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8021d48:	f005 fd1a 	bl	8027780 <__assert_func>
 8021d4c:	2200      	movs	r2, #0
 8021d4e:	e7ca      	b.n	8021ce6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x36>
 8021d50:	2600      	movs	r6, #0
 8021d52:	4632      	mov	r2, r6
 8021d54:	e7d0      	b.n	8021cf8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 8021d56:	2600      	movs	r6, #0
 8021d58:	e7ce      	b.n	8021cf8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 8021d5a:	4606      	mov	r6, r0
 8021d5c:	e7cc      	b.n	8021cf8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 8021d5e:	2400      	movs	r4, #0
 8021d60:	e7d7      	b.n	8021d12 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x62>
 8021d62:	2300      	movs	r3, #0
 8021d64:	461c      	mov	r4, r3
 8021d66:	e7de      	b.n	8021d26 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 8021d68:	463b      	mov	r3, r7
 8021d6a:	463c      	mov	r4, r7
 8021d6c:	e7db      	b.n	8021d26 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 8021d6e:	2300      	movs	r3, #0
 8021d70:	e7d9      	b.n	8021d26 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 8021d72:	4603      	mov	r3, r0
 8021d74:	e7d7      	b.n	8021d26 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 8021d76:	b280      	uxth	r0, r0
 8021d78:	b2bf      	uxth	r7, r7
 8021d7a:	fb07 fe00 	mul.w	lr, r7, r0
 8021d7e:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8021d82:	0100      	lsls	r0, r0, #4
 8021d84:	eba0 0c0e 	sub.w	ip, r0, lr
 8021d88:	b2bf      	uxth	r7, r7
 8021d8a:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8021d8e:	fa1f fc8c 	uxth.w	ip, ip
 8021d92:	1bed      	subs	r5, r5, r7
 8021d94:	b2ad      	uxth	r5, r5
 8021d96:	fb0a f00c 	mul.w	r0, sl, ip
 8021d9a:	fb0b 0005 	mla	r0, fp, r5, r0
 8021d9e:	fb07 0009 	mla	r0, r7, r9, r0
 8021da2:	fb0e 0008 	mla	r0, lr, r8, r0
 8021da6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8021daa:	9001      	str	r0, [sp, #4]
 8021dac:	2800      	cmp	r0, #0
 8021dae:	f000 80de 	beq.w	8021f6e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2be>
 8021db2:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8021db6:	d018      	beq.n	8021dea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x13a>
 8021db8:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8021dbc:	fb0b f000 	mul.w	r0, fp, r0
 8021dc0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8021dc4:	fb0b fb02 	mul.w	fp, fp, r2
 8021dc8:	0a02      	lsrs	r2, r0, #8
 8021dca:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8021dce:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8021dd2:	4402      	add	r2, r0
 8021dd4:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8021dd8:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8021ddc:	0a12      	lsrs	r2, r2, #8
 8021dde:	0a00      	lsrs	r0, r0, #8
 8021de0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8021de4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8021de8:	4302      	orrs	r2, r0
 8021dea:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8021dee:	d01a      	beq.n	8021e26 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x176>
 8021df0:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 8021df4:	fb0a f000 	mul.w	r0, sl, r0
 8021df8:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8021dfc:	fb0a fa06 	mul.w	sl, sl, r6
 8021e00:	0a06      	lsrs	r6, r0, #8
 8021e02:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8021e06:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8021e0a:	4406      	add	r6, r0
 8021e0c:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8021e10:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8021e14:	0a36      	lsrs	r6, r6, #8
 8021e16:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021e1a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8021e1e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021e22:	ea46 060a 	orr.w	r6, r6, sl
 8021e26:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021e2a:	d01b      	beq.n	8021e64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1b4>
 8021e2c:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8021e30:	fb09 fa0a 	mul.w	sl, r9, sl
 8021e34:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8021e38:	fb09 f004 	mul.w	r0, r9, r4
 8021e3c:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8021e40:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8021e44:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021e48:	f500 7980 	add.w	r9, r0, #256	; 0x100
 8021e4c:	4454      	add	r4, sl
 8021e4e:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 8021e52:	0a24      	lsrs	r4, r4, #8
 8021e54:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021e58:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8021e5c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8021e60:	ea44 0409 	orr.w	r4, r4, r9
 8021e64:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021e68:	d01b      	beq.n	8021ea2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1f2>
 8021e6a:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8021e6e:	fb08 f909 	mul.w	r9, r8, r9
 8021e72:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021e76:	fb08 f003 	mul.w	r0, r8, r3
 8021e7a:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8021e7e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021e82:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8021e86:	f500 7880 	add.w	r8, r0, #256	; 0x100
 8021e8a:	444b      	add	r3, r9
 8021e8c:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 8021e90:	0a1b      	lsrs	r3, r3, #8
 8021e92:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8021e96:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021e9a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8021e9e:	ea43 0308 	orr.w	r3, r3, r8
 8021ea2:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8021ea6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8021eaa:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 8021eae:	fb0c f808 	mul.w	r8, ip, r8
 8021eb2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8021eb6:	fb0c f606 	mul.w	r6, ip, r6
 8021eba:	fb05 8909 	mla	r9, r5, r9, r8
 8021ebe:	fb05 6502 	mla	r5, r5, r2, r6
 8021ec2:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8021ec6:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8021eca:	9a01      	ldr	r2, [sp, #4]
 8021ecc:	8808      	ldrh	r0, [r1, #0]
 8021ece:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8021ed2:	fb07 9908 	mla	r9, r7, r8, r9
 8021ed6:	fb07 5704 	mla	r7, r7, r4, r5
 8021eda:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8021ede:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021ee2:	b2b6      	uxth	r6, r6
 8021ee4:	fb0e 9808 	mla	r8, lr, r8, r9
 8021ee8:	fb0e 7e03 	mla	lr, lr, r3, r7
 8021eec:	4372      	muls	r2, r6
 8021eee:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8021ef2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021ef6:	1c53      	adds	r3, r2, #1
 8021ef8:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 8021efc:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8021f00:	ea48 0e0e 	orr.w	lr, r8, lr
 8021f04:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021f08:	1205      	asrs	r5, r0, #8
 8021f0a:	ea4f 421e 	mov.w	r2, lr, lsr #16
 8021f0e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8021f12:	b2db      	uxtb	r3, r3
 8021f14:	fb12 f206 	smulbb	r2, r2, r6
 8021f18:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021f1c:	fb05 2503 	mla	r5, r5, r3, r2
 8021f20:	f3ce 2407 	ubfx	r4, lr, #8, #8
 8021f24:	10c2      	asrs	r2, r0, #3
 8021f26:	fa5f fe8e 	uxtb.w	lr, lr
 8021f2a:	00c0      	lsls	r0, r0, #3
 8021f2c:	fb14 f406 	smulbb	r4, r4, r6
 8021f30:	b2c0      	uxtb	r0, r0
 8021f32:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021f36:	fb1e fe06 	smulbb	lr, lr, r6
 8021f3a:	fb02 4203 	mla	r2, r2, r3, r4
 8021f3e:	b2ad      	uxth	r5, r5
 8021f40:	fb00 e303 	mla	r3, r0, r3, lr
 8021f44:	b298      	uxth	r0, r3
 8021f46:	b294      	uxth	r4, r2
 8021f48:	1c6b      	adds	r3, r5, #1
 8021f4a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021f4e:	1c62      	adds	r2, r4, #1
 8021f50:	1c43      	adds	r3, r0, #1
 8021f52:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021f56:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8021f5a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021f5e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021f62:	0952      	lsrs	r2, r2, #5
 8021f64:	432b      	orrs	r3, r5
 8021f66:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021f6a:	4313      	orrs	r3, r2
 8021f6c:	800b      	strh	r3, [r1, #0]
 8021f6e:	b003      	add	sp, #12
 8021f70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021f74:	0802d4b6 	.word	0x0802d4b6
 8021f78:	0802da86 	.word	0x0802da86
 8021f7c:	0802d53a 	.word	0x0802d53a

08021f80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021f80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021f84:	ed2d 8b08 	vpush	{d8-d11}
 8021f88:	b09f      	sub	sp, #124	; 0x7c
 8021f8a:	eeb0 aa40 	vmov.f32	s20, s0
 8021f8e:	921b      	str	r2, [sp, #108]	; 0x6c
 8021f90:	9309      	str	r3, [sp, #36]	; 0x24
 8021f92:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 8021f94:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 8021f98:	931c      	str	r3, [sp, #112]	; 0x70
 8021f9a:	9119      	str	r1, [sp, #100]	; 0x64
 8021f9c:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 8021fa0:	901d      	str	r0, [sp, #116]	; 0x74
 8021fa2:	6850      	ldr	r0, [r2, #4]
 8021fa4:	6812      	ldr	r2, [r2, #0]
 8021fa6:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 8021fa8:	fb00 1303 	mla	r3, r0, r3, r1
 8021fac:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021fb0:	930c      	str	r3, [sp, #48]	; 0x30
 8021fb2:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8021fb4:	681b      	ldr	r3, [r3, #0]
 8021fb6:	9312      	str	r3, [sp, #72]	; 0x48
 8021fb8:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8021fba:	685e      	ldr	r6, [r3, #4]
 8021fbc:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8021fc0:	930d      	str	r3, [sp, #52]	; 0x34
 8021fc2:	eef0 9a60 	vmov.f32	s19, s1
 8021fc6:	eeb0 9a41 	vmov.f32	s18, s2
 8021fca:	eeb0 8a62 	vmov.f32	s16, s5
 8021fce:	eef0 8a43 	vmov.f32	s17, s6
 8021fd2:	eef0 ba44 	vmov.f32	s23, s8
 8021fd6:	eeb0 ba64 	vmov.f32	s22, s9
 8021fda:	eef0 aa45 	vmov.f32	s21, s10
 8021fde:	3604      	adds	r6, #4
 8021fe0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8021fe2:	2b00      	cmp	r3, #0
 8021fe4:	dc03      	bgt.n	8021fee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021fe6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021fe8:	2b00      	cmp	r3, #0
 8021fea:	f340 8388 	ble.w	80226fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 8021fee:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8021ff0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021ff4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021ff8:	1e48      	subs	r0, r1, #1
 8021ffa:	1e57      	subs	r7, r2, #1
 8021ffc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021ffe:	2b00      	cmp	r3, #0
 8022000:	f340 8195 	ble.w	802232e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8022004:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8022006:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802200a:	ea4f 4325 	mov.w	r3, r5, asr #16
 802200e:	d406      	bmi.n	802201e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8022010:	4584      	cmp	ip, r0
 8022012:	da04      	bge.n	802201e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8022014:	2b00      	cmp	r3, #0
 8022016:	db02      	blt.n	802201e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8022018:	42bb      	cmp	r3, r7
 802201a:	f2c0 8189 	blt.w	8022330 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 802201e:	f11c 0c01 	adds.w	ip, ip, #1
 8022022:	f100 8177 	bmi.w	8022314 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8022026:	4561      	cmp	r1, ip
 8022028:	f2c0 8174 	blt.w	8022314 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 802202c:	3301      	adds	r3, #1
 802202e:	f100 8171 	bmi.w	8022314 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8022032:	429a      	cmp	r2, r3
 8022034:	f2c0 816e 	blt.w	8022314 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8022038:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802203a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 802203c:	931a      	str	r3, [sp, #104]	; 0x68
 802203e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8022040:	2b00      	cmp	r3, #0
 8022042:	f340 8193 	ble.w	802236c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8022046:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8022048:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802204c:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 802204e:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8022052:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8022054:	141b      	asrs	r3, r3, #16
 8022056:	ea4f 4c25 	mov.w	ip, r5, asr #16
 802205a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 802205e:	f100 81d6 	bmi.w	802240e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8022062:	f100 38ff 	add.w	r8, r0, #4294967295
 8022066:	4543      	cmp	r3, r8
 8022068:	f280 81d1 	bge.w	802240e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802206c:	f1bc 0f00 	cmp.w	ip, #0
 8022070:	f2c0 81cd 	blt.w	802240e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8022074:	f10e 38ff 	add.w	r8, lr, #4294967295
 8022078:	45c4      	cmp	ip, r8
 802207a:	f280 81c8 	bge.w	802240e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802207e:	b200      	sxth	r0, r0
 8022080:	fb0c 3300 	mla	r3, ip, r0, r3
 8022084:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022086:	eb04 0803 	add.w	r8, r4, r3
 802208a:	5ce3      	ldrb	r3, [r4, r3]
 802208c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8022090:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8022094:	2a00      	cmp	r2, #0
 8022096:	f000 81af 	beq.w	80223f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 802209a:	f898 c001 	ldrb.w	ip, [r8, #1]
 802209e:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80220a2:	940e      	str	r4, [sp, #56]	; 0x38
 80220a4:	0e24      	lsrs	r4, r4, #24
 80220a6:	9415      	str	r4, [sp, #84]	; 0x54
 80220a8:	b179      	cbz	r1, 80220ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80220aa:	eb08 0c00 	add.w	ip, r8, r0
 80220ae:	f818 0000 	ldrb.w	r0, [r8, r0]
 80220b2:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80220b6:	900a      	str	r0, [sp, #40]	; 0x28
 80220b8:	0e00      	lsrs	r0, r0, #24
 80220ba:	9013      	str	r0, [sp, #76]	; 0x4c
 80220bc:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80220c0:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80220c4:	900f      	str	r0, [sp, #60]	; 0x3c
 80220c6:	0e00      	lsrs	r0, r0, #24
 80220c8:	9016      	str	r0, [sp, #88]	; 0x58
 80220ca:	b292      	uxth	r2, r2
 80220cc:	b289      	uxth	r1, r1
 80220ce:	fb02 f901 	mul.w	r9, r2, r1
 80220d2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80220d6:	0112      	lsls	r2, r2, #4
 80220d8:	eba2 0809 	sub.w	r8, r2, r9
 80220dc:	b289      	uxth	r1, r1
 80220de:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80220e2:	9815      	ldr	r0, [sp, #84]	; 0x54
 80220e4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80220e6:	fa1f f888 	uxth.w	r8, r8
 80220ea:	1a52      	subs	r2, r2, r1
 80220ec:	b292      	uxth	r2, r2
 80220ee:	fb08 f000 	mul.w	r0, r8, r0
 80220f2:	fb02 000e 	mla	r0, r2, lr, r0
 80220f6:	fb01 0004 	mla	r0, r1, r4, r0
 80220fa:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80220fc:	fb09 0004 	mla	r0, r9, r4, r0
 8022100:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8022104:	2800      	cmp	r0, #0
 8022106:	f000 80fa 	beq.w	80222fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 802210a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802210e:	d01b      	beq.n	8022148 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8022110:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8022114:	fb0e fa0a 	mul.w	sl, lr, sl
 8022118:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802211c:	fb0e fe03 	mul.w	lr, lr, r3
 8022120:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022124:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022128:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802212c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8022130:	4453      	add	r3, sl
 8022132:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8022136:	0a1b      	lsrs	r3, r3, #8
 8022138:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802213c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022140:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022144:	ea43 030c 	orr.w	r3, r3, ip
 8022148:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802214a:	2cff      	cmp	r4, #255	; 0xff
 802214c:	d021      	beq.n	8022192 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 802214e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022150:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022154:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022156:	fb04 fb0b 	mul.w	fp, r4, fp
 802215a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802215c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022160:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022162:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022166:	fb04 fa0a 	mul.w	sl, r4, sl
 802216a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802216e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022172:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022176:	44de      	add	lr, fp
 8022178:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802217c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022180:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022184:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022188:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802218c:	ea4e 040a 	orr.w	r4, lr, sl
 8022190:	940e      	str	r4, [sp, #56]	; 0x38
 8022192:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022194:	2cff      	cmp	r4, #255	; 0xff
 8022196:	d021      	beq.n	80221dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 8022198:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802219a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802219e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80221a0:	fb04 fb0b 	mul.w	fp, r4, fp
 80221a4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80221a6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80221aa:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80221ac:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80221b0:	fb04 fa0a 	mul.w	sl, r4, sl
 80221b4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80221b8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80221bc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80221c0:	44de      	add	lr, fp
 80221c2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80221c6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80221ca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80221ce:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80221d2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80221d6:	ea4e 040a 	orr.w	r4, lr, sl
 80221da:	940a      	str	r4, [sp, #40]	; 0x28
 80221dc:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80221de:	2cff      	cmp	r4, #255	; 0xff
 80221e0:	d021      	beq.n	8022226 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80221e2:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80221e4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80221e8:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80221ea:	fb04 fb0b 	mul.w	fp, r4, fp
 80221ee:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80221f0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80221f4:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80221f6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80221fa:	fb04 fa0a 	mul.w	sl, r4, sl
 80221fe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022202:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022206:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802220a:	44de      	add	lr, fp
 802220c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022210:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022214:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022218:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802221c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022220:	ea4e 040a 	orr.w	r4, lr, sl
 8022224:	940f      	str	r4, [sp, #60]	; 0x3c
 8022226:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022228:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802222c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802222e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8022232:	fb08 fc0c 	mul.w	ip, r8, ip
 8022236:	fb02 cc0e 	mla	ip, r2, lr, ip
 802223a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802223e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022240:	fb01 cc0e 	mla	ip, r1, lr, ip
 8022244:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8022248:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802224a:	fb09 cc0e 	mla	ip, r9, lr, ip
 802224e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8022252:	fb08 f80e 	mul.w	r8, r8, lr
 8022256:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802225a:	fb02 8303 	mla	r3, r2, r3, r8
 802225e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8022260:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022262:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8022266:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022268:	fb01 330a 	mla	r3, r1, sl, r3
 802226c:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8022270:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8022272:	fb09 3901 	mla	r9, r9, r1, r3
 8022276:	4342      	muls	r2, r0
 8022278:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802227c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022280:	883b      	ldrh	r3, [r7, #0]
 8022282:	1c50      	adds	r0, r2, #1
 8022284:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022288:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 802228c:	ea4c 0c09 	orr.w	ip, ip, r9
 8022290:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8022294:	1219      	asrs	r1, r3, #8
 8022296:	ea4f 421c 	mov.w	r2, ip, lsr #16
 802229a:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 802229e:	b2c0      	uxtb	r0, r0
 80222a0:	fb12 f204 	smulbb	r2, r2, r4
 80222a4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80222a8:	fb01 2100 	mla	r1, r1, r0, r2
 80222ac:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80222b0:	10da      	asrs	r2, r3, #3
 80222b2:	fa5f fc8c 	uxtb.w	ip, ip
 80222b6:	00db      	lsls	r3, r3, #3
 80222b8:	fb1c fc04 	smulbb	ip, ip, r4
 80222bc:	b2db      	uxtb	r3, r3
 80222be:	b289      	uxth	r1, r1
 80222c0:	fb03 c300 	mla	r3, r3, r0, ip
 80222c4:	fa1f fc83 	uxth.w	ip, r3
 80222c8:	1c4b      	adds	r3, r1, #1
 80222ca:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80222ce:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80222d2:	fb1e fe04 	smulbb	lr, lr, r4
 80222d6:	f10c 0301 	add.w	r3, ip, #1
 80222da:	fb02 e200 	mla	r2, r2, r0, lr
 80222de:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80222e2:	b292      	uxth	r2, r2
 80222e4:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80222e8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80222ec:	430b      	orrs	r3, r1
 80222ee:	1c51      	adds	r1, r2, #1
 80222f0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80222f4:	0952      	lsrs	r2, r2, #5
 80222f6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80222fa:	4313      	orrs	r3, r2
 80222fc:	803b      	strh	r3, [r7, #0]
 80222fe:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8022300:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8022302:	441a      	add	r2, r3
 8022304:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8022306:	9231      	str	r2, [sp, #196]	; 0xc4
 8022308:	441d      	add	r5, r3
 802230a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 802230c:	3b01      	subs	r3, #1
 802230e:	3702      	adds	r7, #2
 8022310:	931a      	str	r3, [sp, #104]	; 0x68
 8022312:	e694      	b.n	802203e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8022314:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8022316:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8022318:	441c      	add	r4, r3
 802231a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 802231c:	9431      	str	r4, [sp, #196]	; 0xc4
 802231e:	441d      	add	r5, r3
 8022320:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022322:	3b01      	subs	r3, #1
 8022324:	9309      	str	r3, [sp, #36]	; 0x24
 8022326:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022328:	3302      	adds	r3, #2
 802232a:	930c      	str	r3, [sp, #48]	; 0x30
 802232c:	e666      	b.n	8021ffc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802232e:	d024      	beq.n	802237a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fa>
 8022330:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022332:	9833      	ldr	r0, [sp, #204]	; 0xcc
 8022334:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8022336:	3b01      	subs	r3, #1
 8022338:	fb00 4003 	mla	r0, r0, r3, r4
 802233c:	1400      	asrs	r0, r0, #16
 802233e:	f53f ae7b 	bmi.w	8022038 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8022342:	3901      	subs	r1, #1
 8022344:	4288      	cmp	r0, r1
 8022346:	f6bf ae77 	bge.w	8022038 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802234a:	9934      	ldr	r1, [sp, #208]	; 0xd0
 802234c:	fb01 5303 	mla	r3, r1, r3, r5
 8022350:	141b      	asrs	r3, r3, #16
 8022352:	f53f ae71 	bmi.w	8022038 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8022356:	3a01      	subs	r2, #1
 8022358:	4293      	cmp	r3, r2
 802235a:	f6bf ae6d 	bge.w	8022038 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802235e:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8022362:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8022366:	f1bb 0f00 	cmp.w	fp, #0
 802236a:	dc70      	bgt.n	802244e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 802236c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802236e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022372:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022374:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022378:	930c      	str	r3, [sp, #48]	; 0x30
 802237a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802237c:	2b00      	cmp	r3, #0
 802237e:	f340 81be 	ble.w	80226fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 8022382:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8022386:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802238a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802238e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8022390:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8022394:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8022398:	ee29 7aa7 	vmul.f32	s14, s19, s15
 802239c:	eef0 6a48 	vmov.f32	s13, s16
 80223a0:	ee69 7a27 	vmul.f32	s15, s18, s15
 80223a4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80223a8:	ee37 8a48 	vsub.f32	s16, s14, s16
 80223ac:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 80223b0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80223b4:	eef0 6a68 	vmov.f32	s13, s17
 80223b8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80223bc:	ee18 2a10 	vmov	r2, s16
 80223c0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80223c4:	fb92 f3f3 	sdiv	r3, r2, r3
 80223c8:	ee18 2a90 	vmov	r2, s17
 80223cc:	9333      	str	r3, [sp, #204]	; 0xcc
 80223ce:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80223d0:	fb92 f3f3 	sdiv	r3, r2, r3
 80223d4:	9334      	str	r3, [sp, #208]	; 0xd0
 80223d6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80223d8:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80223da:	3b01      	subs	r3, #1
 80223dc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80223e0:	9319      	str	r3, [sp, #100]	; 0x64
 80223e2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80223e4:	bf08      	it	eq
 80223e6:	4613      	moveq	r3, r2
 80223e8:	ee16 5a90 	vmov	r5, s13
 80223ec:	9309      	str	r3, [sp, #36]	; 0x24
 80223ee:	eef0 8a67 	vmov.f32	s17, s15
 80223f2:	eeb0 8a47 	vmov.f32	s16, s14
 80223f6:	e5f3      	b.n	8021fe0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80223f8:	2900      	cmp	r1, #0
 80223fa:	f43f ae66 	beq.w	80220ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80223fe:	f818 0000 	ldrb.w	r0, [r8, r0]
 8022402:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8022406:	900a      	str	r0, [sp, #40]	; 0x28
 8022408:	0e00      	lsrs	r0, r0, #24
 802240a:	9013      	str	r0, [sp, #76]	; 0x4c
 802240c:	e65d      	b.n	80220ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802240e:	f113 0801 	adds.w	r8, r3, #1
 8022412:	f53f af74 	bmi.w	80222fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8022416:	4540      	cmp	r0, r8
 8022418:	f6ff af71 	blt.w	80222fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 802241c:	f11c 0801 	adds.w	r8, ip, #1
 8022420:	f53f af6d 	bmi.w	80222fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8022424:	45c6      	cmp	lr, r8
 8022426:	f6ff af6a 	blt.w	80222fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 802242a:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 802242c:	9302      	str	r3, [sp, #8]
 802242e:	b200      	sxth	r0, r0
 8022430:	fa0f f38e 	sxth.w	r3, lr
 8022434:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8022438:	e9cd c203 	strd	ip, r2, [sp, #12]
 802243c:	9301      	str	r3, [sp, #4]
 802243e:	9000      	str	r0, [sp, #0]
 8022440:	4633      	mov	r3, r6
 8022442:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8022444:	981d      	ldr	r0, [sp, #116]	; 0x74
 8022446:	4639      	mov	r1, r7
 8022448:	f7ff fc32 	bl	8021cb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 802244c:	e757      	b.n	80222fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 802244e:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8022450:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8022452:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022456:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8022458:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802245c:	1427      	asrs	r7, r4, #16
 802245e:	142b      	asrs	r3, r5, #16
 8022460:	fb01 7303 	mla	r3, r1, r3, r7
 8022464:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022466:	18e7      	adds	r7, r4, r3
 8022468:	5ce3      	ldrb	r3, [r4, r3]
 802246a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802246e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8022472:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8022476:	2a00      	cmp	r2, #0
 8022478:	f000 8137 	beq.w	80226ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 802247c:	f897 e001 	ldrb.w	lr, [r7, #1]
 8022480:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8022484:	9410      	str	r4, [sp, #64]	; 0x40
 8022486:	0e24      	lsrs	r4, r4, #24
 8022488:	9417      	str	r4, [sp, #92]	; 0x5c
 802248a:	b170      	cbz	r0, 80224aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 802248c:	eb07 0e01 	add.w	lr, r7, r1
 8022490:	5c79      	ldrb	r1, [r7, r1]
 8022492:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022496:	910b      	str	r1, [sp, #44]	; 0x2c
 8022498:	0e09      	lsrs	r1, r1, #24
 802249a:	9114      	str	r1, [sp, #80]	; 0x50
 802249c:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80224a0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80224a4:	9111      	str	r1, [sp, #68]	; 0x44
 80224a6:	0e09      	lsrs	r1, r1, #24
 80224a8:	9118      	str	r1, [sp, #96]	; 0x60
 80224aa:	b292      	uxth	r2, r2
 80224ac:	b280      	uxth	r0, r0
 80224ae:	fb02 f800 	mul.w	r8, r2, r0
 80224b2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80224b6:	0112      	lsls	r2, r2, #4
 80224b8:	eba2 0e08 	sub.w	lr, r2, r8
 80224bc:	b280      	uxth	r0, r0
 80224be:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80224c2:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80224c4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80224c6:	fa1f fe8e 	uxth.w	lr, lr
 80224ca:	1a12      	subs	r2, r2, r0
 80224cc:	b292      	uxth	r2, r2
 80224ce:	fb0e f101 	mul.w	r1, lr, r1
 80224d2:	fb02 110c 	mla	r1, r2, ip, r1
 80224d6:	fb00 1104 	mla	r1, r0, r4, r1
 80224da:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80224dc:	fb08 1104 	mla	r1, r8, r4, r1
 80224e0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80224e4:	2900      	cmp	r1, #0
 80224e6:	f000 80f5 	beq.w	80226d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 80224ea:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80224ee:	d019      	beq.n	8022524 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 80224f0:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80224f4:	fb0c fa0a 	mul.w	sl, ip, sl
 80224f8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80224fc:	fb0c fc03 	mul.w	ip, ip, r3
 8022500:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022504:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022508:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802250c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8022510:	4453      	add	r3, sl
 8022512:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8022516:	0a1b      	lsrs	r3, r3, #8
 8022518:	0a3f      	lsrs	r7, r7, #8
 802251a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802251e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8022522:	433b      	orrs	r3, r7
 8022524:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8022526:	2cff      	cmp	r4, #255	; 0xff
 8022528:	d020      	beq.n	802256c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 802252a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802252c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022530:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8022532:	4367      	muls	r7, r4
 8022534:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022536:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802253a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802253c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022540:	fb04 fa0a 	mul.w	sl, r4, sl
 8022544:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022548:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802254c:	44bc      	add	ip, r7
 802254e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022552:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022556:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802255a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802255e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022562:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022566:	ea4c 040a 	orr.w	r4, ip, sl
 802256a:	9410      	str	r4, [sp, #64]	; 0x40
 802256c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802256e:	2cff      	cmp	r4, #255	; 0xff
 8022570:	d020      	beq.n	80225b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8022572:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022574:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022578:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802257a:	4367      	muls	r7, r4
 802257c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802257e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022582:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022584:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022588:	fb04 fa0a 	mul.w	sl, r4, sl
 802258c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022590:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022594:	44bc      	add	ip, r7
 8022596:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802259a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802259e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80225a2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80225a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80225aa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80225ae:	ea4c 040a 	orr.w	r4, ip, sl
 80225b2:	940b      	str	r4, [sp, #44]	; 0x2c
 80225b4:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80225b6:	2cff      	cmp	r4, #255	; 0xff
 80225b8:	d020      	beq.n	80225fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x67c>
 80225ba:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80225bc:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80225c0:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80225c2:	4367      	muls	r7, r4
 80225c4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80225c6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80225ca:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80225cc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80225d0:	fb04 fa0a 	mul.w	sl, r4, sl
 80225d4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80225d8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80225dc:	44bc      	add	ip, r7
 80225de:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80225e2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80225e6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80225ea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80225ee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80225f2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80225f6:	ea4c 040a 	orr.w	r4, ip, sl
 80225fa:	9411      	str	r4, [sp, #68]	; 0x44
 80225fc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80225fe:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022602:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022604:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8022608:	fb0e f707 	mul.w	r7, lr, r7
 802260c:	fb02 770c 	mla	r7, r2, ip, r7
 8022610:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022614:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022616:	fb00 770c 	mla	r7, r0, ip, r7
 802261a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802261e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022620:	fb08 770c 	mla	r7, r8, ip, r7
 8022624:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8022628:	fb0e fe0c 	mul.w	lr, lr, ip
 802262c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022630:	fb02 e303 	mla	r3, r2, r3, lr
 8022634:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022636:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022638:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802263c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802263e:	fb00 330a 	mla	r3, r0, sl, r3
 8022642:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8022646:	fb08 3c0c 	mla	ip, r8, ip, r3
 802264a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802264c:	f8b9 0000 	ldrh.w	r0, [r9]
 8022650:	434b      	muls	r3, r1
 8022652:	0a3f      	lsrs	r7, r7, #8
 8022654:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022658:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802265c:	1c59      	adds	r1, r3, #1
 802265e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8022662:	ea47 070c 	orr.w	r7, r7, ip
 8022666:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 802266a:	1202      	asrs	r2, r0, #8
 802266c:	0c3b      	lsrs	r3, r7, #16
 802266e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8022672:	b2c9      	uxtb	r1, r1
 8022674:	fb13 f304 	smulbb	r3, r3, r4
 8022678:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802267c:	fb02 3201 	mla	r2, r2, r1, r3
 8022680:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8022684:	10c3      	asrs	r3, r0, #3
 8022686:	b2ff      	uxtb	r7, r7
 8022688:	00c0      	lsls	r0, r0, #3
 802268a:	b292      	uxth	r2, r2
 802268c:	fb1c fc04 	smulbb	ip, ip, r4
 8022690:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8022694:	b2c0      	uxtb	r0, r0
 8022696:	fb17 f704 	smulbb	r7, r7, r4
 802269a:	fb03 c301 	mla	r3, r3, r1, ip
 802269e:	fb00 7001 	mla	r0, r0, r1, r7
 80226a2:	f102 0c01 	add.w	ip, r2, #1
 80226a6:	b280      	uxth	r0, r0
 80226a8:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80226ac:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 80226b0:	1c42      	adds	r2, r0, #1
 80226b2:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80226b6:	b29b      	uxth	r3, r3
 80226b8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80226bc:	ea42 020c 	orr.w	r2, r2, ip
 80226c0:	f103 0c01 	add.w	ip, r3, #1
 80226c4:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80226c8:	095b      	lsrs	r3, r3, #5
 80226ca:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80226ce:	431a      	orrs	r2, r3
 80226d0:	f8a9 2000 	strh.w	r2, [r9]
 80226d4:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80226d6:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 80226d8:	441a      	add	r2, r3
 80226da:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80226dc:	9231      	str	r2, [sp, #196]	; 0xc4
 80226de:	f109 0902 	add.w	r9, r9, #2
 80226e2:	441d      	add	r5, r3
 80226e4:	f10b 3bff 	add.w	fp, fp, #4294967295
 80226e8:	e63d      	b.n	8022366 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80226ea:	2800      	cmp	r0, #0
 80226ec:	f43f aedd 	beq.w	80224aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 80226f0:	5c79      	ldrb	r1, [r7, r1]
 80226f2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80226f6:	910b      	str	r1, [sp, #44]	; 0x2c
 80226f8:	0e09      	lsrs	r1, r1, #24
 80226fa:	9114      	str	r1, [sp, #80]	; 0x50
 80226fc:	e6d5      	b.n	80224aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 80226fe:	b01f      	add	sp, #124	; 0x7c
 8022700:	ecbd 8b08 	vpop	{d8-d11}
 8022704:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022708 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8022708:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802270c:	880e      	ldrh	r6, [r1, #0]
 802270e:	b085      	sub	sp, #20
 8022710:	ea4f 2826 	mov.w	r8, r6, asr #8
 8022714:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8022718:	4691      	mov	r9, r2
 802271a:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 802271e:	f9bd e03c 	ldrsh.w	lr, [sp, #60]	; 0x3c
 8022722:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8022726:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 802272a:	f008 02f8 	and.w	r2, r8, #248	; 0xf8
 802272e:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8022732:	9200      	str	r2, [sp, #0]
 8022734:	00f6      	lsls	r6, r6, #3
 8022736:	f008 02fc 	and.w	r2, r8, #252	; 0xfc
 802273a:	9201      	str	r2, [sp, #4]
 802273c:	2c00      	cmp	r4, #0
 802273e:	b2f2      	uxtb	r2, r6
 8022740:	fb04 560c 	mla	r6, r4, ip, r5
 8022744:	9202      	str	r2, [sp, #8]
 8022746:	eb09 0806 	add.w	r8, r9, r6
 802274a:	db3f      	blt.n	80227cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 802274c:	45a6      	cmp	lr, r4
 802274e:	dd3d      	ble.n	80227cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8022750:	2d00      	cmp	r5, #0
 8022752:	db39      	blt.n	80227c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8022754:	45ac      	cmp	ip, r5
 8022756:	dd37      	ble.n	80227c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8022758:	f819 2006 	ldrb.w	r2, [r9, r6]
 802275c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8022760:	1c6e      	adds	r6, r5, #1
 8022762:	d436      	bmi.n	80227d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8022764:	45b4      	cmp	ip, r6
 8022766:	dd34      	ble.n	80227d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8022768:	b3a8      	cbz	r0, 80227d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xce>
 802276a:	f898 6001 	ldrb.w	r6, [r8, #1]
 802276e:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8022772:	3401      	adds	r4, #1
 8022774:	d433      	bmi.n	80227de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8022776:	45a6      	cmp	lr, r4
 8022778:	dd31      	ble.n	80227de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 802277a:	b39f      	cbz	r7, 80227e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xdc>
 802277c:	2d00      	cmp	r5, #0
 802277e:	eb08 0e0c 	add.w	lr, r8, ip
 8022782:	db2a      	blt.n	80227da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8022784:	45ac      	cmp	ip, r5
 8022786:	dd28      	ble.n	80227da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8022788:	f818 400c 	ldrb.w	r4, [r8, ip]
 802278c:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8022790:	3501      	adds	r5, #1
 8022792:	d42a      	bmi.n	80227ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8022794:	45ac      	cmp	ip, r5
 8022796:	dd28      	ble.n	80227ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8022798:	b348      	cbz	r0, 80227ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe6>
 802279a:	f89e 5001 	ldrb.w	r5, [lr, #1]
 802279e:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 80227a2:	280f      	cmp	r0, #15
 80227a4:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80227a8:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80227ac:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80227b0:	ea4f 6813 	mov.w	r8, r3, lsr #24
 80227b4:	d801      	bhi.n	80227ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb2>
 80227b6:	2f0f      	cmp	r7, #15
 80227b8:	d91b      	bls.n	80227f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xea>
 80227ba:	4b7d      	ldr	r3, [pc, #500]	; (80229b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 80227bc:	4a7d      	ldr	r2, [pc, #500]	; (80229b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 80227be:	487e      	ldr	r0, [pc, #504]	; (80229b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 80227c0:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 80227c4:	f004 ffdc 	bl	8027780 <__assert_func>
 80227c8:	2200      	movs	r2, #0
 80227ca:	e7c9      	b.n	8022760 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 80227cc:	2600      	movs	r6, #0
 80227ce:	4632      	mov	r2, r6
 80227d0:	e7cf      	b.n	8022772 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 80227d2:	2600      	movs	r6, #0
 80227d4:	e7cd      	b.n	8022772 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 80227d6:	4606      	mov	r6, r0
 80227d8:	e7cb      	b.n	8022772 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 80227da:	2400      	movs	r4, #0
 80227dc:	e7d8      	b.n	8022790 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x88>
 80227de:	2300      	movs	r3, #0
 80227e0:	461c      	mov	r4, r3
 80227e2:	e7de      	b.n	80227a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 80227e4:	463b      	mov	r3, r7
 80227e6:	463c      	mov	r4, r7
 80227e8:	e7db      	b.n	80227a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 80227ea:	2300      	movs	r3, #0
 80227ec:	e7d9      	b.n	80227a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 80227ee:	4603      	mov	r3, r0
 80227f0:	e7d7      	b.n	80227a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 80227f2:	b280      	uxth	r0, r0
 80227f4:	b2bf      	uxth	r7, r7
 80227f6:	fb00 fe07 	mul.w	lr, r0, r7
 80227fa:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80227fe:	0100      	lsls	r0, r0, #4
 8022800:	eba0 0c0e 	sub.w	ip, r0, lr
 8022804:	b2bf      	uxth	r7, r7
 8022806:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 802280a:	fa1f fc8c 	uxth.w	ip, ip
 802280e:	1bed      	subs	r5, r5, r7
 8022810:	b2ad      	uxth	r5, r5
 8022812:	fb0c f00a 	mul.w	r0, ip, sl
 8022816:	fb05 000b 	mla	r0, r5, fp, r0
 802281a:	fb07 0009 	mla	r0, r7, r9, r0
 802281e:	fb0e 0008 	mla	r0, lr, r8, r0
 8022822:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8022826:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 802282a:	9003      	str	r0, [sp, #12]
 802282c:	d018      	beq.n	8022860 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x158>
 802282e:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8022832:	fb0b f000 	mul.w	r0, fp, r0
 8022836:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802283a:	fb0b fb02 	mul.w	fp, fp, r2
 802283e:	0a02      	lsrs	r2, r0, #8
 8022840:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8022844:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8022848:	4402      	add	r2, r0
 802284a:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 802284e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8022852:	0a12      	lsrs	r2, r2, #8
 8022854:	0a00      	lsrs	r0, r0, #8
 8022856:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802285a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 802285e:	4302      	orrs	r2, r0
 8022860:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8022864:	d019      	beq.n	802289a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x192>
 8022866:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 802286a:	fb0a fb0b 	mul.w	fp, sl, fp
 802286e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8022872:	fb0a fa06 	mul.w	sl, sl, r6
 8022876:	ea4f 261b 	mov.w	r6, fp, lsr #8
 802287a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 802287e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022882:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8022886:	445e      	add	r6, fp
 8022888:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 802288c:	0a36      	lsrs	r6, r6, #8
 802288e:	0a00      	lsrs	r0, r0, #8
 8022890:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8022894:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8022898:	4306      	orrs	r6, r0
 802289a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802289e:	d019      	beq.n	80228d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1cc>
 80228a0:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 80228a4:	fb09 fa0a 	mul.w	sl, r9, sl
 80228a8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80228ac:	fb09 f904 	mul.w	r9, r9, r4
 80228b0:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80228b4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80228b8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80228bc:	f509 7080 	add.w	r0, r9, #256	; 0x100
 80228c0:	4454      	add	r4, sl
 80228c2:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 80228c6:	0a24      	lsrs	r4, r4, #8
 80228c8:	0a00      	lsrs	r0, r0, #8
 80228ca:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80228ce:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80228d2:	4304      	orrs	r4, r0
 80228d4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80228d8:	d019      	beq.n	802290e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x206>
 80228da:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 80228de:	fb08 f909 	mul.w	r9, r8, r9
 80228e2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80228e6:	fb08 f803 	mul.w	r8, r8, r3
 80228ea:	ea4f 2319 	mov.w	r3, r9, lsr #8
 80228ee:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80228f2:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80228f6:	f508 7080 	add.w	r0, r8, #256	; 0x100
 80228fa:	444b      	add	r3, r9
 80228fc:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022900:	0a1b      	lsrs	r3, r3, #8
 8022902:	0a00      	lsrs	r0, r0, #8
 8022904:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022908:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 802290c:	4303      	orrs	r3, r0
 802290e:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8022912:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8022916:	fb0c f808 	mul.w	r8, ip, r8
 802291a:	fb05 8800 	mla	r8, r5, r0, r8
 802291e:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8022922:	fb07 8800 	mla	r8, r7, r0, r8
 8022926:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 802292a:	fb0e 8000 	mla	r0, lr, r0, r8
 802292e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8022932:	fb0c f606 	mul.w	r6, ip, r6
 8022936:	0a00      	lsrs	r0, r0, #8
 8022938:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802293c:	fb05 6202 	mla	r2, r5, r2, r6
 8022940:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8022944:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8022948:	fb07 2700 	mla	r7, r7, r0, r2
 802294c:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8022950:	9b03      	ldr	r3, [sp, #12]
 8022952:	9d00      	ldr	r5, [sp, #0]
 8022954:	9a02      	ldr	r2, [sp, #8]
 8022956:	fb0e 7000 	mla	r0, lr, r0, r7
 802295a:	43dc      	mvns	r4, r3
 802295c:	9b01      	ldr	r3, [sp, #4]
 802295e:	b2e4      	uxtb	r4, r4
 8022960:	0a00      	lsrs	r0, r0, #8
 8022962:	4363      	muls	r3, r4
 8022964:	4365      	muls	r5, r4
 8022966:	4362      	muls	r2, r4
 8022968:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 802296c:	ea48 0000 	orr.w	r0, r8, r0
 8022970:	4614      	mov	r4, r2
 8022972:	1c5e      	adds	r6, r3, #1
 8022974:	1c6a      	adds	r2, r5, #1
 8022976:	eb06 2613 	add.w	r6, r6, r3, lsr #8
 802297a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 802297e:	0a03      	lsrs	r3, r0, #8
 8022980:	0c02      	lsrs	r2, r0, #16
 8022982:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8022986:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 802298a:	00db      	lsls	r3, r3, #3
 802298c:	0212      	lsls	r2, r2, #8
 802298e:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8022992:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022996:	4313      	orrs	r3, r2
 8022998:	1c62      	adds	r2, r4, #1
 802299a:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802299e:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 80229a2:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80229a6:	4318      	orrs	r0, r3
 80229a8:	8008      	strh	r0, [r1, #0]
 80229aa:	b005      	add	sp, #20
 80229ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80229b0:	0802d4b6 	.word	0x0802d4b6
 80229b4:	0802da86 	.word	0x0802da86
 80229b8:	0802d53a 	.word	0x0802d53a

080229bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80229bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80229c0:	ed2d 8b08 	vpush	{d8-d11}
 80229c4:	b09b      	sub	sp, #108	; 0x6c
 80229c6:	eeb0 aa40 	vmov.f32	s20, s0
 80229ca:	9218      	str	r2, [sp, #96]	; 0x60
 80229cc:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 80229ce:	9116      	str	r1, [sp, #88]	; 0x58
 80229d0:	9307      	str	r3, [sp, #28]
 80229d2:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 80229d6:	9019      	str	r0, [sp, #100]	; 0x64
 80229d8:	6850      	ldr	r0, [r2, #4]
 80229da:	6812      	ldr	r2, [r2, #0]
 80229dc:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 80229de:	fb00 1303 	mla	r3, r0, r3, r1
 80229e2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80229e6:	930a      	str	r3, [sp, #40]	; 0x28
 80229e8:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80229ea:	681b      	ldr	r3, [r3, #0]
 80229ec:	930f      	str	r3, [sp, #60]	; 0x3c
 80229ee:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80229f0:	685e      	ldr	r6, [r3, #4]
 80229f2:	eef0 9a60 	vmov.f32	s19, s1
 80229f6:	eeb0 9a41 	vmov.f32	s18, s2
 80229fa:	eeb0 8a62 	vmov.f32	s16, s5
 80229fe:	eef0 8a43 	vmov.f32	s17, s6
 8022a02:	eef0 ba44 	vmov.f32	s23, s8
 8022a06:	eeb0 ba64 	vmov.f32	s22, s9
 8022a0a:	eef0 aa45 	vmov.f32	s21, s10
 8022a0e:	3604      	adds	r6, #4
 8022a10:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022a12:	2b00      	cmp	r3, #0
 8022a14:	dc03      	bgt.n	8022a1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8022a16:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022a18:	2b00      	cmp	r3, #0
 8022a1a:	f340 8373 	ble.w	8023104 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8022a1e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8022a20:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022a24:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022a28:	1e48      	subs	r0, r1, #1
 8022a2a:	1e57      	subs	r7, r2, #1
 8022a2c:	9b07      	ldr	r3, [sp, #28]
 8022a2e:	2b00      	cmp	r3, #0
 8022a30:	f340 8190 	ble.w	8022d54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8022a34:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8022a36:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8022a3a:	ea4f 4325 	mov.w	r3, r5, asr #16
 8022a3e:	d406      	bmi.n	8022a4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022a40:	4584      	cmp	ip, r0
 8022a42:	da04      	bge.n	8022a4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022a44:	2b00      	cmp	r3, #0
 8022a46:	db02      	blt.n	8022a4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022a48:	42bb      	cmp	r3, r7
 8022a4a:	f2c0 8184 	blt.w	8022d56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 8022a4e:	f11c 0c01 	adds.w	ip, ip, #1
 8022a52:	f100 8172 	bmi.w	8022d3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8022a56:	4561      	cmp	r1, ip
 8022a58:	f2c0 816f 	blt.w	8022d3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8022a5c:	3301      	adds	r3, #1
 8022a5e:	f100 816c 	bmi.w	8022d3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8022a62:	429a      	cmp	r2, r3
 8022a64:	f2c0 8169 	blt.w	8022d3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8022a68:	9b07      	ldr	r3, [sp, #28]
 8022a6a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8022a6c:	9317      	str	r3, [sp, #92]	; 0x5c
 8022a6e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022a70:	2b00      	cmp	r3, #0
 8022a72:	f340 818e 	ble.w	8022d92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8022a76:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8022a78:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022a7c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8022a7e:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8022a82:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8022a84:	141b      	asrs	r3, r3, #16
 8022a86:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8022a8a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8022a8e:	f100 81d1 	bmi.w	8022e34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8022a92:	f101 38ff 	add.w	r8, r1, #4294967295
 8022a96:	4543      	cmp	r3, r8
 8022a98:	f280 81cc 	bge.w	8022e34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8022a9c:	f1bc 0f00 	cmp.w	ip, #0
 8022aa0:	f2c0 81c8 	blt.w	8022e34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8022aa4:	f10e 38ff 	add.w	r8, lr, #4294967295
 8022aa8:	45c4      	cmp	ip, r8
 8022aaa:	f280 81c3 	bge.w	8022e34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8022aae:	b209      	sxth	r1, r1
 8022ab0:	fb0c 3301 	mla	r3, ip, r1, r3
 8022ab4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022ab6:	eb04 0803 	add.w	r8, r4, r3
 8022aba:	5ce3      	ldrb	r3, [r4, r3]
 8022abc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8022ac0:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8022ac4:	2a00      	cmp	r2, #0
 8022ac6:	f000 81aa 	beq.w	8022e1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 8022aca:	f898 c001 	ldrb.w	ip, [r8, #1]
 8022ace:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8022ad2:	940b      	str	r4, [sp, #44]	; 0x2c
 8022ad4:	0e24      	lsrs	r4, r4, #24
 8022ad6:	9412      	str	r4, [sp, #72]	; 0x48
 8022ad8:	b178      	cbz	r0, 8022afa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8022ada:	eb08 0c01 	add.w	ip, r8, r1
 8022ade:	f818 1001 	ldrb.w	r1, [r8, r1]
 8022ae2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022ae6:	9108      	str	r1, [sp, #32]
 8022ae8:	0e09      	lsrs	r1, r1, #24
 8022aea:	9110      	str	r1, [sp, #64]	; 0x40
 8022aec:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8022af0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022af4:	910c      	str	r1, [sp, #48]	; 0x30
 8022af6:	0e09      	lsrs	r1, r1, #24
 8022af8:	9113      	str	r1, [sp, #76]	; 0x4c
 8022afa:	b292      	uxth	r2, r2
 8022afc:	b280      	uxth	r0, r0
 8022afe:	fb02 f900 	mul.w	r9, r2, r0
 8022b02:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8022b06:	0112      	lsls	r2, r2, #4
 8022b08:	eba2 0809 	sub.w	r8, r2, r9
 8022b0c:	b280      	uxth	r0, r0
 8022b0e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8022b12:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022b14:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022b16:	fa1f f888 	uxth.w	r8, r8
 8022b1a:	1a12      	subs	r2, r2, r0
 8022b1c:	b292      	uxth	r2, r2
 8022b1e:	fb08 f101 	mul.w	r1, r8, r1
 8022b22:	fb02 110e 	mla	r1, r2, lr, r1
 8022b26:	fb00 1104 	mla	r1, r0, r4, r1
 8022b2a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022b2c:	fb09 1104 	mla	r1, r9, r4, r1
 8022b30:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8022b34:	2900      	cmp	r1, #0
 8022b36:	f000 80f5 	beq.w	8022d24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8022b3a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8022b3e:	d01b      	beq.n	8022b78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8022b40:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8022b44:	fb0e fa0a 	mul.w	sl, lr, sl
 8022b48:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022b4c:	fb0e fe03 	mul.w	lr, lr, r3
 8022b50:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022b54:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022b58:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022b5c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8022b60:	4453      	add	r3, sl
 8022b62:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8022b66:	0a1b      	lsrs	r3, r3, #8
 8022b68:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022b6c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022b70:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022b74:	ea43 030c 	orr.w	r3, r3, ip
 8022b78:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022b7a:	2cff      	cmp	r4, #255	; 0xff
 8022b7c:	d021      	beq.n	8022bc2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8022b7e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022b80:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022b84:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022b86:	fb04 fb0b 	mul.w	fp, r4, fp
 8022b8a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022b8c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022b90:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022b92:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022b96:	fb04 fa0a 	mul.w	sl, r4, sl
 8022b9a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022b9e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022ba2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022ba6:	44de      	add	lr, fp
 8022ba8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022bac:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022bb0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022bb4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022bb8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022bbc:	ea4e 040a 	orr.w	r4, lr, sl
 8022bc0:	940b      	str	r4, [sp, #44]	; 0x2c
 8022bc2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022bc4:	2cff      	cmp	r4, #255	; 0xff
 8022bc6:	d021      	beq.n	8022c0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8022bc8:	9c08      	ldr	r4, [sp, #32]
 8022bca:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022bce:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022bd0:	fb04 fb0b 	mul.w	fp, r4, fp
 8022bd4:	9c08      	ldr	r4, [sp, #32]
 8022bd6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022bda:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022bdc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022be0:	fb04 fa0a 	mul.w	sl, r4, sl
 8022be4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022be8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022bec:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022bf0:	44de      	add	lr, fp
 8022bf2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022bf6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022bfa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022bfe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022c02:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022c06:	ea4e 040a 	orr.w	r4, lr, sl
 8022c0a:	9408      	str	r4, [sp, #32]
 8022c0c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022c0e:	2cff      	cmp	r4, #255	; 0xff
 8022c10:	d021      	beq.n	8022c56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8022c12:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022c14:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022c18:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022c1a:	fb04 fb0b 	mul.w	fp, r4, fp
 8022c1e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022c20:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022c24:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022c26:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022c2a:	fb04 fa0a 	mul.w	sl, r4, sl
 8022c2e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022c32:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022c36:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022c3a:	44de      	add	lr, fp
 8022c3c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022c40:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022c44:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022c48:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022c4c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022c50:	ea4e 040a 	orr.w	r4, lr, sl
 8022c54:	940c      	str	r4, [sp, #48]	; 0x30
 8022c56:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022c58:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022c5c:	9c08      	ldr	r4, [sp, #32]
 8022c5e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8022c62:	fb08 fc0c 	mul.w	ip, r8, ip
 8022c66:	fb02 cc0e 	mla	ip, r2, lr, ip
 8022c6a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8022c6e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022c70:	fb00 cc0e 	mla	ip, r0, lr, ip
 8022c74:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8022c78:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022c7a:	fb09 cc0e 	mla	ip, r9, lr, ip
 8022c7e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8022c82:	fb08 f80e 	mul.w	r8, r8, lr
 8022c86:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022c8a:	fb02 8303 	mla	r3, r2, r3, r8
 8022c8e:	9a08      	ldr	r2, [sp, #32]
 8022c90:	f8b7 8000 	ldrh.w	r8, [r7]
 8022c94:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8022c98:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022c9a:	fb00 330a 	mla	r3, r0, sl, r3
 8022c9e:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8022ca2:	fb09 3900 	mla	r9, r9, r0, r3
 8022ca6:	43c9      	mvns	r1, r1
 8022ca8:	ea4f 2228 	mov.w	r2, r8, asr #8
 8022cac:	fa5f fe81 	uxtb.w	lr, r1
 8022cb0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022cb4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022cb8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022cbc:	fb02 f20e 	mul.w	r2, r2, lr
 8022cc0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022cc4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8022cc8:	ea4c 0c09 	orr.w	ip, ip, r9
 8022ccc:	1c53      	adds	r3, r2, #1
 8022cce:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8022cd2:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8022cd6:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8022cda:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022cde:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022ce2:	4a63      	ldr	r2, [pc, #396]	; (8022e70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>)
 8022ce4:	fb00 f00e 	mul.w	r0, r0, lr
 8022ce8:	b2db      	uxtb	r3, r3
 8022cea:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8022cee:	1c43      	adds	r3, r0, #1
 8022cf0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8022cf4:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8022cf8:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8022cfc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022d00:	b2c9      	uxtb	r1, r1
 8022d02:	00db      	lsls	r3, r3, #3
 8022d04:	fb01 f10e 	mul.w	r1, r1, lr
 8022d08:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022d0c:	4313      	orrs	r3, r2
 8022d0e:	1c4a      	adds	r2, r1, #1
 8022d10:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022d14:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8022d18:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8022d1c:	ea4c 0c03 	orr.w	ip, ip, r3
 8022d20:	f8a7 c000 	strh.w	ip, [r7]
 8022d24:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8022d26:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8022d28:	441a      	add	r2, r3
 8022d2a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8022d2c:	922d      	str	r2, [sp, #180]	; 0xb4
 8022d2e:	441d      	add	r5, r3
 8022d30:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022d32:	3b01      	subs	r3, #1
 8022d34:	3702      	adds	r7, #2
 8022d36:	9317      	str	r3, [sp, #92]	; 0x5c
 8022d38:	e699      	b.n	8022a6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8022d3a:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8022d3c:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8022d3e:	441c      	add	r4, r3
 8022d40:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8022d42:	942d      	str	r4, [sp, #180]	; 0xb4
 8022d44:	441d      	add	r5, r3
 8022d46:	9b07      	ldr	r3, [sp, #28]
 8022d48:	3b01      	subs	r3, #1
 8022d4a:	9307      	str	r3, [sp, #28]
 8022d4c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022d4e:	3302      	adds	r3, #2
 8022d50:	930a      	str	r3, [sp, #40]	; 0x28
 8022d52:	e66b      	b.n	8022a2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8022d54:	d024      	beq.n	8022da0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 8022d56:	9b07      	ldr	r3, [sp, #28]
 8022d58:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8022d5a:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8022d5c:	3b01      	subs	r3, #1
 8022d5e:	fb00 4003 	mla	r0, r0, r3, r4
 8022d62:	1400      	asrs	r0, r0, #16
 8022d64:	f53f ae80 	bmi.w	8022a68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8022d68:	3901      	subs	r1, #1
 8022d6a:	4288      	cmp	r0, r1
 8022d6c:	f6bf ae7c 	bge.w	8022a68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8022d70:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8022d72:	fb01 5303 	mla	r3, r1, r3, r5
 8022d76:	141b      	asrs	r3, r3, #16
 8022d78:	f53f ae76 	bmi.w	8022a68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8022d7c:	3a01      	subs	r2, #1
 8022d7e:	4293      	cmp	r3, r2
 8022d80:	f6bf ae72 	bge.w	8022a68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8022d84:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8022d88:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8022d8c:	f1bb 0f00 	cmp.w	fp, #0
 8022d90:	dc70      	bgt.n	8022e74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 8022d92:	9b07      	ldr	r3, [sp, #28]
 8022d94:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022d98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022d9a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022d9e:	930a      	str	r3, [sp, #40]	; 0x28
 8022da0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022da2:	2b00      	cmp	r3, #0
 8022da4:	f340 81ae 	ble.w	8023104 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8022da8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8022dac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022db0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8022db4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022db6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8022dba:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8022dbe:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8022dc2:	eef0 6a48 	vmov.f32	s13, s16
 8022dc6:	ee69 7a27 	vmul.f32	s15, s18, s15
 8022dca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022dce:	ee37 8a48 	vsub.f32	s16, s14, s16
 8022dd2:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 8022dd6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8022dda:	eef0 6a68 	vmov.f32	s13, s17
 8022dde:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8022de2:	ee18 2a10 	vmov	r2, s16
 8022de6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8022dea:	fb92 f3f3 	sdiv	r3, r2, r3
 8022dee:	ee18 2a90 	vmov	r2, s17
 8022df2:	932f      	str	r3, [sp, #188]	; 0xbc
 8022df4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022df6:	fb92 f3f3 	sdiv	r3, r2, r3
 8022dfa:	9330      	str	r3, [sp, #192]	; 0xc0
 8022dfc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022dfe:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8022e00:	3b01      	subs	r3, #1
 8022e02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022e06:	9316      	str	r3, [sp, #88]	; 0x58
 8022e08:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022e0a:	bf08      	it	eq
 8022e0c:	4613      	moveq	r3, r2
 8022e0e:	ee16 5a90 	vmov	r5, s13
 8022e12:	9307      	str	r3, [sp, #28]
 8022e14:	eef0 8a67 	vmov.f32	s17, s15
 8022e18:	eeb0 8a47 	vmov.f32	s16, s14
 8022e1c:	e5f8      	b.n	8022a10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8022e1e:	2800      	cmp	r0, #0
 8022e20:	f43f ae6b 	beq.w	8022afa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8022e24:	f818 1001 	ldrb.w	r1, [r8, r1]
 8022e28:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022e2c:	9108      	str	r1, [sp, #32]
 8022e2e:	0e09      	lsrs	r1, r1, #24
 8022e30:	9110      	str	r1, [sp, #64]	; 0x40
 8022e32:	e662      	b.n	8022afa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8022e34:	f113 0801 	adds.w	r8, r3, #1
 8022e38:	f53f af74 	bmi.w	8022d24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8022e3c:	4541      	cmp	r1, r8
 8022e3e:	f6ff af71 	blt.w	8022d24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8022e42:	f11c 0801 	adds.w	r8, ip, #1
 8022e46:	f53f af6d 	bmi.w	8022d24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8022e4a:	45c6      	cmp	lr, r8
 8022e4c:	f6ff af6a 	blt.w	8022d24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8022e50:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8022e54:	b209      	sxth	r1, r1
 8022e56:	fa0f f38e 	sxth.w	r3, lr
 8022e5a:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8022e5e:	9301      	str	r3, [sp, #4]
 8022e60:	9100      	str	r1, [sp, #0]
 8022e62:	4633      	mov	r3, r6
 8022e64:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022e66:	9819      	ldr	r0, [sp, #100]	; 0x64
 8022e68:	4639      	mov	r1, r7
 8022e6a:	f7ff fc4d 	bl	8022708 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8022e6e:	e759      	b.n	8022d24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8022e70:	fffff800 	.word	0xfffff800
 8022e74:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8022e76:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8022e78:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022e7c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8022e7e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022e82:	1427      	asrs	r7, r4, #16
 8022e84:	142b      	asrs	r3, r5, #16
 8022e86:	fb01 7303 	mla	r3, r1, r3, r7
 8022e8a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022e8c:	18e7      	adds	r7, r4, r3
 8022e8e:	5ce3      	ldrb	r3, [r4, r3]
 8022e90:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8022e94:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8022e98:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8022e9c:	2a00      	cmp	r2, #0
 8022e9e:	f000 8127 	beq.w	80230f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8022ea2:	f897 e001 	ldrb.w	lr, [r7, #1]
 8022ea6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8022eaa:	940d      	str	r4, [sp, #52]	; 0x34
 8022eac:	0e24      	lsrs	r4, r4, #24
 8022eae:	9414      	str	r4, [sp, #80]	; 0x50
 8022eb0:	b170      	cbz	r0, 8022ed0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8022eb2:	eb07 0e01 	add.w	lr, r7, r1
 8022eb6:	5c79      	ldrb	r1, [r7, r1]
 8022eb8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022ebc:	9109      	str	r1, [sp, #36]	; 0x24
 8022ebe:	0e09      	lsrs	r1, r1, #24
 8022ec0:	9111      	str	r1, [sp, #68]	; 0x44
 8022ec2:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8022ec6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022eca:	910e      	str	r1, [sp, #56]	; 0x38
 8022ecc:	0e09      	lsrs	r1, r1, #24
 8022ece:	9115      	str	r1, [sp, #84]	; 0x54
 8022ed0:	b292      	uxth	r2, r2
 8022ed2:	b280      	uxth	r0, r0
 8022ed4:	fb02 f800 	mul.w	r8, r2, r0
 8022ed8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8022edc:	0112      	lsls	r2, r2, #4
 8022ede:	eba2 0e08 	sub.w	lr, r2, r8
 8022ee2:	b280      	uxth	r0, r0
 8022ee4:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8022ee8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022eea:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022eec:	fa1f fe8e 	uxth.w	lr, lr
 8022ef0:	1a09      	subs	r1, r1, r0
 8022ef2:	b289      	uxth	r1, r1
 8022ef4:	fb0e f202 	mul.w	r2, lr, r2
 8022ef8:	fb01 220c 	mla	r2, r1, ip, r2
 8022efc:	fb00 2204 	mla	r2, r0, r4, r2
 8022f00:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022f02:	fb08 2204 	mla	r2, r8, r4, r2
 8022f06:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8022f0a:	2a00      	cmp	r2, #0
 8022f0c:	f000 80e5 	beq.w	80230da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8022f10:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8022f14:	d019      	beq.n	8022f4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58e>
 8022f16:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8022f1a:	fb0c fa0a 	mul.w	sl, ip, sl
 8022f1e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022f22:	fb0c fc03 	mul.w	ip, ip, r3
 8022f26:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022f2a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022f2e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022f32:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8022f36:	4453      	add	r3, sl
 8022f38:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8022f3c:	0a1b      	lsrs	r3, r3, #8
 8022f3e:	0a3f      	lsrs	r7, r7, #8
 8022f40:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022f44:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8022f48:	433b      	orrs	r3, r7
 8022f4a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022f4c:	2cff      	cmp	r4, #255	; 0xff
 8022f4e:	d020      	beq.n	8022f92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d6>
 8022f50:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022f52:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022f56:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022f58:	4367      	muls	r7, r4
 8022f5a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022f5c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022f60:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022f62:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022f66:	fb04 fa0a 	mul.w	sl, r4, sl
 8022f6a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022f6e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022f72:	44bc      	add	ip, r7
 8022f74:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022f78:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022f7c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022f80:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022f84:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022f88:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022f8c:	ea4c 040a 	orr.w	r4, ip, sl
 8022f90:	940d      	str	r4, [sp, #52]	; 0x34
 8022f92:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022f94:	2cff      	cmp	r4, #255	; 0xff
 8022f96:	d020      	beq.n	8022fda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61e>
 8022f98:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8022f9a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022f9e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022fa0:	4367      	muls	r7, r4
 8022fa2:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8022fa4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022fa8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022faa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022fae:	fb04 fa0a 	mul.w	sl, r4, sl
 8022fb2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022fb6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022fba:	44bc      	add	ip, r7
 8022fbc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022fc0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022fc4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022fc8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022fcc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022fd0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022fd4:	ea4c 040a 	orr.w	r4, ip, sl
 8022fd8:	9409      	str	r4, [sp, #36]	; 0x24
 8022fda:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022fdc:	2cff      	cmp	r4, #255	; 0xff
 8022fde:	d020      	beq.n	8023022 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x666>
 8022fe0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022fe2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022fe6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022fe8:	4367      	muls	r7, r4
 8022fea:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022fec:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022ff0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022ff2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022ff6:	fb04 fa0a 	mul.w	sl, r4, sl
 8022ffa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022ffe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023002:	44bc      	add	ip, r7
 8023004:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023008:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802300c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023010:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023014:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023018:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802301c:	ea4c 040a 	orr.w	r4, ip, sl
 8023020:	940e      	str	r4, [sp, #56]	; 0x38
 8023022:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023024:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8023028:	9c09      	ldr	r4, [sp, #36]	; 0x24
 802302a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802302e:	fb0e f707 	mul.w	r7, lr, r7
 8023032:	fb01 770c 	mla	r7, r1, ip, r7
 8023036:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802303a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802303c:	fb00 770c 	mla	r7, r0, ip, r7
 8023040:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023044:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023046:	fb08 770c 	mla	r7, r8, ip, r7
 802304a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 802304e:	fb0e fe0c 	mul.w	lr, lr, ip
 8023052:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023056:	fb01 e303 	mla	r3, r1, r3, lr
 802305a:	9909      	ldr	r1, [sp, #36]	; 0x24
 802305c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8023060:	990e      	ldr	r1, [sp, #56]	; 0x38
 8023062:	fb00 330a 	mla	r3, r0, sl, r3
 8023066:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 802306a:	fb08 3c0c 	mla	ip, r8, ip, r3
 802306e:	f8b9 3000 	ldrh.w	r3, [r9]
 8023072:	43d2      	mvns	r2, r2
 8023074:	1218      	asrs	r0, r3, #8
 8023076:	b2d2      	uxtb	r2, r2
 8023078:	10d9      	asrs	r1, r3, #3
 802307a:	0a3f      	lsrs	r7, r7, #8
 802307c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023080:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023084:	00db      	lsls	r3, r3, #3
 8023086:	4350      	muls	r0, r2
 8023088:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802308c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023090:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023094:	b2db      	uxtb	r3, r3
 8023096:	ea47 070c 	orr.w	r7, r7, ip
 802309a:	4351      	muls	r1, r2
 802309c:	4353      	muls	r3, r2
 802309e:	1c42      	adds	r2, r0, #1
 80230a0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80230a4:	0c3a      	lsrs	r2, r7, #16
 80230a6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80230aa:	4a19      	ldr	r2, [pc, #100]	; (8023110 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>)
 80230ac:	b2c0      	uxtb	r0, r0
 80230ae:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80230b2:	1c4a      	adds	r2, r1, #1
 80230b4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80230b8:	0a3a      	lsrs	r2, r7, #8
 80230ba:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80230be:	00c9      	lsls	r1, r1, #3
 80230c0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80230c4:	4301      	orrs	r1, r0
 80230c6:	1c58      	adds	r0, r3, #1
 80230c8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80230cc:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80230d0:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80230d4:	4308      	orrs	r0, r1
 80230d6:	f8a9 0000 	strh.w	r0, [r9]
 80230da:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80230dc:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80230de:	441a      	add	r2, r3
 80230e0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80230e2:	922d      	str	r2, [sp, #180]	; 0xb4
 80230e4:	f109 0902 	add.w	r9, r9, #2
 80230e8:	441d      	add	r5, r3
 80230ea:	f10b 3bff 	add.w	fp, fp, #4294967295
 80230ee:	e64d      	b.n	8022d8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 80230f0:	2800      	cmp	r0, #0
 80230f2:	f43f aeed 	beq.w	8022ed0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 80230f6:	5c79      	ldrb	r1, [r7, r1]
 80230f8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80230fc:	9109      	str	r1, [sp, #36]	; 0x24
 80230fe:	0e09      	lsrs	r1, r1, #24
 8023100:	9111      	str	r1, [sp, #68]	; 0x44
 8023102:	e6e5      	b.n	8022ed0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8023104:	b01b      	add	sp, #108	; 0x6c
 8023106:	ecbd 8b08 	vpop	{d8-d11}
 802310a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802310e:	bf00      	nop
 8023110:	fffff800 	.word	0xfffff800

08023114 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8023114:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023118:	b085      	sub	sp, #20
 802311a:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 802311e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8023122:	9103      	str	r1, [sp, #12]
 8023124:	fb05 7106 	mla	r1, r5, r6, r7
 8023128:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 802312c:	2d00      	cmp	r5, #0
 802312e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8023132:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8023136:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 802313a:	9401      	str	r4, [sp, #4]
 802313c:	eb03 0901 	add.w	r9, r3, r1
 8023140:	f2c0 80c0 	blt.w	80232c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8023144:	45a8      	cmp	r8, r5
 8023146:	f340 80bd 	ble.w	80232c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 802314a:	2f00      	cmp	r7, #0
 802314c:	f2c0 80b6 	blt.w	80232bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8023150:	42be      	cmp	r6, r7
 8023152:	f340 80b3 	ble.w	80232bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8023156:	f813 c001 	ldrb.w	ip, [r3, r1]
 802315a:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 802315e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8023162:	d019      	beq.n	8023198 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 8023164:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8023168:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802316c:	435a      	muls	r2, r3
 802316e:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 8023172:	f64f 011f 	movw	r1, #63519	; 0xf81f
 8023176:	fb0c f403 	mul.w	r4, ip, r3
 802317a:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 802317e:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8023182:	441a      	add	r2, r3
 8023184:	f104 0320 	add.w	r3, r4, #32
 8023188:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 802318c:	0a1b      	lsrs	r3, r3, #8
 802318e:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 8023192:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023196:	4319      	orrs	r1, r3
 8023198:	b289      	uxth	r1, r1
 802319a:	1c7b      	adds	r3, r7, #1
 802319c:	f100 8097 	bmi.w	80232ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 80231a0:	429e      	cmp	r6, r3
 80231a2:	f340 8094 	ble.w	80232ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 80231a6:	2800      	cmp	r0, #0
 80231a8:	f000 8094 	beq.w	80232d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 80231ac:	f899 4001 	ldrb.w	r4, [r9, #1]
 80231b0:	9b01      	ldr	r3, [sp, #4]
 80231b2:	2cff      	cmp	r4, #255	; 0xff
 80231b4:	885b      	ldrh	r3, [r3, #2]
 80231b6:	d01b      	beq.n	80231f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 80231b8:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 80231bc:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80231c0:	fb0a f202 	mul.w	r2, sl, r2
 80231c4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80231c8:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80231cc:	fb04 fa03 	mul.w	sl, r4, r3
 80231d0:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 80231d4:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80231d8:	441a      	add	r2, r3
 80231da:	f10a 0320 	add.w	r3, sl, #32
 80231de:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 80231e2:	0a1b      	lsrs	r3, r3, #8
 80231e4:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 80231e8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80231ec:	ea4b 0303 	orr.w	r3, fp, r3
 80231f0:	b29b      	uxth	r3, r3
 80231f2:	3501      	adds	r5, #1
 80231f4:	d474      	bmi.n	80232e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 80231f6:	45a8      	cmp	r8, r5
 80231f8:	dd72      	ble.n	80232e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 80231fa:	f1be 0f00 	cmp.w	lr, #0
 80231fe:	f000 8120 	beq.w	8023442 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 8023202:	2f00      	cmp	r7, #0
 8023204:	db69      	blt.n	80232da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 8023206:	42be      	cmp	r6, r7
 8023208:	dd67      	ble.n	80232da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 802320a:	f819 5006 	ldrb.w	r5, [r9, r6]
 802320e:	9a01      	ldr	r2, [sp, #4]
 8023210:	2dff      	cmp	r5, #255	; 0xff
 8023212:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 8023216:	d01c      	beq.n	8023252 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 8023218:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 802321c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8023220:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8023224:	fb05 fa0b 	mul.w	sl, r5, fp
 8023228:	fb08 f802 	mul.w	r8, r8, r2
 802322c:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8023230:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8023234:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023238:	4490      	add	r8, r2
 802323a:	f10a 0220 	add.w	r2, sl, #32
 802323e:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 8023242:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023246:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 802324a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 802324e:	ea4b 0b0a 	orr.w	fp, fp, sl
 8023252:	fa1f fb8b 	uxth.w	fp, fp
 8023256:	3701      	adds	r7, #1
 8023258:	d447      	bmi.n	80232ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 802325a:	42be      	cmp	r6, r7
 802325c:	dd45      	ble.n	80232ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 802325e:	2800      	cmp	r0, #0
 8023260:	d046      	beq.n	80232f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 8023262:	3601      	adds	r6, #1
 8023264:	9a01      	ldr	r2, [sp, #4]
 8023266:	f819 7006 	ldrb.w	r7, [r9, r6]
 802326a:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 802326e:	2fff      	cmp	r7, #255	; 0xff
 8023270:	d01a      	beq.n	80232a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 8023272:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 8023276:	ea4f 08e7 	mov.w	r8, r7, asr #3
 802327a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802327e:	fb07 f902 	mul.w	r9, r7, r2
 8023282:	fb08 f806 	mul.w	r8, r8, r6
 8023286:	f64f 021f 	movw	r2, #63519	; 0xf81f
 802328a:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 802328e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023292:	44b0      	add	r8, r6
 8023294:	f109 0620 	add.w	r6, r9, #32
 8023298:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 802329c:	0a36      	lsrs	r6, r6, #8
 802329e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80232a2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80232a6:	4332      	orrs	r2, r6
 80232a8:	b292      	uxth	r2, r2
 80232aa:	280f      	cmp	r0, #15
 80232ac:	d922      	bls.n	80232f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 80232ae:	4b69      	ldr	r3, [pc, #420]	; (8023454 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 80232b0:	4a69      	ldr	r2, [pc, #420]	; (8023458 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 80232b2:	486a      	ldr	r0, [pc, #424]	; (802345c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 80232b4:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 80232b8:	f004 fa62 	bl	8027780 <__assert_func>
 80232bc:	f04f 0c00 	mov.w	ip, #0
 80232c0:	4661      	mov	r1, ip
 80232c2:	e76a      	b.n	802319a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 80232c4:	2400      	movs	r4, #0
 80232c6:	46a4      	mov	ip, r4
 80232c8:	4623      	mov	r3, r4
 80232ca:	4621      	mov	r1, r4
 80232cc:	e791      	b.n	80231f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 80232ce:	2400      	movs	r4, #0
 80232d0:	4623      	mov	r3, r4
 80232d2:	e78e      	b.n	80231f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 80232d4:	4604      	mov	r4, r0
 80232d6:	4603      	mov	r3, r0
 80232d8:	e78b      	b.n	80231f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 80232da:	2500      	movs	r5, #0
 80232dc:	46ab      	mov	fp, r5
 80232de:	e7ba      	b.n	8023256 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 80232e0:	2700      	movs	r7, #0
 80232e2:	463d      	mov	r5, r7
 80232e4:	463a      	mov	r2, r7
 80232e6:	46bb      	mov	fp, r7
 80232e8:	e7df      	b.n	80232aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 80232ea:	2700      	movs	r7, #0
 80232ec:	463a      	mov	r2, r7
 80232ee:	e7dc      	b.n	80232aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 80232f0:	4607      	mov	r7, r0
 80232f2:	4602      	mov	r2, r0
 80232f4:	f1be 0f0f 	cmp.w	lr, #15
 80232f8:	d8d9      	bhi.n	80232ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 80232fa:	b286      	uxth	r6, r0
 80232fc:	fa1f f98e 	uxth.w	r9, lr
 8023300:	fb06 f809 	mul.w	r8, r6, r9
 8023304:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8023308:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 802330c:	0136      	lsls	r6, r6, #4
 802330e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023312:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023316:	9601      	str	r6, [sp, #4]
 8023318:	ea4a 0101 	orr.w	r1, sl, r1
 802331c:	fa1f f689 	uxth.w	r6, r9
 8023320:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8023324:	fb10 f90e 	smulbb	r9, r0, lr
 8023328:	ea4f 09e9 	mov.w	r9, r9, asr #3
 802332c:	9602      	str	r6, [sp, #8]
 802332e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023332:	460e      	mov	r6, r1
 8023334:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023338:	f1ce 0110 	rsb	r1, lr, #16
 802333c:	1a09      	subs	r1, r1, r0
 802333e:	ea4a 0303 	orr.w	r3, sl, r3
 8023342:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 8023346:	4343      	muls	r3, r0
 8023348:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 802334c:	9801      	ldr	r0, [sp, #4]
 802334e:	fb01 3106 	mla	r1, r1, r6, r3
 8023352:	9e02      	ldr	r6, [sp, #8]
 8023354:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8023358:	1b80      	subs	r0, r0, r6
 802335a:	9e01      	ldr	r6, [sp, #4]
 802335c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8023360:	eba6 0608 	sub.w	r6, r6, r8
 8023364:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023368:	b2b6      	uxth	r6, r6
 802336a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802336e:	ea4a 0202 	orr.w	r2, sl, r2
 8023372:	b280      	uxth	r0, r0
 8023374:	4374      	muls	r4, r6
 8023376:	fb09 1302 	mla	r3, r9, r2, r1
 802337a:	fb0c 4400 	mla	r4, ip, r0, r4
 802337e:	9a03      	ldr	r2, [sp, #12]
 8023380:	9802      	ldr	r0, [sp, #8]
 8023382:	8811      	ldrh	r1, [r2, #0]
 8023384:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 8023388:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 802338c:	fb00 4505 	mla	r5, r0, r5, r4
 8023390:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023394:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8023398:	fb08 5707 	mla	r7, r8, r7, r5
 802339c:	ea4a 0b0b 	orr.w	fp, sl, fp
 80233a0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80233a4:	b292      	uxth	r2, r2
 80233a6:	fb0e 3e0b 	mla	lr, lr, fp, r3
 80233aa:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80233ae:	4357      	muls	r7, r2
 80233b0:	ea4f 535e 	mov.w	r3, lr, lsr #21
 80233b4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80233b8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80233bc:	f107 0801 	add.w	r8, r7, #1
 80233c0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80233c4:	ea43 0e0e 	orr.w	lr, r3, lr
 80233c8:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 80233cc:	fa1f f38e 	uxth.w	r3, lr
 80233d0:	1208      	asrs	r0, r1, #8
 80233d2:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 80233d6:	b2ff      	uxtb	r7, r7
 80233d8:	121c      	asrs	r4, r3, #8
 80233da:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80233de:	fb10 f007 	smulbb	r0, r0, r7
 80233e2:	10cd      	asrs	r5, r1, #3
 80233e4:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80233e8:	fb04 0402 	mla	r4, r4, r2, r0
 80233ec:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80233f0:	10d8      	asrs	r0, r3, #3
 80233f2:	fb15 f507 	smulbb	r5, r5, r7
 80233f6:	00db      	lsls	r3, r3, #3
 80233f8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80233fc:	fb00 5002 	mla	r0, r0, r2, r5
 8023400:	b2dd      	uxtb	r5, r3
 8023402:	00cb      	lsls	r3, r1, #3
 8023404:	b2db      	uxtb	r3, r3
 8023406:	fb13 f307 	smulbb	r3, r3, r7
 802340a:	fb05 3202 	mla	r2, r5, r2, r3
 802340e:	b2a4      	uxth	r4, r4
 8023410:	b292      	uxth	r2, r2
 8023412:	1c63      	adds	r3, r4, #1
 8023414:	b280      	uxth	r0, r0
 8023416:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802341a:	1c53      	adds	r3, r2, #1
 802341c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023420:	1c42      	adds	r2, r0, #1
 8023422:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023426:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 802342a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802342e:	0940      	lsrs	r0, r0, #5
 8023430:	4323      	orrs	r3, r4
 8023432:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023436:	9a03      	ldr	r2, [sp, #12]
 8023438:	4303      	orrs	r3, r0
 802343a:	8013      	strh	r3, [r2, #0]
 802343c:	b005      	add	sp, #20
 802343e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023442:	280f      	cmp	r0, #15
 8023444:	f63f af33 	bhi.w	80232ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 8023448:	4677      	mov	r7, lr
 802344a:	4675      	mov	r5, lr
 802344c:	4672      	mov	r2, lr
 802344e:	46f3      	mov	fp, lr
 8023450:	e753      	b.n	80232fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 8023452:	bf00      	nop
 8023454:	0802d4b6 	.word	0x0802d4b6
 8023458:	0802da86 	.word	0x0802da86
 802345c:	0802d53a 	.word	0x0802d53a

08023460 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023460:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023464:	ed2d 8b08 	vpush	{d8-d11}
 8023468:	b097      	sub	sp, #92	; 0x5c
 802346a:	eeb0 aa40 	vmov.f32	s20, s0
 802346e:	9214      	str	r2, [sp, #80]	; 0x50
 8023470:	9308      	str	r3, [sp, #32]
 8023472:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8023474:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8023478:	9312      	str	r3, [sp, #72]	; 0x48
 802347a:	9111      	str	r1, [sp, #68]	; 0x44
 802347c:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8023480:	9015      	str	r0, [sp, #84]	; 0x54
 8023482:	6850      	ldr	r0, [r2, #4]
 8023484:	6812      	ldr	r2, [r2, #0]
 8023486:	fb00 1303 	mla	r3, r0, r3, r1
 802348a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802348e:	9309      	str	r3, [sp, #36]	; 0x24
 8023490:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023492:	681b      	ldr	r3, [r3, #0]
 8023494:	930b      	str	r3, [sp, #44]	; 0x2c
 8023496:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023498:	685b      	ldr	r3, [r3, #4]
 802349a:	930c      	str	r3, [sp, #48]	; 0x30
 802349c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80234a0:	930a      	str	r3, [sp, #40]	; 0x28
 80234a2:	eef0 9a60 	vmov.f32	s19, s1
 80234a6:	eeb0 9a41 	vmov.f32	s18, s2
 80234aa:	eeb0 8a62 	vmov.f32	s16, s5
 80234ae:	eef0 8a43 	vmov.f32	s17, s6
 80234b2:	eef0 ba44 	vmov.f32	s23, s8
 80234b6:	eeb0 ba64 	vmov.f32	s22, s9
 80234ba:	eef0 aa45 	vmov.f32	s21, s10
 80234be:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80234c0:	2b00      	cmp	r3, #0
 80234c2:	dc03      	bgt.n	80234cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80234c4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80234c6:	2b00      	cmp	r3, #0
 80234c8:	f340 83cb 	ble.w	8023c62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 80234cc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80234ce:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80234d2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80234d6:	1e48      	subs	r0, r1, #1
 80234d8:	1e55      	subs	r5, r2, #1
 80234da:	9b08      	ldr	r3, [sp, #32]
 80234dc:	2b00      	cmp	r3, #0
 80234de:	f340 81a3 	ble.w	8023828 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80234e2:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 80234e4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80234e6:	1436      	asrs	r6, r6, #16
 80234e8:	ea4f 4323 	mov.w	r3, r3, asr #16
 80234ec:	d406      	bmi.n	80234fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80234ee:	4286      	cmp	r6, r0
 80234f0:	da04      	bge.n	80234fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80234f2:	2b00      	cmp	r3, #0
 80234f4:	db02      	blt.n	80234fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80234f6:	42ab      	cmp	r3, r5
 80234f8:	f2c0 8197 	blt.w	802382a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 80234fc:	3601      	adds	r6, #1
 80234fe:	f100 8184 	bmi.w	802380a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8023502:	42b1      	cmp	r1, r6
 8023504:	f2c0 8181 	blt.w	802380a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8023508:	3301      	adds	r3, #1
 802350a:	f100 817e 	bmi.w	802380a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 802350e:	429a      	cmp	r2, r3
 8023510:	f2c0 817b 	blt.w	802380a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8023514:	9b08      	ldr	r3, [sp, #32]
 8023516:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8023518:	9313      	str	r3, [sp, #76]	; 0x4c
 802351a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802351e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8023520:	2b00      	cmp	r3, #0
 8023522:	f340 81a4 	ble.w	802386e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 8023526:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023528:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 802352a:	1418      	asrs	r0, r3, #16
 802352c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802352e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8023532:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023534:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8023538:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802353a:	142d      	asrs	r5, r5, #16
 802353c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8023540:	f100 81f8 	bmi.w	8023934 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8023544:	f102 3eff 	add.w	lr, r2, #4294967295
 8023548:	4575      	cmp	r5, lr
 802354a:	f280 81f3 	bge.w	8023934 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 802354e:	2800      	cmp	r0, #0
 8023550:	f2c0 81f0 	blt.w	8023934 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8023554:	f103 3eff 	add.w	lr, r3, #4294967295
 8023558:	4570      	cmp	r0, lr
 802355a:	f280 81eb 	bge.w	8023934 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 802355e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023560:	b212      	sxth	r2, r2
 8023562:	fb00 5002 	mla	r0, r0, r2, r5
 8023566:	fa1f fe81 	uxth.w	lr, r1
 802356a:	eb03 0a00 	add.w	sl, r3, r0
 802356e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8023572:	f813 9000 	ldrb.w	r9, [r3, r0]
 8023576:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802357a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 802357e:	b29b      	uxth	r3, r3
 8023580:	f1bc 0f00 	cmp.w	ip, #0
 8023584:	f000 81b9 	beq.w	80238fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8023588:	f81a 4002 	ldrb.w	r4, [sl, r2]
 802358c:	940d      	str	r4, [sp, #52]	; 0x34
 802358e:	eb0a 0b02 	add.w	fp, sl, r2
 8023592:	fa1f fa8c 	uxth.w	sl, ip
 8023596:	fb0a fe0e 	mul.w	lr, sl, lr
 802359a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802359e:	fa1f fa8a 	uxth.w	sl, sl
 80235a2:	eba5 050e 	sub.w	r5, r5, lr
 80235a6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80235aa:	940e      	str	r4, [sp, #56]	; 0x38
 80235ac:	eba3 030a 	sub.w	r3, r3, sl
 80235b0:	b2ad      	uxth	r5, r5
 80235b2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80235b4:	b29b      	uxth	r3, r3
 80235b6:	fb08 f505 	mul.w	r5, r8, r5
 80235ba:	fb09 5303 	mla	r3, r9, r3, r5
 80235be:	fb0a 3304 	mla	r3, sl, r4, r3
 80235c2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80235c4:	fb0e 3304 	mla	r3, lr, r4, r3
 80235c8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80235cc:	2b00      	cmp	r3, #0
 80235ce:	f000 810f 	beq.w	80237f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80235d2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80235d4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80235d8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80235dc:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80235e0:	f000 8190 	beq.w	8023904 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 80235e4:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80235e8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80235ec:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80235f0:	fb09 f000 	mul.w	r0, r9, r0
 80235f4:	fb0a fe0e 	mul.w	lr, sl, lr
 80235f8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80235fc:	f100 0b20 	add.w	fp, r0, #32
 8023600:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023604:	44ce      	add	lr, r9
 8023606:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802360a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802360e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8023612:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8023616:	ea4e 0909 	orr.w	r9, lr, r9
 802361a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802361e:	8868      	ldrh	r0, [r5, #2]
 8023620:	d019      	beq.n	8023656 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8023622:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8023626:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802362a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802362e:	fb08 f800 	mul.w	r8, r8, r0
 8023632:	fb0a fe0e 	mul.w	lr, sl, lr
 8023636:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802363a:	f108 0b20 	add.w	fp, r8, #32
 802363e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023642:	4486      	add	lr, r0
 8023644:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8023648:	0a00      	lsrs	r0, r0, #8
 802364a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802364e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023652:	ea4e 0000 	orr.w	r0, lr, r0
 8023656:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802365a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802365e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8023662:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023666:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802366a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802366e:	ea4e 0909 	orr.w	r9, lr, r9
 8023672:	ea4a 0000 	orr.w	r0, sl, r0
 8023676:	f1bc 0f00 	cmp.w	ip, #0
 802367a:	f000 8145 	beq.w	8023908 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 802367e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8023682:	3a01      	subs	r2, #1
 8023684:	0052      	lsls	r2, r2, #1
 8023686:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023688:	3202      	adds	r2, #2
 802368a:	2cff      	cmp	r4, #255	; 0xff
 802368c:	eb05 0e02 	add.w	lr, r5, r2
 8023690:	5aaa      	ldrh	r2, [r5, r2]
 8023692:	d018      	beq.n	80236c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8023694:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8023698:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802369c:	fb04 fa02 	mul.w	sl, r4, r2
 80236a0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80236a4:	fb08 f805 	mul.w	r8, r8, r5
 80236a8:	f10a 0520 	add.w	r5, sl, #32
 80236ac:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80236b0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80236b4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80236b8:	4442      	add	r2, r8
 80236ba:	0a2d      	lsrs	r5, r5, #8
 80236bc:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80236c0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80236c4:	432a      	orrs	r2, r5
 80236c6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80236c8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80236cc:	2cff      	cmp	r4, #255	; 0xff
 80236ce:	d01a      	beq.n	8023706 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80236d0:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80236d4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80236d8:	fb04 fa05 	mul.w	sl, r4, r5
 80236dc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80236e0:	fb08 f80e 	mul.w	r8, r8, lr
 80236e4:	f10a 0e20 	add.w	lr, sl, #32
 80236e8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80236ec:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80236f0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80236f4:	4445      	add	r5, r8
 80236f6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80236fa:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80236fe:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8023702:	ea45 050e 	orr.w	r5, r5, lr
 8023706:	fb1c fe01 	smulbb	lr, ip, r1
 802370a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802370e:	f1cc 0810 	rsb	r8, ip, #16
 8023712:	eba8 0801 	sub.w	r8, r8, r1
 8023716:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802371a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802371e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8023722:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8023726:	4341      	muls	r1, r0
 8023728:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802372c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023730:	ea4a 0202 	orr.w	r2, sl, r2
 8023734:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8023738:	fb09 1108 	mla	r1, r9, r8, r1
 802373c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023740:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8023744:	fb0c 1102 	mla	r1, ip, r2, r1
 8023748:	ea4b 0505 	orr.w	r5, fp, r5
 802374c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8023750:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023754:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8023758:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802375c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023760:	ea42 0e0e 	orr.w	lr, r2, lr
 8023764:	fa1f f28e 	uxth.w	r2, lr
 8023768:	2bff      	cmp	r3, #255	; 0xff
 802376a:	d103      	bne.n	8023774 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 802376c:	9912      	ldr	r1, [sp, #72]	; 0x48
 802376e:	29ff      	cmp	r1, #255	; 0xff
 8023770:	f000 80de 	beq.w	8023930 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>
 8023774:	990a      	ldr	r1, [sp, #40]	; 0x28
 8023776:	8838      	ldrh	r0, [r7, #0]
 8023778:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802377a:	434b      	muls	r3, r1
 802377c:	f103 0c01 	add.w	ip, r3, #1
 8023780:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8023784:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8023788:	fa5f fc83 	uxtb.w	ip, r3
 802378c:	1203      	asrs	r3, r0, #8
 802378e:	1215      	asrs	r5, r2, #8
 8023790:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023794:	fb13 f30c 	smulbb	r3, r3, ip
 8023798:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802379c:	fb05 3501 	mla	r5, r5, r1, r3
 80237a0:	10c3      	asrs	r3, r0, #3
 80237a2:	10d1      	asrs	r1, r2, #3
 80237a4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80237a8:	fb13 f30c 	smulbb	r3, r3, ip
 80237ac:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80237b0:	fb01 3104 	mla	r1, r1, r4, r3
 80237b4:	00c3      	lsls	r3, r0, #3
 80237b6:	00d2      	lsls	r2, r2, #3
 80237b8:	b2db      	uxtb	r3, r3
 80237ba:	b2d2      	uxtb	r2, r2
 80237bc:	fb13 f30c 	smulbb	r3, r3, ip
 80237c0:	b2ad      	uxth	r5, r5
 80237c2:	fb02 3304 	mla	r3, r2, r4, r3
 80237c6:	b29a      	uxth	r2, r3
 80237c8:	1c6b      	adds	r3, r5, #1
 80237ca:	b289      	uxth	r1, r1
 80237cc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80237d0:	1c53      	adds	r3, r2, #1
 80237d2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80237d6:	1c4a      	adds	r2, r1, #1
 80237d8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80237dc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80237e0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80237e4:	0949      	lsrs	r1, r1, #5
 80237e6:	432b      	orrs	r3, r5
 80237e8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80237ec:	430b      	orrs	r3, r1
 80237ee:	803b      	strh	r3, [r7, #0]
 80237f0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80237f2:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80237f4:	4413      	add	r3, r2
 80237f6:	9329      	str	r3, [sp, #164]	; 0xa4
 80237f8:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80237fa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80237fc:	441a      	add	r2, r3
 80237fe:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8023800:	922a      	str	r2, [sp, #168]	; 0xa8
 8023802:	3b01      	subs	r3, #1
 8023804:	3702      	adds	r7, #2
 8023806:	9313      	str	r3, [sp, #76]	; 0x4c
 8023808:	e689      	b.n	802351e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802380a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802380c:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 802380e:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 8023810:	4433      	add	r3, r6
 8023812:	9329      	str	r3, [sp, #164]	; 0xa4
 8023814:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023816:	441c      	add	r4, r3
 8023818:	9b08      	ldr	r3, [sp, #32]
 802381a:	942a      	str	r4, [sp, #168]	; 0xa8
 802381c:	3b01      	subs	r3, #1
 802381e:	9308      	str	r3, [sp, #32]
 8023820:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023822:	3302      	adds	r3, #2
 8023824:	9309      	str	r3, [sp, #36]	; 0x24
 8023826:	e658      	b.n	80234da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023828:	d028      	beq.n	802387c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 802382a:	9b08      	ldr	r3, [sp, #32]
 802382c:	982b      	ldr	r0, [sp, #172]	; 0xac
 802382e:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8023830:	3b01      	subs	r3, #1
 8023832:	fb00 5003 	mla	r0, r0, r3, r5
 8023836:	1400      	asrs	r0, r0, #16
 8023838:	f53f ae6c 	bmi.w	8023514 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 802383c:	3901      	subs	r1, #1
 802383e:	4288      	cmp	r0, r1
 8023840:	f6bf ae68 	bge.w	8023514 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8023844:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8023846:	982a      	ldr	r0, [sp, #168]	; 0xa8
 8023848:	fb01 0303 	mla	r3, r1, r3, r0
 802384c:	141b      	asrs	r3, r3, #16
 802384e:	f53f ae61 	bmi.w	8023514 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8023852:	3a01      	subs	r2, #1
 8023854:	4293      	cmp	r3, r2
 8023856:	f6bf ae5d 	bge.w	8023514 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 802385a:	9b08      	ldr	r3, [sp, #32]
 802385c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8023860:	9313      	str	r3, [sp, #76]	; 0x4c
 8023862:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8023866:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8023868:	2b00      	cmp	r3, #0
 802386a:	f300 8082 	bgt.w	8023972 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 802386e:	9b08      	ldr	r3, [sp, #32]
 8023870:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8023874:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023876:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802387a:	9309      	str	r3, [sp, #36]	; 0x24
 802387c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802387e:	2b00      	cmp	r3, #0
 8023880:	f340 81ef 	ble.w	8023c62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 8023884:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8023888:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802388c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8023890:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023892:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8023896:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802389a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 802389e:	eef0 6a48 	vmov.f32	s13, s16
 80238a2:	ee69 7a27 	vmul.f32	s15, s18, s15
 80238a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80238aa:	ee37 8a48 	vsub.f32	s16, s14, s16
 80238ae:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80238b2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80238b6:	eef0 6a68 	vmov.f32	s13, s17
 80238ba:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80238be:	ee18 2a10 	vmov	r2, s16
 80238c2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80238c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80238ca:	ee18 2a90 	vmov	r2, s17
 80238ce:	932b      	str	r3, [sp, #172]	; 0xac
 80238d0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80238d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80238d6:	932c      	str	r3, [sp, #176]	; 0xb0
 80238d8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80238da:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80238dc:	3b01      	subs	r3, #1
 80238de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80238e2:	9311      	str	r3, [sp, #68]	; 0x44
 80238e4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80238e6:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 80238ea:	bf08      	it	eq
 80238ec:	4613      	moveq	r3, r2
 80238ee:	9308      	str	r3, [sp, #32]
 80238f0:	eef0 8a67 	vmov.f32	s17, s15
 80238f4:	eeb0 8a47 	vmov.f32	s16, s14
 80238f8:	e5e1      	b.n	80234be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80238fa:	fb08 f505 	mul.w	r5, r8, r5
 80238fe:	fb09 5303 	mla	r3, r9, r3, r5
 8023902:	e661      	b.n	80235c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 8023904:	4681      	mov	r9, r0
 8023906:	e688      	b.n	802361a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8023908:	f1c1 0210 	rsb	r2, r1, #16
 802390c:	4341      	muls	r1, r0
 802390e:	fb09 1902 	mla	r9, r9, r2, r1
 8023912:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023916:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802391a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802391e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023922:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023926:	ea42 0909 	orr.w	r9, r2, r9
 802392a:	fa1f f289 	uxth.w	r2, r9
 802392e:	e71b      	b.n	8023768 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 8023930:	803a      	strh	r2, [r7, #0]
 8023932:	e75d      	b.n	80237f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8023934:	f115 0e01 	adds.w	lr, r5, #1
 8023938:	f53f af5a 	bmi.w	80237f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 802393c:	4572      	cmp	r2, lr
 802393e:	f6ff af57 	blt.w	80237f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8023942:	f110 0e01 	adds.w	lr, r0, #1
 8023946:	f53f af53 	bmi.w	80237f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 802394a:	4573      	cmp	r3, lr
 802394c:	f6ff af50 	blt.w	80237f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8023950:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8023952:	9502      	str	r5, [sp, #8]
 8023954:	b21b      	sxth	r3, r3
 8023956:	b212      	sxth	r2, r2
 8023958:	e9cd 0103 	strd	r0, r1, [sp, #12]
 802395c:	9301      	str	r3, [sp, #4]
 802395e:	9200      	str	r2, [sp, #0]
 8023960:	e9cd c405 	strd	ip, r4, [sp, #20]
 8023964:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8023968:	4639      	mov	r1, r7
 802396a:	9815      	ldr	r0, [sp, #84]	; 0x54
 802396c:	f7ff fbd2 	bl	8023114 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8023970:	e73e      	b.n	80237f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8023972:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023974:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023978:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802397a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 802397e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023980:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023984:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023986:	141f      	asrs	r7, r3, #16
 8023988:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802398a:	141b      	asrs	r3, r3, #16
 802398c:	fb01 3707 	mla	r7, r1, r7, r3
 8023990:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023992:	fa1f fc82 	uxth.w	ip, r2
 8023996:	eb03 0a07 	add.w	sl, r3, r7
 802399a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 802399e:	f813 9007 	ldrb.w	r9, [r3, r7]
 80239a2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80239a6:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80239aa:	b29b      	uxth	r3, r3
 80239ac:	2d00      	cmp	r5, #0
 80239ae:	f000 813d 	beq.w	8023c2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 80239b2:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80239b6:	940f      	str	r4, [sp, #60]	; 0x3c
 80239b8:	eb0a 0b01 	add.w	fp, sl, r1
 80239bc:	fa1f fa85 	uxth.w	sl, r5
 80239c0:	fb0a fc0c 	mul.w	ip, sl, ip
 80239c4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80239c8:	fa1f fa8a 	uxth.w	sl, sl
 80239cc:	eba0 000c 	sub.w	r0, r0, ip
 80239d0:	eba3 030a 	sub.w	r3, r3, sl
 80239d4:	b280      	uxth	r0, r0
 80239d6:	fb08 f000 	mul.w	r0, r8, r0
 80239da:	b29b      	uxth	r3, r3
 80239dc:	fb09 0303 	mla	r3, r9, r3, r0
 80239e0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80239e2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80239e6:	9410      	str	r4, [sp, #64]	; 0x40
 80239e8:	fb0a 3300 	mla	r3, sl, r0, r3
 80239ec:	fb0c 3304 	mla	r3, ip, r4, r3
 80239f0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80239f4:	2b00      	cmp	r3, #0
 80239f6:	f000 810b 	beq.w	8023c10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 80239fa:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80239fc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80239fe:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8023a02:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8023a06:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8023a0a:	f000 8114 	beq.w	8023c36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d6>
 8023a0e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8023a12:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8023a16:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023a1a:	fb09 f707 	mul.w	r7, r9, r7
 8023a1e:	fb0a fc0c 	mul.w	ip, sl, ip
 8023a22:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8023a26:	f107 0b20 	add.w	fp, r7, #32
 8023a2a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023a2e:	44cc      	add	ip, r9
 8023a30:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8023a34:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023a38:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023a3c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8023a40:	ea4c 0909 	orr.w	r9, ip, r9
 8023a44:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8023a48:	8847      	ldrh	r7, [r0, #2]
 8023a4a:	d019      	beq.n	8023a80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x620>
 8023a4c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8023a50:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8023a54:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023a58:	fb08 f807 	mul.w	r8, r8, r7
 8023a5c:	fb0a fc0c 	mul.w	ip, sl, ip
 8023a60:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8023a64:	f108 0b20 	add.w	fp, r8, #32
 8023a68:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023a6c:	44bc      	add	ip, r7
 8023a6e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8023a72:	0a3f      	lsrs	r7, r7, #8
 8023a74:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023a78:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023a7c:	ea4c 0707 	orr.w	r7, ip, r7
 8023a80:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8023a84:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8023a88:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023a8c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023a90:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023a94:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023a98:	ea4c 0909 	orr.w	r9, ip, r9
 8023a9c:	ea4a 0707 	orr.w	r7, sl, r7
 8023aa0:	2d00      	cmp	r5, #0
 8023aa2:	f000 80ca 	beq.w	8023c3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 8023aa6:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023aaa:	3901      	subs	r1, #1
 8023aac:	0049      	lsls	r1, r1, #1
 8023aae:	3102      	adds	r1, #2
 8023ab0:	eb00 0c01 	add.w	ip, r0, r1
 8023ab4:	5a41      	ldrh	r1, [r0, r1]
 8023ab6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8023ab8:	28ff      	cmp	r0, #255	; 0xff
 8023aba:	d019      	beq.n	8023af0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x690>
 8023abc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8023abe:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8023ac2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023ac6:	fb04 fa01 	mul.w	sl, r4, r1
 8023aca:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023ace:	fb08 f800 	mul.w	r8, r8, r0
 8023ad2:	f10a 0020 	add.w	r0, sl, #32
 8023ad6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8023ada:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8023ade:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023ae2:	4441      	add	r1, r8
 8023ae4:	0a00      	lsrs	r0, r0, #8
 8023ae6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8023aea:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023aee:	4301      	orrs	r1, r0
 8023af0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023af2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8023af6:	2cff      	cmp	r4, #255	; 0xff
 8023af8:	d01a      	beq.n	8023b30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 8023afa:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8023afe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023b02:	fb04 fa00 	mul.w	sl, r4, r0
 8023b06:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023b0a:	fb08 f80c 	mul.w	r8, r8, ip
 8023b0e:	f10a 0c20 	add.w	ip, sl, #32
 8023b12:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8023b16:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8023b1a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023b1e:	4440      	add	r0, r8
 8023b20:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023b24:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8023b28:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023b2c:	ea40 000c 	orr.w	r0, r0, ip
 8023b30:	fb15 fc02 	smulbb	ip, r5, r2
 8023b34:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8023b38:	f1c5 0810 	rsb	r8, r5, #16
 8023b3c:	eba8 0802 	sub.w	r8, r8, r2
 8023b40:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8023b44:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8023b48:	437a      	muls	r2, r7
 8023b4a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8023b4e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8023b52:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023b56:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023b5a:	fb09 2208 	mla	r2, r9, r8, r2
 8023b5e:	ea4a 0101 	orr.w	r1, sl, r1
 8023b62:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8023b66:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023b6a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023b6e:	fb05 2201 	mla	r2, r5, r1, r2
 8023b72:	ea4b 0000 	orr.w	r0, fp, r0
 8023b76:	fb0c 2200 	mla	r2, ip, r0, r2
 8023b7a:	0d57      	lsrs	r7, r2, #21
 8023b7c:	0952      	lsrs	r2, r2, #5
 8023b7e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023b82:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023b86:	433a      	orrs	r2, r7
 8023b88:	2bff      	cmp	r3, #255	; 0xff
 8023b8a:	b292      	uxth	r2, r2
 8023b8c:	d102      	bne.n	8023b94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8023b8e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8023b90:	29ff      	cmp	r1, #255	; 0xff
 8023b92:	d063      	beq.n	8023c5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7fc>
 8023b94:	980a      	ldr	r0, [sp, #40]	; 0x28
 8023b96:	f8be 1000 	ldrh.w	r1, [lr]
 8023b9a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023b9c:	4343      	muls	r3, r0
 8023b9e:	1c58      	adds	r0, r3, #1
 8023ba0:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8023ba4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8023ba8:	1208      	asrs	r0, r1, #8
 8023baa:	b2db      	uxtb	r3, r3
 8023bac:	1215      	asrs	r5, r2, #8
 8023bae:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023bb2:	fb10 f003 	smulbb	r0, r0, r3
 8023bb6:	10cf      	asrs	r7, r1, #3
 8023bb8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023bbc:	00c9      	lsls	r1, r1, #3
 8023bbe:	fb05 0504 	mla	r5, r5, r4, r0
 8023bc2:	b2c9      	uxtb	r1, r1
 8023bc4:	10d0      	asrs	r0, r2, #3
 8023bc6:	00d2      	lsls	r2, r2, #3
 8023bc8:	fb11 f103 	smulbb	r1, r1, r3
 8023bcc:	b2d2      	uxtb	r2, r2
 8023bce:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8023bd2:	fb02 1204 	mla	r2, r2, r4, r1
 8023bd6:	fb17 f703 	smulbb	r7, r7, r3
 8023bda:	b2ad      	uxth	r5, r5
 8023bdc:	b292      	uxth	r2, r2
 8023bde:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023be2:	fb00 7004 	mla	r0, r0, r4, r7
 8023be6:	1c6b      	adds	r3, r5, #1
 8023be8:	1c57      	adds	r7, r2, #1
 8023bea:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023bee:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8023bf2:	b280      	uxth	r0, r0
 8023bf4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8023bf8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023bfc:	433d      	orrs	r5, r7
 8023bfe:	1c47      	adds	r7, r0, #1
 8023c00:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8023c04:	097f      	lsrs	r7, r7, #5
 8023c06:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023c0a:	433d      	orrs	r5, r7
 8023c0c:	f8ae 5000 	strh.w	r5, [lr]
 8023c10:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023c12:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8023c14:	4413      	add	r3, r2
 8023c16:	9329      	str	r3, [sp, #164]	; 0xa4
 8023c18:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8023c1a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023c1c:	441a      	add	r2, r3
 8023c1e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8023c20:	922a      	str	r2, [sp, #168]	; 0xa8
 8023c22:	3b01      	subs	r3, #1
 8023c24:	f10e 0e02 	add.w	lr, lr, #2
 8023c28:	9313      	str	r3, [sp, #76]	; 0x4c
 8023c2a:	e61c      	b.n	8023866 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 8023c2c:	fb08 f000 	mul.w	r0, r8, r0
 8023c30:	fb09 0303 	mla	r3, r9, r3, r0
 8023c34:	e6dc      	b.n	80239f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x590>
 8023c36:	46b9      	mov	r9, r7
 8023c38:	e704      	b.n	8023a44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e4>
 8023c3a:	f1c2 0110 	rsb	r1, r2, #16
 8023c3e:	437a      	muls	r2, r7
 8023c40:	fb09 2901 	mla	r9, r9, r1, r2
 8023c44:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023c48:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8023c4c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8023c50:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023c54:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023c58:	4302      	orrs	r2, r0
 8023c5a:	e795      	b.n	8023b88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 8023c5c:	f8ae 2000 	strh.w	r2, [lr]
 8023c60:	e7d6      	b.n	8023c10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8023c62:	b017      	add	sp, #92	; 0x5c
 8023c64:	ecbd 8b08 	vpop	{d8-d11}
 8023c68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023c6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8023c6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023c70:	b085      	sub	sp, #20
 8023c72:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8023c76:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8023c7a:	9103      	str	r1, [sp, #12]
 8023c7c:	fb05 7106 	mla	r1, r5, r6, r7
 8023c80:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 8023c84:	2d00      	cmp	r5, #0
 8023c86:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8023c8a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8023c8e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8023c92:	9401      	str	r4, [sp, #4]
 8023c94:	eb02 0901 	add.w	r9, r2, r1
 8023c98:	f2c0 80c0 	blt.w	8023e1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8023c9c:	45a8      	cmp	r8, r5
 8023c9e:	f340 80bd 	ble.w	8023e1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8023ca2:	2f00      	cmp	r7, #0
 8023ca4:	f2c0 80b6 	blt.w	8023e14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8023ca8:	42be      	cmp	r6, r7
 8023caa:	f340 80b3 	ble.w	8023e14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8023cae:	f812 c001 	ldrb.w	ip, [r2, r1]
 8023cb2:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8023cb6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8023cba:	d019      	beq.n	8023cf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 8023cbc:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8023cc0:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8023cc4:	435a      	muls	r2, r3
 8023cc6:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 8023cca:	f64f 011f 	movw	r1, #63519	; 0xf81f
 8023cce:	fb0c f403 	mul.w	r4, ip, r3
 8023cd2:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 8023cd6:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8023cda:	441a      	add	r2, r3
 8023cdc:	f104 0320 	add.w	r3, r4, #32
 8023ce0:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8023ce4:	0a1b      	lsrs	r3, r3, #8
 8023ce6:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 8023cea:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023cee:	4319      	orrs	r1, r3
 8023cf0:	b289      	uxth	r1, r1
 8023cf2:	1c7b      	adds	r3, r7, #1
 8023cf4:	f100 8097 	bmi.w	8023e26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8023cf8:	429e      	cmp	r6, r3
 8023cfa:	f340 8094 	ble.w	8023e26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8023cfe:	2800      	cmp	r0, #0
 8023d00:	f000 8094 	beq.w	8023e2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 8023d04:	f899 4001 	ldrb.w	r4, [r9, #1]
 8023d08:	9b01      	ldr	r3, [sp, #4]
 8023d0a:	2cff      	cmp	r4, #255	; 0xff
 8023d0c:	885b      	ldrh	r3, [r3, #2]
 8023d0e:	d01b      	beq.n	8023d48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 8023d10:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8023d14:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8023d18:	fb0a f202 	mul.w	r2, sl, r2
 8023d1c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023d20:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8023d24:	fb04 fa03 	mul.w	sl, r4, r3
 8023d28:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8023d2c:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8023d30:	441a      	add	r2, r3
 8023d32:	f10a 0320 	add.w	r3, sl, #32
 8023d36:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8023d3a:	0a1b      	lsrs	r3, r3, #8
 8023d3c:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8023d40:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023d44:	ea4b 0303 	orr.w	r3, fp, r3
 8023d48:	b29b      	uxth	r3, r3
 8023d4a:	3501      	adds	r5, #1
 8023d4c:	d474      	bmi.n	8023e38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8023d4e:	45a8      	cmp	r8, r5
 8023d50:	dd72      	ble.n	8023e38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8023d52:	f1be 0f00 	cmp.w	lr, #0
 8023d56:	f000 8110 	beq.w	8023f7a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x30e>
 8023d5a:	2f00      	cmp	r7, #0
 8023d5c:	db69      	blt.n	8023e32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 8023d5e:	42be      	cmp	r6, r7
 8023d60:	dd67      	ble.n	8023e32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 8023d62:	f819 5006 	ldrb.w	r5, [r9, r6]
 8023d66:	9a01      	ldr	r2, [sp, #4]
 8023d68:	2dff      	cmp	r5, #255	; 0xff
 8023d6a:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 8023d6e:	d01c      	beq.n	8023daa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 8023d70:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 8023d74:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8023d78:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8023d7c:	fb05 fa0b 	mul.w	sl, r5, fp
 8023d80:	fb08 f802 	mul.w	r8, r8, r2
 8023d84:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8023d88:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8023d8c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023d90:	4490      	add	r8, r2
 8023d92:	f10a 0220 	add.w	r2, sl, #32
 8023d96:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 8023d9a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023d9e:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 8023da2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8023da6:	ea4b 0b0a 	orr.w	fp, fp, sl
 8023daa:	fa1f fb8b 	uxth.w	fp, fp
 8023dae:	3701      	adds	r7, #1
 8023db0:	d447      	bmi.n	8023e42 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 8023db2:	42be      	cmp	r6, r7
 8023db4:	dd45      	ble.n	8023e42 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 8023db6:	2800      	cmp	r0, #0
 8023db8:	d046      	beq.n	8023e48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 8023dba:	3601      	adds	r6, #1
 8023dbc:	9a01      	ldr	r2, [sp, #4]
 8023dbe:	f819 7006 	ldrb.w	r7, [r9, r6]
 8023dc2:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 8023dc6:	2fff      	cmp	r7, #255	; 0xff
 8023dc8:	d01a      	beq.n	8023e00 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 8023dca:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 8023dce:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8023dd2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023dd6:	fb07 f902 	mul.w	r9, r7, r2
 8023dda:	fb08 f806 	mul.w	r8, r8, r6
 8023dde:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8023de2:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 8023de6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023dea:	44b0      	add	r8, r6
 8023dec:	f109 0620 	add.w	r6, r9, #32
 8023df0:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8023df4:	0a36      	lsrs	r6, r6, #8
 8023df6:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8023dfa:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8023dfe:	4332      	orrs	r2, r6
 8023e00:	b292      	uxth	r2, r2
 8023e02:	280f      	cmp	r0, #15
 8023e04:	d922      	bls.n	8023e4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8023e06:	4b61      	ldr	r3, [pc, #388]	; (8023f8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 8023e08:	4a61      	ldr	r2, [pc, #388]	; (8023f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 8023e0a:	4862      	ldr	r0, [pc, #392]	; (8023f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 8023e0c:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8023e10:	f003 fcb6 	bl	8027780 <__assert_func>
 8023e14:	f04f 0c00 	mov.w	ip, #0
 8023e18:	4661      	mov	r1, ip
 8023e1a:	e76a      	b.n	8023cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8023e1c:	2400      	movs	r4, #0
 8023e1e:	46a4      	mov	ip, r4
 8023e20:	4623      	mov	r3, r4
 8023e22:	4621      	mov	r1, r4
 8023e24:	e791      	b.n	8023d4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8023e26:	2400      	movs	r4, #0
 8023e28:	4623      	mov	r3, r4
 8023e2a:	e78e      	b.n	8023d4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8023e2c:	4604      	mov	r4, r0
 8023e2e:	4603      	mov	r3, r0
 8023e30:	e78b      	b.n	8023d4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8023e32:	2500      	movs	r5, #0
 8023e34:	46ab      	mov	fp, r5
 8023e36:	e7ba      	b.n	8023dae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 8023e38:	2700      	movs	r7, #0
 8023e3a:	463d      	mov	r5, r7
 8023e3c:	463a      	mov	r2, r7
 8023e3e:	46bb      	mov	fp, r7
 8023e40:	e7df      	b.n	8023e02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8023e42:	2700      	movs	r7, #0
 8023e44:	463a      	mov	r2, r7
 8023e46:	e7dc      	b.n	8023e02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8023e48:	4607      	mov	r7, r0
 8023e4a:	4602      	mov	r2, r0
 8023e4c:	f1be 0f0f 	cmp.w	lr, #15
 8023e50:	d8d9      	bhi.n	8023e06 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8023e52:	b286      	uxth	r6, r0
 8023e54:	fa1f f98e 	uxth.w	r9, lr
 8023e58:	fb06 f809 	mul.w	r8, r6, r9
 8023e5c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8023e60:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8023e64:	0136      	lsls	r6, r6, #4
 8023e66:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023e6a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023e6e:	9601      	str	r6, [sp, #4]
 8023e70:	ea4a 0101 	orr.w	r1, sl, r1
 8023e74:	fa1f f689 	uxth.w	r6, r9
 8023e78:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8023e7c:	fb10 f90e 	smulbb	r9, r0, lr
 8023e80:	ea4f 09e9 	mov.w	r9, r9, asr #3
 8023e84:	9602      	str	r6, [sp, #8]
 8023e86:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023e8a:	460e      	mov	r6, r1
 8023e8c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023e90:	f1ce 0110 	rsb	r1, lr, #16
 8023e94:	1a09      	subs	r1, r1, r0
 8023e96:	ea4a 0303 	orr.w	r3, sl, r3
 8023e9a:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 8023e9e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8023ea2:	4343      	muls	r3, r0
 8023ea4:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8023ea8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023eac:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023eb0:	fb01 3106 	mla	r1, r1, r6, r3
 8023eb4:	ea4a 0202 	orr.w	r2, sl, r2
 8023eb8:	fb09 1302 	mla	r3, r9, r2, r1
 8023ebc:	9a03      	ldr	r2, [sp, #12]
 8023ebe:	9802      	ldr	r0, [sp, #8]
 8023ec0:	8811      	ldrh	r1, [r2, #0]
 8023ec2:	9a01      	ldr	r2, [sp, #4]
 8023ec4:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8023ec8:	1a12      	subs	r2, r2, r0
 8023eca:	9801      	ldr	r0, [sp, #4]
 8023ecc:	eba0 0608 	sub.w	r6, r0, r8
 8023ed0:	b2b6      	uxth	r6, r6
 8023ed2:	b292      	uxth	r2, r2
 8023ed4:	4374      	muls	r4, r6
 8023ed6:	fb0c 4402 	mla	r4, ip, r2, r4
 8023eda:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 8023ede:	9a02      	ldr	r2, [sp, #8]
 8023ee0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023ee4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8023ee8:	fb02 4505 	mla	r5, r2, r5, r4
 8023eec:	ea4a 0b0b 	orr.w	fp, sl, fp
 8023ef0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8023ef4:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8023ef8:	fb08 5707 	mla	r7, r8, r7, r5
 8023efc:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8023f00:	120a      	asrs	r2, r1, #8
 8023f02:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8023f06:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8023f0a:	b2ff      	uxtb	r7, r7
 8023f0c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023f10:	10c8      	asrs	r0, r1, #3
 8023f12:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023f16:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8023f1a:	00c9      	lsls	r1, r1, #3
 8023f1c:	437a      	muls	r2, r7
 8023f1e:	ea43 0e0e 	orr.w	lr, r3, lr
 8023f22:	b2c9      	uxtb	r1, r1
 8023f24:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023f28:	fa1f f38e 	uxth.w	r3, lr
 8023f2c:	4378      	muls	r0, r7
 8023f2e:	434f      	muls	r7, r1
 8023f30:	1c51      	adds	r1, r2, #1
 8023f32:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8023f36:	121a      	asrs	r2, r3, #8
 8023f38:	f022 0207 	bic.w	r2, r2, #7
 8023f3c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8023f40:	1c41      	adds	r1, r0, #1
 8023f42:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8023f46:	10d9      	asrs	r1, r3, #3
 8023f48:	f021 0103 	bic.w	r1, r1, #3
 8023f4c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8023f50:	0212      	lsls	r2, r2, #8
 8023f52:	00c9      	lsls	r1, r1, #3
 8023f54:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023f58:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8023f5c:	430a      	orrs	r2, r1
 8023f5e:	1c79      	adds	r1, r7, #1
 8023f60:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8023f64:	00db      	lsls	r3, r3, #3
 8023f66:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8023f6a:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8023f6e:	4313      	orrs	r3, r2
 8023f70:	9a03      	ldr	r2, [sp, #12]
 8023f72:	8013      	strh	r3, [r2, #0]
 8023f74:	b005      	add	sp, #20
 8023f76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023f7a:	280f      	cmp	r0, #15
 8023f7c:	f63f af43 	bhi.w	8023e06 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8023f80:	4677      	mov	r7, lr
 8023f82:	4675      	mov	r5, lr
 8023f84:	4672      	mov	r2, lr
 8023f86:	46f3      	mov	fp, lr
 8023f88:	e763      	b.n	8023e52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 8023f8a:	bf00      	nop
 8023f8c:	0802d4b6 	.word	0x0802d4b6
 8023f90:	0802da86 	.word	0x0802da86
 8023f94:	0802d53a 	.word	0x0802d53a

08023f98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023f98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023f9c:	ed2d 8b08 	vpush	{d8-d11}
 8023fa0:	b093      	sub	sp, #76	; 0x4c
 8023fa2:	eeb0 aa40 	vmov.f32	s20, s0
 8023fa6:	9210      	str	r2, [sp, #64]	; 0x40
 8023fa8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8023faa:	910e      	str	r1, [sp, #56]	; 0x38
 8023fac:	9306      	str	r3, [sp, #24]
 8023fae:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8023fb2:	9011      	str	r0, [sp, #68]	; 0x44
 8023fb4:	6850      	ldr	r0, [r2, #4]
 8023fb6:	6812      	ldr	r2, [r2, #0]
 8023fb8:	fb00 1303 	mla	r3, r0, r3, r1
 8023fbc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023fc0:	9307      	str	r3, [sp, #28]
 8023fc2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023fc4:	681b      	ldr	r3, [r3, #0]
 8023fc6:	9308      	str	r3, [sp, #32]
 8023fc8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023fca:	685b      	ldr	r3, [r3, #4]
 8023fcc:	9309      	str	r3, [sp, #36]	; 0x24
 8023fce:	eef0 9a60 	vmov.f32	s19, s1
 8023fd2:	eeb0 9a41 	vmov.f32	s18, s2
 8023fd6:	eeb0 8a62 	vmov.f32	s16, s5
 8023fda:	eef0 8a43 	vmov.f32	s17, s6
 8023fde:	eef0 ba44 	vmov.f32	s23, s8
 8023fe2:	eeb0 ba64 	vmov.f32	s22, s9
 8023fe6:	eef0 aa45 	vmov.f32	s21, s10
 8023fea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023fec:	2b00      	cmp	r3, #0
 8023fee:	dc03      	bgt.n	8023ff8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8023ff0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023ff2:	2b00      	cmp	r3, #0
 8023ff4:	f340 83b4 	ble.w	8024760 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 8023ff8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023ffa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023ffe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024002:	1e48      	subs	r0, r1, #1
 8024004:	1e55      	subs	r5, r2, #1
 8024006:	9b06      	ldr	r3, [sp, #24]
 8024008:	2b00      	cmp	r3, #0
 802400a:	f340 8163 	ble.w	80242d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 802400e:	9e25      	ldr	r6, [sp, #148]	; 0x94
 8024010:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024012:	1436      	asrs	r6, r6, #16
 8024014:	ea4f 4323 	mov.w	r3, r3, asr #16
 8024018:	d406      	bmi.n	8024028 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802401a:	4286      	cmp	r6, r0
 802401c:	da04      	bge.n	8024028 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802401e:	2b00      	cmp	r3, #0
 8024020:	db02      	blt.n	8024028 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024022:	42ab      	cmp	r3, r5
 8024024:	f2c0 8157 	blt.w	80242d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8024028:	3601      	adds	r6, #1
 802402a:	f100 8144 	bmi.w	80242b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 802402e:	42b1      	cmp	r1, r6
 8024030:	f2c0 8141 	blt.w	80242b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8024034:	3301      	adds	r3, #1
 8024036:	f100 813e 	bmi.w	80242b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 802403a:	429a      	cmp	r2, r3
 802403c:	f2c0 813b 	blt.w	80242b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8024040:	9b06      	ldr	r3, [sp, #24]
 8024042:	9f07      	ldr	r7, [sp, #28]
 8024044:	930f      	str	r3, [sp, #60]	; 0x3c
 8024046:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802404a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802404c:	2b00      	cmp	r3, #0
 802404e:	f340 8164 	ble.w	802431a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 8024052:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024054:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8024056:	1418      	asrs	r0, r3, #16
 8024058:	9b25      	ldr	r3, [sp, #148]	; 0x94
 802405a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 802405e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024060:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8024064:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024066:	142d      	asrs	r5, r5, #16
 8024068:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 802406c:	f100 81ee 	bmi.w	802444c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8024070:	f102 3eff 	add.w	lr, r2, #4294967295
 8024074:	4575      	cmp	r5, lr
 8024076:	f280 81e9 	bge.w	802444c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 802407a:	2800      	cmp	r0, #0
 802407c:	f2c0 81e6 	blt.w	802444c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8024080:	f103 3eff 	add.w	lr, r3, #4294967295
 8024084:	4570      	cmp	r0, lr
 8024086:	f280 81e1 	bge.w	802444c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 802408a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802408c:	b212      	sxth	r2, r2
 802408e:	fb00 5002 	mla	r0, r0, r2, r5
 8024092:	fa1f fe81 	uxth.w	lr, r1
 8024096:	eb03 0a00 	add.w	sl, r3, r0
 802409a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 802409e:	f813 9000 	ldrb.w	r9, [r3, r0]
 80240a2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80240a6:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80240aa:	b29b      	uxth	r3, r3
 80240ac:	f1bc 0f00 	cmp.w	ip, #0
 80240b0:	f000 8179 	beq.w	80243a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 80240b4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80240b8:	940a      	str	r4, [sp, #40]	; 0x28
 80240ba:	eb0a 0b02 	add.w	fp, sl, r2
 80240be:	fa1f fa8c 	uxth.w	sl, ip
 80240c2:	fb0a fe0e 	mul.w	lr, sl, lr
 80240c6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80240ca:	fa1f fa8a 	uxth.w	sl, sl
 80240ce:	eba5 050e 	sub.w	r5, r5, lr
 80240d2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80240d6:	940b      	str	r4, [sp, #44]	; 0x2c
 80240d8:	eba3 030a 	sub.w	r3, r3, sl
 80240dc:	b2ad      	uxth	r5, r5
 80240de:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80240e0:	b29b      	uxth	r3, r3
 80240e2:	fb08 f505 	mul.w	r5, r8, r5
 80240e6:	fb09 5303 	mla	r3, r9, r3, r5
 80240ea:	fb0a 3304 	mla	r3, sl, r4, r3
 80240ee:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80240f0:	fb0e 3304 	mla	r3, lr, r4, r3
 80240f4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80240f8:	2b00      	cmp	r3, #0
 80240fa:	f000 80cf 	beq.w	802429c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 80240fe:	9c08      	ldr	r4, [sp, #32]
 8024100:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8024104:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8024108:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 802410c:	f000 8150 	beq.w	80243b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 8024110:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8024114:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8024118:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802411c:	fb09 f000 	mul.w	r0, r9, r0
 8024120:	fb0a fe0e 	mul.w	lr, sl, lr
 8024124:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8024128:	f100 0b20 	add.w	fp, r0, #32
 802412c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8024130:	44ce      	add	lr, r9
 8024132:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8024136:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802413a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802413e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8024142:	ea4e 0909 	orr.w	r9, lr, r9
 8024146:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802414a:	8868      	ldrh	r0, [r5, #2]
 802414c:	d019      	beq.n	8024182 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802414e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8024152:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8024156:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802415a:	fb08 f800 	mul.w	r8, r8, r0
 802415e:	fb0a fe0e 	mul.w	lr, sl, lr
 8024162:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8024166:	f108 0b20 	add.w	fp, r8, #32
 802416a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802416e:	4486      	add	lr, r0
 8024170:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8024174:	0a00      	lsrs	r0, r0, #8
 8024176:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802417a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802417e:	ea4e 0000 	orr.w	r0, lr, r0
 8024182:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8024186:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802418a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802418e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8024192:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024196:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802419a:	ea4e 0909 	orr.w	r9, lr, r9
 802419e:	ea4a 0000 	orr.w	r0, sl, r0
 80241a2:	f1bc 0f00 	cmp.w	ip, #0
 80241a6:	f000 8105 	beq.w	80243b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 80241aa:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80241ae:	3a01      	subs	r2, #1
 80241b0:	0052      	lsls	r2, r2, #1
 80241b2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80241b4:	3202      	adds	r2, #2
 80241b6:	2cff      	cmp	r4, #255	; 0xff
 80241b8:	eb05 0e02 	add.w	lr, r5, r2
 80241bc:	5aaa      	ldrh	r2, [r5, r2]
 80241be:	d018      	beq.n	80241f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 80241c0:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80241c4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80241c8:	fb04 fa02 	mul.w	sl, r4, r2
 80241cc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80241d0:	fb08 f805 	mul.w	r8, r8, r5
 80241d4:	f10a 0520 	add.w	r5, sl, #32
 80241d8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80241dc:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80241e0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80241e4:	4442      	add	r2, r8
 80241e6:	0a2d      	lsrs	r5, r5, #8
 80241e8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80241ec:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80241f0:	432a      	orrs	r2, r5
 80241f2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80241f4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80241f8:	2cff      	cmp	r4, #255	; 0xff
 80241fa:	d01a      	beq.n	8024232 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80241fc:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8024200:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8024204:	fb04 fa05 	mul.w	sl, r4, r5
 8024208:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802420c:	fb08 f80e 	mul.w	r8, r8, lr
 8024210:	f10a 0e20 	add.w	lr, sl, #32
 8024214:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8024218:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 802421c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024220:	4445      	add	r5, r8
 8024222:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024226:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802422a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802422e:	ea45 050e 	orr.w	r5, r5, lr
 8024232:	fb1c fe01 	smulbb	lr, ip, r1
 8024236:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802423a:	f1cc 0810 	rsb	r8, ip, #16
 802423e:	eba8 0801 	sub.w	r8, r8, r1
 8024242:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8024246:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802424a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802424e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8024252:	4341      	muls	r1, r0
 8024254:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024258:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802425c:	ea4a 0202 	orr.w	r2, sl, r2
 8024260:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8024264:	fb09 1108 	mla	r1, r9, r8, r1
 8024268:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802426c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8024270:	fb0c 1102 	mla	r1, ip, r2, r1
 8024274:	ea4b 0505 	orr.w	r5, fp, r5
 8024278:	fb0e 1e05 	mla	lr, lr, r5, r1
 802427c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8024280:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8024284:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024288:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802428c:	ea42 0e0e 	orr.w	lr, r2, lr
 8024290:	fa1f f28e 	uxth.w	r2, lr
 8024294:	2bff      	cmp	r3, #255	; 0xff
 8024296:	f040 80a1 	bne.w	80243dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x444>
 802429a:	803a      	strh	r2, [r7, #0]
 802429c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 802429e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80242a0:	4413      	add	r3, r2
 80242a2:	9325      	str	r3, [sp, #148]	; 0x94
 80242a4:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80242a6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80242a8:	441a      	add	r2, r3
 80242aa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80242ac:	9226      	str	r2, [sp, #152]	; 0x98
 80242ae:	3b01      	subs	r3, #1
 80242b0:	3702      	adds	r7, #2
 80242b2:	930f      	str	r3, [sp, #60]	; 0x3c
 80242b4:	e6c9      	b.n	802404a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80242b6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80242b8:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 80242ba:	9c26      	ldr	r4, [sp, #152]	; 0x98
 80242bc:	4433      	add	r3, r6
 80242be:	9325      	str	r3, [sp, #148]	; 0x94
 80242c0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80242c2:	441c      	add	r4, r3
 80242c4:	9b06      	ldr	r3, [sp, #24]
 80242c6:	9426      	str	r4, [sp, #152]	; 0x98
 80242c8:	3b01      	subs	r3, #1
 80242ca:	9306      	str	r3, [sp, #24]
 80242cc:	9b07      	ldr	r3, [sp, #28]
 80242ce:	3302      	adds	r3, #2
 80242d0:	9307      	str	r3, [sp, #28]
 80242d2:	e698      	b.n	8024006 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80242d4:	d028      	beq.n	8024328 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80242d6:	9b06      	ldr	r3, [sp, #24]
 80242d8:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80242da:	9d25      	ldr	r5, [sp, #148]	; 0x94
 80242dc:	3b01      	subs	r3, #1
 80242de:	fb00 5003 	mla	r0, r0, r3, r5
 80242e2:	1400      	asrs	r0, r0, #16
 80242e4:	f53f aeac 	bmi.w	8024040 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80242e8:	3901      	subs	r1, #1
 80242ea:	4288      	cmp	r0, r1
 80242ec:	f6bf aea8 	bge.w	8024040 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80242f0:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80242f2:	9826      	ldr	r0, [sp, #152]	; 0x98
 80242f4:	fb01 0303 	mla	r3, r1, r3, r0
 80242f8:	141b      	asrs	r3, r3, #16
 80242fa:	f53f aea1 	bmi.w	8024040 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80242fe:	3a01      	subs	r2, #1
 8024300:	4293      	cmp	r3, r2
 8024302:	f6bf ae9d 	bge.w	8024040 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8024306:	9b06      	ldr	r3, [sp, #24]
 8024308:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802430c:	930f      	str	r3, [sp, #60]	; 0x3c
 802430e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8024312:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8024314:	2b00      	cmp	r3, #0
 8024316:	f300 80b6 	bgt.w	8024486 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 802431a:	9b06      	ldr	r3, [sp, #24]
 802431c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8024320:	9b07      	ldr	r3, [sp, #28]
 8024322:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8024326:	9307      	str	r3, [sp, #28]
 8024328:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802432a:	2b00      	cmp	r3, #0
 802432c:	f340 8218 	ble.w	8024760 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 8024330:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8024334:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024338:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802433c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802433e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8024342:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8024346:	ee29 7aa7 	vmul.f32	s14, s19, s15
 802434a:	eef0 6a48 	vmov.f32	s13, s16
 802434e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8024352:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024356:	ee37 8a48 	vsub.f32	s16, s14, s16
 802435a:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 802435e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8024362:	eef0 6a68 	vmov.f32	s13, s17
 8024366:	ee77 8ae8 	vsub.f32	s17, s15, s17
 802436a:	ee18 2a10 	vmov	r2, s16
 802436e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8024372:	fb92 f3f3 	sdiv	r3, r2, r3
 8024376:	ee18 2a90 	vmov	r2, s17
 802437a:	9327      	str	r3, [sp, #156]	; 0x9c
 802437c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802437e:	fb92 f3f3 	sdiv	r3, r2, r3
 8024382:	9328      	str	r3, [sp, #160]	; 0xa0
 8024384:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024386:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8024388:	3b01      	subs	r3, #1
 802438a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802438e:	930e      	str	r3, [sp, #56]	; 0x38
 8024390:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024392:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 8024396:	bf08      	it	eq
 8024398:	4613      	moveq	r3, r2
 802439a:	9306      	str	r3, [sp, #24]
 802439c:	eef0 8a67 	vmov.f32	s17, s15
 80243a0:	eeb0 8a47 	vmov.f32	s16, s14
 80243a4:	e621      	b.n	8023fea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80243a6:	fb08 f505 	mul.w	r5, r8, r5
 80243aa:	fb09 5303 	mla	r3, r9, r3, r5
 80243ae:	e6a1      	b.n	80240f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80243b0:	4681      	mov	r9, r0
 80243b2:	e6c8      	b.n	8024146 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80243b4:	f1c1 0210 	rsb	r2, r1, #16
 80243b8:	4341      	muls	r1, r0
 80243ba:	fb09 1902 	mla	r9, r9, r2, r1
 80243be:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80243c2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80243c6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80243ca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80243ce:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80243d2:	ea42 0909 	orr.w	r9, r2, r9
 80243d6:	fa1f f289 	uxth.w	r2, r9
 80243da:	e75b      	b.n	8024294 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80243dc:	f8b7 c000 	ldrh.w	ip, [r7]
 80243e0:	43db      	mvns	r3, r3
 80243e2:	ea4f 202c 	mov.w	r0, ip, asr #8
 80243e6:	fa5f fe83 	uxtb.w	lr, r3
 80243ea:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80243ee:	fb00 f00e 	mul.w	r0, r0, lr
 80243f2:	1c41      	adds	r1, r0, #1
 80243f4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80243f8:	1211      	asrs	r1, r2, #8
 80243fa:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80243fe:	f021 0107 	bic.w	r1, r1, #7
 8024402:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8024406:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802440a:	48d8      	ldr	r0, [pc, #864]	; (802476c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 802440c:	fb05 f50e 	mul.w	r5, r5, lr
 8024410:	b2c9      	uxtb	r1, r1
 8024412:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8024416:	1c69      	adds	r1, r5, #1
 8024418:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 802441c:	10d1      	asrs	r1, r2, #3
 802441e:	f021 0103 	bic.w	r1, r1, #3
 8024422:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8024426:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802442a:	b2db      	uxtb	r3, r3
 802442c:	00c9      	lsls	r1, r1, #3
 802442e:	fb03 f30e 	mul.w	r3, r3, lr
 8024432:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024436:	4301      	orrs	r1, r0
 8024438:	1c58      	adds	r0, r3, #1
 802443a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802443e:	00d2      	lsls	r2, r2, #3
 8024440:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8024444:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024448:	430a      	orrs	r2, r1
 802444a:	e726      	b.n	802429a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 802444c:	f115 0e01 	adds.w	lr, r5, #1
 8024450:	f53f af24 	bmi.w	802429c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8024454:	4572      	cmp	r2, lr
 8024456:	f6ff af21 	blt.w	802429c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 802445a:	f110 0e01 	adds.w	lr, r0, #1
 802445e:	f53f af1d 	bmi.w	802429c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8024462:	4573      	cmp	r3, lr
 8024464:	f6ff af1a 	blt.w	802429c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8024468:	b21b      	sxth	r3, r3
 802446a:	b212      	sxth	r2, r2
 802446c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8024470:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8024474:	9301      	str	r3, [sp, #4]
 8024476:	9200      	str	r2, [sp, #0]
 8024478:	4639      	mov	r1, r7
 802447a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 802447e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8024480:	f7ff fbf4 	bl	8023c6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8024484:	e70a      	b.n	802429c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8024486:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8024488:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802448c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802448e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8024492:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024494:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024498:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802449a:	141f      	asrs	r7, r3, #16
 802449c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 802449e:	141b      	asrs	r3, r3, #16
 80244a0:	fb01 3707 	mla	r7, r1, r7, r3
 80244a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80244a6:	fa1f fc82 	uxth.w	ip, r2
 80244aa:	eb03 0a07 	add.w	sl, r3, r7
 80244ae:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80244b2:	f813 9007 	ldrb.w	r9, [r3, r7]
 80244b6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80244ba:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80244be:	b29b      	uxth	r3, r3
 80244c0:	2d00      	cmp	r5, #0
 80244c2:	f000 80fe 	beq.w	80246c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72a>
 80244c6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80244ca:	940c      	str	r4, [sp, #48]	; 0x30
 80244cc:	eb0a 0b01 	add.w	fp, sl, r1
 80244d0:	fa1f fa85 	uxth.w	sl, r5
 80244d4:	fb0a fc0c 	mul.w	ip, sl, ip
 80244d8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80244dc:	fa1f fa8a 	uxth.w	sl, sl
 80244e0:	eba0 000c 	sub.w	r0, r0, ip
 80244e4:	eba3 030a 	sub.w	r3, r3, sl
 80244e8:	b280      	uxth	r0, r0
 80244ea:	fb08 f000 	mul.w	r0, r8, r0
 80244ee:	b29b      	uxth	r3, r3
 80244f0:	fb09 0303 	mla	r3, r9, r3, r0
 80244f4:	980c      	ldr	r0, [sp, #48]	; 0x30
 80244f6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80244fa:	940d      	str	r4, [sp, #52]	; 0x34
 80244fc:	fb0a 3300 	mla	r3, sl, r0, r3
 8024500:	fb0c 3304 	mla	r3, ip, r4, r3
 8024504:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024508:	2b00      	cmp	r3, #0
 802450a:	f000 80cc 	beq.w	80246a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 802450e:	9808      	ldr	r0, [sp, #32]
 8024510:	9c08      	ldr	r4, [sp, #32]
 8024512:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8024516:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802451a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802451e:	f000 80d5 	beq.w	80246cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8024522:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8024526:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802452a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802452e:	fb09 f707 	mul.w	r7, r9, r7
 8024532:	fb0a fc0c 	mul.w	ip, sl, ip
 8024536:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802453a:	f107 0b20 	add.w	fp, r7, #32
 802453e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8024542:	44cc      	add	ip, r9
 8024544:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8024548:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802454c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8024550:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8024554:	ea4c 0909 	orr.w	r9, ip, r9
 8024558:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802455c:	8847      	ldrh	r7, [r0, #2]
 802455e:	d019      	beq.n	8024594 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8024560:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8024564:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8024568:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802456c:	fb08 f807 	mul.w	r8, r8, r7
 8024570:	fb0a fc0c 	mul.w	ip, sl, ip
 8024574:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8024578:	f108 0b20 	add.w	fp, r8, #32
 802457c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8024580:	44bc      	add	ip, r7
 8024582:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8024586:	0a3f      	lsrs	r7, r7, #8
 8024588:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802458c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8024590:	ea4c 0707 	orr.w	r7, ip, r7
 8024594:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8024598:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 802459c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80245a0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80245a4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80245a8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80245ac:	ea4c 0909 	orr.w	r9, ip, r9
 80245b0:	ea4a 0707 	orr.w	r7, sl, r7
 80245b4:	2d00      	cmp	r5, #0
 80245b6:	f000 808b 	beq.w	80246d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x738>
 80245ba:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80245be:	3901      	subs	r1, #1
 80245c0:	0049      	lsls	r1, r1, #1
 80245c2:	3102      	adds	r1, #2
 80245c4:	eb00 0c01 	add.w	ip, r0, r1
 80245c8:	5a41      	ldrh	r1, [r0, r1]
 80245ca:	980c      	ldr	r0, [sp, #48]	; 0x30
 80245cc:	28ff      	cmp	r0, #255	; 0xff
 80245ce:	d019      	beq.n	8024604 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 80245d0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80245d2:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80245d6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80245da:	fb04 fa01 	mul.w	sl, r4, r1
 80245de:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80245e2:	fb08 f800 	mul.w	r8, r8, r0
 80245e6:	f10a 0020 	add.w	r0, sl, #32
 80245ea:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80245ee:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80245f2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80245f6:	4441      	add	r1, r8
 80245f8:	0a00      	lsrs	r0, r0, #8
 80245fa:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80245fe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024602:	4301      	orrs	r1, r0
 8024604:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024606:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802460a:	2cff      	cmp	r4, #255	; 0xff
 802460c:	d01a      	beq.n	8024644 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 802460e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8024612:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024616:	fb04 fa00 	mul.w	sl, r4, r0
 802461a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802461e:	fb08 f80c 	mul.w	r8, r8, ip
 8024622:	f10a 0c20 	add.w	ip, sl, #32
 8024626:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802462a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802462e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024632:	4440      	add	r0, r8
 8024634:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024638:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802463c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024640:	ea40 000c 	orr.w	r0, r0, ip
 8024644:	fb15 fc02 	smulbb	ip, r5, r2
 8024648:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802464c:	f1c5 0810 	rsb	r8, r5, #16
 8024650:	eba8 0802 	sub.w	r8, r8, r2
 8024654:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8024658:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 802465c:	437a      	muls	r2, r7
 802465e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8024662:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8024666:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802466a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802466e:	fb09 2208 	mla	r2, r9, r8, r2
 8024672:	ea4a 0101 	orr.w	r1, sl, r1
 8024676:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802467a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802467e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024682:	fb05 2201 	mla	r2, r5, r1, r2
 8024686:	ea4b 0000 	orr.w	r0, fp, r0
 802468a:	fb0c 2200 	mla	r2, ip, r0, r2
 802468e:	0d57      	lsrs	r7, r2, #21
 8024690:	0952      	lsrs	r2, r2, #5
 8024692:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8024696:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802469a:	433a      	orrs	r2, r7
 802469c:	2bff      	cmp	r3, #255	; 0xff
 802469e:	b292      	uxth	r2, r2
 80246a0:	d127      	bne.n	80246f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80246a2:	f8ae 2000 	strh.w	r2, [lr]
 80246a6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80246a8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80246aa:	4413      	add	r3, r2
 80246ac:	9325      	str	r3, [sp, #148]	; 0x94
 80246ae:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80246b0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80246b2:	441a      	add	r2, r3
 80246b4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80246b6:	9226      	str	r2, [sp, #152]	; 0x98
 80246b8:	3b01      	subs	r3, #1
 80246ba:	f10e 0e02 	add.w	lr, lr, #2
 80246be:	930f      	str	r3, [sp, #60]	; 0x3c
 80246c0:	e627      	b.n	8024312 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80246c2:	fb08 f000 	mul.w	r0, r8, r0
 80246c6:	fb09 0303 	mla	r3, r9, r3, r0
 80246ca:	e71b      	b.n	8024504 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 80246cc:	46b9      	mov	r9, r7
 80246ce:	e743      	b.n	8024558 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 80246d0:	f1c2 0110 	rsb	r1, r2, #16
 80246d4:	437a      	muls	r2, r7
 80246d6:	fb09 2901 	mla	r9, r9, r1, r2
 80246da:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80246de:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80246e2:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80246e6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80246ea:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80246ee:	4302      	orrs	r2, r0
 80246f0:	e7d4      	b.n	802469c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 80246f2:	f8be 7000 	ldrh.w	r7, [lr]
 80246f6:	4c1d      	ldr	r4, [pc, #116]	; (802476c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 80246f8:	43db      	mvns	r3, r3
 80246fa:	1238      	asrs	r0, r7, #8
 80246fc:	fa5f fc83 	uxtb.w	ip, r3
 8024700:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024704:	10fd      	asrs	r5, r7, #3
 8024706:	fb00 f00c 	mul.w	r0, r0, ip
 802470a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802470e:	fb05 f10c 	mul.w	r1, r5, ip
 8024712:	1c45      	adds	r5, r0, #1
 8024714:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8024718:	1215      	asrs	r5, r2, #8
 802471a:	f025 0507 	bic.w	r5, r5, #7
 802471e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8024722:	1c4d      	adds	r5, r1, #1
 8024724:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8024728:	10d1      	asrs	r1, r2, #3
 802472a:	f021 0103 	bic.w	r1, r1, #3
 802472e:	00fb      	lsls	r3, r7, #3
 8024730:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8024734:	b2db      	uxtb	r3, r3
 8024736:	b2c0      	uxtb	r0, r0
 8024738:	00c9      	lsls	r1, r1, #3
 802473a:	fb03 f30c 	mul.w	r3, r3, ip
 802473e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024742:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8024746:	4308      	orrs	r0, r1
 8024748:	1c59      	adds	r1, r3, #1
 802474a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802474e:	00d2      	lsls	r2, r2, #3
 8024750:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024754:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8024758:	4318      	orrs	r0, r3
 802475a:	f8ae 0000 	strh.w	r0, [lr]
 802475e:	e7a2      	b.n	80246a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 8024760:	b013      	add	sp, #76	; 0x4c
 8024762:	ecbd 8b08 	vpop	{d8-d11}
 8024766:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802476a:	bf00      	nop
 802476c:	fffff800 	.word	0xfffff800

08024770 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8024770:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024774:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8024778:	fb0c 4e03 	mla	lr, ip, r3, r4
 802477c:	f1bc 0f00 	cmp.w	ip, #0
 8024780:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8024784:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8024788:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 802478c:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8024790:	8808      	ldrh	r0, [r1, #0]
 8024792:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8024796:	db2f      	blt.n	80247f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8024798:	45e2      	cmp	sl, ip
 802479a:	dd2d      	ble.n	80247f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 802479c:	2c00      	cmp	r4, #0
 802479e:	db29      	blt.n	80247f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 80247a0:	42a3      	cmp	r3, r4
 80247a2:	dd27      	ble.n	80247f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 80247a4:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 80247a8:	1c62      	adds	r2, r4, #1
 80247aa:	d428      	bmi.n	80247fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 80247ac:	4293      	cmp	r3, r2
 80247ae:	dd26      	ble.n	80247fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 80247b0:	b32f      	cbz	r7, 80247fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 80247b2:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 80247b6:	f11c 0c01 	adds.w	ip, ip, #1
 80247ba:	d424      	bmi.n	8024806 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 80247bc:	45e2      	cmp	sl, ip
 80247be:	dd22      	ble.n	8024806 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 80247c0:	2e00      	cmp	r6, #0
 80247c2:	f000 809d 	beq.w	8024900 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x190>
 80247c6:	2c00      	cmp	r4, #0
 80247c8:	db1b      	blt.n	8024802 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 80247ca:	42a3      	cmp	r3, r4
 80247cc:	dd19      	ble.n	8024802 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 80247ce:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 80247d2:	3401      	adds	r4, #1
 80247d4:	d41a      	bmi.n	802480c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 80247d6:	42a3      	cmp	r3, r4
 80247d8:	dd18      	ble.n	802480c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 80247da:	b1cf      	cbz	r7, 8024810 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 80247dc:	3301      	adds	r3, #1
 80247de:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 80247e2:	2f0f      	cmp	r7, #15
 80247e4:	d915      	bls.n	8024812 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 80247e6:	4b49      	ldr	r3, [pc, #292]	; (802490c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 80247e8:	4a49      	ldr	r2, [pc, #292]	; (8024910 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 80247ea:	484a      	ldr	r0, [pc, #296]	; (8024914 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 80247ec:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 80247f0:	f002 ffc6 	bl	8027780 <__assert_func>
 80247f4:	4681      	mov	r9, r0
 80247f6:	e7d7      	b.n	80247a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 80247f8:	4686      	mov	lr, r0
 80247fa:	4681      	mov	r9, r0
 80247fc:	e7db      	b.n	80247b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 80247fe:	4686      	mov	lr, r0
 8024800:	e7d9      	b.n	80247b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8024802:	4684      	mov	ip, r0
 8024804:	e7e5      	b.n	80247d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 8024806:	4603      	mov	r3, r0
 8024808:	4684      	mov	ip, r0
 802480a:	e7ea      	b.n	80247e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 802480c:	4603      	mov	r3, r0
 802480e:	e7e8      	b.n	80247e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8024810:	4603      	mov	r3, r0
 8024812:	2e0f      	cmp	r6, #15
 8024814:	d8e7      	bhi.n	80247e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8024816:	ea4f 4409 	mov.w	r4, r9, lsl #16
 802481a:	fb17 f806 	smulbb	r8, r7, r6
 802481e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8024822:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8024826:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802482a:	ea4f 08e8 	mov.w	r8, r8, asr #3
 802482e:	ea44 0909 	orr.w	r9, r4, r9
 8024832:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024836:	f1c6 0410 	rsb	r4, r6, #16
 802483a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802483e:	1be4      	subs	r4, r4, r7
 8024840:	041a      	lsls	r2, r3, #16
 8024842:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8024846:	ea4a 0e0e 	orr.w	lr, sl, lr
 802484a:	fb07 fe0e 	mul.w	lr, r7, lr
 802484e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024852:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8024856:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802485a:	fb04 e409 	mla	r4, r4, r9, lr
 802485e:	4313      	orrs	r3, r2
 8024860:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8024864:	fb08 4303 	mla	r3, r8, r3, r4
 8024868:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802486c:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 8024870:	4322      	orrs	r2, r4
 8024872:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8024876:	fb06 3202 	mla	r2, r6, r2, r3
 802487a:	0d53      	lsrs	r3, r2, #21
 802487c:	0952      	lsrs	r2, r2, #5
 802487e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024882:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024886:	431a      	orrs	r2, r3
 8024888:	b293      	uxth	r3, r2
 802488a:	b2af      	uxth	r7, r5
 802488c:	1202      	asrs	r2, r0, #8
 802488e:	43ed      	mvns	r5, r5
 8024890:	b2ed      	uxtb	r5, r5
 8024892:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8024896:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802489a:	fb12 f205 	smulbb	r2, r2, r5
 802489e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80248a2:	fb0c 2c07 	mla	ip, ip, r7, r2
 80248a6:	00dc      	lsls	r4, r3, #3
 80248a8:	10da      	asrs	r2, r3, #3
 80248aa:	10c6      	asrs	r6, r0, #3
 80248ac:	00c3      	lsls	r3, r0, #3
 80248ae:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80248b2:	b2db      	uxtb	r3, r3
 80248b4:	fb16 f605 	smulbb	r6, r6, r5
 80248b8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80248bc:	b2e4      	uxtb	r4, r4
 80248be:	fb13 f305 	smulbb	r3, r3, r5
 80248c2:	fa1f fc8c 	uxth.w	ip, ip
 80248c6:	fb02 6207 	mla	r2, r2, r7, r6
 80248ca:	fb04 3307 	mla	r3, r4, r7, r3
 80248ce:	b296      	uxth	r6, r2
 80248d0:	b29a      	uxth	r2, r3
 80248d2:	f10c 0301 	add.w	r3, ip, #1
 80248d6:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80248da:	1c53      	adds	r3, r2, #1
 80248dc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80248e0:	1c72      	adds	r2, r6, #1
 80248e2:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 80248e6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80248ea:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80248ee:	0952      	lsrs	r2, r2, #5
 80248f0:	ea43 030c 	orr.w	r3, r3, ip
 80248f4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80248f8:	4313      	orrs	r3, r2
 80248fa:	800b      	strh	r3, [r1, #0]
 80248fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024900:	2f0f      	cmp	r7, #15
 8024902:	f63f af70 	bhi.w	80247e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8024906:	4603      	mov	r3, r0
 8024908:	4684      	mov	ip, r0
 802490a:	e784      	b.n	8024816 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 802490c:	0802d4b6 	.word	0x0802d4b6
 8024910:	0802db2f 	.word	0x0802db2f
 8024914:	0802d53a 	.word	0x0802d53a

08024918 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024918:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802491c:	ed2d 8b08 	vpush	{d8-d11}
 8024920:	b093      	sub	sp, #76	; 0x4c
 8024922:	461d      	mov	r5, r3
 8024924:	9210      	str	r2, [sp, #64]	; 0x40
 8024926:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024928:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 802492c:	920b      	str	r2, [sp, #44]	; 0x2c
 802492e:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 8024932:	910a      	str	r1, [sp, #40]	; 0x28
 8024934:	6859      	ldr	r1, [r3, #4]
 8024936:	681b      	ldr	r3, [r3, #0]
 8024938:	9011      	str	r0, [sp, #68]	; 0x44
 802493a:	fb01 2707 	mla	r7, r1, r7, r2
 802493e:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8024942:	9307      	str	r3, [sp, #28]
 8024944:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024946:	681b      	ldr	r3, [r3, #0]
 8024948:	9309      	str	r3, [sp, #36]	; 0x24
 802494a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802494c:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8024950:	43db      	mvns	r3, r3
 8024952:	b2db      	uxtb	r3, r3
 8024954:	eeb0 aa40 	vmov.f32	s20, s0
 8024958:	eef0 9a60 	vmov.f32	s19, s1
 802495c:	eeb0 9a41 	vmov.f32	s18, s2
 8024960:	eeb0 8a62 	vmov.f32	s16, s5
 8024964:	eef0 8a43 	vmov.f32	s17, s6
 8024968:	eef0 ba44 	vmov.f32	s23, s8
 802496c:	eeb0 ba64 	vmov.f32	s22, s9
 8024970:	eef0 aa45 	vmov.f32	s21, s10
 8024974:	9308      	str	r3, [sp, #32]
 8024976:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024978:	2b00      	cmp	r3, #0
 802497a:	dc03      	bgt.n	8024984 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802497c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802497e:	2b00      	cmp	r3, #0
 8024980:	f340 8203 	ble.w	8024d8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8024984:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024986:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802498a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802498e:	1e48      	subs	r0, r1, #1
 8024990:	f102 3cff 	add.w	ip, r2, #4294967295
 8024994:	2d00      	cmp	r5, #0
 8024996:	f340 80da 	ble.w	8024b4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 802499a:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802499e:	ea4f 4326 	mov.w	r3, r6, asr #16
 80249a2:	d406      	bmi.n	80249b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80249a4:	4586      	cmp	lr, r0
 80249a6:	da04      	bge.n	80249b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80249a8:	2b00      	cmp	r3, #0
 80249aa:	db02      	blt.n	80249b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80249ac:	4563      	cmp	r3, ip
 80249ae:	f2c0 80cf 	blt.w	8024b50 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80249b2:	f11e 0e01 	adds.w	lr, lr, #1
 80249b6:	f100 80c1 	bmi.w	8024b3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80249ba:	4571      	cmp	r1, lr
 80249bc:	f2c0 80be 	blt.w	8024b3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80249c0:	3301      	adds	r3, #1
 80249c2:	f100 80bb 	bmi.w	8024b3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80249c6:	429a      	cmp	r2, r3
 80249c8:	f2c0 80b8 	blt.w	8024b3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80249cc:	f8dd 801c 	ldr.w	r8, [sp, #28]
 80249d0:	46a9      	mov	r9, r5
 80249d2:	f1b9 0f00 	cmp.w	r9, #0
 80249d6:	f340 80d8 	ble.w	8024b8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 80249da:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80249dc:	1421      	asrs	r1, r4, #16
 80249de:	ea4f 4026 	mov.w	r0, r6, asr #16
 80249e2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80249e6:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80249ea:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80249ee:	f100 8111 	bmi.w	8024c14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80249f2:	f10e 3aff 	add.w	sl, lr, #4294967295
 80249f6:	4551      	cmp	r1, sl
 80249f8:	f280 810c 	bge.w	8024c14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80249fc:	2800      	cmp	r0, #0
 80249fe:	f2c0 8109 	blt.w	8024c14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8024a02:	f103 3aff 	add.w	sl, r3, #4294967295
 8024a06:	4550      	cmp	r0, sl
 8024a08:	f280 8104 	bge.w	8024c14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8024a0c:	fa0f f38e 	sxth.w	r3, lr
 8024a10:	fb00 1103 	mla	r1, r0, r3, r1
 8024a14:	9809      	ldr	r0, [sp, #36]	; 0x24
 8024a16:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8024a1a:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8024a1e:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8024a22:	f1bc 0f00 	cmp.w	ip, #0
 8024a26:	d007      	beq.n	8024a38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 8024a28:	005b      	lsls	r3, r3, #1
 8024a2a:	eb0a 0003 	add.w	r0, sl, r3
 8024a2e:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8024a32:	930c      	str	r3, [sp, #48]	; 0x30
 8024a34:	8843      	ldrh	r3, [r0, #2]
 8024a36:	930d      	str	r3, [sp, #52]	; 0x34
 8024a38:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8024a3c:	fb12 f30c 	smulbb	r3, r2, ip
 8024a40:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8024a44:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8024a48:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024a4c:	10db      	asrs	r3, r3, #3
 8024a4e:	ea40 000e 	orr.w	r0, r0, lr
 8024a52:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024a56:	f1cc 0e10 	rsb	lr, ip, #16
 8024a5a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8024a5e:	ebae 0e02 	sub.w	lr, lr, r2
 8024a62:	ea4a 0101 	orr.w	r1, sl, r1
 8024a66:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024a6a:	4351      	muls	r1, r2
 8024a6c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8024a6e:	9f08      	ldr	r7, [sp, #32]
 8024a70:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8024a74:	fb0e 1e00 	mla	lr, lr, r0, r1
 8024a78:	0410      	lsls	r0, r2, #16
 8024a7a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024a7e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024a82:	4310      	orrs	r0, r2
 8024a84:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024a86:	990c      	ldr	r1, [sp, #48]	; 0x30
 8024a88:	0412      	lsls	r2, r2, #16
 8024a8a:	fb03 e000 	mla	r0, r3, r0, lr
 8024a8e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024a92:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8024a96:	ea42 020e 	orr.w	r2, r2, lr
 8024a9a:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8024a9e:	fb03 0302 	mla	r3, r3, r2, r0
 8024aa2:	0d5a      	lsrs	r2, r3, #21
 8024aa4:	095b      	lsrs	r3, r3, #5
 8024aa6:	f8b8 0000 	ldrh.w	r0, [r8]
 8024aaa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024aae:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8024ab2:	4313      	orrs	r3, r2
 8024ab4:	b29b      	uxth	r3, r3
 8024ab6:	1201      	asrs	r1, r0, #8
 8024ab8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8024abc:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8024ac0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024ac4:	fb11 f107 	smulbb	r1, r1, r7
 8024ac8:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8024acc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8024ad0:	00c0      	lsls	r0, r0, #3
 8024ad2:	fb0c 1c02 	mla	ip, ip, r2, r1
 8024ad6:	b2c0      	uxtb	r0, r0
 8024ad8:	10d9      	asrs	r1, r3, #3
 8024ada:	00db      	lsls	r3, r3, #3
 8024adc:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8024ae0:	b2db      	uxtb	r3, r3
 8024ae2:	fb10 f007 	smulbb	r0, r0, r7
 8024ae6:	fa1f fc8c 	uxth.w	ip, ip
 8024aea:	fb03 0302 	mla	r3, r3, r2, r0
 8024aee:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024af2:	fb1e fe07 	smulbb	lr, lr, r7
 8024af6:	fb01 e102 	mla	r1, r1, r2, lr
 8024afa:	b29a      	uxth	r2, r3
 8024afc:	f10c 0301 	add.w	r3, ip, #1
 8024b00:	b289      	uxth	r1, r1
 8024b02:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8024b06:	1c53      	adds	r3, r2, #1
 8024b08:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024b0c:	1c4a      	adds	r2, r1, #1
 8024b0e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024b12:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8024b16:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024b1a:	0949      	lsrs	r1, r1, #5
 8024b1c:	ea43 030c 	orr.w	r3, r3, ip
 8024b20:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024b24:	430b      	orrs	r3, r1
 8024b26:	f8a8 3000 	strh.w	r3, [r8]
 8024b2a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024b2c:	441c      	add	r4, r3
 8024b2e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024b30:	f108 0802 	add.w	r8, r8, #2
 8024b34:	441e      	add	r6, r3
 8024b36:	f109 39ff 	add.w	r9, r9, #4294967295
 8024b3a:	e74a      	b.n	80249d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 8024b3c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024b3e:	441c      	add	r4, r3
 8024b40:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024b42:	441e      	add	r6, r3
 8024b44:	9b07      	ldr	r3, [sp, #28]
 8024b46:	3302      	adds	r3, #2
 8024b48:	3d01      	subs	r5, #1
 8024b4a:	9307      	str	r3, [sp, #28]
 8024b4c:	e722      	b.n	8024994 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024b4e:	d022      	beq.n	8024b96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8024b50:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8024b52:	1e6b      	subs	r3, r5, #1
 8024b54:	fb00 4003 	mla	r0, r0, r3, r4
 8024b58:	1400      	asrs	r0, r0, #16
 8024b5a:	f53f af37 	bmi.w	80249cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8024b5e:	3901      	subs	r1, #1
 8024b60:	4288      	cmp	r0, r1
 8024b62:	f6bf af33 	bge.w	80249cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8024b66:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8024b68:	fb01 6303 	mla	r3, r1, r3, r6
 8024b6c:	141b      	asrs	r3, r3, #16
 8024b6e:	f53f af2d 	bmi.w	80249cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8024b72:	3a01      	subs	r2, #1
 8024b74:	4293      	cmp	r3, r2
 8024b76:	f6bf af29 	bge.w	80249cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8024b7a:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8024b7e:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8024b82:	46a8      	mov	r8, r5
 8024b84:	f1b8 0f00 	cmp.w	r8, #0
 8024b88:	dc5e      	bgt.n	8024c48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024b8a:	9b07      	ldr	r3, [sp, #28]
 8024b8c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024b90:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8024b94:	9307      	str	r3, [sp, #28]
 8024b96:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024b98:	2b00      	cmp	r3, #0
 8024b9a:	f340 80f6 	ble.w	8024d8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8024b9e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8024ba2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024ba6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8024baa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024bac:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8024bb0:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8024bb4:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8024bb8:	eef0 6a48 	vmov.f32	s13, s16
 8024bbc:	ee69 7a27 	vmul.f32	s15, s18, s15
 8024bc0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024bc4:	ee37 8a48 	vsub.f32	s16, s14, s16
 8024bc8:	ee16 4a90 	vmov	r4, s13
 8024bcc:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8024bd0:	eef0 6a68 	vmov.f32	s13, s17
 8024bd4:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8024bd8:	ee18 2a10 	vmov	r2, s16
 8024bdc:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8024be0:	fb92 f3f3 	sdiv	r3, r2, r3
 8024be4:	ee18 2a90 	vmov	r2, s17
 8024be8:	9327      	str	r3, [sp, #156]	; 0x9c
 8024bea:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024bec:	fb92 f3f3 	sdiv	r3, r2, r3
 8024bf0:	9328      	str	r3, [sp, #160]	; 0xa0
 8024bf2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024bf4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8024bf6:	3b01      	subs	r3, #1
 8024bf8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024bfc:	930a      	str	r3, [sp, #40]	; 0x28
 8024bfe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024c00:	ee16 6a90 	vmov	r6, s13
 8024c04:	bf14      	ite	ne
 8024c06:	461d      	movne	r5, r3
 8024c08:	4615      	moveq	r5, r2
 8024c0a:	eef0 8a67 	vmov.f32	s17, s15
 8024c0e:	eeb0 8a47 	vmov.f32	s16, s14
 8024c12:	e6b0      	b.n	8024976 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8024c14:	f111 0a01 	adds.w	sl, r1, #1
 8024c18:	d487      	bmi.n	8024b2a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8024c1a:	45d6      	cmp	lr, sl
 8024c1c:	db85      	blt.n	8024b2a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8024c1e:	f110 0a01 	adds.w	sl, r0, #1
 8024c22:	d482      	bmi.n	8024b2a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8024c24:	4553      	cmp	r3, sl
 8024c26:	db80      	blt.n	8024b2a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8024c28:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8024c2a:	9101      	str	r1, [sp, #4]
 8024c2c:	b21b      	sxth	r3, r3
 8024c2e:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8024c32:	9300      	str	r3, [sp, #0]
 8024c34:	e9cd c704 	strd	ip, r7, [sp, #16]
 8024c38:	fa0f f38e 	sxth.w	r3, lr
 8024c3c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024c3e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8024c40:	4641      	mov	r1, r8
 8024c42:	f7ff fd95 	bl	8024770 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8024c46:	e770      	b.n	8024b2a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8024c48:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024c4a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8024c4c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024c50:	1430      	asrs	r0, r6, #16
 8024c52:	1423      	asrs	r3, r4, #16
 8024c54:	fb01 3000 	mla	r0, r1, r0, r3
 8024c58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024c5a:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8024c5e:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8024c62:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8024c66:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024c6a:	8858      	ldrh	r0, [r3, #2]
 8024c6c:	f1be 0f00 	cmp.w	lr, #0
 8024c70:	d00b      	beq.n	8024c8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8024c72:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8024c76:	3901      	subs	r1, #1
 8024c78:	0049      	lsls	r1, r1, #1
 8024c7a:	3102      	adds	r1, #2
 8024c7c:	eb03 0b01 	add.w	fp, r3, r1
 8024c80:	5a5b      	ldrh	r3, [r3, r1]
 8024c82:	930e      	str	r3, [sp, #56]	; 0x38
 8024c84:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8024c88:	930f      	str	r3, [sp, #60]	; 0x3c
 8024c8a:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8024c8e:	fb12 f30e 	smulbb	r3, r2, lr
 8024c92:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024c96:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8024c9a:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8024c9e:	10db      	asrs	r3, r3, #3
 8024ca0:	ea41 010c 	orr.w	r1, r1, ip
 8024ca4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024ca8:	f1ce 0c10 	rsb	ip, lr, #16
 8024cac:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024cb0:	ebac 0c02 	sub.w	ip, ip, r2
 8024cb4:	ea4b 0000 	orr.w	r0, fp, r0
 8024cb8:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024cbc:	4350      	muls	r0, r2
 8024cbe:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024cc0:	9f08      	ldr	r7, [sp, #32]
 8024cc2:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8024cc6:	fb0c 0c01 	mla	ip, ip, r1, r0
 8024cca:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8024cce:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8024cd2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8024cd4:	980e      	ldr	r0, [sp, #56]	; 0x38
 8024cd6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024cda:	0412      	lsls	r2, r2, #16
 8024cdc:	ea4b 0101 	orr.w	r1, fp, r1
 8024ce0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024ce4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024ce8:	fb03 c101 	mla	r1, r3, r1, ip
 8024cec:	4302      	orrs	r2, r0
 8024cee:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8024cf2:	fb03 1202 	mla	r2, r3, r2, r1
 8024cf6:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8024cfa:	0952      	lsrs	r2, r2, #5
 8024cfc:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8024d00:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8024d04:	f8b9 2000 	ldrh.w	r2, [r9]
 8024d08:	ea4b 0303 	orr.w	r3, fp, r3
 8024d0c:	b29b      	uxth	r3, r3
 8024d0e:	1211      	asrs	r1, r2, #8
 8024d10:	1218      	asrs	r0, r3, #8
 8024d12:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024d16:	fb11 f107 	smulbb	r1, r1, r7
 8024d1a:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8024d1e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024d22:	00d2      	lsls	r2, r2, #3
 8024d24:	fb00 100a 	mla	r0, r0, sl, r1
 8024d28:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8024d2c:	10d9      	asrs	r1, r3, #3
 8024d2e:	b2d2      	uxtb	r2, r2
 8024d30:	00db      	lsls	r3, r3, #3
 8024d32:	fb1c fc07 	smulbb	ip, ip, r7
 8024d36:	fb12 f207 	smulbb	r2, r2, r7
 8024d3a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024d3e:	b2db      	uxtb	r3, r3
 8024d40:	b280      	uxth	r0, r0
 8024d42:	fb01 c10a 	mla	r1, r1, sl, ip
 8024d46:	fb03 230a 	mla	r3, r3, sl, r2
 8024d4a:	b29b      	uxth	r3, r3
 8024d4c:	b289      	uxth	r1, r1
 8024d4e:	1c42      	adds	r2, r0, #1
 8024d50:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024d54:	f101 0c01 	add.w	ip, r1, #1
 8024d58:	1c5a      	adds	r2, r3, #1
 8024d5a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8024d5e:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8024d62:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024d64:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8024d68:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8024d6c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024d70:	4310      	orrs	r0, r2
 8024d72:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024d76:	441c      	add	r4, r3
 8024d78:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024d7a:	ea40 000c 	orr.w	r0, r0, ip
 8024d7e:	f829 0b02 	strh.w	r0, [r9], #2
 8024d82:	441e      	add	r6, r3
 8024d84:	f108 38ff 	add.w	r8, r8, #4294967295
 8024d88:	e6fc      	b.n	8024b84 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8024d8a:	b013      	add	sp, #76	; 0x4c
 8024d8c:	ecbd 8b08 	vpop	{d8-d11}
 8024d90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024d94 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8024d94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8024d98:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8024d9c:	fb06 5c03 	mla	ip, r6, r3, r5
 8024da0:	2e00      	cmp	r6, #0
 8024da2:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 8024da6:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 8024daa:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 8024dae:	8808      	ldrh	r0, [r1, #0]
 8024db0:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8024db4:	db2e      	blt.n	8024e14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8024db6:	45b0      	cmp	r8, r6
 8024db8:	dd2c      	ble.n	8024e14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8024dba:	2d00      	cmp	r5, #0
 8024dbc:	db28      	blt.n	8024e10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8024dbe:	42ab      	cmp	r3, r5
 8024dc0:	dd26      	ble.n	8024e10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8024dc2:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 8024dc6:	1c6a      	adds	r2, r5, #1
 8024dc8:	d427      	bmi.n	8024e1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8024dca:	4293      	cmp	r3, r2
 8024dcc:	dd25      	ble.n	8024e1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8024dce:	b324      	cbz	r4, 8024e1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8024dd0:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8024dd4:	3601      	adds	r6, #1
 8024dd6:	d424      	bmi.n	8024e22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8024dd8:	45b0      	cmp	r8, r6
 8024dda:	dd22      	ble.n	8024e22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8024ddc:	b31f      	cbz	r7, 8024e26 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 8024dde:	2d00      	cmp	r5, #0
 8024de0:	db1d      	blt.n	8024e1e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8024de2:	42ab      	cmp	r3, r5
 8024de4:	dd1b      	ble.n	8024e1e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8024de6:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 8024dea:	3501      	adds	r5, #1
 8024dec:	d405      	bmi.n	8024dfa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8024dee:	42ab      	cmp	r3, r5
 8024df0:	dd03      	ble.n	8024dfa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8024df2:	b124      	cbz	r4, 8024dfe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 8024df4:	3301      	adds	r3, #1
 8024df6:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 8024dfa:	2c0f      	cmp	r4, #15
 8024dfc:	d801      	bhi.n	8024e02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8024dfe:	2f0f      	cmp	r7, #15
 8024e00:	d914      	bls.n	8024e2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 8024e02:	4b27      	ldr	r3, [pc, #156]	; (8024ea0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 8024e04:	4a27      	ldr	r2, [pc, #156]	; (8024ea4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 8024e06:	4828      	ldr	r0, [pc, #160]	; (8024ea8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 8024e08:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 8024e0c:	f002 fcb8 	bl	8027780 <__assert_func>
 8024e10:	4684      	mov	ip, r0
 8024e12:	e7d8      	b.n	8024dc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 8024e14:	4602      	mov	r2, r0
 8024e16:	4684      	mov	ip, r0
 8024e18:	e7dc      	b.n	8024dd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8024e1a:	4602      	mov	r2, r0
 8024e1c:	e7da      	b.n	8024dd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8024e1e:	4606      	mov	r6, r0
 8024e20:	e7e3      	b.n	8024dea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 8024e22:	4606      	mov	r6, r0
 8024e24:	e7e9      	b.n	8024dfa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8024e26:	2c0f      	cmp	r4, #15
 8024e28:	d8eb      	bhi.n	8024e02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8024e2a:	4606      	mov	r6, r0
 8024e2c:	ea4f 450c 	mov.w	r5, ip, lsl #16
 8024e30:	fb14 f307 	smulbb	r3, r4, r7
 8024e34:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8024e38:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8024e3c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024e40:	10db      	asrs	r3, r3, #3
 8024e42:	ea45 0c0c 	orr.w	ip, r5, ip
 8024e46:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8024e4a:	f1c7 0510 	rsb	r5, r7, #16
 8024e4e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024e52:	1b2d      	subs	r5, r5, r4
 8024e54:	ea4e 0202 	orr.w	r2, lr, r2
 8024e58:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8024e5c:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8024e60:	4354      	muls	r4, r2
 8024e62:	fb05 450c 	mla	r5, r5, ip, r4
 8024e66:	0404      	lsls	r4, r0, #16
 8024e68:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8024e6c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024e70:	4320      	orrs	r0, r4
 8024e72:	fb03 5400 	mla	r4, r3, r0, r5
 8024e76:	0430      	lsls	r0, r6, #16
 8024e78:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024e7c:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8024e80:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 8024e84:	4330      	orrs	r0, r6
 8024e86:	fb07 4000 	mla	r0, r7, r0, r4
 8024e8a:	0d43      	lsrs	r3, r0, #21
 8024e8c:	0940      	lsrs	r0, r0, #5
 8024e8e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024e92:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024e96:	4318      	orrs	r0, r3
 8024e98:	8008      	strh	r0, [r1, #0]
 8024e9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8024e9e:	bf00      	nop
 8024ea0:	0802d4b6 	.word	0x0802d4b6
 8024ea4:	0802db2f 	.word	0x0802db2f
 8024ea8:	0802d53a 	.word	0x0802d53a

08024eac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024eac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024eb0:	ed2d 8b08 	vpush	{d8-d11}
 8024eb4:	b08f      	sub	sp, #60	; 0x3c
 8024eb6:	461d      	mov	r5, r3
 8024eb8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8024eba:	920c      	str	r2, [sp, #48]	; 0x30
 8024ebc:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 8024ec0:	9107      	str	r1, [sp, #28]
 8024ec2:	6859      	ldr	r1, [r3, #4]
 8024ec4:	681b      	ldr	r3, [r3, #0]
 8024ec6:	900d      	str	r0, [sp, #52]	; 0x34
 8024ec8:	fb01 2707 	mla	r7, r1, r7, r2
 8024ecc:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8024ed0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024ed2:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8024ed6:	f8d3 8000 	ldr.w	r8, [r3]
 8024eda:	eeb0 aa40 	vmov.f32	s20, s0
 8024ede:	eef0 9a60 	vmov.f32	s19, s1
 8024ee2:	eeb0 9a41 	vmov.f32	s18, s2
 8024ee6:	eeb0 8a62 	vmov.f32	s16, s5
 8024eea:	eef0 8a43 	vmov.f32	s17, s6
 8024eee:	eef0 ba44 	vmov.f32	s23, s8
 8024ef2:	eeb0 ba64 	vmov.f32	s22, s9
 8024ef6:	eef0 aa45 	vmov.f32	s21, s10
 8024efa:	9b07      	ldr	r3, [sp, #28]
 8024efc:	2b00      	cmp	r3, #0
 8024efe:	dc03      	bgt.n	8024f08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8024f00:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024f02:	2b00      	cmp	r3, #0
 8024f04:	f340 8181 	ble.w	802520a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8024f08:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024f0a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024f0e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024f12:	1e48      	subs	r0, r1, #1
 8024f14:	f102 3cff 	add.w	ip, r2, #4294967295
 8024f18:	2d00      	cmp	r5, #0
 8024f1a:	f340 809b 	ble.w	8025054 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 8024f1e:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024f22:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024f26:	d406      	bmi.n	8024f36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024f28:	4586      	cmp	lr, r0
 8024f2a:	da04      	bge.n	8024f36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024f2c:	2b00      	cmp	r3, #0
 8024f2e:	db02      	blt.n	8024f36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024f30:	4563      	cmp	r3, ip
 8024f32:	f2c0 8090 	blt.w	8025056 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8024f36:	f11e 0e01 	adds.w	lr, lr, #1
 8024f3a:	f100 8084 	bmi.w	8025046 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8024f3e:	4571      	cmp	r1, lr
 8024f40:	f2c0 8081 	blt.w	8025046 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8024f44:	3301      	adds	r3, #1
 8024f46:	d47e      	bmi.n	8025046 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8024f48:	429a      	cmp	r2, r3
 8024f4a:	db7c      	blt.n	8025046 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8024f4c:	46aa      	mov	sl, r5
 8024f4e:	46b9      	mov	r9, r7
 8024f50:	f1ba 0f00 	cmp.w	sl, #0
 8024f54:	f340 8099 	ble.w	802508a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8024f58:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024f5a:	1421      	asrs	r1, r4, #16
 8024f5c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024f60:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024f64:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8024f68:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8024f6c:	f100 80d0 	bmi.w	8025110 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8024f70:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024f74:	4559      	cmp	r1, fp
 8024f76:	f280 80cb 	bge.w	8025110 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8024f7a:	2800      	cmp	r0, #0
 8024f7c:	f2c0 80c8 	blt.w	8025110 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8024f80:	f103 3bff 	add.w	fp, r3, #4294967295
 8024f84:	4558      	cmp	r0, fp
 8024f86:	f280 80c3 	bge.w	8025110 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8024f8a:	fa0f fe8e 	sxth.w	lr, lr
 8024f8e:	fb00 110e 	mla	r1, r0, lr, r1
 8024f92:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8024f96:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8024f9a:	8841      	ldrh	r1, [r0, #2]
 8024f9c:	f1bc 0f00 	cmp.w	ip, #0
 8024fa0:	d00b      	beq.n	8024fba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8024fa2:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8024fa6:	3b01      	subs	r3, #1
 8024fa8:	005b      	lsls	r3, r3, #1
 8024faa:	3302      	adds	r3, #2
 8024fac:	eb00 0e03 	add.w	lr, r0, r3
 8024fb0:	5ac3      	ldrh	r3, [r0, r3]
 8024fb2:	9308      	str	r3, [sp, #32]
 8024fb4:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8024fb8:	9309      	str	r3, [sp, #36]	; 0x24
 8024fba:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8024fbe:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024fc2:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8024fc6:	ea40 000b 	orr.w	r0, r0, fp
 8024fca:	fb12 f30c 	smulbb	r3, r2, ip
 8024fce:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8024fd2:	10db      	asrs	r3, r3, #3
 8024fd4:	f1cc 0e10 	rsb	lr, ip, #16
 8024fd8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024fdc:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8024fe0:	ebae 0e02 	sub.w	lr, lr, r2
 8024fe4:	ea4b 0101 	orr.w	r1, fp, r1
 8024fe8:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024fec:	4351      	muls	r1, r2
 8024fee:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024ff0:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8024ff4:	fb0e 1e00 	mla	lr, lr, r0, r1
 8024ff8:	0410      	lsls	r0, r2, #16
 8024ffa:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024ffe:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025002:	4310      	orrs	r0, r2
 8025004:	9a08      	ldr	r2, [sp, #32]
 8025006:	9908      	ldr	r1, [sp, #32]
 8025008:	0412      	lsls	r2, r2, #16
 802500a:	fb03 e000 	mla	r0, r3, r0, lr
 802500e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8025012:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8025016:	ea42 020e 	orr.w	r2, r2, lr
 802501a:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 802501e:	fb03 0302 	mla	r3, r3, r2, r0
 8025022:	0d5a      	lsrs	r2, r3, #21
 8025024:	095b      	lsrs	r3, r3, #5
 8025026:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802502a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802502e:	4313      	orrs	r3, r2
 8025030:	f8a9 3000 	strh.w	r3, [r9]
 8025034:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8025036:	441c      	add	r4, r3
 8025038:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802503a:	f109 0902 	add.w	r9, r9, #2
 802503e:	441e      	add	r6, r3
 8025040:	f10a 3aff 	add.w	sl, sl, #4294967295
 8025044:	e784      	b.n	8024f50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8025046:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8025048:	441c      	add	r4, r3
 802504a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802504c:	3d01      	subs	r5, #1
 802504e:	441e      	add	r6, r3
 8025050:	3702      	adds	r7, #2
 8025052:	e761      	b.n	8024f18 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8025054:	d01d      	beq.n	8025092 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8025056:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8025058:	1e6b      	subs	r3, r5, #1
 802505a:	fb00 4003 	mla	r0, r0, r3, r4
 802505e:	1400      	asrs	r0, r0, #16
 8025060:	f53f af74 	bmi.w	8024f4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8025064:	3901      	subs	r1, #1
 8025066:	4288      	cmp	r0, r1
 8025068:	f6bf af70 	bge.w	8024f4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 802506c:	9924      	ldr	r1, [sp, #144]	; 0x90
 802506e:	fb01 6303 	mla	r3, r1, r3, r6
 8025072:	141b      	asrs	r3, r3, #16
 8025074:	f53f af6a 	bmi.w	8024f4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8025078:	3a01      	subs	r2, #1
 802507a:	4293      	cmp	r3, r2
 802507c:	f6bf af66 	bge.w	8024f4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8025080:	46a9      	mov	r9, r5
 8025082:	46ba      	mov	sl, r7
 8025084:	f1b9 0f00 	cmp.w	r9, #0
 8025088:	dc5a      	bgt.n	8025140 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 802508a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802508e:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8025092:	9b07      	ldr	r3, [sp, #28]
 8025094:	2b00      	cmp	r3, #0
 8025096:	f340 80b8 	ble.w	802520a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 802509a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802509e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80250a2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80250a6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80250a8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80250ac:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80250b0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80250b4:	eef0 6a48 	vmov.f32	s13, s16
 80250b8:	ee69 7a27 	vmul.f32	s15, s18, s15
 80250bc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80250c0:	ee37 8a48 	vsub.f32	s16, s14, s16
 80250c4:	ee16 4a90 	vmov	r4, s13
 80250c8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80250cc:	eef0 6a68 	vmov.f32	s13, s17
 80250d0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80250d4:	ee18 2a10 	vmov	r2, s16
 80250d8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80250dc:	fb92 f3f3 	sdiv	r3, r2, r3
 80250e0:	ee18 2a90 	vmov	r2, s17
 80250e4:	9323      	str	r3, [sp, #140]	; 0x8c
 80250e6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80250e8:	fb92 f3f3 	sdiv	r3, r2, r3
 80250ec:	9324      	str	r3, [sp, #144]	; 0x90
 80250ee:	9b07      	ldr	r3, [sp, #28]
 80250f0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80250f2:	3b01      	subs	r3, #1
 80250f4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80250f8:	9307      	str	r3, [sp, #28]
 80250fa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80250fc:	ee16 6a90 	vmov	r6, s13
 8025100:	bf14      	ite	ne
 8025102:	461d      	movne	r5, r3
 8025104:	4615      	moveq	r5, r2
 8025106:	eef0 8a67 	vmov.f32	s17, s15
 802510a:	eeb0 8a47 	vmov.f32	s16, s14
 802510e:	e6f4      	b.n	8024efa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8025110:	f111 0b01 	adds.w	fp, r1, #1
 8025114:	d48e      	bmi.n	8025034 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8025116:	45de      	cmp	lr, fp
 8025118:	db8c      	blt.n	8025034 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 802511a:	f110 0b01 	adds.w	fp, r0, #1
 802511e:	d489      	bmi.n	8025034 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8025120:	455b      	cmp	r3, fp
 8025122:	db87      	blt.n	8025034 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8025124:	b21b      	sxth	r3, r3
 8025126:	e9cd 1001 	strd	r1, r0, [sp, #4]
 802512a:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 802512e:	9300      	str	r3, [sp, #0]
 8025130:	4642      	mov	r2, r8
 8025132:	fa0f f38e 	sxth.w	r3, lr
 8025136:	4649      	mov	r1, r9
 8025138:	980d      	ldr	r0, [sp, #52]	; 0x34
 802513a:	f7ff fe2b 	bl	8024d94 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 802513e:	e779      	b.n	8025034 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8025140:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025142:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8025146:	1420      	asrs	r0, r4, #16
 8025148:	1431      	asrs	r1, r6, #16
 802514a:	fb03 0101 	mla	r1, r3, r1, r0
 802514e:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8025152:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8025156:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 802515a:	8841      	ldrh	r1, [r0, #2]
 802515c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025160:	f1be 0f00 	cmp.w	lr, #0
 8025164:	d00b      	beq.n	802517e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 8025166:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 802516a:	3b01      	subs	r3, #1
 802516c:	005b      	lsls	r3, r3, #1
 802516e:	3302      	adds	r3, #2
 8025170:	eb00 0b03 	add.w	fp, r0, r3
 8025174:	5ac3      	ldrh	r3, [r0, r3]
 8025176:	930a      	str	r3, [sp, #40]	; 0x28
 8025178:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 802517c:	930b      	str	r3, [sp, #44]	; 0x2c
 802517e:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8025182:	fb12 f30e 	smulbb	r3, r2, lr
 8025186:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802518a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802518e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8025192:	10db      	asrs	r3, r3, #3
 8025194:	ea40 000c 	orr.w	r0, r0, ip
 8025198:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802519c:	f1ce 0c10 	rsb	ip, lr, #16
 80251a0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80251a4:	ebac 0c02 	sub.w	ip, ip, r2
 80251a8:	ea4b 0101 	orr.w	r1, fp, r1
 80251ac:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80251b0:	4351      	muls	r1, r2
 80251b2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80251b4:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80251b8:	fb0c 1c00 	mla	ip, ip, r0, r1
 80251bc:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80251c0:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 80251c4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80251c6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80251c8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80251cc:	0412      	lsls	r2, r2, #16
 80251ce:	ea4b 0000 	orr.w	r0, fp, r0
 80251d2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80251d6:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 80251da:	fb03 c000 	mla	r0, r3, r0, ip
 80251de:	ea42 0b0b 	orr.w	fp, r2, fp
 80251e2:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80251e6:	fb03 000b 	mla	r0, r3, fp, r0
 80251ea:	0d43      	lsrs	r3, r0, #21
 80251ec:	0940      	lsrs	r0, r0, #5
 80251ee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80251f2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80251f6:	4318      	orrs	r0, r3
 80251f8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80251fa:	f82a 0b02 	strh.w	r0, [sl], #2
 80251fe:	441c      	add	r4, r3
 8025200:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025202:	f109 39ff 	add.w	r9, r9, #4294967295
 8025206:	441e      	add	r6, r3
 8025208:	e73c      	b.n	8025084 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 802520a:	b00f      	add	sp, #60	; 0x3c
 802520c:	ecbd 8b08 	vpop	{d8-d11}
 8025210:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025214 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8025214:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025218:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 802521c:	fb04 5603 	mla	r6, r4, r3, r5
 8025220:	2c00      	cmp	r4, #0
 8025222:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8025226:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 802522a:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 802522e:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 8025232:	db36      	blt.n	80252a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 8025234:	45a6      	cmp	lr, r4
 8025236:	dd34      	ble.n	80252a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 8025238:	2d00      	cmp	r5, #0
 802523a:	db30      	blt.n	802529e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 802523c:	42ab      	cmp	r3, r5
 802523e:	dd2e      	ble.n	802529e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 8025240:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8025244:	1c6e      	adds	r6, r5, #1
 8025246:	d42f      	bmi.n	80252a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 8025248:	42b3      	cmp	r3, r6
 802524a:	dd2d      	ble.n	80252a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 802524c:	b370      	cbz	r0, 80252ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 802524e:	f8dc 6004 	ldr.w	r6, [ip, #4]
 8025252:	3401      	adds	r4, #1
 8025254:	d42e      	bmi.n	80252b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 8025256:	45a6      	cmp	lr, r4
 8025258:	dd2c      	ble.n	80252b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 802525a:	b377      	cbz	r7, 80252ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa6>
 802525c:	2d00      	cmp	r5, #0
 802525e:	db27      	blt.n	80252b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 8025260:	42ab      	cmp	r3, r5
 8025262:	dd25      	ble.n	80252b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 8025264:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8025268:	3501      	adds	r5, #1
 802526a:	d429      	bmi.n	80252c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 802526c:	42ab      	cmp	r3, r5
 802526e:	dd27      	ble.n	80252c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 8025270:	b340      	cbz	r0, 80252c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 8025272:	3301      	adds	r3, #1
 8025274:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 8025278:	280f      	cmp	r0, #15
 802527a:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 802527e:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8025282:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8025286:	ea4f 6813 	mov.w	r8, r3, lsr #24
 802528a:	d801      	bhi.n	8025290 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x7c>
 802528c:	2f0f      	cmp	r7, #15
 802528e:	d91b      	bls.n	80252c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 8025290:	4b8d      	ldr	r3, [pc, #564]	; (80254c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 8025292:	4a8e      	ldr	r2, [pc, #568]	; (80254cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 8025294:	488e      	ldr	r0, [pc, #568]	; (80254d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 8025296:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 802529a:	f002 fa71 	bl	8027780 <__assert_func>
 802529e:	2200      	movs	r2, #0
 80252a0:	e7d0      	b.n	8025244 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x30>
 80252a2:	2600      	movs	r6, #0
 80252a4:	4632      	mov	r2, r6
 80252a6:	e7d4      	b.n	8025252 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 80252a8:	2600      	movs	r6, #0
 80252aa:	e7d2      	b.n	8025252 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 80252ac:	4606      	mov	r6, r0
 80252ae:	e7d0      	b.n	8025252 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 80252b0:	2400      	movs	r4, #0
 80252b2:	e7d9      	b.n	8025268 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x54>
 80252b4:	2300      	movs	r3, #0
 80252b6:	461c      	mov	r4, r3
 80252b8:	e7de      	b.n	8025278 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80252ba:	463b      	mov	r3, r7
 80252bc:	463c      	mov	r4, r7
 80252be:	e7db      	b.n	8025278 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80252c0:	2300      	movs	r3, #0
 80252c2:	e7d9      	b.n	8025278 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80252c4:	4603      	mov	r3, r0
 80252c6:	e7d7      	b.n	8025278 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80252c8:	b280      	uxth	r0, r0
 80252ca:	b2bf      	uxth	r7, r7
 80252cc:	fb07 fe00 	mul.w	lr, r7, r0
 80252d0:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80252d4:	0100      	lsls	r0, r0, #4
 80252d6:	eba0 0c0e 	sub.w	ip, r0, lr
 80252da:	b2bf      	uxth	r7, r7
 80252dc:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 80252e0:	fa1f fc8c 	uxth.w	ip, ip
 80252e4:	1bed      	subs	r5, r5, r7
 80252e6:	b2ad      	uxth	r5, r5
 80252e8:	fb0a f00c 	mul.w	r0, sl, ip
 80252ec:	fb0b 0005 	mla	r0, fp, r5, r0
 80252f0:	fb07 0009 	mla	r0, r7, r9, r0
 80252f4:	fb0e 0008 	mla	r0, lr, r8, r0
 80252f8:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80252fc:	9001      	str	r0, [sp, #4]
 80252fe:	2800      	cmp	r0, #0
 8025300:	f000 80de 	beq.w	80254c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2ac>
 8025304:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8025308:	d018      	beq.n	802533c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x128>
 802530a:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 802530e:	fb0b f000 	mul.w	r0, fp, r0
 8025312:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025316:	fb0b fb02 	mul.w	fp, fp, r2
 802531a:	0a02      	lsrs	r2, r0, #8
 802531c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025320:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8025324:	4402      	add	r2, r0
 8025326:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 802532a:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 802532e:	0a12      	lsrs	r2, r2, #8
 8025330:	0a00      	lsrs	r0, r0, #8
 8025332:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025336:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 802533a:	4302      	orrs	r2, r0
 802533c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8025340:	d01a      	beq.n	8025378 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x164>
 8025342:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 8025346:	fb0a f000 	mul.w	r0, sl, r0
 802534a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 802534e:	fb0a fa06 	mul.w	sl, sl, r6
 8025352:	0a06      	lsrs	r6, r0, #8
 8025354:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8025358:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 802535c:	4406      	add	r6, r0
 802535e:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8025362:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8025366:	0a36      	lsrs	r6, r6, #8
 8025368:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802536c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8025370:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025374:	ea46 060a 	orr.w	r6, r6, sl
 8025378:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802537c:	d01b      	beq.n	80253b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1a2>
 802537e:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8025382:	fb09 fa0a 	mul.w	sl, r9, sl
 8025386:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 802538a:	fb09 f004 	mul.w	r0, r9, r4
 802538e:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8025392:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8025396:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802539a:	f500 7980 	add.w	r9, r0, #256	; 0x100
 802539e:	4454      	add	r4, sl
 80253a0:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 80253a4:	0a24      	lsrs	r4, r4, #8
 80253a6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80253aa:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80253ae:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80253b2:	ea44 0409 	orr.w	r4, r4, r9
 80253b6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80253ba:	d01b      	beq.n	80253f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1e0>
 80253bc:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 80253c0:	fb08 f909 	mul.w	r9, r8, r9
 80253c4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80253c8:	fb08 f003 	mul.w	r0, r8, r3
 80253cc:	ea4f 2319 	mov.w	r3, r9, lsr #8
 80253d0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80253d4:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80253d8:	f500 7880 	add.w	r8, r0, #256	; 0x100
 80253dc:	444b      	add	r3, r9
 80253de:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 80253e2:	0a1b      	lsrs	r3, r3, #8
 80253e4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80253e8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80253ec:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80253f0:	ea43 0308 	orr.w	r3, r3, r8
 80253f4:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80253f8:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80253fc:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 8025400:	fb0c f808 	mul.w	r8, ip, r8
 8025404:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025408:	fb0c f606 	mul.w	r6, ip, r6
 802540c:	fb05 8909 	mla	r9, r5, r9, r8
 8025410:	fb05 6502 	mla	r5, r5, r2, r6
 8025414:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8025418:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 802541c:	9a01      	ldr	r2, [sp, #4]
 802541e:	8808      	ldrh	r0, [r1, #0]
 8025420:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8025424:	fb07 9908 	mla	r9, r7, r8, r9
 8025428:	fb07 5704 	mla	r7, r7, r4, r5
 802542c:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8025430:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025434:	b2b6      	uxth	r6, r6
 8025436:	fb0e 9808 	mla	r8, lr, r8, r9
 802543a:	fb0e 7e03 	mla	lr, lr, r3, r7
 802543e:	4372      	muls	r2, r6
 8025440:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8025444:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025448:	1c53      	adds	r3, r2, #1
 802544a:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 802544e:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8025452:	ea48 0e0e 	orr.w	lr, r8, lr
 8025456:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802545a:	1205      	asrs	r5, r0, #8
 802545c:	ea4f 421e 	mov.w	r2, lr, lsr #16
 8025460:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8025464:	b2db      	uxtb	r3, r3
 8025466:	fb12 f206 	smulbb	r2, r2, r6
 802546a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802546e:	fb05 2503 	mla	r5, r5, r3, r2
 8025472:	f3ce 2407 	ubfx	r4, lr, #8, #8
 8025476:	10c2      	asrs	r2, r0, #3
 8025478:	fa5f fe8e 	uxtb.w	lr, lr
 802547c:	00c0      	lsls	r0, r0, #3
 802547e:	fb14 f406 	smulbb	r4, r4, r6
 8025482:	b2c0      	uxtb	r0, r0
 8025484:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8025488:	fb1e fe06 	smulbb	lr, lr, r6
 802548c:	fb02 4203 	mla	r2, r2, r3, r4
 8025490:	b2ad      	uxth	r5, r5
 8025492:	fb00 e303 	mla	r3, r0, r3, lr
 8025496:	b298      	uxth	r0, r3
 8025498:	b294      	uxth	r4, r2
 802549a:	1c6b      	adds	r3, r5, #1
 802549c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80254a0:	1c62      	adds	r2, r4, #1
 80254a2:	1c43      	adds	r3, r0, #1
 80254a4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80254a8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80254ac:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80254b0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80254b4:	0952      	lsrs	r2, r2, #5
 80254b6:	432b      	orrs	r3, r5
 80254b8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80254bc:	4313      	orrs	r3, r2
 80254be:	800b      	strh	r3, [r1, #0]
 80254c0:	b003      	add	sp, #12
 80254c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80254c6:	bf00      	nop
 80254c8:	0802d4b6 	.word	0x0802d4b6
 80254cc:	0802da86 	.word	0x0802da86
 80254d0:	0802d53a 	.word	0x0802d53a

080254d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80254d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80254d8:	ed2d 8b08 	vpush	{d8-d11}
 80254dc:	b09d      	sub	sp, #116	; 0x74
 80254de:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 80254e2:	9219      	str	r2, [sp, #100]	; 0x64
 80254e4:	9307      	str	r3, [sp, #28]
 80254e6:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 80254e8:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 80254ec:	931a      	str	r3, [sp, #104]	; 0x68
 80254ee:	9117      	str	r1, [sp, #92]	; 0x5c
 80254f0:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 80254f4:	901b      	str	r0, [sp, #108]	; 0x6c
 80254f6:	6850      	ldr	r0, [r2, #4]
 80254f8:	6812      	ldr	r2, [r2, #0]
 80254fa:	fb00 1303 	mla	r3, r0, r3, r1
 80254fe:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025502:	930a      	str	r3, [sp, #40]	; 0x28
 8025504:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8025506:	681b      	ldr	r3, [r3, #0]
 8025508:	9310      	str	r3, [sp, #64]	; 0x40
 802550a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 802550e:	930b      	str	r3, [sp, #44]	; 0x2c
 8025510:	eeb0 aa40 	vmov.f32	s20, s0
 8025514:	eef0 9a60 	vmov.f32	s19, s1
 8025518:	eeb0 9a41 	vmov.f32	s18, s2
 802551c:	eeb0 8a62 	vmov.f32	s16, s5
 8025520:	eef0 8a43 	vmov.f32	s17, s6
 8025524:	eef0 ba44 	vmov.f32	s23, s8
 8025528:	eeb0 ba64 	vmov.f32	s22, s9
 802552c:	eef0 aa45 	vmov.f32	s21, s10
 8025530:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025532:	2b00      	cmp	r3, #0
 8025534:	dc03      	bgt.n	802553e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8025536:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8025538:	2b00      	cmp	r3, #0
 802553a:	f340 8375 	ble.w	8025c28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 802553e:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8025540:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025544:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025548:	1e48      	subs	r0, r1, #1
 802554a:	1e57      	subs	r7, r2, #1
 802554c:	9b07      	ldr	r3, [sp, #28]
 802554e:	2b00      	cmp	r3, #0
 8025550:	f340 818e 	ble.w	8025870 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 8025554:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8025558:	ea4f 4326 	mov.w	r3, r6, asr #16
 802555c:	d406      	bmi.n	802556c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 802555e:	4584      	cmp	ip, r0
 8025560:	da04      	bge.n	802556c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8025562:	2b00      	cmp	r3, #0
 8025564:	db02      	blt.n	802556c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8025566:	42bb      	cmp	r3, r7
 8025568:	f2c0 8183 	blt.w	8025872 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 802556c:	f11c 0c01 	adds.w	ip, ip, #1
 8025570:	f100 8173 	bmi.w	802585a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8025574:	4561      	cmp	r1, ip
 8025576:	f2c0 8170 	blt.w	802585a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802557a:	3301      	adds	r3, #1
 802557c:	f100 816d 	bmi.w	802585a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8025580:	429a      	cmp	r2, r3
 8025582:	f2c0 816a 	blt.w	802585a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8025586:	9b07      	ldr	r3, [sp, #28]
 8025588:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802558a:	9318      	str	r3, [sp, #96]	; 0x60
 802558c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802558e:	2b00      	cmp	r3, #0
 8025590:	f340 818c 	ble.w	80258ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d8>
 8025594:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8025596:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8025598:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802559c:	689b      	ldr	r3, [r3, #8]
 802559e:	1422      	asrs	r2, r4, #16
 80255a0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80255a4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80255a8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80255ac:	f100 81cd 	bmi.w	802594a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80255b0:	f103 38ff 	add.w	r8, r3, #4294967295
 80255b4:	4542      	cmp	r2, r8
 80255b6:	f280 81c8 	bge.w	802594a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80255ba:	f1bc 0f00 	cmp.w	ip, #0
 80255be:	f2c0 81c4 	blt.w	802594a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80255c2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80255c6:	45c4      	cmp	ip, r8
 80255c8:	f280 81bf 	bge.w	802594a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80255cc:	b21b      	sxth	r3, r3
 80255ce:	fb0c 2203 	mla	r2, ip, r3, r2
 80255d2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80255d4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80255d8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80255dc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80255e0:	2800      	cmp	r0, #0
 80255e2:	f000 81a9 	beq.w	8025938 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 80255e6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80255ea:	950c      	str	r5, [sp, #48]	; 0x30
 80255ec:	0e2d      	lsrs	r5, r5, #24
 80255ee:	9513      	str	r5, [sp, #76]	; 0x4c
 80255f0:	b181      	cbz	r1, 8025614 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 80255f2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80255f6:	3b01      	subs	r3, #1
 80255f8:	009b      	lsls	r3, r3, #2
 80255fa:	3304      	adds	r3, #4
 80255fc:	eb08 0c03 	add.w	ip, r8, r3
 8025600:	f858 3003 	ldr.w	r3, [r8, r3]
 8025604:	9308      	str	r3, [sp, #32]
 8025606:	0e1b      	lsrs	r3, r3, #24
 8025608:	9311      	str	r3, [sp, #68]	; 0x44
 802560a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802560e:	930d      	str	r3, [sp, #52]	; 0x34
 8025610:	0e1b      	lsrs	r3, r3, #24
 8025612:	9314      	str	r3, [sp, #80]	; 0x50
 8025614:	b280      	uxth	r0, r0
 8025616:	b289      	uxth	r1, r1
 8025618:	fb00 f901 	mul.w	r9, r0, r1
 802561c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8025620:	0100      	lsls	r0, r0, #4
 8025622:	eba0 0809 	sub.w	r8, r0, r9
 8025626:	b289      	uxth	r1, r1
 8025628:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802562c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802562e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025630:	fa1f f888 	uxth.w	r8, r8
 8025634:	1a5b      	subs	r3, r3, r1
 8025636:	b29b      	uxth	r3, r3
 8025638:	fb08 f000 	mul.w	r0, r8, r0
 802563c:	fb03 000e 	mla	r0, r3, lr, r0
 8025640:	fb01 0005 	mla	r0, r1, r5, r0
 8025644:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025646:	fb09 0005 	mla	r0, r9, r5, r0
 802564a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802564e:	2800      	cmp	r0, #0
 8025650:	f000 80fa 	beq.w	8025848 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8025654:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8025658:	d01b      	beq.n	8025692 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 802565a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802565e:	fb0e fa0a 	mul.w	sl, lr, sl
 8025662:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025666:	fb0e fe02 	mul.w	lr, lr, r2
 802566a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802566e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025672:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8025676:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802567a:	4452      	add	r2, sl
 802567c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8025680:	0a12      	lsrs	r2, r2, #8
 8025682:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025686:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802568a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802568e:	ea42 020c 	orr.w	r2, r2, ip
 8025692:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025694:	2dff      	cmp	r5, #255	; 0xff
 8025696:	d021      	beq.n	80256dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8025698:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802569a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802569e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80256a0:	fb05 fb0b 	mul.w	fp, r5, fp
 80256a4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80256a6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80256aa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80256ac:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80256b0:	fb05 fa0a 	mul.w	sl, r5, sl
 80256b4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80256b8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80256bc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80256c0:	44de      	add	lr, fp
 80256c2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80256c6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80256ca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80256ce:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80256d2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80256d6:	ea4e 050a 	orr.w	r5, lr, sl
 80256da:	950c      	str	r5, [sp, #48]	; 0x30
 80256dc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80256de:	2dff      	cmp	r5, #255	; 0xff
 80256e0:	d021      	beq.n	8025726 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80256e2:	9d08      	ldr	r5, [sp, #32]
 80256e4:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80256e8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80256ea:	fb05 fb0b 	mul.w	fp, r5, fp
 80256ee:	9d08      	ldr	r5, [sp, #32]
 80256f0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80256f4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80256f6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80256fa:	fb05 fa0a 	mul.w	sl, r5, sl
 80256fe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025702:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025706:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802570a:	44de      	add	lr, fp
 802570c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025710:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025714:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025718:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802571c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025720:	ea4e 050a 	orr.w	r5, lr, sl
 8025724:	9508      	str	r5, [sp, #32]
 8025726:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025728:	2dff      	cmp	r5, #255	; 0xff
 802572a:	d021      	beq.n	8025770 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 802572c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802572e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025732:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025734:	fb05 fb0b 	mul.w	fp, r5, fp
 8025738:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802573a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802573e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025740:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025744:	fb05 fa0a 	mul.w	sl, r5, sl
 8025748:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802574c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025750:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025754:	44de      	add	lr, fp
 8025756:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802575a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802575e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025762:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025766:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802576a:	ea4e 050a 	orr.w	r5, lr, sl
 802576e:	950d      	str	r5, [sp, #52]	; 0x34
 8025770:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025772:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025776:	9d08      	ldr	r5, [sp, #32]
 8025778:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 802577c:	fb08 fc0c 	mul.w	ip, r8, ip
 8025780:	fb03 cc0e 	mla	ip, r3, lr, ip
 8025784:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8025788:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802578a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802578e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8025792:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025794:	fb09 cc0e 	mla	ip, r9, lr, ip
 8025798:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 802579c:	fb08 f80e 	mul.w	r8, r8, lr
 80257a0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80257a4:	fb03 8202 	mla	r2, r3, r2, r8
 80257a8:	9b08      	ldr	r3, [sp, #32]
 80257aa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80257ac:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 80257b0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80257b2:	fb01 220a 	mla	r2, r1, sl, r2
 80257b6:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 80257ba:	fb09 2901 	mla	r9, r9, r1, r2
 80257be:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80257c0:	883b      	ldrh	r3, [r7, #0]
 80257c2:	4342      	muls	r2, r0
 80257c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80257c8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80257cc:	1c50      	adds	r0, r2, #1
 80257ce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80257d2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80257d6:	ea4c 0c09 	orr.w	ip, ip, r9
 80257da:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80257de:	1219      	asrs	r1, r3, #8
 80257e0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80257e4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80257e8:	b2c0      	uxtb	r0, r0
 80257ea:	fb12 f205 	smulbb	r2, r2, r5
 80257ee:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80257f2:	fb01 2100 	mla	r1, r1, r0, r2
 80257f6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80257fa:	10da      	asrs	r2, r3, #3
 80257fc:	fa5f fc8c 	uxtb.w	ip, ip
 8025800:	00db      	lsls	r3, r3, #3
 8025802:	fb1c fc05 	smulbb	ip, ip, r5
 8025806:	b2db      	uxtb	r3, r3
 8025808:	b289      	uxth	r1, r1
 802580a:	fb03 c300 	mla	r3, r3, r0, ip
 802580e:	fa1f fc83 	uxth.w	ip, r3
 8025812:	1c4b      	adds	r3, r1, #1
 8025814:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025818:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802581c:	fb1e fe05 	smulbb	lr, lr, r5
 8025820:	f10c 0301 	add.w	r3, ip, #1
 8025824:	fb02 e200 	mla	r2, r2, r0, lr
 8025828:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802582c:	b292      	uxth	r2, r2
 802582e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8025832:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025836:	430b      	orrs	r3, r1
 8025838:	1c51      	adds	r1, r2, #1
 802583a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802583e:	0952      	lsrs	r2, r2, #5
 8025840:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025844:	4313      	orrs	r3, r2
 8025846:	803b      	strh	r3, [r7, #0]
 8025848:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 802584a:	441c      	add	r4, r3
 802584c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 802584e:	441e      	add	r6, r3
 8025850:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025852:	3b01      	subs	r3, #1
 8025854:	3702      	adds	r7, #2
 8025856:	9318      	str	r3, [sp, #96]	; 0x60
 8025858:	e698      	b.n	802558c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802585a:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 802585c:	441c      	add	r4, r3
 802585e:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8025860:	441e      	add	r6, r3
 8025862:	9b07      	ldr	r3, [sp, #28]
 8025864:	3b01      	subs	r3, #1
 8025866:	9307      	str	r3, [sp, #28]
 8025868:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802586a:	3302      	adds	r3, #2
 802586c:	930a      	str	r3, [sp, #40]	; 0x28
 802586e:	e66d      	b.n	802554c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025870:	d023      	beq.n	80258ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8025872:	9b07      	ldr	r3, [sp, #28]
 8025874:	9831      	ldr	r0, [sp, #196]	; 0xc4
 8025876:	3b01      	subs	r3, #1
 8025878:	fb00 4003 	mla	r0, r0, r3, r4
 802587c:	1400      	asrs	r0, r0, #16
 802587e:	f53f ae82 	bmi.w	8025586 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8025882:	3901      	subs	r1, #1
 8025884:	4288      	cmp	r0, r1
 8025886:	f6bf ae7e 	bge.w	8025586 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 802588a:	9932      	ldr	r1, [sp, #200]	; 0xc8
 802588c:	fb01 6303 	mla	r3, r1, r3, r6
 8025890:	141b      	asrs	r3, r3, #16
 8025892:	f53f ae78 	bmi.w	8025586 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8025896:	3a01      	subs	r2, #1
 8025898:	4293      	cmp	r3, r2
 802589a:	f6bf ae74 	bge.w	8025586 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 802589e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80258a2:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80258a6:	f1bb 0f00 	cmp.w	fp, #0
 80258aa:	dc6c      	bgt.n	8025986 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 80258ac:	9b07      	ldr	r3, [sp, #28]
 80258ae:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80258b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80258b4:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80258b8:	930a      	str	r3, [sp, #40]	; 0x28
 80258ba:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80258bc:	2b00      	cmp	r3, #0
 80258be:	f340 81b3 	ble.w	8025c28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 80258c2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80258c6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80258ca:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80258ce:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80258d0:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80258d4:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80258d8:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80258dc:	eef0 6a48 	vmov.f32	s13, s16
 80258e0:	ee69 7a27 	vmul.f32	s15, s18, s15
 80258e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80258e8:	ee37 8a48 	vsub.f32	s16, s14, s16
 80258ec:	ee16 4a90 	vmov	r4, s13
 80258f0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80258f4:	eef0 6a68 	vmov.f32	s13, s17
 80258f8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80258fc:	ee18 2a10 	vmov	r2, s16
 8025900:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8025904:	fb92 f3f3 	sdiv	r3, r2, r3
 8025908:	ee18 2a90 	vmov	r2, s17
 802590c:	9331      	str	r3, [sp, #196]	; 0xc4
 802590e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8025910:	fb92 f3f3 	sdiv	r3, r2, r3
 8025914:	9332      	str	r3, [sp, #200]	; 0xc8
 8025916:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025918:	9a19      	ldr	r2, [sp, #100]	; 0x64
 802591a:	3b01      	subs	r3, #1
 802591c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025920:	9317      	str	r3, [sp, #92]	; 0x5c
 8025922:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8025924:	bf08      	it	eq
 8025926:	4613      	moveq	r3, r2
 8025928:	ee16 6a90 	vmov	r6, s13
 802592c:	9307      	str	r3, [sp, #28]
 802592e:	eef0 8a67 	vmov.f32	s17, s15
 8025932:	eeb0 8a47 	vmov.f32	s16, s14
 8025936:	e5fb      	b.n	8025530 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8025938:	2900      	cmp	r1, #0
 802593a:	f43f ae6b 	beq.w	8025614 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802593e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8025942:	9308      	str	r3, [sp, #32]
 8025944:	0e1b      	lsrs	r3, r3, #24
 8025946:	9311      	str	r3, [sp, #68]	; 0x44
 8025948:	e664      	b.n	8025614 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802594a:	f112 0801 	adds.w	r8, r2, #1
 802594e:	f53f af7b 	bmi.w	8025848 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8025952:	4543      	cmp	r3, r8
 8025954:	f6ff af78 	blt.w	8025848 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8025958:	f11c 0801 	adds.w	r8, ip, #1
 802595c:	f53f af74 	bmi.w	8025848 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8025960:	45c6      	cmp	lr, r8
 8025962:	f6ff af71 	blt.w	8025848 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8025966:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8025968:	9201      	str	r2, [sp, #4]
 802596a:	fa0f f28e 	sxth.w	r2, lr
 802596e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8025972:	e9cd c002 	strd	ip, r0, [sp, #8]
 8025976:	9200      	str	r2, [sp, #0]
 8025978:	b21b      	sxth	r3, r3
 802597a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802597c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802597e:	4639      	mov	r1, r7
 8025980:	f7ff fc48 	bl	8025214 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8025984:	e760      	b.n	8025848 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8025986:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8025988:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802598a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802598e:	1427      	asrs	r7, r4, #16
 8025990:	1433      	asrs	r3, r6, #16
 8025992:	fb01 7303 	mla	r3, r1, r3, r7
 8025996:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 802599a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802599e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80259a2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80259a6:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80259aa:	2a00      	cmp	r2, #0
 80259ac:	f000 8133 	beq.w	8025c16 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x742>
 80259b0:	687d      	ldr	r5, [r7, #4]
 80259b2:	950e      	str	r5, [sp, #56]	; 0x38
 80259b4:	0e2d      	lsrs	r5, r5, #24
 80259b6:	9515      	str	r5, [sp, #84]	; 0x54
 80259b8:	b178      	cbz	r0, 80259da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80259ba:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80259be:	3901      	subs	r1, #1
 80259c0:	0089      	lsls	r1, r1, #2
 80259c2:	3104      	adds	r1, #4
 80259c4:	eb07 0e01 	add.w	lr, r7, r1
 80259c8:	5879      	ldr	r1, [r7, r1]
 80259ca:	9109      	str	r1, [sp, #36]	; 0x24
 80259cc:	0e09      	lsrs	r1, r1, #24
 80259ce:	9112      	str	r1, [sp, #72]	; 0x48
 80259d0:	f8de 1004 	ldr.w	r1, [lr, #4]
 80259d4:	910f      	str	r1, [sp, #60]	; 0x3c
 80259d6:	0e09      	lsrs	r1, r1, #24
 80259d8:	9116      	str	r1, [sp, #88]	; 0x58
 80259da:	b292      	uxth	r2, r2
 80259dc:	b280      	uxth	r0, r0
 80259de:	fb02 f800 	mul.w	r8, r2, r0
 80259e2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80259e6:	0112      	lsls	r2, r2, #4
 80259e8:	eba2 0e08 	sub.w	lr, r2, r8
 80259ec:	b280      	uxth	r0, r0
 80259ee:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80259f2:	9915      	ldr	r1, [sp, #84]	; 0x54
 80259f4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80259f6:	fa1f fe8e 	uxth.w	lr, lr
 80259fa:	1a12      	subs	r2, r2, r0
 80259fc:	b292      	uxth	r2, r2
 80259fe:	fb0e f101 	mul.w	r1, lr, r1
 8025a02:	fb02 110c 	mla	r1, r2, ip, r1
 8025a06:	fb00 1105 	mla	r1, r0, r5, r1
 8025a0a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025a0c:	fb08 1105 	mla	r1, r8, r5, r1
 8025a10:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8025a14:	2900      	cmp	r1, #0
 8025a16:	f000 80f5 	beq.w	8025c04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8025a1a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8025a1e:	d019      	beq.n	8025a54 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8025a20:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8025a24:	fb0c fa0a 	mul.w	sl, ip, sl
 8025a28:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025a2c:	fb0c fc03 	mul.w	ip, ip, r3
 8025a30:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8025a34:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025a38:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8025a3c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8025a40:	4453      	add	r3, sl
 8025a42:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8025a46:	0a1b      	lsrs	r3, r3, #8
 8025a48:	0a3f      	lsrs	r7, r7, #8
 8025a4a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025a4e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8025a52:	433b      	orrs	r3, r7
 8025a54:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025a56:	2dff      	cmp	r5, #255	; 0xff
 8025a58:	d020      	beq.n	8025a9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8025a5a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025a5c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025a60:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025a62:	436f      	muls	r7, r5
 8025a64:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025a66:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025a6a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025a6c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025a70:	fb05 fa0a 	mul.w	sl, r5, sl
 8025a74:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025a78:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025a7c:	44bc      	add	ip, r7
 8025a7e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025a82:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025a86:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025a8a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025a8e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025a92:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025a96:	ea4c 050a 	orr.w	r5, ip, sl
 8025a9a:	950e      	str	r5, [sp, #56]	; 0x38
 8025a9c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025a9e:	2dff      	cmp	r5, #255	; 0xff
 8025aa0:	d020      	beq.n	8025ae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8025aa2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025aa4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025aa8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025aaa:	436f      	muls	r7, r5
 8025aac:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025aae:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025ab2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025ab4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025ab8:	fb05 fa0a 	mul.w	sl, r5, sl
 8025abc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025ac0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025ac4:	44bc      	add	ip, r7
 8025ac6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025aca:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025ace:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025ad2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025ad6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025ada:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025ade:	ea4c 050a 	orr.w	r5, ip, sl
 8025ae2:	9509      	str	r5, [sp, #36]	; 0x24
 8025ae4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025ae6:	2dff      	cmp	r5, #255	; 0xff
 8025ae8:	d020      	beq.n	8025b2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8025aea:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025aec:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025af0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025af2:	436f      	muls	r7, r5
 8025af4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025af6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025afa:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025afc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025b00:	fb05 fa0a 	mul.w	sl, r5, sl
 8025b04:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025b08:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025b0c:	44bc      	add	ip, r7
 8025b0e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025b12:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025b16:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025b1a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025b1e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025b22:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025b26:	ea4c 050a 	orr.w	r5, ip, sl
 8025b2a:	950f      	str	r5, [sp, #60]	; 0x3c
 8025b2c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025b2e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025b32:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025b34:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8025b38:	fb0e f707 	mul.w	r7, lr, r7
 8025b3c:	fb02 770c 	mla	r7, r2, ip, r7
 8025b40:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025b44:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025b46:	fb00 770c 	mla	r7, r0, ip, r7
 8025b4a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025b4e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025b50:	fb08 770c 	mla	r7, r8, ip, r7
 8025b54:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8025b58:	fb0e fe0c 	mul.w	lr, lr, ip
 8025b5c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025b60:	fb02 e303 	mla	r3, r2, r3, lr
 8025b64:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025b66:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025b68:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8025b6c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025b6e:	fb00 330a 	mla	r3, r0, sl, r3
 8025b72:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8025b76:	fb08 3c0c 	mla	ip, r8, ip, r3
 8025b7a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8025b7c:	f8b9 0000 	ldrh.w	r0, [r9]
 8025b80:	4359      	muls	r1, r3
 8025b82:	0a3f      	lsrs	r7, r7, #8
 8025b84:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025b88:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8025b8c:	1c4b      	adds	r3, r1, #1
 8025b8e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8025b92:	ea47 070c 	orr.w	r7, r7, ip
 8025b96:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025b9a:	1202      	asrs	r2, r0, #8
 8025b9c:	0c3b      	lsrs	r3, r7, #16
 8025b9e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8025ba2:	b2c9      	uxtb	r1, r1
 8025ba4:	fb13 f305 	smulbb	r3, r3, r5
 8025ba8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8025bac:	fb02 3201 	mla	r2, r2, r1, r3
 8025bb0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8025bb4:	10c3      	asrs	r3, r0, #3
 8025bb6:	b2ff      	uxtb	r7, r7
 8025bb8:	00c0      	lsls	r0, r0, #3
 8025bba:	b2c0      	uxtb	r0, r0
 8025bbc:	fb17 f705 	smulbb	r7, r7, r5
 8025bc0:	fb00 7001 	mla	r0, r0, r1, r7
 8025bc4:	b292      	uxth	r2, r2
 8025bc6:	fb1c fc05 	smulbb	ip, ip, r5
 8025bca:	b280      	uxth	r0, r0
 8025bcc:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8025bd0:	fb03 c301 	mla	r3, r3, r1, ip
 8025bd4:	1c51      	adds	r1, r2, #1
 8025bd6:	f100 0c01 	add.w	ip, r0, #1
 8025bda:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8025bde:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8025be2:	b29b      	uxth	r3, r3
 8025be4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8025be8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8025bec:	ea4c 0202 	orr.w	r2, ip, r2
 8025bf0:	f103 0c01 	add.w	ip, r3, #1
 8025bf4:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8025bf8:	095b      	lsrs	r3, r3, #5
 8025bfa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025bfe:	431a      	orrs	r2, r3
 8025c00:	f8a9 2000 	strh.w	r2, [r9]
 8025c04:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8025c06:	441c      	add	r4, r3
 8025c08:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8025c0a:	f109 0902 	add.w	r9, r9, #2
 8025c0e:	441e      	add	r6, r3
 8025c10:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025c14:	e647      	b.n	80258a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d2>
 8025c16:	2800      	cmp	r0, #0
 8025c18:	f43f aedf 	beq.w	80259da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8025c1c:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8025c20:	9109      	str	r1, [sp, #36]	; 0x24
 8025c22:	0e09      	lsrs	r1, r1, #24
 8025c24:	9112      	str	r1, [sp, #72]	; 0x48
 8025c26:	e6d8      	b.n	80259da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8025c28:	b01d      	add	sp, #116	; 0x74
 8025c2a:	ecbd 8b08 	vpop	{d8-d11}
 8025c2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08025c34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8025c34:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025c38:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 8025c3c:	fb04 5603 	mla	r6, r4, r3, r5
 8025c40:	2c00      	cmp	r4, #0
 8025c42:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8025c46:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 8025c4a:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 8025c4e:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 8025c52:	db37      	blt.n	8025cc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 8025c54:	45a6      	cmp	lr, r4
 8025c56:	dd35      	ble.n	8025cc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 8025c58:	2d00      	cmp	r5, #0
 8025c5a:	db31      	blt.n	8025cc0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8025c5c:	42ab      	cmp	r3, r5
 8025c5e:	dd2f      	ble.n	8025cc0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8025c60:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8025c64:	1c6e      	adds	r6, r5, #1
 8025c66:	d430      	bmi.n	8025cca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 8025c68:	42b3      	cmp	r3, r6
 8025c6a:	dd2e      	ble.n	8025cca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 8025c6c:	b378      	cbz	r0, 8025cce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9a>
 8025c6e:	f8dc 6004 	ldr.w	r6, [ip, #4]
 8025c72:	3401      	adds	r4, #1
 8025c74:	d42f      	bmi.n	8025cd6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 8025c76:	45a6      	cmp	lr, r4
 8025c78:	dd2d      	ble.n	8025cd6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 8025c7a:	b37f      	cbz	r7, 8025cdc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa8>
 8025c7c:	2d00      	cmp	r5, #0
 8025c7e:	eb0c 0e83 	add.w	lr, ip, r3, lsl #2
 8025c82:	db26      	blt.n	8025cd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 8025c84:	42ab      	cmp	r3, r5
 8025c86:	dd24      	ble.n	8025cd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 8025c88:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8025c8c:	3501      	adds	r5, #1
 8025c8e:	d428      	bmi.n	8025ce2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 8025c90:	42ab      	cmp	r3, r5
 8025c92:	dd26      	ble.n	8025ce2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 8025c94:	b338      	cbz	r0, 8025ce6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb2>
 8025c96:	f8de 3004 	ldr.w	r3, [lr, #4]
 8025c9a:	280f      	cmp	r0, #15
 8025c9c:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8025ca0:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8025ca4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8025ca8:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8025cac:	d801      	bhi.n	8025cb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x7e>
 8025cae:	2f0f      	cmp	r7, #15
 8025cb0:	d91b      	bls.n	8025cea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb6>
 8025cb2:	4b87      	ldr	r3, [pc, #540]	; (8025ed0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 8025cb4:	4a87      	ldr	r2, [pc, #540]	; (8025ed4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 8025cb6:	4888      	ldr	r0, [pc, #544]	; (8025ed8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 8025cb8:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8025cbc:	f001 fd60 	bl	8027780 <__assert_func>
 8025cc0:	2200      	movs	r2, #0
 8025cc2:	e7cf      	b.n	8025c64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x30>
 8025cc4:	2600      	movs	r6, #0
 8025cc6:	4632      	mov	r2, r6
 8025cc8:	e7d3      	b.n	8025c72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 8025cca:	2600      	movs	r6, #0
 8025ccc:	e7d1      	b.n	8025c72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 8025cce:	4606      	mov	r6, r0
 8025cd0:	e7cf      	b.n	8025c72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 8025cd2:	2400      	movs	r4, #0
 8025cd4:	e7da      	b.n	8025c8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x58>
 8025cd6:	2300      	movs	r3, #0
 8025cd8:	461c      	mov	r4, r3
 8025cda:	e7de      	b.n	8025c9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 8025cdc:	463b      	mov	r3, r7
 8025cde:	463c      	mov	r4, r7
 8025ce0:	e7db      	b.n	8025c9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 8025ce2:	2300      	movs	r3, #0
 8025ce4:	e7d9      	b.n	8025c9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 8025ce6:	4603      	mov	r3, r0
 8025ce8:	e7d7      	b.n	8025c9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 8025cea:	b280      	uxth	r0, r0
 8025cec:	b2bf      	uxth	r7, r7
 8025cee:	fb07 fe00 	mul.w	lr, r7, r0
 8025cf2:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8025cf6:	0100      	lsls	r0, r0, #4
 8025cf8:	eba0 0c0e 	sub.w	ip, r0, lr
 8025cfc:	b2bf      	uxth	r7, r7
 8025cfe:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8025d02:	fa1f fc8c 	uxth.w	ip, ip
 8025d06:	1bed      	subs	r5, r5, r7
 8025d08:	b2ad      	uxth	r5, r5
 8025d0a:	fb0c f00a 	mul.w	r0, ip, sl
 8025d0e:	fb0b 0005 	mla	r0, fp, r5, r0
 8025d12:	fb07 0009 	mla	r0, r7, r9, r0
 8025d16:	fb0e 0008 	mla	r0, lr, r8, r0
 8025d1a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8025d1e:	9001      	str	r0, [sp, #4]
 8025d20:	2800      	cmp	r0, #0
 8025d22:	f000 80d1 	beq.w	8025ec8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x294>
 8025d26:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8025d2a:	d018      	beq.n	8025d5e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x12a>
 8025d2c:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8025d30:	fb0b f000 	mul.w	r0, fp, r0
 8025d34:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025d38:	fb0b fb02 	mul.w	fp, fp, r2
 8025d3c:	0a02      	lsrs	r2, r0, #8
 8025d3e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025d42:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8025d46:	4402      	add	r2, r0
 8025d48:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8025d4c:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8025d50:	0a12      	lsrs	r2, r2, #8
 8025d52:	0a00      	lsrs	r0, r0, #8
 8025d54:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025d58:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8025d5c:	4302      	orrs	r2, r0
 8025d5e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8025d62:	d01a      	beq.n	8025d9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x166>
 8025d64:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 8025d68:	fb0a f000 	mul.w	r0, sl, r0
 8025d6c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8025d70:	fb0a fa06 	mul.w	sl, sl, r6
 8025d74:	0a06      	lsrs	r6, r0, #8
 8025d76:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8025d7a:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8025d7e:	4406      	add	r6, r0
 8025d80:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8025d84:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8025d88:	0a36      	lsrs	r6, r6, #8
 8025d8a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025d8e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8025d92:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025d96:	ea46 060a 	orr.w	r6, r6, sl
 8025d9a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8025d9e:	d01b      	beq.n	8025dd8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1a4>
 8025da0:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8025da4:	fb09 fa0a 	mul.w	sl, r9, sl
 8025da8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8025dac:	fb09 f004 	mul.w	r0, r9, r4
 8025db0:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8025db4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8025db8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8025dbc:	f500 7980 	add.w	r9, r0, #256	; 0x100
 8025dc0:	4454      	add	r4, sl
 8025dc2:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 8025dc6:	0a24      	lsrs	r4, r4, #8
 8025dc8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025dcc:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8025dd0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8025dd4:	ea44 0409 	orr.w	r4, r4, r9
 8025dd8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8025ddc:	d01b      	beq.n	8025e16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1e2>
 8025dde:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8025de2:	fb08 f909 	mul.w	r9, r8, r9
 8025de6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025dea:	fb08 f003 	mul.w	r0, r8, r3
 8025dee:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8025df2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025df6:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8025dfa:	f500 7880 	add.w	r8, r0, #256	; 0x100
 8025dfe:	444b      	add	r3, r9
 8025e00:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 8025e04:	0a1b      	lsrs	r3, r3, #8
 8025e06:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8025e0a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025e0e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8025e12:	ea43 0308 	orr.w	r3, r3, r8
 8025e16:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8025e1a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8025e1e:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 8025e22:	fb0c f808 	mul.w	r8, ip, r8
 8025e26:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025e2a:	fb0c f606 	mul.w	r6, ip, r6
 8025e2e:	fb05 8909 	mla	r9, r5, r9, r8
 8025e32:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8025e36:	fb05 6502 	mla	r5, r5, r2, r6
 8025e3a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8025e3e:	fb07 9908 	mla	r9, r7, r8, r9
 8025e42:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8025e46:	fb07 5704 	mla	r7, r7, r4, r5
 8025e4a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025e4e:	8808      	ldrh	r0, [r1, #0]
 8025e50:	fb0e 9808 	mla	r8, lr, r8, r9
 8025e54:	fb0e 7e03 	mla	lr, lr, r3, r7
 8025e58:	9b01      	ldr	r3, [sp, #4]
 8025e5a:	43da      	mvns	r2, r3
 8025e5c:	1203      	asrs	r3, r0, #8
 8025e5e:	b2d2      	uxtb	r2, r2
 8025e60:	10c4      	asrs	r4, r0, #3
 8025e62:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8025e66:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025e6a:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025e6e:	00c0      	lsls	r0, r0, #3
 8025e70:	4353      	muls	r3, r2
 8025e72:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 8025e76:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8025e7a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8025e7e:	b2c0      	uxtb	r0, r0
 8025e80:	ea48 0e0e 	orr.w	lr, r8, lr
 8025e84:	4354      	muls	r4, r2
 8025e86:	4350      	muls	r0, r2
 8025e88:	1c5a      	adds	r2, r3, #1
 8025e8a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8025e8e:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8025e92:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025e96:	1c62      	adds	r2, r4, #1
 8025e98:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025e9c:	ea4f 221e 	mov.w	r2, lr, lsr #8
 8025ea0:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8025ea4:	021b      	lsls	r3, r3, #8
 8025ea6:	00d2      	lsls	r2, r2, #3
 8025ea8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025eac:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8025eb0:	4313      	orrs	r3, r2
 8025eb2:	1c42      	adds	r2, r0, #1
 8025eb4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025eb8:	eb0e 2e10 	add.w	lr, lr, r0, lsr #8
 8025ebc:	f3ce 0ec4 	ubfx	lr, lr, #3, #5
 8025ec0:	ea4e 0e03 	orr.w	lr, lr, r3
 8025ec4:	f8a1 e000 	strh.w	lr, [r1]
 8025ec8:	b003      	add	sp, #12
 8025eca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025ece:	bf00      	nop
 8025ed0:	0802d4b6 	.word	0x0802d4b6
 8025ed4:	0802da86 	.word	0x0802da86
 8025ed8:	0802d53a 	.word	0x0802d53a

08025edc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025edc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025ee0:	ed2d 8b08 	vpush	{d8-d11}
 8025ee4:	b09b      	sub	sp, #108	; 0x6c
 8025ee6:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 8025eea:	9218      	str	r2, [sp, #96]	; 0x60
 8025eec:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8025eee:	9116      	str	r1, [sp, #88]	; 0x58
 8025ef0:	9307      	str	r3, [sp, #28]
 8025ef2:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8025ef6:	9019      	str	r0, [sp, #100]	; 0x64
 8025ef8:	6850      	ldr	r0, [r2, #4]
 8025efa:	6812      	ldr	r2, [r2, #0]
 8025efc:	fb00 1303 	mla	r3, r0, r3, r1
 8025f00:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025f04:	930a      	str	r3, [sp, #40]	; 0x28
 8025f06:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8025f08:	681b      	ldr	r3, [r3, #0]
 8025f0a:	930f      	str	r3, [sp, #60]	; 0x3c
 8025f0c:	eeb0 aa40 	vmov.f32	s20, s0
 8025f10:	eef0 9a60 	vmov.f32	s19, s1
 8025f14:	eeb0 9a41 	vmov.f32	s18, s2
 8025f18:	eeb0 8a62 	vmov.f32	s16, s5
 8025f1c:	eef0 8a43 	vmov.f32	s17, s6
 8025f20:	eef0 ba44 	vmov.f32	s23, s8
 8025f24:	eeb0 ba64 	vmov.f32	s22, s9
 8025f28:	eef0 aa45 	vmov.f32	s21, s10
 8025f2c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025f2e:	2b00      	cmp	r3, #0
 8025f30:	dc03      	bgt.n	8025f3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8025f32:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025f34:	2b00      	cmp	r3, #0
 8025f36:	f340 8386 	ble.w	8026646 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 8025f3a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8025f3c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025f40:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025f44:	1e48      	subs	r0, r1, #1
 8025f46:	1e57      	subs	r7, r2, #1
 8025f48:	9b07      	ldr	r3, [sp, #28]
 8025f4a:	2b00      	cmp	r3, #0
 8025f4c:	f340 8166 	ble.w	802621c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x340>
 8025f50:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8025f54:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025f58:	d406      	bmi.n	8025f68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8025f5a:	4584      	cmp	ip, r0
 8025f5c:	da04      	bge.n	8025f68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8025f5e:	2b00      	cmp	r3, #0
 8025f60:	db02      	blt.n	8025f68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8025f62:	42bb      	cmp	r3, r7
 8025f64:	f2c0 815b 	blt.w	802621e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8025f68:	f11c 0c01 	adds.w	ip, ip, #1
 8025f6c:	f100 814b 	bmi.w	8026206 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 8025f70:	4561      	cmp	r1, ip
 8025f72:	f2c0 8148 	blt.w	8026206 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 8025f76:	3301      	adds	r3, #1
 8025f78:	f100 8145 	bmi.w	8026206 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 8025f7c:	429a      	cmp	r2, r3
 8025f7e:	f2c0 8142 	blt.w	8026206 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 8025f82:	9b07      	ldr	r3, [sp, #28]
 8025f84:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8025f86:	9317      	str	r3, [sp, #92]	; 0x5c
 8025f88:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025f8a:	2b00      	cmp	r3, #0
 8025f8c:	f340 8165 	ble.w	802625a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8025f90:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 8025f92:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8025f94:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8025f98:	689b      	ldr	r3, [r3, #8]
 8025f9a:	1422      	asrs	r2, r4, #16
 8025f9c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8025fa0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8025fa4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025fa8:	f100 81d5 	bmi.w	8026356 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 8025fac:	f103 38ff 	add.w	r8, r3, #4294967295
 8025fb0:	4542      	cmp	r2, r8
 8025fb2:	f280 81d0 	bge.w	8026356 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 8025fb6:	f1bc 0f00 	cmp.w	ip, #0
 8025fba:	f2c0 81cc 	blt.w	8026356 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 8025fbe:	f10e 38ff 	add.w	r8, lr, #4294967295
 8025fc2:	45c4      	cmp	ip, r8
 8025fc4:	f280 81c7 	bge.w	8026356 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 8025fc8:	b21b      	sxth	r3, r3
 8025fca:	fb0c 2203 	mla	r2, ip, r3, r2
 8025fce:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025fd0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8025fd4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8025fd8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8025fdc:	2900      	cmp	r1, #0
 8025fde:	f000 8182 	beq.w	80262e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 8025fe2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8025fe6:	950b      	str	r5, [sp, #44]	; 0x2c
 8025fe8:	0e2d      	lsrs	r5, r5, #24
 8025fea:	9512      	str	r5, [sp, #72]	; 0x48
 8025fec:	b180      	cbz	r0, 8026010 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8025fee:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8025ff2:	3b01      	subs	r3, #1
 8025ff4:	009b      	lsls	r3, r3, #2
 8025ff6:	3304      	adds	r3, #4
 8025ff8:	eb08 0c03 	add.w	ip, r8, r3
 8025ffc:	f858 3003 	ldr.w	r3, [r8, r3]
 8026000:	9308      	str	r3, [sp, #32]
 8026002:	0e1b      	lsrs	r3, r3, #24
 8026004:	9310      	str	r3, [sp, #64]	; 0x40
 8026006:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802600a:	930c      	str	r3, [sp, #48]	; 0x30
 802600c:	0e1b      	lsrs	r3, r3, #24
 802600e:	9313      	str	r3, [sp, #76]	; 0x4c
 8026010:	b289      	uxth	r1, r1
 8026012:	b280      	uxth	r0, r0
 8026014:	fb01 f900 	mul.w	r9, r1, r0
 8026018:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802601c:	0109      	lsls	r1, r1, #4
 802601e:	eba1 0809 	sub.w	r8, r1, r9
 8026022:	b280      	uxth	r0, r0
 8026024:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8026028:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802602a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802602c:	fa1f f888 	uxth.w	r8, r8
 8026030:	1a09      	subs	r1, r1, r0
 8026032:	b289      	uxth	r1, r1
 8026034:	fb08 f303 	mul.w	r3, r8, r3
 8026038:	fb01 330e 	mla	r3, r1, lr, r3
 802603c:	fb00 3305 	mla	r3, r0, r5, r3
 8026040:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8026042:	fb09 3305 	mla	r3, r9, r5, r3
 8026046:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802604a:	2b00      	cmp	r3, #0
 802604c:	f000 80d2 	beq.w	80261f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8026050:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8026054:	d01b      	beq.n	802608e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 8026056:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802605a:	fb0e fa0a 	mul.w	sl, lr, sl
 802605e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8026062:	fb0e fe02 	mul.w	lr, lr, r2
 8026066:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802606a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802606e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8026072:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8026076:	4452      	add	r2, sl
 8026078:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802607c:	0a12      	lsrs	r2, r2, #8
 802607e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026082:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8026086:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802608a:	ea42 020c 	orr.w	r2, r2, ip
 802608e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8026090:	2dff      	cmp	r5, #255	; 0xff
 8026092:	d021      	beq.n	80260d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8026094:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8026096:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802609a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802609c:	fb05 fb0b 	mul.w	fp, r5, fp
 80260a0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80260a2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80260a6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80260a8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80260ac:	fb05 fa0a 	mul.w	sl, r5, sl
 80260b0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80260b4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80260b8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80260bc:	44de      	add	lr, fp
 80260be:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80260c2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80260c6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80260ca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80260ce:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80260d2:	ea4e 050a 	orr.w	r5, lr, sl
 80260d6:	950b      	str	r5, [sp, #44]	; 0x2c
 80260d8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80260da:	2dff      	cmp	r5, #255	; 0xff
 80260dc:	d021      	beq.n	8026122 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 80260de:	9d08      	ldr	r5, [sp, #32]
 80260e0:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80260e4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80260e6:	fb05 fb0b 	mul.w	fp, r5, fp
 80260ea:	9d08      	ldr	r5, [sp, #32]
 80260ec:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80260f0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80260f2:	fb05 fa0e 	mul.w	sl, r5, lr
 80260f6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80260fa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80260fe:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8026102:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8026106:	44de      	add	lr, fp
 8026108:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802610c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026110:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026114:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026118:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802611c:	ea4e 050a 	orr.w	r5, lr, sl
 8026120:	9508      	str	r5, [sp, #32]
 8026122:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8026124:	2dff      	cmp	r5, #255	; 0xff
 8026126:	d021      	beq.n	802616c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8026128:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802612a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802612e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8026130:	fb05 fb0b 	mul.w	fp, r5, fp
 8026134:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8026136:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802613a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802613c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8026140:	fb05 fa0a 	mul.w	sl, r5, sl
 8026144:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026148:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802614c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8026150:	44de      	add	lr, fp
 8026152:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8026156:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802615a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802615e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026162:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026166:	ea4e 050a 	orr.w	r5, lr, sl
 802616a:	950c      	str	r5, [sp, #48]	; 0x30
 802616c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802616e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8026172:	9d08      	ldr	r5, [sp, #32]
 8026174:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8026178:	fb08 fc0c 	mul.w	ip, r8, ip
 802617c:	fb01 cc0e 	mla	ip, r1, lr, ip
 8026180:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8026184:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8026186:	fb00 cc0e 	mla	ip, r0, lr, ip
 802618a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802618e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8026190:	fb09 cc0e 	mla	ip, r9, lr, ip
 8026194:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8026198:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802619c:	fb08 f80e 	mul.w	r8, r8, lr
 80261a0:	fb01 8202 	mla	r2, r1, r2, r8
 80261a4:	9908      	ldr	r1, [sp, #32]
 80261a6:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80261aa:	990c      	ldr	r1, [sp, #48]	; 0x30
 80261ac:	fb00 220a 	mla	r2, r0, sl, r2
 80261b0:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 80261b4:	fb09 2900 	mla	r9, r9, r0, r2
 80261b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80261bc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80261c0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80261c4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80261c8:	ea4c 0c09 	orr.w	ip, ip, r9
 80261cc:	2bff      	cmp	r3, #255	; 0xff
 80261ce:	ea4f 221c 	mov.w	r2, ip, lsr #8
 80261d2:	f040 8091 	bne.w	80262f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 80261d6:	ea4f 135c 	mov.w	r3, ip, lsr #5
 80261da:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 80261de:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80261e2:	f022 0207 	bic.w	r2, r2, #7
 80261e6:	431a      	orrs	r2, r3
 80261e8:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80261ec:	ea4c 0c02 	orr.w	ip, ip, r2
 80261f0:	f8a7 c000 	strh.w	ip, [r7]
 80261f4:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80261f6:	441c      	add	r4, r3
 80261f8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80261fa:	441e      	add	r6, r3
 80261fc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80261fe:	3b01      	subs	r3, #1
 8026200:	3702      	adds	r7, #2
 8026202:	9317      	str	r3, [sp, #92]	; 0x5c
 8026204:	e6c0      	b.n	8025f88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8026206:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8026208:	441c      	add	r4, r3
 802620a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802620c:	441e      	add	r6, r3
 802620e:	9b07      	ldr	r3, [sp, #28]
 8026210:	3b01      	subs	r3, #1
 8026212:	9307      	str	r3, [sp, #28]
 8026214:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026216:	3302      	adds	r3, #2
 8026218:	930a      	str	r3, [sp, #40]	; 0x28
 802621a:	e695      	b.n	8025f48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802621c:	d024      	beq.n	8026268 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 802621e:	9b07      	ldr	r3, [sp, #28]
 8026220:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8026222:	3b01      	subs	r3, #1
 8026224:	fb00 4003 	mla	r0, r0, r3, r4
 8026228:	1400      	asrs	r0, r0, #16
 802622a:	f53f aeaa 	bmi.w	8025f82 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802622e:	3901      	subs	r1, #1
 8026230:	4288      	cmp	r0, r1
 8026232:	f6bf aea6 	bge.w	8025f82 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8026236:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8026238:	fb01 6303 	mla	r3, r1, r3, r6
 802623c:	141b      	asrs	r3, r3, #16
 802623e:	f53f aea0 	bmi.w	8025f82 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8026242:	3a01      	subs	r2, #1
 8026244:	4293      	cmp	r3, r2
 8026246:	f6bf ae9c 	bge.w	8025f82 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802624a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802624e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8026252:	f1bb 0f00 	cmp.w	fp, #0
 8026256:	f300 809a 	bgt.w	802638e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 802625a:	9b07      	ldr	r3, [sp, #28]
 802625c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8026260:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026262:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8026266:	930a      	str	r3, [sp, #40]	; 0x28
 8026268:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802626a:	2b00      	cmp	r3, #0
 802626c:	f340 81eb 	ble.w	8026646 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 8026270:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8026274:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026278:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802627c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802627e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8026282:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8026286:	ee29 7aa7 	vmul.f32	s14, s19, s15
 802628a:	eef0 6a48 	vmov.f32	s13, s16
 802628e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8026292:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026296:	ee37 8a48 	vsub.f32	s16, s14, s16
 802629a:	ee16 4a90 	vmov	r4, s13
 802629e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80262a2:	eef0 6a68 	vmov.f32	s13, s17
 80262a6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80262aa:	ee18 2a10 	vmov	r2, s16
 80262ae:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80262b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80262b6:	ee18 2a90 	vmov	r2, s17
 80262ba:	932f      	str	r3, [sp, #188]	; 0xbc
 80262bc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80262be:	fb92 f3f3 	sdiv	r3, r2, r3
 80262c2:	9330      	str	r3, [sp, #192]	; 0xc0
 80262c4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80262c6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80262c8:	3b01      	subs	r3, #1
 80262ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80262ce:	9316      	str	r3, [sp, #88]	; 0x58
 80262d0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80262d2:	bf08      	it	eq
 80262d4:	4613      	moveq	r3, r2
 80262d6:	ee16 6a90 	vmov	r6, s13
 80262da:	9307      	str	r3, [sp, #28]
 80262dc:	eef0 8a67 	vmov.f32	s17, s15
 80262e0:	eeb0 8a47 	vmov.f32	s16, s14
 80262e4:	e622      	b.n	8025f2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80262e6:	2800      	cmp	r0, #0
 80262e8:	f43f ae92 	beq.w	8026010 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 80262ec:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80262f0:	9308      	str	r3, [sp, #32]
 80262f2:	0e1b      	lsrs	r3, r3, #24
 80262f4:	9310      	str	r3, [sp, #64]	; 0x40
 80262f6:	e68b      	b.n	8026010 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 80262f8:	8839      	ldrh	r1, [r7, #0]
 80262fa:	4dd5      	ldr	r5, [pc, #852]	; (8026650 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 80262fc:	43db      	mvns	r3, r3
 80262fe:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8026302:	fa5f f883 	uxtb.w	r8, r3
 8026306:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 802630a:	fb0e fe08 	mul.w	lr, lr, r8
 802630e:	10c8      	asrs	r0, r1, #3
 8026310:	00cb      	lsls	r3, r1, #3
 8026312:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8026316:	f10e 0101 	add.w	r1, lr, #1
 802631a:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802631e:	fb00 f008 	mul.w	r0, r0, r8
 8026322:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8026326:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 802632a:	f100 0e01 	add.w	lr, r0, #1
 802632e:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8026332:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8026336:	b2db      	uxtb	r3, r3
 8026338:	b2c9      	uxtb	r1, r1
 802633a:	00d2      	lsls	r2, r2, #3
 802633c:	fb03 f308 	mul.w	r3, r3, r8
 8026340:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8026344:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026348:	430a      	orrs	r2, r1
 802634a:	1c59      	adds	r1, r3, #1
 802634c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8026350:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8026354:	e748      	b.n	80261e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8026356:	f112 0801 	adds.w	r8, r2, #1
 802635a:	f53f af4b 	bmi.w	80261f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802635e:	4543      	cmp	r3, r8
 8026360:	f6ff af48 	blt.w	80261f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8026364:	f11c 0801 	adds.w	r8, ip, #1
 8026368:	f53f af44 	bmi.w	80261f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802636c:	45c6      	cmp	lr, r8
 802636e:	f6ff af41 	blt.w	80261f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8026372:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8026376:	fa0f f28e 	sxth.w	r2, lr
 802637a:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802637e:	9200      	str	r2, [sp, #0]
 8026380:	b21b      	sxth	r3, r3
 8026382:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026384:	9819      	ldr	r0, [sp, #100]	; 0x64
 8026386:	4639      	mov	r1, r7
 8026388:	f7ff fc54 	bl	8025c34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 802638c:	e732      	b.n	80261f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802638e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8026390:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8026392:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8026396:	1421      	asrs	r1, r4, #16
 8026398:	1433      	asrs	r3, r6, #16
 802639a:	fb07 1303 	mla	r3, r7, r3, r1
 802639e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80263a0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80263a4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80263a8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80263ac:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80263b0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80263b4:	2a00      	cmp	r2, #0
 80263b6:	f000 8107 	beq.w	80265c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ec>
 80263ba:	684d      	ldr	r5, [r1, #4]
 80263bc:	950d      	str	r5, [sp, #52]	; 0x34
 80263be:	0e2d      	lsrs	r5, r5, #24
 80263c0:	9514      	str	r5, [sp, #80]	; 0x50
 80263c2:	b178      	cbz	r0, 80263e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 80263c4:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80263c8:	3f01      	subs	r7, #1
 80263ca:	00bf      	lsls	r7, r7, #2
 80263cc:	3704      	adds	r7, #4
 80263ce:	eb01 0e07 	add.w	lr, r1, r7
 80263d2:	59c9      	ldr	r1, [r1, r7]
 80263d4:	9109      	str	r1, [sp, #36]	; 0x24
 80263d6:	0e09      	lsrs	r1, r1, #24
 80263d8:	9111      	str	r1, [sp, #68]	; 0x44
 80263da:	f8de 1004 	ldr.w	r1, [lr, #4]
 80263de:	910e      	str	r1, [sp, #56]	; 0x38
 80263e0:	0e09      	lsrs	r1, r1, #24
 80263e2:	9115      	str	r1, [sp, #84]	; 0x54
 80263e4:	b292      	uxth	r2, r2
 80263e6:	b280      	uxth	r0, r0
 80263e8:	fb02 f900 	mul.w	r9, r2, r0
 80263ec:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80263f0:	0112      	lsls	r2, r2, #4
 80263f2:	eba2 0e09 	sub.w	lr, r2, r9
 80263f6:	b280      	uxth	r0, r0
 80263f8:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80263fc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80263fe:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8026400:	fa1f fe8e 	uxth.w	lr, lr
 8026404:	1a09      	subs	r1, r1, r0
 8026406:	b289      	uxth	r1, r1
 8026408:	fb0e f202 	mul.w	r2, lr, r2
 802640c:	fb01 220c 	mla	r2, r1, ip, r2
 8026410:	fb00 2205 	mla	r2, r0, r5, r2
 8026414:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8026416:	fb09 2205 	mla	r2, r9, r5, r2
 802641a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802641e:	2a00      	cmp	r2, #0
 8026420:	f000 80c9 	beq.w	80265b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8026424:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8026428:	d019      	beq.n	802645e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x582>
 802642a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802642e:	fb0c fa0a 	mul.w	sl, ip, sl
 8026432:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8026436:	fb0c fc03 	mul.w	ip, ip, r3
 802643a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802643e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8026442:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8026446:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802644a:	4453      	add	r3, sl
 802644c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8026450:	0a1b      	lsrs	r3, r3, #8
 8026452:	0a3f      	lsrs	r7, r7, #8
 8026454:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8026458:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802645c:	433b      	orrs	r3, r7
 802645e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8026460:	2dff      	cmp	r5, #255	; 0xff
 8026462:	d020      	beq.n	80264a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ca>
 8026464:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8026466:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802646a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802646c:	436f      	muls	r7, r5
 802646e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8026470:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8026474:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8026476:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802647a:	fb05 fa0a 	mul.w	sl, r5, sl
 802647e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8026482:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026486:	44bc      	add	ip, r7
 8026488:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802648c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8026490:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026494:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026498:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802649c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80264a0:	ea4c 050a 	orr.w	r5, ip, sl
 80264a4:	950d      	str	r5, [sp, #52]	; 0x34
 80264a6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80264a8:	2dff      	cmp	r5, #255	; 0xff
 80264aa:	d020      	beq.n	80264ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x612>
 80264ac:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80264ae:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80264b2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80264b4:	436f      	muls	r7, r5
 80264b6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80264b8:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80264bc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80264be:	fb05 fa0c 	mul.w	sl, r5, ip
 80264c2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80264c6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80264ca:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80264ce:	44bc      	add	ip, r7
 80264d0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80264d4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80264d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80264dc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80264e0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80264e4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80264e8:	ea4c 050a 	orr.w	r5, ip, sl
 80264ec:	9509      	str	r5, [sp, #36]	; 0x24
 80264ee:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80264f0:	2dff      	cmp	r5, #255	; 0xff
 80264f2:	d020      	beq.n	8026536 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65a>
 80264f4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80264f6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80264fa:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80264fc:	436f      	muls	r7, r5
 80264fe:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026500:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8026504:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8026506:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802650a:	fb05 fa0a 	mul.w	sl, r5, sl
 802650e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8026512:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026516:	44bc      	add	ip, r7
 8026518:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802651c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8026520:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026524:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026528:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802652c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026530:	ea4c 050a 	orr.w	r5, ip, sl
 8026534:	950e      	str	r5, [sp, #56]	; 0x38
 8026536:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8026538:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802653c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802653e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8026542:	fb0e f707 	mul.w	r7, lr, r7
 8026546:	fb01 770c 	mla	r7, r1, ip, r7
 802654a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802654e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026550:	fb00 770c 	mla	r7, r0, ip, r7
 8026554:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8026558:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802655a:	fb09 770c 	mla	r7, r9, ip, r7
 802655e:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8026562:	fb0e fe0c 	mul.w	lr, lr, ip
 8026566:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802656a:	fb01 e303 	mla	r3, r1, r3, lr
 802656e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8026570:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8026574:	990e      	ldr	r1, [sp, #56]	; 0x38
 8026576:	fb00 330a 	mla	r3, r0, sl, r3
 802657a:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 802657e:	fb09 3c0c 	mla	ip, r9, ip, r3
 8026582:	0a3f      	lsrs	r7, r7, #8
 8026584:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026588:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802658c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8026590:	ea47 070c 	orr.w	r7, r7, ip
 8026594:	2aff      	cmp	r2, #255	; 0xff
 8026596:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802659a:	d11e      	bne.n	80265da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 802659c:	097a      	lsrs	r2, r7, #5
 802659e:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80265a2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80265a6:	f023 0307 	bic.w	r3, r3, #7
 80265aa:	4313      	orrs	r3, r2
 80265ac:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80265b0:	431f      	orrs	r7, r3
 80265b2:	f8a8 7000 	strh.w	r7, [r8]
 80265b6:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80265b8:	441c      	add	r4, r3
 80265ba:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80265bc:	f108 0802 	add.w	r8, r8, #2
 80265c0:	441e      	add	r6, r3
 80265c2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80265c6:	e644      	b.n	8026252 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 80265c8:	2800      	cmp	r0, #0
 80265ca:	f43f af0b 	beq.w	80263e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 80265ce:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80265d2:	9109      	str	r1, [sp, #36]	; 0x24
 80265d4:	0e09      	lsrs	r1, r1, #24
 80265d6:	9111      	str	r1, [sp, #68]	; 0x44
 80265d8:	e704      	b.n	80263e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 80265da:	f8b8 1000 	ldrh.w	r1, [r8]
 80265de:	43d2      	mvns	r2, r2
 80265e0:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80265e4:	fa5f fe82 	uxtb.w	lr, r2
 80265e8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80265ec:	fb0c fc0e 	mul.w	ip, ip, lr
 80265f0:	10c8      	asrs	r0, r1, #3
 80265f2:	00ca      	lsls	r2, r1, #3
 80265f4:	f10c 0101 	add.w	r1, ip, #1
 80265f8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80265fc:	0c39      	lsrs	r1, r7, #16
 80265fe:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026602:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8026606:	4912      	ldr	r1, [pc, #72]	; (8026650 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 8026608:	fb00 f00e 	mul.w	r0, r0, lr
 802660c:	fa5f fc8c 	uxtb.w	ip, ip
 8026610:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8026614:	b2d2      	uxtb	r2, r2
 8026616:	1c41      	adds	r1, r0, #1
 8026618:	fb02 f20e 	mul.w	r2, r2, lr
 802661c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8026620:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8026624:	1c51      	adds	r1, r2, #1
 8026626:	00c0      	lsls	r0, r0, #3
 8026628:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802662c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026630:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8026634:	ea4c 0c00 	orr.w	ip, ip, r0
 8026638:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 802663c:	ea47 0c0c 	orr.w	ip, r7, ip
 8026640:	f8a8 c000 	strh.w	ip, [r8]
 8026644:	e7b7      	b.n	80265b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8026646:	b01b      	add	sp, #108	; 0x6c
 8026648:	ecbd 8b08 	vpop	{d8-d11}
 802664c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026650:	fffff800 	.word	0xfffff800

08026654 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8026654:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026658:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 802665c:	2c00      	cmp	r4, #0
 802665e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8026662:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8026666:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 802666a:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 802666e:	fb04 ce03 	mla	lr, r4, r3, ip
 8026672:	db60      	blt.n	8026736 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 8026674:	45a1      	cmp	r9, r4
 8026676:	dd5e      	ble.n	8026736 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 8026678:	f1bc 0f00 	cmp.w	ip, #0
 802667c:	db59      	blt.n	8026732 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 802667e:	45e0      	cmp	r8, ip
 8026680:	dd57      	ble.n	8026732 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 8026682:	ea4f 005e 	mov.w	r0, lr, lsr #1
 8026686:	f01e 0f01 	tst.w	lr, #1
 802668a:	5c16      	ldrb	r6, [r2, r0]
 802668c:	bf0c      	ite	eq
 802668e:	f006 060f 	andeq.w	r6, r6, #15
 8026692:	1136      	asrne	r6, r6, #4
 8026694:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8026698:	b2f6      	uxtb	r6, r6
 802669a:	f11c 0001 	adds.w	r0, ip, #1
 802669e:	d44d      	bmi.n	802673c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 80266a0:	4580      	cmp	r8, r0
 80266a2:	dd4b      	ble.n	802673c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 80266a4:	2d00      	cmp	r5, #0
 80266a6:	d04b      	beq.n	8026740 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 80266a8:	f10e 0a01 	add.w	sl, lr, #1
 80266ac:	ea4f 005a 	mov.w	r0, sl, lsr #1
 80266b0:	f01a 0f01 	tst.w	sl, #1
 80266b4:	5c10      	ldrb	r0, [r2, r0]
 80266b6:	bf0c      	ite	eq
 80266b8:	f000 000f 	andeq.w	r0, r0, #15
 80266bc:	1100      	asrne	r0, r0, #4
 80266be:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80266c2:	b2c0      	uxtb	r0, r0
 80266c4:	3401      	adds	r4, #1
 80266c6:	d43f      	bmi.n	8026748 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 80266c8:	45a1      	cmp	r9, r4
 80266ca:	dd3d      	ble.n	8026748 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 80266cc:	2f00      	cmp	r7, #0
 80266ce:	f000 80a8 	beq.w	8026822 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ce>
 80266d2:	f1bc 0f00 	cmp.w	ip, #0
 80266d6:	db35      	blt.n	8026744 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 80266d8:	45e0      	cmp	r8, ip
 80266da:	dd33      	ble.n	8026744 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 80266dc:	eb03 090e 	add.w	r9, r3, lr
 80266e0:	ea4f 0459 	mov.w	r4, r9, lsr #1
 80266e4:	f019 0f01 	tst.w	r9, #1
 80266e8:	5d14      	ldrb	r4, [r2, r4]
 80266ea:	bf0c      	ite	eq
 80266ec:	f004 040f 	andeq.w	r4, r4, #15
 80266f0:	1124      	asrne	r4, r4, #4
 80266f2:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80266f6:	b2e4      	uxtb	r4, r4
 80266f8:	f11c 0c01 	adds.w	ip, ip, #1
 80266fc:	d427      	bmi.n	802674e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 80266fe:	45e0      	cmp	r8, ip
 8026700:	dd25      	ble.n	802674e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 8026702:	b335      	cbz	r5, 8026752 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 8026704:	3301      	adds	r3, #1
 8026706:	449e      	add	lr, r3
 8026708:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802670c:	f01e 0f01 	tst.w	lr, #1
 8026710:	5cd2      	ldrb	r2, [r2, r3]
 8026712:	bf0c      	ite	eq
 8026714:	f002 020f 	andeq.w	r2, r2, #15
 8026718:	1112      	asrne	r2, r2, #4
 802671a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802671e:	b2d3      	uxtb	r3, r2
 8026720:	2d0f      	cmp	r5, #15
 8026722:	d917      	bls.n	8026754 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 8026724:	4b42      	ldr	r3, [pc, #264]	; (8026830 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1dc>)
 8026726:	4a43      	ldr	r2, [pc, #268]	; (8026834 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e0>)
 8026728:	4843      	ldr	r0, [pc, #268]	; (8026838 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e4>)
 802672a:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 802672e:	f001 f827 	bl	8027780 <__assert_func>
 8026732:	2600      	movs	r6, #0
 8026734:	e7b1      	b.n	802669a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 8026736:	2000      	movs	r0, #0
 8026738:	4606      	mov	r6, r0
 802673a:	e7c3      	b.n	80266c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 802673c:	2000      	movs	r0, #0
 802673e:	e7c1      	b.n	80266c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8026740:	4628      	mov	r0, r5
 8026742:	e7bf      	b.n	80266c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8026744:	2400      	movs	r4, #0
 8026746:	e7d7      	b.n	80266f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 8026748:	2300      	movs	r3, #0
 802674a:	461c      	mov	r4, r3
 802674c:	e7e8      	b.n	8026720 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 802674e:	2300      	movs	r3, #0
 8026750:	e7e6      	b.n	8026720 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8026752:	462b      	mov	r3, r5
 8026754:	2f0f      	cmp	r7, #15
 8026756:	d8e5      	bhi.n	8026724 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8026758:	b2ad      	uxth	r5, r5
 802675a:	b2bf      	uxth	r7, r7
 802675c:	fb05 fc07 	mul.w	ip, r5, r7
 8026760:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 8026764:	012d      	lsls	r5, r5, #4
 8026766:	b2bf      	uxth	r7, r7
 8026768:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 802676c:	eba5 050c 	sub.w	r5, r5, ip
 8026770:	1bd2      	subs	r2, r2, r7
 8026772:	b2ad      	uxth	r5, r5
 8026774:	b292      	uxth	r2, r2
 8026776:	4368      	muls	r0, r5
 8026778:	fb06 0002 	mla	r0, r6, r2, r0
 802677c:	fb07 0404 	mla	r4, r7, r4, r0
 8026780:	fb0c 4303 	mla	r3, ip, r3, r4
 8026784:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026788:	b1b3      	cbz	r3, 80267b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 802678a:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 802678e:	435a      	muls	r2, r3
 8026790:	1c53      	adds	r3, r2, #1
 8026792:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026796:	4a29      	ldr	r2, [pc, #164]	; (802683c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e8>)
 8026798:	121b      	asrs	r3, r3, #8
 802679a:	6812      	ldr	r2, [r2, #0]
 802679c:	2bff      	cmp	r3, #255	; 0xff
 802679e:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80267a2:	d10b      	bne.n	80267bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x168>
 80267a4:	4b26      	ldr	r3, [pc, #152]	; (8026840 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ec>)
 80267a6:	0950      	lsrs	r0, r2, #5
 80267a8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80267ac:	4033      	ands	r3, r6
 80267ae:	4318      	orrs	r0, r3
 80267b0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80267b4:	4302      	orrs	r2, r0
 80267b6:	800a      	strh	r2, [r1, #0]
 80267b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80267bc:	880d      	ldrh	r5, [r1, #0]
 80267be:	b29f      	uxth	r7, r3
 80267c0:	122c      	asrs	r4, r5, #8
 80267c2:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80267c6:	43db      	mvns	r3, r3
 80267c8:	b2db      	uxtb	r3, r3
 80267ca:	fb10 f007 	smulbb	r0, r0, r7
 80267ce:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80267d2:	fb04 0403 	mla	r4, r4, r3, r0
 80267d6:	b2f6      	uxtb	r6, r6
 80267d8:	10e8      	asrs	r0, r5, #3
 80267da:	b2d2      	uxtb	r2, r2
 80267dc:	00ed      	lsls	r5, r5, #3
 80267de:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80267e2:	fb12 f207 	smulbb	r2, r2, r7
 80267e6:	fb16 f607 	smulbb	r6, r6, r7
 80267ea:	b2ed      	uxtb	r5, r5
 80267ec:	b2a4      	uxth	r4, r4
 80267ee:	fb00 6603 	mla	r6, r0, r3, r6
 80267f2:	fb05 2303 	mla	r3, r5, r3, r2
 80267f6:	b29a      	uxth	r2, r3
 80267f8:	1c63      	adds	r3, r4, #1
 80267fa:	b2b0      	uxth	r0, r6
 80267fc:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8026800:	1c53      	adds	r3, r2, #1
 8026802:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026806:	1c42      	adds	r2, r0, #1
 8026808:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802680c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8026810:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8026814:	0940      	lsrs	r0, r0, #5
 8026816:	4323      	orrs	r3, r4
 8026818:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802681c:	4303      	orrs	r3, r0
 802681e:	800b      	strh	r3, [r1, #0]
 8026820:	e7ca      	b.n	80267b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 8026822:	2d0f      	cmp	r5, #15
 8026824:	f63f af7e 	bhi.w	8026724 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8026828:	463b      	mov	r3, r7
 802682a:	463c      	mov	r4, r7
 802682c:	e794      	b.n	8026758 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 802682e:	bf00      	nop
 8026830:	0802d4b6 	.word	0x0802d4b6
 8026834:	0802da86 	.word	0x0802da86
 8026838:	0802d53a 	.word	0x0802d53a
 802683c:	2002bd3c 	.word	0x2002bd3c
 8026840:	00fff800 	.word	0x00fff800

08026844 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026844:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026848:	ed2d 8b08 	vpush	{d8-d11}
 802684c:	b097      	sub	sp, #92	; 0x5c
 802684e:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 8026852:	9214      	str	r2, [sp, #80]	; 0x50
 8026854:	9309      	str	r3, [sp, #36]	; 0x24
 8026856:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8026858:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 802685c:	910d      	str	r1, [sp, #52]	; 0x34
 802685e:	930f      	str	r3, [sp, #60]	; 0x3c
 8026860:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8026864:	9015      	str	r0, [sp, #84]	; 0x54
 8026866:	6850      	ldr	r0, [r2, #4]
 8026868:	6812      	ldr	r2, [r2, #0]
 802686a:	fb00 1303 	mla	r3, r0, r3, r1
 802686e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8026872:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8026874:	689b      	ldr	r3, [r3, #8]
 8026876:	3301      	adds	r3, #1
 8026878:	f023 0301 	bic.w	r3, r3, #1
 802687c:	930a      	str	r3, [sp, #40]	; 0x28
 802687e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8026880:	681f      	ldr	r7, [r3, #0]
 8026882:	eeb0 aa40 	vmov.f32	s20, s0
 8026886:	eef0 9a60 	vmov.f32	s19, s1
 802688a:	eeb0 9a41 	vmov.f32	s18, s2
 802688e:	eeb0 8a62 	vmov.f32	s16, s5
 8026892:	eef0 8a43 	vmov.f32	s17, s6
 8026896:	eef0 ba44 	vmov.f32	s23, s8
 802689a:	eeb0 ba64 	vmov.f32	s22, s9
 802689e:	eef0 aa45 	vmov.f32	s21, s10
 80268a2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80268a4:	2b00      	cmp	r3, #0
 80268a6:	dc03      	bgt.n	80268b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80268a8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80268aa:	2b00      	cmp	r3, #0
 80268ac:	f340 8287 	ble.w	8026dbe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 80268b0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80268b2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80268b6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80268ba:	1e48      	subs	r0, r1, #1
 80268bc:	f102 3cff 	add.w	ip, r2, #4294967295
 80268c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80268c2:	2b00      	cmp	r3, #0
 80268c4:	f340 80c4 	ble.w	8026a50 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 80268c8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80268cc:	ea4f 4326 	mov.w	r3, r6, asr #16
 80268d0:	d406      	bmi.n	80268e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80268d2:	4586      	cmp	lr, r0
 80268d4:	da04      	bge.n	80268e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80268d6:	2b00      	cmp	r3, #0
 80268d8:	db02      	blt.n	80268e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80268da:	4563      	cmp	r3, ip
 80268dc:	f2c0 80b9 	blt.w	8026a52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 80268e0:	f11e 0e01 	adds.w	lr, lr, #1
 80268e4:	f100 80aa 	bmi.w	8026a3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 80268e8:	4571      	cmp	r1, lr
 80268ea:	f2c0 80a7 	blt.w	8026a3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 80268ee:	3301      	adds	r3, #1
 80268f0:	f100 80a4 	bmi.w	8026a3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 80268f4:	429a      	cmp	r2, r3
 80268f6:	f2c0 80a1 	blt.w	8026a3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 80268fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80268fc:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8026900:	930e      	str	r3, [sp, #56]	; 0x38
 8026902:	46c8      	mov	r8, r9
 8026904:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8026906:	2b00      	cmp	r3, #0
 8026908:	f340 80c3 	ble.w	8026a92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 802690c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802690e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8026912:	1423      	asrs	r3, r4, #16
 8026914:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026918:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802691c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8026920:	f100 814d 	bmi.w	8026bbe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8026924:	f10c 3bff 	add.w	fp, ip, #4294967295
 8026928:	455b      	cmp	r3, fp
 802692a:	f280 8148 	bge.w	8026bbe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802692e:	2800      	cmp	r0, #0
 8026930:	f2c0 8145 	blt.w	8026bbe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8026934:	f10e 3bff 	add.w	fp, lr, #4294967295
 8026938:	4558      	cmp	r0, fp
 802693a:	f280 8140 	bge.w	8026bbe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802693e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8026940:	fb00 3305 	mla	r3, r0, r5, r3
 8026944:	0858      	lsrs	r0, r3, #1
 8026946:	07dd      	lsls	r5, r3, #31
 8026948:	f817 c000 	ldrb.w	ip, [r7, r0]
 802694c:	bf54      	ite	pl
 802694e:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026952:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026956:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802695a:	fa5f fc8c 	uxtb.w	ip, ip
 802695e:	2a00      	cmp	r2, #0
 8026960:	f000 80db 	beq.w	8026b1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8026964:	1c58      	adds	r0, r3, #1
 8026966:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 802696a:	07c0      	lsls	r0, r0, #31
 802696c:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8026970:	bf54      	ite	pl
 8026972:	f00e 0e0f 	andpl.w	lr, lr, #15
 8026976:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 802697a:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802697e:	fa5f f08e 	uxtb.w	r0, lr
 8026982:	9010      	str	r0, [sp, #64]	; 0x40
 8026984:	b1c9      	cbz	r1, 80269ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026986:	4453      	add	r3, sl
 8026988:	0858      	lsrs	r0, r3, #1
 802698a:	07dd      	lsls	r5, r3, #31
 802698c:	5c38      	ldrb	r0, [r7, r0]
 802698e:	bf54      	ite	pl
 8026990:	f000 000f 	andpl.w	r0, r0, #15
 8026994:	1100      	asrmi	r0, r0, #4
 8026996:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802699a:	3301      	adds	r3, #1
 802699c:	b2c0      	uxtb	r0, r0
 802699e:	900b      	str	r0, [sp, #44]	; 0x2c
 80269a0:	0858      	lsrs	r0, r3, #1
 80269a2:	07dd      	lsls	r5, r3, #31
 80269a4:	f817 e000 	ldrb.w	lr, [r7, r0]
 80269a8:	bf54      	ite	pl
 80269aa:	f00e 030f 	andpl.w	r3, lr, #15
 80269ae:	ea4f 132e 	movmi.w	r3, lr, asr #4
 80269b2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80269b6:	b2db      	uxtb	r3, r3
 80269b8:	9311      	str	r3, [sp, #68]	; 0x44
 80269ba:	b292      	uxth	r2, r2
 80269bc:	b289      	uxth	r1, r1
 80269be:	fb02 f301 	mul.w	r3, r2, r1
 80269c2:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80269c6:	0112      	lsls	r2, r2, #4
 80269c8:	b289      	uxth	r1, r1
 80269ca:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80269ce:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80269d0:	1ad2      	subs	r2, r2, r3
 80269d2:	1a40      	subs	r0, r0, r1
 80269d4:	b292      	uxth	r2, r2
 80269d6:	436a      	muls	r2, r5
 80269d8:	b280      	uxth	r0, r0
 80269da:	fb0c 2c00 	mla	ip, ip, r0, r2
 80269de:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80269e0:	fb01 c102 	mla	r1, r1, r2, ip
 80269e4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80269e6:	fb03 1302 	mla	r3, r3, r2, r1
 80269ea:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80269ee:	b1db      	cbz	r3, 8026a28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80269f0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80269f2:	4353      	muls	r3, r2
 80269f4:	1c5a      	adds	r2, r3, #1
 80269f6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80269fa:	4ac6      	ldr	r2, [pc, #792]	; (8026d14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 80269fc:	121b      	asrs	r3, r3, #8
 80269fe:	6812      	ldr	r2, [r2, #0]
 8026a00:	2bff      	cmp	r3, #255	; 0xff
 8026a02:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8026a06:	f040 8099 	bne.w	8026b3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 8026a0a:	0953      	lsrs	r3, r2, #5
 8026a0c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8026a10:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026a14:	f02c 0c07 	bic.w	ip, ip, #7
 8026a18:	ea43 0c0c 	orr.w	ip, r3, ip
 8026a1c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026a20:	ea4c 0202 	orr.w	r2, ip, r2
 8026a24:	f8a8 2000 	strh.w	r2, [r8]
 8026a28:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8026a2a:	441c      	add	r4, r3
 8026a2c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8026a2e:	441e      	add	r6, r3
 8026a30:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8026a32:	3b01      	subs	r3, #1
 8026a34:	f108 0802 	add.w	r8, r8, #2
 8026a38:	930e      	str	r3, [sp, #56]	; 0x38
 8026a3a:	e763      	b.n	8026904 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 8026a3c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8026a3e:	441c      	add	r4, r3
 8026a40:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8026a42:	441e      	add	r6, r3
 8026a44:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026a46:	3b01      	subs	r3, #1
 8026a48:	9309      	str	r3, [sp, #36]	; 0x24
 8026a4a:	f109 0902 	add.w	r9, r9, #2
 8026a4e:	e737      	b.n	80268c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026a50:	d024      	beq.n	8026a9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8026a52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026a54:	982b      	ldr	r0, [sp, #172]	; 0xac
 8026a56:	3b01      	subs	r3, #1
 8026a58:	fb00 4003 	mla	r0, r0, r3, r4
 8026a5c:	1400      	asrs	r0, r0, #16
 8026a5e:	f53f af4c 	bmi.w	80268fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8026a62:	3901      	subs	r1, #1
 8026a64:	4288      	cmp	r0, r1
 8026a66:	f6bf af48 	bge.w	80268fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8026a6a:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8026a6c:	fb01 6303 	mla	r3, r1, r3, r6
 8026a70:	141b      	asrs	r3, r3, #16
 8026a72:	f53f af42 	bmi.w	80268fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8026a76:	3a01      	subs	r2, #1
 8026a78:	4293      	cmp	r3, r2
 8026a7a:	f6bf af3e 	bge.w	80268fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8026a7e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8026a82:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8026a86:	930e      	str	r3, [sp, #56]	; 0x38
 8026a88:	46c8      	mov	r8, r9
 8026a8a:	f1bb 0f00 	cmp.w	fp, #0
 8026a8e:	f300 80b7 	bgt.w	8026c00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 8026a92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026a94:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8026a98:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8026a9c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026a9e:	2b00      	cmp	r3, #0
 8026aa0:	f340 818d 	ble.w	8026dbe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 8026aa4:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8026aa8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026aac:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8026ab0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026ab2:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8026ab6:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8026aba:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8026abe:	eef0 6a48 	vmov.f32	s13, s16
 8026ac2:	ee69 7a27 	vmul.f32	s15, s18, s15
 8026ac6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026aca:	ee37 8a48 	vsub.f32	s16, s14, s16
 8026ace:	ee16 4a90 	vmov	r4, s13
 8026ad2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8026ad6:	eef0 6a68 	vmov.f32	s13, s17
 8026ada:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8026ade:	ee18 2a10 	vmov	r2, s16
 8026ae2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8026ae6:	fb92 f3f3 	sdiv	r3, r2, r3
 8026aea:	ee18 2a90 	vmov	r2, s17
 8026aee:	932b      	str	r3, [sp, #172]	; 0xac
 8026af0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026af2:	fb92 f3f3 	sdiv	r3, r2, r3
 8026af6:	932c      	str	r3, [sp, #176]	; 0xb0
 8026af8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026afa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8026afc:	3b01      	subs	r3, #1
 8026afe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026b02:	930d      	str	r3, [sp, #52]	; 0x34
 8026b04:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026b06:	bf08      	it	eq
 8026b08:	4613      	moveq	r3, r2
 8026b0a:	ee16 6a90 	vmov	r6, s13
 8026b0e:	9309      	str	r3, [sp, #36]	; 0x24
 8026b10:	eef0 8a67 	vmov.f32	s17, s15
 8026b14:	eeb0 8a47 	vmov.f32	s16, s14
 8026b18:	e6c3      	b.n	80268a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8026b1a:	2900      	cmp	r1, #0
 8026b1c:	f43f af4d 	beq.w	80269ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026b20:	eb0a 0003 	add.w	r0, sl, r3
 8026b24:	0843      	lsrs	r3, r0, #1
 8026b26:	07c0      	lsls	r0, r0, #31
 8026b28:	5cfb      	ldrb	r3, [r7, r3]
 8026b2a:	bf54      	ite	pl
 8026b2c:	f003 030f 	andpl.w	r3, r3, #15
 8026b30:	111b      	asrmi	r3, r3, #4
 8026b32:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026b36:	b2db      	uxtb	r3, r3
 8026b38:	930b      	str	r3, [sp, #44]	; 0x2c
 8026b3a:	e73e      	b.n	80269ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026b3c:	f8b8 e000 	ldrh.w	lr, [r8]
 8026b40:	fa1f fb83 	uxth.w	fp, r3
 8026b44:	ea4f 202e 	mov.w	r0, lr, asr #8
 8026b48:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8026b4c:	43db      	mvns	r3, r3
 8026b4e:	b2db      	uxtb	r3, r3
 8026b50:	fb11 f10b 	smulbb	r1, r1, fp
 8026b54:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026b58:	fb00 1003 	mla	r0, r0, r3, r1
 8026b5c:	fa5f fc8c 	uxtb.w	ip, ip
 8026b60:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8026b64:	b2d2      	uxtb	r2, r2
 8026b66:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8026b6a:	b280      	uxth	r0, r0
 8026b6c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026b70:	fb1c fc0b 	smulbb	ip, ip, fp
 8026b74:	fa5f fe8e 	uxtb.w	lr, lr
 8026b78:	fb12 fb0b 	smulbb	fp, r2, fp
 8026b7c:	fb01 cc03 	mla	ip, r1, r3, ip
 8026b80:	fb0e bb03 	mla	fp, lr, r3, fp
 8026b84:	1c43      	adds	r3, r0, #1
 8026b86:	fa1f fc8c 	uxth.w	ip, ip
 8026b8a:	fa1f fb8b 	uxth.w	fp, fp
 8026b8e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8026b92:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8026b96:	f10c 0101 	add.w	r1, ip, #1
 8026b9a:	f10b 0001 	add.w	r0, fp, #1
 8026b9e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8026ba2:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026ba6:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026baa:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8026bae:	4318      	orrs	r0, r3
 8026bb0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026bb4:	ea40 000c 	orr.w	r0, r0, ip
 8026bb8:	f8a8 0000 	strh.w	r0, [r8]
 8026bbc:	e734      	b.n	8026a28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8026bbe:	f113 0b01 	adds.w	fp, r3, #1
 8026bc2:	f53f af31 	bmi.w	8026a28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8026bc6:	45dc      	cmp	ip, fp
 8026bc8:	f6ff af2e 	blt.w	8026a28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8026bcc:	f110 0b01 	adds.w	fp, r0, #1
 8026bd0:	f53f af2a 	bmi.w	8026a28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8026bd4:	45de      	cmp	lr, fp
 8026bd6:	f6ff af27 	blt.w	8026a28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8026bda:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8026bdc:	9302      	str	r3, [sp, #8]
 8026bde:	fa0f f38e 	sxth.w	r3, lr
 8026be2:	9301      	str	r3, [sp, #4]
 8026be4:	fa0f f38c 	sxth.w	r3, ip
 8026be8:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8026bec:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8026bf0:	9300      	str	r3, [sp, #0]
 8026bf2:	463a      	mov	r2, r7
 8026bf4:	4653      	mov	r3, sl
 8026bf6:	4641      	mov	r1, r8
 8026bf8:	9815      	ldr	r0, [sp, #84]	; 0x54
 8026bfa:	f7ff fd2b 	bl	8026654 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8026bfe:	e713      	b.n	8026a28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8026c00:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8026c02:	1422      	asrs	r2, r4, #16
 8026c04:	1433      	asrs	r3, r6, #16
 8026c06:	fb05 2303 	mla	r3, r5, r3, r2
 8026c0a:	085a      	lsrs	r2, r3, #1
 8026c0c:	07dd      	lsls	r5, r3, #31
 8026c0e:	5cba      	ldrb	r2, [r7, r2]
 8026c10:	bf54      	ite	pl
 8026c12:	f002 020f 	andpl.w	r2, r2, #15
 8026c16:	1112      	asrmi	r2, r2, #4
 8026c18:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8026c1c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8026c20:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8026c24:	b2d2      	uxtb	r2, r2
 8026c26:	2900      	cmp	r1, #0
 8026c28:	d076      	beq.n	8026d18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8026c2a:	f103 0e01 	add.w	lr, r3, #1
 8026c2e:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8026c32:	f01e 0f01 	tst.w	lr, #1
 8026c36:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026c3a:	bf0c      	ite	eq
 8026c3c:	f00c 0c0f 	andeq.w	ip, ip, #15
 8026c40:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8026c44:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026c48:	fa5f f58c 	uxtb.w	r5, ip
 8026c4c:	9512      	str	r5, [sp, #72]	; 0x48
 8026c4e:	b300      	cbz	r0, 8026c92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026c50:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026c52:	442b      	add	r3, r5
 8026c54:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8026c58:	07dd      	lsls	r5, r3, #31
 8026c5a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026c5e:	bf54      	ite	pl
 8026c60:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026c64:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026c68:	3301      	adds	r3, #1
 8026c6a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026c6e:	fa5f f58c 	uxtb.w	r5, ip
 8026c72:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8026c76:	950c      	str	r5, [sp, #48]	; 0x30
 8026c78:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026c7c:	07dd      	lsls	r5, r3, #31
 8026c7e:	bf54      	ite	pl
 8026c80:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026c84:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026c88:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026c8c:	fa5f f38c 	uxtb.w	r3, ip
 8026c90:	9313      	str	r3, [sp, #76]	; 0x4c
 8026c92:	b289      	uxth	r1, r1
 8026c94:	b280      	uxth	r0, r0
 8026c96:	fb01 f300 	mul.w	r3, r1, r0
 8026c9a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8026c9e:	0109      	lsls	r1, r1, #4
 8026ca0:	b280      	uxth	r0, r0
 8026ca2:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8026ca6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8026ca8:	1ac9      	subs	r1, r1, r3
 8026caa:	ebac 0c00 	sub.w	ip, ip, r0
 8026cae:	b289      	uxth	r1, r1
 8026cb0:	4369      	muls	r1, r5
 8026cb2:	fa1f fc8c 	uxth.w	ip, ip
 8026cb6:	fb02 120c 	mla	r2, r2, ip, r1
 8026cba:	990c      	ldr	r1, [sp, #48]	; 0x30
 8026cbc:	fb00 2001 	mla	r0, r0, r1, r2
 8026cc0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8026cc2:	fb03 0302 	mla	r3, r3, r2, r0
 8026cc6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026cca:	b1d3      	cbz	r3, 8026d02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 8026ccc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026cce:	4353      	muls	r3, r2
 8026cd0:	1c5a      	adds	r2, r3, #1
 8026cd2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026cd6:	4a0f      	ldr	r2, [pc, #60]	; (8026d14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 8026cd8:	121b      	asrs	r3, r3, #8
 8026cda:	6812      	ldr	r2, [r2, #0]
 8026cdc:	2bff      	cmp	r3, #255	; 0xff
 8026cde:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8026ce2:	d12d      	bne.n	8026d40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 8026ce4:	0953      	lsrs	r3, r2, #5
 8026ce6:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8026cea:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026cee:	f02c 0c07 	bic.w	ip, ip, #7
 8026cf2:	ea43 0c0c 	orr.w	ip, r3, ip
 8026cf6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026cfa:	ea4c 0202 	orr.w	r2, ip, r2
 8026cfe:	f8a8 2000 	strh.w	r2, [r8]
 8026d02:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8026d04:	441c      	add	r4, r3
 8026d06:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8026d08:	f108 0802 	add.w	r8, r8, #2
 8026d0c:	441e      	add	r6, r3
 8026d0e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8026d12:	e6ba      	b.n	8026a8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 8026d14:	2002bd3c 	.word	0x2002bd3c
 8026d18:	2800      	cmp	r0, #0
 8026d1a:	d0ba      	beq.n	8026c92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026d1c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026d1e:	442b      	add	r3, r5
 8026d20:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8026d24:	07db      	lsls	r3, r3, #31
 8026d26:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026d2a:	bf54      	ite	pl
 8026d2c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026d30:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026d34:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026d38:	fa5f f38c 	uxtb.w	r3, ip
 8026d3c:	930c      	str	r3, [sp, #48]	; 0x30
 8026d3e:	e7a8      	b.n	8026c92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026d40:	f8b8 e000 	ldrh.w	lr, [r8]
 8026d44:	fa1f fa83 	uxth.w	sl, r3
 8026d48:	ea4f 202e 	mov.w	r0, lr, asr #8
 8026d4c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8026d50:	43db      	mvns	r3, r3
 8026d52:	b2db      	uxtb	r3, r3
 8026d54:	fb11 f10a 	smulbb	r1, r1, sl
 8026d58:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026d5c:	fb00 1003 	mla	r0, r0, r3, r1
 8026d60:	b2d2      	uxtb	r2, r2
 8026d62:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8026d66:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8026d6a:	fa5f fe8e 	uxtb.w	lr, lr
 8026d6e:	fb12 f20a 	smulbb	r2, r2, sl
 8026d72:	fb0e 2203 	mla	r2, lr, r3, r2
 8026d76:	fa5f fc8c 	uxtb.w	ip, ip
 8026d7a:	b280      	uxth	r0, r0
 8026d7c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026d80:	b292      	uxth	r2, r2
 8026d82:	fb1c fc0a 	smulbb	ip, ip, sl
 8026d86:	fb01 cc03 	mla	ip, r1, r3, ip
 8026d8a:	1c43      	adds	r3, r0, #1
 8026d8c:	1c51      	adds	r1, r2, #1
 8026d8e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8026d92:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8026d96:	fa1f fc8c 	uxth.w	ip, ip
 8026d9a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8026d9e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8026da2:	4308      	orrs	r0, r1
 8026da4:	f10c 0101 	add.w	r1, ip, #1
 8026da8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026dac:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8026db0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026db4:	ea40 000c 	orr.w	r0, r0, ip
 8026db8:	f8a8 0000 	strh.w	r0, [r8]
 8026dbc:	e7a1      	b.n	8026d02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 8026dbe:	b017      	add	sp, #92	; 0x5c
 8026dc0:	ecbd 8b08 	vpop	{d8-d11}
 8026dc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026dc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8026dc8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026dcc:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8026dd0:	2c00      	cmp	r4, #0
 8026dd2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8026dd6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8026dda:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8026dde:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 8026de2:	fb04 ce03 	mla	lr, r4, r3, ip
 8026de6:	db60      	blt.n	8026eaa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 8026de8:	45a1      	cmp	r9, r4
 8026dea:	dd5e      	ble.n	8026eaa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 8026dec:	f1bc 0f00 	cmp.w	ip, #0
 8026df0:	db59      	blt.n	8026ea6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 8026df2:	45e0      	cmp	r8, ip
 8026df4:	dd57      	ble.n	8026ea6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 8026df6:	ea4f 005e 	mov.w	r0, lr, lsr #1
 8026dfa:	f01e 0f01 	tst.w	lr, #1
 8026dfe:	5c16      	ldrb	r6, [r2, r0]
 8026e00:	bf0c      	ite	eq
 8026e02:	f006 060f 	andeq.w	r6, r6, #15
 8026e06:	1136      	asrne	r6, r6, #4
 8026e08:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8026e0c:	b2f6      	uxtb	r6, r6
 8026e0e:	f11c 0001 	adds.w	r0, ip, #1
 8026e12:	d44d      	bmi.n	8026eb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 8026e14:	4580      	cmp	r8, r0
 8026e16:	dd4b      	ble.n	8026eb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 8026e18:	2d00      	cmp	r5, #0
 8026e1a:	d04b      	beq.n	8026eb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 8026e1c:	f10e 0a01 	add.w	sl, lr, #1
 8026e20:	ea4f 005a 	mov.w	r0, sl, lsr #1
 8026e24:	f01a 0f01 	tst.w	sl, #1
 8026e28:	5c10      	ldrb	r0, [r2, r0]
 8026e2a:	bf0c      	ite	eq
 8026e2c:	f000 000f 	andeq.w	r0, r0, #15
 8026e30:	1100      	asrne	r0, r0, #4
 8026e32:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8026e36:	b2c0      	uxtb	r0, r0
 8026e38:	3401      	adds	r4, #1
 8026e3a:	d43f      	bmi.n	8026ebc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 8026e3c:	45a1      	cmp	r9, r4
 8026e3e:	dd3d      	ble.n	8026ebc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 8026e40:	2f00      	cmp	r7, #0
 8026e42:	f000 8093 	beq.w	8026f6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8026e46:	f1bc 0f00 	cmp.w	ip, #0
 8026e4a:	db35      	blt.n	8026eb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 8026e4c:	45e0      	cmp	r8, ip
 8026e4e:	dd33      	ble.n	8026eb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 8026e50:	eb03 090e 	add.w	r9, r3, lr
 8026e54:	ea4f 0459 	mov.w	r4, r9, lsr #1
 8026e58:	f019 0f01 	tst.w	r9, #1
 8026e5c:	5d14      	ldrb	r4, [r2, r4]
 8026e5e:	bf0c      	ite	eq
 8026e60:	f004 040f 	andeq.w	r4, r4, #15
 8026e64:	1124      	asrne	r4, r4, #4
 8026e66:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8026e6a:	b2e4      	uxtb	r4, r4
 8026e6c:	f11c 0c01 	adds.w	ip, ip, #1
 8026e70:	d427      	bmi.n	8026ec2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 8026e72:	45e0      	cmp	r8, ip
 8026e74:	dd25      	ble.n	8026ec2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 8026e76:	b335      	cbz	r5, 8026ec6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 8026e78:	3301      	adds	r3, #1
 8026e7a:	449e      	add	lr, r3
 8026e7c:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8026e80:	f01e 0f01 	tst.w	lr, #1
 8026e84:	5cd2      	ldrb	r2, [r2, r3]
 8026e86:	bf0c      	ite	eq
 8026e88:	f002 020f 	andeq.w	r2, r2, #15
 8026e8c:	1112      	asrne	r2, r2, #4
 8026e8e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8026e92:	b2d3      	uxtb	r3, r2
 8026e94:	2d0f      	cmp	r5, #15
 8026e96:	d917      	bls.n	8026ec8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 8026e98:	4b37      	ldr	r3, [pc, #220]	; (8026f78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>)
 8026e9a:	4a38      	ldr	r2, [pc, #224]	; (8026f7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b4>)
 8026e9c:	4838      	ldr	r0, [pc, #224]	; (8026f80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 8026e9e:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8026ea2:	f000 fc6d 	bl	8027780 <__assert_func>
 8026ea6:	2600      	movs	r6, #0
 8026ea8:	e7b1      	b.n	8026e0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 8026eaa:	2000      	movs	r0, #0
 8026eac:	4606      	mov	r6, r0
 8026eae:	e7c3      	b.n	8026e38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8026eb0:	2000      	movs	r0, #0
 8026eb2:	e7c1      	b.n	8026e38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8026eb4:	4628      	mov	r0, r5
 8026eb6:	e7bf      	b.n	8026e38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8026eb8:	2400      	movs	r4, #0
 8026eba:	e7d7      	b.n	8026e6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 8026ebc:	2300      	movs	r3, #0
 8026ebe:	461c      	mov	r4, r3
 8026ec0:	e7e8      	b.n	8026e94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 8026ec2:	2300      	movs	r3, #0
 8026ec4:	e7e6      	b.n	8026e94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 8026ec6:	462b      	mov	r3, r5
 8026ec8:	2f0f      	cmp	r7, #15
 8026eca:	d8e5      	bhi.n	8026e98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 8026ecc:	b2ad      	uxth	r5, r5
 8026ece:	b2bf      	uxth	r7, r7
 8026ed0:	fb05 fc07 	mul.w	ip, r5, r7
 8026ed4:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 8026ed8:	012d      	lsls	r5, r5, #4
 8026eda:	b2bf      	uxth	r7, r7
 8026edc:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8026ee0:	eba5 050c 	sub.w	r5, r5, ip
 8026ee4:	1bd2      	subs	r2, r2, r7
 8026ee6:	b2ad      	uxth	r5, r5
 8026ee8:	b292      	uxth	r2, r2
 8026eea:	4368      	muls	r0, r5
 8026eec:	fb06 0002 	mla	r0, r6, r2, r0
 8026ef0:	fb07 0404 	mla	r4, r7, r4, r0
 8026ef4:	fb0c 4303 	mla	r3, ip, r3, r4
 8026ef8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026efc:	b3a3      	cbz	r3, 8026f68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8026efe:	4a21      	ldr	r2, [pc, #132]	; (8026f84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 8026f00:	880e      	ldrh	r6, [r1, #0]
 8026f02:	6815      	ldr	r5, [r2, #0]
 8026f04:	1234      	asrs	r4, r6, #8
 8026f06:	b29a      	uxth	r2, r3
 8026f08:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8026f0c:	43db      	mvns	r3, r3
 8026f0e:	b2db      	uxtb	r3, r3
 8026f10:	fb10 f002 	smulbb	r0, r0, r2
 8026f14:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8026f18:	fb04 0403 	mla	r4, r4, r3, r0
 8026f1c:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8026f20:	10f0      	asrs	r0, r6, #3
 8026f22:	b2ed      	uxtb	r5, r5
 8026f24:	00f6      	lsls	r6, r6, #3
 8026f26:	fb17 f702 	smulbb	r7, r7, r2
 8026f2a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8026f2e:	fb15 f202 	smulbb	r2, r5, r2
 8026f32:	b2f6      	uxtb	r6, r6
 8026f34:	b2a4      	uxth	r4, r4
 8026f36:	fb00 7003 	mla	r0, r0, r3, r7
 8026f3a:	fb06 2303 	mla	r3, r6, r3, r2
 8026f3e:	b29a      	uxth	r2, r3
 8026f40:	1c63      	adds	r3, r4, #1
 8026f42:	b280      	uxth	r0, r0
 8026f44:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8026f48:	1c53      	adds	r3, r2, #1
 8026f4a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026f4e:	1c42      	adds	r2, r0, #1
 8026f50:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026f54:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8026f58:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8026f5c:	0940      	lsrs	r0, r0, #5
 8026f5e:	4323      	orrs	r3, r4
 8026f60:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026f64:	4303      	orrs	r3, r0
 8026f66:	800b      	strh	r3, [r1, #0]
 8026f68:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026f6c:	2d0f      	cmp	r5, #15
 8026f6e:	d893      	bhi.n	8026e98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 8026f70:	463b      	mov	r3, r7
 8026f72:	463c      	mov	r4, r7
 8026f74:	e7aa      	b.n	8026ecc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 8026f76:	bf00      	nop
 8026f78:	0802d4b6 	.word	0x0802d4b6
 8026f7c:	0802da86 	.word	0x0802da86
 8026f80:	0802d53a 	.word	0x0802d53a
 8026f84:	2002bd3c 	.word	0x2002bd3c

08026f88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026f88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026f8c:	ed2d 8b08 	vpush	{d8-d11}
 8026f90:	b093      	sub	sp, #76	; 0x4c
 8026f92:	461d      	mov	r5, r3
 8026f94:	920c      	str	r2, [sp, #48]	; 0x30
 8026f96:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8026f98:	9107      	str	r1, [sp, #28]
 8026f9a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8026f9e:	9011      	str	r0, [sp, #68]	; 0x44
 8026fa0:	6850      	ldr	r0, [r2, #4]
 8026fa2:	6812      	ldr	r2, [r2, #0]
 8026fa4:	fb00 1303 	mla	r3, r0, r3, r1
 8026fa8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8026fac:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8026fae:	689b      	ldr	r3, [r3, #8]
 8026fb0:	3301      	adds	r3, #1
 8026fb2:	f023 0301 	bic.w	r3, r3, #1
 8026fb6:	9306      	str	r3, [sp, #24]
 8026fb8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8026fba:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8026fbe:	681f      	ldr	r7, [r3, #0]
 8026fc0:	eeb0 aa40 	vmov.f32	s20, s0
 8026fc4:	eef0 9a60 	vmov.f32	s19, s1
 8026fc8:	eeb0 9a41 	vmov.f32	s18, s2
 8026fcc:	eeb0 8a62 	vmov.f32	s16, s5
 8026fd0:	eef0 8a43 	vmov.f32	s17, s6
 8026fd4:	eef0 ba44 	vmov.f32	s23, s8
 8026fd8:	eeb0 ba64 	vmov.f32	s22, s9
 8026fdc:	eef0 aa45 	vmov.f32	s21, s10
 8026fe0:	9b07      	ldr	r3, [sp, #28]
 8026fe2:	2b00      	cmp	r3, #0
 8026fe4:	dc03      	bgt.n	8026fee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8026fe6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026fe8:	2b00      	cmp	r3, #0
 8026fea:	f340 8267 	ble.w	80274bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 8026fee:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8026ff0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026ff4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026ff8:	1e48      	subs	r0, r1, #1
 8026ffa:	f102 3cff 	add.w	ip, r2, #4294967295
 8026ffe:	2d00      	cmp	r5, #0
 8027000:	f340 80b8 	ble.w	8027174 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 8027004:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8027008:	ea4f 4326 	mov.w	r3, r6, asr #16
 802700c:	d406      	bmi.n	802701c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802700e:	4586      	cmp	lr, r0
 8027010:	da04      	bge.n	802701c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8027012:	2b00      	cmp	r3, #0
 8027014:	db02      	blt.n	802701c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8027016:	4563      	cmp	r3, ip
 8027018:	f2c0 80ad 	blt.w	8027176 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802701c:	f11e 0e01 	adds.w	lr, lr, #1
 8027020:	f100 80a0 	bmi.w	8027164 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8027024:	4571      	cmp	r1, lr
 8027026:	f2c0 809d 	blt.w	8027164 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 802702a:	3301      	adds	r3, #1
 802702c:	f100 809a 	bmi.w	8027164 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8027030:	429a      	cmp	r2, r3
 8027032:	f2c0 8097 	blt.w	8027164 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8027036:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 802703a:	9509      	str	r5, [sp, #36]	; 0x24
 802703c:	46c8      	mov	r8, r9
 802703e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027040:	2b00      	cmp	r3, #0
 8027042:	f340 80b6 	ble.w	80271b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8027046:	f3c4 3303 	ubfx	r3, r4, #12, #4
 802704a:	9308      	str	r3, [sp, #32]
 802704c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802704e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8027052:	1423      	asrs	r3, r4, #16
 8027054:	ea4f 4026 	mov.w	r0, r6, asr #16
 8027058:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802705c:	f100 813e 	bmi.w	80272dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 8027060:	f10c 3bff 	add.w	fp, ip, #4294967295
 8027064:	455b      	cmp	r3, fp
 8027066:	f280 8139 	bge.w	80272dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 802706a:	2800      	cmp	r0, #0
 802706c:	f2c0 8136 	blt.w	80272dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 8027070:	f10e 3bff 	add.w	fp, lr, #4294967295
 8027074:	4558      	cmp	r0, fp
 8027076:	f280 8131 	bge.w	80272dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 802707a:	9a06      	ldr	r2, [sp, #24]
 802707c:	fb00 3302 	mla	r3, r0, r2, r3
 8027080:	0858      	lsrs	r0, r3, #1
 8027082:	07da      	lsls	r2, r3, #31
 8027084:	f817 c000 	ldrb.w	ip, [r7, r0]
 8027088:	9a08      	ldr	r2, [sp, #32]
 802708a:	bf54      	ite	pl
 802708c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8027090:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8027094:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8027098:	fa5f fc8c 	uxtb.w	ip, ip
 802709c:	2a00      	cmp	r2, #0
 802709e:	f000 80cb 	beq.w	8027238 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 80270a2:	1c58      	adds	r0, r3, #1
 80270a4:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80270a8:	07c0      	lsls	r0, r0, #31
 80270aa:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80270ae:	bf54      	ite	pl
 80270b0:	f00e 0e0f 	andpl.w	lr, lr, #15
 80270b4:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80270b8:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80270bc:	fa5f fe8e 	uxtb.w	lr, lr
 80270c0:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 80270c4:	b1b9      	cbz	r1, 80270f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80270c6:	4453      	add	r3, sl
 80270c8:	0858      	lsrs	r0, r3, #1
 80270ca:	07da      	lsls	r2, r3, #31
 80270cc:	5c38      	ldrb	r0, [r7, r0]
 80270ce:	bf54      	ite	pl
 80270d0:	f000 000f 	andpl.w	r0, r0, #15
 80270d4:	1100      	asrmi	r0, r0, #4
 80270d6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80270da:	b2c0      	uxtb	r0, r0
 80270dc:	900a      	str	r0, [sp, #40]	; 0x28
 80270de:	1c58      	adds	r0, r3, #1
 80270e0:	0843      	lsrs	r3, r0, #1
 80270e2:	07c2      	lsls	r2, r0, #31
 80270e4:	5cfb      	ldrb	r3, [r7, r3]
 80270e6:	bf54      	ite	pl
 80270e8:	f003 030f 	andpl.w	r3, r3, #15
 80270ec:	111b      	asrmi	r3, r3, #4
 80270ee:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80270f2:	b2db      	uxtb	r3, r3
 80270f4:	930e      	str	r3, [sp, #56]	; 0x38
 80270f6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80270fa:	b289      	uxth	r1, r1
 80270fc:	fb02 f301 	mul.w	r3, r2, r1
 8027100:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8027104:	0112      	lsls	r2, r2, #4
 8027106:	b289      	uxth	r1, r1
 8027108:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802710c:	1a40      	subs	r0, r0, r1
 802710e:	fa1f fe80 	uxth.w	lr, r0
 8027112:	1ad2      	subs	r2, r2, r3
 8027114:	980d      	ldr	r0, [sp, #52]	; 0x34
 8027116:	b292      	uxth	r2, r2
 8027118:	4342      	muls	r2, r0
 802711a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 802711e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8027120:	fb01 c102 	mla	r1, r1, r2, ip
 8027124:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8027126:	fb03 1302 	mla	r3, r3, r2, r1
 802712a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802712e:	2bff      	cmp	r3, #255	; 0xff
 8027130:	f040 8093 	bne.w	802725a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 8027134:	4bbe      	ldr	r3, [pc, #760]	; (8027430 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 8027136:	681a      	ldr	r2, [r3, #0]
 8027138:	4bbe      	ldr	r3, [pc, #760]	; (8027434 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 802713a:	0951      	lsrs	r1, r2, #5
 802713c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8027140:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8027144:	430b      	orrs	r3, r1
 8027146:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802714a:	4313      	orrs	r3, r2
 802714c:	f8a8 3000 	strh.w	r3, [r8]
 8027150:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8027152:	441c      	add	r4, r3
 8027154:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027156:	441e      	add	r6, r3
 8027158:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802715a:	3b01      	subs	r3, #1
 802715c:	f108 0802 	add.w	r8, r8, #2
 8027160:	9309      	str	r3, [sp, #36]	; 0x24
 8027162:	e76c      	b.n	802703e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8027164:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8027166:	441c      	add	r4, r3
 8027168:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802716a:	3d01      	subs	r5, #1
 802716c:	441e      	add	r6, r3
 802716e:	f109 0902 	add.w	r9, r9, #2
 8027172:	e744      	b.n	8026ffe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8027174:	d021      	beq.n	80271ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 8027176:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8027178:	1e6b      	subs	r3, r5, #1
 802717a:	fb00 4003 	mla	r0, r0, r3, r4
 802717e:	1400      	asrs	r0, r0, #16
 8027180:	f53f af59 	bmi.w	8027036 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8027184:	3901      	subs	r1, #1
 8027186:	4288      	cmp	r0, r1
 8027188:	f6bf af55 	bge.w	8027036 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 802718c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 802718e:	fb01 6303 	mla	r3, r1, r3, r6
 8027192:	141b      	asrs	r3, r3, #16
 8027194:	f53f af4f 	bmi.w	8027036 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8027198:	3a01      	subs	r2, #1
 802719a:	4293      	cmp	r3, r2
 802719c:	f6bf af4b 	bge.w	8027036 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80271a0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80271a4:	9308      	str	r3, [sp, #32]
 80271a6:	46a8      	mov	r8, r5
 80271a8:	46ce      	mov	lr, r9
 80271aa:	f1b8 0f00 	cmp.w	r8, #0
 80271ae:	f300 80b5 	bgt.w	802731c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 80271b2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80271b6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80271ba:	9b07      	ldr	r3, [sp, #28]
 80271bc:	2b00      	cmp	r3, #0
 80271be:	f340 817d 	ble.w	80274bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 80271c2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80271c6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80271ca:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80271ce:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80271d0:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80271d4:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80271d8:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80271dc:	eef0 6a48 	vmov.f32	s13, s16
 80271e0:	ee69 7a27 	vmul.f32	s15, s18, s15
 80271e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80271e8:	ee37 8a48 	vsub.f32	s16, s14, s16
 80271ec:	ee16 4a90 	vmov	r4, s13
 80271f0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80271f4:	eef0 6a68 	vmov.f32	s13, s17
 80271f8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80271fc:	ee18 2a10 	vmov	r2, s16
 8027200:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8027204:	fb92 f3f3 	sdiv	r3, r2, r3
 8027208:	ee18 2a90 	vmov	r2, s17
 802720c:	9327      	str	r3, [sp, #156]	; 0x9c
 802720e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027210:	fb92 f3f3 	sdiv	r3, r2, r3
 8027214:	9328      	str	r3, [sp, #160]	; 0xa0
 8027216:	9b07      	ldr	r3, [sp, #28]
 8027218:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802721a:	3b01      	subs	r3, #1
 802721c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027220:	9307      	str	r3, [sp, #28]
 8027222:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027224:	ee16 6a90 	vmov	r6, s13
 8027228:	bf14      	ite	ne
 802722a:	461d      	movne	r5, r3
 802722c:	4615      	moveq	r5, r2
 802722e:	eef0 8a67 	vmov.f32	s17, s15
 8027232:	eeb0 8a47 	vmov.f32	s16, s14
 8027236:	e6d3      	b.n	8026fe0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8027238:	2900      	cmp	r1, #0
 802723a:	f43f af5c 	beq.w	80270f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 802723e:	eb0a 0003 	add.w	r0, sl, r3
 8027242:	0843      	lsrs	r3, r0, #1
 8027244:	07c0      	lsls	r0, r0, #31
 8027246:	5cfb      	ldrb	r3, [r7, r3]
 8027248:	bf54      	ite	pl
 802724a:	f003 030f 	andpl.w	r3, r3, #15
 802724e:	111b      	asrmi	r3, r3, #4
 8027250:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8027254:	b2db      	uxtb	r3, r3
 8027256:	930a      	str	r3, [sp, #40]	; 0x28
 8027258:	e74d      	b.n	80270f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 802725a:	2b00      	cmp	r3, #0
 802725c:	f43f af78 	beq.w	8027150 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8027260:	4a73      	ldr	r2, [pc, #460]	; (8027430 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 8027262:	f8b8 c000 	ldrh.w	ip, [r8]
 8027266:	6810      	ldr	r0, [r2, #0]
 8027268:	fa1f fe83 	uxth.w	lr, r3
 802726c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8027270:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8027274:	43db      	mvns	r3, r3
 8027276:	b2db      	uxtb	r3, r3
 8027278:	fb12 f20e 	smulbb	r2, r2, lr
 802727c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8027280:	fb01 2103 	mla	r1, r1, r3, r2
 8027284:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8027288:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802728c:	b2c0      	uxtb	r0, r0
 802728e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8027292:	fb1b fb0e 	smulbb	fp, fp, lr
 8027296:	b289      	uxth	r1, r1
 8027298:	fb10 fe0e 	smulbb	lr, r0, lr
 802729c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80272a0:	fa5f fc8c 	uxtb.w	ip, ip
 80272a4:	fb02 b203 	mla	r2, r2, r3, fp
 80272a8:	1c48      	adds	r0, r1, #1
 80272aa:	fb0c e303 	mla	r3, ip, r3, lr
 80272ae:	b292      	uxth	r2, r2
 80272b0:	b29b      	uxth	r3, r3
 80272b2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 80272b6:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 80272ba:	f102 0b01 	add.w	fp, r2, #1
 80272be:	1c59      	adds	r1, r3, #1
 80272c0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80272c4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80272c8:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80272cc:	0952      	lsrs	r2, r2, #5
 80272ce:	4301      	orrs	r1, r0
 80272d0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80272d4:	4311      	orrs	r1, r2
 80272d6:	f8a8 1000 	strh.w	r1, [r8]
 80272da:	e739      	b.n	8027150 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80272dc:	f113 0b01 	adds.w	fp, r3, #1
 80272e0:	f53f af36 	bmi.w	8027150 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80272e4:	45dc      	cmp	ip, fp
 80272e6:	f6ff af33 	blt.w	8027150 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80272ea:	f110 0b01 	adds.w	fp, r0, #1
 80272ee:	f53f af2f 	bmi.w	8027150 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80272f2:	45de      	cmp	lr, fp
 80272f4:	f6ff af2c 	blt.w	8027150 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80272f8:	9a08      	ldr	r2, [sp, #32]
 80272fa:	9302      	str	r3, [sp, #8]
 80272fc:	fa0f f38e 	sxth.w	r3, lr
 8027300:	9301      	str	r3, [sp, #4]
 8027302:	fa0f f38c 	sxth.w	r3, ip
 8027306:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802730a:	9105      	str	r1, [sp, #20]
 802730c:	9300      	str	r3, [sp, #0]
 802730e:	463a      	mov	r2, r7
 8027310:	4653      	mov	r3, sl
 8027312:	4641      	mov	r1, r8
 8027314:	9811      	ldr	r0, [sp, #68]	; 0x44
 8027316:	f7ff fd57 	bl	8026dc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802731a:	e719      	b.n	8027150 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 802731c:	9906      	ldr	r1, [sp, #24]
 802731e:	1422      	asrs	r2, r4, #16
 8027320:	1433      	asrs	r3, r6, #16
 8027322:	fb01 2303 	mla	r3, r1, r3, r2
 8027326:	085a      	lsrs	r2, r3, #1
 8027328:	07d9      	lsls	r1, r3, #31
 802732a:	5cba      	ldrb	r2, [r7, r2]
 802732c:	bf54      	ite	pl
 802732e:	f002 020f 	andpl.w	r2, r2, #15
 8027332:	1112      	asrmi	r2, r2, #4
 8027334:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8027338:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802733c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8027340:	b2d2      	uxtb	r2, r2
 8027342:	2800      	cmp	r0, #0
 8027344:	d062      	beq.n	802740c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8027346:	f103 0a01 	add.w	sl, r3, #1
 802734a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 802734e:	f01a 0f01 	tst.w	sl, #1
 8027352:	5c79      	ldrb	r1, [r7, r1]
 8027354:	bf0c      	ite	eq
 8027356:	f001 010f 	andeq.w	r1, r1, #15
 802735a:	1109      	asrne	r1, r1, #4
 802735c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8027360:	b2c9      	uxtb	r1, r1
 8027362:	910f      	str	r1, [sp, #60]	; 0x3c
 8027364:	f1bc 0f00 	cmp.w	ip, #0
 8027368:	d019      	beq.n	802739e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 802736a:	9908      	ldr	r1, [sp, #32]
 802736c:	440b      	add	r3, r1
 802736e:	0859      	lsrs	r1, r3, #1
 8027370:	f013 0f01 	tst.w	r3, #1
 8027374:	5c79      	ldrb	r1, [r7, r1]
 8027376:	bf0c      	ite	eq
 8027378:	f001 010f 	andeq.w	r1, r1, #15
 802737c:	1109      	asrne	r1, r1, #4
 802737e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8027382:	b2c9      	uxtb	r1, r1
 8027384:	3301      	adds	r3, #1
 8027386:	910b      	str	r1, [sp, #44]	; 0x2c
 8027388:	0859      	lsrs	r1, r3, #1
 802738a:	07db      	lsls	r3, r3, #31
 802738c:	5c79      	ldrb	r1, [r7, r1]
 802738e:	bf54      	ite	pl
 8027390:	f001 010f 	andpl.w	r1, r1, #15
 8027394:	1109      	asrmi	r1, r1, #4
 8027396:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802739a:	b2c9      	uxtb	r1, r1
 802739c:	9110      	str	r1, [sp, #64]	; 0x40
 802739e:	b280      	uxth	r0, r0
 80273a0:	fa1f fc8c 	uxth.w	ip, ip
 80273a4:	fb00 f30c 	mul.w	r3, r0, ip
 80273a8:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 80273ac:	0100      	lsls	r0, r0, #4
 80273ae:	fa1f fc8c 	uxth.w	ip, ip
 80273b2:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 80273b6:	eba1 010c 	sub.w	r1, r1, ip
 80273ba:	fa1f fa81 	uxth.w	sl, r1
 80273be:	1ac0      	subs	r0, r0, r3
 80273c0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80273c2:	b280      	uxth	r0, r0
 80273c4:	4348      	muls	r0, r1
 80273c6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80273c8:	fb02 020a 	mla	r2, r2, sl, r0
 80273cc:	fb0c 2c01 	mla	ip, ip, r1, r2
 80273d0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80273d2:	fb03 c302 	mla	r3, r3, r2, ip
 80273d6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80273da:	2bff      	cmp	r3, #255	; 0xff
 80273dc:	d12c      	bne.n	8027438 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80273de:	4b14      	ldr	r3, [pc, #80]	; (8027430 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 80273e0:	681a      	ldr	r2, [r3, #0]
 80273e2:	4b14      	ldr	r3, [pc, #80]	; (8027434 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80273e4:	0951      	lsrs	r1, r2, #5
 80273e6:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80273ea:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80273ee:	430b      	orrs	r3, r1
 80273f0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80273f4:	4313      	orrs	r3, r2
 80273f6:	f8ae 3000 	strh.w	r3, [lr]
 80273fa:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80273fc:	441c      	add	r4, r3
 80273fe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027400:	f10e 0e02 	add.w	lr, lr, #2
 8027404:	441e      	add	r6, r3
 8027406:	f108 38ff 	add.w	r8, r8, #4294967295
 802740a:	e6ce      	b.n	80271aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 802740c:	f1bc 0f00 	cmp.w	ip, #0
 8027410:	d0c5      	beq.n	802739e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 8027412:	9908      	ldr	r1, [sp, #32]
 8027414:	440b      	add	r3, r1
 8027416:	0859      	lsrs	r1, r3, #1
 8027418:	07db      	lsls	r3, r3, #31
 802741a:	5c79      	ldrb	r1, [r7, r1]
 802741c:	bf54      	ite	pl
 802741e:	f001 010f 	andpl.w	r1, r1, #15
 8027422:	1109      	asrmi	r1, r1, #4
 8027424:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8027428:	b2c9      	uxtb	r1, r1
 802742a:	910b      	str	r1, [sp, #44]	; 0x2c
 802742c:	e7b7      	b.n	802739e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 802742e:	bf00      	nop
 8027430:	2002bd3c 	.word	0x2002bd3c
 8027434:	fffff800 	.word	0xfffff800
 8027438:	2b00      	cmp	r3, #0
 802743a:	d0de      	beq.n	80273fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 802743c:	4a22      	ldr	r2, [pc, #136]	; (80274c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>)
 802743e:	f8be c000 	ldrh.w	ip, [lr]
 8027442:	6810      	ldr	r0, [r2, #0]
 8027444:	fa1f fa83 	uxth.w	sl, r3
 8027448:	ea4f 212c 	mov.w	r1, ip, asr #8
 802744c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8027450:	43db      	mvns	r3, r3
 8027452:	b2db      	uxtb	r3, r3
 8027454:	fb12 f20a 	smulbb	r2, r2, sl
 8027458:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802745c:	fb01 2103 	mla	r1, r1, r3, r2
 8027460:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8027464:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8027468:	b2c0      	uxtb	r0, r0
 802746a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802746e:	fa5f fc8c 	uxtb.w	ip, ip
 8027472:	fb10 f00a 	smulbb	r0, r0, sl
 8027476:	fb0c 0003 	mla	r0, ip, r3, r0
 802747a:	b289      	uxth	r1, r1
 802747c:	fb1b fb0a 	smulbb	fp, fp, sl
 8027480:	b280      	uxth	r0, r0
 8027482:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8027486:	fb02 b203 	mla	r2, r2, r3, fp
 802748a:	1c4b      	adds	r3, r1, #1
 802748c:	f100 0b01 	add.w	fp, r0, #1
 8027490:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8027494:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8027498:	b292      	uxth	r2, r2
 802749a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802749e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80274a2:	ea4b 0101 	orr.w	r1, fp, r1
 80274a6:	f102 0b01 	add.w	fp, r2, #1
 80274aa:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80274ae:	0952      	lsrs	r2, r2, #5
 80274b0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80274b4:	4311      	orrs	r1, r2
 80274b6:	f8ae 1000 	strh.w	r1, [lr]
 80274ba:	e79e      	b.n	80273fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 80274bc:	b013      	add	sp, #76	; 0x4c
 80274be:	ecbd 8b08 	vpop	{d8-d11}
 80274c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80274c6:	bf00      	nop
 80274c8:	2002bd3c 	.word	0x2002bd3c

080274cc <CRC_Lock>:
 80274cc:	b530      	push	{r4, r5, lr}
 80274ce:	4a20      	ldr	r2, [pc, #128]	; (8027550 <CRC_Lock+0x84>)
 80274d0:	6813      	ldr	r3, [r2, #0]
 80274d2:	f023 0301 	bic.w	r3, r3, #1
 80274d6:	6013      	str	r3, [r2, #0]
 80274d8:	4b1e      	ldr	r3, [pc, #120]	; (8027554 <CRC_Lock+0x88>)
 80274da:	681a      	ldr	r2, [r3, #0]
 80274dc:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 80274e0:	4022      	ands	r2, r4
 80274e2:	f24c 2540 	movw	r5, #49728	; 0xc240
 80274e6:	42aa      	cmp	r2, r5
 80274e8:	d005      	beq.n	80274f6 <CRC_Lock+0x2a>
 80274ea:	681b      	ldr	r3, [r3, #0]
 80274ec:	f24c 2270 	movw	r2, #49776	; 0xc270
 80274f0:	4023      	ands	r3, r4
 80274f2:	4293      	cmp	r3, r2
 80274f4:	d124      	bne.n	8027540 <CRC_Lock+0x74>
 80274f6:	4b18      	ldr	r3, [pc, #96]	; (8027558 <CRC_Lock+0x8c>)
 80274f8:	681b      	ldr	r3, [r3, #0]
 80274fa:	bb0b      	cbnz	r3, 8027540 <CRC_Lock+0x74>
 80274fc:	4b17      	ldr	r3, [pc, #92]	; (802755c <CRC_Lock+0x90>)
 80274fe:	681a      	ldr	r2, [r3, #0]
 8027500:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8027504:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8027508:	d00d      	beq.n	8027526 <CRC_Lock+0x5a>
 802750a:	681a      	ldr	r2, [r3, #0]
 802750c:	f240 4483 	movw	r4, #1155	; 0x483
 8027510:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8027514:	42a2      	cmp	r2, r4
 8027516:	d006      	beq.n	8027526 <CRC_Lock+0x5a>
 8027518:	681b      	ldr	r3, [r3, #0]
 802751a:	f240 4285 	movw	r2, #1157	; 0x485
 802751e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8027522:	4293      	cmp	r3, r2
 8027524:	d10c      	bne.n	8027540 <CRC_Lock+0x74>
 8027526:	4b0e      	ldr	r3, [pc, #56]	; (8027560 <CRC_Lock+0x94>)
 8027528:	2201      	movs	r2, #1
 802752a:	601a      	str	r2, [r3, #0]
 802752c:	681a      	ldr	r2, [r3, #0]
 802752e:	2a00      	cmp	r2, #0
 8027530:	d1fc      	bne.n	802752c <CRC_Lock+0x60>
 8027532:	4b0c      	ldr	r3, [pc, #48]	; (8027564 <CRC_Lock+0x98>)
 8027534:	6018      	str	r0, [r3, #0]
 8027536:	6818      	ldr	r0, [r3, #0]
 8027538:	1a43      	subs	r3, r0, r1
 802753a:	4258      	negs	r0, r3
 802753c:	4158      	adcs	r0, r3
 802753e:	bd30      	pop	{r4, r5, pc}
 8027540:	4b09      	ldr	r3, [pc, #36]	; (8027568 <CRC_Lock+0x9c>)
 8027542:	2201      	movs	r2, #1
 8027544:	601a      	str	r2, [r3, #0]
 8027546:	681a      	ldr	r2, [r3, #0]
 8027548:	2a00      	cmp	r2, #0
 802754a:	d1fc      	bne.n	8027546 <CRC_Lock+0x7a>
 802754c:	4b07      	ldr	r3, [pc, #28]	; (802756c <CRC_Lock+0xa0>)
 802754e:	e7f1      	b.n	8027534 <CRC_Lock+0x68>
 8027550:	e0002000 	.word	0xe0002000
 8027554:	e000ed00 	.word	0xe000ed00
 8027558:	e0042000 	.word	0xe0042000
 802755c:	5c001000 	.word	0x5c001000
 8027560:	58024c08 	.word	0x58024c08
 8027564:	58024c00 	.word	0x58024c00
 8027568:	40023008 	.word	0x40023008
 802756c:	40023000 	.word	0x40023000

08027570 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8027570:	6101      	str	r1, [r0, #16]
 8027572:	4770      	bx	lr

08027574 <_ZN8touchgfx8Gestures4tickEv>:
 8027574:	7b83      	ldrb	r3, [r0, #14]
 8027576:	b14b      	cbz	r3, 802758c <_ZN8touchgfx8Gestures4tickEv+0x18>
 8027578:	8903      	ldrh	r3, [r0, #8]
 802757a:	3301      	adds	r3, #1
 802757c:	b29b      	uxth	r3, r3
 802757e:	2b07      	cmp	r3, #7
 8027580:	8103      	strh	r3, [r0, #8]
 8027582:	bf81      	itttt	hi
 8027584:	2300      	movhi	r3, #0
 8027586:	8143      	strhhi	r3, [r0, #10]
 8027588:	8183      	strhhi	r3, [r0, #12]
 802758a:	7383      	strbhi	r3, [r0, #14]
 802758c:	4770      	bx	lr
	...

08027590 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8027590:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8027594:	4604      	mov	r4, r0
 8027596:	8880      	ldrh	r0, [r0, #4]
 8027598:	f8ad 0006 	strh.w	r0, [sp, #6]
 802759c:	4698      	mov	r8, r3
 802759e:	eba8 0000 	sub.w	r0, r8, r0
 80275a2:	4b1c      	ldr	r3, [pc, #112]	; (8027614 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 80275a4:	9300      	str	r3, [sp, #0]
 80275a6:	b280      	uxth	r0, r0
 80275a8:	2300      	movs	r3, #0
 80275aa:	f88d 3004 	strb.w	r3, [sp, #4]
 80275ae:	b203      	sxth	r3, r0
 80275b0:	2b00      	cmp	r3, #0
 80275b2:	bfb8      	it	lt
 80275b4:	4240      	neglt	r0, r0
 80275b6:	4617      	mov	r7, r2
 80275b8:	8aa2      	ldrh	r2, [r4, #20]
 80275ba:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 80275be:	f8ad 800a 	strh.w	r8, [sp, #10]
 80275c2:	bfb8      	it	lt
 80275c4:	b203      	sxthlt	r3, r0
 80275c6:	460e      	mov	r6, r1
 80275c8:	4293      	cmp	r3, r2
 80275ca:	88e1      	ldrh	r1, [r4, #6]
 80275cc:	f8ad 1008 	strh.w	r1, [sp, #8]
 80275d0:	f8ad 500c 	strh.w	r5, [sp, #12]
 80275d4:	dc08      	bgt.n	80275e8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 80275d6:	1a69      	subs	r1, r5, r1
 80275d8:	b289      	uxth	r1, r1
 80275da:	b20b      	sxth	r3, r1
 80275dc:	2b00      	cmp	r3, #0
 80275de:	bfbc      	itt	lt
 80275e0:	4249      	neglt	r1, r1
 80275e2:	b20b      	sxthlt	r3, r1
 80275e4:	429a      	cmp	r2, r3
 80275e6:	da13      	bge.n	8027610 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 80275e8:	6920      	ldr	r0, [r4, #16]
 80275ea:	6803      	ldr	r3, [r0, #0]
 80275ec:	4669      	mov	r1, sp
 80275ee:	685b      	ldr	r3, [r3, #4]
 80275f0:	4798      	blx	r3
 80275f2:	eba8 0606 	sub.w	r6, r8, r6
 80275f6:	2300      	movs	r3, #0
 80275f8:	1bef      	subs	r7, r5, r7
 80275fa:	2001      	movs	r0, #1
 80275fc:	8123      	strh	r3, [r4, #8]
 80275fe:	8166      	strh	r6, [r4, #10]
 8027600:	81a7      	strh	r7, [r4, #12]
 8027602:	f8a4 8004 	strh.w	r8, [r4, #4]
 8027606:	80e5      	strh	r5, [r4, #6]
 8027608:	73a0      	strb	r0, [r4, #14]
 802760a:	b004      	add	sp, #16
 802760c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027610:	2000      	movs	r0, #0
 8027612:	e7fa      	b.n	802760a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 8027614:	0802c988 	.word	0x0802c988

08027618 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8027618:	b5f0      	push	{r4, r5, r6, r7, lr}
 802761a:	461e      	mov	r6, r3
 802761c:	1e4b      	subs	r3, r1, #1
 802761e:	2b01      	cmp	r3, #1
 8027620:	b085      	sub	sp, #20
 8027622:	4604      	mov	r4, r0
 8027624:	460d      	mov	r5, r1
 8027626:	4617      	mov	r7, r2
 8027628:	d84b      	bhi.n	80276c2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 802762a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802762e:	1cd3      	adds	r3, r2, #3
 8027630:	b29b      	uxth	r3, r3
 8027632:	2b06      	cmp	r3, #6
 8027634:	d916      	bls.n	8027664 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8027636:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 80276d8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802763a:	f8cd c004 	str.w	ip, [sp, #4]
 802763e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8027642:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8027646:	6900      	ldr	r0, [r0, #16]
 8027648:	f8ad 100c 	strh.w	r1, [sp, #12]
 802764c:	f04f 0c00 	mov.w	ip, #0
 8027650:	f88d c008 	strb.w	ip, [sp, #8]
 8027654:	f8ad 200a 	strh.w	r2, [sp, #10]
 8027658:	f8ad 300e 	strh.w	r3, [sp, #14]
 802765c:	6803      	ldr	r3, [r0, #0]
 802765e:	a901      	add	r1, sp, #4
 8027660:	689b      	ldr	r3, [r3, #8]
 8027662:	4798      	blx	r3
 8027664:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8027668:	1cd3      	adds	r3, r2, #3
 802766a:	b29b      	uxth	r3, r3
 802766c:	2b06      	cmp	r3, #6
 802766e:	d916      	bls.n	802769e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8027670:	f8df c064 	ldr.w	ip, [pc, #100]	; 80276d8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8027674:	f8cd c004 	str.w	ip, [sp, #4]
 8027678:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802767c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8027680:	6920      	ldr	r0, [r4, #16]
 8027682:	f8ad 100c 	strh.w	r1, [sp, #12]
 8027686:	f04f 0c01 	mov.w	ip, #1
 802768a:	f88d c008 	strb.w	ip, [sp, #8]
 802768e:	f8ad 200a 	strh.w	r2, [sp, #10]
 8027692:	f8ad 300e 	strh.w	r3, [sp, #14]
 8027696:	6803      	ldr	r3, [r0, #0]
 8027698:	a901      	add	r1, sp, #4
 802769a:	689b      	ldr	r3, [r3, #8]
 802769c:	4798      	blx	r3
 802769e:	4b0d      	ldr	r3, [pc, #52]	; (80276d4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 80276a0:	9301      	str	r3, [sp, #4]
 80276a2:	6920      	ldr	r0, [r4, #16]
 80276a4:	f88d 5008 	strb.w	r5, [sp, #8]
 80276a8:	2300      	movs	r3, #0
 80276aa:	f8ad 700a 	strh.w	r7, [sp, #10]
 80276ae:	f8ad 600c 	strh.w	r6, [sp, #12]
 80276b2:	f8ad 300e 	strh.w	r3, [sp, #14]
 80276b6:	6803      	ldr	r3, [r0, #0]
 80276b8:	a901      	add	r1, sp, #4
 80276ba:	681b      	ldr	r3, [r3, #0]
 80276bc:	4798      	blx	r3
 80276be:	b005      	add	sp, #20
 80276c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80276c2:	2900      	cmp	r1, #0
 80276c4:	d1eb      	bne.n	802769e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80276c6:	80a2      	strh	r2, [r4, #4]
 80276c8:	80c6      	strh	r6, [r0, #6]
 80276ca:	60a1      	str	r1, [r4, #8]
 80276cc:	81a1      	strh	r1, [r4, #12]
 80276ce:	73a1      	strb	r1, [r4, #14]
 80276d0:	e7e5      	b.n	802769e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80276d2:	bf00      	nop
 80276d4:	0802c974 	.word	0x0802c974
 80276d8:	0802c99c 	.word	0x0802c99c

080276dc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 80276dc:	b570      	push	{r4, r5, r6, lr}
 80276de:	790b      	ldrb	r3, [r1, #4]
 80276e0:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 80276e4:	2b00      	cmp	r3, #0
 80276e6:	bf0c      	ite	eq
 80276e8:	2301      	moveq	r3, #1
 80276ea:	2300      	movne	r3, #0
 80276ec:	4604      	mov	r4, r0
 80276ee:	460e      	mov	r6, r1
 80276f0:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 80276f4:	d109      	bne.n	802770a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 80276f6:	b14d      	cbz	r5, 802770c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 80276f8:	7933      	ldrb	r3, [r6, #4]
 80276fa:	2b01      	cmp	r3, #1
 80276fc:	d10c      	bne.n	8027718 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 80276fe:	6823      	ldr	r3, [r4, #0]
 8027700:	4620      	mov	r0, r4
 8027702:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8027704:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8027708:	4718      	bx	r3
 802770a:	b12d      	cbz	r5, 8027718 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802770c:	6823      	ldr	r3, [r4, #0]
 802770e:	4620      	mov	r0, r4
 8027710:	695b      	ldr	r3, [r3, #20]
 8027712:	4798      	blx	r3
 8027714:	2d00      	cmp	r5, #0
 8027716:	d1ef      	bne.n	80276f8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8027718:	bd70      	pop	{r4, r5, r6, pc}

0802771a <__aeabi_atexit>:
 802771a:	460b      	mov	r3, r1
 802771c:	4601      	mov	r1, r0
 802771e:	4618      	mov	r0, r3
 8027720:	f000 b852 	b.w	80277c8 <__cxa_atexit>

08027724 <_ZdlPvj>:
 8027724:	f000 b812 	b.w	802774c <_ZdlPv>

08027728 <__cxa_guard_acquire>:
 8027728:	6803      	ldr	r3, [r0, #0]
 802772a:	07db      	lsls	r3, r3, #31
 802772c:	d406      	bmi.n	802773c <__cxa_guard_acquire+0x14>
 802772e:	7843      	ldrb	r3, [r0, #1]
 8027730:	b103      	cbz	r3, 8027734 <__cxa_guard_acquire+0xc>
 8027732:	deff      	udf	#255	; 0xff
 8027734:	2301      	movs	r3, #1
 8027736:	7043      	strb	r3, [r0, #1]
 8027738:	4618      	mov	r0, r3
 802773a:	4770      	bx	lr
 802773c:	2000      	movs	r0, #0
 802773e:	4770      	bx	lr

08027740 <__cxa_guard_release>:
 8027740:	2301      	movs	r3, #1
 8027742:	6003      	str	r3, [r0, #0]
 8027744:	4770      	bx	lr

08027746 <__cxa_pure_virtual>:
 8027746:	b508      	push	{r3, lr}
 8027748:	f000 f80e 	bl	8027768 <_ZSt9terminatev>

0802774c <_ZdlPv>:
 802774c:	f000 b9b0 	b.w	8027ab0 <free>

08027750 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8027750:	b508      	push	{r3, lr}
 8027752:	4780      	blx	r0
 8027754:	f000 f80d 	bl	8027772 <abort>

08027758 <_ZSt13get_terminatev>:
 8027758:	4b02      	ldr	r3, [pc, #8]	; (8027764 <_ZSt13get_terminatev+0xc>)
 802775a:	6818      	ldr	r0, [r3, #0]
 802775c:	f3bf 8f5b 	dmb	ish
 8027760:	4770      	bx	lr
 8027762:	bf00      	nop
 8027764:	200000d4 	.word	0x200000d4

08027768 <_ZSt9terminatev>:
 8027768:	b508      	push	{r3, lr}
 802776a:	f7ff fff5 	bl	8027758 <_ZSt13get_terminatev>
 802776e:	f7ff ffef 	bl	8027750 <_ZN10__cxxabiv111__terminateEPFvvE>

08027772 <abort>:
 8027772:	b508      	push	{r3, lr}
 8027774:	2006      	movs	r0, #6
 8027776:	f000 fdf3 	bl	8028360 <raise>
 802777a:	2001      	movs	r0, #1
 802777c:	f7da fbcc 	bl	8001f18 <_exit>

08027780 <__assert_func>:
 8027780:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8027782:	4614      	mov	r4, r2
 8027784:	461a      	mov	r2, r3
 8027786:	4b09      	ldr	r3, [pc, #36]	; (80277ac <__assert_func+0x2c>)
 8027788:	681b      	ldr	r3, [r3, #0]
 802778a:	4605      	mov	r5, r0
 802778c:	68d8      	ldr	r0, [r3, #12]
 802778e:	b14c      	cbz	r4, 80277a4 <__assert_func+0x24>
 8027790:	4b07      	ldr	r3, [pc, #28]	; (80277b0 <__assert_func+0x30>)
 8027792:	9100      	str	r1, [sp, #0]
 8027794:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8027798:	4906      	ldr	r1, [pc, #24]	; (80277b4 <__assert_func+0x34>)
 802779a:	462b      	mov	r3, r5
 802779c:	f000 f912 	bl	80279c4 <fiprintf>
 80277a0:	f7ff ffe7 	bl	8027772 <abort>
 80277a4:	4b04      	ldr	r3, [pc, #16]	; (80277b8 <__assert_func+0x38>)
 80277a6:	461c      	mov	r4, r3
 80277a8:	e7f3      	b.n	8027792 <__assert_func+0x12>
 80277aa:	bf00      	nop
 80277ac:	200000d8 	.word	0x200000d8
 80277b0:	0802dcc1 	.word	0x0802dcc1
 80277b4:	0802dcce 	.word	0x0802dcce
 80277b8:	0802dcfc 	.word	0x0802dcfc

080277bc <atexit>:
 80277bc:	2300      	movs	r3, #0
 80277be:	4601      	mov	r1, r0
 80277c0:	461a      	mov	r2, r3
 80277c2:	4618      	mov	r0, r3
 80277c4:	f000 bf06 	b.w	80285d4 <__register_exitproc>

080277c8 <__cxa_atexit>:
 80277c8:	b510      	push	{r4, lr}
 80277ca:	4c05      	ldr	r4, [pc, #20]	; (80277e0 <__cxa_atexit+0x18>)
 80277cc:	4613      	mov	r3, r2
 80277ce:	b12c      	cbz	r4, 80277dc <__cxa_atexit+0x14>
 80277d0:	460a      	mov	r2, r1
 80277d2:	4601      	mov	r1, r0
 80277d4:	2002      	movs	r0, #2
 80277d6:	f000 fefd 	bl	80285d4 <__register_exitproc>
 80277da:	bd10      	pop	{r4, pc}
 80277dc:	4620      	mov	r0, r4
 80277de:	e7fc      	b.n	80277da <__cxa_atexit+0x12>
 80277e0:	080285d5 	.word	0x080285d5

080277e4 <div>:
 80277e4:	2900      	cmp	r1, #0
 80277e6:	b510      	push	{r4, lr}
 80277e8:	fb91 f4f2 	sdiv	r4, r1, r2
 80277ec:	fb02 1314 	mls	r3, r2, r4, r1
 80277f0:	db06      	blt.n	8027800 <div+0x1c>
 80277f2:	2b00      	cmp	r3, #0
 80277f4:	da01      	bge.n	80277fa <div+0x16>
 80277f6:	3401      	adds	r4, #1
 80277f8:	1a9b      	subs	r3, r3, r2
 80277fa:	e9c0 4300 	strd	r4, r3, [r0]
 80277fe:	bd10      	pop	{r4, pc}
 8027800:	2b00      	cmp	r3, #0
 8027802:	bfc4      	itt	gt
 8027804:	f104 34ff 	addgt.w	r4, r4, #4294967295
 8027808:	189b      	addgt	r3, r3, r2
 802780a:	e7f6      	b.n	80277fa <div+0x16>

0802780c <__errno>:
 802780c:	4b01      	ldr	r3, [pc, #4]	; (8027814 <__errno+0x8>)
 802780e:	6818      	ldr	r0, [r3, #0]
 8027810:	4770      	bx	lr
 8027812:	bf00      	nop
 8027814:	200000d8 	.word	0x200000d8

08027818 <std>:
 8027818:	2300      	movs	r3, #0
 802781a:	b510      	push	{r4, lr}
 802781c:	4604      	mov	r4, r0
 802781e:	e9c0 3300 	strd	r3, r3, [r0]
 8027822:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8027826:	6083      	str	r3, [r0, #8]
 8027828:	8181      	strh	r1, [r0, #12]
 802782a:	6643      	str	r3, [r0, #100]	; 0x64
 802782c:	81c2      	strh	r2, [r0, #14]
 802782e:	6183      	str	r3, [r0, #24]
 8027830:	4619      	mov	r1, r3
 8027832:	2208      	movs	r2, #8
 8027834:	305c      	adds	r0, #92	; 0x5c
 8027836:	f000 f951 	bl	8027adc <memset>
 802783a:	4b05      	ldr	r3, [pc, #20]	; (8027850 <std+0x38>)
 802783c:	6263      	str	r3, [r4, #36]	; 0x24
 802783e:	4b05      	ldr	r3, [pc, #20]	; (8027854 <std+0x3c>)
 8027840:	62a3      	str	r3, [r4, #40]	; 0x28
 8027842:	4b05      	ldr	r3, [pc, #20]	; (8027858 <std+0x40>)
 8027844:	62e3      	str	r3, [r4, #44]	; 0x2c
 8027846:	4b05      	ldr	r3, [pc, #20]	; (802785c <std+0x44>)
 8027848:	6224      	str	r4, [r4, #32]
 802784a:	6323      	str	r3, [r4, #48]	; 0x30
 802784c:	bd10      	pop	{r4, pc}
 802784e:	bf00      	nop
 8027850:	08028399 	.word	0x08028399
 8027854:	080283bb 	.word	0x080283bb
 8027858:	080283f3 	.word	0x080283f3
 802785c:	08028417 	.word	0x08028417

08027860 <_cleanup_r>:
 8027860:	4901      	ldr	r1, [pc, #4]	; (8027868 <_cleanup_r+0x8>)
 8027862:	f000 b8c1 	b.w	80279e8 <_fwalk_reent>
 8027866:	bf00      	nop
 8027868:	080287c5 	.word	0x080287c5

0802786c <__sfmoreglue>:
 802786c:	b570      	push	{r4, r5, r6, lr}
 802786e:	1e4a      	subs	r2, r1, #1
 8027870:	2568      	movs	r5, #104	; 0x68
 8027872:	4355      	muls	r5, r2
 8027874:	460e      	mov	r6, r1
 8027876:	f105 0174 	add.w	r1, r5, #116	; 0x74
 802787a:	f000 f987 	bl	8027b8c <_malloc_r>
 802787e:	4604      	mov	r4, r0
 8027880:	b140      	cbz	r0, 8027894 <__sfmoreglue+0x28>
 8027882:	2100      	movs	r1, #0
 8027884:	e9c0 1600 	strd	r1, r6, [r0]
 8027888:	300c      	adds	r0, #12
 802788a:	60a0      	str	r0, [r4, #8]
 802788c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8027890:	f000 f924 	bl	8027adc <memset>
 8027894:	4620      	mov	r0, r4
 8027896:	bd70      	pop	{r4, r5, r6, pc}

08027898 <__sfp_lock_acquire>:
 8027898:	4801      	ldr	r0, [pc, #4]	; (80278a0 <__sfp_lock_acquire+0x8>)
 802789a:	f000 b8fe 	b.w	8027a9a <__retarget_lock_acquire_recursive>
 802789e:	bf00      	nop
 80278a0:	2002c2ac 	.word	0x2002c2ac

080278a4 <__sfp_lock_release>:
 80278a4:	4801      	ldr	r0, [pc, #4]	; (80278ac <__sfp_lock_release+0x8>)
 80278a6:	f000 b8fa 	b.w	8027a9e <__retarget_lock_release_recursive>
 80278aa:	bf00      	nop
 80278ac:	2002c2ac 	.word	0x2002c2ac

080278b0 <__sinit_lock_acquire>:
 80278b0:	4801      	ldr	r0, [pc, #4]	; (80278b8 <__sinit_lock_acquire+0x8>)
 80278b2:	f000 b8f2 	b.w	8027a9a <__retarget_lock_acquire_recursive>
 80278b6:	bf00      	nop
 80278b8:	2002c2a7 	.word	0x2002c2a7

080278bc <__sinit_lock_release>:
 80278bc:	4801      	ldr	r0, [pc, #4]	; (80278c4 <__sinit_lock_release+0x8>)
 80278be:	f000 b8ee 	b.w	8027a9e <__retarget_lock_release_recursive>
 80278c2:	bf00      	nop
 80278c4:	2002c2a7 	.word	0x2002c2a7

080278c8 <__sinit>:
 80278c8:	b510      	push	{r4, lr}
 80278ca:	4604      	mov	r4, r0
 80278cc:	f7ff fff0 	bl	80278b0 <__sinit_lock_acquire>
 80278d0:	69a3      	ldr	r3, [r4, #24]
 80278d2:	b11b      	cbz	r3, 80278dc <__sinit+0x14>
 80278d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80278d8:	f7ff bff0 	b.w	80278bc <__sinit_lock_release>
 80278dc:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80278e0:	6523      	str	r3, [r4, #80]	; 0x50
 80278e2:	4b13      	ldr	r3, [pc, #76]	; (8027930 <__sinit+0x68>)
 80278e4:	4a13      	ldr	r2, [pc, #76]	; (8027934 <__sinit+0x6c>)
 80278e6:	681b      	ldr	r3, [r3, #0]
 80278e8:	62a2      	str	r2, [r4, #40]	; 0x28
 80278ea:	42a3      	cmp	r3, r4
 80278ec:	bf04      	itt	eq
 80278ee:	2301      	moveq	r3, #1
 80278f0:	61a3      	streq	r3, [r4, #24]
 80278f2:	4620      	mov	r0, r4
 80278f4:	f000 f820 	bl	8027938 <__sfp>
 80278f8:	6060      	str	r0, [r4, #4]
 80278fa:	4620      	mov	r0, r4
 80278fc:	f000 f81c 	bl	8027938 <__sfp>
 8027900:	60a0      	str	r0, [r4, #8]
 8027902:	4620      	mov	r0, r4
 8027904:	f000 f818 	bl	8027938 <__sfp>
 8027908:	2200      	movs	r2, #0
 802790a:	60e0      	str	r0, [r4, #12]
 802790c:	2104      	movs	r1, #4
 802790e:	6860      	ldr	r0, [r4, #4]
 8027910:	f7ff ff82 	bl	8027818 <std>
 8027914:	68a0      	ldr	r0, [r4, #8]
 8027916:	2201      	movs	r2, #1
 8027918:	2109      	movs	r1, #9
 802791a:	f7ff ff7d 	bl	8027818 <std>
 802791e:	68e0      	ldr	r0, [r4, #12]
 8027920:	2202      	movs	r2, #2
 8027922:	2112      	movs	r1, #18
 8027924:	f7ff ff78 	bl	8027818 <std>
 8027928:	2301      	movs	r3, #1
 802792a:	61a3      	str	r3, [r4, #24]
 802792c:	e7d2      	b.n	80278d4 <__sinit+0xc>
 802792e:	bf00      	nop
 8027930:	0802dd60 	.word	0x0802dd60
 8027934:	08027861 	.word	0x08027861

08027938 <__sfp>:
 8027938:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802793a:	4607      	mov	r7, r0
 802793c:	f7ff ffac 	bl	8027898 <__sfp_lock_acquire>
 8027940:	4b1e      	ldr	r3, [pc, #120]	; (80279bc <__sfp+0x84>)
 8027942:	681e      	ldr	r6, [r3, #0]
 8027944:	69b3      	ldr	r3, [r6, #24]
 8027946:	b913      	cbnz	r3, 802794e <__sfp+0x16>
 8027948:	4630      	mov	r0, r6
 802794a:	f7ff ffbd 	bl	80278c8 <__sinit>
 802794e:	3648      	adds	r6, #72	; 0x48
 8027950:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8027954:	3b01      	subs	r3, #1
 8027956:	d503      	bpl.n	8027960 <__sfp+0x28>
 8027958:	6833      	ldr	r3, [r6, #0]
 802795a:	b30b      	cbz	r3, 80279a0 <__sfp+0x68>
 802795c:	6836      	ldr	r6, [r6, #0]
 802795e:	e7f7      	b.n	8027950 <__sfp+0x18>
 8027960:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8027964:	b9d5      	cbnz	r5, 802799c <__sfp+0x64>
 8027966:	4b16      	ldr	r3, [pc, #88]	; (80279c0 <__sfp+0x88>)
 8027968:	60e3      	str	r3, [r4, #12]
 802796a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802796e:	6665      	str	r5, [r4, #100]	; 0x64
 8027970:	f000 f892 	bl	8027a98 <__retarget_lock_init_recursive>
 8027974:	f7ff ff96 	bl	80278a4 <__sfp_lock_release>
 8027978:	e9c4 5501 	strd	r5, r5, [r4, #4]
 802797c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8027980:	6025      	str	r5, [r4, #0]
 8027982:	61a5      	str	r5, [r4, #24]
 8027984:	2208      	movs	r2, #8
 8027986:	4629      	mov	r1, r5
 8027988:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 802798c:	f000 f8a6 	bl	8027adc <memset>
 8027990:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8027994:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8027998:	4620      	mov	r0, r4
 802799a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802799c:	3468      	adds	r4, #104	; 0x68
 802799e:	e7d9      	b.n	8027954 <__sfp+0x1c>
 80279a0:	2104      	movs	r1, #4
 80279a2:	4638      	mov	r0, r7
 80279a4:	f7ff ff62 	bl	802786c <__sfmoreglue>
 80279a8:	4604      	mov	r4, r0
 80279aa:	6030      	str	r0, [r6, #0]
 80279ac:	2800      	cmp	r0, #0
 80279ae:	d1d5      	bne.n	802795c <__sfp+0x24>
 80279b0:	f7ff ff78 	bl	80278a4 <__sfp_lock_release>
 80279b4:	230c      	movs	r3, #12
 80279b6:	603b      	str	r3, [r7, #0]
 80279b8:	e7ee      	b.n	8027998 <__sfp+0x60>
 80279ba:	bf00      	nop
 80279bc:	0802dd60 	.word	0x0802dd60
 80279c0:	ffff0001 	.word	0xffff0001

080279c4 <fiprintf>:
 80279c4:	b40e      	push	{r1, r2, r3}
 80279c6:	b503      	push	{r0, r1, lr}
 80279c8:	4601      	mov	r1, r0
 80279ca:	ab03      	add	r3, sp, #12
 80279cc:	4805      	ldr	r0, [pc, #20]	; (80279e4 <fiprintf+0x20>)
 80279ce:	f853 2b04 	ldr.w	r2, [r3], #4
 80279d2:	6800      	ldr	r0, [r0, #0]
 80279d4:	9301      	str	r3, [sp, #4]
 80279d6:	f000 f95d 	bl	8027c94 <_vfiprintf_r>
 80279da:	b002      	add	sp, #8
 80279dc:	f85d eb04 	ldr.w	lr, [sp], #4
 80279e0:	b003      	add	sp, #12
 80279e2:	4770      	bx	lr
 80279e4:	200000d8 	.word	0x200000d8

080279e8 <_fwalk_reent>:
 80279e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80279ec:	4606      	mov	r6, r0
 80279ee:	4688      	mov	r8, r1
 80279f0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80279f4:	2700      	movs	r7, #0
 80279f6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80279fa:	f1b9 0901 	subs.w	r9, r9, #1
 80279fe:	d505      	bpl.n	8027a0c <_fwalk_reent+0x24>
 8027a00:	6824      	ldr	r4, [r4, #0]
 8027a02:	2c00      	cmp	r4, #0
 8027a04:	d1f7      	bne.n	80279f6 <_fwalk_reent+0xe>
 8027a06:	4638      	mov	r0, r7
 8027a08:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8027a0c:	89ab      	ldrh	r3, [r5, #12]
 8027a0e:	2b01      	cmp	r3, #1
 8027a10:	d907      	bls.n	8027a22 <_fwalk_reent+0x3a>
 8027a12:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8027a16:	3301      	adds	r3, #1
 8027a18:	d003      	beq.n	8027a22 <_fwalk_reent+0x3a>
 8027a1a:	4629      	mov	r1, r5
 8027a1c:	4630      	mov	r0, r6
 8027a1e:	47c0      	blx	r8
 8027a20:	4307      	orrs	r7, r0
 8027a22:	3568      	adds	r5, #104	; 0x68
 8027a24:	e7e9      	b.n	80279fa <_fwalk_reent+0x12>
	...

08027a28 <__libc_init_array>:
 8027a28:	b570      	push	{r4, r5, r6, lr}
 8027a2a:	4d0d      	ldr	r5, [pc, #52]	; (8027a60 <__libc_init_array+0x38>)
 8027a2c:	4c0d      	ldr	r4, [pc, #52]	; (8027a64 <__libc_init_array+0x3c>)
 8027a2e:	1b64      	subs	r4, r4, r5
 8027a30:	10a4      	asrs	r4, r4, #2
 8027a32:	2600      	movs	r6, #0
 8027a34:	42a6      	cmp	r6, r4
 8027a36:	d109      	bne.n	8027a4c <__libc_init_array+0x24>
 8027a38:	4d0b      	ldr	r5, [pc, #44]	; (8027a68 <__libc_init_array+0x40>)
 8027a3a:	4c0c      	ldr	r4, [pc, #48]	; (8027a6c <__libc_init_array+0x44>)
 8027a3c:	f000 ffb4 	bl	80289a8 <_init>
 8027a40:	1b64      	subs	r4, r4, r5
 8027a42:	10a4      	asrs	r4, r4, #2
 8027a44:	2600      	movs	r6, #0
 8027a46:	42a6      	cmp	r6, r4
 8027a48:	d105      	bne.n	8027a56 <__libc_init_array+0x2e>
 8027a4a:	bd70      	pop	{r4, r5, r6, pc}
 8027a4c:	f855 3b04 	ldr.w	r3, [r5], #4
 8027a50:	4798      	blx	r3
 8027a52:	3601      	adds	r6, #1
 8027a54:	e7ee      	b.n	8027a34 <__libc_init_array+0xc>
 8027a56:	f855 3b04 	ldr.w	r3, [r5], #4
 8027a5a:	4798      	blx	r3
 8027a5c:	3601      	adds	r6, #1
 8027a5e:	e7f2      	b.n	8027a46 <__libc_init_array+0x1e>
 8027a60:	0802e1a0 	.word	0x0802e1a0
 8027a64:	0802e1a0 	.word	0x0802e1a0
 8027a68:	0802e1a0 	.word	0x0802e1a0
 8027a6c:	0802e1b8 	.word	0x0802e1b8

08027a70 <ldiv>:
 8027a70:	2900      	cmp	r1, #0
 8027a72:	b510      	push	{r4, lr}
 8027a74:	fb91 f4f2 	sdiv	r4, r1, r2
 8027a78:	fb02 1314 	mls	r3, r2, r4, r1
 8027a7c:	db06      	blt.n	8027a8c <ldiv+0x1c>
 8027a7e:	2b00      	cmp	r3, #0
 8027a80:	da01      	bge.n	8027a86 <ldiv+0x16>
 8027a82:	3401      	adds	r4, #1
 8027a84:	1a9b      	subs	r3, r3, r2
 8027a86:	e9c0 4300 	strd	r4, r3, [r0]
 8027a8a:	bd10      	pop	{r4, pc}
 8027a8c:	2b00      	cmp	r3, #0
 8027a8e:	bfc4      	itt	gt
 8027a90:	f104 34ff 	addgt.w	r4, r4, #4294967295
 8027a94:	189b      	addgt	r3, r3, r2
 8027a96:	e7f6      	b.n	8027a86 <ldiv+0x16>

08027a98 <__retarget_lock_init_recursive>:
 8027a98:	4770      	bx	lr

08027a9a <__retarget_lock_acquire_recursive>:
 8027a9a:	4770      	bx	lr

08027a9c <__retarget_lock_release>:
 8027a9c:	4770      	bx	lr

08027a9e <__retarget_lock_release_recursive>:
 8027a9e:	4770      	bx	lr

08027aa0 <malloc>:
 8027aa0:	4b02      	ldr	r3, [pc, #8]	; (8027aac <malloc+0xc>)
 8027aa2:	4601      	mov	r1, r0
 8027aa4:	6818      	ldr	r0, [r3, #0]
 8027aa6:	f000 b871 	b.w	8027b8c <_malloc_r>
 8027aaa:	bf00      	nop
 8027aac:	200000d8 	.word	0x200000d8

08027ab0 <free>:
 8027ab0:	4b02      	ldr	r3, [pc, #8]	; (8027abc <free+0xc>)
 8027ab2:	4601      	mov	r1, r0
 8027ab4:	6818      	ldr	r0, [r3, #0]
 8027ab6:	f000 b819 	b.w	8027aec <_free_r>
 8027aba:	bf00      	nop
 8027abc:	200000d8 	.word	0x200000d8

08027ac0 <memcpy>:
 8027ac0:	440a      	add	r2, r1
 8027ac2:	4291      	cmp	r1, r2
 8027ac4:	f100 33ff 	add.w	r3, r0, #4294967295
 8027ac8:	d100      	bne.n	8027acc <memcpy+0xc>
 8027aca:	4770      	bx	lr
 8027acc:	b510      	push	{r4, lr}
 8027ace:	f811 4b01 	ldrb.w	r4, [r1], #1
 8027ad2:	f803 4f01 	strb.w	r4, [r3, #1]!
 8027ad6:	4291      	cmp	r1, r2
 8027ad8:	d1f9      	bne.n	8027ace <memcpy+0xe>
 8027ada:	bd10      	pop	{r4, pc}

08027adc <memset>:
 8027adc:	4402      	add	r2, r0
 8027ade:	4603      	mov	r3, r0
 8027ae0:	4293      	cmp	r3, r2
 8027ae2:	d100      	bne.n	8027ae6 <memset+0xa>
 8027ae4:	4770      	bx	lr
 8027ae6:	f803 1b01 	strb.w	r1, [r3], #1
 8027aea:	e7f9      	b.n	8027ae0 <memset+0x4>

08027aec <_free_r>:
 8027aec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8027aee:	2900      	cmp	r1, #0
 8027af0:	d048      	beq.n	8027b84 <_free_r+0x98>
 8027af2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8027af6:	9001      	str	r0, [sp, #4]
 8027af8:	2b00      	cmp	r3, #0
 8027afa:	f1a1 0404 	sub.w	r4, r1, #4
 8027afe:	bfb8      	it	lt
 8027b00:	18e4      	addlt	r4, r4, r3
 8027b02:	f000 ff11 	bl	8028928 <__malloc_lock>
 8027b06:	4a20      	ldr	r2, [pc, #128]	; (8027b88 <_free_r+0x9c>)
 8027b08:	9801      	ldr	r0, [sp, #4]
 8027b0a:	6813      	ldr	r3, [r2, #0]
 8027b0c:	4615      	mov	r5, r2
 8027b0e:	b933      	cbnz	r3, 8027b1e <_free_r+0x32>
 8027b10:	6063      	str	r3, [r4, #4]
 8027b12:	6014      	str	r4, [r2, #0]
 8027b14:	b003      	add	sp, #12
 8027b16:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8027b1a:	f000 bf0b 	b.w	8028934 <__malloc_unlock>
 8027b1e:	42a3      	cmp	r3, r4
 8027b20:	d90b      	bls.n	8027b3a <_free_r+0x4e>
 8027b22:	6821      	ldr	r1, [r4, #0]
 8027b24:	1862      	adds	r2, r4, r1
 8027b26:	4293      	cmp	r3, r2
 8027b28:	bf04      	itt	eq
 8027b2a:	681a      	ldreq	r2, [r3, #0]
 8027b2c:	685b      	ldreq	r3, [r3, #4]
 8027b2e:	6063      	str	r3, [r4, #4]
 8027b30:	bf04      	itt	eq
 8027b32:	1852      	addeq	r2, r2, r1
 8027b34:	6022      	streq	r2, [r4, #0]
 8027b36:	602c      	str	r4, [r5, #0]
 8027b38:	e7ec      	b.n	8027b14 <_free_r+0x28>
 8027b3a:	461a      	mov	r2, r3
 8027b3c:	685b      	ldr	r3, [r3, #4]
 8027b3e:	b10b      	cbz	r3, 8027b44 <_free_r+0x58>
 8027b40:	42a3      	cmp	r3, r4
 8027b42:	d9fa      	bls.n	8027b3a <_free_r+0x4e>
 8027b44:	6811      	ldr	r1, [r2, #0]
 8027b46:	1855      	adds	r5, r2, r1
 8027b48:	42a5      	cmp	r5, r4
 8027b4a:	d10b      	bne.n	8027b64 <_free_r+0x78>
 8027b4c:	6824      	ldr	r4, [r4, #0]
 8027b4e:	4421      	add	r1, r4
 8027b50:	1854      	adds	r4, r2, r1
 8027b52:	42a3      	cmp	r3, r4
 8027b54:	6011      	str	r1, [r2, #0]
 8027b56:	d1dd      	bne.n	8027b14 <_free_r+0x28>
 8027b58:	681c      	ldr	r4, [r3, #0]
 8027b5a:	685b      	ldr	r3, [r3, #4]
 8027b5c:	6053      	str	r3, [r2, #4]
 8027b5e:	4421      	add	r1, r4
 8027b60:	6011      	str	r1, [r2, #0]
 8027b62:	e7d7      	b.n	8027b14 <_free_r+0x28>
 8027b64:	d902      	bls.n	8027b6c <_free_r+0x80>
 8027b66:	230c      	movs	r3, #12
 8027b68:	6003      	str	r3, [r0, #0]
 8027b6a:	e7d3      	b.n	8027b14 <_free_r+0x28>
 8027b6c:	6825      	ldr	r5, [r4, #0]
 8027b6e:	1961      	adds	r1, r4, r5
 8027b70:	428b      	cmp	r3, r1
 8027b72:	bf04      	itt	eq
 8027b74:	6819      	ldreq	r1, [r3, #0]
 8027b76:	685b      	ldreq	r3, [r3, #4]
 8027b78:	6063      	str	r3, [r4, #4]
 8027b7a:	bf04      	itt	eq
 8027b7c:	1949      	addeq	r1, r1, r5
 8027b7e:	6021      	streq	r1, [r4, #0]
 8027b80:	6054      	str	r4, [r2, #4]
 8027b82:	e7c7      	b.n	8027b14 <_free_r+0x28>
 8027b84:	b003      	add	sp, #12
 8027b86:	bd30      	pop	{r4, r5, pc}
 8027b88:	2002be30 	.word	0x2002be30

08027b8c <_malloc_r>:
 8027b8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8027b8e:	1ccd      	adds	r5, r1, #3
 8027b90:	f025 0503 	bic.w	r5, r5, #3
 8027b94:	3508      	adds	r5, #8
 8027b96:	2d0c      	cmp	r5, #12
 8027b98:	bf38      	it	cc
 8027b9a:	250c      	movcc	r5, #12
 8027b9c:	2d00      	cmp	r5, #0
 8027b9e:	4606      	mov	r6, r0
 8027ba0:	db01      	blt.n	8027ba6 <_malloc_r+0x1a>
 8027ba2:	42a9      	cmp	r1, r5
 8027ba4:	d903      	bls.n	8027bae <_malloc_r+0x22>
 8027ba6:	230c      	movs	r3, #12
 8027ba8:	6033      	str	r3, [r6, #0]
 8027baa:	2000      	movs	r0, #0
 8027bac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8027bae:	f000 febb 	bl	8028928 <__malloc_lock>
 8027bb2:	4921      	ldr	r1, [pc, #132]	; (8027c38 <_malloc_r+0xac>)
 8027bb4:	680a      	ldr	r2, [r1, #0]
 8027bb6:	4614      	mov	r4, r2
 8027bb8:	b99c      	cbnz	r4, 8027be2 <_malloc_r+0x56>
 8027bba:	4f20      	ldr	r7, [pc, #128]	; (8027c3c <_malloc_r+0xb0>)
 8027bbc:	683b      	ldr	r3, [r7, #0]
 8027bbe:	b923      	cbnz	r3, 8027bca <_malloc_r+0x3e>
 8027bc0:	4621      	mov	r1, r4
 8027bc2:	4630      	mov	r0, r6
 8027bc4:	f000 fb94 	bl	80282f0 <_sbrk_r>
 8027bc8:	6038      	str	r0, [r7, #0]
 8027bca:	4629      	mov	r1, r5
 8027bcc:	4630      	mov	r0, r6
 8027bce:	f000 fb8f 	bl	80282f0 <_sbrk_r>
 8027bd2:	1c43      	adds	r3, r0, #1
 8027bd4:	d123      	bne.n	8027c1e <_malloc_r+0x92>
 8027bd6:	230c      	movs	r3, #12
 8027bd8:	6033      	str	r3, [r6, #0]
 8027bda:	4630      	mov	r0, r6
 8027bdc:	f000 feaa 	bl	8028934 <__malloc_unlock>
 8027be0:	e7e3      	b.n	8027baa <_malloc_r+0x1e>
 8027be2:	6823      	ldr	r3, [r4, #0]
 8027be4:	1b5b      	subs	r3, r3, r5
 8027be6:	d417      	bmi.n	8027c18 <_malloc_r+0x8c>
 8027be8:	2b0b      	cmp	r3, #11
 8027bea:	d903      	bls.n	8027bf4 <_malloc_r+0x68>
 8027bec:	6023      	str	r3, [r4, #0]
 8027bee:	441c      	add	r4, r3
 8027bf0:	6025      	str	r5, [r4, #0]
 8027bf2:	e004      	b.n	8027bfe <_malloc_r+0x72>
 8027bf4:	6863      	ldr	r3, [r4, #4]
 8027bf6:	42a2      	cmp	r2, r4
 8027bf8:	bf0c      	ite	eq
 8027bfa:	600b      	streq	r3, [r1, #0]
 8027bfc:	6053      	strne	r3, [r2, #4]
 8027bfe:	4630      	mov	r0, r6
 8027c00:	f000 fe98 	bl	8028934 <__malloc_unlock>
 8027c04:	f104 000b 	add.w	r0, r4, #11
 8027c08:	1d23      	adds	r3, r4, #4
 8027c0a:	f020 0007 	bic.w	r0, r0, #7
 8027c0e:	1ac2      	subs	r2, r0, r3
 8027c10:	d0cc      	beq.n	8027bac <_malloc_r+0x20>
 8027c12:	1a1b      	subs	r3, r3, r0
 8027c14:	50a3      	str	r3, [r4, r2]
 8027c16:	e7c9      	b.n	8027bac <_malloc_r+0x20>
 8027c18:	4622      	mov	r2, r4
 8027c1a:	6864      	ldr	r4, [r4, #4]
 8027c1c:	e7cc      	b.n	8027bb8 <_malloc_r+0x2c>
 8027c1e:	1cc4      	adds	r4, r0, #3
 8027c20:	f024 0403 	bic.w	r4, r4, #3
 8027c24:	42a0      	cmp	r0, r4
 8027c26:	d0e3      	beq.n	8027bf0 <_malloc_r+0x64>
 8027c28:	1a21      	subs	r1, r4, r0
 8027c2a:	4630      	mov	r0, r6
 8027c2c:	f000 fb60 	bl	80282f0 <_sbrk_r>
 8027c30:	3001      	adds	r0, #1
 8027c32:	d1dd      	bne.n	8027bf0 <_malloc_r+0x64>
 8027c34:	e7cf      	b.n	8027bd6 <_malloc_r+0x4a>
 8027c36:	bf00      	nop
 8027c38:	2002be30 	.word	0x2002be30
 8027c3c:	2002be34 	.word	0x2002be34

08027c40 <__sfputc_r>:
 8027c40:	6893      	ldr	r3, [r2, #8]
 8027c42:	3b01      	subs	r3, #1
 8027c44:	2b00      	cmp	r3, #0
 8027c46:	b410      	push	{r4}
 8027c48:	6093      	str	r3, [r2, #8]
 8027c4a:	da08      	bge.n	8027c5e <__sfputc_r+0x1e>
 8027c4c:	6994      	ldr	r4, [r2, #24]
 8027c4e:	42a3      	cmp	r3, r4
 8027c50:	db01      	blt.n	8027c56 <__sfputc_r+0x16>
 8027c52:	290a      	cmp	r1, #10
 8027c54:	d103      	bne.n	8027c5e <__sfputc_r+0x1e>
 8027c56:	f85d 4b04 	ldr.w	r4, [sp], #4
 8027c5a:	f000 bbe9 	b.w	8028430 <__swbuf_r>
 8027c5e:	6813      	ldr	r3, [r2, #0]
 8027c60:	1c58      	adds	r0, r3, #1
 8027c62:	6010      	str	r0, [r2, #0]
 8027c64:	7019      	strb	r1, [r3, #0]
 8027c66:	4608      	mov	r0, r1
 8027c68:	f85d 4b04 	ldr.w	r4, [sp], #4
 8027c6c:	4770      	bx	lr

08027c6e <__sfputs_r>:
 8027c6e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8027c70:	4606      	mov	r6, r0
 8027c72:	460f      	mov	r7, r1
 8027c74:	4614      	mov	r4, r2
 8027c76:	18d5      	adds	r5, r2, r3
 8027c78:	42ac      	cmp	r4, r5
 8027c7a:	d101      	bne.n	8027c80 <__sfputs_r+0x12>
 8027c7c:	2000      	movs	r0, #0
 8027c7e:	e007      	b.n	8027c90 <__sfputs_r+0x22>
 8027c80:	f814 1b01 	ldrb.w	r1, [r4], #1
 8027c84:	463a      	mov	r2, r7
 8027c86:	4630      	mov	r0, r6
 8027c88:	f7ff ffda 	bl	8027c40 <__sfputc_r>
 8027c8c:	1c43      	adds	r3, r0, #1
 8027c8e:	d1f3      	bne.n	8027c78 <__sfputs_r+0xa>
 8027c90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08027c94 <_vfiprintf_r>:
 8027c94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027c98:	460d      	mov	r5, r1
 8027c9a:	b09d      	sub	sp, #116	; 0x74
 8027c9c:	4614      	mov	r4, r2
 8027c9e:	4698      	mov	r8, r3
 8027ca0:	4606      	mov	r6, r0
 8027ca2:	b118      	cbz	r0, 8027cac <_vfiprintf_r+0x18>
 8027ca4:	6983      	ldr	r3, [r0, #24]
 8027ca6:	b90b      	cbnz	r3, 8027cac <_vfiprintf_r+0x18>
 8027ca8:	f7ff fe0e 	bl	80278c8 <__sinit>
 8027cac:	4b89      	ldr	r3, [pc, #548]	; (8027ed4 <_vfiprintf_r+0x240>)
 8027cae:	429d      	cmp	r5, r3
 8027cb0:	d11b      	bne.n	8027cea <_vfiprintf_r+0x56>
 8027cb2:	6875      	ldr	r5, [r6, #4]
 8027cb4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8027cb6:	07d9      	lsls	r1, r3, #31
 8027cb8:	d405      	bmi.n	8027cc6 <_vfiprintf_r+0x32>
 8027cba:	89ab      	ldrh	r3, [r5, #12]
 8027cbc:	059a      	lsls	r2, r3, #22
 8027cbe:	d402      	bmi.n	8027cc6 <_vfiprintf_r+0x32>
 8027cc0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8027cc2:	f7ff feea 	bl	8027a9a <__retarget_lock_acquire_recursive>
 8027cc6:	89ab      	ldrh	r3, [r5, #12]
 8027cc8:	071b      	lsls	r3, r3, #28
 8027cca:	d501      	bpl.n	8027cd0 <_vfiprintf_r+0x3c>
 8027ccc:	692b      	ldr	r3, [r5, #16]
 8027cce:	b9eb      	cbnz	r3, 8027d0c <_vfiprintf_r+0x78>
 8027cd0:	4629      	mov	r1, r5
 8027cd2:	4630      	mov	r0, r6
 8027cd4:	f000 fc10 	bl	80284f8 <__swsetup_r>
 8027cd8:	b1c0      	cbz	r0, 8027d0c <_vfiprintf_r+0x78>
 8027cda:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8027cdc:	07dc      	lsls	r4, r3, #31
 8027cde:	d50e      	bpl.n	8027cfe <_vfiprintf_r+0x6a>
 8027ce0:	f04f 30ff 	mov.w	r0, #4294967295
 8027ce4:	b01d      	add	sp, #116	; 0x74
 8027ce6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027cea:	4b7b      	ldr	r3, [pc, #492]	; (8027ed8 <_vfiprintf_r+0x244>)
 8027cec:	429d      	cmp	r5, r3
 8027cee:	d101      	bne.n	8027cf4 <_vfiprintf_r+0x60>
 8027cf0:	68b5      	ldr	r5, [r6, #8]
 8027cf2:	e7df      	b.n	8027cb4 <_vfiprintf_r+0x20>
 8027cf4:	4b79      	ldr	r3, [pc, #484]	; (8027edc <_vfiprintf_r+0x248>)
 8027cf6:	429d      	cmp	r5, r3
 8027cf8:	bf08      	it	eq
 8027cfa:	68f5      	ldreq	r5, [r6, #12]
 8027cfc:	e7da      	b.n	8027cb4 <_vfiprintf_r+0x20>
 8027cfe:	89ab      	ldrh	r3, [r5, #12]
 8027d00:	0598      	lsls	r0, r3, #22
 8027d02:	d4ed      	bmi.n	8027ce0 <_vfiprintf_r+0x4c>
 8027d04:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8027d06:	f7ff feca 	bl	8027a9e <__retarget_lock_release_recursive>
 8027d0a:	e7e9      	b.n	8027ce0 <_vfiprintf_r+0x4c>
 8027d0c:	2300      	movs	r3, #0
 8027d0e:	9309      	str	r3, [sp, #36]	; 0x24
 8027d10:	2320      	movs	r3, #32
 8027d12:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8027d16:	f8cd 800c 	str.w	r8, [sp, #12]
 8027d1a:	2330      	movs	r3, #48	; 0x30
 8027d1c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8027ee0 <_vfiprintf_r+0x24c>
 8027d20:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8027d24:	f04f 0901 	mov.w	r9, #1
 8027d28:	4623      	mov	r3, r4
 8027d2a:	469a      	mov	sl, r3
 8027d2c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8027d30:	b10a      	cbz	r2, 8027d36 <_vfiprintf_r+0xa2>
 8027d32:	2a25      	cmp	r2, #37	; 0x25
 8027d34:	d1f9      	bne.n	8027d2a <_vfiprintf_r+0x96>
 8027d36:	ebba 0b04 	subs.w	fp, sl, r4
 8027d3a:	d00b      	beq.n	8027d54 <_vfiprintf_r+0xc0>
 8027d3c:	465b      	mov	r3, fp
 8027d3e:	4622      	mov	r2, r4
 8027d40:	4629      	mov	r1, r5
 8027d42:	4630      	mov	r0, r6
 8027d44:	f7ff ff93 	bl	8027c6e <__sfputs_r>
 8027d48:	3001      	adds	r0, #1
 8027d4a:	f000 80aa 	beq.w	8027ea2 <_vfiprintf_r+0x20e>
 8027d4e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8027d50:	445a      	add	r2, fp
 8027d52:	9209      	str	r2, [sp, #36]	; 0x24
 8027d54:	f89a 3000 	ldrb.w	r3, [sl]
 8027d58:	2b00      	cmp	r3, #0
 8027d5a:	f000 80a2 	beq.w	8027ea2 <_vfiprintf_r+0x20e>
 8027d5e:	2300      	movs	r3, #0
 8027d60:	f04f 32ff 	mov.w	r2, #4294967295
 8027d64:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8027d68:	f10a 0a01 	add.w	sl, sl, #1
 8027d6c:	9304      	str	r3, [sp, #16]
 8027d6e:	9307      	str	r3, [sp, #28]
 8027d70:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8027d74:	931a      	str	r3, [sp, #104]	; 0x68
 8027d76:	4654      	mov	r4, sl
 8027d78:	2205      	movs	r2, #5
 8027d7a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8027d7e:	4858      	ldr	r0, [pc, #352]	; (8027ee0 <_vfiprintf_r+0x24c>)
 8027d80:	f7d8 fa3e 	bl	8000200 <memchr>
 8027d84:	9a04      	ldr	r2, [sp, #16]
 8027d86:	b9d8      	cbnz	r0, 8027dc0 <_vfiprintf_r+0x12c>
 8027d88:	06d1      	lsls	r1, r2, #27
 8027d8a:	bf44      	itt	mi
 8027d8c:	2320      	movmi	r3, #32
 8027d8e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8027d92:	0713      	lsls	r3, r2, #28
 8027d94:	bf44      	itt	mi
 8027d96:	232b      	movmi	r3, #43	; 0x2b
 8027d98:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8027d9c:	f89a 3000 	ldrb.w	r3, [sl]
 8027da0:	2b2a      	cmp	r3, #42	; 0x2a
 8027da2:	d015      	beq.n	8027dd0 <_vfiprintf_r+0x13c>
 8027da4:	9a07      	ldr	r2, [sp, #28]
 8027da6:	4654      	mov	r4, sl
 8027da8:	2000      	movs	r0, #0
 8027daa:	f04f 0c0a 	mov.w	ip, #10
 8027dae:	4621      	mov	r1, r4
 8027db0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8027db4:	3b30      	subs	r3, #48	; 0x30
 8027db6:	2b09      	cmp	r3, #9
 8027db8:	d94e      	bls.n	8027e58 <_vfiprintf_r+0x1c4>
 8027dba:	b1b0      	cbz	r0, 8027dea <_vfiprintf_r+0x156>
 8027dbc:	9207      	str	r2, [sp, #28]
 8027dbe:	e014      	b.n	8027dea <_vfiprintf_r+0x156>
 8027dc0:	eba0 0308 	sub.w	r3, r0, r8
 8027dc4:	fa09 f303 	lsl.w	r3, r9, r3
 8027dc8:	4313      	orrs	r3, r2
 8027dca:	9304      	str	r3, [sp, #16]
 8027dcc:	46a2      	mov	sl, r4
 8027dce:	e7d2      	b.n	8027d76 <_vfiprintf_r+0xe2>
 8027dd0:	9b03      	ldr	r3, [sp, #12]
 8027dd2:	1d19      	adds	r1, r3, #4
 8027dd4:	681b      	ldr	r3, [r3, #0]
 8027dd6:	9103      	str	r1, [sp, #12]
 8027dd8:	2b00      	cmp	r3, #0
 8027dda:	bfbb      	ittet	lt
 8027ddc:	425b      	neglt	r3, r3
 8027dde:	f042 0202 	orrlt.w	r2, r2, #2
 8027de2:	9307      	strge	r3, [sp, #28]
 8027de4:	9307      	strlt	r3, [sp, #28]
 8027de6:	bfb8      	it	lt
 8027de8:	9204      	strlt	r2, [sp, #16]
 8027dea:	7823      	ldrb	r3, [r4, #0]
 8027dec:	2b2e      	cmp	r3, #46	; 0x2e
 8027dee:	d10c      	bne.n	8027e0a <_vfiprintf_r+0x176>
 8027df0:	7863      	ldrb	r3, [r4, #1]
 8027df2:	2b2a      	cmp	r3, #42	; 0x2a
 8027df4:	d135      	bne.n	8027e62 <_vfiprintf_r+0x1ce>
 8027df6:	9b03      	ldr	r3, [sp, #12]
 8027df8:	1d1a      	adds	r2, r3, #4
 8027dfa:	681b      	ldr	r3, [r3, #0]
 8027dfc:	9203      	str	r2, [sp, #12]
 8027dfe:	2b00      	cmp	r3, #0
 8027e00:	bfb8      	it	lt
 8027e02:	f04f 33ff 	movlt.w	r3, #4294967295
 8027e06:	3402      	adds	r4, #2
 8027e08:	9305      	str	r3, [sp, #20]
 8027e0a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8027ef0 <_vfiprintf_r+0x25c>
 8027e0e:	7821      	ldrb	r1, [r4, #0]
 8027e10:	2203      	movs	r2, #3
 8027e12:	4650      	mov	r0, sl
 8027e14:	f7d8 f9f4 	bl	8000200 <memchr>
 8027e18:	b140      	cbz	r0, 8027e2c <_vfiprintf_r+0x198>
 8027e1a:	2340      	movs	r3, #64	; 0x40
 8027e1c:	eba0 000a 	sub.w	r0, r0, sl
 8027e20:	fa03 f000 	lsl.w	r0, r3, r0
 8027e24:	9b04      	ldr	r3, [sp, #16]
 8027e26:	4303      	orrs	r3, r0
 8027e28:	3401      	adds	r4, #1
 8027e2a:	9304      	str	r3, [sp, #16]
 8027e2c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8027e30:	482c      	ldr	r0, [pc, #176]	; (8027ee4 <_vfiprintf_r+0x250>)
 8027e32:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8027e36:	2206      	movs	r2, #6
 8027e38:	f7d8 f9e2 	bl	8000200 <memchr>
 8027e3c:	2800      	cmp	r0, #0
 8027e3e:	d03f      	beq.n	8027ec0 <_vfiprintf_r+0x22c>
 8027e40:	4b29      	ldr	r3, [pc, #164]	; (8027ee8 <_vfiprintf_r+0x254>)
 8027e42:	bb1b      	cbnz	r3, 8027e8c <_vfiprintf_r+0x1f8>
 8027e44:	9b03      	ldr	r3, [sp, #12]
 8027e46:	3307      	adds	r3, #7
 8027e48:	f023 0307 	bic.w	r3, r3, #7
 8027e4c:	3308      	adds	r3, #8
 8027e4e:	9303      	str	r3, [sp, #12]
 8027e50:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027e52:	443b      	add	r3, r7
 8027e54:	9309      	str	r3, [sp, #36]	; 0x24
 8027e56:	e767      	b.n	8027d28 <_vfiprintf_r+0x94>
 8027e58:	fb0c 3202 	mla	r2, ip, r2, r3
 8027e5c:	460c      	mov	r4, r1
 8027e5e:	2001      	movs	r0, #1
 8027e60:	e7a5      	b.n	8027dae <_vfiprintf_r+0x11a>
 8027e62:	2300      	movs	r3, #0
 8027e64:	3401      	adds	r4, #1
 8027e66:	9305      	str	r3, [sp, #20]
 8027e68:	4619      	mov	r1, r3
 8027e6a:	f04f 0c0a 	mov.w	ip, #10
 8027e6e:	4620      	mov	r0, r4
 8027e70:	f810 2b01 	ldrb.w	r2, [r0], #1
 8027e74:	3a30      	subs	r2, #48	; 0x30
 8027e76:	2a09      	cmp	r2, #9
 8027e78:	d903      	bls.n	8027e82 <_vfiprintf_r+0x1ee>
 8027e7a:	2b00      	cmp	r3, #0
 8027e7c:	d0c5      	beq.n	8027e0a <_vfiprintf_r+0x176>
 8027e7e:	9105      	str	r1, [sp, #20]
 8027e80:	e7c3      	b.n	8027e0a <_vfiprintf_r+0x176>
 8027e82:	fb0c 2101 	mla	r1, ip, r1, r2
 8027e86:	4604      	mov	r4, r0
 8027e88:	2301      	movs	r3, #1
 8027e8a:	e7f0      	b.n	8027e6e <_vfiprintf_r+0x1da>
 8027e8c:	ab03      	add	r3, sp, #12
 8027e8e:	9300      	str	r3, [sp, #0]
 8027e90:	462a      	mov	r2, r5
 8027e92:	4b16      	ldr	r3, [pc, #88]	; (8027eec <_vfiprintf_r+0x258>)
 8027e94:	a904      	add	r1, sp, #16
 8027e96:	4630      	mov	r0, r6
 8027e98:	f3af 8000 	nop.w
 8027e9c:	4607      	mov	r7, r0
 8027e9e:	1c78      	adds	r0, r7, #1
 8027ea0:	d1d6      	bne.n	8027e50 <_vfiprintf_r+0x1bc>
 8027ea2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8027ea4:	07d9      	lsls	r1, r3, #31
 8027ea6:	d405      	bmi.n	8027eb4 <_vfiprintf_r+0x220>
 8027ea8:	89ab      	ldrh	r3, [r5, #12]
 8027eaa:	059a      	lsls	r2, r3, #22
 8027eac:	d402      	bmi.n	8027eb4 <_vfiprintf_r+0x220>
 8027eae:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8027eb0:	f7ff fdf5 	bl	8027a9e <__retarget_lock_release_recursive>
 8027eb4:	89ab      	ldrh	r3, [r5, #12]
 8027eb6:	065b      	lsls	r3, r3, #25
 8027eb8:	f53f af12 	bmi.w	8027ce0 <_vfiprintf_r+0x4c>
 8027ebc:	9809      	ldr	r0, [sp, #36]	; 0x24
 8027ebe:	e711      	b.n	8027ce4 <_vfiprintf_r+0x50>
 8027ec0:	ab03      	add	r3, sp, #12
 8027ec2:	9300      	str	r3, [sp, #0]
 8027ec4:	462a      	mov	r2, r5
 8027ec6:	4b09      	ldr	r3, [pc, #36]	; (8027eec <_vfiprintf_r+0x258>)
 8027ec8:	a904      	add	r1, sp, #16
 8027eca:	4630      	mov	r0, r6
 8027ecc:	f000 f880 	bl	8027fd0 <_printf_i>
 8027ed0:	e7e4      	b.n	8027e9c <_vfiprintf_r+0x208>
 8027ed2:	bf00      	nop
 8027ed4:	0802dd20 	.word	0x0802dd20
 8027ed8:	0802dd40 	.word	0x0802dd40
 8027edc:	0802dd00 	.word	0x0802dd00
 8027ee0:	0802dd64 	.word	0x0802dd64
 8027ee4:	0802dd6e 	.word	0x0802dd6e
 8027ee8:	00000000 	.word	0x00000000
 8027eec:	08027c6f 	.word	0x08027c6f
 8027ef0:	0802dd6a 	.word	0x0802dd6a

08027ef4 <_printf_common>:
 8027ef4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8027ef8:	4616      	mov	r6, r2
 8027efa:	4699      	mov	r9, r3
 8027efc:	688a      	ldr	r2, [r1, #8]
 8027efe:	690b      	ldr	r3, [r1, #16]
 8027f00:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8027f04:	4293      	cmp	r3, r2
 8027f06:	bfb8      	it	lt
 8027f08:	4613      	movlt	r3, r2
 8027f0a:	6033      	str	r3, [r6, #0]
 8027f0c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8027f10:	4607      	mov	r7, r0
 8027f12:	460c      	mov	r4, r1
 8027f14:	b10a      	cbz	r2, 8027f1a <_printf_common+0x26>
 8027f16:	3301      	adds	r3, #1
 8027f18:	6033      	str	r3, [r6, #0]
 8027f1a:	6823      	ldr	r3, [r4, #0]
 8027f1c:	0699      	lsls	r1, r3, #26
 8027f1e:	bf42      	ittt	mi
 8027f20:	6833      	ldrmi	r3, [r6, #0]
 8027f22:	3302      	addmi	r3, #2
 8027f24:	6033      	strmi	r3, [r6, #0]
 8027f26:	6825      	ldr	r5, [r4, #0]
 8027f28:	f015 0506 	ands.w	r5, r5, #6
 8027f2c:	d106      	bne.n	8027f3c <_printf_common+0x48>
 8027f2e:	f104 0a19 	add.w	sl, r4, #25
 8027f32:	68e3      	ldr	r3, [r4, #12]
 8027f34:	6832      	ldr	r2, [r6, #0]
 8027f36:	1a9b      	subs	r3, r3, r2
 8027f38:	42ab      	cmp	r3, r5
 8027f3a:	dc26      	bgt.n	8027f8a <_printf_common+0x96>
 8027f3c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8027f40:	1e13      	subs	r3, r2, #0
 8027f42:	6822      	ldr	r2, [r4, #0]
 8027f44:	bf18      	it	ne
 8027f46:	2301      	movne	r3, #1
 8027f48:	0692      	lsls	r2, r2, #26
 8027f4a:	d42b      	bmi.n	8027fa4 <_printf_common+0xb0>
 8027f4c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8027f50:	4649      	mov	r1, r9
 8027f52:	4638      	mov	r0, r7
 8027f54:	47c0      	blx	r8
 8027f56:	3001      	adds	r0, #1
 8027f58:	d01e      	beq.n	8027f98 <_printf_common+0xa4>
 8027f5a:	6823      	ldr	r3, [r4, #0]
 8027f5c:	68e5      	ldr	r5, [r4, #12]
 8027f5e:	6832      	ldr	r2, [r6, #0]
 8027f60:	f003 0306 	and.w	r3, r3, #6
 8027f64:	2b04      	cmp	r3, #4
 8027f66:	bf08      	it	eq
 8027f68:	1aad      	subeq	r5, r5, r2
 8027f6a:	68a3      	ldr	r3, [r4, #8]
 8027f6c:	6922      	ldr	r2, [r4, #16]
 8027f6e:	bf0c      	ite	eq
 8027f70:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8027f74:	2500      	movne	r5, #0
 8027f76:	4293      	cmp	r3, r2
 8027f78:	bfc4      	itt	gt
 8027f7a:	1a9b      	subgt	r3, r3, r2
 8027f7c:	18ed      	addgt	r5, r5, r3
 8027f7e:	2600      	movs	r6, #0
 8027f80:	341a      	adds	r4, #26
 8027f82:	42b5      	cmp	r5, r6
 8027f84:	d11a      	bne.n	8027fbc <_printf_common+0xc8>
 8027f86:	2000      	movs	r0, #0
 8027f88:	e008      	b.n	8027f9c <_printf_common+0xa8>
 8027f8a:	2301      	movs	r3, #1
 8027f8c:	4652      	mov	r2, sl
 8027f8e:	4649      	mov	r1, r9
 8027f90:	4638      	mov	r0, r7
 8027f92:	47c0      	blx	r8
 8027f94:	3001      	adds	r0, #1
 8027f96:	d103      	bne.n	8027fa0 <_printf_common+0xac>
 8027f98:	f04f 30ff 	mov.w	r0, #4294967295
 8027f9c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8027fa0:	3501      	adds	r5, #1
 8027fa2:	e7c6      	b.n	8027f32 <_printf_common+0x3e>
 8027fa4:	18e1      	adds	r1, r4, r3
 8027fa6:	1c5a      	adds	r2, r3, #1
 8027fa8:	2030      	movs	r0, #48	; 0x30
 8027faa:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8027fae:	4422      	add	r2, r4
 8027fb0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8027fb4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8027fb8:	3302      	adds	r3, #2
 8027fba:	e7c7      	b.n	8027f4c <_printf_common+0x58>
 8027fbc:	2301      	movs	r3, #1
 8027fbe:	4622      	mov	r2, r4
 8027fc0:	4649      	mov	r1, r9
 8027fc2:	4638      	mov	r0, r7
 8027fc4:	47c0      	blx	r8
 8027fc6:	3001      	adds	r0, #1
 8027fc8:	d0e6      	beq.n	8027f98 <_printf_common+0xa4>
 8027fca:	3601      	adds	r6, #1
 8027fcc:	e7d9      	b.n	8027f82 <_printf_common+0x8e>
	...

08027fd0 <_printf_i>:
 8027fd0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8027fd4:	460c      	mov	r4, r1
 8027fd6:	4691      	mov	r9, r2
 8027fd8:	7e27      	ldrb	r7, [r4, #24]
 8027fda:	990c      	ldr	r1, [sp, #48]	; 0x30
 8027fdc:	2f78      	cmp	r7, #120	; 0x78
 8027fde:	4680      	mov	r8, r0
 8027fe0:	469a      	mov	sl, r3
 8027fe2:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8027fe6:	d807      	bhi.n	8027ff8 <_printf_i+0x28>
 8027fe8:	2f62      	cmp	r7, #98	; 0x62
 8027fea:	d80a      	bhi.n	8028002 <_printf_i+0x32>
 8027fec:	2f00      	cmp	r7, #0
 8027fee:	f000 80d8 	beq.w	80281a2 <_printf_i+0x1d2>
 8027ff2:	2f58      	cmp	r7, #88	; 0x58
 8027ff4:	f000 80a3 	beq.w	802813e <_printf_i+0x16e>
 8027ff8:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8027ffc:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8028000:	e03a      	b.n	8028078 <_printf_i+0xa8>
 8028002:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8028006:	2b15      	cmp	r3, #21
 8028008:	d8f6      	bhi.n	8027ff8 <_printf_i+0x28>
 802800a:	a001      	add	r0, pc, #4	; (adr r0, 8028010 <_printf_i+0x40>)
 802800c:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8028010:	08028069 	.word	0x08028069
 8028014:	0802807d 	.word	0x0802807d
 8028018:	08027ff9 	.word	0x08027ff9
 802801c:	08027ff9 	.word	0x08027ff9
 8028020:	08027ff9 	.word	0x08027ff9
 8028024:	08027ff9 	.word	0x08027ff9
 8028028:	0802807d 	.word	0x0802807d
 802802c:	08027ff9 	.word	0x08027ff9
 8028030:	08027ff9 	.word	0x08027ff9
 8028034:	08027ff9 	.word	0x08027ff9
 8028038:	08027ff9 	.word	0x08027ff9
 802803c:	08028189 	.word	0x08028189
 8028040:	080280ad 	.word	0x080280ad
 8028044:	0802816b 	.word	0x0802816b
 8028048:	08027ff9 	.word	0x08027ff9
 802804c:	08027ff9 	.word	0x08027ff9
 8028050:	080281ab 	.word	0x080281ab
 8028054:	08027ff9 	.word	0x08027ff9
 8028058:	080280ad 	.word	0x080280ad
 802805c:	08027ff9 	.word	0x08027ff9
 8028060:	08027ff9 	.word	0x08027ff9
 8028064:	08028173 	.word	0x08028173
 8028068:	680b      	ldr	r3, [r1, #0]
 802806a:	1d1a      	adds	r2, r3, #4
 802806c:	681b      	ldr	r3, [r3, #0]
 802806e:	600a      	str	r2, [r1, #0]
 8028070:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8028074:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8028078:	2301      	movs	r3, #1
 802807a:	e0a3      	b.n	80281c4 <_printf_i+0x1f4>
 802807c:	6825      	ldr	r5, [r4, #0]
 802807e:	6808      	ldr	r0, [r1, #0]
 8028080:	062e      	lsls	r6, r5, #24
 8028082:	f100 0304 	add.w	r3, r0, #4
 8028086:	d50a      	bpl.n	802809e <_printf_i+0xce>
 8028088:	6805      	ldr	r5, [r0, #0]
 802808a:	600b      	str	r3, [r1, #0]
 802808c:	2d00      	cmp	r5, #0
 802808e:	da03      	bge.n	8028098 <_printf_i+0xc8>
 8028090:	232d      	movs	r3, #45	; 0x2d
 8028092:	426d      	negs	r5, r5
 8028094:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8028098:	485e      	ldr	r0, [pc, #376]	; (8028214 <_printf_i+0x244>)
 802809a:	230a      	movs	r3, #10
 802809c:	e019      	b.n	80280d2 <_printf_i+0x102>
 802809e:	f015 0f40 	tst.w	r5, #64	; 0x40
 80280a2:	6805      	ldr	r5, [r0, #0]
 80280a4:	600b      	str	r3, [r1, #0]
 80280a6:	bf18      	it	ne
 80280a8:	b22d      	sxthne	r5, r5
 80280aa:	e7ef      	b.n	802808c <_printf_i+0xbc>
 80280ac:	680b      	ldr	r3, [r1, #0]
 80280ae:	6825      	ldr	r5, [r4, #0]
 80280b0:	1d18      	adds	r0, r3, #4
 80280b2:	6008      	str	r0, [r1, #0]
 80280b4:	0628      	lsls	r0, r5, #24
 80280b6:	d501      	bpl.n	80280bc <_printf_i+0xec>
 80280b8:	681d      	ldr	r5, [r3, #0]
 80280ba:	e002      	b.n	80280c2 <_printf_i+0xf2>
 80280bc:	0669      	lsls	r1, r5, #25
 80280be:	d5fb      	bpl.n	80280b8 <_printf_i+0xe8>
 80280c0:	881d      	ldrh	r5, [r3, #0]
 80280c2:	4854      	ldr	r0, [pc, #336]	; (8028214 <_printf_i+0x244>)
 80280c4:	2f6f      	cmp	r7, #111	; 0x6f
 80280c6:	bf0c      	ite	eq
 80280c8:	2308      	moveq	r3, #8
 80280ca:	230a      	movne	r3, #10
 80280cc:	2100      	movs	r1, #0
 80280ce:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80280d2:	6866      	ldr	r6, [r4, #4]
 80280d4:	60a6      	str	r6, [r4, #8]
 80280d6:	2e00      	cmp	r6, #0
 80280d8:	bfa2      	ittt	ge
 80280da:	6821      	ldrge	r1, [r4, #0]
 80280dc:	f021 0104 	bicge.w	r1, r1, #4
 80280e0:	6021      	strge	r1, [r4, #0]
 80280e2:	b90d      	cbnz	r5, 80280e8 <_printf_i+0x118>
 80280e4:	2e00      	cmp	r6, #0
 80280e6:	d04d      	beq.n	8028184 <_printf_i+0x1b4>
 80280e8:	4616      	mov	r6, r2
 80280ea:	fbb5 f1f3 	udiv	r1, r5, r3
 80280ee:	fb03 5711 	mls	r7, r3, r1, r5
 80280f2:	5dc7      	ldrb	r7, [r0, r7]
 80280f4:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80280f8:	462f      	mov	r7, r5
 80280fa:	42bb      	cmp	r3, r7
 80280fc:	460d      	mov	r5, r1
 80280fe:	d9f4      	bls.n	80280ea <_printf_i+0x11a>
 8028100:	2b08      	cmp	r3, #8
 8028102:	d10b      	bne.n	802811c <_printf_i+0x14c>
 8028104:	6823      	ldr	r3, [r4, #0]
 8028106:	07df      	lsls	r7, r3, #31
 8028108:	d508      	bpl.n	802811c <_printf_i+0x14c>
 802810a:	6923      	ldr	r3, [r4, #16]
 802810c:	6861      	ldr	r1, [r4, #4]
 802810e:	4299      	cmp	r1, r3
 8028110:	bfde      	ittt	le
 8028112:	2330      	movle	r3, #48	; 0x30
 8028114:	f806 3c01 	strble.w	r3, [r6, #-1]
 8028118:	f106 36ff 	addle.w	r6, r6, #4294967295
 802811c:	1b92      	subs	r2, r2, r6
 802811e:	6122      	str	r2, [r4, #16]
 8028120:	f8cd a000 	str.w	sl, [sp]
 8028124:	464b      	mov	r3, r9
 8028126:	aa03      	add	r2, sp, #12
 8028128:	4621      	mov	r1, r4
 802812a:	4640      	mov	r0, r8
 802812c:	f7ff fee2 	bl	8027ef4 <_printf_common>
 8028130:	3001      	adds	r0, #1
 8028132:	d14c      	bne.n	80281ce <_printf_i+0x1fe>
 8028134:	f04f 30ff 	mov.w	r0, #4294967295
 8028138:	b004      	add	sp, #16
 802813a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802813e:	4835      	ldr	r0, [pc, #212]	; (8028214 <_printf_i+0x244>)
 8028140:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8028144:	6823      	ldr	r3, [r4, #0]
 8028146:	680e      	ldr	r6, [r1, #0]
 8028148:	061f      	lsls	r7, r3, #24
 802814a:	f856 5b04 	ldr.w	r5, [r6], #4
 802814e:	600e      	str	r6, [r1, #0]
 8028150:	d514      	bpl.n	802817c <_printf_i+0x1ac>
 8028152:	07d9      	lsls	r1, r3, #31
 8028154:	bf44      	itt	mi
 8028156:	f043 0320 	orrmi.w	r3, r3, #32
 802815a:	6023      	strmi	r3, [r4, #0]
 802815c:	b91d      	cbnz	r5, 8028166 <_printf_i+0x196>
 802815e:	6823      	ldr	r3, [r4, #0]
 8028160:	f023 0320 	bic.w	r3, r3, #32
 8028164:	6023      	str	r3, [r4, #0]
 8028166:	2310      	movs	r3, #16
 8028168:	e7b0      	b.n	80280cc <_printf_i+0xfc>
 802816a:	6823      	ldr	r3, [r4, #0]
 802816c:	f043 0320 	orr.w	r3, r3, #32
 8028170:	6023      	str	r3, [r4, #0]
 8028172:	2378      	movs	r3, #120	; 0x78
 8028174:	4828      	ldr	r0, [pc, #160]	; (8028218 <_printf_i+0x248>)
 8028176:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 802817a:	e7e3      	b.n	8028144 <_printf_i+0x174>
 802817c:	065e      	lsls	r6, r3, #25
 802817e:	bf48      	it	mi
 8028180:	b2ad      	uxthmi	r5, r5
 8028182:	e7e6      	b.n	8028152 <_printf_i+0x182>
 8028184:	4616      	mov	r6, r2
 8028186:	e7bb      	b.n	8028100 <_printf_i+0x130>
 8028188:	680b      	ldr	r3, [r1, #0]
 802818a:	6826      	ldr	r6, [r4, #0]
 802818c:	6960      	ldr	r0, [r4, #20]
 802818e:	1d1d      	adds	r5, r3, #4
 8028190:	600d      	str	r5, [r1, #0]
 8028192:	0635      	lsls	r5, r6, #24
 8028194:	681b      	ldr	r3, [r3, #0]
 8028196:	d501      	bpl.n	802819c <_printf_i+0x1cc>
 8028198:	6018      	str	r0, [r3, #0]
 802819a:	e002      	b.n	80281a2 <_printf_i+0x1d2>
 802819c:	0671      	lsls	r1, r6, #25
 802819e:	d5fb      	bpl.n	8028198 <_printf_i+0x1c8>
 80281a0:	8018      	strh	r0, [r3, #0]
 80281a2:	2300      	movs	r3, #0
 80281a4:	6123      	str	r3, [r4, #16]
 80281a6:	4616      	mov	r6, r2
 80281a8:	e7ba      	b.n	8028120 <_printf_i+0x150>
 80281aa:	680b      	ldr	r3, [r1, #0]
 80281ac:	1d1a      	adds	r2, r3, #4
 80281ae:	600a      	str	r2, [r1, #0]
 80281b0:	681e      	ldr	r6, [r3, #0]
 80281b2:	6862      	ldr	r2, [r4, #4]
 80281b4:	2100      	movs	r1, #0
 80281b6:	4630      	mov	r0, r6
 80281b8:	f7d8 f822 	bl	8000200 <memchr>
 80281bc:	b108      	cbz	r0, 80281c2 <_printf_i+0x1f2>
 80281be:	1b80      	subs	r0, r0, r6
 80281c0:	6060      	str	r0, [r4, #4]
 80281c2:	6863      	ldr	r3, [r4, #4]
 80281c4:	6123      	str	r3, [r4, #16]
 80281c6:	2300      	movs	r3, #0
 80281c8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80281cc:	e7a8      	b.n	8028120 <_printf_i+0x150>
 80281ce:	6923      	ldr	r3, [r4, #16]
 80281d0:	4632      	mov	r2, r6
 80281d2:	4649      	mov	r1, r9
 80281d4:	4640      	mov	r0, r8
 80281d6:	47d0      	blx	sl
 80281d8:	3001      	adds	r0, #1
 80281da:	d0ab      	beq.n	8028134 <_printf_i+0x164>
 80281dc:	6823      	ldr	r3, [r4, #0]
 80281de:	079b      	lsls	r3, r3, #30
 80281e0:	d413      	bmi.n	802820a <_printf_i+0x23a>
 80281e2:	68e0      	ldr	r0, [r4, #12]
 80281e4:	9b03      	ldr	r3, [sp, #12]
 80281e6:	4298      	cmp	r0, r3
 80281e8:	bfb8      	it	lt
 80281ea:	4618      	movlt	r0, r3
 80281ec:	e7a4      	b.n	8028138 <_printf_i+0x168>
 80281ee:	2301      	movs	r3, #1
 80281f0:	4632      	mov	r2, r6
 80281f2:	4649      	mov	r1, r9
 80281f4:	4640      	mov	r0, r8
 80281f6:	47d0      	blx	sl
 80281f8:	3001      	adds	r0, #1
 80281fa:	d09b      	beq.n	8028134 <_printf_i+0x164>
 80281fc:	3501      	adds	r5, #1
 80281fe:	68e3      	ldr	r3, [r4, #12]
 8028200:	9903      	ldr	r1, [sp, #12]
 8028202:	1a5b      	subs	r3, r3, r1
 8028204:	42ab      	cmp	r3, r5
 8028206:	dcf2      	bgt.n	80281ee <_printf_i+0x21e>
 8028208:	e7eb      	b.n	80281e2 <_printf_i+0x212>
 802820a:	2500      	movs	r5, #0
 802820c:	f104 0619 	add.w	r6, r4, #25
 8028210:	e7f5      	b.n	80281fe <_printf_i+0x22e>
 8028212:	bf00      	nop
 8028214:	0802dd75 	.word	0x0802dd75
 8028218:	0802dd86 	.word	0x0802dd86

0802821c <cleanup_glue>:
 802821c:	b538      	push	{r3, r4, r5, lr}
 802821e:	460c      	mov	r4, r1
 8028220:	6809      	ldr	r1, [r1, #0]
 8028222:	4605      	mov	r5, r0
 8028224:	b109      	cbz	r1, 802822a <cleanup_glue+0xe>
 8028226:	f7ff fff9 	bl	802821c <cleanup_glue>
 802822a:	4621      	mov	r1, r4
 802822c:	4628      	mov	r0, r5
 802822e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8028232:	f7ff bc5b 	b.w	8027aec <_free_r>
	...

08028238 <_reclaim_reent>:
 8028238:	4b2c      	ldr	r3, [pc, #176]	; (80282ec <_reclaim_reent+0xb4>)
 802823a:	681b      	ldr	r3, [r3, #0]
 802823c:	4283      	cmp	r3, r0
 802823e:	b570      	push	{r4, r5, r6, lr}
 8028240:	4604      	mov	r4, r0
 8028242:	d051      	beq.n	80282e8 <_reclaim_reent+0xb0>
 8028244:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8028246:	b143      	cbz	r3, 802825a <_reclaim_reent+0x22>
 8028248:	68db      	ldr	r3, [r3, #12]
 802824a:	2b00      	cmp	r3, #0
 802824c:	d14a      	bne.n	80282e4 <_reclaim_reent+0xac>
 802824e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8028250:	6819      	ldr	r1, [r3, #0]
 8028252:	b111      	cbz	r1, 802825a <_reclaim_reent+0x22>
 8028254:	4620      	mov	r0, r4
 8028256:	f7ff fc49 	bl	8027aec <_free_r>
 802825a:	6961      	ldr	r1, [r4, #20]
 802825c:	b111      	cbz	r1, 8028264 <_reclaim_reent+0x2c>
 802825e:	4620      	mov	r0, r4
 8028260:	f7ff fc44 	bl	8027aec <_free_r>
 8028264:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8028266:	b111      	cbz	r1, 802826e <_reclaim_reent+0x36>
 8028268:	4620      	mov	r0, r4
 802826a:	f7ff fc3f 	bl	8027aec <_free_r>
 802826e:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8028270:	b111      	cbz	r1, 8028278 <_reclaim_reent+0x40>
 8028272:	4620      	mov	r0, r4
 8028274:	f7ff fc3a 	bl	8027aec <_free_r>
 8028278:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 802827a:	b111      	cbz	r1, 8028282 <_reclaim_reent+0x4a>
 802827c:	4620      	mov	r0, r4
 802827e:	f7ff fc35 	bl	8027aec <_free_r>
 8028282:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8028284:	b111      	cbz	r1, 802828c <_reclaim_reent+0x54>
 8028286:	4620      	mov	r0, r4
 8028288:	f7ff fc30 	bl	8027aec <_free_r>
 802828c:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 802828e:	b111      	cbz	r1, 8028296 <_reclaim_reent+0x5e>
 8028290:	4620      	mov	r0, r4
 8028292:	f7ff fc2b 	bl	8027aec <_free_r>
 8028296:	6da1      	ldr	r1, [r4, #88]	; 0x58
 8028298:	b111      	cbz	r1, 80282a0 <_reclaim_reent+0x68>
 802829a:	4620      	mov	r0, r4
 802829c:	f7ff fc26 	bl	8027aec <_free_r>
 80282a0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80282a2:	b111      	cbz	r1, 80282aa <_reclaim_reent+0x72>
 80282a4:	4620      	mov	r0, r4
 80282a6:	f7ff fc21 	bl	8027aec <_free_r>
 80282aa:	69a3      	ldr	r3, [r4, #24]
 80282ac:	b1e3      	cbz	r3, 80282e8 <_reclaim_reent+0xb0>
 80282ae:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80282b0:	4620      	mov	r0, r4
 80282b2:	4798      	blx	r3
 80282b4:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80282b6:	b1b9      	cbz	r1, 80282e8 <_reclaim_reent+0xb0>
 80282b8:	4620      	mov	r0, r4
 80282ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80282be:	f7ff bfad 	b.w	802821c <cleanup_glue>
 80282c2:	5949      	ldr	r1, [r1, r5]
 80282c4:	b941      	cbnz	r1, 80282d8 <_reclaim_reent+0xa0>
 80282c6:	3504      	adds	r5, #4
 80282c8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80282ca:	2d80      	cmp	r5, #128	; 0x80
 80282cc:	68d9      	ldr	r1, [r3, #12]
 80282ce:	d1f8      	bne.n	80282c2 <_reclaim_reent+0x8a>
 80282d0:	4620      	mov	r0, r4
 80282d2:	f7ff fc0b 	bl	8027aec <_free_r>
 80282d6:	e7ba      	b.n	802824e <_reclaim_reent+0x16>
 80282d8:	680e      	ldr	r6, [r1, #0]
 80282da:	4620      	mov	r0, r4
 80282dc:	f7ff fc06 	bl	8027aec <_free_r>
 80282e0:	4631      	mov	r1, r6
 80282e2:	e7ef      	b.n	80282c4 <_reclaim_reent+0x8c>
 80282e4:	2500      	movs	r5, #0
 80282e6:	e7ef      	b.n	80282c8 <_reclaim_reent+0x90>
 80282e8:	bd70      	pop	{r4, r5, r6, pc}
 80282ea:	bf00      	nop
 80282ec:	200000d8 	.word	0x200000d8

080282f0 <_sbrk_r>:
 80282f0:	b538      	push	{r3, r4, r5, lr}
 80282f2:	4d06      	ldr	r5, [pc, #24]	; (802830c <_sbrk_r+0x1c>)
 80282f4:	2300      	movs	r3, #0
 80282f6:	4604      	mov	r4, r0
 80282f8:	4608      	mov	r0, r1
 80282fa:	602b      	str	r3, [r5, #0]
 80282fc:	f7d9 fe38 	bl	8001f70 <_sbrk>
 8028300:	1c43      	adds	r3, r0, #1
 8028302:	d102      	bne.n	802830a <_sbrk_r+0x1a>
 8028304:	682b      	ldr	r3, [r5, #0]
 8028306:	b103      	cbz	r3, 802830a <_sbrk_r+0x1a>
 8028308:	6023      	str	r3, [r4, #0]
 802830a:	bd38      	pop	{r3, r4, r5, pc}
 802830c:	2002c2b0 	.word	0x2002c2b0

08028310 <_raise_r>:
 8028310:	291f      	cmp	r1, #31
 8028312:	b538      	push	{r3, r4, r5, lr}
 8028314:	4604      	mov	r4, r0
 8028316:	460d      	mov	r5, r1
 8028318:	d904      	bls.n	8028324 <_raise_r+0x14>
 802831a:	2316      	movs	r3, #22
 802831c:	6003      	str	r3, [r0, #0]
 802831e:	f04f 30ff 	mov.w	r0, #4294967295
 8028322:	bd38      	pop	{r3, r4, r5, pc}
 8028324:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8028326:	b112      	cbz	r2, 802832e <_raise_r+0x1e>
 8028328:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802832c:	b94b      	cbnz	r3, 8028342 <_raise_r+0x32>
 802832e:	4620      	mov	r0, r4
 8028330:	f000 f830 	bl	8028394 <_getpid_r>
 8028334:	462a      	mov	r2, r5
 8028336:	4601      	mov	r1, r0
 8028338:	4620      	mov	r0, r4
 802833a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802833e:	f000 b817 	b.w	8028370 <_kill_r>
 8028342:	2b01      	cmp	r3, #1
 8028344:	d00a      	beq.n	802835c <_raise_r+0x4c>
 8028346:	1c59      	adds	r1, r3, #1
 8028348:	d103      	bne.n	8028352 <_raise_r+0x42>
 802834a:	2316      	movs	r3, #22
 802834c:	6003      	str	r3, [r0, #0]
 802834e:	2001      	movs	r0, #1
 8028350:	e7e7      	b.n	8028322 <_raise_r+0x12>
 8028352:	2400      	movs	r4, #0
 8028354:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8028358:	4628      	mov	r0, r5
 802835a:	4798      	blx	r3
 802835c:	2000      	movs	r0, #0
 802835e:	e7e0      	b.n	8028322 <_raise_r+0x12>

08028360 <raise>:
 8028360:	4b02      	ldr	r3, [pc, #8]	; (802836c <raise+0xc>)
 8028362:	4601      	mov	r1, r0
 8028364:	6818      	ldr	r0, [r3, #0]
 8028366:	f7ff bfd3 	b.w	8028310 <_raise_r>
 802836a:	bf00      	nop
 802836c:	200000d8 	.word	0x200000d8

08028370 <_kill_r>:
 8028370:	b538      	push	{r3, r4, r5, lr}
 8028372:	4d07      	ldr	r5, [pc, #28]	; (8028390 <_kill_r+0x20>)
 8028374:	2300      	movs	r3, #0
 8028376:	4604      	mov	r4, r0
 8028378:	4608      	mov	r0, r1
 802837a:	4611      	mov	r1, r2
 802837c:	602b      	str	r3, [r5, #0]
 802837e:	f7d9 fdc3 	bl	8001f08 <_kill>
 8028382:	1c43      	adds	r3, r0, #1
 8028384:	d102      	bne.n	802838c <_kill_r+0x1c>
 8028386:	682b      	ldr	r3, [r5, #0]
 8028388:	b103      	cbz	r3, 802838c <_kill_r+0x1c>
 802838a:	6023      	str	r3, [r4, #0]
 802838c:	bd38      	pop	{r3, r4, r5, pc}
 802838e:	bf00      	nop
 8028390:	2002c2b0 	.word	0x2002c2b0

08028394 <_getpid_r>:
 8028394:	f7d9 bdb6 	b.w	8001f04 <_getpid>

08028398 <__sread>:
 8028398:	b510      	push	{r4, lr}
 802839a:	460c      	mov	r4, r1
 802839c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80283a0:	f000 face 	bl	8028940 <_read_r>
 80283a4:	2800      	cmp	r0, #0
 80283a6:	bfab      	itete	ge
 80283a8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80283aa:	89a3      	ldrhlt	r3, [r4, #12]
 80283ac:	181b      	addge	r3, r3, r0
 80283ae:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80283b2:	bfac      	ite	ge
 80283b4:	6563      	strge	r3, [r4, #84]	; 0x54
 80283b6:	81a3      	strhlt	r3, [r4, #12]
 80283b8:	bd10      	pop	{r4, pc}

080283ba <__swrite>:
 80283ba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80283be:	461f      	mov	r7, r3
 80283c0:	898b      	ldrh	r3, [r1, #12]
 80283c2:	05db      	lsls	r3, r3, #23
 80283c4:	4605      	mov	r5, r0
 80283c6:	460c      	mov	r4, r1
 80283c8:	4616      	mov	r6, r2
 80283ca:	d505      	bpl.n	80283d8 <__swrite+0x1e>
 80283cc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80283d0:	2302      	movs	r3, #2
 80283d2:	2200      	movs	r2, #0
 80283d4:	f000 fa32 	bl	802883c <_lseek_r>
 80283d8:	89a3      	ldrh	r3, [r4, #12]
 80283da:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80283de:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80283e2:	81a3      	strh	r3, [r4, #12]
 80283e4:	4632      	mov	r2, r6
 80283e6:	463b      	mov	r3, r7
 80283e8:	4628      	mov	r0, r5
 80283ea:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80283ee:	f000 b871 	b.w	80284d4 <_write_r>

080283f2 <__sseek>:
 80283f2:	b510      	push	{r4, lr}
 80283f4:	460c      	mov	r4, r1
 80283f6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80283fa:	f000 fa1f 	bl	802883c <_lseek_r>
 80283fe:	1c43      	adds	r3, r0, #1
 8028400:	89a3      	ldrh	r3, [r4, #12]
 8028402:	bf15      	itete	ne
 8028404:	6560      	strne	r0, [r4, #84]	; 0x54
 8028406:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802840a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802840e:	81a3      	strheq	r3, [r4, #12]
 8028410:	bf18      	it	ne
 8028412:	81a3      	strhne	r3, [r4, #12]
 8028414:	bd10      	pop	{r4, pc}

08028416 <__sclose>:
 8028416:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802841a:	f000 b93d 	b.w	8028698 <_close_r>

0802841e <strcpy>:
 802841e:	4603      	mov	r3, r0
 8028420:	f811 2b01 	ldrb.w	r2, [r1], #1
 8028424:	f803 2b01 	strb.w	r2, [r3], #1
 8028428:	2a00      	cmp	r2, #0
 802842a:	d1f9      	bne.n	8028420 <strcpy+0x2>
 802842c:	4770      	bx	lr
	...

08028430 <__swbuf_r>:
 8028430:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028432:	460e      	mov	r6, r1
 8028434:	4614      	mov	r4, r2
 8028436:	4605      	mov	r5, r0
 8028438:	b118      	cbz	r0, 8028442 <__swbuf_r+0x12>
 802843a:	6983      	ldr	r3, [r0, #24]
 802843c:	b90b      	cbnz	r3, 8028442 <__swbuf_r+0x12>
 802843e:	f7ff fa43 	bl	80278c8 <__sinit>
 8028442:	4b21      	ldr	r3, [pc, #132]	; (80284c8 <__swbuf_r+0x98>)
 8028444:	429c      	cmp	r4, r3
 8028446:	d12b      	bne.n	80284a0 <__swbuf_r+0x70>
 8028448:	686c      	ldr	r4, [r5, #4]
 802844a:	69a3      	ldr	r3, [r4, #24]
 802844c:	60a3      	str	r3, [r4, #8]
 802844e:	89a3      	ldrh	r3, [r4, #12]
 8028450:	071a      	lsls	r2, r3, #28
 8028452:	d52f      	bpl.n	80284b4 <__swbuf_r+0x84>
 8028454:	6923      	ldr	r3, [r4, #16]
 8028456:	b36b      	cbz	r3, 80284b4 <__swbuf_r+0x84>
 8028458:	6923      	ldr	r3, [r4, #16]
 802845a:	6820      	ldr	r0, [r4, #0]
 802845c:	1ac0      	subs	r0, r0, r3
 802845e:	6963      	ldr	r3, [r4, #20]
 8028460:	b2f6      	uxtb	r6, r6
 8028462:	4283      	cmp	r3, r0
 8028464:	4637      	mov	r7, r6
 8028466:	dc04      	bgt.n	8028472 <__swbuf_r+0x42>
 8028468:	4621      	mov	r1, r4
 802846a:	4628      	mov	r0, r5
 802846c:	f000 f9aa 	bl	80287c4 <_fflush_r>
 8028470:	bb30      	cbnz	r0, 80284c0 <__swbuf_r+0x90>
 8028472:	68a3      	ldr	r3, [r4, #8]
 8028474:	3b01      	subs	r3, #1
 8028476:	60a3      	str	r3, [r4, #8]
 8028478:	6823      	ldr	r3, [r4, #0]
 802847a:	1c5a      	adds	r2, r3, #1
 802847c:	6022      	str	r2, [r4, #0]
 802847e:	701e      	strb	r6, [r3, #0]
 8028480:	6963      	ldr	r3, [r4, #20]
 8028482:	3001      	adds	r0, #1
 8028484:	4283      	cmp	r3, r0
 8028486:	d004      	beq.n	8028492 <__swbuf_r+0x62>
 8028488:	89a3      	ldrh	r3, [r4, #12]
 802848a:	07db      	lsls	r3, r3, #31
 802848c:	d506      	bpl.n	802849c <__swbuf_r+0x6c>
 802848e:	2e0a      	cmp	r6, #10
 8028490:	d104      	bne.n	802849c <__swbuf_r+0x6c>
 8028492:	4621      	mov	r1, r4
 8028494:	4628      	mov	r0, r5
 8028496:	f000 f995 	bl	80287c4 <_fflush_r>
 802849a:	b988      	cbnz	r0, 80284c0 <__swbuf_r+0x90>
 802849c:	4638      	mov	r0, r7
 802849e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80284a0:	4b0a      	ldr	r3, [pc, #40]	; (80284cc <__swbuf_r+0x9c>)
 80284a2:	429c      	cmp	r4, r3
 80284a4:	d101      	bne.n	80284aa <__swbuf_r+0x7a>
 80284a6:	68ac      	ldr	r4, [r5, #8]
 80284a8:	e7cf      	b.n	802844a <__swbuf_r+0x1a>
 80284aa:	4b09      	ldr	r3, [pc, #36]	; (80284d0 <__swbuf_r+0xa0>)
 80284ac:	429c      	cmp	r4, r3
 80284ae:	bf08      	it	eq
 80284b0:	68ec      	ldreq	r4, [r5, #12]
 80284b2:	e7ca      	b.n	802844a <__swbuf_r+0x1a>
 80284b4:	4621      	mov	r1, r4
 80284b6:	4628      	mov	r0, r5
 80284b8:	f000 f81e 	bl	80284f8 <__swsetup_r>
 80284bc:	2800      	cmp	r0, #0
 80284be:	d0cb      	beq.n	8028458 <__swbuf_r+0x28>
 80284c0:	f04f 37ff 	mov.w	r7, #4294967295
 80284c4:	e7ea      	b.n	802849c <__swbuf_r+0x6c>
 80284c6:	bf00      	nop
 80284c8:	0802dd20 	.word	0x0802dd20
 80284cc:	0802dd40 	.word	0x0802dd40
 80284d0:	0802dd00 	.word	0x0802dd00

080284d4 <_write_r>:
 80284d4:	b538      	push	{r3, r4, r5, lr}
 80284d6:	4d07      	ldr	r5, [pc, #28]	; (80284f4 <_write_r+0x20>)
 80284d8:	4604      	mov	r4, r0
 80284da:	4608      	mov	r0, r1
 80284dc:	4611      	mov	r1, r2
 80284de:	2200      	movs	r2, #0
 80284e0:	602a      	str	r2, [r5, #0]
 80284e2:	461a      	mov	r2, r3
 80284e4:	f7d9 fd2b 	bl	8001f3e <_write>
 80284e8:	1c43      	adds	r3, r0, #1
 80284ea:	d102      	bne.n	80284f2 <_write_r+0x1e>
 80284ec:	682b      	ldr	r3, [r5, #0]
 80284ee:	b103      	cbz	r3, 80284f2 <_write_r+0x1e>
 80284f0:	6023      	str	r3, [r4, #0]
 80284f2:	bd38      	pop	{r3, r4, r5, pc}
 80284f4:	2002c2b0 	.word	0x2002c2b0

080284f8 <__swsetup_r>:
 80284f8:	4b32      	ldr	r3, [pc, #200]	; (80285c4 <__swsetup_r+0xcc>)
 80284fa:	b570      	push	{r4, r5, r6, lr}
 80284fc:	681d      	ldr	r5, [r3, #0]
 80284fe:	4606      	mov	r6, r0
 8028500:	460c      	mov	r4, r1
 8028502:	b125      	cbz	r5, 802850e <__swsetup_r+0x16>
 8028504:	69ab      	ldr	r3, [r5, #24]
 8028506:	b913      	cbnz	r3, 802850e <__swsetup_r+0x16>
 8028508:	4628      	mov	r0, r5
 802850a:	f7ff f9dd 	bl	80278c8 <__sinit>
 802850e:	4b2e      	ldr	r3, [pc, #184]	; (80285c8 <__swsetup_r+0xd0>)
 8028510:	429c      	cmp	r4, r3
 8028512:	d10f      	bne.n	8028534 <__swsetup_r+0x3c>
 8028514:	686c      	ldr	r4, [r5, #4]
 8028516:	89a3      	ldrh	r3, [r4, #12]
 8028518:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802851c:	0719      	lsls	r1, r3, #28
 802851e:	d42c      	bmi.n	802857a <__swsetup_r+0x82>
 8028520:	06dd      	lsls	r5, r3, #27
 8028522:	d411      	bmi.n	8028548 <__swsetup_r+0x50>
 8028524:	2309      	movs	r3, #9
 8028526:	6033      	str	r3, [r6, #0]
 8028528:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802852c:	81a3      	strh	r3, [r4, #12]
 802852e:	f04f 30ff 	mov.w	r0, #4294967295
 8028532:	e03e      	b.n	80285b2 <__swsetup_r+0xba>
 8028534:	4b25      	ldr	r3, [pc, #148]	; (80285cc <__swsetup_r+0xd4>)
 8028536:	429c      	cmp	r4, r3
 8028538:	d101      	bne.n	802853e <__swsetup_r+0x46>
 802853a:	68ac      	ldr	r4, [r5, #8]
 802853c:	e7eb      	b.n	8028516 <__swsetup_r+0x1e>
 802853e:	4b24      	ldr	r3, [pc, #144]	; (80285d0 <__swsetup_r+0xd8>)
 8028540:	429c      	cmp	r4, r3
 8028542:	bf08      	it	eq
 8028544:	68ec      	ldreq	r4, [r5, #12]
 8028546:	e7e6      	b.n	8028516 <__swsetup_r+0x1e>
 8028548:	0758      	lsls	r0, r3, #29
 802854a:	d512      	bpl.n	8028572 <__swsetup_r+0x7a>
 802854c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802854e:	b141      	cbz	r1, 8028562 <__swsetup_r+0x6a>
 8028550:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8028554:	4299      	cmp	r1, r3
 8028556:	d002      	beq.n	802855e <__swsetup_r+0x66>
 8028558:	4630      	mov	r0, r6
 802855a:	f7ff fac7 	bl	8027aec <_free_r>
 802855e:	2300      	movs	r3, #0
 8028560:	6363      	str	r3, [r4, #52]	; 0x34
 8028562:	89a3      	ldrh	r3, [r4, #12]
 8028564:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8028568:	81a3      	strh	r3, [r4, #12]
 802856a:	2300      	movs	r3, #0
 802856c:	6063      	str	r3, [r4, #4]
 802856e:	6923      	ldr	r3, [r4, #16]
 8028570:	6023      	str	r3, [r4, #0]
 8028572:	89a3      	ldrh	r3, [r4, #12]
 8028574:	f043 0308 	orr.w	r3, r3, #8
 8028578:	81a3      	strh	r3, [r4, #12]
 802857a:	6923      	ldr	r3, [r4, #16]
 802857c:	b94b      	cbnz	r3, 8028592 <__swsetup_r+0x9a>
 802857e:	89a3      	ldrh	r3, [r4, #12]
 8028580:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8028584:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8028588:	d003      	beq.n	8028592 <__swsetup_r+0x9a>
 802858a:	4621      	mov	r1, r4
 802858c:	4630      	mov	r0, r6
 802858e:	f000 f98b 	bl	80288a8 <__smakebuf_r>
 8028592:	89a0      	ldrh	r0, [r4, #12]
 8028594:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8028598:	f010 0301 	ands.w	r3, r0, #1
 802859c:	d00a      	beq.n	80285b4 <__swsetup_r+0xbc>
 802859e:	2300      	movs	r3, #0
 80285a0:	60a3      	str	r3, [r4, #8]
 80285a2:	6963      	ldr	r3, [r4, #20]
 80285a4:	425b      	negs	r3, r3
 80285a6:	61a3      	str	r3, [r4, #24]
 80285a8:	6923      	ldr	r3, [r4, #16]
 80285aa:	b943      	cbnz	r3, 80285be <__swsetup_r+0xc6>
 80285ac:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80285b0:	d1ba      	bne.n	8028528 <__swsetup_r+0x30>
 80285b2:	bd70      	pop	{r4, r5, r6, pc}
 80285b4:	0781      	lsls	r1, r0, #30
 80285b6:	bf58      	it	pl
 80285b8:	6963      	ldrpl	r3, [r4, #20]
 80285ba:	60a3      	str	r3, [r4, #8]
 80285bc:	e7f4      	b.n	80285a8 <__swsetup_r+0xb0>
 80285be:	2000      	movs	r0, #0
 80285c0:	e7f7      	b.n	80285b2 <__swsetup_r+0xba>
 80285c2:	bf00      	nop
 80285c4:	200000d8 	.word	0x200000d8
 80285c8:	0802dd20 	.word	0x0802dd20
 80285cc:	0802dd40 	.word	0x0802dd40
 80285d0:	0802dd00 	.word	0x0802dd00

080285d4 <__register_exitproc>:
 80285d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80285d8:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8028694 <__register_exitproc+0xc0>
 80285dc:	4606      	mov	r6, r0
 80285de:	f8d8 0000 	ldr.w	r0, [r8]
 80285e2:	461f      	mov	r7, r3
 80285e4:	460d      	mov	r5, r1
 80285e6:	4691      	mov	r9, r2
 80285e8:	f7ff fa57 	bl	8027a9a <__retarget_lock_acquire_recursive>
 80285ec:	4b25      	ldr	r3, [pc, #148]	; (8028684 <__register_exitproc+0xb0>)
 80285ee:	681c      	ldr	r4, [r3, #0]
 80285f0:	b934      	cbnz	r4, 8028600 <__register_exitproc+0x2c>
 80285f2:	4c25      	ldr	r4, [pc, #148]	; (8028688 <__register_exitproc+0xb4>)
 80285f4:	601c      	str	r4, [r3, #0]
 80285f6:	4b25      	ldr	r3, [pc, #148]	; (802868c <__register_exitproc+0xb8>)
 80285f8:	b113      	cbz	r3, 8028600 <__register_exitproc+0x2c>
 80285fa:	681b      	ldr	r3, [r3, #0]
 80285fc:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8028600:	6863      	ldr	r3, [r4, #4]
 8028602:	2b1f      	cmp	r3, #31
 8028604:	dd07      	ble.n	8028616 <__register_exitproc+0x42>
 8028606:	f8d8 0000 	ldr.w	r0, [r8]
 802860a:	f7ff fa48 	bl	8027a9e <__retarget_lock_release_recursive>
 802860e:	f04f 30ff 	mov.w	r0, #4294967295
 8028612:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8028616:	b34e      	cbz	r6, 802866c <__register_exitproc+0x98>
 8028618:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802861c:	b988      	cbnz	r0, 8028642 <__register_exitproc+0x6e>
 802861e:	4b1c      	ldr	r3, [pc, #112]	; (8028690 <__register_exitproc+0xbc>)
 8028620:	b923      	cbnz	r3, 802862c <__register_exitproc+0x58>
 8028622:	f8d8 0000 	ldr.w	r0, [r8]
 8028626:	f7ff fa39 	bl	8027a9c <__retarget_lock_release>
 802862a:	e7f0      	b.n	802860e <__register_exitproc+0x3a>
 802862c:	f44f 7084 	mov.w	r0, #264	; 0x108
 8028630:	f7ff fa36 	bl	8027aa0 <malloc>
 8028634:	2800      	cmp	r0, #0
 8028636:	d0f4      	beq.n	8028622 <__register_exitproc+0x4e>
 8028638:	2300      	movs	r3, #0
 802863a:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802863e:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8028642:	6863      	ldr	r3, [r4, #4]
 8028644:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8028648:	2201      	movs	r2, #1
 802864a:	409a      	lsls	r2, r3
 802864c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8028650:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8028654:	4313      	orrs	r3, r2
 8028656:	2e02      	cmp	r6, #2
 8028658:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802865c:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8028660:	bf02      	ittt	eq
 8028662:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8028666:	431a      	orreq	r2, r3
 8028668:	f8c0 2104 	streq.w	r2, [r0, #260]	; 0x104
 802866c:	6863      	ldr	r3, [r4, #4]
 802866e:	f8d8 0000 	ldr.w	r0, [r8]
 8028672:	1c5a      	adds	r2, r3, #1
 8028674:	3302      	adds	r3, #2
 8028676:	6062      	str	r2, [r4, #4]
 8028678:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802867c:	f7ff fa0f 	bl	8027a9e <__retarget_lock_release_recursive>
 8028680:	2000      	movs	r0, #0
 8028682:	e7c6      	b.n	8028612 <__register_exitproc+0x3e>
 8028684:	2002bfcc 	.word	0x2002bfcc
 8028688:	2002bf40 	.word	0x2002bf40
 802868c:	0802dd98 	.word	0x0802dd98
 8028690:	08027aa1 	.word	0x08027aa1
 8028694:	2000013c 	.word	0x2000013c

08028698 <_close_r>:
 8028698:	b538      	push	{r3, r4, r5, lr}
 802869a:	4d06      	ldr	r5, [pc, #24]	; (80286b4 <_close_r+0x1c>)
 802869c:	2300      	movs	r3, #0
 802869e:	4604      	mov	r4, r0
 80286a0:	4608      	mov	r0, r1
 80286a2:	602b      	str	r3, [r5, #0]
 80286a4:	f7d9 fc58 	bl	8001f58 <_close>
 80286a8:	1c43      	adds	r3, r0, #1
 80286aa:	d102      	bne.n	80286b2 <_close_r+0x1a>
 80286ac:	682b      	ldr	r3, [r5, #0]
 80286ae:	b103      	cbz	r3, 80286b2 <_close_r+0x1a>
 80286b0:	6023      	str	r3, [r4, #0]
 80286b2:	bd38      	pop	{r3, r4, r5, pc}
 80286b4:	2002c2b0 	.word	0x2002c2b0

080286b8 <__sflush_r>:
 80286b8:	898a      	ldrh	r2, [r1, #12]
 80286ba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80286be:	4605      	mov	r5, r0
 80286c0:	0710      	lsls	r0, r2, #28
 80286c2:	460c      	mov	r4, r1
 80286c4:	d458      	bmi.n	8028778 <__sflush_r+0xc0>
 80286c6:	684b      	ldr	r3, [r1, #4]
 80286c8:	2b00      	cmp	r3, #0
 80286ca:	dc05      	bgt.n	80286d8 <__sflush_r+0x20>
 80286cc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80286ce:	2b00      	cmp	r3, #0
 80286d0:	dc02      	bgt.n	80286d8 <__sflush_r+0x20>
 80286d2:	2000      	movs	r0, #0
 80286d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80286d8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80286da:	2e00      	cmp	r6, #0
 80286dc:	d0f9      	beq.n	80286d2 <__sflush_r+0x1a>
 80286de:	2300      	movs	r3, #0
 80286e0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80286e4:	682f      	ldr	r7, [r5, #0]
 80286e6:	602b      	str	r3, [r5, #0]
 80286e8:	d032      	beq.n	8028750 <__sflush_r+0x98>
 80286ea:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80286ec:	89a3      	ldrh	r3, [r4, #12]
 80286ee:	075a      	lsls	r2, r3, #29
 80286f0:	d505      	bpl.n	80286fe <__sflush_r+0x46>
 80286f2:	6863      	ldr	r3, [r4, #4]
 80286f4:	1ac0      	subs	r0, r0, r3
 80286f6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80286f8:	b10b      	cbz	r3, 80286fe <__sflush_r+0x46>
 80286fa:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80286fc:	1ac0      	subs	r0, r0, r3
 80286fe:	2300      	movs	r3, #0
 8028700:	4602      	mov	r2, r0
 8028702:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8028704:	6a21      	ldr	r1, [r4, #32]
 8028706:	4628      	mov	r0, r5
 8028708:	47b0      	blx	r6
 802870a:	1c43      	adds	r3, r0, #1
 802870c:	89a3      	ldrh	r3, [r4, #12]
 802870e:	d106      	bne.n	802871e <__sflush_r+0x66>
 8028710:	6829      	ldr	r1, [r5, #0]
 8028712:	291d      	cmp	r1, #29
 8028714:	d82c      	bhi.n	8028770 <__sflush_r+0xb8>
 8028716:	4a2a      	ldr	r2, [pc, #168]	; (80287c0 <__sflush_r+0x108>)
 8028718:	40ca      	lsrs	r2, r1
 802871a:	07d6      	lsls	r6, r2, #31
 802871c:	d528      	bpl.n	8028770 <__sflush_r+0xb8>
 802871e:	2200      	movs	r2, #0
 8028720:	6062      	str	r2, [r4, #4]
 8028722:	04d9      	lsls	r1, r3, #19
 8028724:	6922      	ldr	r2, [r4, #16]
 8028726:	6022      	str	r2, [r4, #0]
 8028728:	d504      	bpl.n	8028734 <__sflush_r+0x7c>
 802872a:	1c42      	adds	r2, r0, #1
 802872c:	d101      	bne.n	8028732 <__sflush_r+0x7a>
 802872e:	682b      	ldr	r3, [r5, #0]
 8028730:	b903      	cbnz	r3, 8028734 <__sflush_r+0x7c>
 8028732:	6560      	str	r0, [r4, #84]	; 0x54
 8028734:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8028736:	602f      	str	r7, [r5, #0]
 8028738:	2900      	cmp	r1, #0
 802873a:	d0ca      	beq.n	80286d2 <__sflush_r+0x1a>
 802873c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8028740:	4299      	cmp	r1, r3
 8028742:	d002      	beq.n	802874a <__sflush_r+0x92>
 8028744:	4628      	mov	r0, r5
 8028746:	f7ff f9d1 	bl	8027aec <_free_r>
 802874a:	2000      	movs	r0, #0
 802874c:	6360      	str	r0, [r4, #52]	; 0x34
 802874e:	e7c1      	b.n	80286d4 <__sflush_r+0x1c>
 8028750:	6a21      	ldr	r1, [r4, #32]
 8028752:	2301      	movs	r3, #1
 8028754:	4628      	mov	r0, r5
 8028756:	47b0      	blx	r6
 8028758:	1c41      	adds	r1, r0, #1
 802875a:	d1c7      	bne.n	80286ec <__sflush_r+0x34>
 802875c:	682b      	ldr	r3, [r5, #0]
 802875e:	2b00      	cmp	r3, #0
 8028760:	d0c4      	beq.n	80286ec <__sflush_r+0x34>
 8028762:	2b1d      	cmp	r3, #29
 8028764:	d001      	beq.n	802876a <__sflush_r+0xb2>
 8028766:	2b16      	cmp	r3, #22
 8028768:	d101      	bne.n	802876e <__sflush_r+0xb6>
 802876a:	602f      	str	r7, [r5, #0]
 802876c:	e7b1      	b.n	80286d2 <__sflush_r+0x1a>
 802876e:	89a3      	ldrh	r3, [r4, #12]
 8028770:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8028774:	81a3      	strh	r3, [r4, #12]
 8028776:	e7ad      	b.n	80286d4 <__sflush_r+0x1c>
 8028778:	690f      	ldr	r7, [r1, #16]
 802877a:	2f00      	cmp	r7, #0
 802877c:	d0a9      	beq.n	80286d2 <__sflush_r+0x1a>
 802877e:	0793      	lsls	r3, r2, #30
 8028780:	680e      	ldr	r6, [r1, #0]
 8028782:	bf08      	it	eq
 8028784:	694b      	ldreq	r3, [r1, #20]
 8028786:	600f      	str	r7, [r1, #0]
 8028788:	bf18      	it	ne
 802878a:	2300      	movne	r3, #0
 802878c:	eba6 0807 	sub.w	r8, r6, r7
 8028790:	608b      	str	r3, [r1, #8]
 8028792:	f1b8 0f00 	cmp.w	r8, #0
 8028796:	dd9c      	ble.n	80286d2 <__sflush_r+0x1a>
 8028798:	6a21      	ldr	r1, [r4, #32]
 802879a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802879c:	4643      	mov	r3, r8
 802879e:	463a      	mov	r2, r7
 80287a0:	4628      	mov	r0, r5
 80287a2:	47b0      	blx	r6
 80287a4:	2800      	cmp	r0, #0
 80287a6:	dc06      	bgt.n	80287b6 <__sflush_r+0xfe>
 80287a8:	89a3      	ldrh	r3, [r4, #12]
 80287aa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80287ae:	81a3      	strh	r3, [r4, #12]
 80287b0:	f04f 30ff 	mov.w	r0, #4294967295
 80287b4:	e78e      	b.n	80286d4 <__sflush_r+0x1c>
 80287b6:	4407      	add	r7, r0
 80287b8:	eba8 0800 	sub.w	r8, r8, r0
 80287bc:	e7e9      	b.n	8028792 <__sflush_r+0xda>
 80287be:	bf00      	nop
 80287c0:	20400001 	.word	0x20400001

080287c4 <_fflush_r>:
 80287c4:	b538      	push	{r3, r4, r5, lr}
 80287c6:	690b      	ldr	r3, [r1, #16]
 80287c8:	4605      	mov	r5, r0
 80287ca:	460c      	mov	r4, r1
 80287cc:	b913      	cbnz	r3, 80287d4 <_fflush_r+0x10>
 80287ce:	2500      	movs	r5, #0
 80287d0:	4628      	mov	r0, r5
 80287d2:	bd38      	pop	{r3, r4, r5, pc}
 80287d4:	b118      	cbz	r0, 80287de <_fflush_r+0x1a>
 80287d6:	6983      	ldr	r3, [r0, #24]
 80287d8:	b90b      	cbnz	r3, 80287de <_fflush_r+0x1a>
 80287da:	f7ff f875 	bl	80278c8 <__sinit>
 80287de:	4b14      	ldr	r3, [pc, #80]	; (8028830 <_fflush_r+0x6c>)
 80287e0:	429c      	cmp	r4, r3
 80287e2:	d11b      	bne.n	802881c <_fflush_r+0x58>
 80287e4:	686c      	ldr	r4, [r5, #4]
 80287e6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80287ea:	2b00      	cmp	r3, #0
 80287ec:	d0ef      	beq.n	80287ce <_fflush_r+0xa>
 80287ee:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80287f0:	07d0      	lsls	r0, r2, #31
 80287f2:	d404      	bmi.n	80287fe <_fflush_r+0x3a>
 80287f4:	0599      	lsls	r1, r3, #22
 80287f6:	d402      	bmi.n	80287fe <_fflush_r+0x3a>
 80287f8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80287fa:	f7ff f94e 	bl	8027a9a <__retarget_lock_acquire_recursive>
 80287fe:	4628      	mov	r0, r5
 8028800:	4621      	mov	r1, r4
 8028802:	f7ff ff59 	bl	80286b8 <__sflush_r>
 8028806:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8028808:	07da      	lsls	r2, r3, #31
 802880a:	4605      	mov	r5, r0
 802880c:	d4e0      	bmi.n	80287d0 <_fflush_r+0xc>
 802880e:	89a3      	ldrh	r3, [r4, #12]
 8028810:	059b      	lsls	r3, r3, #22
 8028812:	d4dd      	bmi.n	80287d0 <_fflush_r+0xc>
 8028814:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8028816:	f7ff f942 	bl	8027a9e <__retarget_lock_release_recursive>
 802881a:	e7d9      	b.n	80287d0 <_fflush_r+0xc>
 802881c:	4b05      	ldr	r3, [pc, #20]	; (8028834 <_fflush_r+0x70>)
 802881e:	429c      	cmp	r4, r3
 8028820:	d101      	bne.n	8028826 <_fflush_r+0x62>
 8028822:	68ac      	ldr	r4, [r5, #8]
 8028824:	e7df      	b.n	80287e6 <_fflush_r+0x22>
 8028826:	4b04      	ldr	r3, [pc, #16]	; (8028838 <_fflush_r+0x74>)
 8028828:	429c      	cmp	r4, r3
 802882a:	bf08      	it	eq
 802882c:	68ec      	ldreq	r4, [r5, #12]
 802882e:	e7da      	b.n	80287e6 <_fflush_r+0x22>
 8028830:	0802dd20 	.word	0x0802dd20
 8028834:	0802dd40 	.word	0x0802dd40
 8028838:	0802dd00 	.word	0x0802dd00

0802883c <_lseek_r>:
 802883c:	b538      	push	{r3, r4, r5, lr}
 802883e:	4d07      	ldr	r5, [pc, #28]	; (802885c <_lseek_r+0x20>)
 8028840:	4604      	mov	r4, r0
 8028842:	4608      	mov	r0, r1
 8028844:	4611      	mov	r1, r2
 8028846:	2200      	movs	r2, #0
 8028848:	602a      	str	r2, [r5, #0]
 802884a:	461a      	mov	r2, r3
 802884c:	f7d9 fb8e 	bl	8001f6c <_lseek>
 8028850:	1c43      	adds	r3, r0, #1
 8028852:	d102      	bne.n	802885a <_lseek_r+0x1e>
 8028854:	682b      	ldr	r3, [r5, #0]
 8028856:	b103      	cbz	r3, 802885a <_lseek_r+0x1e>
 8028858:	6023      	str	r3, [r4, #0]
 802885a:	bd38      	pop	{r3, r4, r5, pc}
 802885c:	2002c2b0 	.word	0x2002c2b0

08028860 <__swhatbuf_r>:
 8028860:	b570      	push	{r4, r5, r6, lr}
 8028862:	460e      	mov	r6, r1
 8028864:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8028868:	2900      	cmp	r1, #0
 802886a:	b096      	sub	sp, #88	; 0x58
 802886c:	4614      	mov	r4, r2
 802886e:	461d      	mov	r5, r3
 8028870:	da07      	bge.n	8028882 <__swhatbuf_r+0x22>
 8028872:	2300      	movs	r3, #0
 8028874:	602b      	str	r3, [r5, #0]
 8028876:	89b3      	ldrh	r3, [r6, #12]
 8028878:	061a      	lsls	r2, r3, #24
 802887a:	d410      	bmi.n	802889e <__swhatbuf_r+0x3e>
 802887c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8028880:	e00e      	b.n	80288a0 <__swhatbuf_r+0x40>
 8028882:	466a      	mov	r2, sp
 8028884:	f000 f86e 	bl	8028964 <_fstat_r>
 8028888:	2800      	cmp	r0, #0
 802888a:	dbf2      	blt.n	8028872 <__swhatbuf_r+0x12>
 802888c:	9a01      	ldr	r2, [sp, #4]
 802888e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8028892:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8028896:	425a      	negs	r2, r3
 8028898:	415a      	adcs	r2, r3
 802889a:	602a      	str	r2, [r5, #0]
 802889c:	e7ee      	b.n	802887c <__swhatbuf_r+0x1c>
 802889e:	2340      	movs	r3, #64	; 0x40
 80288a0:	2000      	movs	r0, #0
 80288a2:	6023      	str	r3, [r4, #0]
 80288a4:	b016      	add	sp, #88	; 0x58
 80288a6:	bd70      	pop	{r4, r5, r6, pc}

080288a8 <__smakebuf_r>:
 80288a8:	898b      	ldrh	r3, [r1, #12]
 80288aa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80288ac:	079d      	lsls	r5, r3, #30
 80288ae:	4606      	mov	r6, r0
 80288b0:	460c      	mov	r4, r1
 80288b2:	d507      	bpl.n	80288c4 <__smakebuf_r+0x1c>
 80288b4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80288b8:	6023      	str	r3, [r4, #0]
 80288ba:	6123      	str	r3, [r4, #16]
 80288bc:	2301      	movs	r3, #1
 80288be:	6163      	str	r3, [r4, #20]
 80288c0:	b002      	add	sp, #8
 80288c2:	bd70      	pop	{r4, r5, r6, pc}
 80288c4:	ab01      	add	r3, sp, #4
 80288c6:	466a      	mov	r2, sp
 80288c8:	f7ff ffca 	bl	8028860 <__swhatbuf_r>
 80288cc:	9900      	ldr	r1, [sp, #0]
 80288ce:	4605      	mov	r5, r0
 80288d0:	4630      	mov	r0, r6
 80288d2:	f7ff f95b 	bl	8027b8c <_malloc_r>
 80288d6:	b948      	cbnz	r0, 80288ec <__smakebuf_r+0x44>
 80288d8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80288dc:	059a      	lsls	r2, r3, #22
 80288de:	d4ef      	bmi.n	80288c0 <__smakebuf_r+0x18>
 80288e0:	f023 0303 	bic.w	r3, r3, #3
 80288e4:	f043 0302 	orr.w	r3, r3, #2
 80288e8:	81a3      	strh	r3, [r4, #12]
 80288ea:	e7e3      	b.n	80288b4 <__smakebuf_r+0xc>
 80288ec:	4b0d      	ldr	r3, [pc, #52]	; (8028924 <__smakebuf_r+0x7c>)
 80288ee:	62b3      	str	r3, [r6, #40]	; 0x28
 80288f0:	89a3      	ldrh	r3, [r4, #12]
 80288f2:	6020      	str	r0, [r4, #0]
 80288f4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80288f8:	81a3      	strh	r3, [r4, #12]
 80288fa:	9b00      	ldr	r3, [sp, #0]
 80288fc:	6163      	str	r3, [r4, #20]
 80288fe:	9b01      	ldr	r3, [sp, #4]
 8028900:	6120      	str	r0, [r4, #16]
 8028902:	b15b      	cbz	r3, 802891c <__smakebuf_r+0x74>
 8028904:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8028908:	4630      	mov	r0, r6
 802890a:	f000 f83d 	bl	8028988 <_isatty_r>
 802890e:	b128      	cbz	r0, 802891c <__smakebuf_r+0x74>
 8028910:	89a3      	ldrh	r3, [r4, #12]
 8028912:	f023 0303 	bic.w	r3, r3, #3
 8028916:	f043 0301 	orr.w	r3, r3, #1
 802891a:	81a3      	strh	r3, [r4, #12]
 802891c:	89a0      	ldrh	r0, [r4, #12]
 802891e:	4305      	orrs	r5, r0
 8028920:	81a5      	strh	r5, [r4, #12]
 8028922:	e7cd      	b.n	80288c0 <__smakebuf_r+0x18>
 8028924:	08027861 	.word	0x08027861

08028928 <__malloc_lock>:
 8028928:	4801      	ldr	r0, [pc, #4]	; (8028930 <__malloc_lock+0x8>)
 802892a:	f7ff b8b6 	b.w	8027a9a <__retarget_lock_acquire_recursive>
 802892e:	bf00      	nop
 8028930:	2002c2a8 	.word	0x2002c2a8

08028934 <__malloc_unlock>:
 8028934:	4801      	ldr	r0, [pc, #4]	; (802893c <__malloc_unlock+0x8>)
 8028936:	f7ff b8b2 	b.w	8027a9e <__retarget_lock_release_recursive>
 802893a:	bf00      	nop
 802893c:	2002c2a8 	.word	0x2002c2a8

08028940 <_read_r>:
 8028940:	b538      	push	{r3, r4, r5, lr}
 8028942:	4d07      	ldr	r5, [pc, #28]	; (8028960 <_read_r+0x20>)
 8028944:	4604      	mov	r4, r0
 8028946:	4608      	mov	r0, r1
 8028948:	4611      	mov	r1, r2
 802894a:	2200      	movs	r2, #0
 802894c:	602a      	str	r2, [r5, #0]
 802894e:	461a      	mov	r2, r3
 8028950:	f7d9 fae8 	bl	8001f24 <_read>
 8028954:	1c43      	adds	r3, r0, #1
 8028956:	d102      	bne.n	802895e <_read_r+0x1e>
 8028958:	682b      	ldr	r3, [r5, #0]
 802895a:	b103      	cbz	r3, 802895e <_read_r+0x1e>
 802895c:	6023      	str	r3, [r4, #0]
 802895e:	bd38      	pop	{r3, r4, r5, pc}
 8028960:	2002c2b0 	.word	0x2002c2b0

08028964 <_fstat_r>:
 8028964:	b538      	push	{r3, r4, r5, lr}
 8028966:	4d07      	ldr	r5, [pc, #28]	; (8028984 <_fstat_r+0x20>)
 8028968:	2300      	movs	r3, #0
 802896a:	4604      	mov	r4, r0
 802896c:	4608      	mov	r0, r1
 802896e:	4611      	mov	r1, r2
 8028970:	602b      	str	r3, [r5, #0]
 8028972:	f7d9 faf4 	bl	8001f5e <_fstat>
 8028976:	1c43      	adds	r3, r0, #1
 8028978:	d102      	bne.n	8028980 <_fstat_r+0x1c>
 802897a:	682b      	ldr	r3, [r5, #0]
 802897c:	b103      	cbz	r3, 8028980 <_fstat_r+0x1c>
 802897e:	6023      	str	r3, [r4, #0]
 8028980:	bd38      	pop	{r3, r4, r5, pc}
 8028982:	bf00      	nop
 8028984:	2002c2b0 	.word	0x2002c2b0

08028988 <_isatty_r>:
 8028988:	b538      	push	{r3, r4, r5, lr}
 802898a:	4d06      	ldr	r5, [pc, #24]	; (80289a4 <_isatty_r+0x1c>)
 802898c:	2300      	movs	r3, #0
 802898e:	4604      	mov	r4, r0
 8028990:	4608      	mov	r0, r1
 8028992:	602b      	str	r3, [r5, #0]
 8028994:	f7d9 fae8 	bl	8001f68 <_isatty>
 8028998:	1c43      	adds	r3, r0, #1
 802899a:	d102      	bne.n	80289a2 <_isatty_r+0x1a>
 802899c:	682b      	ldr	r3, [r5, #0]
 802899e:	b103      	cbz	r3, 80289a2 <_isatty_r+0x1a>
 80289a0:	6023      	str	r3, [r4, #0]
 80289a2:	bd38      	pop	{r3, r4, r5, pc}
 80289a4:	2002c2b0 	.word	0x2002c2b0

080289a8 <_init>:
 80289a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80289aa:	bf00      	nop
 80289ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80289ae:	bc08      	pop	{r3}
 80289b0:	469e      	mov	lr, r3
 80289b2:	4770      	bx	lr

080289b4 <_fini>:
 80289b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80289b6:	bf00      	nop
 80289b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80289ba:	bc08      	pop	{r3}
 80289bc:	469e      	mov	lr, r3
 80289be:	4770      	bx	lr
