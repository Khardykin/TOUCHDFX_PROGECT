
STM32F469I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001b4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000265d4  080001c0  080001c0  000101c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000051bc  08026794  08026794  00036794  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 000003fc  0802b950  0802b950  0003b950  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  0802bd4c  0802bd4c  0017f7c4  2**0
                  CONTENTS
  5 .ARM          00000008  0802bd4c  0802bd4c  0003bd4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  0802bd54  0802bd54  0017f7c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  0802bd54  0802bd54  0003bd54  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  0802bd6c  0802bd6c  0003bd6c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         000001a8  20000000  0802bd74  00040000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          00020e8c  200001a8  0802bf1c  000401a8  2**2
                  ALLOC
 11 ._user_heap_stack 00002004  20021034  0802bf1c  00041034  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0017f7c4  2**0
                  CONTENTS, READONLY
 13 ExtFlashSection 0011ef00  90000000  90000000  00050000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 FontFlashSection 000104bc  9011ef00  9011ef00  0016ef00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 00000408  9012f3bc  9012f3bc  0017f3bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .debug_line   0008745a  00000000  00000000  0017f7f4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_info   001d8d7d  00000000  00000000  00206c4e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 0002190b  00000000  00000000  003df9cb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 000040f0  00000000  00000000  004012d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0013d797  00000000  00000000  004053c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_ranges 0000a568  00000000  00000000  00542b60  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loc    00095da2  00000000  00000000  0054d0c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  0003f515  00000000  00000000  005e2e6a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000d2  00000000  00000000  0062237f  2**0
                  CONTENTS, READONLY
 25 .debug_frame  0000be70  00000000  00000000  00622454  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	200001a8 	.word	0x200001a8
 80001dc:	00000000 	.word	0x00000000
 80001e0:	0802677c 	.word	0x0802677c

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	200001ac 	.word	0x200001ac
 80001fc:	0802677c 	.word	0x0802677c

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <strcmp>:
 80002a0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80002a4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80002a8:	2a01      	cmp	r2, #1
 80002aa:	bf28      	it	cs
 80002ac:	429a      	cmpcs	r2, r3
 80002ae:	d0f7      	beq.n	80002a0 <strcmp>
 80002b0:	1ad0      	subs	r0, r2, r3
 80002b2:	4770      	bx	lr

080002b4 <strlen>:
 80002b4:	4603      	mov	r3, r0
 80002b6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002ba:	2a00      	cmp	r2, #0
 80002bc:	d1fb      	bne.n	80002b6 <strlen+0x2>
 80002be:	1a18      	subs	r0, r3, r0
 80002c0:	3801      	subs	r0, #1
 80002c2:	4770      	bx	lr

080002c4 <__aeabi_uldivmod>:
 80002c4:	b953      	cbnz	r3, 80002dc <__aeabi_uldivmod+0x18>
 80002c6:	b94a      	cbnz	r2, 80002dc <__aeabi_uldivmod+0x18>
 80002c8:	2900      	cmp	r1, #0
 80002ca:	bf08      	it	eq
 80002cc:	2800      	cmpeq	r0, #0
 80002ce:	bf1c      	itt	ne
 80002d0:	f04f 31ff 	movne.w	r1, #4294967295
 80002d4:	f04f 30ff 	movne.w	r0, #4294967295
 80002d8:	f000 b96e 	b.w	80005b8 <__aeabi_idiv0>
 80002dc:	f1ad 0c08 	sub.w	ip, sp, #8
 80002e0:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002e4:	f000 f806 	bl	80002f4 <__udivmoddi4>
 80002e8:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002ec:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002f0:	b004      	add	sp, #16
 80002f2:	4770      	bx	lr

080002f4 <__udivmoddi4>:
 80002f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002f8:	9d08      	ldr	r5, [sp, #32]
 80002fa:	4604      	mov	r4, r0
 80002fc:	468c      	mov	ip, r1
 80002fe:	2b00      	cmp	r3, #0
 8000300:	f040 8083 	bne.w	800040a <__udivmoddi4+0x116>
 8000304:	428a      	cmp	r2, r1
 8000306:	4617      	mov	r7, r2
 8000308:	d947      	bls.n	800039a <__udivmoddi4+0xa6>
 800030a:	fab2 f282 	clz	r2, r2
 800030e:	b142      	cbz	r2, 8000322 <__udivmoddi4+0x2e>
 8000310:	f1c2 0020 	rsb	r0, r2, #32
 8000314:	fa24 f000 	lsr.w	r0, r4, r0
 8000318:	4091      	lsls	r1, r2
 800031a:	4097      	lsls	r7, r2
 800031c:	ea40 0c01 	orr.w	ip, r0, r1
 8000320:	4094      	lsls	r4, r2
 8000322:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000326:	0c23      	lsrs	r3, r4, #16
 8000328:	fbbc f6f8 	udiv	r6, ip, r8
 800032c:	fa1f fe87 	uxth.w	lr, r7
 8000330:	fb08 c116 	mls	r1, r8, r6, ip
 8000334:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000338:	fb06 f10e 	mul.w	r1, r6, lr
 800033c:	4299      	cmp	r1, r3
 800033e:	d909      	bls.n	8000354 <__udivmoddi4+0x60>
 8000340:	18fb      	adds	r3, r7, r3
 8000342:	f106 30ff 	add.w	r0, r6, #4294967295
 8000346:	f080 8119 	bcs.w	800057c <__udivmoddi4+0x288>
 800034a:	4299      	cmp	r1, r3
 800034c:	f240 8116 	bls.w	800057c <__udivmoddi4+0x288>
 8000350:	3e02      	subs	r6, #2
 8000352:	443b      	add	r3, r7
 8000354:	1a5b      	subs	r3, r3, r1
 8000356:	b2a4      	uxth	r4, r4
 8000358:	fbb3 f0f8 	udiv	r0, r3, r8
 800035c:	fb08 3310 	mls	r3, r8, r0, r3
 8000360:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000364:	fb00 fe0e 	mul.w	lr, r0, lr
 8000368:	45a6      	cmp	lr, r4
 800036a:	d909      	bls.n	8000380 <__udivmoddi4+0x8c>
 800036c:	193c      	adds	r4, r7, r4
 800036e:	f100 33ff 	add.w	r3, r0, #4294967295
 8000372:	f080 8105 	bcs.w	8000580 <__udivmoddi4+0x28c>
 8000376:	45a6      	cmp	lr, r4
 8000378:	f240 8102 	bls.w	8000580 <__udivmoddi4+0x28c>
 800037c:	3802      	subs	r0, #2
 800037e:	443c      	add	r4, r7
 8000380:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000384:	eba4 040e 	sub.w	r4, r4, lr
 8000388:	2600      	movs	r6, #0
 800038a:	b11d      	cbz	r5, 8000394 <__udivmoddi4+0xa0>
 800038c:	40d4      	lsrs	r4, r2
 800038e:	2300      	movs	r3, #0
 8000390:	e9c5 4300 	strd	r4, r3, [r5]
 8000394:	4631      	mov	r1, r6
 8000396:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800039a:	b902      	cbnz	r2, 800039e <__udivmoddi4+0xaa>
 800039c:	deff      	udf	#255	; 0xff
 800039e:	fab2 f282 	clz	r2, r2
 80003a2:	2a00      	cmp	r2, #0
 80003a4:	d150      	bne.n	8000448 <__udivmoddi4+0x154>
 80003a6:	1bcb      	subs	r3, r1, r7
 80003a8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80003ac:	fa1f f887 	uxth.w	r8, r7
 80003b0:	2601      	movs	r6, #1
 80003b2:	fbb3 fcfe 	udiv	ip, r3, lr
 80003b6:	0c21      	lsrs	r1, r4, #16
 80003b8:	fb0e 331c 	mls	r3, lr, ip, r3
 80003bc:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80003c0:	fb08 f30c 	mul.w	r3, r8, ip
 80003c4:	428b      	cmp	r3, r1
 80003c6:	d907      	bls.n	80003d8 <__udivmoddi4+0xe4>
 80003c8:	1879      	adds	r1, r7, r1
 80003ca:	f10c 30ff 	add.w	r0, ip, #4294967295
 80003ce:	d202      	bcs.n	80003d6 <__udivmoddi4+0xe2>
 80003d0:	428b      	cmp	r3, r1
 80003d2:	f200 80e9 	bhi.w	80005a8 <__udivmoddi4+0x2b4>
 80003d6:	4684      	mov	ip, r0
 80003d8:	1ac9      	subs	r1, r1, r3
 80003da:	b2a3      	uxth	r3, r4
 80003dc:	fbb1 f0fe 	udiv	r0, r1, lr
 80003e0:	fb0e 1110 	mls	r1, lr, r0, r1
 80003e4:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 80003e8:	fb08 f800 	mul.w	r8, r8, r0
 80003ec:	45a0      	cmp	r8, r4
 80003ee:	d907      	bls.n	8000400 <__udivmoddi4+0x10c>
 80003f0:	193c      	adds	r4, r7, r4
 80003f2:	f100 33ff 	add.w	r3, r0, #4294967295
 80003f6:	d202      	bcs.n	80003fe <__udivmoddi4+0x10a>
 80003f8:	45a0      	cmp	r8, r4
 80003fa:	f200 80d9 	bhi.w	80005b0 <__udivmoddi4+0x2bc>
 80003fe:	4618      	mov	r0, r3
 8000400:	eba4 0408 	sub.w	r4, r4, r8
 8000404:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000408:	e7bf      	b.n	800038a <__udivmoddi4+0x96>
 800040a:	428b      	cmp	r3, r1
 800040c:	d909      	bls.n	8000422 <__udivmoddi4+0x12e>
 800040e:	2d00      	cmp	r5, #0
 8000410:	f000 80b1 	beq.w	8000576 <__udivmoddi4+0x282>
 8000414:	2600      	movs	r6, #0
 8000416:	e9c5 0100 	strd	r0, r1, [r5]
 800041a:	4630      	mov	r0, r6
 800041c:	4631      	mov	r1, r6
 800041e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000422:	fab3 f683 	clz	r6, r3
 8000426:	2e00      	cmp	r6, #0
 8000428:	d14a      	bne.n	80004c0 <__udivmoddi4+0x1cc>
 800042a:	428b      	cmp	r3, r1
 800042c:	d302      	bcc.n	8000434 <__udivmoddi4+0x140>
 800042e:	4282      	cmp	r2, r0
 8000430:	f200 80b8 	bhi.w	80005a4 <__udivmoddi4+0x2b0>
 8000434:	1a84      	subs	r4, r0, r2
 8000436:	eb61 0103 	sbc.w	r1, r1, r3
 800043a:	2001      	movs	r0, #1
 800043c:	468c      	mov	ip, r1
 800043e:	2d00      	cmp	r5, #0
 8000440:	d0a8      	beq.n	8000394 <__udivmoddi4+0xa0>
 8000442:	e9c5 4c00 	strd	r4, ip, [r5]
 8000446:	e7a5      	b.n	8000394 <__udivmoddi4+0xa0>
 8000448:	f1c2 0320 	rsb	r3, r2, #32
 800044c:	fa20 f603 	lsr.w	r6, r0, r3
 8000450:	4097      	lsls	r7, r2
 8000452:	fa01 f002 	lsl.w	r0, r1, r2
 8000456:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 800045a:	40d9      	lsrs	r1, r3
 800045c:	4330      	orrs	r0, r6
 800045e:	0c03      	lsrs	r3, r0, #16
 8000460:	fbb1 f6fe 	udiv	r6, r1, lr
 8000464:	fa1f f887 	uxth.w	r8, r7
 8000468:	fb0e 1116 	mls	r1, lr, r6, r1
 800046c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000470:	fb06 f108 	mul.w	r1, r6, r8
 8000474:	4299      	cmp	r1, r3
 8000476:	fa04 f402 	lsl.w	r4, r4, r2
 800047a:	d909      	bls.n	8000490 <__udivmoddi4+0x19c>
 800047c:	18fb      	adds	r3, r7, r3
 800047e:	f106 3cff 	add.w	ip, r6, #4294967295
 8000482:	f080 808d 	bcs.w	80005a0 <__udivmoddi4+0x2ac>
 8000486:	4299      	cmp	r1, r3
 8000488:	f240 808a 	bls.w	80005a0 <__udivmoddi4+0x2ac>
 800048c:	3e02      	subs	r6, #2
 800048e:	443b      	add	r3, r7
 8000490:	1a5b      	subs	r3, r3, r1
 8000492:	b281      	uxth	r1, r0
 8000494:	fbb3 f0fe 	udiv	r0, r3, lr
 8000498:	fb0e 3310 	mls	r3, lr, r0, r3
 800049c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80004a0:	fb00 f308 	mul.w	r3, r0, r8
 80004a4:	428b      	cmp	r3, r1
 80004a6:	d907      	bls.n	80004b8 <__udivmoddi4+0x1c4>
 80004a8:	1879      	adds	r1, r7, r1
 80004aa:	f100 3cff 	add.w	ip, r0, #4294967295
 80004ae:	d273      	bcs.n	8000598 <__udivmoddi4+0x2a4>
 80004b0:	428b      	cmp	r3, r1
 80004b2:	d971      	bls.n	8000598 <__udivmoddi4+0x2a4>
 80004b4:	3802      	subs	r0, #2
 80004b6:	4439      	add	r1, r7
 80004b8:	1acb      	subs	r3, r1, r3
 80004ba:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 80004be:	e778      	b.n	80003b2 <__udivmoddi4+0xbe>
 80004c0:	f1c6 0c20 	rsb	ip, r6, #32
 80004c4:	fa03 f406 	lsl.w	r4, r3, r6
 80004c8:	fa22 f30c 	lsr.w	r3, r2, ip
 80004cc:	431c      	orrs	r4, r3
 80004ce:	fa20 f70c 	lsr.w	r7, r0, ip
 80004d2:	fa01 f306 	lsl.w	r3, r1, r6
 80004d6:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 80004da:	fa21 f10c 	lsr.w	r1, r1, ip
 80004de:	431f      	orrs	r7, r3
 80004e0:	0c3b      	lsrs	r3, r7, #16
 80004e2:	fbb1 f9fe 	udiv	r9, r1, lr
 80004e6:	fa1f f884 	uxth.w	r8, r4
 80004ea:	fb0e 1119 	mls	r1, lr, r9, r1
 80004ee:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 80004f2:	fb09 fa08 	mul.w	sl, r9, r8
 80004f6:	458a      	cmp	sl, r1
 80004f8:	fa02 f206 	lsl.w	r2, r2, r6
 80004fc:	fa00 f306 	lsl.w	r3, r0, r6
 8000500:	d908      	bls.n	8000514 <__udivmoddi4+0x220>
 8000502:	1861      	adds	r1, r4, r1
 8000504:	f109 30ff 	add.w	r0, r9, #4294967295
 8000508:	d248      	bcs.n	800059c <__udivmoddi4+0x2a8>
 800050a:	458a      	cmp	sl, r1
 800050c:	d946      	bls.n	800059c <__udivmoddi4+0x2a8>
 800050e:	f1a9 0902 	sub.w	r9, r9, #2
 8000512:	4421      	add	r1, r4
 8000514:	eba1 010a 	sub.w	r1, r1, sl
 8000518:	b2bf      	uxth	r7, r7
 800051a:	fbb1 f0fe 	udiv	r0, r1, lr
 800051e:	fb0e 1110 	mls	r1, lr, r0, r1
 8000522:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8000526:	fb00 f808 	mul.w	r8, r0, r8
 800052a:	45b8      	cmp	r8, r7
 800052c:	d907      	bls.n	800053e <__udivmoddi4+0x24a>
 800052e:	19e7      	adds	r7, r4, r7
 8000530:	f100 31ff 	add.w	r1, r0, #4294967295
 8000534:	d22e      	bcs.n	8000594 <__udivmoddi4+0x2a0>
 8000536:	45b8      	cmp	r8, r7
 8000538:	d92c      	bls.n	8000594 <__udivmoddi4+0x2a0>
 800053a:	3802      	subs	r0, #2
 800053c:	4427      	add	r7, r4
 800053e:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000542:	eba7 0708 	sub.w	r7, r7, r8
 8000546:	fba0 8902 	umull	r8, r9, r0, r2
 800054a:	454f      	cmp	r7, r9
 800054c:	46c6      	mov	lr, r8
 800054e:	4649      	mov	r1, r9
 8000550:	d31a      	bcc.n	8000588 <__udivmoddi4+0x294>
 8000552:	d017      	beq.n	8000584 <__udivmoddi4+0x290>
 8000554:	b15d      	cbz	r5, 800056e <__udivmoddi4+0x27a>
 8000556:	ebb3 020e 	subs.w	r2, r3, lr
 800055a:	eb67 0701 	sbc.w	r7, r7, r1
 800055e:	fa07 fc0c 	lsl.w	ip, r7, ip
 8000562:	40f2      	lsrs	r2, r6
 8000564:	ea4c 0202 	orr.w	r2, ip, r2
 8000568:	40f7      	lsrs	r7, r6
 800056a:	e9c5 2700 	strd	r2, r7, [r5]
 800056e:	2600      	movs	r6, #0
 8000570:	4631      	mov	r1, r6
 8000572:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000576:	462e      	mov	r6, r5
 8000578:	4628      	mov	r0, r5
 800057a:	e70b      	b.n	8000394 <__udivmoddi4+0xa0>
 800057c:	4606      	mov	r6, r0
 800057e:	e6e9      	b.n	8000354 <__udivmoddi4+0x60>
 8000580:	4618      	mov	r0, r3
 8000582:	e6fd      	b.n	8000380 <__udivmoddi4+0x8c>
 8000584:	4543      	cmp	r3, r8
 8000586:	d2e5      	bcs.n	8000554 <__udivmoddi4+0x260>
 8000588:	ebb8 0e02 	subs.w	lr, r8, r2
 800058c:	eb69 0104 	sbc.w	r1, r9, r4
 8000590:	3801      	subs	r0, #1
 8000592:	e7df      	b.n	8000554 <__udivmoddi4+0x260>
 8000594:	4608      	mov	r0, r1
 8000596:	e7d2      	b.n	800053e <__udivmoddi4+0x24a>
 8000598:	4660      	mov	r0, ip
 800059a:	e78d      	b.n	80004b8 <__udivmoddi4+0x1c4>
 800059c:	4681      	mov	r9, r0
 800059e:	e7b9      	b.n	8000514 <__udivmoddi4+0x220>
 80005a0:	4666      	mov	r6, ip
 80005a2:	e775      	b.n	8000490 <__udivmoddi4+0x19c>
 80005a4:	4630      	mov	r0, r6
 80005a6:	e74a      	b.n	800043e <__udivmoddi4+0x14a>
 80005a8:	f1ac 0c02 	sub.w	ip, ip, #2
 80005ac:	4439      	add	r1, r7
 80005ae:	e713      	b.n	80003d8 <__udivmoddi4+0xe4>
 80005b0:	3802      	subs	r0, #2
 80005b2:	443c      	add	r4, r7
 80005b4:	e724      	b.n	8000400 <__udivmoddi4+0x10c>
 80005b6:	bf00      	nop

080005b8 <__aeabi_idiv0>:
 80005b8:	4770      	bx	lr
 80005ba:	bf00      	nop

080005bc <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 80005bc:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005f4 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 80005c0:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 80005c2:	e003      	b.n	80005cc <LoopCopyDataInit>

080005c4 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80005c4:	4b0c      	ldr	r3, [pc, #48]	; (80005f8 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80005c6:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005c8:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005ca:	3104      	adds	r1, #4

080005cc <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005cc:	480b      	ldr	r0, [pc, #44]	; (80005fc <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005ce:	4b0c      	ldr	r3, [pc, #48]	; (8000600 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005d0:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005d2:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005d4:	d3f6      	bcc.n	80005c4 <CopyDataInit>
  ldr  r2, =_sbss
 80005d6:	4a0b      	ldr	r2, [pc, #44]	; (8000604 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005d8:	e002      	b.n	80005e0 <LoopFillZerobss>

080005da <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005da:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005dc:	f842 3b04 	str.w	r3, [r2], #4

080005e0 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005e0:	4b09      	ldr	r3, [pc, #36]	; (8000608 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005e2:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005e4:	d3f9      	bcc.n	80005da <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005e6:	f009 fdb1 	bl	800a14c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005ea:	f024 f879 	bl	80246e0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005ee:	f000 ff67 	bl	80014c0 <main>
  bx  lr    
 80005f2:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 80005f4:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 80005f8:	0802bd74 	.word	0x0802bd74
  ldr  r0, =_sdata
 80005fc:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000600:	200001a8 	.word	0x200001a8
  ldr  r2, =_sbss
 8000604:	200001a8 	.word	0x200001a8
  ldr  r3, = _ebss
 8000608:	20021034 	.word	0x20021034

0800060c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800060c:	e7fe      	b.n	800060c <ADC_IRQHandler>

0800060e <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 800060e:	f000 bde1 	b.w	80011d4 <touchgfx_init>

08000612 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8000612:	f000 be4f 	b.w	80012b4 <touchgfx_taskEntry>

08000616 <_ZN8touchgfx7Buttons4initEv>:
extern "C" void             BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode);
extern "C" uint32_t         BSP_PB_GetState(Button_TypeDef Button);

void Buttons::init()
{
    BSP_PB_Init(BUTTON_WAKEUP, BUTTON_MODE_GPIO);
 8000616:	2100      	movs	r1, #0
 8000618:	4608      	mov	r0, r1
 800061a:	f009 b8ff 	b.w	800981c <BSP_PB_Init>

0800061e <_ZN8touchgfx7Buttons6sampleEv>:

unsigned int Buttons::sample()
{
    uint32_t result = 0;

    result = BSP_PB_GetState(BUTTON_WAKEUP);
 800061e:	2000      	movs	r0, #0
 8000620:	f009 b936 	b.w	8009890 <BSP_PB_GetState>

08000624 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 8000624:	6840      	ldr	r0, [r0, #4]
    }
 8000626:	4770      	bx	lr

08000628 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000628:	6041      	str	r1, [r0, #4]
    }
 800062a:	4770      	bx	lr

0800062c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Instrumentation Trace Macrocell (ITM)
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 800062c:	4a05      	ldr	r2, [pc, #20]	; (8000644 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x18>)
 800062e:	6813      	ldr	r3, [r2, #0]
 8000630:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000634:	6013      	str	r3, [r2, #0]
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000636:	4a04      	ldr	r2, [pc, #16]	; (8000648 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x1c>)
 8000638:	6813      	ldr	r3, [r2, #0]
 800063a:	f043 0301 	orr.w	r3, r3, #1
 800063e:	6013      	str	r3, [r2, #0]
}
 8000640:	4770      	bx	lr
 8000642:	bf00      	nop
 8000644:	e000edfc 	.word	0xe000edfc
 8000648:	e0001000 	.word	0xe0001000

0800064c <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 800064c:	1a51      	subs	r1, r2, r1
 800064e:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 8000652:	fbb1 f0f3 	udiv	r0, r1, r3
 8000656:	4770      	bx	lr

08000658 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8000658:	4b01      	ldr	r3, [pc, #4]	; (8000660 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 800065a:	6818      	ldr	r0, [r3, #0]
}
 800065c:	4770      	bx	lr
 800065e:	bf00      	nop
 8000660:	e0001004 	.word	0xe0001004

08000664 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 8000664:	4770      	bx	lr

08000666 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 8000666:	b510      	push	{r4, lr}
 8000668:	210c      	movs	r1, #12
 800066a:	4604      	mov	r4, r0
 800066c:	f023 feb5 	bl	80243da <_ZdlPvj>
 8000670:	4620      	mov	r0, r4
 8000672:	bd10      	pop	{r4, pc}

08000674 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
 8000674:	6803      	ldr	r3, [r0, #0]
{
 8000676:	b510      	push	{r4, lr}
 8000678:	691b      	ldr	r3, [r3, #16]
 800067a:	4604      	mov	r4, r0
    if (active) //idle task sched out
 800067c:	b131      	cbz	r1, 800068c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800067e:	4798      	blx	r3
 8000680:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 8000682:	6863      	ldr	r3, [r4, #4]
 8000684:	1a9b      	subs	r3, r3, r2
 8000686:	4418      	add	r0, r3
 8000688:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 800068a:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 800068c:	4798      	blx	r3
 800068e:	60a0      	str	r0, [r4, #8]
}
 8000690:	e7fb      	b.n	800068a <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

08000692 <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 8000692:	4770      	bx	lr

08000694 <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 8000694:	4770      	bx	lr
	...

08000698 <_ZN8touchgfx10KeySampler4initEv>:
using namespace touchgfx;

static uint8_t btnstatus[4];

void KeySampler::init()
{
 8000698:	b508      	push	{r3, lr}
    Buttons::init();
 800069a:	f7ff ffbc 	bl	8000616 <_ZN8touchgfx7Buttons4initEv>

    memset(btnstatus, 0x00, sizeof(uint8_t) * 4);
 800069e:	4b02      	ldr	r3, [pc, #8]	; (80006a8 <_ZN8touchgfx10KeySampler4initEv+0x10>)
 80006a0:	2200      	movs	r2, #0
 80006a2:	601a      	str	r2, [r3, #0]
}
 80006a4:	bd08      	pop	{r3, pc}
 80006a6:	bf00      	nop
 80006a8:	200001c4 	.word	0x200001c4

080006ac <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 80006ac:	b570      	push	{r4, r5, r6, lr}
 80006ae:	460d      	mov	r5, r1
    unsigned int buttonValue = Buttons::sample();
 80006b0:	f7ff ffb5 	bl	800061e <_ZN8touchgfx7Buttons6sampleEv>

    //Propergate values through buffer
    btnstatus[3] = btnstatus[2];
 80006b4:	4a0b      	ldr	r2, [pc, #44]	; (80006e4 <_ZN8touchgfx10KeySampler6sampleERh+0x38>)
 80006b6:	7893      	ldrb	r3, [r2, #2]
    btnstatus[2] = btnstatus[1];
 80006b8:	7856      	ldrb	r6, [r2, #1]
    btnstatus[1] = btnstatus[0];
 80006ba:	7811      	ldrb	r1, [r2, #0]
    btnstatus[3] = btnstatus[2];
 80006bc:	70d3      	strb	r3, [r2, #3]
    btnstatus[0] = buttonValue;
 80006be:	b2c4      	uxtb	r4, r0

    //User key
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006c0:	f013 0001 	ands.w	r0, r3, #1
    btnstatus[2] = btnstatus[1];
 80006c4:	7096      	strb	r6, [r2, #2]
    btnstatus[1] = btnstatus[0];
 80006c6:	7051      	strb	r1, [r2, #1]
    btnstatus[0] = buttonValue;
 80006c8:	7014      	strb	r4, [r2, #0]
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006ca:	d00a      	beq.n	80006e2 <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006cc:	f016 0001 	ands.w	r0, r6, #1
 80006d0:	d007      	beq.n	80006e2 <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006d2:	f011 0001 	ands.w	r0, r1, #1
 80006d6:	d004      	beq.n	80006e2 <_ZN8touchgfx10KeySampler6sampleERh+0x36>
            ((btnstatus[1] & Key1) == 1) && ((btnstatus[0] & Key1) == 0))
 80006d8:	07e3      	lsls	r3, r4, #31
    {
        key = 1;
 80006da:	bf5a      	itte	pl
 80006dc:	2001      	movpl	r0, #1
 80006de:	7028      	strbpl	r0, [r5, #0]
        return true;
    }

    return false;
 80006e0:	2000      	movmi	r0, #0
}
 80006e2:	bd70      	pop	{r4, r5, r6, pc}
 80006e4:	200001c4 	.word	0x200001c4

080006e8 <_ZN8touchgfx10KeySamplerD0Ev>:
 80006e8:	b510      	push	{r4, lr}
 80006ea:	2104      	movs	r1, #4
 80006ec:	4604      	mov	r4, r0
 80006ee:	f023 fe74 	bl	80243da <_ZdlPvj>
 80006f2:	4620      	mov	r0, r4
 80006f4:	bd10      	pop	{r4, pc}

080006f6 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006f6:	4770      	bx	lr

080006f8 <_ZN20STM32TouchControllerD0Ev>:
 80006f8:	b510      	push	{r4, lr}
 80006fa:	2104      	movs	r1, #4
 80006fc:	4604      	mov	r4, r0
 80006fe:	f023 fe6c 	bl	80243da <_ZdlPvj>
 8000702:	4620      	mov	r0, r4
 8000704:	bd10      	pop	{r4, pc}
	...

08000708 <_ZN20STM32TouchController4initEv>:
#include "stm32469i_discovery_ts.h"

static bool bsp_ts_initialized = false;

void STM32TouchController::init()
{
 8000708:	b508      	push	{r3, lr}
    /**
     * Initialize touch controller and driver
     *
     */
    if (BSP_TS_Init(800, 480) == TS_OK)
 800070a:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 800070e:	f44f 7048 	mov.w	r0, #800	; 0x320
 8000712:	f009 fc67 	bl	8009fe4 <BSP_TS_Init>
 8000716:	4b07      	ldr	r3, [pc, #28]	; (8000734 <_ZN20STM32TouchController4initEv+0x2c>)
 8000718:	b910      	cbnz	r0, 8000720 <_ZN20STM32TouchController4initEv+0x18>
    {
        bsp_ts_initialized = true;
 800071a:	2201      	movs	r2, #1
 800071c:	701a      	strb	r2, [r3, #0]
    }

    assert(bsp_ts_initialized);
}
 800071e:	bd08      	pop	{r3, pc}
    assert(bsp_ts_initialized);
 8000720:	781b      	ldrb	r3, [r3, #0]
 8000722:	2b00      	cmp	r3, #0
 8000724:	d1fb      	bne.n	800071e <_ZN20STM32TouchController4initEv+0x16>
 8000726:	4b04      	ldr	r3, [pc, #16]	; (8000738 <_ZN20STM32TouchController4initEv+0x30>)
 8000728:	4a04      	ldr	r2, [pc, #16]	; (800073c <_ZN20STM32TouchController4initEv+0x34>)
 800072a:	4805      	ldr	r0, [pc, #20]	; (8000740 <_ZN20STM32TouchController4initEv+0x38>)
 800072c:	2126      	movs	r1, #38	; 0x26
 800072e:	f023 fe83 	bl	8024438 <__assert_func>
 8000732:	bf00      	nop
 8000734:	200001c8 	.word	0x200001c8
 8000738:	08026830 	.word	0x08026830
 800073c:	08026843 	.word	0x08026843
 8000740:	0802686d 	.word	0x0802686d

08000744 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8000744:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (bsp_ts_initialized)
 8000746:	4b0b      	ldr	r3, [pc, #44]	; (8000774 <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>)
 8000748:	781c      	ldrb	r4, [r3, #0]
{
 800074a:	460e      	mov	r6, r1
 800074c:	4615      	mov	r5, r2
    if (bsp_ts_initialized)
 800074e:	b15c      	cbz	r4, 8000768 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        TS_StateTypeDef state;
        BSP_TS_GetState(&state);
 8000750:	a801      	add	r0, sp, #4
 8000752:	f009 fc85 	bl	800a060 <BSP_TS_GetState>
        if (state.touchDetected)
 8000756:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800075a:	b143      	cbz	r3, 800076e <_ZN20STM32TouchController11sampleTouchERlS0_+0x2a>
        {
            x = state.touchX[0];
 800075c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000760:	6033      	str	r3, [r6, #0]
            y = state.touchY[0];
 8000762:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8000766:	602b      	str	r3, [r5, #0]
            return true;
        }
    }
    return false;
}
 8000768:	4620      	mov	r0, r4
 800076a:	b004      	add	sp, #16
 800076c:	bd70      	pop	{r4, r5, r6, pc}
    return false;
 800076e:	461c      	mov	r4, r3
 8000770:	e7fa      	b.n	8000768 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
 8000772:	bf00      	nop
 8000774:	200001c8 	.word	0x200001c8

08000778 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000778:	b110      	cbz	r0, 8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 800077a:	2801      	cmp	r0, #1
 800077c:	d009      	beq.n	8000792 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 800077e:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000780:	4b08      	ldr	r3, [pc, #32]	; (80007a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000782:	4809      	ldr	r0, [pc, #36]	; (80007a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x30>)
 8000784:	681a      	ldr	r2, [r3, #0]
 8000786:	fab2 f282 	clz	r2, r2
 800078a:	0952      	lsrs	r2, r2, #5
 800078c:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 800078e:	f00a bcff 	b.w	800b190 <HAL_GPIO_WritePin>
 8000792:	4b04      	ldr	r3, [pc, #16]	; (80007a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000794:	4805      	ldr	r0, [pc, #20]	; (80007ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x34>)
 8000796:	685a      	ldr	r2, [r3, #4]
 8000798:	fab2 f282 	clz	r2, r2
 800079c:	0952      	lsrs	r2, r2, #5
 800079e:	2110      	movs	r1, #16
 80007a0:	e7f5      	b.n	800078e <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x16>
 80007a2:	bf00      	nop
 80007a4:	200001cc 	.word	0x200001cc
 80007a8:	40021800 	.word	0x40021800
 80007ac:	40020c00 	.word	0x40020c00

080007b0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 80007b0:	b110      	cbz	r0, 80007b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 80007b2:	2801      	cmp	r0, #1
 80007b4:	d009      	beq.n	80007ca <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 80007b6:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80007b8:	4b08      	ldr	r3, [pc, #32]	; (80007dc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80007ba:	4809      	ldr	r0, [pc, #36]	; (80007e0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x30>)
 80007bc:	681a      	ldr	r2, [r3, #0]
 80007be:	3a00      	subs	r2, #0
 80007c0:	bf18      	it	ne
 80007c2:	2201      	movne	r2, #1
 80007c4:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007c6:	f00a bce3 	b.w	800b190 <HAL_GPIO_WritePin>
 80007ca:	4b04      	ldr	r3, [pc, #16]	; (80007dc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80007cc:	4805      	ldr	r0, [pc, #20]	; (80007e4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x34>)
 80007ce:	685a      	ldr	r2, [r3, #4]
 80007d0:	3a00      	subs	r2, #0
 80007d2:	bf18      	it	ne
 80007d4:	2201      	movne	r2, #1
 80007d6:	2110      	movs	r1, #16
 80007d8:	e7f5      	b.n	80007c6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x16>
 80007da:	bf00      	nop
 80007dc:	200001cc 	.word	0x200001cc
 80007e0:	40021800 	.word	0x40021800
 80007e4:	40020c00 	.word	0x40020c00

080007e8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007e8:	b110      	cbz	r0, 80007f0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 80007ea:	2801      	cmp	r0, #1
 80007ec:	d004      	beq.n	80007f8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80007ee:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007f0:	4803      	ldr	r0, [pc, #12]	; (8000800 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 80007f2:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80007f4:	f00a bcd1 	b.w	800b19a <HAL_GPIO_TogglePin>
 80007f8:	4802      	ldr	r0, [pc, #8]	; (8000804 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1c>)
 80007fa:	2110      	movs	r1, #16
 80007fc:	e7fa      	b.n	80007f4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xc>
 80007fe:	bf00      	nop
 8000800:	40021800 	.word	0x40021800
 8000804:	40020c00 	.word	0x40020c00

08000808 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8000808:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 800080a:	b130      	cbz	r0, 800081a <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 800080c:	2801      	cmp	r0, #1
 800080e:	d009      	beq.n	8000824 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8000810:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8000812:	1e43      	subs	r3, r0, #1
 8000814:	4258      	negs	r0, r3
 8000816:	4158      	adcs	r0, r3
 8000818:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800081a:	4804      	ldr	r0, [pc, #16]	; (800082c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x24>)
 800081c:	2140      	movs	r1, #64	; 0x40
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800081e:	f00a fcb1 	bl	800b184 <HAL_GPIO_ReadPin>
        break;
 8000822:	e7f6      	b.n	8000812 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000824:	4802      	ldr	r0, [pc, #8]	; (8000830 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x28>)
 8000826:	2110      	movs	r1, #16
 8000828:	e7f9      	b.n	800081e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 800082a:	bf00      	nop
 800082c:	40021800 	.word	0x40021800
 8000830:	40020c00 	.word	0x40020c00

08000834 <_ZN8touchgfx4GPIO4initEv>:
{
 8000834:	b570      	push	{r4, r5, r6, lr}
 8000836:	4d08      	ldr	r5, [pc, #32]	; (8000858 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000838:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 800083a:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 800083c:	b2e0      	uxtb	r0, r4
 800083e:	f7ff ffe3 	bl	8000808 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000842:	b118      	cbz	r0, 800084c <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000844:	682b      	ldr	r3, [r5, #0]
 8000846:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000848:	bf18      	it	ne
 800084a:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 800084c:	3401      	adds	r4, #1
 800084e:	2c05      	cmp	r4, #5
 8000850:	f105 0504 	add.w	r5, r5, #4
 8000854:	d1f2      	bne.n	800083c <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000856:	bd70      	pop	{r4, r5, r6, pc}
 8000858:	200001cc 	.word	0x200001cc

0800085c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 800085c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800085e:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8000862:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000866:	4770      	bx	lr

08000868 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 8000868:	2000      	movs	r0, #0
 800086a:	4770      	bx	lr

0800086c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800086c:	2000      	movs	r0, #0
 800086e:	4770      	bx	lr

08000870 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000870:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000872:	b10b      	cbz	r3, 8000878 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000874:	4608      	mov	r0, r1
 8000876:	4718      	bx	r3
        }
    }
 8000878:	4770      	bx	lr

0800087a <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800087a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800087e:	4770      	bx	lr

08000880 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000880:	6840      	ldr	r0, [r0, #4]
 8000882:	6803      	ldr	r3, [r0, #0]
 8000884:	699b      	ldr	r3, [r3, #24]
 8000886:	4718      	bx	r3

08000888 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000888:	4770      	bx	lr

0800088a <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 800088a:	4770      	bx	lr

0800088c <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return currFbBase;
}
 800088c:	4b01      	ldr	r3, [pc, #4]	; (8000894 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 800088e:	6818      	ldr	r0, [r3, #0]
 8000890:	4770      	bx	lr
 8000892:	bf00      	nop
 8000894:	200001dc 	.word	0x200001dc

08000898 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000898:	4770      	bx	lr
	...

0800089c <_ZN11TouchGFXHAL10initializeEv>:
{
 800089c:	b538      	push	{r3, r4, r5, lr}
 800089e:	4604      	mov	r4, r0
    mcuInstr.init();
 80008a0:	4d09      	ldr	r5, [pc, #36]	; (80008c8 <_ZN11TouchGFXHAL10initializeEv+0x2c>)
    GPIO::init();
 80008a2:	f7ff ffc7 	bl	8000834 <_ZN8touchgfx4GPIO4initEv>
    TouchGFXGeneratedHAL::initialize();
 80008a6:	4620      	mov	r0, r4
 80008a8:	f000 fd86 	bl	80013b8 <_ZN20TouchGFXGeneratedHAL10initializeEv>
        lockDMAToPorch = enableLock;
 80008ac:	2300      	movs	r3, #0
 80008ae:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
    mcuInstr.init();
 80008b2:	4628      	mov	r0, r5
 80008b4:	f7ff feba 	bl	800062c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 80008b8:	2301      	movs	r3, #1
 80008ba:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
        buttonController = btnCtrl;
 80008be:	4b03      	ldr	r3, [pc, #12]	; (80008cc <_ZN11TouchGFXHAL10initializeEv+0x30>)
        mcuInstrumentation = mcuInstr;
 80008c0:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 80008c2:	6163      	str	r3, [r4, #20]
}
 80008c4:	bd38      	pop	{r3, r4, r5, pc}
 80008c6:	bf00      	nop
 80008c8:	200001e8 	.word	0x200001e8
 80008cc:	200001e4 	.word	0x200001e4

080008d0 <_ZN11TouchGFXHAL9taskEntryEv>:
    enableLCDControllerInterrupt();
 80008d0:	6803      	ldr	r3, [r0, #0]
{
 80008d2:	4604      	mov	r4, r0
 80008d4:	b507      	push	{r0, r1, r2, lr}
    enableLCDControllerInterrupt();
 80008d6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80008d8:	4798      	blx	r3
    enableInterrupts();
 80008da:	6823      	ldr	r3, [r4, #0]
 80008dc:	4620      	mov	r0, r4
 80008de:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80008e0:	4798      	blx	r3
    OSWrappers::waitForVSync();
 80008e2:	f000 fa2d 	bl	8000d40 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80008e6:	6823      	ldr	r3, [r4, #0]
 80008e8:	4620      	mov	r0, r4
 80008ea:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80008ec:	4798      	blx	r3
    HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPON, 0x00);
 80008ee:	2100      	movs	r1, #0
 80008f0:	4806      	ldr	r0, [pc, #24]	; (800090c <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 80008f2:	9100      	str	r1, [sp, #0]
 80008f4:	2329      	movs	r3, #41	; 0x29
 80008f6:	2215      	movs	r2, #21
 80008f8:	f00a fa33 	bl	800ad62 <HAL_DSI_ShortWrite>
        OSWrappers::waitForVSync();
 80008fc:	f000 fa20 	bl	8000d40 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000900:	6823      	ldr	r3, [r4, #0]
 8000902:	4620      	mov	r0, r4
 8000904:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8000906:	4798      	blx	r3
    for (;;)
 8000908:	e7f8      	b.n	80008fc <_ZN11TouchGFXHAL9taskEntryEv+0x2c>
 800090a:	bf00      	nop
 800090c:	20020db0 	.word	0x20020db0

08000910 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000910:	b510      	push	{r4, lr}
 8000912:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000914:	f011 f874 	bl	8011a00 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000918:	6823      	ldr	r3, [r4, #0]
 800091a:	4620      	mov	r0, r4
 800091c:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
    }
 8000920:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000924:	4718      	bx	r3

08000926 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000926:	f000 bd46 	b.w	80013b6 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

0800092a <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800092a:	f000 bd5d 	b.w	80013e8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

0800092e <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800092e:	f000 bd5d 	b.w	80013ec <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

08000932 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000932:	f000 bd2f 	b.w	8001394 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000936 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000936:	f000 bd35 	b.w	80013a4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

0800093a <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800093a:	f000 bd59 	b.w	80013f0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
	...

08000940 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000940:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000942:	4b09      	ldr	r3, [pc, #36]	; (8000968 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000944:	881b      	ldrh	r3, [r3, #0]
 8000946:	428b      	cmp	r3, r1
 8000948:	d803      	bhi.n	8000952 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 800094a:	4b08      	ldr	r3, [pc, #32]	; (800096c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 800094c:	881b      	ldrh	r3, [r3, #0]
 800094e:	4293      	cmp	r3, r2
 8000950:	d905      	bls.n	800095e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000952:	4b07      	ldr	r3, [pc, #28]	; (8000970 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000954:	4a07      	ldr	r2, [pc, #28]	; (8000974 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000956:	4808      	ldr	r0, [pc, #32]	; (8000978 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000958:	219e      	movs	r1, #158	; 0x9e
 800095a:	f023 fd6d 	bl	8024438 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800095e:	4b07      	ldr	r3, [pc, #28]	; (800097c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000960:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000962:	4b07      	ldr	r3, [pc, #28]	; (8000980 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000964:	801a      	strh	r2, [r3, #0]
    }
 8000966:	bd08      	pop	{r3, pc}
 8000968:	20020a84 	.word	0x20020a84
 800096c:	20020a86 	.word	0x20020a86
 8000970:	080268e8 	.word	0x080268e8
 8000974:	0802694b 	.word	0x0802694b
 8000978:	0802698e 	.word	0x0802698e
 800097c:	20020a8a 	.word	0x20020a8a
 8000980:	20020a8c 	.word	0x20020a8c

08000984 <_ZN11TouchGFXHAL10beginFrameEv>:
    HAL::setFrameBufferStartAddresses(frameBuffer, doubleBuffer, animationStorage);
}

bool TouchGFXHAL::beginFrame()
{
    refreshRequested = false;
 8000984:	4b02      	ldr	r3, [pc, #8]	; (8000990 <_ZN11TouchGFXHAL10beginFrameEv+0xc>)
 8000986:	2200      	movs	r2, #0
 8000988:	701a      	strb	r2, [r3, #0]
    return HAL::beginFrame();
 800098a:	f010 ba13 	b.w	8010db4 <_ZN8touchgfx3HAL10beginFrameEv>
 800098e:	bf00      	nop
 8000990:	20000014 	.word	0x20000014

08000994 <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
 8000994:	b510      	push	{r4, lr}
 8000996:	4604      	mov	r4, r0
    HAL::endFrame();
 8000998:	f010 fa18 	bl	8010dcc <_ZN8touchgfx3HAL8endFrameEv>
    if (frameBufferUpdatedThisFrame)
 800099c:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 80009a0:	b113      	cbz	r3, 80009a8 <_ZN11TouchGFXHAL8endFrameEv+0x14>
    {
        refreshRequested = true;
 80009a2:	4b02      	ldr	r3, [pc, #8]	; (80009ac <_ZN11TouchGFXHAL8endFrameEv+0x18>)
 80009a4:	2201      	movs	r2, #1
 80009a6:	701a      	strb	r2, [r3, #0]
    }
}
 80009a8:	bd10      	pop	{r4, pc}
 80009aa:	bf00      	nop
 80009ac:	20000014 	.word	0x20000014

080009b0 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80009b0:	f010 b9c3 	b.w	8010d3a <_ZN8touchgfx3HAL16flushFrameBufferEv>

080009b4 <_ZN11TouchGFXHALD0Ev>:
 80009b4:	b510      	push	{r4, lr}
 80009b6:	217c      	movs	r1, #124	; 0x7c
 80009b8:	4604      	mov	r4, r0
 80009ba:	f023 fd0e 	bl	80243da <_ZdlPvj>
 80009be:	4620      	mov	r0, r4
 80009c0:	bd10      	pop	{r4, pc}

080009c2 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80009c2:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 80009c6:	b11b      	cbz	r3, 80009d0 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80009c8:	6840      	ldr	r0, [r0, #4]
 80009ca:	6803      	ldr	r3, [r0, #0]
 80009cc:	681b      	ldr	r3, [r3, #0]
 80009ce:	4718      	bx	r3
    }
 80009d0:	4618      	mov	r0, r3
 80009d2:	4770      	bx	lr

080009d4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80009d4:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80009d6:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80009da:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
 80009de:	4b0c      	ldr	r3, [pc, #48]	; (8000a10 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
 80009e0:	428c      	cmp	r4, r1
 80009e2:	781a      	ldrb	r2, [r3, #0]
 80009e4:	d009      	beq.n	80009fa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80009e6:	b93a      	cbnz	r2, 80009f8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009e8:	4a0a      	ldr	r2, [pc, #40]	; (8000a14 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009ea:	490b      	ldr	r1, [pc, #44]	; (8000a18 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009ec:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009ee:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 80009f0:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009f2:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 80009f4:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 80009f6:	701a      	strb	r2, [r3, #0]
    }
 80009f8:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80009fa:	2a00      	cmp	r2, #0
 80009fc:	d0fc      	beq.n	80009f8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009fe:	4a05      	ldr	r2, [pc, #20]	; (8000a14 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a00:	4905      	ldr	r1, [pc, #20]	; (8000a18 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a02:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a04:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000a06:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a08:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000a0a:	2200      	movs	r2, #0
 8000a0c:	e7f3      	b.n	80009f6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000a0e:	bf00      	nop
 8000a10:	20020a88 	.word	0x20020a88
 8000a14:	20020a84 	.word	0x20020a84
 8000a18:	20020a86 	.word	0x20020a86

08000a1c <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 8000a1c:	b510      	push	{r4, lr}
    currFbBase = (uint16_t*)frameBuffer;
 8000a1e:	4c0c      	ldr	r4, [pc, #48]	; (8000a50 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x34>)
 8000a20:	6021      	str	r1, [r4, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000a22:	b931      	cbnz	r1, 8000a32 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x16>
 8000a24:	4b0b      	ldr	r3, [pc, #44]	; (8000a54 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x38>)
 8000a26:	4a0c      	ldr	r2, [pc, #48]	; (8000a58 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x3c>)
 8000a28:	480c      	ldr	r0, [pc, #48]	; (8000a5c <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x40>)
 8000a2a:	f44f 712b 	mov.w	r1, #684	; 0x2ac
 8000a2e:	f023 fd03 	bl	8024438 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000a32:	e9c0 120f 	strd	r1, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000a36:	3a00      	subs	r2, #0
 8000a38:	4909      	ldr	r1, [pc, #36]	; (8000a60 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x44>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000a3a:	6443      	str	r3, [r0, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000a3c:	bf18      	it	ne
 8000a3e:	2201      	movne	r2, #1
 8000a40:	700a      	strb	r2, [r1, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000a42:	3b00      	subs	r3, #0
 8000a44:	4a07      	ldr	r2, [pc, #28]	; (8000a64 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x48>)
 8000a46:	bf18      	it	ne
 8000a48:	2301      	movne	r3, #1
 8000a4a:	7013      	strb	r3, [r2, #0]
}
 8000a4c:	bd10      	pop	{r4, pc}
 8000a4e:	bf00      	nop
 8000a50:	200001dc 	.word	0x200001dc
 8000a54:	080269d3 	.word	0x080269d3
 8000a58:	08026a0b 	.word	0x08026a0b
 8000a5c:	0802698e 	.word	0x0802698e
 8000a60:	20020a8e 	.word	0x20020a8e
 8000a64:	20020a8f 	.word	0x20020a8f

08000a68 <DSI_IO_WriteCmd>:
     * @param  pParams: Pointer to parameter values table.
     * @retval HAL status
     */
    void DSI_IO_WriteCmd(uint32_t NbrParams, uint8_t* pParams)
    {
        if (NbrParams <= 1)
 8000a68:	2801      	cmp	r0, #1
    {
 8000a6a:	b507      	push	{r0, r1, r2, lr}
        if (NbrParams <= 1)
 8000a6c:	d80a      	bhi.n	8000a84 <DSI_IO_WriteCmd+0x1c>
        {
            HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, pParams[0], pParams[1]);
 8000a6e:	784b      	ldrb	r3, [r1, #1]
 8000a70:	9300      	str	r3, [sp, #0]
 8000a72:	780b      	ldrb	r3, [r1, #0]
 8000a74:	4808      	ldr	r0, [pc, #32]	; (8000a98 <DSI_IO_WriteCmd+0x30>)
 8000a76:	2215      	movs	r2, #21
 8000a78:	2100      	movs	r1, #0
 8000a7a:	f00a f972 	bl	800ad62 <HAL_DSI_ShortWrite>
        }
        else
        {
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
        }
    }
 8000a7e:	b003      	add	sp, #12
 8000a80:	f85d fb04 	ldr.w	pc, [sp], #4
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
 8000a84:	9101      	str	r1, [sp, #4]
 8000a86:	5c0b      	ldrb	r3, [r1, r0]
 8000a88:	9300      	str	r3, [sp, #0]
 8000a8a:	2239      	movs	r2, #57	; 0x39
 8000a8c:	4603      	mov	r3, r0
 8000a8e:	2100      	movs	r1, #0
 8000a90:	4801      	ldr	r0, [pc, #4]	; (8000a98 <DSI_IO_WriteCmd+0x30>)
 8000a92:	f00a f977 	bl	800ad84 <HAL_DSI_LongWrite>
    }
 8000a96:	e7f2      	b.n	8000a7e <DSI_IO_WriteCmd+0x16>
 8000a98:	20020db0 	.word	0x20020db0

08000a9c <LCD_ReqTear>:

    /**
     * Request TE at scanline.
     */
    void LCD_ReqTear(void)
    {
 8000a9c:	b537      	push	{r0, r1, r2, r4, r5, lr}
        static uint8_t ScanLineParams[2];

        uint16_t scanline = 533;
        ScanLineParams[0] = scanline >> 8;
 8000a9e:	4a0b      	ldr	r2, [pc, #44]	; (8000acc <LCD_ReqTear+0x30>)
        ScanLineParams[1] = scanline & 0x00FF;

        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000aa0:	4c0b      	ldr	r4, [pc, #44]	; (8000ad0 <LCD_ReqTear+0x34>)
        ScanLineParams[0] = scanline >> 8;
 8000aa2:	2302      	movs	r3, #2
        ScanLineParams[1] = scanline & 0x00FF;
 8000aa4:	2515      	movs	r5, #21
        ScanLineParams[0] = scanline >> 8;
 8000aa6:	7013      	strb	r3, [r2, #0]
        ScanLineParams[1] = scanline & 0x00FF;
 8000aa8:	7055      	strb	r5, [r2, #1]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000aaa:	9201      	str	r2, [sp, #4]
 8000aac:	2244      	movs	r2, #68	; 0x44
 8000aae:	9200      	str	r2, [sp, #0]
 8000ab0:	2100      	movs	r1, #0
 8000ab2:	2239      	movs	r2, #57	; 0x39
 8000ab4:	4620      	mov	r0, r4
 8000ab6:	f00a f965 	bl	800ad84 <HAL_DSI_LongWrite>
        // set_tear_on
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0x35, 0x00);
 8000aba:	2100      	movs	r1, #0
 8000abc:	9100      	str	r1, [sp, #0]
 8000abe:	2335      	movs	r3, #53	; 0x35
 8000ac0:	462a      	mov	r2, r5
 8000ac2:	4620      	mov	r0, r4
 8000ac4:	f00a f94d 	bl	800ad62 <HAL_DSI_ShortWrite>
    }
 8000ac8:	b003      	add	sp, #12
 8000aca:	bd30      	pop	{r4, r5, pc}
 8000acc:	200001f4 	.word	0x200001f4
 8000ad0:	20020db0 	.word	0x20020db0

08000ad4 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 8000ad4:	b507      	push	{r0, r1, r2, lr}
 8000ad6:	9001      	str	r0, [sp, #4]
    LCD_ReqTear();
 8000ad8:	f7ff ffe0 	bl	8000a9c <LCD_ReqTear>
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000adc:	9801      	ldr	r0, [sp, #4]
}
 8000ade:	b003      	add	sp, #12
 8000ae0:	f85d eb04 	ldr.w	lr, [sp], #4
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000ae4:	f000 bc66 	b.w	80013b4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000ae8 <LCD_SetUpdateRegion>:

    void LCD_SetUpdateRegion(int idx)
    {
 8000ae8:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pCols[idx]);
 8000aea:	4b07      	ldr	r3, [pc, #28]	; (8000b08 <LCD_SetUpdateRegion+0x20>)
 8000aec:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8000af0:	232a      	movs	r3, #42	; 0x2a
 8000af2:	9001      	str	r0, [sp, #4]
 8000af4:	9300      	str	r3, [sp, #0]
 8000af6:	2239      	movs	r2, #57	; 0x39
 8000af8:	2304      	movs	r3, #4
 8000afa:	2100      	movs	r1, #0
 8000afc:	4803      	ldr	r0, [pc, #12]	; (8000b0c <LCD_SetUpdateRegion+0x24>)
 8000afe:	f00a f941 	bl	800ad84 <HAL_DSI_LongWrite>
    }
 8000b02:	b003      	add	sp, #12
 8000b04:	f85d fb04 	ldr.w	pc, [sp], #4
 8000b08:	20000004 	.word	0x20000004
 8000b0c:	20020db0 	.word	0x20020db0

08000b10 <HAL_DSI_TearingEffectCallback>:
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColRight);
    }

    void HAL_DSI_TearingEffectCallback(DSI_HandleTypeDef* hdsi)
    {
 8000b10:	b570      	push	{r4, r5, r6, lr}
        return instance;
 8000b12:	4d15      	ldr	r5, [pc, #84]	; (8000b68 <HAL_DSI_TearingEffectCallback+0x58>)
 8000b14:	4604      	mov	r4, r0
        GPIO::set(GPIO::VSYNC_FREQ);
 8000b16:	2000      	movs	r0, #0
 8000b18:	f7ff fe2e 	bl	8000778 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8000b1c:	682a      	ldr	r2, [r5, #0]
        vSyncCnt++;
 8000b1e:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8000b22:	3301      	adds	r3, #1
 8000b24:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
        HAL::getInstance()->vSync();
        OSWrappers::signalVSync();
 8000b28:	f000 f8fe 	bl	8000d28 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

        // In single buffering, only require that the system waits for display update to be finished if we
        // actually intend to update the display in this frame.
        HAL::getInstance()->lockDMAToFrontPorch(refreshRequested);
 8000b2c:	4b0f      	ldr	r3, [pc, #60]	; (8000b6c <HAL_DSI_TearingEffectCallback+0x5c>)
        return instance;
 8000b2e:	6828      	ldr	r0, [r5, #0]
 8000b30:	781a      	ldrb	r2, [r3, #0]

        if (refreshRequested && !displayRefreshing)
 8000b32:	781b      	ldrb	r3, [r3, #0]
        lockDMAToPorch = enableLock;
 8000b34:	f880 204a 	strb.w	r2, [r0, #74]	; 0x4a
 8000b38:	b123      	cbz	r3, 8000b44 <HAL_DSI_TearingEffectCallback+0x34>
 8000b3a:	4d0d      	ldr	r5, [pc, #52]	; (8000b70 <HAL_DSI_TearingEffectCallback+0x60>)
 8000b3c:	782b      	ldrb	r3, [r5, #0]
 8000b3e:	f003 06ff 	and.w	r6, r3, #255	; 0xff
 8000b42:	b123      	cbz	r3, 8000b4e <HAL_DSI_TearingEffectCallback+0x3e>
        }
        else
        {
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8000b44:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000b48:	2000      	movs	r0, #0
 8000b4a:	f7ff be31 	b.w	80007b0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
                HAL::getInstance()->swapFrameBuffers();
 8000b4e:	f010 ff57 	bl	8011a00 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            updateRegion = 0;
 8000b52:	4b08      	ldr	r3, [pc, #32]	; (8000b74 <HAL_DSI_TearingEffectCallback+0x64>)
            LCD_SetUpdateRegion(updateRegion);
 8000b54:	4630      	mov	r0, r6
            updateRegion = 0;
 8000b56:	601e      	str	r6, [r3, #0]
            LCD_SetUpdateRegion(updateRegion);
 8000b58:	f7ff ffc6 	bl	8000ae8 <LCD_SetUpdateRegion>
            HAL_DSI_Refresh(hdsi);
 8000b5c:	4620      	mov	r0, r4
 8000b5e:	f00a f8f0 	bl	800ad42 <HAL_DSI_Refresh>
            displayRefreshing = true;
 8000b62:	2301      	movs	r3, #1
 8000b64:	702b      	strb	r3, [r5, #0]
    }
 8000b66:	bd70      	pop	{r4, r5, r6, pc}
 8000b68:	20020a90 	.word	0x20020a90
 8000b6c:	20000014 	.word	0x20000014
 8000b70:	200001f6 	.word	0x200001f6
 8000b74:	200001e0 	.word	0x200001e0

08000b78 <HAL_DSI_EndOfRefreshCallback>:

    void HAL_DSI_EndOfRefreshCallback(DSI_HandleTypeDef* hdsi)
    {
        updateRegion++;
 8000b78:	4b30      	ldr	r3, [pc, #192]	; (8000c3c <HAL_DSI_EndOfRefreshCallback+0xc4>)
 8000b7a:	4a31      	ldr	r2, [pc, #196]	; (8000c40 <HAL_DSI_EndOfRefreshCallback+0xc8>)
    {
 8000b7c:	b570      	push	{r4, r5, r6, lr}
 8000b7e:	4605      	mov	r5, r0
        updateRegion++;
 8000b80:	6818      	ldr	r0, [r3, #0]
 8000b82:	4c30      	ldr	r4, [pc, #192]	; (8000c44 <HAL_DSI_EndOfRefreshCallback+0xcc>)
 8000b84:	3001      	adds	r0, #1
 8000b86:	6018      	str	r0, [r3, #0]
        if (updateRegion < 4)
 8000b88:	4b2f      	ldr	r3, [pc, #188]	; (8000c48 <HAL_DSI_EndOfRefreshCallback+0xd0>)
 8000b8a:	2803      	cmp	r0, #3
 8000b8c:	681e      	ldr	r6, [r3, #0]
 8000b8e:	dc2a      	bgt.n	8000be6 <HAL_DSI_EndOfRefreshCallback+0x6e>
        {
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b90:	f8d4 1404 	ldr.w	r1, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000b94:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8000b98:	fb03 6300 	mla	r3, r3, r0, r6
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b9c:	f021 0108 	bic.w	r1, r1, #8
 8000ba0:	f8c4 1404 	str.w	r1, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000ba4:	6293      	str	r3, [r2, #40]	; 0x28

            uint16_t REAL_WIDTH = 200;
            uint16_t ADJUSTED_WIDTH = 200;
            if (updateRegion == 3)
            {
                ADJUSTED_WIDTH += 32;
 8000ba6:	bf0c      	ite	eq
 8000ba8:	23e8      	moveq	r3, #232	; 0xe8
            uint16_t ADJUSTED_WIDTH = 200;
 8000baa:	23c8      	movne	r3, #200	; 0xc8
            }

            LTDC->AWCR = ((ADJUSTED_WIDTH + 2) << 16) | 0x1E2; //adj
 8000bac:	3302      	adds	r3, #2
 8000bae:	4927      	ldr	r1, [pc, #156]	; (8000c4c <HAL_DSI_EndOfRefreshCallback+0xd4>)
 8000bb0:	041b      	lsls	r3, r3, #16
 8000bb2:	f443 73f1 	orr.w	r3, r3, #482	; 0x1e2
 8000bb6:	610b      	str	r3, [r1, #16]
            LTDC->TWCR = ((REAL_WIDTH + 2 + 1 - 1) << 16) | 0x1E3;
 8000bb8:	4b25      	ldr	r3, [pc, #148]	; (8000c50 <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8000bba:	614b      	str	r3, [r1, #20]
            LTDC_Layer1->WHPCR = ((REAL_WIDTH + 2) << 16) | 3;
 8000bbc:	f5a3 73f0 	sub.w	r3, r3, #480	; 0x1e0
 8000bc0:	6053      	str	r3, [r2, #4]
            LTDC_Layer1->CFBLR = ((832 * 2) << 16) | ((REAL_WIDTH) * 2 + 3);
 8000bc2:	4b24      	ldr	r3, [pc, #144]	; (8000c54 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000bc4:	62d3      	str	r3, [r2, #44]	; 0x2c

            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000bc6:	2301      	movs	r3, #1
 8000bc8:	624b      	str	r3, [r1, #36]	; 0x24
            LCD_SetUpdateRegion(updateRegion);
 8000bca:	f7ff ff8d 	bl	8000ae8 <LCD_SetUpdateRegion>

            DSI->WCR |= DSI_WCR_DSIEN;
 8000bce:	4a1d      	ldr	r2, [pc, #116]	; (8000c44 <HAL_DSI_EndOfRefreshCallback+0xcc>)
 8000bd0:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 8000bd4:	f043 0308 	orr.w	r3, r3, #8
            HAL_DSI_Refresh(hdsi);
 8000bd8:	4628      	mov	r0, r5
            DSI->WCR |= DSI_WCR_DSIEN;
 8000bda:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
            {
                // Signal to the framework that display update has finished.
                HAL::getInstance()->frontPorchEntered();
            }
        }
    }
 8000bde:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            HAL_DSI_Refresh(hdsi);
 8000be2:	f00a b8ae 	b.w	800ad42 <HAL_DSI_Refresh>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000be6:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000bea:	491b      	ldr	r1, [pc, #108]	; (8000c58 <HAL_DSI_EndOfRefreshCallback+0xe0>)
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000bec:	f023 0308 	bic.w	r3, r3, #8
 8000bf0:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000bf4:	4b15      	ldr	r3, [pc, #84]	; (8000c4c <HAL_DSI_EndOfRefreshCallback+0xd4>)
            LTDC_Layer1->CFBAR = (uint32_t)currFbBase;
 8000bf6:	6296      	str	r6, [r2, #40]	; 0x28
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000bf8:	6119      	str	r1, [r3, #16]
            LTDC->TWCR = ((WIDTH + 2 + 1) << 16) | 0x1E3;
 8000bfa:	f101 1101 	add.w	r1, r1, #65537	; 0x10001
 8000bfe:	6159      	str	r1, [r3, #20]
            LTDC_Layer1->WHPCR = ((WIDTH + 2) << 16) | 3;
 8000c00:	4916      	ldr	r1, [pc, #88]	; (8000c5c <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8000c02:	6051      	str	r1, [r2, #4]
            LTDC_Layer1->CFBLR = (((832 * 2) << 16) | ((WIDTH * 2) + 3));
 8000c04:	4913      	ldr	r1, [pc, #76]	; (8000c54 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000c06:	62d1      	str	r1, [r2, #44]	; 0x2c
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000c08:	2201      	movs	r2, #1
 8000c0a:	625a      	str	r2, [r3, #36]	; 0x24
            LCD_SetUpdateRegion(0);
 8000c0c:	2000      	movs	r0, #0
 8000c0e:	f7ff ff6b 	bl	8000ae8 <LCD_SetUpdateRegion>
            DSI->WCR |= DSI_WCR_DSIEN;
 8000c12:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
 8000c16:	f043 0308 	orr.w	r3, r3, #8
 8000c1a:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000c1e:	2000      	movs	r0, #0
 8000c20:	f7ff fdc6 	bl	80007b0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            displayRefreshing = false;
 8000c24:	4b0e      	ldr	r3, [pc, #56]	; (8000c60 <HAL_DSI_EndOfRefreshCallback+0xe8>)
 8000c26:	2200      	movs	r2, #0
 8000c28:	701a      	strb	r2, [r3, #0]
        return instance;
 8000c2a:	4b0e      	ldr	r3, [pc, #56]	; (8000c64 <HAL_DSI_EndOfRefreshCallback+0xec>)
 8000c2c:	6818      	ldr	r0, [r3, #0]
            if (HAL::getInstance())
 8000c2e:	b120      	cbz	r0, 8000c3a <HAL_DSI_EndOfRefreshCallback+0xc2>
        allowDMATransfers();
 8000c30:	6803      	ldr	r3, [r0, #0]
    }
 8000c32:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000c36:	6a1b      	ldr	r3, [r3, #32]
 8000c38:	4718      	bx	r3
 8000c3a:	bd70      	pop	{r4, r5, r6, pc}
 8000c3c:	200001e0 	.word	0x200001e0
 8000c40:	40016884 	.word	0x40016884
 8000c44:	40016c00 	.word	0x40016c00
 8000c48:	200001dc 	.word	0x200001dc
 8000c4c:	40016800 	.word	0x40016800
 8000c50:	00ca01e3 	.word	0x00ca01e3
 8000c54:	06800193 	.word	0x06800193
 8000c58:	00ca01e2 	.word	0x00ca01e2
 8000c5c:	00ca0003 	.word	0x00ca0003
 8000c60:	200001f6 	.word	0x200001f6
 8000c64:	20020a90 	.word	0x20020a90

08000c68 <IdleTaskHook>:

    portBASE_TYPE IdleTaskHook(void* p)
    {
 8000c68:	b508      	push	{r3, lr}
 8000c6a:	4b04      	ldr	r3, [pc, #16]	; (8000c7c <IdleTaskHook+0x14>)
 8000c6c:	4601      	mov	r1, r0
 8000c6e:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8000c70:	b101      	cbz	r1, 8000c74 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 8000c72:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8000c74:	f010 fede 	bl	8011a34 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8000c78:	2001      	movs	r0, #1
 8000c7a:	bd08      	pop	{r3, pc}
 8000c7c:	20020a90 	.word	0x20020a90

08000c80 <_GLOBAL__sub_I_displayRefreshing>:
          cc_in(0)
 8000c80:	4b05      	ldr	r3, [pc, #20]	; (8000c98 <_GLOBAL__sub_I_displayRefreshing+0x18>)
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 8000c82:	4806      	ldr	r0, [pc, #24]	; (8000c9c <_GLOBAL__sub_I_displayRefreshing+0x1c>)
 8000c84:	2200      	movs	r2, #0
 8000c86:	605a      	str	r2, [r3, #4]
 8000c88:	609a      	str	r2, [r3, #8]
 8000c8a:	4a05      	ldr	r2, [pc, #20]	; (8000ca0 <_GLOBAL__sub_I_displayRefreshing+0x20>)
 8000c8c:	601a      	str	r2, [r3, #0]
 8000c8e:	4b05      	ldr	r3, [pc, #20]	; (8000ca4 <_GLOBAL__sub_I_displayRefreshing+0x24>)
 8000c90:	6003      	str	r3, [r0, #0]
        init();
 8000c92:	f7ff bd01 	b.w	8000698 <_ZN8touchgfx10KeySampler4initEv>
 8000c96:	bf00      	nop
 8000c98:	200001e8 	.word	0x200001e8
 8000c9c:	200001e4 	.word	0x200001e4
 8000ca0:	080267f4 	.word	0x080267f4
 8000ca4:	0802681c 	.word	0x0802681c

08000ca8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000ca8:	2101      	movs	r1, #1
{
 8000caa:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000cac:	2200      	movs	r2, #0
 8000cae:	4608      	mov	r0, r1
 8000cb0:	f00c fadf 	bl	800d272 <osSemaphoreNew>
 8000cb4:	4b0a      	ldr	r3, [pc, #40]	; (8000ce0 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000cb6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000cb8:	b928      	cbnz	r0, 8000cc6 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000cba:	4b0a      	ldr	r3, [pc, #40]	; (8000ce4 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000cbc:	4a0a      	ldr	r2, [pc, #40]	; (8000ce8 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000cbe:	2129      	movs	r1, #41	; 0x29

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000cc0:	480a      	ldr	r0, [pc, #40]	; (8000cec <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000cc2:	f023 fbb9 	bl	8024438 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000cc6:	2200      	movs	r2, #0
 8000cc8:	2104      	movs	r1, #4
 8000cca:	2001      	movs	r0, #1
 8000ccc:	f00c fb70 	bl	800d3b0 <osMessageQueueNew>
 8000cd0:	4b07      	ldr	r3, [pc, #28]	; (8000cf0 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000cd2:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000cd4:	b918      	cbnz	r0, 8000cde <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000cd6:	4b07      	ldr	r3, [pc, #28]	; (8000cf4 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000cd8:	4a03      	ldr	r2, [pc, #12]	; (8000ce8 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000cda:	212d      	movs	r1, #45	; 0x2d
 8000cdc:	e7f0      	b.n	8000cc0 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000cde:	bd08      	pop	{r3, pc}
 8000ce0:	200001fc 	.word	0x200001fc
 8000ce4:	08026b2c 	.word	0x08026b2c
 8000ce8:	08026b75 	.word	0x08026b75
 8000cec:	08026ba4 	.word	0x08026ba4
 8000cf0:	200001f8 	.word	0x200001f8
 8000cf4:	08026c04 	.word	0x08026c04

08000cf8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000cf8:	4b02      	ldr	r3, [pc, #8]	; (8000d04 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000cfa:	f04f 31ff 	mov.w	r1, #4294967295
 8000cfe:	6818      	ldr	r0, [r3, #0]
 8000d00:	f00c bb02 	b.w	800d308 <osSemaphoreAcquire>
 8000d04:	200001fc 	.word	0x200001fc

08000d08 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000d08:	4b01      	ldr	r3, [pc, #4]	; (8000d10 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000d0a:	6818      	ldr	r0, [r3, #0]
 8000d0c:	f00c bb28 	b.w	800d360 <osSemaphoreRelease>
 8000d10:	200001fc 	.word	0x200001fc

08000d14 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000d14:	4b02      	ldr	r3, [pc, #8]	; (8000d20 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000d16:	2100      	movs	r1, #0
 8000d18:	6818      	ldr	r0, [r3, #0]
 8000d1a:	f00c baf5 	b.w	800d308 <osSemaphoreAcquire>
 8000d1e:	bf00      	nop
 8000d20:	200001fc 	.word	0x200001fc

08000d24 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000d24:	f7ff bff0 	b.w	8000d08 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000d28 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000d28:	4803      	ldr	r0, [pc, #12]	; (8000d38 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000d2a:	4904      	ldr	r1, [pc, #16]	; (8000d3c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000d2c:	6800      	ldr	r0, [r0, #0]
 8000d2e:	2300      	movs	r3, #0
 8000d30:	461a      	mov	r2, r3
 8000d32:	f00c bb79 	b.w	800d428 <osMessageQueuePut>
 8000d36:	bf00      	nop
 8000d38:	200001f8 	.word	0x200001f8
 8000d3c:	20000018 	.word	0x20000018

08000d40 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000d40:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000d42:	4c08      	ldr	r4, [pc, #32]	; (8000d64 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000d44:	2300      	movs	r3, #0
 8000d46:	461a      	mov	r2, r3
 8000d48:	a901      	add	r1, sp, #4
 8000d4a:	6820      	ldr	r0, [r4, #0]
 8000d4c:	f00c fb9c 	bl	800d488 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000d50:	6820      	ldr	r0, [r4, #0]
 8000d52:	f04f 33ff 	mov.w	r3, #4294967295
 8000d56:	2200      	movs	r2, #0
 8000d58:	a901      	add	r1, sp, #4
 8000d5a:	f00c fb95 	bl	800d488 <osMessageQueueGet>
}
 8000d5e:	b002      	add	sp, #8
 8000d60:	bd10      	pop	{r4, pc}
 8000d62:	bf00      	nop
 8000d64:	200001f8 	.word	0x200001f8

08000d68 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000d68:	6803      	ldr	r3, [r0, #0]
 8000d6a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000d6c:	4718      	bx	r3

08000d6e <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000d6e:	2001      	movs	r0, #1
 8000d70:	4770      	bx	lr

08000d72 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000d72:	6803      	ldr	r3, [r0, #0]
 8000d74:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000d76:	4718      	bx	r3

08000d78 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8000d78:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000d7a:	2300      	movs	r3, #0
 8000d7c:	9301      	str	r3, [sp, #4]
 8000d7e:	4b0d      	ldr	r3, [pc, #52]	; (8000db4 <_ZN8STM32DMA10initializeEv+0x3c>)
 8000d80:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000d82:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000d86:	631a      	str	r2, [r3, #48]	; 0x30
 8000d88:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000d8a:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8000d8e:	9201      	str	r2, [sp, #4]
 8000d90:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000d92:	691a      	ldr	r2, [r3, #16]
 8000d94:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000d98:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000d9a:	691a      	ldr	r2, [r3, #16]
 8000d9c:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000da0:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000da2:	4b05      	ldr	r3, [pc, #20]	; (8000db8 <_ZN8STM32DMA10initializeEv+0x40>)
 8000da4:	4a05      	ldr	r2, [pc, #20]	; (8000dbc <_ZN8STM32DMA10initializeEv+0x44>)
 8000da6:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000da8:	4b05      	ldr	r3, [pc, #20]	; (8000dc0 <_ZN8STM32DMA10initializeEv+0x48>)
 8000daa:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000dae:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000db0:	b002      	add	sp, #8
 8000db2:	4770      	bx	lr
 8000db4:	40023800 	.word	0x40023800
 8000db8:	20020e78 	.word	0x20020e78
 8000dbc:	08000dcd 	.word	0x08000dcd
 8000dc0:	e000e100 	.word	0xe000e100

08000dc4 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000dc4:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000dc8:	4770      	bx	lr
	...

08000dcc <DMA2D_XferCpltCallback>:
        HAL::getInstance()->signalDMAInterrupt();
 8000dcc:	4b02      	ldr	r3, [pc, #8]	; (8000dd8 <DMA2D_XferCpltCallback+0xc>)
 8000dce:	681b      	ldr	r3, [r3, #0]
 8000dd0:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000dd2:	6803      	ldr	r3, [r0, #0]
 8000dd4:	695b      	ldr	r3, [r3, #20]
 8000dd6:	4718      	bx	r3
 8000dd8:	20020a90 	.word	0x20020a90

08000ddc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8000ddc:	b508      	push	{r3, lr}
 8000dde:	280b      	cmp	r0, #11
 8000de0:	d80b      	bhi.n	8000dfa <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8000de2:	e8df f000 	tbb	[pc, r0]
 8000de6:	0612      	.short	0x0612
 8000de8:	0a0a0a10 	.word	0x0a0a0a10
 8000dec:	0808080a 	.word	0x0808080a
 8000df0:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000df2:	2001      	movs	r0, #1
}
 8000df4:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000df6:	2005      	movs	r0, #5
        break;
 8000df8:	e7fc      	b.n	8000df4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8000dfa:	4b05      	ldr	r3, [pc, #20]	; (8000e10 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000dfc:	4a05      	ldr	r2, [pc, #20]	; (8000e14 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000dfe:	4806      	ldr	r0, [pc, #24]	; (8000e18 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8000e00:	2167      	movs	r1, #103	; 0x67
 8000e02:	f023 fb19 	bl	8024438 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000e06:	2000      	movs	r0, #0
 8000e08:	e7f4      	b.n	8000df4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000e0a:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000e0c:	e7f2      	b.n	8000df4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000e0e:	bf00      	nop
 8000e10:	08026c46 	.word	0x08026c46
 8000e14:	08026c61 	.word	0x08026c61
 8000e18:	08026cab 	.word	0x08026cab

08000e1c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8000e1c:	b508      	push	{r3, lr}
 8000e1e:	280a      	cmp	r0, #10
 8000e20:	d809      	bhi.n	8000e36 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8000e22:	e8df f000 	tbb	[pc, r0]
 8000e26:	0610      	.short	0x0610
 8000e28:	0808080e 	.word	0x0808080e
 8000e2c:	06060608 	.word	0x06060608
 8000e30:	06          	.byte	0x06
 8000e31:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000e32:	2001      	movs	r0, #1
}
 8000e34:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000e36:	4b05      	ldr	r3, [pc, #20]	; (8000e4c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8000e38:	4a05      	ldr	r2, [pc, #20]	; (8000e50 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000e3a:	4806      	ldr	r0, [pc, #24]	; (8000e54 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000e3c:	2188      	movs	r1, #136	; 0x88
 8000e3e:	f023 fafb 	bl	8024438 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000e42:	2000      	movs	r0, #0
 8000e44:	e7f6      	b.n	8000e34 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000e46:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000e48:	e7f4      	b.n	8000e34 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000e4a:	bf00      	nop
 8000e4c:	08026c46 	.word	0x08026c46
 8000e50:	08026d09 	.word	0x08026d09
 8000e54:	08026cab 	.word	0x08026cab

08000e58 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000e58:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e5c:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000e60:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e62:	4640      	mov	r0, r8
 8000e64:	f7ff ffba 	bl	8000ddc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e68:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e6a:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e6c:	4638      	mov	r0, r7
 8000e6e:	f7ff ffb5 	bl	8000ddc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8000e72:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e74:	4638      	mov	r0, r7
 8000e76:	f7ff ffd1 	bl	8000e1c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000e7a:	8aa1      	ldrh	r1, [r4, #20]
 8000e7c:	8b62      	ldrh	r2, [r4, #26]
 8000e7e:	4b4b      	ldr	r3, [pc, #300]	; (8000fac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000e80:	1a52      	subs	r2, r2, r1
 8000e82:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000e84:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000e86:	8b22      	ldrh	r2, [r4, #24]
 8000e88:	1a52      	subs	r2, r2, r1
 8000e8a:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000e8c:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000e8e:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000e90:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000e94:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e96:	6921      	ldr	r1, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000e98:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e9a:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000e9c:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000e9e:	f8d4 c000 	ldr.w	ip, [r4]
 8000ea2:	f894 901c 	ldrb.w	r9, [r4, #28]
 8000ea6:	f1bc 0f80 	cmp.w	ip, #128	; 0x80
 8000eaa:	ea4f 6209 	mov.w	r2, r9, lsl #24
 8000eae:	469e      	mov	lr, r3
 8000eb0:	d030      	beq.n	8000f14 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbc>
 8000eb2:	d814      	bhi.n	8000ede <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x86>
 8000eb4:	f1bc 0f20 	cmp.w	ip, #32
 8000eb8:	ea45 0002 	orr.w	r0, r5, r2
 8000ebc:	d068      	beq.n	8000f90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>
 8000ebe:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 8000ec2:	d065      	beq.n	8000f90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>
 8000ec4:	f1bc 0f04 	cmp.w	ip, #4
 8000ec8:	d020      	beq.n	8000f0c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb4>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000eca:	4b38      	ldr	r3, [pc, #224]	; (8000fac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000ecc:	432a      	orrs	r2, r5
 8000ece:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000ed2:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ed4:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000ed6:	d148      	bne.n	8000f6a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x112>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000ed8:	f240 2201 	movw	r2, #513	; 0x201
 8000edc:	e014      	b.n	8000f08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
    switch (blitOp.operation)
 8000ede:	f5bc 7f80 	cmp.w	ip, #256	; 0x100
 8000ee2:	d007      	beq.n	8000ef4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
 8000ee4:	f5bc 7f00 	cmp.w	ip, #512	; 0x200
 8000ee8:	d1ef      	bne.n	8000eca <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x72>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000eea:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000eee:	f042 0209 	orr.w	r2, r2, #9
 8000ef2:	e003      	b.n	8000efc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa4>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ef4:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000ef8:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000efc:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000efe:	68e2      	ldr	r2, [r4, #12]
 8000f00:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f02:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f04:	6159      	str	r1, [r3, #20]
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000f06:	4a2a      	ldr	r2, [pc, #168]	; (8000fb0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x158>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000f08:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000f0a:	e04c      	b.n	8000fa6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14e>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f0c:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8000f10:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f12:	e7f6      	b.n	8000f02 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xaa>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000f14:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f16:	432a      	orrs	r2, r5
 8000f18:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000f1c:	1d04      	adds	r4, r0, #4
 8000f1e:	62dc      	str	r4, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f20:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000f22:	7802      	ldrb	r2, [r0, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f24:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f26:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000f28:	b142      	cbz	r2, 8000f3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe4>
 8000f2a:	2a01      	cmp	r2, #1
 8000f2c:	d01f      	beq.n	8000f6e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x116>
                assert(0 && "Unsupported format");
 8000f2e:	4b21      	ldr	r3, [pc, #132]	; (8000fb4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15c>)
 8000f30:	4a21      	ldr	r2, [pc, #132]	; (8000fb8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x160>)
 8000f32:	4822      	ldr	r0, [pc, #136]	; (8000fbc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x164>)
 8000f34:	f44f 7189 	mov.w	r1, #274	; 0x112
 8000f38:	f023 fa7e 	bl	8024438 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f3c:	8842      	ldrh	r2, [r0, #2]
 8000f3e:	69d9      	ldr	r1, [r3, #28]
 8000f40:	1e50      	subs	r0, r2, #1
 8000f42:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000f46:	f022 0210 	bic.w	r2, r2, #16
 8000f4a:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000f4e:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000f50:	2401      	movs	r4, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000f52:	4b16      	ldr	r3, [pc, #88]	; (8000fac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 8000f54:	69da      	ldr	r2, [r3, #28]
 8000f56:	f042 0220 	orr.w	r2, r2, #32
 8000f5a:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000f5c:	69da      	ldr	r2, [r3, #28]
 8000f5e:	0692      	lsls	r2, r2, #26
 8000f60:	d4fc      	bmi.n	8000f5c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x104>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000f62:	2210      	movs	r2, #16
 8000f64:	609a      	str	r2, [r3, #8]
            if(blend)
 8000f66:	2c00      	cmp	r4, #0
 8000f68:	d1cd      	bne.n	8000f06 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xae>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000f6a:	4a15      	ldr	r2, [pc, #84]	; (8000fc0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>)
 8000f6c:	e7cc      	b.n	8000f08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f6e:	8842      	ldrh	r2, [r0, #2]
 8000f70:	69d9      	ldr	r1, [r3, #28]
 8000f72:	1e50      	subs	r0, r2, #1
 8000f74:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000f78:	f022 0210 	bic.w	r2, r2, #16
 8000f7c:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
                if(blitOp.alpha == 255)
 8000f80:	f1b9 04ff 	subs.w	r4, r9, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f84:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000f88:	bf18      	it	ne
 8000f8a:	2401      	movne	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f8c:	61da      	str	r2, [r3, #28]
                break;
 8000f8e:	e7e0      	b.n	8000f52 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000f90:	4b07      	ldr	r3, [pc, #28]	; (8000fb0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x158>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f92:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8000f96:	f8ce 001c 	str.w	r0, [lr, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f9a:	f8ce 6024 	str.w	r6, [lr, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f9e:	f8ce 1014 	str.w	r1, [lr, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000fa2:	f8ce 3000 	str.w	r3, [lr]
}
 8000fa6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000faa:	bf00      	nop
 8000fac:	4002b000 	.word	0x4002b000
 8000fb0:	00020201 	.word	0x00020201
 8000fb4:	08026d54 	.word	0x08026d54
 8000fb8:	08026d6e 	.word	0x08026d6e
 8000fbc:	08026cab 	.word	0x08026cab
 8000fc0:	00010201 	.word	0x00010201

08000fc4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000fc4:	b538      	push	{r3, r4, r5, lr}
 8000fc6:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000fc8:	7f88      	ldrb	r0, [r1, #30]
 8000fca:	f7ff ff27 	bl	8000e1c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000fce:	8aa5      	ldrh	r5, [r4, #20]
 8000fd0:	8ae1      	ldrh	r1, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000fd2:	4b16      	ldr	r3, [pc, #88]	; (800102c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fd4:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000fd6:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000fd8:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000fdc:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fde:	1b52      	subs	r2, r2, r5
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fe0:	6921      	ldr	r1, [r4, #16]
 8000fe2:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fe4:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000fe6:	6825      	ldr	r5, [r4, #0]
 8000fe8:	2d08      	cmp	r5, #8
 8000fea:	d10e      	bne.n	800100a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fec:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fee:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ff0:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, CM_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
 8000ff2:	7f20      	ldrb	r0, [r4, #28]
 8000ff4:	4a0e      	ldr	r2, [pc, #56]	; (8001030 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000ff6:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000ffa:	61da      	str	r2, [r3, #28]

        /* DMA2D FGCOLR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000ffc:	68e2      	ldr	r2, [r4, #12]
 8000ffe:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8001000:	4a0c      	ldr	r2, [pc, #48]	; (8001034 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001002:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001004:	60d9      	str	r1, [r3, #12]

        // set color
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001006:	601a      	str	r2, [r3, #0]
    }
}
 8001008:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 800100a:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800100c:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 800100e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8001010:	68e1      	ldr	r1, [r4, #12]
 8001012:	0a0a      	lsrs	r2, r1, #8
 8001014:	0948      	lsrs	r0, r1, #5
 8001016:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 800101a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 800101e:	4302      	orrs	r2, r0
 8001020:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8001024:	430a      	orrs	r2, r1
 8001026:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001028:	4a03      	ldr	r2, [pc, #12]	; (8001038 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 800102a:	e7ec      	b.n	8001006 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 800102c:	4002b000 	.word	0x4002b000
 8001030:	00010009 	.word	0x00010009
 8001034:	00020201 	.word	0x00020201
 8001038:	00030201 	.word	0x00030201

0800103c <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 800103c:	4b05      	ldr	r3, [pc, #20]	; (8001054 <_ZN8STM32DMAD1Ev+0x18>)
 800103e:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001040:	4b05      	ldr	r3, [pc, #20]	; (8001058 <_ZN8STM32DMAD1Ev+0x1c>)
 8001042:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001046:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800104a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800104e:	f3bf 8f6f 	isb	sy
}
 8001052:	4770      	bx	lr
 8001054:	08026db4 	.word	0x08026db4
 8001058:	e000e100 	.word	0xe000e100

0800105c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 800105c:	b510      	push	{r4, lr}
 800105e:	4604      	mov	r4, r0
}
 8001060:	f7ff ffec 	bl	800103c <_ZN8STM32DMAD1Ev>
 8001064:	4620      	mov	r0, r4
 8001066:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 800106a:	f023 f9b6 	bl	80243da <_ZdlPvj>
 800106e:	4620      	mov	r0, r4
 8001070:	bd10      	pop	{r4, pc}
	...

08001074 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8001074:	b570      	push	{r4, r5, r6, lr}
 8001076:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001078:	4625      	mov	r5, r4
 800107a:	4b0a      	ldr	r3, [pc, #40]	; (80010a4 <_ZN8STM32DMAC1Ev+0x30>)
 800107c:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800107e:	2600      	movs	r6, #0
 8001080:	6060      	str	r0, [r4, #4]
 8001082:	7226      	strb	r6, [r4, #8]
 8001084:	7266      	strb	r6, [r4, #9]
 8001086:	f845 3b20 	str.w	r3, [r5], #32
 800108a:	2260      	movs	r2, #96	; 0x60
 800108c:	4629      	mov	r1, r5
 800108e:	f010 fe05 	bl	8011c9c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8001092:	f504 6342 	add.w	r3, r4, #3104	; 0xc20
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8001096:	60ee      	str	r6, [r5, #12]
 8001098:	3520      	adds	r5, #32
 800109a:	42ab      	cmp	r3, r5
 800109c:	d1fb      	bne.n	8001096 <_ZN8STM32DMAC1Ev+0x22>
}
 800109e:	4620      	mov	r0, r4
 80010a0:	bd70      	pop	{r4, r5, r6, pc}
 80010a2:	bf00      	nop
 80010a4:	08026db4 	.word	0x08026db4

080010a8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80010a8:	2001      	movs	r0, #1
 80010aa:	4770      	bx	lr

080010ac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80010ac:	200c      	movs	r0, #12
 80010ae:	4770      	bx	lr

080010b0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80010b0:	230c      	movs	r3, #12
 80010b2:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010b6:	3008      	adds	r0, #8
 80010b8:	4770      	bx	lr

080010ba <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80010ba:	230c      	movs	r3, #12
 80010bc:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010c0:	3008      	adds	r0, #8
 80010c2:	4770      	bx	lr

080010c4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010c4:	2001      	movs	r0, #1
 80010c6:	4770      	bx	lr

080010c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010c8:	f64e 1024 	movw	r0, #59684	; 0xe924
 80010cc:	4770      	bx	lr

080010ce <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010ce:	f64e 1324 	movw	r3, #59684	; 0xe924
 80010d2:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010d6:	3008      	adds	r0, #8
 80010d8:	4770      	bx	lr

080010da <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010da:	f64e 1324 	movw	r3, #59684	; 0xe924
 80010de:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010e2:	3008      	adds	r0, #8
 80010e4:	4770      	bx	lr

080010e6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010e6:	2001      	movs	r0, #1
 80010e8:	4770      	bx	lr

080010ea <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010ea:	2010      	movs	r0, #16
 80010ec:	4770      	bx	lr

080010ee <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010ee:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80010f2:	3008      	adds	r0, #8
 80010f4:	4770      	bx	lr

080010f6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010f6:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80010fa:	3008      	adds	r0, #8
 80010fc:	4770      	bx	lr

080010fe <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 80010fe:	4608      	mov	r0, r1
 8001100:	f003 bd78 	b.w	8004bf4 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08001104 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001104:	b510      	push	{r4, lr}
 8001106:	4b03      	ldr	r3, [pc, #12]	; (8001114 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001108:	6003      	str	r3, [r0, #0]
 800110a:	4604      	mov	r4, r0
 800110c:	f00e fa0a 	bl	800f524 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001110:	4620      	mov	r0, r4
 8001112:	bd10      	pop	{r4, pc}
 8001114:	08026e6c 	.word	0x08026e6c

08001118 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001118:	b510      	push	{r4, lr}
 800111a:	4604      	mov	r4, r0
 800111c:	f7ff fff2 	bl	8001104 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001120:	4620      	mov	r0, r4
 8001122:	2114      	movs	r1, #20
 8001124:	f023 f959 	bl	80243da <_ZdlPvj>
 8001128:	4620      	mov	r0, r4
 800112a:	bd10      	pop	{r4, pc}

0800112c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800112c:	b510      	push	{r4, lr}
 800112e:	4b03      	ldr	r3, [pc, #12]	; (800113c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001130:	6003      	str	r3, [r0, #0]
 8001132:	4604      	mov	r4, r0
 8001134:	f00e f9f6 	bl	800f524 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001138:	4620      	mov	r0, r4
 800113a:	bd10      	pop	{r4, pc}
 800113c:	08026e38 	.word	0x08026e38

08001140 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001140:	b510      	push	{r4, lr}
 8001142:	4604      	mov	r4, r0
 8001144:	f7ff fff2 	bl	800112c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001148:	4620      	mov	r0, r4
 800114a:	f64e 112c 	movw	r1, #59692	; 0xe92c
 800114e:	f023 f944 	bl	80243da <_ZdlPvj>
 8001152:	4620      	mov	r0, r4
 8001154:	bd10      	pop	{r4, pc}
	...

08001158 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001158:	b510      	push	{r4, lr}
 800115a:	4b03      	ldr	r3, [pc, #12]	; (8001168 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800115c:	6003      	str	r3, [r0, #0]
 800115e:	4604      	mov	r4, r0
 8001160:	f00e f9e0 	bl	800f524 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001164:	4620      	mov	r0, r4
 8001166:	bd10      	pop	{r4, pc}
 8001168:	08026e04 	.word	0x08026e04

0800116c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800116c:	b510      	push	{r4, lr}
 800116e:	4604      	mov	r4, r0
 8001170:	f7ff fff2 	bl	8001158 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001174:	4620      	mov	r0, r4
 8001176:	2118      	movs	r1, #24
 8001178:	f023 f92f 	bl	80243da <_ZdlPvj>
 800117c:	4620      	mov	r0, r4
 800117e:	bd10      	pop	{r4, pc}

08001180 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001180:	b510      	push	{r4, lr}
 8001182:	4b09      	ldr	r3, [pc, #36]	; (80011a8 <_ZN12FrontendHeapD1Ev+0x28>)
 8001184:	6003      	str	r3, [r0, #0]
 8001186:	4604      	mov	r4, r0
 8001188:	f500 4069 	add.w	r0, r0, #59648	; 0xe900
 800118c:	3058      	adds	r0, #88	; 0x58
 800118e:	f7ff ffb9 	bl	8001104 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001192:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8001196:	f7ff ffc9 	bl	800112c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800119a:	f104 0014 	add.w	r0, r4, #20
 800119e:	f7ff ffdb 	bl	8001158 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen2PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80011a2:	4620      	mov	r0, r4
 80011a4:	bd10      	pop	{r4, pc}
 80011a6:	bf00      	nop
 80011a8:	08026ea0 	.word	0x08026ea0

080011ac <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80011ac:	b508      	push	{r3, lr}
 80011ae:	4802      	ldr	r0, [pc, #8]	; (80011b8 <__tcf_0+0xc>)
 80011b0:	f7ff ffe6 	bl	8001180 <_ZN12FrontendHeapD1Ev>
 80011b4:	bd08      	pop	{r3, pc}
 80011b6:	bf00      	nop
 80011b8:	20000204 	.word	0x20000204

080011bc <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80011bc:	b510      	push	{r4, lr}
 80011be:	4604      	mov	r4, r0
 80011c0:	f7ff ffde 	bl	8001180 <_ZN12FrontendHeapD1Ev>
 80011c4:	4620      	mov	r0, r4
 80011c6:	f64e 21c8 	movw	r1, #60104	; 0xeac8
 80011ca:	f023 f906 	bl	80243da <_ZdlPvj>
 80011ce:	4620      	mov	r0, r4
 80011d0:	bd10      	pop	{r4, pc}
	...

080011d4 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 80011d4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80011d8:	f000 ff0a 	bl	8001ff0 <_ZN14BitmapDatabase11getInstanceEv>
 80011dc:	4605      	mov	r5, r0
 80011de:	f000 ff0b 	bl	8001ff8 <_ZN14BitmapDatabase15getInstanceSizeEv>
 80011e2:	2400      	movs	r4, #0
 80011e4:	4601      	mov	r1, r0
 80011e6:	4623      	mov	r3, r4
 80011e8:	4628      	mov	r0, r5
 80011ea:	4622      	mov	r2, r4
 80011ec:	9400      	str	r4, [sp, #0]
 80011ee:	f017 f8a3 	bl	8018338 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80011f2:	4b24      	ldr	r3, [pc, #144]	; (8001284 <touchgfx_init+0xb0>)
 80011f4:	4a24      	ldr	r2, [pc, #144]	; (8001288 <touchgfx_init+0xb4>)
        static FrontendHeap instance;
 80011f6:	4d25      	ldr	r5, [pc, #148]	; (800128c <touchgfx_init+0xb8>)
 80011f8:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 80011fa:	4620      	mov	r0, r4
 80011fc:	f005 fe28 	bl	8006e50 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8001200:	4823      	ldr	r0, [pc, #140]	; (8001290 <touchgfx_init+0xbc>)
 8001202:	f016 ffdb 	bl	80181bc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001206:	782b      	ldrb	r3, [r5, #0]
 8001208:	f3bf 8f5b 	dmb	ish
 800120c:	07db      	lsls	r3, r3, #31
 800120e:	d433      	bmi.n	8001278 <touchgfx_init+0xa4>
 8001210:	4628      	mov	r0, r5
 8001212:	f023 f8e4 	bl	80243de <__cxa_guard_acquire>
 8001216:	b378      	cbz	r0, 8001278 <touchgfx_init+0xa4>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001218:	4c1e      	ldr	r4, [pc, #120]	; (8001294 <touchgfx_init+0xc0>)
 800121a:	4f1f      	ldr	r7, [pc, #124]	; (8001298 <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 800121c:	4b1f      	ldr	r3, [pc, #124]	; (800129c <touchgfx_init+0xc8>)
 800121e:	6023      	str	r3, [r4, #0]
 8001220:	f107 0618 	add.w	r6, r7, #24
 8001224:	f104 0014 	add.w	r0, r4, #20
 8001228:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 800122c:	6060      	str	r0, [r4, #4]
 800122e:	f8c4 8008 	str.w	r8, [r4, #8]
 8001232:	60e7      	str	r7, [r4, #12]
 8001234:	6126      	str	r6, [r4, #16]
 8001236:	f00e f977 	bl	800f528 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800123a:	4b19      	ldr	r3, [pc, #100]	; (80012a0 <touchgfx_init+0xcc>)
 800123c:	6163      	str	r3, [r4, #20]
 800123e:	4640      	mov	r0, r8
 8001240:	f00e f972 	bl	800f528 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001244:	4b17      	ldr	r3, [pc, #92]	; (80012a4 <touchgfx_init+0xd0>)
 8001246:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001248:	4638      	mov	r0, r7
 800124a:	f00e f96d 	bl	800f528 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800124e:	4b16      	ldr	r3, [pc, #88]	; (80012a8 <touchgfx_init+0xd4>)
 8001250:	603b      	str	r3, [r7, #0]
 8001252:	f107 0014 	add.w	r0, r7, #20
 8001256:	f006 fc69 	bl	8007b2c <_ZN5ModelC1Ev>
 800125a:	4622      	mov	r2, r4
 800125c:	f107 0114 	add.w	r1, r7, #20
 8001260:	4630      	mov	r0, r6
 8001262:	f006 fc59 	bl	8007b18 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001266:	4630      	mov	r0, r6
 8001268:	f003 fcc4 	bl	8004bf4 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 800126c:	4628      	mov	r0, r5
 800126e:	f023 f8c2 	bl	80243f6 <__cxa_guard_release>
 8001272:	480e      	ldr	r0, [pc, #56]	; (80012ac <touchgfx_init+0xd8>)
 8001274:	f023 f8fe 	bl	8024474 <atexit>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001278:	480d      	ldr	r0, [pc, #52]	; (80012b0 <touchgfx_init+0xdc>)
}
 800127a:	b002      	add	sp, #8
 800127c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001280:	f7ff bb0c 	b.w	800089c <_ZN11TouchGFXHAL10initializeEv>
 8001284:	20020aec 	.word	0x20020aec
 8001288:	2000f96c 	.word	0x2000f96c
 800128c:	20000200 	.word	0x20000200
 8001290:	2000001c 	.word	0x2000001c
 8001294:	20000204 	.word	0x20000204
 8001298:	2000eb5c 	.word	0x2000eb5c
 800129c:	08026ea0 	.word	0x08026ea0
 80012a0:	08026e04 	.word	0x08026e04
 80012a4:	08026e38 	.word	0x08026e38
 80012a8:	08026e6c 	.word	0x08026e6c
 80012ac:	080011ad 	.word	0x080011ad
 80012b0:	2000f8f0 	.word	0x2000f8f0

080012b4 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80012b4:	4801      	ldr	r0, [pc, #4]	; (80012bc <touchgfx_taskEntry+0x8>)
 80012b6:	f7ff bb0b 	b.w	80008d0 <_ZN11TouchGFXHAL9taskEntryEv>
 80012ba:	bf00      	nop
 80012bc:	2000f8f0 	.word	0x2000f8f0

080012c0 <_GLOBAL__sub_I_touchgfx_init>:
}
 80012c0:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 80012c2:	4e24      	ldr	r6, [pc, #144]	; (8001354 <_GLOBAL__sub_I_touchgfx_init+0x94>)
{
public:

    STM32TouchController() {}
 80012c4:	4c24      	ldr	r4, [pc, #144]	; (8001358 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 80012c6:	4d25      	ldr	r5, [pc, #148]	; (800135c <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 80012c8:	4b25      	ldr	r3, [pc, #148]	; (8001360 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
 80012ca:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 80012cc:	4630      	mov	r0, r6
 80012ce:	f7ff fed1 	bl	8001074 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 80012d2:	4628      	mov	r0, r5
 80012d4:	f01a f900 	bl	801b4d8 <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 80012d8:	4b22      	ldr	r3, [pc, #136]	; (8001364 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80012da:	4823      	ldr	r0, [pc, #140]	; (8001368 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
          lastRenderMethod(HARDWARE)
 80012dc:	60dc      	str	r4, [r3, #12]
 80012de:	2200      	movs	r2, #0
 80012e0:	f44f 7180 	mov.w	r1, #256	; 0x100
 80012e4:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
 80012e8:	4920      	ldr	r1, [pc, #128]	; (800136c <_GLOBAL__sub_I_touchgfx_init+0xac>)
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
 80012ea:	851a      	strh	r2, [r3, #40]	; 0x28
 80012ec:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
 80012f0:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 80012f4:	6759      	str	r1, [r3, #116]	; 0x74
 80012f6:	2101      	movs	r1, #1
 80012f8:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        instance = this;
 80012fc:	491c      	ldr	r1, [pc, #112]	; (8001370 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
 80012fe:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 8001302:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001304:	f44f 7150 	mov.w	r1, #832	; 0x340
 8001308:	8001      	strh	r1, [r0, #0]
 800130a:	481a      	ldr	r0, [pc, #104]	; (8001374 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 800130c:	62da      	str	r2, [r3, #44]	; 0x2c
          lastRenderMethod(HARDWARE)
 800130e:	e9c3 2204 	strd	r2, r2, [r3, #16]
              inProgress(false)
 8001312:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001316:	e9c3 2208 	strd	r2, r2, [r3, #32]
 800131a:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 800131e:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001322:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8001326:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
        : drag(), listener(0), dragThresholdValue(0)
 800132a:	861a      	strh	r2, [r3, #48]	; 0x30
 800132c:	661a      	str	r2, [r3, #96]	; 0x60
 800132e:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8001332:	671a      	str	r2, [r3, #112]	; 0x70
 8001334:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001338:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800133a:	480f      	ldr	r0, [pc, #60]	; (8001378 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800133c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001340:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8001344:	8001      	strh	r1, [r0, #0]
 8001346:	480d      	ldr	r0, [pc, #52]	; (800137c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001348:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 800134a:	490d      	ldr	r1, [pc, #52]	; (8001380 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 800134c:	700a      	strb	r2, [r1, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width + 32, height) /* Align to match 832 pixel for optimal DSI transfer */
 800134e:	4a0d      	ldr	r2, [pc, #52]	; (8001384 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
 8001350:	601a      	str	r2, [r3, #0]
}
 8001352:	bd70      	pop	{r4, r5, r6, pc}
 8001354:	2000ecd0 	.word	0x2000ecd0
 8001358:	2000eccc 	.word	0x2000eccc
 800135c:	2000f970 	.word	0x2000f970
 8001360:	080268d8 	.word	0x080268d8
 8001364:	2000f8f0 	.word	0x2000f8f0
 8001368:	20020a84 	.word	0x20020a84
 800136c:	01000001 	.word	0x01000001
 8001370:	20020a90 	.word	0x20020a90
 8001374:	20020a8a 	.word	0x20020a8a
 8001378:	20020a86 	.word	0x20020a86
 800137c:	20020a8c 	.word	0x20020a8c
 8001380:	20020a88 	.word	0x20020a88
 8001384:	08026a64 	.word	0x08026a64

08001388 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001388:	4801      	ldr	r0, [pc, #4]	; (8001390 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800138a:	f7ff be57 	b.w	800103c <_ZN8STM32DMAD1Ev>
 800138e:	bf00      	nop
 8001390:	2000ecd0 	.word	0x2000ecd0

08001394 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001394:	4b02      	ldr	r3, [pc, #8]	; (80013a0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8001396:	2290      	movs	r2, #144	; 0x90
 8001398:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
}
 800139c:	4770      	bx	lr
 800139e:	bf00      	nop
 80013a0:	e000e100 	.word	0xe000e100

080013a4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013a4:	4b02      	ldr	r3, [pc, #8]	; (80013b0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 80013a6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80013aa:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80013ac:	4770      	bx	lr
 80013ae:	bf00      	nop
 80013b0:	e000e100 	.word	0xe000e100

080013b4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
}
 80013b4:	4770      	bx	lr

080013b6 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
}

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 80013b6:	4770      	bx	lr

080013b8 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80013b8:	b538      	push	{r3, r4, r5, lr}
 80013ba:	4604      	mov	r4, r0
    HAL::initialize();
 80013bc:	f00f fd13 	bl	8010de6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80013c0:	6823      	ldr	r3, [r4, #0]
 80013c2:	6e1d      	ldr	r5, [r3, #96]	; 0x60
 80013c4:	f013 fa44 	bl	8014850 <_ZN8touchgfx11Application11getInstanceEv>
 80013c8:	4601      	mov	r1, r0
 80013ca:	4620      	mov	r0, r4
 80013cc:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 80013ce:	6823      	ldr	r3, [r4, #0]
 80013d0:	f8d3 5084 	ldr.w	r5, [r3, #132]	; 0x84
 80013d4:	2300      	movs	r3, #0
 80013d6:	461a      	mov	r2, r3
 80013d8:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 80013dc:	4620      	mov	r0, r4
 80013de:	47a8      	blx	r5
        lockDMAToPorch = enableLock;
 80013e0:	2301      	movs	r3, #1
 80013e2:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
}
 80013e6:	bd38      	pop	{r3, r4, r5, pc}

080013e8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80013e8:	f00f bcad 	b.w	8010d46 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080013ec <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80013ec:	f00f be09 	b.w	8011002 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080013f0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013f0:	4b04      	ldr	r3, [pc, #16]	; (8001404 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 80013f2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80013f6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80013fa:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80013fe:	f3bf 8f6f 	isb	sy
}
 8001402:	4770      	bx	lr
 8001404:	e000e100 	.word	0xe000e100

08001408 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 8001408:	4901      	ldr	r1, [pc, #4]	; (8001410 <vApplicationIdleHook+0x8>)
 800140a:	2000      	movs	r0, #0
 800140c:	f00d bb92 	b.w	800eb34 <vTaskSetApplicationTaskTag>
 8001410:	08000c69 	.word	0x08000c69

08001414 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001414:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8001416:	2064      	movs	r0, #100	; 0x64
 8001418:	f00b ff1f 	bl	800d25a <osDelay>
  for(;;)
 800141c:	e7fb      	b.n	8001416 <StartDefaultTask+0x2>
	...

08001420 <SystemClock_Config>:
{
 8001420:	b530      	push	{r4, r5, lr}
 8001422:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001424:	2210      	movs	r2, #16
 8001426:	2100      	movs	r1, #0
 8001428:	a809      	add	r0, sp, #36	; 0x24
 800142a:	f023 faab 	bl	8024984 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800142e:	2214      	movs	r2, #20
 8001430:	2100      	movs	r1, #0
 8001432:	a802      	add	r0, sp, #8
 8001434:	f023 faa6 	bl	8024984 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001438:	2400      	movs	r4, #0
 800143a:	4b1f      	ldr	r3, [pc, #124]	; (80014b8 <SystemClock_Config+0x98>)
 800143c:	9400      	str	r4, [sp, #0]
 800143e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001440:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001444:	641a      	str	r2, [r3, #64]	; 0x40
 8001446:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001448:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800144c:	9300      	str	r3, [sp, #0]
 800144e:	9b00      	ldr	r3, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001450:	4b1a      	ldr	r3, [pc, #104]	; (80014bc <SystemClock_Config+0x9c>)
 8001452:	9401      	str	r4, [sp, #4]
 8001454:	681a      	ldr	r2, [r3, #0]
 8001456:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800145a:	601a      	str	r2, [r3, #0]
 800145c:	681b      	ldr	r3, [r3, #0]
 800145e:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001462:	9301      	str	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001464:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001466:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001468:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800146c:	e9cd 2307 	strd	r2, r3, [sp, #28]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001470:	2502      	movs	r5, #2
 8001472:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001476:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001478:	e9cd 530d 	strd	r5, r3, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLN = 360;
 800147c:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001480:	e9cd 130f 	strd	r1, r3, [sp, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLR = 6;
 8001484:	2004      	movs	r0, #4
 8001486:	2306      	movs	r3, #6
 8001488:	e9cd 0312 	strd	r0, r3, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800148c:	a807      	add	r0, sp, #28
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800148e:	9511      	str	r5, [sp, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001490:	f00b fa30 	bl	800c8f4 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8001494:	f00a fc80 	bl	800bd98 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001498:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800149a:	e9cd 3502 	strd	r3, r5, [sp, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800149e:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80014a0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80014a4:	f44f 54a0 	mov.w	r4, #5120	; 0x1400
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014a8:	2105      	movs	r1, #5
 80014aa:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80014ac:	e9cd 4305 	strd	r4, r3, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014b0:	f00a fff4 	bl	800c49c <HAL_RCC_ClockConfig>
}
 80014b4:	b015      	add	sp, #84	; 0x54
 80014b6:	bd30      	pop	{r4, r5, pc}
 80014b8:	40023800 	.word	0x40023800
 80014bc:	40007000 	.word	0x40007000

080014c0 <main>:
{
 80014c0:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80014c4:	b0b9      	sub	sp, #228	; 0xe4
  HAL_Init();
 80014c6:	f008 fe4f 	bl	800a168 <HAL_Init>
  SystemClock_Config();
 80014ca:	f7ff ffa9 	bl	8001420 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014ce:	2214      	movs	r2, #20
 80014d0:	2100      	movs	r1, #0
 80014d2:	a82b      	add	r0, sp, #172	; 0xac
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014d4:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014d6:	f023 fa55 	bl	8024984 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014da:	4bc9      	ldr	r3, [pc, #804]	; (8001800 <main+0x340>)
 80014dc:	9402      	str	r4, [sp, #8]
 80014de:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80014e0:	48c8      	ldr	r0, [pc, #800]	; (8001804 <main+0x344>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014e2:	f042 0210 	orr.w	r2, r2, #16
 80014e6:	631a      	str	r2, [r3, #48]	; 0x30
 80014e8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014ea:	f002 0210 	and.w	r2, r2, #16
 80014ee:	9202      	str	r2, [sp, #8]
 80014f0:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80014f2:	9403      	str	r4, [sp, #12]
 80014f4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014f6:	f042 0202 	orr.w	r2, r2, #2
 80014fa:	631a      	str	r2, [r3, #48]	; 0x30
 80014fc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014fe:	f002 0202 	and.w	r2, r2, #2
 8001502:	9203      	str	r2, [sp, #12]
 8001504:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001506:	9404      	str	r4, [sp, #16]
 8001508:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800150a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800150e:	631a      	str	r2, [r3, #48]	; 0x30
 8001510:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001512:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001516:	9204      	str	r2, [sp, #16]
 8001518:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800151a:	9405      	str	r4, [sp, #20]
 800151c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800151e:	f042 0208 	orr.w	r2, r2, #8
 8001522:	631a      	str	r2, [r3, #48]	; 0x30
 8001524:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001526:	f002 0208 	and.w	r2, r2, #8
 800152a:	9205      	str	r2, [sp, #20]
 800152c:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 800152e:	9406      	str	r4, [sp, #24]
 8001530:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001532:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001536:	631a      	str	r2, [r3, #48]	; 0x30
 8001538:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800153a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800153e:	9206      	str	r2, [sp, #24]
 8001540:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001542:	9407      	str	r4, [sp, #28]
 8001544:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001546:	f042 0220 	orr.w	r2, r2, #32
 800154a:	631a      	str	r2, [r3, #48]	; 0x30
 800154c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800154e:	f002 0220 	and.w	r2, r2, #32
 8001552:	9207      	str	r2, [sp, #28]
 8001554:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8001556:	9408      	str	r4, [sp, #32]
 8001558:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800155a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800155e:	631a      	str	r2, [r3, #48]	; 0x30
 8001560:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001562:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8001566:	9208      	str	r2, [sp, #32]
 8001568:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800156a:	9409      	str	r4, [sp, #36]	; 0x24
 800156c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800156e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001572:	631a      	str	r2, [r3, #48]	; 0x30
 8001574:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001576:	f002 0280 	and.w	r2, r2, #128	; 0x80
 800157a:	9209      	str	r2, [sp, #36]	; 0x24
 800157c:	9a09      	ldr	r2, [sp, #36]	; 0x24
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800157e:	940a      	str	r4, [sp, #40]	; 0x28
 8001580:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001582:	f042 0204 	orr.w	r2, r2, #4
 8001586:	631a      	str	r2, [r3, #48]	; 0x30
 8001588:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800158a:	f002 0204 	and.w	r2, r2, #4
 800158e:	920a      	str	r2, [sp, #40]	; 0x28
 8001590:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001592:	940b      	str	r4, [sp, #44]	; 0x2c
 8001594:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001596:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800159a:	631a      	str	r2, [r3, #48]	; 0x30
 800159c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800159e:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80015a2:	930b      	str	r3, [sp, #44]	; 0x2c
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80015a4:	2201      	movs	r2, #1
 80015a6:	2108      	movs	r1, #8
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80015a8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80015aa:	f009 fdf1 	bl	800b190 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_RESET);
 80015ae:	4896      	ldr	r0, [pc, #600]	; (8001808 <main+0x348>)
 80015b0:	4622      	mov	r2, r4
 80015b2:	2110      	movs	r1, #16
 80015b4:	f009 fdec 	bl	800b190 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 80015b8:	4894      	ldr	r0, [pc, #592]	; (800180c <main+0x34c>)
 80015ba:	4622      	mov	r2, r4
 80015bc:	2140      	movs	r1, #64	; 0x40
 80015be:	f009 fde7 	bl	800b190 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 80015c2:	4622      	mov	r2, r4
 80015c4:	4892      	ldr	r0, [pc, #584]	; (8001810 <main+0x350>)
 80015c6:	2180      	movs	r1, #128	; 0x80
 80015c8:	f009 fde2 	bl	800b190 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015cc:	2611      	movs	r6, #17
 80015ce:	2308      	movs	r3, #8
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 80015d0:	488c      	ldr	r0, [pc, #560]	; (8001804 <main+0x344>)
 80015d2:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015d4:	2701      	movs	r7, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015d6:	f04f 0802 	mov.w	r8, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015da:	e9cd 362b 	strd	r3, r6, [sp, #172]	; 0xac
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015de:	f04f 0b10 	mov.w	fp, #16
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015e2:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 80015e6:	f009 fc45 	bl	800ae74 <HAL_GPIO_Init>
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 80015ea:	4887      	ldr	r0, [pc, #540]	; (8001808 <main+0x348>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015ec:	942d      	str	r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 80015ee:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015f0:	e9cd b72b 	strd	fp, r7, [sp, #172]	; 0xac
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015f4:	f8cd 80b8 	str.w	r8, [sp, #184]	; 0xb8
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 80015f8:	f009 fc3c 	bl	800ae74 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
 80015fc:	2340      	movs	r3, #64	; 0x40
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 80015fe:	4883      	ldr	r0, [pc, #524]	; (800180c <main+0x34c>)
 8001600:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001602:	2580      	movs	r5, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001604:	e9cd 372b 	strd	r3, r7, [sp, #172]	; 0xac
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001608:	e9cd 482d 	strd	r4, r8, [sp, #180]	; 0xb4
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 800160c:	f009 fc32 	bl	800ae74 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001610:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001612:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001614:	487e      	ldr	r0, [pc, #504]	; (8001810 <main+0x350>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001616:	932e      	str	r3, [sp, #184]	; 0xb8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001618:	e9cd 562b 	strd	r5, r6, [sp, #172]	; 0xac
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800161c:	942d      	str	r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800161e:	f009 fc29 	bl	800ae74 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001622:	487c      	ldr	r0, [pc, #496]	; (8001814 <main+0x354>)
  hdma2d.Instance = DMA2D;
 8001624:	4e7c      	ldr	r6, [pc, #496]	; (8001818 <main+0x358>)
  hcrc.Instance = CRC;
 8001626:	4b7d      	ldr	r3, [pc, #500]	; (800181c <main+0x35c>)
 8001628:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800162a:	f008 fe43 	bl	800a2b4 <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 800162e:	4b7c      	ldr	r3, [pc, #496]	; (8001820 <main+0x360>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8001630:	e9c6 440a 	strd	r4, r4, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001634:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001638:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 800163a:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 800163e:	e9c6 4402 	strd	r4, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001642:	f008 ff4b 	bl	800a4dc <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001646:	4639      	mov	r1, r7
 8001648:	4630      	mov	r0, r6
 800164a:	f008 ffff 	bl	800a64c <HAL_DMA2D_ConfigLayer>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 800164e:	4629      	mov	r1, r5
 8001650:	4622      	mov	r2, r4
 8001652:	486f      	ldr	r0, [pc, #444]	; (8001810 <main+0x350>)
  hdsi.Instance = DSI;
 8001654:	4e73      	ldr	r6, [pc, #460]	; (8001824 <main+0x364>)
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001656:	f009 fd9b 	bl	800b190 <HAL_GPIO_WritePin>
  HAL_Delay(20); /* wait 20 ms */
 800165a:	2014      	movs	r0, #20
 800165c:	f008 fdb0 	bl	800a1c0 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_SET);
 8001660:	4629      	mov	r1, r5
 8001662:	463a      	mov	r2, r7
 8001664:	486a      	ldr	r0, [pc, #424]	; (8001810 <main+0x350>)
 8001666:	f009 fd93 	bl	800b190 <HAL_GPIO_WritePin>
  HAL_Delay(10);
 800166a:	200a      	movs	r0, #10
 800166c:	f008 fda8 	bl	800a1c0 <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 8001670:	2224      	movs	r2, #36	; 0x24
 8001672:	4621      	mov	r1, r4
 8001674:	a815      	add	r0, sp, #84	; 0x54
 8001676:	f023 f985 	bl	8024984 <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 800167a:	2218      	movs	r2, #24
 800167c:	4621      	mov	r1, r4
 800167e:	a80f      	add	r0, sp, #60	; 0x3c
 8001680:	f023 f980 	bl	8024984 <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 8001684:	2234      	movs	r2, #52	; 0x34
 8001686:	4621      	mov	r1, r4
 8001688:	a82b      	add	r0, sp, #172	; 0xac
 800168a:	f023 f97b 	bl	8024984 <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 800168e:	222c      	movs	r2, #44	; 0x2c
 8001690:	4621      	mov	r1, r4
 8001692:	a81e      	add	r0, sp, #120	; 0x78
 8001694:	f023 f976 	bl	8024984 <memset>
  hdsi.Instance = DSI;
 8001698:	4b63      	ldr	r3, [pc, #396]	; (8001828 <main+0x368>)
  PLLInit.PLLODF = DSI_PLL_OUT_DIV1;
 800169a:	940e      	str	r4, [sp, #56]	; 0x38
  hdsi.Init.TXEscapeCkdiv = 4;
 800169c:	2504      	movs	r5, #4
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 800169e:	e9c6 3400 	strd	r3, r4, [r6]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80016a2:	a90c      	add	r1, sp, #48	; 0x30
  PLLInit.PLLNDIV = 125;
 80016a4:	237d      	movs	r3, #125	; 0x7d
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80016a6:	4630      	mov	r0, r6
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 80016a8:	e9c6 5702 	strd	r5, r7, [r6, #8]
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 80016ac:	e9cd 380c 	strd	r3, r8, [sp, #48]	; 0x30
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80016b0:	f009 f894 	bl	800a7dc <HAL_DSI_Init>
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80016b4:	a915      	add	r1, sp, #84	; 0x54
 80016b6:	4630      	mov	r0, r6
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 80016b8:	e9cd 7415 	strd	r7, r4, [sp, #84]	; 0x54
  HostTimeouts.HighSpeedReadTimeout = 0;
 80016bc:	e9cd 4417 	strd	r4, r4, [sp, #92]	; 0x5c
  HostTimeouts.HighSpeedWriteTimeout = 0;
 80016c0:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  HostTimeouts.LowPowerWriteTimeout = 0;
 80016c4:	e9cd 441b 	strd	r4, r4, [sp, #108]	; 0x6c
  HostTimeouts.BTATimeout = 0;
 80016c8:	941d      	str	r4, [sp, #116]	; 0x74
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80016ca:	f009 fab1 	bl	800ac30 <HAL_DSI_ConfigHostTimeouts>
  PhyTimings.ClockLaneLP2HSTime = 33;
 80016ce:	221c      	movs	r2, #28
 80016d0:	2321      	movs	r3, #33	; 0x21
 80016d2:	e9cd 230f 	strd	r2, r3, [sp, #60]	; 0x3c
  PhyTimings.DataLaneLP2HSTime = 25;
 80016d6:	210f      	movs	r1, #15
 80016d8:	2319      	movs	r3, #25
 80016da:	e9cd 1311 	strd	r1, r3, [sp, #68]	; 0x44
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 80016de:	4630      	mov	r0, r6
 80016e0:	a90f      	add	r1, sp, #60	; 0x3c
  PhyTimings.StopWaitTime = 0;
 80016e2:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 80016e6:	f009 fa66 	bl	800abb6 <HAL_DSI_ConfigPhyTimer>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 80016ea:	4629      	mov	r1, r5
 80016ec:	4630      	mov	r0, r6
 80016ee:	f009 fa51 	bl	800ab94 <HAL_DSI_ConfigFlowControl>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 80016f2:	f242 7110 	movw	r1, #10000	; 0x2710
 80016f6:	4630      	mov	r0, r6
 80016f8:	f009 fba5 	bl	800ae46 <HAL_DSI_SetLowPowerRXFilter>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 80016fc:	4621      	mov	r1, r4
 80016fe:	4630      	mov	r0, r6
 8001700:	f009 f809 	bl	800a716 <HAL_DSI_ConfigErrorMonitor>
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 8001704:	f44f 7080 	mov.w	r0, #256	; 0x100
 8001708:	f44f 7300 	mov.w	r3, #512	; 0x200
 800170c:	e9cd 032b 	strd	r0, r3, [sp, #172]	; 0xac
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8001710:	f44f 6a80 	mov.w	sl, #1024	; 0x400
 8001714:	f44f 6300 	mov.w	r3, #2048	; 0x800
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8001718:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 800171c:	e9cd a32d 	strd	sl, r3, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8001720:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001724:	e9cd 232f 	strd	r2, r3, [sp, #188]	; 0xbc
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8001728:	f44f 4980 	mov.w	r9, #16384	; 0x4000
 800172c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001730:	f44f 3c00 	mov.w	ip, #131072	; 0x20000
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8001734:	e9cd 9331 	strd	r9, r3, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001738:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 800173c:	e9cd c333 	strd	ip, r3, [sp, #204]	; 0xcc
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8001740:	f44f 2e00 	mov.w	lr, #524288	; 0x80000
 8001744:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001748:	a92b      	add	r1, sp, #172	; 0xac
 800174a:	4630      	mov	r0, r6
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 800174c:	e9cd e335 	strd	lr, r3, [sp, #212]	; 0xd4
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 8001750:	f8cd 80dc 	str.w	r8, [sp, #220]	; 0xdc
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001754:	f009 f9ea 	bl	800ab2c <HAL_DSI_ConfigCommand>
  CmdCfg.CommandSize = 200;
 8001758:	23c8      	movs	r3, #200	; 0xc8
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 800175a:	a91e      	add	r1, sp, #120	; 0x78
 800175c:	4630      	mov	r0, r6
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 800175e:	e9cd 3b20 	strd	r3, fp, [sp, #128]	; 0x80
  CmdCfg.HSPolarity = DSI_HSYNC_ACTIVE_LOW;
 8001762:	e9cd 4522 	strd	r4, r5, [sp, #136]	; 0x88
  CmdCfg.ColorCoding = DSI_RGB565;
 8001766:	e9cd 441e 	strd	r4, r4, [sp, #120]	; 0x78
  CmdCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 800176a:	e9cd 8424 	strd	r8, r4, [sp, #144]	; 0x90
  CmdCfg.AutomaticRefresh = DSI_AR_DISABLE;
 800176e:	e9cd 4426 	strd	r4, r4, [sp, #152]	; 0x98
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 8001772:	9728      	str	r7, [sp, #160]	; 0xa0
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8001774:	f009 f968 	bl	800aa48 <HAL_DSI_ConfigAdaptedCommandMode>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 8001778:	4621      	mov	r1, r4
 800177a:	4630      	mov	r0, r6
 800177c:	f009 f953 	bl	800aa26 <HAL_DSI_SetGenericVCID>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001780:	482a      	ldr	r0, [pc, #168]	; (800182c <main+0x36c>)
 8001782:	492b      	ldr	r1, [pc, #172]	; (8001830 <main+0x370>)
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 8001784:	6204      	str	r4, [r0, #32]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 8001786:	e9c0 1400 	strd	r1, r4, [r0]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800178a:	2340      	movs	r3, #64	; 0x40
 800178c:	2120      	movs	r1, #32
 800178e:	e9c0 1304 	strd	r1, r3, [r0, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001792:	f44f 71c0 	mov.w	r1, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001796:	e9c0 1406 	strd	r1, r4, [r0, #24]
  SdramTiming.ExitSelfRefreshDelay = 7;
 800179a:	2107      	movs	r1, #7
  SdramTiming.WriteRecoveryTime = 3;
 800179c:	2303      	movs	r3, #3
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 800179e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  SdramTiming.SelfRefreshTime = 4;
 80017a2:	e9cd 152c 	strd	r1, r5, [sp, #176]	; 0xb0
  SdramTiming.RowCycleDelay = 7;
 80017a6:	912e      	str	r1, [sp, #184]	; 0xb8
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017a8:	a92b      	add	r1, sp, #172	; 0xac
  SdramTiming.RPDelay = 2;
 80017aa:	e9cd 382f 	strd	r3, r8, [sp, #188]	; 0xbc
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 80017ae:	e9c0 2909 	strd	r2, r9, [r0, #36]	; 0x24
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80017b2:	e9c0 4502 	strd	r4, r5, [r0, #8]
  SdramTiming.LoadToActiveDelay = 2;
 80017b6:	f8cd 80ac 	str.w	r8, [sp, #172]	; 0xac
  SdramTiming.RCDDelay = 2;
 80017ba:	f8cd 80c4 	str.w	r8, [sp, #196]	; 0xc4
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017be:	f00b fa4f 	bl	800cc60 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit();
 80017c2:	f008 fbf9 	bl	8009fb8 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init() != SDRAM_OK)
 80017c6:	f008 fba9 	bl	8009f1c <BSP_SDRAM_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80017ca:	2234      	movs	r2, #52	; 0x34
 80017cc:	4621      	mov	r1, r4
 80017ce:	a81e      	add	r0, sp, #120	; 0x78
  hltdc.Instance = LTDC;
 80017d0:	4d18      	ldr	r5, [pc, #96]	; (8001834 <main+0x374>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80017d2:	f023 f8d7 	bl	8024984 <memset>
  hltdc.Instance = LTDC;
 80017d6:	4a18      	ldr	r2, [pc, #96]	; (8001838 <main+0x378>)
  hltdc.Init.Backcolor.Blue = 0;
 80017d8:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80017da:	e9c5 2400 	strd	r2, r4, [r5]
  hltdc.Init.AccumulatedActiveH = 482;
 80017de:	23ca      	movs	r3, #202	; 0xca
 80017e0:	f44f 72f1 	mov.w	r2, #482	; 0x1e2
 80017e4:	e9c5 3209 	strd	r3, r2, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 483;
 80017e8:	21cb      	movs	r1, #203	; 0xcb
 80017ea:	f240 12e3 	movw	r2, #483	; 0x1e3
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80017ee:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 483;
 80017f0:	e9c5 120b 	strd	r1, r2, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80017f4:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.HorizontalSync = 1;
 80017f8:	e9c5 4704 	strd	r4, r7, [r5, #16]
 80017fc:	e01e      	b.n	800183c <main+0x37c>
 80017fe:	bf00      	nop
 8001800:	40023800 	.word	0x40023800
 8001804:	40022800 	.word	0x40022800
 8001808:	40020c00 	.word	0x40020c00
 800180c:	40021800 	.word	0x40021800
 8001810:	40021c00 	.word	0x40021c00
 8001814:	20020da8 	.word	0x20020da8
 8001818:	20020e78 	.word	0x20020e78
 800181c:	40023000 	.word	0x40023000
 8001820:	4002b000 	.word	0x4002b000
 8001824:	20020db0 	.word	0x20020db0
 8001828:	40016c00 	.word	0x40016c00
 800182c:	20020eb8 	.word	0x20020eb8
 8001830:	a0000140 	.word	0xa0000140
 8001834:	20020dcc 	.word	0x20020dcc
 8001838:	40016800 	.word	0x40016800
  hltdc.Init.AccumulatedHBP = 2;
 800183c:	e9c5 7806 	strd	r7, r8, [r5, #24]
  hltdc.Init.AccumulatedVBP = 2;
 8001840:	f8c5 8020 	str.w	r8, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 8001844:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001848:	f00a f970 	bl	800bb2c <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 800184c:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 200;
 800184e:	23c8      	movs	r3, #200	; 0xc8
  pLayerCfg.WindowY1 = 480;
 8001850:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  pLayerCfg.Alpha0 = 0;
 8001854:	e9cd 1423 	strd	r1, r4, [sp, #140]	; 0x8c
  pLayerCfg.FBStartAdress = 0xC0000000;
 8001858:	2005      	movs	r0, #5
 800185a:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 800185e:	e9cd 0126 	strd	r0, r1, [sp, #152]	; 0x98
  pLayerCfg.ImageHeight = 480;
 8001862:	e9cd 3228 	strd	r3, r2, [sp, #160]	; 0xa0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001866:	a91e      	add	r1, sp, #120	; 0x78
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001868:	e9cd 2821 	strd	r2, r8, [sp, #132]	; 0x84
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800186c:	4628      	mov	r0, r5
 800186e:	4622      	mov	r2, r4
  pLayerCfg.WindowY0 = 0;
 8001870:	e9cd 341f 	strd	r3, r4, [sp, #124]	; 0x7c
  pLayerCfg.WindowX0 = 0;
 8001874:	941e      	str	r4, [sp, #120]	; 0x78
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8001876:	f8cd a094 	str.w	sl, [sp, #148]	; 0x94
  pLayerCfg.Backcolor.Blue = 0;
 800187a:	f8ad 40a8 	strh.w	r4, [sp, #168]	; 0xa8
  pLayerCfg.Backcolor.Red = 0;
 800187e:	f88d 40aa 	strb.w	r4, [sp, #170]	; 0xaa
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001882:	f00a fa1f 	bl	800bcc4 <HAL_LTDC_ConfigLayer>
  __HAL_LTDC_DISABLE(&hltdc);
 8001886:	682a      	ldr	r2, [r5, #0]
 8001888:	6993      	ldr	r3, [r2, #24]
 800188a:	f023 0301 	bic.w	r3, r3, #1
 800188e:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 8001890:	4630      	mov	r0, r6
 8001892:	f009 fa33 	bl	800acfc <HAL_DSI_Start>
  OTM8009A_Init(OTM8009A_FORMAT_RBG565, LCD_ORIENTATION_LANDSCAPE);
 8001896:	4639      	mov	r1, r7
 8001898:	4640      	mov	r0, r8
 800189a:	f007 fd01 	bl	80092a0 <OTM8009A_Init>
  HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPOFF, 0x00);
 800189e:	2328      	movs	r3, #40	; 0x28
 80018a0:	2215      	movs	r2, #21
 80018a2:	4621      	mov	r1, r4
 80018a4:	4630      	mov	r0, r6
 80018a6:	9400      	str	r4, [sp, #0]
 80018a8:	f009 fa5b 	bl	800ad62 <HAL_DSI_ShortWrite>
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 80018ac:	a92b      	add	r1, sp, #172	; 0xac
 80018ae:	4630      	mov	r0, r6
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 80018b0:	e9cd 442b 	strd	r4, r4, [sp, #172]	; 0xac
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 80018b4:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 80018b8:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 80018bc:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 80018c0:	e9cd 4433 	strd	r4, r4, [sp, #204]	; 0xcc
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 80018c4:	9435      	str	r4, [sp, #212]	; 0xd4
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 80018c6:	f009 f931 	bl	800ab2c <HAL_DSI_ConfigCommand>
  HAL_LTDC_SetPitch(&hltdc, 800, 0);
 80018ca:	f44f 7148 	mov.w	r1, #800	; 0x320
 80018ce:	4622      	mov	r2, r4
 80018d0:	4628      	mov	r0, r5
 80018d2:	f00a fa25 	bl	800bd20 <HAL_LTDC_SetPitch>
  __HAL_LTDC_ENABLE(&hltdc);
 80018d6:	682a      	ldr	r2, [r5, #0]
  hqspi.Instance = QUADSPI;
 80018d8:	481e      	ldr	r0, [pc, #120]	; (8001954 <main+0x494>)
  __HAL_LTDC_ENABLE(&hltdc);
 80018da:	6993      	ldr	r3, [r2, #24]
  hi2c1.Instance = I2C1;
 80018dc:	4d1e      	ldr	r5, [pc, #120]	; (8001958 <main+0x498>)
  hi2c1.Init.ClockSpeed = 400000;
 80018de:	4e1f      	ldr	r6, [pc, #124]	; (800195c <main+0x49c>)
  __HAL_LTDC_ENABLE(&hltdc);
 80018e0:	433b      	orrs	r3, r7
 80018e2:	6193      	str	r3, [r2, #24]
  hqspi.Instance = QUADSPI;
 80018e4:	4b1e      	ldr	r3, [pc, #120]	; (8001960 <main+0x4a0>)
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 80018e6:	6204      	str	r4, [r0, #32]
  hqspi.Init.ClockPrescaler = 1;
 80018e8:	e9c0 3700 	strd	r3, r7, [r0]
  hqspi.Init.FlashSize = 27;
 80018ec:	231b      	movs	r3, #27
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 80018ee:	e9c0 3a04 	strd	r3, sl, [r0, #16]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 80018f2:	e9c0 7b02 	strd	r7, fp, [r0, #8]
  hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 80018f6:	e9c0 4406 	strd	r4, r4, [r0, #24]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 80018fa:	f00a fb65 	bl	800bfc8 <HAL_QSPI_Init>
  BSP_QSPI_DeInit();
 80018fe:	f008 f9d3 	bl	8009ca8 <BSP_QSPI_DeInit>
  if(BSP_QSPI_Init() != QSPI_OK)
 8001902:	f008 f907 	bl	8009b14 <BSP_QSPI_Init>
  if(BSP_QSPI_EnableMemoryMappedMode() != QSPI_OK)
 8001906:	f008 f87d 	bl	8009a04 <BSP_QSPI_EnableMemoryMappedMode>
  hi2c1.Init.ClockSpeed = 400000;
 800190a:	4b16      	ldr	r3, [pc, #88]	; (8001964 <main+0x4a4>)
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800190c:	622c      	str	r4, [r5, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800190e:	4628      	mov	r0, r5
  hi2c1.Init.ClockSpeed = 400000;
 8001910:	e9c5 6300 	strd	r6, r3, [r5]
  hi2c1.Init.OwnAddress1 = 0;
 8001914:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001918:	e9c5 9404 	strd	r9, r4, [r5, #16]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800191c:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001920:	f009 fe20 	bl	800b564 <HAL_I2C_Init>
  HAL_I2C_DeInit(&hi2c1);
 8001924:	4628      	mov	r0, r5
 8001926:	f009 fec5 	bl	800b6b4 <HAL_I2C_DeInit>
  MX_TouchGFX_Init();
 800192a:	f7fe fe70 	bl	800060e <MX_TouchGFX_Init>
  osKernelInitialize();
 800192e:	f00b fc1f 	bl	800d170 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001932:	4a0d      	ldr	r2, [pc, #52]	; (8001968 <main+0x4a8>)
 8001934:	480d      	ldr	r0, [pc, #52]	; (800196c <main+0x4ac>)
 8001936:	4621      	mov	r1, r4
 8001938:	f00b fc46 	bl	800d1c8 <osThreadNew>
 800193c:	4b0c      	ldr	r3, [pc, #48]	; (8001970 <main+0x4b0>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 800193e:	4a0d      	ldr	r2, [pc, #52]	; (8001974 <main+0x4b4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001940:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8001942:	4621      	mov	r1, r4
 8001944:	480c      	ldr	r0, [pc, #48]	; (8001978 <main+0x4b8>)
 8001946:	f00b fc3f 	bl	800d1c8 <osThreadNew>
 800194a:	4b0c      	ldr	r3, [pc, #48]	; (800197c <main+0x4bc>)
 800194c:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800194e:	f00b fc21 	bl	800d194 <osKernelStart>
  while (1)
 8001952:	e7fe      	b.n	8001952 <main+0x492>
 8001954:	20020eec 	.word	0x20020eec
 8001958:	20020d54 	.word	0x20020d54
 800195c:	40005400 	.word	0x40005400
 8001960:	a0001000 	.word	0xa0001000
 8001964:	00061a80 	.word	0x00061a80
 8001968:	08026eec 	.word	0x08026eec
 800196c:	08001415 	.word	0x08001415
 8001970:	20020d50 	.word	0x20020d50
 8001974:	08026ec8 	.word	0x08026ec8
 8001978:	08000613 	.word	0x08000613
 800197c:	20020e74 	.word	0x20020e74

08001980 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001980:	6802      	ldr	r2, [r0, #0]
 8001982:	4b03      	ldr	r3, [pc, #12]	; (8001990 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001984:	429a      	cmp	r2, r3
 8001986:	d101      	bne.n	800198c <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8001988:	f008 bc08 	b.w	800a19c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 800198c:	4770      	bx	lr
 800198e:	bf00      	nop
 8001990:	40001000 	.word	0x40001000

08001994 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001994:	4770      	bx	lr

08001996 <parce_found_logs>:
	f_mount(NULL, "", 0);
	return state_read;
#else
	return 1;
#endif
}
 8001996:	2001      	movs	r0, #1
 8001998:	4770      	bx	lr

0800199a <read_start_stop_state_archiv>:

//========================================================================================
// Чтение и начала и конца архива, содержащие время
void read_start_stop_state_archiv(uint32_t *time_start, uint32_t *time_stop)
{
	*time_start = open_read_state_file_archiv(TYPE_STATE_FILE_START);
 800199a:	2300      	movs	r3, #0
 800199c:	6003      	str	r3, [r0, #0]
	*time_stop = open_read_state_file_archiv(TYPE_STATE_FILE_STOP) + 1;
 800199e:	2301      	movs	r3, #1
 80019a0:	600b      	str	r3, [r1, #0]
}
 80019a2:	4770      	bx	lr

080019a4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80019a4:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80019a6:	4b0e      	ldr	r3, [pc, #56]	; (80019e0 <HAL_MspInit+0x3c>)
 80019a8:	2200      	movs	r2, #0
 80019aa:	9200      	str	r2, [sp, #0]
 80019ac:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019ae:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80019b2:	6459      	str	r1, [r3, #68]	; 0x44
 80019b4:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019b6:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80019ba:	9100      	str	r1, [sp, #0]
 80019bc:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80019be:	9201      	str	r2, [sp, #4]
 80019c0:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80019c2:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80019c6:	6419      	str	r1, [r3, #64]	; 0x40
 80019c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019ca:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80019ce:	9301      	str	r3, [sp, #4]
 80019d0:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80019d2:	210f      	movs	r1, #15
 80019d4:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80019d8:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80019da:	f008 bc17 	b.w	800a20c <HAL_NVIC_SetPriority>
 80019de:	bf00      	nop
 80019e0:	40023800 	.word	0x40023800

080019e4 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80019e4:	6802      	ldr	r2, [r0, #0]
 80019e6:	4b09      	ldr	r3, [pc, #36]	; (8001a0c <HAL_CRC_MspInit+0x28>)
 80019e8:	429a      	cmp	r2, r3
{
 80019ea:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 80019ec:	d10b      	bne.n	8001a06 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80019ee:	2300      	movs	r3, #0
 80019f0:	9301      	str	r3, [sp, #4]
 80019f2:	4b07      	ldr	r3, [pc, #28]	; (8001a10 <HAL_CRC_MspInit+0x2c>)
 80019f4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019f6:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80019fa:	631a      	str	r2, [r3, #48]	; 0x30
 80019fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019fe:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001a02:	9301      	str	r3, [sp, #4]
 8001a04:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001a06:	b002      	add	sp, #8
 8001a08:	4770      	bx	lr
 8001a0a:	bf00      	nop
 8001a0c:	40023000 	.word	0x40023000
 8001a10:	40023800 	.word	0x40023800

08001a14 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001a14:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001a16:	4b0f      	ldr	r3, [pc, #60]	; (8001a54 <HAL_DMA2D_MspInit+0x40>)
 8001a18:	6802      	ldr	r2, [r0, #0]
 8001a1a:	429a      	cmp	r2, r3
 8001a1c:	d116      	bne.n	8001a4c <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a1e:	2200      	movs	r2, #0
 8001a20:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001a24:	9201      	str	r2, [sp, #4]
 8001a26:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001a28:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001a2c:	6319      	str	r1, [r3, #48]	; 0x30
 8001a2e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a30:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001a34:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a36:	2105      	movs	r1, #5
 8001a38:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a3a:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a3c:	f008 fbe6 	bl	800a20c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a40:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001a42:	b003      	add	sp, #12
 8001a44:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a48:	f008 bc12 	b.w	800a270 <HAL_NVIC_EnableIRQ>
}
 8001a4c:	b003      	add	sp, #12
 8001a4e:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a52:	bf00      	nop
 8001a54:	4002b000 	.word	0x4002b000

08001a58 <HAL_DSI_MspInit>:
* This function configures the hardware resources used in this example
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 8001a58:	b510      	push	{r4, lr}
 8001a5a:	4604      	mov	r4, r0
 8001a5c:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a5e:	2214      	movs	r2, #20
 8001a60:	2100      	movs	r1, #0
 8001a62:	a803      	add	r0, sp, #12
 8001a64:	f022 ff8e 	bl	8024984 <memset>
  if(hdsi->Instance==DSI)
 8001a68:	6822      	ldr	r2, [r4, #0]
 8001a6a:	4b18      	ldr	r3, [pc, #96]	; (8001acc <HAL_DSI_MspInit+0x74>)
 8001a6c:	429a      	cmp	r2, r3
 8001a6e:	d12a      	bne.n	8001ac6 <HAL_DSI_MspInit+0x6e>
  {
  /* USER CODE BEGIN DSI_MspInit 0 */

  /* USER CODE END DSI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 8001a70:	f503 434c 	add.w	r3, r3, #52224	; 0xcc00
 8001a74:	2400      	movs	r4, #0
 8001a76:	9401      	str	r4, [sp, #4]
 8001a78:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001a7a:	4815      	ldr	r0, [pc, #84]	; (8001ad0 <HAL_DSI_MspInit+0x78>)
    __HAL_RCC_DSI_CLK_ENABLE();
 8001a7c:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8001a80:	645a      	str	r2, [r3, #68]	; 0x44
 8001a82:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001a84:	f002 6200 	and.w	r2, r2, #134217728	; 0x8000000
 8001a88:	9201      	str	r2, [sp, #4]
 8001a8a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001a8c:	9402      	str	r4, [sp, #8]
 8001a8e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a90:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001a94:	631a      	str	r2, [r3, #48]	; 0x30
 8001a96:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a98:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001a9c:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a9e:	2204      	movs	r2, #4
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001aa0:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001aa2:	2302      	movs	r3, #2
 8001aa4:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001aa8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 8001aaa:	230d      	movs	r3, #13
 8001aac:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001aae:	e9cd 4405 	strd	r4, r4, [sp, #20]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001ab2:	f009 f9df 	bl	800ae74 <HAL_GPIO_Init>

    /* DSI interrupt Init */
    HAL_NVIC_SetPriority(DSI_IRQn, 5, 0);
 8001ab6:	205c      	movs	r0, #92	; 0x5c
 8001ab8:	4622      	mov	r2, r4
 8001aba:	2105      	movs	r1, #5
 8001abc:	f008 fba6 	bl	800a20c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 8001ac0:	205c      	movs	r0, #92	; 0x5c
 8001ac2:	f008 fbd5 	bl	800a270 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 8001ac6:	b008      	add	sp, #32
 8001ac8:	bd10      	pop	{r4, pc}
 8001aca:	bf00      	nop
 8001acc:	40016c00 	.word	0x40016c00
 8001ad0:	40022400 	.word	0x40022400

08001ad4 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001ad4:	b530      	push	{r4, r5, lr}
 8001ad6:	4604      	mov	r4, r0
 8001ad8:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ada:	2214      	movs	r2, #20
 8001adc:	2100      	movs	r1, #0
 8001ade:	a803      	add	r0, sp, #12
 8001ae0:	f022 ff50 	bl	8024984 <memset>
  if(hi2c->Instance==I2C1)
 8001ae4:	6822      	ldr	r2, [r4, #0]
 8001ae6:	4b1a      	ldr	r3, [pc, #104]	; (8001b50 <HAL_I2C_MspInit+0x7c>)
 8001ae8:	429a      	cmp	r2, r3
 8001aea:	d12f      	bne.n	8001b4c <HAL_I2C_MspInit+0x78>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */
//
  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001aec:	4c19      	ldr	r4, [pc, #100]	; (8001b54 <HAL_I2C_MspInit+0x80>)
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001aee:	481a      	ldr	r0, [pc, #104]	; (8001b58 <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001af0:	2500      	movs	r5, #0
 8001af2:	9501      	str	r5, [sp, #4]
 8001af4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001af6:	f043 0302 	orr.w	r3, r3, #2
 8001afa:	6323      	str	r3, [r4, #48]	; 0x30
 8001afc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001afe:	f003 0302 	and.w	r3, r3, #2
 8001b02:	9301      	str	r3, [sp, #4]
 8001b04:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001b06:	f44f 7240 	mov.w	r2, #768	; 0x300
 8001b0a:	2312      	movs	r3, #18
 8001b0c:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b10:	2101      	movs	r1, #1
 8001b12:	2303      	movs	r3, #3
 8001b14:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001b18:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b1a:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001b1c:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b1e:	f009 f9a9 	bl	800ae74 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001b22:	9502      	str	r5, [sp, #8]
 8001b24:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b26:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001b2a:	6423      	str	r3, [r4, #64]	; 0x40
 8001b2c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b2e:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001b32:	9302      	str	r3, [sp, #8]
 8001b34:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */
    /* Force the I2C peripheral clock reset */
    __HAL_RCC_I2C1_FORCE_RESET();
 8001b36:	6a23      	ldr	r3, [r4, #32]
 8001b38:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001b3c:	6223      	str	r3, [r4, #32]

    /* Release the I2C peripheral clock reset */
    __HAL_RCC_I2C1_RELEASE_RESET();
 8001b3e:	6a23      	ldr	r3, [r4, #32]
 8001b40:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001b44:	6223      	str	r3, [r4, #32]

    /* Wait for 100 ms */
    HAL_Delay(100);
 8001b46:	2064      	movs	r0, #100	; 0x64
 8001b48:	f008 fb3a 	bl	800a1c0 <HAL_Delay>
  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8001b4c:	b009      	add	sp, #36	; 0x24
 8001b4e:	bd30      	pop	{r4, r5, pc}
 8001b50:	40005400 	.word	0x40005400
 8001b54:	40023800 	.word	0x40023800
 8001b58:	40020400 	.word	0x40020400

08001b5c <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 8001b5c:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C1)
 8001b5e:	6802      	ldr	r2, [r0, #0]
 8001b60:	4b0a      	ldr	r3, [pc, #40]	; (8001b8c <HAL_I2C_MspDeInit+0x30>)
 8001b62:	429a      	cmp	r2, r3
 8001b64:	d110      	bne.n	8001b88 <HAL_I2C_MspDeInit+0x2c>
  {
  /* USER CODE BEGIN I2C1_MspDeInit 0 */

  /* USER CODE END I2C1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001b66:	4a0a      	ldr	r2, [pc, #40]	; (8001b90 <HAL_I2C_MspDeInit+0x34>)

    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001b68:	480a      	ldr	r0, [pc, #40]	; (8001b94 <HAL_I2C_MspDeInit+0x38>)
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001b6a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001b6c:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001b70:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001b72:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001b76:	f009 fa63 	bl	800b040 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C1_MspDeInit 1 */

  /* USER CODE END I2C1_MspDeInit 1 */
  }

}
 8001b7a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_9);
 8001b7e:	4805      	ldr	r0, [pc, #20]	; (8001b94 <HAL_I2C_MspDeInit+0x38>)
 8001b80:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001b84:	f009 ba5c 	b.w	800b040 <HAL_GPIO_DeInit>
}
 8001b88:	bd08      	pop	{r3, pc}
 8001b8a:	bf00      	nop
 8001b8c:	40005400 	.word	0x40005400
 8001b90:	40023800 	.word	0x40023800
 8001b94:	40020400 	.word	0x40020400

08001b98 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001b98:	b510      	push	{r4, lr}
 8001b9a:	4604      	mov	r4, r0
 8001b9c:	b090      	sub	sp, #64	; 0x40
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001b9e:	223c      	movs	r2, #60	; 0x3c
 8001ba0:	2100      	movs	r1, #0
 8001ba2:	a801      	add	r0, sp, #4
 8001ba4:	f022 feee 	bl	8024984 <memset>
  if(hltdc->Instance==LTDC)
 8001ba8:	6822      	ldr	r2, [r4, #0]
 8001baa:	4b13      	ldr	r3, [pc, #76]	; (8001bf8 <HAL_LTDC_MspInit+0x60>)
 8001bac:	429a      	cmp	r2, r3
 8001bae:	d121      	bne.n	8001bf4 <HAL_LTDC_MspInit+0x5c>
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001bb0:	2308      	movs	r3, #8
 8001bb2:	9301      	str	r3, [sp, #4]
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
 8001bb4:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001bb8:	9305      	str	r3, [sp, #20]
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 8001bba:	2400      	movs	r4, #0
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 8001bbc:	2306      	movs	r3, #6
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001bbe:	a801      	add	r0, sp, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 8001bc0:	9308      	str	r3, [sp, #32]
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 8001bc2:	940b      	str	r4, [sp, #44]	; 0x2c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001bc4:	f00a fd34 	bl	800c630 <HAL_RCCEx_PeriphCLKConfig>
 8001bc8:	b108      	cbz	r0, 8001bce <HAL_LTDC_MspInit+0x36>
    {
      Error_Handler();
 8001bca:	f7ff fee3 	bl	8001994 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001bce:	4b0b      	ldr	r3, [pc, #44]	; (8001bfc <HAL_LTDC_MspInit+0x64>)
 8001bd0:	9400      	str	r4, [sp, #0]
 8001bd2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001bd4:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001bd8:	645a      	str	r2, [r3, #68]	; 0x44
 8001bda:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001bdc:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8001be0:	9300      	str	r3, [sp, #0]
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001be2:	2058      	movs	r0, #88	; 0x58
 8001be4:	2200      	movs	r2, #0
 8001be6:	2105      	movs	r1, #5
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001be8:	9b00      	ldr	r3, [sp, #0]
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001bea:	f008 fb0f 	bl	800a20c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001bee:	2058      	movs	r0, #88	; 0x58
 8001bf0:	f008 fb3e 	bl	800a270 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001bf4:	b010      	add	sp, #64	; 0x40
 8001bf6:	bd10      	pop	{r4, pc}
 8001bf8:	40016800 	.word	0x40016800
 8001bfc:	40023800 	.word	0x40023800

08001c00 <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 8001c00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001c02:	4604      	mov	r4, r0
 8001c04:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c06:	2214      	movs	r2, #20
 8001c08:	2100      	movs	r1, #0
 8001c0a:	a803      	add	r0, sp, #12
 8001c0c:	f022 feba 	bl	8024984 <memset>
  if(hqspi->Instance==QUADSPI)
 8001c10:	6822      	ldr	r2, [r4, #0]
 8001c12:	4b24      	ldr	r3, [pc, #144]	; (8001ca4 <HAL_QSPI_MspInit+0xa4>)
 8001c14:	429a      	cmp	r2, r3
 8001c16:	d143      	bne.n	8001ca0 <HAL_QSPI_MspInit+0xa0>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001c18:	4b23      	ldr	r3, [pc, #140]	; (8001ca8 <HAL_QSPI_MspInit+0xa8>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c1a:	4824      	ldr	r0, [pc, #144]	; (8001cac <HAL_QSPI_MspInit+0xac>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001c1c:	2400      	movs	r4, #0
 8001c1e:	9400      	str	r4, [sp, #0]
 8001c20:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001c22:	f042 0202 	orr.w	r2, r2, #2
 8001c26:	639a      	str	r2, [r3, #56]	; 0x38
 8001c28:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001c2a:	f002 0202 	and.w	r2, r2, #2
 8001c2e:	9200      	str	r2, [sp, #0]
 8001c30:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c32:	9401      	str	r4, [sp, #4]
 8001c34:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c36:	f042 0202 	orr.w	r2, r2, #2
 8001c3a:	631a      	str	r2, [r3, #48]	; 0x30
 8001c3c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c3e:	f002 0202 	and.w	r2, r2, #2
 8001c42:	9201      	str	r2, [sp, #4]
 8001c44:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c46:	9402      	str	r4, [sp, #8]
 8001c48:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c4a:	f042 0220 	orr.w	r2, r2, #32
 8001c4e:	631a      	str	r2, [r3, #48]	; 0x30
 8001c50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c52:	9405      	str	r4, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c54:	f003 0320 	and.w	r3, r3, #32
 8001c58:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c5a:	2602      	movs	r6, #2
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c5c:	2503      	movs	r5, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c5e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c60:	270a      	movs	r7, #10
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c62:	2340      	movs	r3, #64	; 0x40
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c64:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c66:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c6a:	e9cd 5706 	strd	r5, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c6e:	f009 f901 	bl	800ae74 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10;
 8001c72:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c76:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c7a:	480d      	ldr	r0, [pc, #52]	; (8001cb0 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001c7c:	2309      	movs	r3, #9
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c7e:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001c80:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c82:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c86:	f009 f8f5 	bl	800ae74 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_8;
 8001c8a:	f44f 7340 	mov.w	r3, #768	; 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c8e:	4808      	ldr	r0, [pc, #32]	; (8001cb0 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c90:	9707      	str	r7, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c92:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c94:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c98:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c9c:	f009 f8ea 	bl	800ae74 <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8001ca0:	b009      	add	sp, #36	; 0x24
 8001ca2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001ca4:	a0001000 	.word	0xa0001000
 8001ca8:	40023800 	.word	0x40023800
 8001cac:	40020400 	.word	0x40020400
 8001cb0:	40021400 	.word	0x40021400

08001cb4 <HAL_QSPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
 8001cb4:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 8001cb6:	6802      	ldr	r2, [r0, #0]
 8001cb8:	4b09      	ldr	r3, [pc, #36]	; (8001ce0 <HAL_QSPI_MspDeInit+0x2c>)
 8001cba:	429a      	cmp	r2, r3
 8001cbc:	d10f      	bne.n	8001cde <HAL_QSPI_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001cbe:	4a09      	ldr	r2, [pc, #36]	; (8001ce4 <HAL_QSPI_MspDeInit+0x30>)
    PF6     ------> QUADSPI_BK1_IO3
    PF10     ------> QUADSPI_CLK
    PF9     ------> QUADSPI_BK1_IO1
    PF8     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001cc0:	4809      	ldr	r0, [pc, #36]	; (8001ce8 <HAL_QSPI_MspDeInit+0x34>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001cc2:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001cc4:	f023 0302 	bic.w	r3, r3, #2
 8001cc8:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001cca:	2140      	movs	r1, #64	; 0x40
 8001ccc:	f009 f9b8 	bl	800b040 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 8001cd0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10|GPIO_PIN_9
 8001cd4:	4805      	ldr	r0, [pc, #20]	; (8001cec <HAL_QSPI_MspDeInit+0x38>)
 8001cd6:	f44f 61f8 	mov.w	r1, #1984	; 0x7c0
 8001cda:	f009 b9b1 	b.w	800b040 <HAL_GPIO_DeInit>
}
 8001cde:	bd08      	pop	{r3, pc}
 8001ce0:	a0001000 	.word	0xa0001000
 8001ce4:	40023800 	.word	0x40023800
 8001ce8:	40020400 	.word	0x40020400
 8001cec:	40021400 	.word	0x40021400

08001cf0 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001cf0:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8001cf2:	4b31      	ldr	r3, [pc, #196]	; (8001db8 <HAL_SDRAM_MspInit+0xc8>)
 8001cf4:	681c      	ldr	r4, [r3, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001cf6:	b087      	sub	sp, #28
  if (FMC_Initialized) {
 8001cf8:	2c00      	cmp	r4, #0
 8001cfa:	d15b      	bne.n	8001db4 <HAL_SDRAM_MspInit+0xc4>
  FMC_Initialized = 1;
 8001cfc:	2201      	movs	r2, #1
 8001cfe:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d00:	4b2e      	ldr	r3, [pc, #184]	; (8001dbc <HAL_SDRAM_MspInit+0xcc>)
 8001d02:	9400      	str	r4, [sp, #0]
 8001d04:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d06:	482e      	ldr	r0, [pc, #184]	; (8001dc0 <HAL_SDRAM_MspInit+0xd0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d08:	f042 0201 	orr.w	r2, r2, #1
 8001d0c:	639a      	str	r2, [r3, #56]	; 0x38
 8001d0e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d10:	9403      	str	r4, [sp, #12]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d12:	f003 0301 	and.w	r3, r3, #1
 8001d16:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d18:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d1a:	2603      	movs	r6, #3
 8001d1c:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d1e:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d20:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d22:	f64f 7383 	movw	r3, #65411	; 0xff83
 8001d26:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d2a:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d2e:	f009 f8a1 	bl	800ae74 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001d32:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d36:	4823      	ldr	r0, [pc, #140]	; (8001dc4 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d38:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d3a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d3c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d40:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d44:	f009 f896 	bl	800ae74 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001d48:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d4c:	481e      	ldr	r0, [pc, #120]	; (8001dc8 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d4e:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d50:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d52:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d56:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d5a:	f009 f88b 	bl	800ae74 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001d5e:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d62:	481a      	ldr	r0, [pc, #104]	; (8001dcc <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d64:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d66:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d68:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d6c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d70:	f009 f880 	bl	800ae74 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001d74:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d78:	4815      	ldr	r0, [pc, #84]	; (8001dd0 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d7a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d7c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d7e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d82:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d86:	f009 f875 	bl	800ae74 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001d8a:	f44f 437f 	mov.w	r3, #65280	; 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001d8e:	4811      	ldr	r0, [pc, #68]	; (8001dd4 <HAL_SDRAM_MspInit+0xe4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d90:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001d92:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d94:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d98:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001d9c:	f009 f86a 	bl	800ae74 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2;
 8001da0:	230d      	movs	r3, #13
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001da2:	480d      	ldr	r0, [pc, #52]	; (8001dd8 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001da4:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001da6:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001da8:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001dac:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001db0:	f009 f860 	bl	800ae74 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001db4:	b007      	add	sp, #28
 8001db6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001db8:	2000f9ec 	.word	0x2000f9ec
 8001dbc:	40023800 	.word	0x40023800
 8001dc0:	40021000 	.word	0x40021000
 8001dc4:	40021800 	.word	0x40021800
 8001dc8:	40020c00 	.word	0x40020c00
 8001dcc:	40022000 	.word	0x40022000
 8001dd0:	40021400 	.word	0x40021400
 8001dd4:	40021c00 	.word	0x40021c00
 8001dd8:	40020800 	.word	0x40020800

08001ddc <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 8001ddc:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
 8001dde:	4b17      	ldr	r3, [pc, #92]	; (8001e3c <HAL_SDRAM_MspDeInit+0x60>)
 8001de0:	681a      	ldr	r2, [r3, #0]
 8001de2:	bb52      	cbnz	r2, 8001e3a <HAL_SDRAM_MspDeInit+0x5e>
  FMC_DeInitialized = 1;
 8001de4:	2201      	movs	r2, #1
 8001de6:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 8001de8:	4a15      	ldr	r2, [pc, #84]	; (8001e40 <HAL_SDRAM_MspDeInit+0x64>)
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001dea:	4816      	ldr	r0, [pc, #88]	; (8001e44 <HAL_SDRAM_MspDeInit+0x68>)
  __HAL_RCC_FMC_CLK_DISABLE();
 8001dec:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001dee:	f023 0301 	bic.w	r3, r3, #1
 8001df2:	6393      	str	r3, [r2, #56]	; 0x38
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001df4:	f64f 7183 	movw	r1, #65411	; 0xff83
 8001df8:	f009 f922 	bl	800b040 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001dfc:	4812      	ldr	r0, [pc, #72]	; (8001e48 <HAL_SDRAM_MspDeInit+0x6c>)
 8001dfe:	f248 1133 	movw	r1, #33075	; 0x8133
 8001e02:	f009 f91d 	bl	800b040 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001e06:	4811      	ldr	r0, [pc, #68]	; (8001e4c <HAL_SDRAM_MspDeInit+0x70>)
 8001e08:	f24c 7103 	movw	r1, #50947	; 0xc703
 8001e0c:	f009 f918 	bl	800b040 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001e10:	480f      	ldr	r0, [pc, #60]	; (8001e50 <HAL_SDRAM_MspDeInit+0x74>)
 8001e12:	f240 61ff 	movw	r1, #1791	; 0x6ff
 8001e16:	f009 f913 	bl	800b040 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001e1a:	480e      	ldr	r0, [pc, #56]	; (8001e54 <HAL_SDRAM_MspDeInit+0x78>)
 8001e1c:	f64f 013f 	movw	r1, #63551	; 0xf83f
 8001e20:	f009 f90e 	bl	800b040 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001e24:	480c      	ldr	r0, [pc, #48]	; (8001e58 <HAL_SDRAM_MspDeInit+0x7c>)
 8001e26:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 8001e2a:	f009 f909 	bl	800b040 <HAL_GPIO_DeInit>
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 8001e2e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2);
 8001e32:	480a      	ldr	r0, [pc, #40]	; (8001e5c <HAL_SDRAM_MspDeInit+0x80>)
 8001e34:	210d      	movs	r1, #13
 8001e36:	f009 b903 	b.w	800b040 <HAL_GPIO_DeInit>
}
 8001e3a:	bd08      	pop	{r3, pc}
 8001e3c:	2000f9e8 	.word	0x2000f9e8
 8001e40:	40023800 	.word	0x40023800
 8001e44:	40021000 	.word	0x40021000
 8001e48:	40021800 	.word	0x40021800
 8001e4c:	40020c00 	.word	0x40020c00
 8001e50:	40022000 	.word	0x40022000
 8001e54:	40021400 	.word	0x40021400
 8001e58:	40021c00 	.word	0x40021c00
 8001e5c:	40020800 	.word	0x40020800

08001e60 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001e60:	b530      	push	{r4, r5, lr}
 8001e62:	4601      	mov	r1, r0
 8001e64:	b089      	sub	sp, #36	; 0x24
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001e66:	2200      	movs	r2, #0
 8001e68:	2036      	movs	r0, #54	; 0x36
 8001e6a:	f008 f9cf 	bl	800a20c <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001e6e:	2036      	movs	r0, #54	; 0x36
 8001e70:	f008 f9fe 	bl	800a270 <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e74:	2500      	movs	r5, #0
 8001e76:	4b15      	ldr	r3, [pc, #84]	; (8001ecc <HAL_InitTick+0x6c>)
 8001e78:	9502      	str	r5, [sp, #8]
 8001e7a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001e7c:	4c14      	ldr	r4, [pc, #80]	; (8001ed0 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e7e:	f042 0210 	orr.w	r2, r2, #16
 8001e82:	641a      	str	r2, [r3, #64]	; 0x40
 8001e84:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e86:	f003 0310 	and.w	r3, r3, #16
 8001e8a:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001e8c:	a901      	add	r1, sp, #4
 8001e8e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e90:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001e92:	f00a fbaf 	bl	800c5f4 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001e96:	f00a fb9d 	bl	800c5d4 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001e9a:	4b0e      	ldr	r3, [pc, #56]	; (8001ed4 <HAL_InitTick+0x74>)
 8001e9c:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001e9e:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001ea2:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001ea4:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001ea6:	4b0c      	ldr	r3, [pc, #48]	; (8001ed8 <HAL_InitTick+0x78>)
 8001ea8:	fbb0 f0f3 	udiv	r0, r0, r3
 8001eac:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001eae:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;

  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001eb0:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001eb2:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001eb4:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001eb6:	f00b f871 	bl	800cf9c <HAL_TIM_Base_Init>
 8001eba:	b920      	cbnz	r0, 8001ec6 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001ebc:	4620      	mov	r0, r4
 8001ebe:	f00a ff27 	bl	800cd10 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001ec2:	b009      	add	sp, #36	; 0x24
 8001ec4:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001ec6:	2001      	movs	r0, #1
 8001ec8:	e7fb      	b.n	8001ec2 <HAL_InitTick+0x62>
 8001eca:	bf00      	nop
 8001ecc:	40023800 	.word	0x40023800
 8001ed0:	20020f38 	.word	0x20020f38
 8001ed4:	40001000 	.word	0x40001000
 8001ed8:	000f4240 	.word	0x000f4240

08001edc <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001edc:	4770      	bx	lr

08001ede <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001ede:	e7fe      	b.n	8001ede <HardFault_Handler>

08001ee0 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001ee0:	e7fe      	b.n	8001ee0 <MemManage_Handler>

08001ee2 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001ee2:	e7fe      	b.n	8001ee2 <BusFault_Handler>

08001ee4 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001ee4:	e7fe      	b.n	8001ee4 <UsageFault_Handler>

08001ee6 <DebugMon_Handler>:
 8001ee6:	4770      	bx	lr

08001ee8 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001ee8:	4801      	ldr	r0, [pc, #4]	; (8001ef0 <TIM6_DAC_IRQHandler+0x8>)
 8001eea:	f00a bf4f 	b.w	800cd8c <HAL_TIM_IRQHandler>
 8001eee:	bf00      	nop
 8001ef0:	20020f38 	.word	0x20020f38

08001ef4 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001ef4:	4801      	ldr	r0, [pc, #4]	; (8001efc <LTDC_IRQHandler+0x8>)
 8001ef6:	f009 be88 	b.w	800bc0a <HAL_LTDC_IRQHandler>
 8001efa:	bf00      	nop
 8001efc:	20020dcc 	.word	0x20020dcc

08001f00 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001f00:	4801      	ldr	r0, [pc, #4]	; (8001f08 <DMA2D_IRQHandler+0x8>)
 8001f02:	f008 bb19 	b.w	800a538 <HAL_DMA2D_IRQHandler>
 8001f06:	bf00      	nop
 8001f08:	20020e78 	.word	0x20020e78

08001f0c <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 8001f0c:	4801      	ldr	r0, [pc, #4]	; (8001f14 <DSI_IRQHandler+0x8>)
 8001f0e:	f008 bd18 	b.w	800a942 <HAL_DSI_IRQHandler>
 8001f12:	bf00      	nop
 8001f14:	20020db0 	.word	0x20020db0

08001f18 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001f18:	2001      	movs	r0, #1
 8001f1a:	4770      	bx	lr

08001f1c <_kill>:

int _kill(int pid, int sig)
{
 8001f1c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f1e:	f022 fad1 	bl	80244c4 <__errno>
 8001f22:	2316      	movs	r3, #22
 8001f24:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001f26:	f04f 30ff 	mov.w	r0, #4294967295
 8001f2a:	bd08      	pop	{r3, pc}

08001f2c <_exit>:

void _exit (int status)
{
 8001f2c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f2e:	f022 fac9 	bl	80244c4 <__errno>
 8001f32:	2316      	movs	r3, #22
 8001f34:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001f36:	e7fe      	b.n	8001f36 <_exit+0xa>

08001f38 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001f38:	b570      	push	{r4, r5, r6, lr}
 8001f3a:	460e      	mov	r6, r1
 8001f3c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f3e:	2500      	movs	r5, #0
 8001f40:	42a5      	cmp	r5, r4
 8001f42:	db01      	blt.n	8001f48 <_read+0x10>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001f44:	4620      	mov	r0, r4
 8001f46:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001f48:	f3af 8000 	nop.w
 8001f4c:	5570      	strb	r0, [r6, r5]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f4e:	3501      	adds	r5, #1
 8001f50:	e7f6      	b.n	8001f40 <_read+0x8>

08001f52 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001f52:	b570      	push	{r4, r5, r6, lr}
 8001f54:	460e      	mov	r6, r1
 8001f56:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f58:	2500      	movs	r5, #0
 8001f5a:	42a5      	cmp	r5, r4
 8001f5c:	db01      	blt.n	8001f62 <_write+0x10>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001f5e:	4620      	mov	r0, r4
 8001f60:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001f62:	5d70      	ldrb	r0, [r6, r5]
 8001f64:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f68:	3501      	adds	r5, #1
 8001f6a:	e7f6      	b.n	8001f5a <_write+0x8>

08001f6c <_close>:

int _close(int file)
{
	return -1;
}
 8001f6c:	f04f 30ff 	mov.w	r0, #4294967295
 8001f70:	4770      	bx	lr

08001f72 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001f72:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001f76:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001f78:	2000      	movs	r0, #0
 8001f7a:	4770      	bx	lr

08001f7c <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001f7c:	2001      	movs	r0, #1
 8001f7e:	4770      	bx	lr

08001f80 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001f80:	2000      	movs	r0, #0
 8001f82:	4770      	bx	lr

08001f84 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8001f84:	b508      	push	{r3, lr}
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001f86:	4b0a      	ldr	r3, [pc, #40]	; (8001fb0 <_sbrk+0x2c>)
 8001f88:	6819      	ldr	r1, [r3, #0]
{
 8001f8a:	4602      	mov	r2, r0
	if (heap_end == 0)
 8001f8c:	b909      	cbnz	r1, 8001f92 <_sbrk+0xe>
		heap_end = &end;
 8001f8e:	4909      	ldr	r1, [pc, #36]	; (8001fb4 <_sbrk+0x30>)
 8001f90:	6019      	str	r1, [r3, #0]

	prev_heap_end = heap_end;
 8001f92:	6818      	ldr	r0, [r3, #0]
	if (heap_end + incr > stack_ptr)
 8001f94:	4669      	mov	r1, sp
 8001f96:	4402      	add	r2, r0
 8001f98:	428a      	cmp	r2, r1
 8001f9a:	d906      	bls.n	8001faa <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001f9c:	f022 fa92 	bl	80244c4 <__errno>
 8001fa0:	230c      	movs	r3, #12
 8001fa2:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001fa4:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001fa8:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001faa:	601a      	str	r2, [r3, #0]
	return (caddr_t) prev_heap_end;
 8001fac:	e7fc      	b.n	8001fa8 <_sbrk+0x24>
 8001fae:	bf00      	nop
 8001fb0:	2000f9f4 	.word	0x2000f9f4
 8001fb4:	20021038 	.word	0x20021038

08001fb8 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8001fb8:	4770      	bx	lr

08001fba <_ZN23ApplicationFontProviderD0Ev>:
 8001fba:	b510      	push	{r4, lr}
 8001fbc:	2104      	movs	r1, #4
 8001fbe:	4604      	mov	r4, r0
 8001fc0:	f022 fa0b 	bl	80243da <_ZdlPvj>
 8001fc4:	4620      	mov	r0, r4
 8001fc6:	bd10      	pop	{r4, pc}

08001fc8 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8001fc8:	2901      	cmp	r1, #1
{
 8001fca:	b508      	push	{r3, lr}
    switch (typography)
 8001fcc:	d006      	beq.n	8001fdc <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8001fce:	2902      	cmp	r1, #2
 8001fd0:	d008      	beq.n	8001fe4 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8001fd2:	b959      	cbnz	r1, 8001fec <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8001fd4:	f004 ff88 	bl	8006ee8 <_ZN17TypedTextDatabase8getFontsEv>
 8001fd8:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8001fda:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8001fdc:	f004 ff84 	bl	8006ee8 <_ZN17TypedTextDatabase8getFontsEv>
 8001fe0:	6840      	ldr	r0, [r0, #4]
 8001fe2:	e7fa      	b.n	8001fda <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8001fe4:	f004 ff80 	bl	8006ee8 <_ZN17TypedTextDatabase8getFontsEv>
 8001fe8:	6880      	ldr	r0, [r0, #8]
 8001fea:	e7f6      	b.n	8001fda <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8001fec:	2000      	movs	r0, #0
 8001fee:	e7f4      	b.n	8001fda <_ZN23ApplicationFontProvider7getFontEt+0x12>

08001ff0 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8001ff0:	4800      	ldr	r0, [pc, #0]	; (8001ff4 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8001ff2:	4770      	bx	lr
 8001ff4:	08026f24 	.word	0x08026f24

08001ff8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8001ff8:	200b      	movs	r0, #11
 8001ffa:	4770      	bx	lr

08001ffc <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8001ffc:	b513      	push	{r0, r1, r4, lr}
 8001ffe:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002000:	b151      	cbz	r1, 8002018 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002002:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002004:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002006:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800200a:	aa01      	add	r2, sp, #4
 800200c:	689c      	ldr	r4, [r3, #8]
 800200e:	f10d 0303 	add.w	r3, sp, #3
 8002012:	47a0      	blx	r4
        return glyph;
    }
 8002014:	b002      	add	sp, #8
 8002016:	bd10      	pop	{r4, pc}
            return 0;
 8002018:	4608      	mov	r0, r1
 800201a:	e7fb      	b.n	8002014 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800201c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800201c:	8940      	ldrh	r0, [r0, #10]
 800201e:	4770      	bx	lr

08002020 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002020:	8980      	ldrh	r0, [r0, #12]
 8002022:	4770      	bx	lr

08002024 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8002024:	8880      	ldrh	r0, [r0, #4]
 8002026:	4770      	bx	lr

08002028 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002028:	7983      	ldrb	r3, [r0, #6]
 800202a:	8880      	ldrh	r0, [r0, #4]
 800202c:	4418      	add	r0, r3
    }
 800202e:	b280      	uxth	r0, r0
 8002030:	4770      	bx	lr

08002032 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002032:	79c0      	ldrb	r0, [r0, #7]
    }
 8002034:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002038:	4770      	bx	lr

0800203a <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800203a:	79c0      	ldrb	r0, [r0, #7]
    }
 800203c:	09c0      	lsrs	r0, r0, #7
 800203e:	4770      	bx	lr

08002040 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002040:	2000      	movs	r0, #0
 8002042:	4770      	bx	lr

08002044 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002044:	8081      	strh	r1, [r0, #4]
    }
 8002046:	4770      	bx	lr

08002048 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002048:	80c1      	strh	r1, [r0, #6]
    }
 800204a:	4770      	bx	lr

0800204c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 800204c:	8101      	strh	r1, [r0, #8]
    }
 800204e:	4770      	bx	lr

08002050 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002050:	8141      	strh	r1, [r0, #10]
    }
 8002052:	4770      	bx	lr

08002054 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002054:	4770      	bx	lr

08002056 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
    }
 8002056:	4770      	bx	lr

08002058 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
    }
 8002058:	4770      	bx	lr

0800205a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
    }
 800205a:	4770      	bx	lr

0800205c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 800205c:	4770      	bx	lr

0800205e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800205e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002060:	88c4      	ldrh	r4, [r0, #6]
 8002062:	6803      	ldr	r3, [r0, #0]
 8002064:	1b12      	subs	r2, r2, r4
 8002066:	8884      	ldrh	r4, [r0, #4]
 8002068:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800206a:	1b09      	subs	r1, r1, r4
 800206c:	b212      	sxth	r2, r2
    }
 800206e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002072:	b209      	sxth	r1, r1
 8002074:	4718      	bx	r3

08002076 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002076:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800207a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800207c:	f04f 33ff 	mov.w	r3, #4294967295
 8002080:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002082:	6813      	ldr	r3, [r2, #0]
 8002084:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002086:	6010      	str	r0, [r2, #0]
    }
 8002088:	4770      	bx	lr

0800208a <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 800208a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800208c:	4770      	bx	lr

0800208e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 800208e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002092:	b11a      	cbz	r2, 800209c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002094:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002098:	b102      	cbz	r2, 800209c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800209a:	6018      	str	r0, [r3, #0]
        }
    }
 800209c:	4770      	bx	lr

0800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>:
    void setWidthHeight(int16_t width, int16_t height)
 800209e:	b570      	push	{r4, r5, r6, lr}
        setWidth(width);
 80020a0:	6803      	ldr	r3, [r0, #0]
    void setWidthHeight(int16_t width, int16_t height)
 80020a2:	4604      	mov	r4, r0
        setWidth(width);
 80020a4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    void setWidthHeight(int16_t width, int16_t height)
 80020a6:	4615      	mov	r5, r2
        setWidth(width);
 80020a8:	4798      	blx	r3
        setHeight(height);
 80020aa:	6823      	ldr	r3, [r4, #0]
 80020ac:	4629      	mov	r1, r5
 80020ae:	4620      	mov	r0, r4
 80020b0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    }
 80020b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80020b6:	4718      	bx	r3

080020b8 <_ZN8touchgfx3BoxC1Ev>:
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 80020b8:	4a09      	ldr	r2, [pc, #36]	; (80020e0 <_ZN8touchgfx3BoxC1Ev+0x28>)
 80020ba:	6002      	str	r2, [r0, #0]
          visible(true)
 80020bc:	f44f 7180 	mov.w	r1, #256	; 0x100
 80020c0:	2200      	movs	r2, #0
 80020c2:	8481      	strh	r1, [r0, #36]	; 0x24
 80020c4:	21ff      	movs	r1, #255	; 0xff
 80020c6:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80020ca:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80020ce:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80020d2:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80020d6:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
        : color(col)
 80020da:	6282      	str	r2, [r0, #40]	; 0x28
    {
    }
 80020dc:	4770      	bx	lr
 80020de:	bf00      	nop
 80020e0:	08029c38 	.word	0x08029c38

080020e4 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80020e4:	4770      	bx	lr

080020e6 <_ZN29CustomContainerButton_keyBaseD1Ev>:

class CustomContainerButton_keyBase : public touchgfx::Container
{
public:
    CustomContainerButton_keyBase();
    virtual ~CustomContainerButton_keyBase() {}
 80020e6:	4770      	bx	lr

080020e8 <_ZN29CustomContainerButton_keyBase19functionButtonClickEv>:
     * Virtual Action Handlers
     */
    virtual void functionButtonClick()
    {
        // Override and implement this function in CustomContainerButton_key
    }
 80020e8:	4770      	bx	lr

080020ea <_ZN29CustomContainerButton_keyBase29emitTriggerButton_keyCallbackEv>:
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitTriggerButton_keyCallback()
 80020ea:	b510      	push	{r4, lr}
 80020ec:	4604      	mov	r4, r0
    {
        if (triggerButton_keyCallback && triggerButton_keyCallback->isValid())
 80020ee:	f8d0 0110 	ldr.w	r0, [r0, #272]	; 0x110
 80020f2:	b150      	cbz	r0, 800210a <_ZN29CustomContainerButton_keyBase29emitTriggerButton_keyCallbackEv+0x20>
 80020f4:	6803      	ldr	r3, [r0, #0]
 80020f6:	68db      	ldr	r3, [r3, #12]
 80020f8:	4798      	blx	r3
 80020fa:	b130      	cbz	r0, 800210a <_ZN29CustomContainerButton_keyBase29emitTriggerButton_keyCallbackEv+0x20>
        {
            this->triggerButton_keyCallback->execute();
 80020fc:	f8d4 0110 	ldr.w	r0, [r4, #272]	; 0x110
 8002100:	6803      	ldr	r3, [r0, #0]
        }
    }
 8002102:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            this->triggerButton_keyCallback->execute();
 8002106:	689b      	ldr	r3, [r3, #8]
 8002108:	4718      	bx	r3
    }
 800210a:	bd10      	pop	{r4, pc}

0800210c <_ZN29CustomContainerButton_keyBase10initializeEv>:
}

void CustomContainerButton_keyBase::initialize()
{

}
 800210c:	4770      	bx	lr

0800210e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 800210e:	4770      	bx	lr

08002110 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 8002110:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8002114:	b12b      	cbz	r3, 8002122 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x12>
 8002116:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 8002118:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 800211a:	b123      	cbz	r3, 8002126 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x16>
 800211c:	6f43      	ldr	r3, [r0, #116]	; 0x74
     * @param  color The color of the border.
     * @see setColor, getBorderColor, Color::getColorFrom24BitRGB
     */
    void setBorderColor(colortype color)
    {
        borderColor = color;
 800211e:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 8002120:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 8002122:	6e82      	ldr	r2, [r0, #104]	; 0x68
 8002124:	e7f8      	b.n	8002118 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x8>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002126:	6f03      	ldr	r3, [r0, #112]	; 0x70
 8002128:	e7f9      	b.n	800211e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xe>

0800212a <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    TextAreaWithOneWildcard wildcardText; ///< The wildcard text
    colortype colorReleased;              ///< The color released
    colortype colorPressed;               ///< The color pressed

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 800212a:	b508      	push	{r3, lr}
    {
        wildcardText.setColor(T::getPressed() ? colorPressed : colorReleased);
 800212c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8002130:	b133      	cbz	r3, 8002140 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x16>
 8002132:	f8d0 30bc 	ldr.w	r3, [r0, #188]	; 0xbc
     *
     * @param  color The color to use.
     */
    FORCE_INLINE_FUNCTION void setColor(colortype color)
    {
        this->color = color;
 8002136:	f8c0 30a8 	str.w	r3, [r0, #168]	; 0xa8
        T::handlePressedUpdated();
 800213a:	f7ff ffe9 	bl	8002110 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 800213e:	bd08      	pop	{r3, pc}
        wildcardText.setColor(T::getPressed() ? colorPressed : colorReleased);
 8002140:	f8d0 30b8 	ldr.w	r3, [r0, #184]	; 0xb8
 8002144:	e7f7      	b.n	8002136 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0xc>

08002146 <_ZN8touchgfx8CallbackI29CustomContainerButton_keyBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002146:	4770      	bx	lr

08002148 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
class WildcardTextButtonStyle : public T
 8002148:	4770      	bx	lr

0800214a <_ZN8touchgfx8CallbackI29CustomContainerButton_keyBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 800214a:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun_1)(t1);
 800214c:	68c2      	ldr	r2, [r0, #12]
 800214e:	6844      	ldr	r4, [r0, #4]
 8002150:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002152:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8002154:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002158:	07d2      	lsls	r2, r2, #31
 800215a:	bf48      	it	mi
 800215c:	5962      	ldrmi	r2, [r4, r5]
 800215e:	689b      	ldr	r3, [r3, #8]
    }
 8002160:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002162:	bf48      	it	mi
 8002164:	58d3      	ldrmi	r3, [r2, r3]
 8002166:	4718      	bx	r3

08002168 <_ZNK8touchgfx8CallbackI29CustomContainerButton_keyBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_1 != 0);
 8002168:	6843      	ldr	r3, [r0, #4]
 800216a:	b12b      	cbz	r3, 8002178 <_ZNK8touchgfx8CallbackI29CustomContainerButton_keyBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 800216c:	6883      	ldr	r3, [r0, #8]
 800216e:	b92b      	cbnz	r3, 800217c <_ZNK8touchgfx8CallbackI29CustomContainerButton_keyBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002170:	68c0      	ldr	r0, [r0, #12]
 8002172:	f000 0001 	and.w	r0, r0, #1
 8002176:	4770      	bx	lr
 8002178:	4618      	mov	r0, r3
 800217a:	4770      	bx	lr
 800217c:	2001      	movs	r0, #1
    }
 800217e:	4770      	bx	lr

08002180 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        wildcardText.setAlpha(T::getAlpha());
 8002180:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002184:	f880 30ae 	strb.w	r3, [r0, #174]	; 0xae
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002188:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
        T::handleAlphaUpdated();
    }
 800218c:	4770      	bx	lr

0800218e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
 800218e:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8002192:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002196:	4770      	bx	lr

08002198 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002198:	b510      	push	{r4, lr}
    }
 800219a:	2108      	movs	r1, #8
    virtual ~TypedText()
 800219c:	4604      	mov	r4, r0
    }
 800219e:	f022 f91c 	bl	80243da <_ZdlPvj>
 80021a2:	4620      	mov	r0, r4
 80021a4:	bd10      	pop	{r4, pc}

080021a6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 80021a6:	b510      	push	{r4, lr}
 80021a8:	2178      	movs	r1, #120	; 0x78
 80021aa:	4604      	mov	r4, r0
 80021ac:	f022 f915 	bl	80243da <_ZdlPvj>
 80021b0:	4620      	mov	r0, r4
 80021b2:	bd10      	pop	{r4, pc}

080021b4 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class WildcardTextButtonStyle : public T
 80021b4:	b510      	push	{r4, lr}
 80021b6:	21c0      	movs	r1, #192	; 0xc0
 80021b8:	4604      	mov	r4, r0
 80021ba:	f022 f90e 	bl	80243da <_ZdlPvj>
 80021be:	4620      	mov	r0, r4
 80021c0:	bd10      	pop	{r4, pc}

080021c2 <_ZN8touchgfx8CallbackI29CustomContainerButton_keyBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80021c2:	b510      	push	{r4, lr}
 80021c4:	2110      	movs	r1, #16
 80021c6:	4604      	mov	r4, r0
 80021c8:	f022 f907 	bl	80243da <_ZdlPvj>
 80021cc:	4620      	mov	r0, r4
 80021ce:	bd10      	pop	{r4, pc}

080021d0 <_ZN29CustomContainerButton_keyBaseD0Ev>:
    virtual ~CustomContainerButton_keyBase() {}
 80021d0:	b510      	push	{r4, lr}
 80021d2:	f44f 718a 	mov.w	r1, #276	; 0x114
 80021d6:	4604      	mov	r4, r0
 80021d8:	f022 f8ff 	bl	80243da <_ZdlPvj>
 80021dc:	4620      	mov	r0, r4
 80021de:	bd10      	pop	{r4, pc}

080021e0 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 80021e0:	b510      	push	{r4, lr}
 80021e2:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 80021e4:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80021e6:	b150      	cbz	r0, 80021fe <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 80021e8:	6803      	ldr	r3, [r0, #0]
 80021ea:	68db      	ldr	r3, [r3, #12]
 80021ec:	4798      	blx	r3
 80021ee:	b130      	cbz	r0, 80021fe <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 80021f0:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80021f2:	6803      	ldr	r3, [r0, #0]
 80021f4:	4621      	mov	r1, r4
 80021f6:	689b      	ldr	r3, [r3, #8]
        }
    }
 80021f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 80021fc:	4718      	bx	r3
    }
 80021fe:	bd10      	pop	{r4, pc}

08002200 <_ZN29CustomContainerButton_keyBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

}

void CustomContainerButton_keyBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton_keyboard)
 8002200:	f100 032c 	add.w	r3, r0, #44	; 0x2c
 8002204:	428b      	cmp	r3, r1
{
 8002206:	b510      	push	{r4, lr}
 8002208:	4604      	mov	r4, r0
    if (&src == &flexButton_keyboard)
 800220a:	d10a      	bne.n	8002222 <_ZN29CustomContainerButton_keyBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
    {
        //Interaction1
        //When flexButton_keyboard clicked call virtual function
        //Call functionButtonClick
        functionButtonClick();
 800220c:	6803      	ldr	r3, [r0, #0]
 800220e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002212:	4798      	blx	r3

        //Interaction2
        //When flexButton_keyboard clicked emit triggerButton_key callback
        //Emit callback
        emitTriggerButton_keyCallback();
 8002214:	6823      	ldr	r3, [r4, #0]
 8002216:	4620      	mov	r0, r4
 8002218:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    }
}
 800221c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        emitTriggerButton_keyCallback();
 8002220:	4718      	bx	r3
}
 8002222:	bd10      	pop	{r4, pc}

08002224 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002224:	790b      	ldrb	r3, [r1, #4]
    virtual void handleClickEvent(const ClickEvent& event)
 8002226:	b570      	push	{r4, r5, r6, lr}
        bool wasPressed = getPressed();
 8002228:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
    virtual void handleClickEvent(const ClickEvent& event)
 800222c:	4604      	mov	r4, r0
 800222e:	460d      	mov	r5, r1
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002230:	b99b      	cbnz	r3, 800225a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 8002232:	b98e      	cbnz	r6, 8002258 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002234:	fab3 f383 	clz	r3, r3
 8002238:	095b      	lsrs	r3, r3, #5
 800223a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 800223e:	6823      	ldr	r3, [r4, #0]
 8002240:	4620      	mov	r0, r4
 8002242:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002246:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 8002248:	6823      	ldr	r3, [r4, #0]
 800224a:	4620      	mov	r0, r4
 800224c:	695b      	ldr	r3, [r3, #20]
 800224e:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002250:	b116      	cbz	r6, 8002258 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002252:	792b      	ldrb	r3, [r5, #4]
 8002254:	2b01      	cmp	r3, #1
 8002256:	d003      	beq.n	8002260 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 8002258:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 800225a:	2e00      	cmp	r6, #0
 800225c:	d0fc      	beq.n	8002258 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 800225e:	e7e9      	b.n	8002234 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002260:	6823      	ldr	r3, [r4, #0]
 8002262:	4620      	mov	r0, r4
 8002264:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    }
 8002268:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 800226c:	4718      	bx	r3
	...

08002270 <_ZN8touchgfx8DrawableC1Ev>:
 8002270:	4a07      	ldr	r2, [pc, #28]	; (8002290 <_ZN8touchgfx8DrawableC1Ev+0x20>)
 8002272:	6002      	str	r2, [r0, #0]
        : x(0), y(0), width(0), height(0)
 8002274:	2200      	movs	r2, #0
 8002276:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800227a:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800227e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002282:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002286:	f44f 7280 	mov.w	r2, #256	; 0x100
 800228a:	8482      	strh	r2, [r0, #36]	; 0x24
    }
 800228c:	4770      	bx	lr
 800228e:	bf00      	nop
 8002290:	0802a2b4 	.word	0x0802a2b4

08002294 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002294:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002296:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002298:	4604      	mov	r4, r0
        setX(x);
 800229a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    void setXY(int16_t x, int16_t y)
 800229c:	4615      	mov	r5, r2
        setX(x);
 800229e:	4798      	blx	r3
        setY(y);
 80022a0:	6823      	ldr	r3, [r4, #0]
 80022a2:	4629      	mov	r1, r5
 80022a4:	4620      	mov	r0, r4
 80022a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    }
 80022a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80022ac:	4718      	bx	r3
	...

080022b0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
    WildcardTextButtonStyle()
 80022b0:	b570      	push	{r4, r5, r6, lr}
 80022b2:	4604      	mov	r4, r0
          firstChild(0)
 80022b4:	f7ff ffdc 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
        : pressed(false), alpha(255), action(0)
 80022b8:	f44f 437f 	mov.w	r3, #65280	; 0xff00
        : T(), up(), down()
 80022bc:	4626      	mov	r6, r4
 80022be:	85a3      	strh	r3, [r4, #44]	; 0x2c
        touchable = touch;
 80022c0:	2301      	movs	r3, #1
 80022c2:	2500      	movs	r5, #0
 80022c4:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 80022c8:	4b22      	ldr	r3, [pc, #136]	; (8002354 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0xa4>)
 80022ca:	62a5      	str	r5, [r4, #40]	; 0x28
 80022cc:	6325      	str	r5, [r4, #48]	; 0x30
 80022ce:	f846 3b34 	str.w	r3, [r6], #52
        : Widget(), alpha(255), color(0)
 80022d2:	2226      	movs	r2, #38	; 0x26
 80022d4:	4629      	mov	r1, r5
 80022d6:	4630      	mov	r0, r6
 80022d8:	f022 fb54 	bl	8024984 <memset>
class Widget : public Drawable
 80022dc:	4630      	mov	r0, r6
 80022de:	f7ff ffc7 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 80022e2:	23ff      	movs	r3, #255	; 0xff
 80022e4:	f884 305a 	strb.w	r3, [r4, #90]	; 0x5a
        : Box(), borderColor(0), borderSize(0)
 80022e8:	4b1b      	ldr	r3, [pc, #108]	; (8002358 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0xa8>)
 80022ea:	6363      	str	r3, [r4, #52]	; 0x34
        T::add(borderBox);
 80022ec:	4631      	mov	r1, r6
 80022ee:	4620      	mov	r0, r4
        : T()
 80022f0:	4626      	mov	r6, r4
        : color(0)
 80022f2:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 80022f6:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 80022fa:	65e5      	str	r5, [r4, #92]	; 0x5c
 80022fc:	6625      	str	r5, [r4, #96]	; 0x60
 80022fe:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
        rect.x = x;
 8002302:	63a5      	str	r5, [r4, #56]	; 0x38
 8002304:	f00e f8e8 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002308:	4b14      	ldr	r3, [pc, #80]	; (800235c <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0xac>)
 800230a:	f846 3b78 	str.w	r3, [r6], #120
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 800230e:	2226      	movs	r2, #38	; 0x26
 8002310:	4629      	mov	r1, r5
 8002312:	4630      	mov	r0, r6
 8002314:	f022 fb36 	bl	8024984 <memset>
 8002318:	4630      	mov	r0, r6
 800231a:	f7ff ffa9 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
        : typedTextId(id)
 800231e:	4b10      	ldr	r3, [pc, #64]	; (8002360 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0xb0>)
 8002320:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
 8002324:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002328:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 800232c:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 8002330:	f8c4 30ac 	str.w	r3, [r4, #172]	; 0xac
 */
class TextAreaWithOneWildcard : public TextArea
{
public:
    TextAreaWithOneWildcard()
        : TextArea(), wildcard(0)
 8002334:	4b0b      	ldr	r3, [pc, #44]	; (8002364 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0xb4>)
 8002336:	f8c4 50a8 	str.w	r5, [r4, #168]	; 0xa8
        T::add(wildcardText);
 800233a:	4620      	mov	r0, r4
        : color(0)
 800233c:	e9c4 552d 	strd	r5, r5, [r4, #180]	; 0xb4
 8002340:	f8a4 50b0 	strh.w	r5, [r4, #176]	; 0xb0
 8002344:	67a3      	str	r3, [r4, #120]	; 0x78
 8002346:	f8c4 50bc 	str.w	r5, [r4, #188]	; 0xbc
 800234a:	4631      	mov	r1, r6
 800234c:	f00e f8c4 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8002350:	4620      	mov	r0, r4
 8002352:	bd70      	pop	{r4, r5, r6, pc}
 8002354:	08027124 	.word	0x08027124
 8002358:	08029ec4 	.word	0x08029ec4
 800235c:	080271bc 	.word	0x080271bc
 8002360:	08027114 	.word	0x08027114
 8002364:	08029da4 	.word	0x08029da4

08002368 <_ZN29CustomContainerButton_keyBaseC1Ev>:
CustomContainerButton_keyBase::CustomContainerButton_keyBase() :
 8002368:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800236c:	4604      	mov	r4, r0
    triggerButton_keyCallback(0)
 800236e:	4625      	mov	r5, r4
 8002370:	f7ff ff7e 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 8002374:	2600      	movs	r6, #0
 8002376:	4b49      	ldr	r3, [pc, #292]	; (800249c <_ZN29CustomContainerButton_keyBaseC1Ev+0x134>)
 8002378:	62a6      	str	r6, [r4, #40]	; 0x28
 800237a:	f845 3b2c 	str.w	r3, [r5], #44
 800237e:	4628      	mov	r0, r5
 8002380:	f7ff ff96 	bl	80022b0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8002384:	4b46      	ldr	r3, [pc, #280]	; (80024a0 <_ZN29CustomContainerButton_keyBaseC1Ev+0x138>)
 8002386:	f8c4 6110 	str.w	r6, [r4, #272]	; 0x110
 800238a:	e9c4 3440 	strd	r3, r4, [r4, #256]	; 0x100
 800238e:	4b45      	ldr	r3, [pc, #276]	; (80024a4 <_ZN29CustomContainerButton_keyBaseC1Ev+0x13c>)
 8002390:	e9c4 3642 	strd	r3, r6, [r4, #264]	; 0x108
        rect.width = width;
 8002394:	f04f 133c 	mov.w	r3, #3932220	; 0x3c003c
 8002398:	60a3      	str	r3, [r4, #8]
        borderBox.setPosition(x, y, width, height);
 800239a:	f104 0060 	add.w	r0, r4, #96	; 0x60
        setXY(x, y);
 800239e:	4632      	mov	r2, r6
 80023a0:	4631      	mov	r1, r6
 80023a2:	9001      	str	r0, [sp, #4]
 80023a4:	f7ff ff76 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80023a8:	223c      	movs	r2, #60	; 0x3c
 80023aa:	4611      	mov	r1, r2
 80023ac:	9801      	ldr	r0, [sp, #4]
 80023ae:	f7ff fe76 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 80023b2:	2301      	movs	r3, #1
 80023b4:	f8a4 3090 	strh.w	r3, [r4, #144]	; 0x90
        up = colorReleased;
 80023b8:	f1a3 1365 	sub.w	r3, r3, #6619237	; 0x650065
 80023bc:	f5a3 43c8 	sub.w	r3, r3, #25600	; 0x6400
 80023c0:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
        down = colorPressed;
 80023c4:	f103 1335 	add.w	r3, r3, #3473461	; 0x350035
 80023c8:	f503 5358 	add.w	r3, r3, #13824	; 0x3600
 80023cc:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        borderUp = borderColorReleased;
 80023d0:	4b35      	ldr	r3, [pc, #212]	; (80024a8 <_ZN29CustomContainerButton_keyBaseC1Ev+0x140>)
 80023d2:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
        borderDown = borderColorPressed;
 80023d6:	f503 2342 	add.w	r3, r3, #794624	; 0xc2000
 80023da:	f203 2339 	addw	r3, r3, #569	; 0x239
 80023de:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
        handlePressedUpdated();
 80023e2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80023e4:	4628      	mov	r0, r5
 80023e6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80023ea:	4798      	blx	r3
        wildcardText.setTypedText(t);
 80023ec:	f104 07a4 	add.w	r7, r4, #164	; 0xa4
 80023f0:	4b2e      	ldr	r3, [pc, #184]	; (80024ac <_ZN29CustomContainerButton_keyBaseC1Ev+0x144>)
 80023f2:	9302      	str	r3, [sp, #8]
 80023f4:	a902      	add	r1, sp, #8
 80023f6:	2313      	movs	r3, #19
 80023f8:	4638      	mov	r0, r7
 80023fa:	f8ad 300c 	strh.w	r3, [sp, #12]
 80023fe:	f00f fe4c 	bl	801209a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        wildcardText.setWidthHeight(T::getWidth(), T::getHeight());
 8002402:	f9b4 3036 	ldrsh.w	r3, [r4, #54]	; 0x36
        rect.height = height;
 8002406:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
    }

private:
    FORCE_INLINE_FUNCTION void assertValid() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800240a:	4b29      	ldr	r3, [pc, #164]	; (80024b0 <_ZN29CustomContainerButton_keyBaseC1Ev+0x148>)
        rect.width = width;
 800240c:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 800240e:	681b      	ldr	r3, [r3, #0]
 8002410:	f8a4 20ac 	strh.w	r2, [r4, #172]	; 0xac
    Unicode::snprintf(flexButton_keyboardBuffer, FLEXBUTTON_KEYBOARD_SIZE, "%s", TypedText(T_RESOURCEID11).getText());
 8002414:	f104 08ec 	add.w	r8, r4, #236	; 0xec
 8002418:	b92b      	cbnz	r3, 8002426 <_ZN29CustomContainerButton_keyBaseC1Ev+0xbe>
 800241a:	4b26      	ldr	r3, [pc, #152]	; (80024b4 <_ZN29CustomContainerButton_keyBaseC1Ev+0x14c>)
 800241c:	4a26      	ldr	r2, [pc, #152]	; (80024b8 <_ZN29CustomContainerButton_keyBaseC1Ev+0x150>)
 800241e:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8002420:	4826      	ldr	r0, [pc, #152]	; (80024bc <_ZN29CustomContainerButton_keyBaseC1Ev+0x154>)
 8002422:	f022 f809 	bl	8024438 <__assert_func>
 8002426:	4b26      	ldr	r3, [pc, #152]	; (80024c0 <_ZN29CustomContainerButton_keyBaseC1Ev+0x158>)
 8002428:	881b      	ldrh	r3, [r3, #0]
 800242a:	2b14      	cmp	r3, #20
 800242c:	d803      	bhi.n	8002436 <_ZN29CustomContainerButton_keyBaseC1Ev+0xce>
 800242e:	4b25      	ldr	r3, [pc, #148]	; (80024c4 <_ZN29CustomContainerButton_keyBaseC1Ev+0x15c>)
 8002430:	4a21      	ldr	r2, [pc, #132]	; (80024b8 <_ZN29CustomContainerButton_keyBaseC1Ev+0x150>)
 8002432:	21af      	movs	r1, #175	; 0xaf
 8002434:	e7f4      	b.n	8002420 <_ZN29CustomContainerButton_keyBaseC1Ev+0xb8>
        return texts->getText(typedTextId);
 8002436:	4b24      	ldr	r3, [pc, #144]	; (80024c8 <_ZN29CustomContainerButton_keyBaseC1Ev+0x160>)
 8002438:	2114      	movs	r1, #20
 800243a:	6818      	ldr	r0, [r3, #0]
 800243c:	f004 fd44 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 8002440:	4a22      	ldr	r2, [pc, #136]	; (80024cc <_ZN29CustomContainerButton_keyBaseC1Ev+0x164>)
 8002442:	4603      	mov	r3, r0
 8002444:	210a      	movs	r1, #10
 8002446:	4640      	mov	r0, r8
 8002448:	f015 feaa 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        setXY(x, y);
 800244c:	4631      	mov	r1, r6
 800244e:	4638      	mov	r0, r7
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
    {
        wildcard = value;
 8002450:	f8c4 80e0 	str.w	r8, [r4, #224]	; 0xe0
 8002454:	2212      	movs	r2, #18
 8002456:	f7ff ff1d 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 800245a:	223c      	movs	r2, #60	; 0x3c
 800245c:	4611      	mov	r1, r2
 800245e:	4638      	mov	r0, r7
 8002460:	f7ff fe1d 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
        colorReleased = newColorReleased;
 8002464:	4b1a      	ldr	r3, [pc, #104]	; (80024d0 <_ZN29CustomContainerButton_keyBaseC1Ev+0x168>)
        handlePressedUpdated();
 8002466:	4628      	mov	r0, r5
        colorPressed = newColorPressed;
 8002468:	e9c4 3339 	strd	r3, r3, [r4, #228]	; 0xe4
        handlePressedUpdated();
 800246c:	f7ff fe5d 	bl	800212a <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
        setXY(x, y);
 8002470:	4632      	mov	r2, r6
 8002472:	4631      	mov	r1, r6
 8002474:	4628      	mov	r0, r5
 8002476:	f7ff ff0d 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 800247a:	223c      	movs	r2, #60	; 0x3c
 800247c:	4611      	mov	r1, r2
 800247e:	4628      	mov	r0, r5
 8002480:	f7ff fe0d 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
    flexButton_keyboard.setAction(flexButtonCallback);
 8002484:	f504 7380 	add.w	r3, r4, #256	; 0x100
    add(flexButton_keyboard);
 8002488:	4620      	mov	r0, r4
        action = &callback;
 800248a:	65e3      	str	r3, [r4, #92]	; 0x5c
 800248c:	4629      	mov	r1, r5
 800248e:	f00e f823 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002492:	4620      	mov	r0, r4
 8002494:	b004      	add	sp, #16
 8002496:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800249a:	bf00      	nop
 800249c:	0802726c 	.word	0x0802726c
 80024a0:	08027254 	.word	0x08027254
 80024a4:	08002201 	.word	0x08002201
 80024a8:	ff626363 	.word	0xff626363
 80024ac:	08027114 	.word	0x08027114
 80024b0:	20020ae0 	.word	0x20020ae0
 80024b4:	08027000 	.word	0x08027000
 80024b8:	08027042 	.word	0x08027042
 80024bc:	08027070 	.word	0x08027070
 80024c0:	20020ae4 	.word	0x20020ae4
 80024c4:	080270b7 	.word	0x080270b7
 80024c8:	20020aec 	.word	0x20020aec
 80024cc:	08027109 	.word	0x08027109
 80024d0:	ff0a0a0a 	.word	0xff0a0a0a

080024d4 <_ZN27CustomContainerKeyboardBaseD1Ev>:

class CustomContainerKeyboardBase : public touchgfx::Container
{
public:
    CustomContainerKeyboardBase();
    virtual ~CustomContainerKeyboardBase() {}
 80024d4:	4770      	bx	lr

080024d6 <_ZN27CustomContainerKeyboardBase17ClickButtonDelPreEv>:
     * Virtual Action Handlers
     */
    virtual void ClickButtonDelPre()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 80024d6:	4770      	bx	lr

080024d8 <_ZN27CustomContainerKeyboardBase17ClickButtonDelAllEv>:

    virtual void ClickButtonDelAll()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 80024d8:	4770      	bx	lr

080024da <_ZN27CustomContainerKeyboardBase16ClickButtonShiftEv>:

    virtual void ClickButtonShift()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 80024da:	4770      	bx	lr

080024dc <_ZN27CustomContainerKeyboardBase24ClickButtonCloseKeyboardEv>:

    virtual void ClickButtonCloseKeyboard()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 80024dc:	4770      	bx	lr

080024de <_ZN27CustomContainerKeyboardBase19ClickButtonLanguageEv>:

    virtual void ClickButtonLanguage()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 80024de:	4770      	bx	lr

080024e0 <_ZN27CustomContainerKeyboardBase16ClickButtonSpaceEv>:

    virtual void ClickButtonSpace()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 80024e0:	4770      	bx	lr

080024e2 <_ZN27CustomContainerKeyboardBase16ClickButtonEnterEv>:

    virtual void ClickButtonEnter()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 80024e2:	4770      	bx	lr

080024e4 <_ZN27CustomContainerKeyboardBase17ClickButtonABC123Ev>:

    virtual void ClickButtonABC123()
    {
        // Override and implement this function in CustomContainerKeyboard
    }
 80024e4:	4770      	bx	lr

080024e6 <_ZN27CustomContainerKeyboardBase27emitTriggerKeyboardCallbackEv>:
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitTriggerKeyboardCallback()
 80024e6:	b570      	push	{r4, r5, r6, lr}
    {
        if (triggerKeyboardCallback && triggerKeyboardCallback->isValid())
 80024e8:	f642 45e4 	movw	r5, #11492	; 0x2ce4
    virtual void emitTriggerKeyboardCallback()
 80024ec:	4604      	mov	r4, r0
        if (triggerKeyboardCallback && triggerKeyboardCallback->isValid())
 80024ee:	5940      	ldr	r0, [r0, r5]
 80024f0:	b148      	cbz	r0, 8002506 <_ZN27CustomContainerKeyboardBase27emitTriggerKeyboardCallbackEv+0x20>
 80024f2:	6803      	ldr	r3, [r0, #0]
 80024f4:	68db      	ldr	r3, [r3, #12]
 80024f6:	4798      	blx	r3
 80024f8:	b128      	cbz	r0, 8002506 <_ZN27CustomContainerKeyboardBase27emitTriggerKeyboardCallbackEv+0x20>
        {
            this->triggerKeyboardCallback->execute();
 80024fa:	5960      	ldr	r0, [r4, r5]
 80024fc:	6803      	ldr	r3, [r0, #0]
        }
    }
 80024fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            this->triggerKeyboardCallback->execute();
 8002502:	689b      	ldr	r3, [r3, #8]
 8002504:	4718      	bx	r3
    }
 8002506:	bd70      	pop	{r4, r5, r6, pc}

08002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>:
void CustomContainerKeyboardBase::customContainer1TriggerButton_keyCallbackHandler()
{
    //Interaction8
    //When customContainer1 triggerButton_key call action1 on CustomContainerKeyboard
    //Call action1
    action1();
 8002508:	6803      	ldr	r3, [r0, #0]
 800250a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800250e:	4718      	bx	r3

08002510 <_ZN27CustomContainerKeyboardBase48customContainer2TriggerButton_keyCallbackHandlerEv>:
 8002510:	f7ff bffa 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002514 <_ZN27CustomContainerKeyboardBase48customContainer3TriggerButton_keyCallbackHandlerEv>:
 8002514:	f7ff bff8 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002518 <_ZN27CustomContainerKeyboardBase48customContainer4TriggerButton_keyCallbackHandlerEv>:
 8002518:	f7ff bff6 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

0800251c <_ZN27CustomContainerKeyboardBase48customContainer5TriggerButton_keyCallbackHandlerEv>:
 800251c:	f7ff bff4 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002520 <_ZN27CustomContainerKeyboardBase48customContainer6TriggerButton_keyCallbackHandlerEv>:
 8002520:	f7ff bff2 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002524 <_ZN27CustomContainerKeyboardBase48customContainer7TriggerButton_keyCallbackHandlerEv>:
 8002524:	f7ff bff0 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002528 <_ZN27CustomContainerKeyboardBase48customContainer8TriggerButton_keyCallbackHandlerEv>:
 8002528:	f7ff bfee 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

0800252c <_ZN27CustomContainerKeyboardBase48customContainer9TriggerButton_keyCallbackHandlerEv>:
 800252c:	f7ff bfec 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002530 <_ZN27CustomContainerKeyboardBase49customContainer10TriggerButton_keyCallbackHandlerEv>:
 8002530:	f7ff bfea 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002534 <_ZN27CustomContainerKeyboardBase49customContainer11TriggerButton_keyCallbackHandlerEv>:
 8002534:	f7ff bfe8 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002538 <_ZN27CustomContainerKeyboardBase49customContainer12TriggerButton_keyCallbackHandlerEv>:
 8002538:	f7ff bfe6 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

0800253c <_ZN27CustomContainerKeyboardBase50customContainer1_1TriggerButton_keyCallbackHandlerEv>:
 800253c:	f7ff bfe4 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002540 <_ZN27CustomContainerKeyboardBase50customContainer2_1TriggerButton_keyCallbackHandlerEv>:
 8002540:	f7ff bfe2 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002544 <_ZN27CustomContainerKeyboardBase50customContainer3_1TriggerButton_keyCallbackHandlerEv>:
 8002544:	f7ff bfe0 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002548 <_ZN27CustomContainerKeyboardBase50customContainer4_1TriggerButton_keyCallbackHandlerEv>:
 8002548:	f7ff bfde 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

0800254c <_ZN27CustomContainerKeyboardBase50customContainer5_1TriggerButton_keyCallbackHandlerEv>:
 800254c:	f7ff bfdc 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002550 <_ZN27CustomContainerKeyboardBase50customContainer6_1TriggerButton_keyCallbackHandlerEv>:
 8002550:	f7ff bfda 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002554 <_ZN27CustomContainerKeyboardBase50customContainer7_1TriggerButton_keyCallbackHandlerEv>:
 8002554:	f7ff bfd8 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002558 <_ZN27CustomContainerKeyboardBase50customContainer8_1TriggerButton_keyCallbackHandlerEv>:
 8002558:	f7ff bfd6 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

0800255c <_ZN27CustomContainerKeyboardBase50customContainer9_1TriggerButton_keyCallbackHandlerEv>:
 800255c:	f7ff bfd4 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002560 <_ZN27CustomContainerKeyboardBase51customContainer10_1TriggerButton_keyCallbackHandlerEv>:
 8002560:	f7ff bfd2 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002564 <_ZN27CustomContainerKeyboardBase50customContainer1_2TriggerButton_keyCallbackHandlerEv>:
 8002564:	f7ff bfd0 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002568 <_ZN27CustomContainerKeyboardBase50customContainer2_2TriggerButton_keyCallbackHandlerEv>:
 8002568:	f7ff bfce 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

0800256c <_ZN27CustomContainerKeyboardBase50customContainer3_2TriggerButton_keyCallbackHandlerEv>:
 800256c:	f7ff bfcc 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002570 <_ZN27CustomContainerKeyboardBase50customContainer4_2TriggerButton_keyCallbackHandlerEv>:
 8002570:	f7ff bfca 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002574 <_ZN27CustomContainerKeyboardBase50customContainer5_2TriggerButton_keyCallbackHandlerEv>:
 8002574:	f7ff bfc8 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002578 <_ZN27CustomContainerKeyboardBase50customContainer6_2TriggerButton_keyCallbackHandlerEv>:
 8002578:	f7ff bfc6 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

0800257c <_ZN27CustomContainerKeyboardBase50customContainer7_2TriggerButton_keyCallbackHandlerEv>:
 800257c:	f7ff bfc4 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002580 <_ZN27CustomContainerKeyboardBase50customContainer8_2TriggerButton_keyCallbackHandlerEv>:
 8002580:	f7ff bfc2 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002584 <_ZN27CustomContainerKeyboardBase50customContainer9_2TriggerButton_keyCallbackHandlerEv>:
 8002584:	f7ff bfc0 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002588 <_ZN27CustomContainerKeyboardBase51customContainer10_2TriggerButton_keyCallbackHandlerEv>:
 8002588:	f7ff bfbe 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

0800258c <_ZN27CustomContainerKeyboardBase51customContainer11_1TriggerButton_keyCallbackHandlerEv>:
 800258c:	f7ff bfbc 	b.w	8002508 <_ZN27CustomContainerKeyboardBase48customContainer1TriggerButton_keyCallbackHandlerEv>

08002590 <_ZN27CustomContainerKeyboardBase7action1Ev>:
}

void CustomContainerKeyboardBase::action1()
{

}
 8002590:	4770      	bx	lr

08002592 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    TextArea text;           ///< The text
    colortype colorReleased; ///< The color released
    colortype colorPressed;  ///< The color pressed

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 8002592:	b508      	push	{r3, lr}
    {
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
 8002594:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8002598:	b133      	cbz	r3, 80025a8 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x16>
 800259a:	f8d0 30b8 	ldr.w	r3, [r0, #184]	; 0xb8
        this->color = color;
 800259e:	f8c0 30a8 	str.w	r3, [r0, #168]	; 0xa8
        T::handlePressedUpdated();
 80025a2:	f7ff fdb5 	bl	8002110 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 80025a6:	bd08      	pop	{r3, pc}
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
 80025a8:	f8d0 30b4 	ldr.w	r3, [r0, #180]	; 0xb4
 80025ac:	e7f7      	b.n	800259e <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0xc>

080025ae <_ZN8touchgfx8CallbackI27CustomContainerKeyboardBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80025ae:	4770      	bx	lr

080025b0 <_ZN8touchgfx8CallbackI27CustomContainerKeyboardBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80025b0:	4770      	bx	lr

080025b2 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
class TextButtonStyle : public T
 80025b2:	4770      	bx	lr

080025b4 <_ZN8touchgfx8CallbackI27CustomContainerKeyboardBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80025b4:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 80025b6:	68c2      	ldr	r2, [r0, #12]
 80025b8:	6841      	ldr	r1, [r0, #4]
 80025ba:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80025bc:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 80025be:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80025c2:	07d2      	lsls	r2, r2, #31
 80025c4:	bf48      	it	mi
 80025c6:	590a      	ldrmi	r2, [r1, r4]
 80025c8:	689b      	ldr	r3, [r3, #8]
    }
 80025ca:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 80025ce:	bf48      	it	mi
 80025d0:	58d3      	ldrmi	r3, [r2, r3]
 80025d2:	4718      	bx	r3

080025d4 <_ZNK8touchgfx8CallbackI27CustomContainerKeyboardBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 80025d4:	6843      	ldr	r3, [r0, #4]
 80025d6:	b12b      	cbz	r3, 80025e4 <_ZNK8touchgfx8CallbackI27CustomContainerKeyboardBasevvvE7isValidEv+0x10>
 80025d8:	6883      	ldr	r3, [r0, #8]
 80025da:	b92b      	cbnz	r3, 80025e8 <_ZNK8touchgfx8CallbackI27CustomContainerKeyboardBasevvvE7isValidEv+0x14>
 80025dc:	68c0      	ldr	r0, [r0, #12]
 80025de:	f000 0001 	and.w	r0, r0, #1
 80025e2:	4770      	bx	lr
 80025e4:	4618      	mov	r0, r3
 80025e6:	4770      	bx	lr
 80025e8:	2001      	movs	r0, #1
    }
 80025ea:	4770      	bx	lr

080025ec <_ZN8touchgfx8CallbackI27CustomContainerKeyboardBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80025ec:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80025ee:	68c2      	ldr	r2, [r0, #12]
 80025f0:	6844      	ldr	r4, [r0, #4]
 80025f2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80025f4:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80025f6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80025fa:	07d2      	lsls	r2, r2, #31
 80025fc:	bf48      	it	mi
 80025fe:	5962      	ldrmi	r2, [r4, r5]
 8002600:	689b      	ldr	r3, [r3, #8]
    }
 8002602:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002604:	bf48      	it	mi
 8002606:	58d3      	ldrmi	r3, [r2, r3]
 8002608:	4718      	bx	r3

0800260a <_ZNK8touchgfx8CallbackI27CustomContainerKeyboardBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 800260a:	6843      	ldr	r3, [r0, #4]
 800260c:	b12b      	cbz	r3, 800261a <_ZNK8touchgfx8CallbackI27CustomContainerKeyboardBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 800260e:	6883      	ldr	r3, [r0, #8]
 8002610:	b92b      	cbnz	r3, 800261e <_ZNK8touchgfx8CallbackI27CustomContainerKeyboardBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002612:	68c0      	ldr	r0, [r0, #12]
 8002614:	f000 0001 	and.w	r0, r0, #1
 8002618:	4770      	bx	lr
 800261a:	4618      	mov	r0, r3
 800261c:	4770      	bx	lr
 800261e:	2001      	movs	r0, #1
    }
 8002620:	4770      	bx	lr

08002622 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        text.setAlpha(T::getAlpha());
 8002622:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
        alpha = newAlpha;
 8002626:	f880 30ae 	strb.w	r3, [r0, #174]	; 0xae
        alpha = newAlpha;
 800262a:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
        T::handleAlphaUpdated();
    }
 800262e:	4770      	bx	lr

08002630 <_ZN8touchgfx8CallbackI27CustomContainerKeyboardBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002630:	b510      	push	{r4, lr}
 8002632:	2110      	movs	r1, #16
 8002634:	4604      	mov	r4, r0
 8002636:	f021 fed0 	bl	80243da <_ZdlPvj>
 800263a:	4620      	mov	r0, r4
 800263c:	bd10      	pop	{r4, pc}

0800263e <_ZN8touchgfx8CallbackI27CustomContainerKeyboardBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800263e:	b510      	push	{r4, lr}
 8002640:	2110      	movs	r1, #16
 8002642:	4604      	mov	r4, r0
 8002644:	f021 fec9 	bl	80243da <_ZdlPvj>
 8002648:	4620      	mov	r0, r4
 800264a:	bd10      	pop	{r4, pc}

0800264c <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class TextButtonStyle : public T
 800264c:	b510      	push	{r4, lr}
 800264e:	21bc      	movs	r1, #188	; 0xbc
 8002650:	4604      	mov	r4, r0
 8002652:	f021 fec2 	bl	80243da <_ZdlPvj>
 8002656:	4620      	mov	r0, r4
 8002658:	bd10      	pop	{r4, pc}

0800265a <_ZN27CustomContainerKeyboardBaseD0Ev>:
    virtual ~CustomContainerKeyboardBase() {}
 800265a:	b510      	push	{r4, lr}
 800265c:	f642 41e8 	movw	r1, #11496	; 0x2ce8
 8002660:	4604      	mov	r4, r0
 8002662:	f021 feba 	bl	80243da <_ZdlPvj>
 8002666:	4620      	mov	r0, r4
 8002668:	bd10      	pop	{r4, pc}

0800266a <_ZN27CustomContainerKeyboardBase10initializeEv>:
{
 800266a:	b510      	push	{r4, lr}
 800266c:	4604      	mov	r4, r0
    customContainer1.initialize();
 800266e:	3060      	adds	r0, #96	; 0x60
 8002670:	f004 fc5a 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer2.initialize();
 8002674:	f504 70ba 	add.w	r0, r4, #372	; 0x174
 8002678:	f004 fc56 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer3.initialize();
 800267c:	f504 7022 	add.w	r0, r4, #648	; 0x288
 8002680:	f004 fc52 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer4.initialize();
 8002684:	f504 7067 	add.w	r0, r4, #924	; 0x39c
 8002688:	f004 fc4e 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer5.initialize();
 800268c:	f504 6096 	add.w	r0, r4, #1200	; 0x4b0
 8002690:	f004 fc4a 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer6.initialize();
 8002694:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8002698:	f004 fc46 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer7.initialize();
 800269c:	f504 60db 	add.w	r0, r4, #1752	; 0x6d8
 80026a0:	f004 fc42 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer8.initialize();
 80026a4:	f204 70ec 	addw	r0, r4, #2028	; 0x7ec
 80026a8:	f004 fc3e 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer9.initialize();
 80026ac:	f504 6010 	add.w	r0, r4, #2304	; 0x900
 80026b0:	f004 fc3a 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer10.initialize();
 80026b4:	f604 2014 	addw	r0, r4, #2580	; 0xa14
 80026b8:	f004 fc36 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer1_1.initialize();
 80026bc:	f604 3028 	addw	r0, r4, #2856	; 0xb28
 80026c0:	f004 fc32 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer2_1.initialize();
 80026c4:	f604 403c 	addw	r0, r4, #3132	; 0xc3c
 80026c8:	f004 fc2e 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer3_1.initialize();
 80026cc:	f504 6055 	add.w	r0, r4, #3408	; 0xd50
 80026d0:	f004 fc2a 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer4_1.initialize();
 80026d4:	f604 6064 	addw	r0, r4, #3684	; 0xe64
 80026d8:	f004 fc26 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer5_1.initialize();
 80026dc:	f604 7078 	addw	r0, r4, #3960	; 0xf78
 80026e0:	f004 fc22 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer6_1.initialize();
 80026e4:	f504 5084 	add.w	r0, r4, #4224	; 0x1080
 80026e8:	300c      	adds	r0, #12
 80026ea:	f004 fc1d 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer7_1.initialize();
 80026ee:	f504 508d 	add.w	r0, r4, #4512	; 0x11a0
 80026f2:	f004 fc19 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer8_1.initialize();
 80026f6:	f504 5095 	add.w	r0, r4, #4768	; 0x12a0
 80026fa:	3014      	adds	r0, #20
 80026fc:	f004 fc14 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer9_1.initialize();
 8002700:	f504 509e 	add.w	r0, r4, #5056	; 0x13c0
 8002704:	3008      	adds	r0, #8
 8002706:	f004 fc0f 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer10_1.initialize();
 800270a:	f504 50a6 	add.w	r0, r4, #5312	; 0x14c0
 800270e:	301c      	adds	r0, #28
 8002710:	f004 fc0a 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer1_2.initialize();
 8002714:	f504 50af 	add.w	r0, r4, #5600	; 0x15e0
 8002718:	3010      	adds	r0, #16
 800271a:	f004 fc05 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer2_2.initialize();
 800271e:	f504 50b8 	add.w	r0, r4, #5888	; 0x1700
 8002722:	3004      	adds	r0, #4
 8002724:	f004 fc00 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer3_2.initialize();
 8002728:	f504 50c0 	add.w	r0, r4, #6144	; 0x1800
 800272c:	3018      	adds	r0, #24
 800272e:	f004 fbfb 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer4_2.initialize();
 8002732:	f504 50c9 	add.w	r0, r4, #6432	; 0x1920
 8002736:	300c      	adds	r0, #12
 8002738:	f004 fbf6 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer5_2.initialize();
 800273c:	f504 50d2 	add.w	r0, r4, #6720	; 0x1a40
 8002740:	f004 fbf2 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer6_2.initialize();
 8002744:	f504 50da 	add.w	r0, r4, #6976	; 0x1b40
 8002748:	3014      	adds	r0, #20
 800274a:	f004 fbed 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer7_2.initialize();
 800274e:	f504 50e3 	add.w	r0, r4, #7264	; 0x1c60
 8002752:	3008      	adds	r0, #8
 8002754:	f004 fbe8 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer8_2.initialize();
 8002758:	f504 50eb 	add.w	r0, r4, #7520	; 0x1d60
 800275c:	301c      	adds	r0, #28
 800275e:	f004 fbe3 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer9_2.initialize();
 8002762:	f504 50f4 	add.w	r0, r4, #7808	; 0x1e80
 8002766:	3010      	adds	r0, #16
 8002768:	f004 fbde 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer10_2.initialize();
 800276c:	f504 50fd 	add.w	r0, r4, #8096	; 0x1fa0
 8002770:	3004      	adds	r0, #4
 8002772:	f004 fbd9 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer11_1.initialize();
 8002776:	f504 500c 	add.w	r0, r4, #8960	; 0x2300
 800277a:	3034      	adds	r0, #52	; 0x34
 800277c:	f004 fbd4 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer11.initialize();
 8002780:	f504 5011 	add.w	r0, r4, #9280	; 0x2440
 8002784:	3008      	adds	r0, #8
 8002786:	f004 fbcf 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainer12.initialize();
 800278a:	f504 5015 	add.w	r0, r4, #9536	; 0x2540
 800278e:	301c      	adds	r0, #28
}
 8002790:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    customContainer12.initialize();
 8002794:	f004 bbc8 	b.w	8006f28 <_ZN25CustomContainerButton_key10initializeEv>

08002798 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void CustomContainerKeyboardBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton_enter)
 8002798:	f500 5303 	add.w	r3, r0, #8384	; 0x20c0
 800279c:	3338      	adds	r3, #56	; 0x38
 800279e:	4299      	cmp	r1, r3
{
 80027a0:	b510      	push	{r4, lr}
 80027a2:	4604      	mov	r4, r0
    if (&src == &flexButton_enter)
 80027a4:	d10a      	bne.n	80027bc <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x24>
    {
        //ClickButtonEnter
        //When flexButton_enter clicked call virtual function
        //Call ClickButtonEnter
        ClickButtonEnter();
 80027a6:	6803      	ldr	r3, [r0, #0]
 80027a8:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80027ac:	4798      	blx	r3

        //Interaction42
        //When flexButton_enter clicked emit triggerKeyboard callback
        //Emit callback
        emitTriggerKeyboardCallback();
 80027ae:	6823      	ldr	r3, [r4, #0]
 80027b0:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 80027b4:	4620      	mov	r0, r4
        //Interaction43
        //When flexButton_ABC_123 clicked call virtual function
        //Call ClickButtonABC123
        ClickButtonABC123();
    }
}
 80027b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        ClickButtonABC123();
 80027ba:	4718      	bx	r3
    else if (&src == &flexButton_space)
 80027bc:	f500 5306 	add.w	r3, r0, #8576	; 0x2180
 80027c0:	3334      	adds	r3, #52	; 0x34
 80027c2:	4299      	cmp	r1, r3
 80027c4:	d103      	bne.n	80027ce <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x36>
        ClickButtonSpace();
 80027c6:	6803      	ldr	r3, [r0, #0]
 80027c8:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 80027cc:	e7f3      	b.n	80027b6 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
    else if (&src == &flexButton_language)
 80027ce:	f500 5309 	add.w	r3, r0, #8768	; 0x2240
 80027d2:	3334      	adds	r3, #52	; 0x34
 80027d4:	4299      	cmp	r1, r3
 80027d6:	d103      	bne.n	80027e0 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x48>
        ClickButtonLanguage();
 80027d8:	6803      	ldr	r3, [r0, #0]
 80027da:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 80027de:	e7ea      	b.n	80027b6 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
    else if (&src == &flexButton_close)
 80027e0:	f500 5319 	add.w	r3, r0, #9792	; 0x2640
 80027e4:	3330      	adds	r3, #48	; 0x30
 80027e6:	4299      	cmp	r1, r3
 80027e8:	d103      	bne.n	80027f2 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x5a>
        ClickButtonCloseKeyboard();
 80027ea:	6803      	ldr	r3, [r0, #0]
 80027ec:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80027f0:	e7e1      	b.n	80027b6 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
    else if (&src == &flexButton_shift)
 80027f2:	f500 531c 	add.w	r3, r0, #9984	; 0x2700
 80027f6:	3330      	adds	r3, #48	; 0x30
 80027f8:	4299      	cmp	r1, r3
 80027fa:	d103      	bne.n	8002804 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x6c>
        ClickButtonShift();
 80027fc:	6803      	ldr	r3, [r0, #0]
 80027fe:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8002802:	e7d8      	b.n	80027b6 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
    else if (&src == &flexButton_del_all)
 8002804:	f500 531f 	add.w	r3, r0, #10176	; 0x27c0
 8002808:	332c      	adds	r3, #44	; 0x2c
 800280a:	4299      	cmp	r1, r3
 800280c:	d103      	bne.n	8002816 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x7e>
        ClickButtonDelAll();
 800280e:	6803      	ldr	r3, [r0, #0]
 8002810:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8002814:	e7cf      	b.n	80027b6 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
    else if (&src == &flexButton_del_pre)
 8002816:	f500 5322 	add.w	r3, r0, #10368	; 0x2880
 800281a:	3328      	adds	r3, #40	; 0x28
 800281c:	4299      	cmp	r1, r3
 800281e:	d103      	bne.n	8002828 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x90>
        ClickButtonDelPre();
 8002820:	6803      	ldr	r3, [r0, #0]
 8002822:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002826:	e7c6      	b.n	80027b6 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
    else if (&src == &flexButton_ABC_123)
 8002828:	f500 5325 	add.w	r3, r0, #10560	; 0x2940
 800282c:	3324      	adds	r3, #36	; 0x24
 800282e:	4299      	cmp	r1, r3
 8002830:	d103      	bne.n	800283a <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa2>
        ClickButtonABC123();
 8002832:	6803      	ldr	r3, [r0, #0]
 8002834:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8002838:	e7bd      	b.n	80027b6 <_ZN27CustomContainerKeyboardBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
}
 800283a:	bd10      	pop	{r4, pc}

0800283c <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800283c:	b538      	push	{r3, r4, r5, lr}
 800283e:	4604      	mov	r4, r0
 8002840:	461d      	mov	r5, r3
        setXY(x, y);
 8002842:	f7ff fd27 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8002846:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800284a:	4629      	mov	r1, r5
 800284c:	4620      	mov	r0, r4
 800284e:	f7ff fc26 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 8002852:	bd38      	pop	{r3, r4, r5, pc}

08002854 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002854:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8002856:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002858:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 800285a:	2100      	movs	r1, #0
 800285c:	f022 f892 	bl	8024984 <memset>
 8002860:	4620      	mov	r0, r4
 8002862:	f7ff fd05 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 8002866:	4b07      	ldr	r3, [pc, #28]	; (8002884 <_ZN8touchgfx8TextAreaC1Ev+0x30>)
 8002868:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 800286a:	4b07      	ldr	r3, [pc, #28]	; (8002888 <_ZN8touchgfx8TextAreaC1Ev+0x34>)
 800286c:	62a3      	str	r3, [r4, #40]	; 0x28
 800286e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002872:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002874:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002878:	2300      	movs	r3, #0
 800287a:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 800287e:	8723      	strh	r3, [r4, #56]	; 0x38
    }
 8002880:	4620      	mov	r0, r4
 8002882:	bd10      	pop	{r4, pc}
 8002884:	08029b90 	.word	0x08029b90
 8002888:	08027114 	.word	0x08027114

0800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 800288c:	b410      	push	{r4}
        borderUp = borderColorReleased;
 800288e:	6703      	str	r3, [r0, #112]	; 0x70
        borderDown = borderColorPressed;
 8002890:	9b01      	ldr	r3, [sp, #4]
 8002892:	6743      	str	r3, [r0, #116]	; 0x74
        handlePressedUpdated();
 8002894:	6803      	ldr	r3, [r0, #0]
    }
 8002896:	f85d 4b04 	ldr.w	r4, [sp], #4
        handlePressedUpdated();
 800289a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
        down = colorPressed;
 800289e:	e9c0 121a 	strd	r1, r2, [r0, #104]	; 0x68
        handlePressedUpdated();
 80028a2:	4718      	bx	r3

080028a4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>:
    void setText(TypedText t)
 80028a4:	b513      	push	{r0, r1, r4, lr}
 80028a6:	4604      	mov	r4, r0
        text.setTypedText(t);
 80028a8:	3078      	adds	r0, #120	; 0x78
 80028aa:	9001      	str	r0, [sp, #4]
 80028ac:	f00f fbf5 	bl	801209a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        setWidthHeight(drawable.getWidth(), drawable.getHeight());
 80028b0:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80028b4:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80028b8:	9801      	ldr	r0, [sp, #4]
 80028ba:	f7ff fbf0 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 80028be:	b002      	add	sp, #8
 80028c0:	bd10      	pop	{r4, pc}

080028c2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>:
    void setWildcardText(TypedText t)
 80028c2:	b513      	push	{r0, r1, r4, lr}
 80028c4:	4604      	mov	r4, r0
        wildcardText.setTypedText(t);
 80028c6:	3078      	adds	r0, #120	; 0x78
 80028c8:	9001      	str	r0, [sp, #4]
 80028ca:	f00f fbe6 	bl	801209a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        wildcardText.setWidthHeight(T::getWidth(), T::getHeight());
 80028ce:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80028d2:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80028d6:	9801      	ldr	r0, [sp, #4]
 80028d8:	f7ff fbe1 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 80028dc:	b002      	add	sp, #8
 80028de:	bd10      	pop	{r4, pc}

080028e0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
    BoxWithBorderButtonStyle()
 80028e0:	b570      	push	{r4, r5, r6, lr}
 80028e2:	4604      	mov	r4, r0
 80028e4:	f7ff fcc4 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
        : pressed(false), alpha(255), action(0)
 80028e8:	f44f 437f 	mov.w	r3, #65280	; 0xff00
        : T(), up(), down()
 80028ec:	4626      	mov	r6, r4
 80028ee:	85a3      	strh	r3, [r4, #44]	; 0x2c
        touchable = touch;
 80028f0:	2301      	movs	r3, #1
 80028f2:	2500      	movs	r5, #0
 80028f4:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 80028f8:	4b0d      	ldr	r3, [pc, #52]	; (8002930 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x50>)
 80028fa:	62a5      	str	r5, [r4, #40]	; 0x28
 80028fc:	6325      	str	r5, [r4, #48]	; 0x30
 80028fe:	f846 3b34 	str.w	r3, [r6], #52
        : Box(), borderColor(0), borderSize(0)
 8002902:	4630      	mov	r0, r6
 8002904:	f7ff fbd8 	bl	80020b8 <_ZN8touchgfx3BoxC1Ev>
 8002908:	4b0a      	ldr	r3, [pc, #40]	; (8002934 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x54>)
 800290a:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 800290c:	462a      	mov	r2, r5
 800290e:	4629      	mov	r1, r5
 8002910:	4630      	mov	r0, r6
 8002912:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8002916:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 800291a:	6625      	str	r5, [r4, #96]	; 0x60
 800291c:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8002920:	f7ff fcb8 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8002924:	4620      	mov	r0, r4
 8002926:	4631      	mov	r1, r6
 8002928:	f00d fdd6 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800292c:	4620      	mov	r0, r4
 800292e:	bd70      	pop	{r4, r5, r6, pc}
 8002930:	08027124 	.word	0x08027124
 8002934:	08029ec4 	.word	0x08029ec4

08002938 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
    TextButtonStyle()
 8002938:	b538      	push	{r3, r4, r5, lr}
 800293a:	4604      	mov	r4, r0
        : T()
 800293c:	4625      	mov	r5, r4
 800293e:	f7ff ffcf 	bl	80028e0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002942:	4b07      	ldr	r3, [pc, #28]	; (8002960 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x28>)
 8002944:	f845 3b78 	str.w	r3, [r5], #120
 8002948:	4628      	mov	r0, r5
 800294a:	f7ff ff83 	bl	8002854 <_ZN8touchgfx8TextAreaC1Ev>
        : color(0)
 800294e:	2300      	movs	r3, #0
        T::add(text);
 8002950:	4620      	mov	r0, r4
 8002952:	e9c4 332d 	strd	r3, r3, [r4, #180]	; 0xb4
 8002956:	4629      	mov	r1, r5
 8002958:	f00d fdbe 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800295c:	4620      	mov	r0, r4
 800295e:	bd38      	pop	{r3, r4, r5, pc}
 8002960:	08027308 	.word	0x08027308

08002964 <_ZN27CustomContainerKeyboardBaseC1Ev>:
CustomContainerKeyboardBase::CustomContainerKeyboardBase() :
 8002964:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002968:	ed2d 8b10 	vpush	{d8-d15}
 800296c:	4604      	mov	r4, r0
 800296e:	b0bd      	sub	sp, #244	; 0xf4
 8002970:	f7ff fc7e 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
    triggerKeyboardCallback(0)
 8002974:	4622      	mov	r2, r4
 8002976:	2500      	movs	r5, #0
 8002978:	4bd4      	ldr	r3, [pc, #848]	; (8002ccc <_ZN27CustomContainerKeyboardBaseC1Ev+0x368>)
 800297a:	62a5      	str	r5, [r4, #40]	; 0x28
 800297c:	f842 3b2c 	str.w	r3, [r2], #44
 8002980:	4610      	mov	r0, r2
 8002982:	ee0a 2a90 	vmov	s21, r2
 8002986:	f7ff fb97 	bl	80020b8 <_ZN8touchgfx3BoxC1Ev>
 800298a:	4bd1      	ldr	r3, [pc, #836]	; (8002cd0 <_ZN27CustomContainerKeyboardBaseC1Ev+0x36c>)
 800298c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800298e:	f104 0360 	add.w	r3, r4, #96	; 0x60
 8002992:	4618      	mov	r0, r3
        : color(col)
 8002994:	65a5      	str	r5, [r4, #88]	; 0x58
 8002996:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800299a:	930b      	str	r3, [sp, #44]	; 0x2c
 800299c:	f004 face 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 80029a0:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 80029a4:	4618      	mov	r0, r3
 80029a6:	930c      	str	r3, [sp, #48]	; 0x30
 80029a8:	f004 fac8 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 80029ac:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80029b0:	4618      	mov	r0, r3
 80029b2:	930d      	str	r3, [sp, #52]	; 0x34
 80029b4:	f004 fac2 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 80029b8:	f504 7367 	add.w	r3, r4, #924	; 0x39c
 80029bc:	4618      	mov	r0, r3
 80029be:	930e      	str	r3, [sp, #56]	; 0x38
 80029c0:	f004 fabc 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 80029c4:	f504 6396 	add.w	r3, r4, #1200	; 0x4b0
 80029c8:	4618      	mov	r0, r3
 80029ca:	930f      	str	r3, [sp, #60]	; 0x3c
 80029cc:	f004 fab6 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 80029d0:	f204 53c4 	addw	r3, r4, #1476	; 0x5c4
 80029d4:	4618      	mov	r0, r3
 80029d6:	9310      	str	r3, [sp, #64]	; 0x40
 80029d8:	f004 fab0 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 80029dc:	f504 63db 	add.w	r3, r4, #1752	; 0x6d8
 80029e0:	4618      	mov	r0, r3
 80029e2:	9311      	str	r3, [sp, #68]	; 0x44
 80029e4:	f004 faaa 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 80029e8:	f204 73ec 	addw	r3, r4, #2028	; 0x7ec
 80029ec:	4618      	mov	r0, r3
 80029ee:	9312      	str	r3, [sp, #72]	; 0x48
 80029f0:	f004 faa4 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 80029f4:	f504 6310 	add.w	r3, r4, #2304	; 0x900
 80029f8:	4618      	mov	r0, r3
 80029fa:	9313      	str	r3, [sp, #76]	; 0x4c
 80029fc:	f004 fa9e 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8002a00:	f604 2314 	addw	r3, r4, #2580	; 0xa14
 8002a04:	4618      	mov	r0, r3
 8002a06:	9314      	str	r3, [sp, #80]	; 0x50
 8002a08:	f004 fa98 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8002a0c:	f604 3328 	addw	r3, r4, #2856	; 0xb28
 8002a10:	4618      	mov	r0, r3
 8002a12:	9315      	str	r3, [sp, #84]	; 0x54
 8002a14:	f004 fa92 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8002a18:	f604 433c 	addw	r3, r4, #3132	; 0xc3c
 8002a1c:	4618      	mov	r0, r3
 8002a1e:	9316      	str	r3, [sp, #88]	; 0x58
 8002a20:	f004 fa8c 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8002a24:	f504 6355 	add.w	r3, r4, #3408	; 0xd50
 8002a28:	4618      	mov	r0, r3
 8002a2a:	9317      	str	r3, [sp, #92]	; 0x5c
 8002a2c:	f004 fa86 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8002a30:	f604 6364 	addw	r3, r4, #3684	; 0xe64
 8002a34:	4618      	mov	r0, r3
 8002a36:	9318      	str	r3, [sp, #96]	; 0x60
 8002a38:	f004 fa80 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8002a3c:	f604 7378 	addw	r3, r4, #3960	; 0xf78
 8002a40:	4618      	mov	r0, r3
 8002a42:	9319      	str	r3, [sp, #100]	; 0x64
 8002a44:	f004 fa7a 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8002a48:	f504 5384 	add.w	r3, r4, #4224	; 0x1080
 8002a4c:	330c      	adds	r3, #12
 8002a4e:	4618      	mov	r0, r3
 8002a50:	ee0b 3a10 	vmov	s22, r3
 8002a54:	f004 fa72 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8002a58:	f504 538d 	add.w	r3, r4, #4512	; 0x11a0
 8002a5c:	4618      	mov	r0, r3
 8002a5e:	931a      	str	r3, [sp, #104]	; 0x68
 8002a60:	f004 fa6c 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8002a64:	f504 5395 	add.w	r3, r4, #4768	; 0x12a0
 8002a68:	3314      	adds	r3, #20
 8002a6a:	4618      	mov	r0, r3
 8002a6c:	ee0b 3a90 	vmov	s23, r3
 8002a70:	f004 fa64 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8002a74:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8002a78:	3308      	adds	r3, #8
 8002a7a:	4618      	mov	r0, r3
 8002a7c:	ee0c 3a10 	vmov	s24, r3
 8002a80:	f004 fa5c 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8002a84:	f504 53a6 	add.w	r3, r4, #5312	; 0x14c0
 8002a88:	331c      	adds	r3, #28
 8002a8a:	4618      	mov	r0, r3
 8002a8c:	ee0c 3a90 	vmov	s25, r3
 8002a90:	f004 fa54 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8002a94:	f504 53af 	add.w	r3, r4, #5600	; 0x15e0
 8002a98:	3310      	adds	r3, #16
 8002a9a:	4618      	mov	r0, r3
 8002a9c:	ee0d 3a10 	vmov	s26, r3
 8002aa0:	f004 fa4c 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8002aa4:	f504 53b8 	add.w	r3, r4, #5888	; 0x1700
 8002aa8:	3304      	adds	r3, #4
 8002aaa:	4618      	mov	r0, r3
 8002aac:	ee0d 3a90 	vmov	s27, r3
 8002ab0:	f004 fa44 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8002ab4:	f504 53c0 	add.w	r3, r4, #6144	; 0x1800
 8002ab8:	3318      	adds	r3, #24
 8002aba:	4618      	mov	r0, r3
 8002abc:	ee0e 3a10 	vmov	s28, r3
 8002ac0:	f004 fa3c 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8002ac4:	f504 53c9 	add.w	r3, r4, #6432	; 0x1920
 8002ac8:	330c      	adds	r3, #12
 8002aca:	4618      	mov	r0, r3
 8002acc:	ee0e 3a90 	vmov	s29, r3
 8002ad0:	f004 fa34 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8002ad4:	f504 53d2 	add.w	r3, r4, #6720	; 0x1a40
 8002ad8:	4618      	mov	r0, r3
 8002ada:	931b      	str	r3, [sp, #108]	; 0x6c
 8002adc:	f004 fa2e 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8002ae0:	f504 53da 	add.w	r3, r4, #6976	; 0x1b40
 8002ae4:	3314      	adds	r3, #20
 8002ae6:	4618      	mov	r0, r3
 8002ae8:	ee0f 3a10 	vmov	s30, r3
 8002aec:	f004 fa26 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8002af0:	f504 53e3 	add.w	r3, r4, #7264	; 0x1c60
 8002af4:	3308      	adds	r3, #8
 8002af6:	4618      	mov	r0, r3
 8002af8:	ee0f 3a90 	vmov	s31, r3
 8002afc:	f004 fa1e 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8002b00:	f504 53eb 	add.w	r3, r4, #7520	; 0x1d60
 8002b04:	331c      	adds	r3, #28
 8002b06:	4618      	mov	r0, r3
 8002b08:	9304      	str	r3, [sp, #16]
 8002b0a:	f004 fa17 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8002b0e:	f504 53f4 	add.w	r3, r4, #7808	; 0x1e80
 8002b12:	3310      	adds	r3, #16
 8002b14:	4618      	mov	r0, r3
 8002b16:	9305      	str	r3, [sp, #20]
 8002b18:	f004 fa10 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8002b1c:	f504 53fd 	add.w	r3, r4, #8096	; 0x1fa0
 8002b20:	3304      	adds	r3, #4
 8002b22:	f242 06b8 	movw	r6, #8376	; 0x20b8
 8002b26:	4618      	mov	r0, r3
 8002b28:	9306      	str	r3, [sp, #24]
 8002b2a:	f004 fa07 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8002b2e:	19a3      	adds	r3, r4, r6
 8002b30:	ee0a 3a10 	vmov	s20, r3
        : TextArea(), wildcard(0)
 8002b34:	4618      	mov	r0, r3
 8002b36:	f7ff fe8d 	bl	8002854 <_ZN8touchgfx8TextAreaC1Ev>
 8002b3a:	4b66      	ldr	r3, [pc, #408]	; (8002cd4 <_ZN27CustomContainerKeyboardBaseC1Ev+0x370>)
 8002b3c:	51a3      	str	r3, [r4, r6]
 8002b3e:	ee1a 3a10 	vmov	r3, s20
 8002b42:	63dd      	str	r5, [r3, #60]	; 0x3c
 8002b44:	f504 5303 	add.w	r3, r4, #8384	; 0x20c0
 8002b48:	3338      	adds	r3, #56	; 0x38
 8002b4a:	4618      	mov	r0, r3
 8002b4c:	ee08 3a10 	vmov	s16, r3
 8002b50:	f7ff fef2 	bl	8002938 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002b54:	f504 5306 	add.w	r3, r4, #8576	; 0x2180
 8002b58:	3334      	adds	r3, #52	; 0x34
 8002b5a:	4618      	mov	r0, r3
 8002b5c:	ee08 3a90 	vmov	s17, r3
 8002b60:	f7ff fba6 	bl	80022b0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002b64:	f504 5309 	add.w	r3, r4, #8768	; 0x2240
 8002b68:	3334      	adds	r3, #52	; 0x34
 8002b6a:	4618      	mov	r0, r3
 8002b6c:	ee09 3a10 	vmov	s18, r3
 8002b70:	f7ff fb9e 	bl	80022b0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002b74:	f504 530c 	add.w	r3, r4, #8960	; 0x2300
 8002b78:	3334      	adds	r3, #52	; 0x34
 8002b7a:	4618      	mov	r0, r3
 8002b7c:	9307      	str	r3, [sp, #28]
 8002b7e:	f004 f9dd 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8002b82:	f504 5311 	add.w	r3, r4, #9280	; 0x2440
 8002b86:	3308      	adds	r3, #8
 8002b88:	4618      	mov	r0, r3
 8002b8a:	9308      	str	r3, [sp, #32]
 8002b8c:	f004 f9d6 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8002b90:	f504 5315 	add.w	r3, r4, #9536	; 0x2540
 8002b94:	331c      	adds	r3, #28
 8002b96:	4618      	mov	r0, r3
 8002b98:	9309      	str	r3, [sp, #36]	; 0x24
 8002b9a:	f004 f9cf 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8002b9e:	f504 5319 	add.w	r3, r4, #9792	; 0x2640
 8002ba2:	3330      	adds	r3, #48	; 0x30
 8002ba4:	f504 5a1c 	add.w	sl, r4, #9984	; 0x2700
 8002ba8:	4618      	mov	r0, r3
 8002baa:	f10a 0a30 	add.w	sl, sl, #48	; 0x30
 8002bae:	f504 591f 	add.w	r9, r4, #10176	; 0x27c0
 8002bb2:	ee09 3a90 	vmov	s19, r3
 8002bb6:	f109 092c 	add.w	r9, r9, #44	; 0x2c
 8002bba:	f7ff fb79 	bl	80022b0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002bbe:	f504 5822 	add.w	r8, r4, #10368	; 0x2880
 8002bc2:	4650      	mov	r0, sl
 8002bc4:	f7ff feb8 	bl	8002938 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002bc8:	f108 0828 	add.w	r8, r8, #40	; 0x28
 8002bcc:	4648      	mov	r0, r9
 8002bce:	f504 5b25 	add.w	fp, r4, #10560	; 0x2940
 8002bd2:	f7ff feb1 	bl	8002938 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002bd6:	f10b 0b24 	add.w	fp, fp, #36	; 0x24
 8002bda:	4640      	mov	r0, r8
 8002bdc:	f7ff feac 	bl	8002938 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002be0:	4658      	mov	r0, fp
 8002be2:	f7ff fb65 	bl	80022b0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8002be6:	f642 23c4 	movw	r3, #10948	; 0x2ac4
 8002bea:	18e2      	adds	r2, r4, r3
 8002bec:	9203      	str	r2, [sp, #12]
 8002bee:	4a3a      	ldr	r2, [pc, #232]	; (8002cd8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x374>)
 8002bf0:	50e2      	str	r2, [r4, r3]
 8002bf2:	9b03      	ldr	r3, [sp, #12]
 8002bf4:	4a39      	ldr	r2, [pc, #228]	; (8002cdc <_ZN27CustomContainerKeyboardBaseC1Ev+0x378>)
 8002bf6:	605c      	str	r4, [r3, #4]
 8002bf8:	f642 23cc 	movw	r3, #10956	; 0x2acc
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8002bfc:	4938      	ldr	r1, [pc, #224]	; (8002ce0 <_ZN27CustomContainerKeyboardBaseC1Ev+0x37c>)
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8002bfe:	50e2      	str	r2, [r4, r3]
 8002c00:	f642 23d0 	movw	r3, #10960	; 0x2ad0
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8002c04:	f642 22d4 	movw	r2, #10964	; 0x2ad4
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8002c08:	50e5      	str	r5, [r4, r3]
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8002c0a:	18a3      	adds	r3, r4, r2
 8002c0c:	930a      	str	r3, [sp, #40]	; 0x28
 8002c0e:	4b35      	ldr	r3, [pc, #212]	; (8002ce4 <_ZN27CustomContainerKeyboardBaseC1Ev+0x380>)
 8002c10:	50a3      	str	r3, [r4, r2]
 8002c12:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002c14:	6054      	str	r4, [r2, #4]
 8002c16:	f642 22dc 	movw	r2, #10972	; 0x2adc
    boxWithBorder1.setPosition(-5, 0, 800, 300);
 8002c1a:	ee1a 0a90 	vmov	r0, s21
 8002c1e:	50a1      	str	r1, [r4, r2]
 8002c20:	f642 22e0 	movw	r2, #10976	; 0x2ae0
 8002c24:	50a5      	str	r5, [r4, r2]
 8002c26:	f642 22e4 	movw	r2, #10980	; 0x2ae4
 8002c2a:	18a1      	adds	r1, r4, r2
 8002c2c:	50a3      	str	r3, [r4, r2]
 8002c2e:	f642 22ec 	movw	r2, #10988	; 0x2aec
 8002c32:	604c      	str	r4, [r1, #4]
 8002c34:	911c      	str	r1, [sp, #112]	; 0x70
 8002c36:	492c      	ldr	r1, [pc, #176]	; (8002ce8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x384>)
 8002c38:	50a1      	str	r1, [r4, r2]
 8002c3a:	f642 22f0 	movw	r2, #10992	; 0x2af0
 8002c3e:	50a5      	str	r5, [r4, r2]
 8002c40:	f642 22f4 	movw	r2, #10996	; 0x2af4
 8002c44:	18a1      	adds	r1, r4, r2
 8002c46:	50a3      	str	r3, [r4, r2]
 8002c48:	f642 22fc 	movw	r2, #11004	; 0x2afc
 8002c4c:	604c      	str	r4, [r1, #4]
 8002c4e:	911d      	str	r1, [sp, #116]	; 0x74
 8002c50:	4926      	ldr	r1, [pc, #152]	; (8002cec <_ZN27CustomContainerKeyboardBaseC1Ev+0x388>)
 8002c52:	50a1      	str	r1, [r4, r2]
 8002c54:	f504 522c 	add.w	r2, r4, #11008	; 0x2b00
 8002c58:	6015      	str	r5, [r2, #0]
 8002c5a:	f642 3204 	movw	r2, #11012	; 0x2b04
 8002c5e:	18a1      	adds	r1, r4, r2
 8002c60:	50a3      	str	r3, [r4, r2]
 8002c62:	f642 320c 	movw	r2, #11020	; 0x2b0c
 8002c66:	604c      	str	r4, [r1, #4]
 8002c68:	911e      	str	r1, [sp, #120]	; 0x78
 8002c6a:	4921      	ldr	r1, [pc, #132]	; (8002cf0 <_ZN27CustomContainerKeyboardBaseC1Ev+0x38c>)
 8002c6c:	50a1      	str	r1, [r4, r2]
 8002c6e:	f642 3210 	movw	r2, #11024	; 0x2b10
 8002c72:	50a5      	str	r5, [r4, r2]
 8002c74:	f642 3214 	movw	r2, #11028	; 0x2b14
 8002c78:	18a1      	adds	r1, r4, r2
 8002c7a:	50a3      	str	r3, [r4, r2]
 8002c7c:	f642 321c 	movw	r2, #11036	; 0x2b1c
 8002c80:	604c      	str	r4, [r1, #4]
 8002c82:	911f      	str	r1, [sp, #124]	; 0x7c
 8002c84:	491b      	ldr	r1, [pc, #108]	; (8002cf4 <_ZN27CustomContainerKeyboardBaseC1Ev+0x390>)
 8002c86:	50a1      	str	r1, [r4, r2]
 8002c88:	f642 3220 	movw	r2, #11040	; 0x2b20
 8002c8c:	50a5      	str	r5, [r4, r2]
 8002c8e:	f642 3224 	movw	r2, #11044	; 0x2b24
 8002c92:	18a1      	adds	r1, r4, r2
 8002c94:	9120      	str	r1, [sp, #128]	; 0x80
 8002c96:	50a3      	str	r3, [r4, r2]
 8002c98:	f642 322c 	movw	r2, #11052	; 0x2b2c
 8002c9c:	604c      	str	r4, [r1, #4]
 8002c9e:	4916      	ldr	r1, [pc, #88]	; (8002cf8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x394>)
 8002ca0:	50a1      	str	r1, [r4, r2]
 8002ca2:	f642 3230 	movw	r2, #11056	; 0x2b30
 8002ca6:	50a5      	str	r5, [r4, r2]
 8002ca8:	f642 3234 	movw	r2, #11060	; 0x2b34
 8002cac:	18a1      	adds	r1, r4, r2
 8002cae:	50a3      	str	r3, [r4, r2]
 8002cb0:	f642 323c 	movw	r2, #11068	; 0x2b3c
 8002cb4:	604c      	str	r4, [r1, #4]
 8002cb6:	9121      	str	r1, [sp, #132]	; 0x84
 8002cb8:	4910      	ldr	r1, [pc, #64]	; (8002cfc <_ZN27CustomContainerKeyboardBaseC1Ev+0x398>)
 8002cba:	50a1      	str	r1, [r4, r2]
 8002cbc:	f504 522d 	add.w	r2, r4, #11072	; 0x2b40
 8002cc0:	6015      	str	r5, [r2, #0]
 8002cc2:	f642 3244 	movw	r2, #11076	; 0x2b44
 8002cc6:	18a1      	adds	r1, r4, r2
 8002cc8:	e01a      	b.n	8002d00 <_ZN27CustomContainerKeyboardBaseC1Ev+0x39c>
 8002cca:	bf00      	nop
 8002ccc:	080273d0 	.word	0x080273d0
 8002cd0:	08029ec4 	.word	0x08029ec4
 8002cd4:	08029da4 	.word	0x08029da4
 8002cd8:	080273a0 	.word	0x080273a0
 8002cdc:	08002799 	.word	0x08002799
 8002ce0:	08002509 	.word	0x08002509
 8002ce4:	080273b8 	.word	0x080273b8
 8002ce8:	08002511 	.word	0x08002511
 8002cec:	08002515 	.word	0x08002515
 8002cf0:	08002519 	.word	0x08002519
 8002cf4:	0800251d 	.word	0x0800251d
 8002cf8:	08002521 	.word	0x08002521
 8002cfc:	08002525 	.word	0x08002525
 8002d00:	50a3      	str	r3, [r4, r2]
 8002d02:	f642 324c 	movw	r2, #11084	; 0x2b4c
 8002d06:	604c      	str	r4, [r1, #4]
 8002d08:	9122      	str	r1, [sp, #136]	; 0x88
 8002d0a:	49af      	ldr	r1, [pc, #700]	; (8002fc8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x664>)
 8002d0c:	50a1      	str	r1, [r4, r2]
 8002d0e:	f642 3250 	movw	r2, #11088	; 0x2b50
 8002d12:	50a5      	str	r5, [r4, r2]
 8002d14:	f642 3254 	movw	r2, #11092	; 0x2b54
 8002d18:	18a1      	adds	r1, r4, r2
 8002d1a:	50a3      	str	r3, [r4, r2]
 8002d1c:	f642 325c 	movw	r2, #11100	; 0x2b5c
 8002d20:	604c      	str	r4, [r1, #4]
 8002d22:	9123      	str	r1, [sp, #140]	; 0x8c
 8002d24:	49a9      	ldr	r1, [pc, #676]	; (8002fcc <_ZN27CustomContainerKeyboardBaseC1Ev+0x668>)
 8002d26:	50a1      	str	r1, [r4, r2]
 8002d28:	f642 3260 	movw	r2, #11104	; 0x2b60
 8002d2c:	50a5      	str	r5, [r4, r2]
 8002d2e:	f642 3264 	movw	r2, #11108	; 0x2b64
 8002d32:	18a1      	adds	r1, r4, r2
 8002d34:	50a3      	str	r3, [r4, r2]
 8002d36:	f642 326c 	movw	r2, #11116	; 0x2b6c
 8002d3a:	604c      	str	r4, [r1, #4]
 8002d3c:	9124      	str	r1, [sp, #144]	; 0x90
 8002d3e:	49a4      	ldr	r1, [pc, #656]	; (8002fd0 <_ZN27CustomContainerKeyboardBaseC1Ev+0x66c>)
 8002d40:	50a1      	str	r1, [r4, r2]
 8002d42:	f642 3270 	movw	r2, #11120	; 0x2b70
 8002d46:	50a5      	str	r5, [r4, r2]
 8002d48:	f642 3274 	movw	r2, #11124	; 0x2b74
 8002d4c:	18a1      	adds	r1, r4, r2
 8002d4e:	50a3      	str	r3, [r4, r2]
 8002d50:	f642 327c 	movw	r2, #11132	; 0x2b7c
 8002d54:	604c      	str	r4, [r1, #4]
 8002d56:	9125      	str	r1, [sp, #148]	; 0x94
 8002d58:	499e      	ldr	r1, [pc, #632]	; (8002fd4 <_ZN27CustomContainerKeyboardBaseC1Ev+0x670>)
 8002d5a:	50a1      	str	r1, [r4, r2]
 8002d5c:	f504 522e 	add.w	r2, r4, #11136	; 0x2b80
 8002d60:	6015      	str	r5, [r2, #0]
 8002d62:	f642 3284 	movw	r2, #11140	; 0x2b84
 8002d66:	18a1      	adds	r1, r4, r2
 8002d68:	50a3      	str	r3, [r4, r2]
 8002d6a:	f642 328c 	movw	r2, #11148	; 0x2b8c
 8002d6e:	9126      	str	r1, [sp, #152]	; 0x98
 8002d70:	604c      	str	r4, [r1, #4]
 8002d72:	4999      	ldr	r1, [pc, #612]	; (8002fd8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x674>)
 8002d74:	50a1      	str	r1, [r4, r2]
 8002d76:	f642 3290 	movw	r2, #11152	; 0x2b90
 8002d7a:	50a5      	str	r5, [r4, r2]
 8002d7c:	f642 3294 	movw	r2, #11156	; 0x2b94
 8002d80:	18a1      	adds	r1, r4, r2
 8002d82:	50a3      	str	r3, [r4, r2]
 8002d84:	f642 329c 	movw	r2, #11164	; 0x2b9c
 8002d88:	604c      	str	r4, [r1, #4]
 8002d8a:	9127      	str	r1, [sp, #156]	; 0x9c
 8002d8c:	4993      	ldr	r1, [pc, #588]	; (8002fdc <_ZN27CustomContainerKeyboardBaseC1Ev+0x678>)
 8002d8e:	50a1      	str	r1, [r4, r2]
 8002d90:	f642 32a0 	movw	r2, #11168	; 0x2ba0
 8002d94:	50a5      	str	r5, [r4, r2]
 8002d96:	f642 32a4 	movw	r2, #11172	; 0x2ba4
 8002d9a:	18a1      	adds	r1, r4, r2
 8002d9c:	50a3      	str	r3, [r4, r2]
 8002d9e:	f642 32ac 	movw	r2, #11180	; 0x2bac
 8002da2:	604c      	str	r4, [r1, #4]
 8002da4:	9128      	str	r1, [sp, #160]	; 0xa0
 8002da6:	498e      	ldr	r1, [pc, #568]	; (8002fe0 <_ZN27CustomContainerKeyboardBaseC1Ev+0x67c>)
 8002da8:	50a1      	str	r1, [r4, r2]
 8002daa:	f642 32b0 	movw	r2, #11184	; 0x2bb0
 8002dae:	50a5      	str	r5, [r4, r2]
 8002db0:	f642 32b4 	movw	r2, #11188	; 0x2bb4
 8002db4:	18a1      	adds	r1, r4, r2
 8002db6:	50a3      	str	r3, [r4, r2]
 8002db8:	f642 32bc 	movw	r2, #11196	; 0x2bbc
 8002dbc:	604c      	str	r4, [r1, #4]
 8002dbe:	9129      	str	r1, [sp, #164]	; 0xa4
 8002dc0:	4988      	ldr	r1, [pc, #544]	; (8002fe4 <_ZN27CustomContainerKeyboardBaseC1Ev+0x680>)
 8002dc2:	50a1      	str	r1, [r4, r2]
 8002dc4:	f504 522f 	add.w	r2, r4, #11200	; 0x2bc0
 8002dc8:	6015      	str	r5, [r2, #0]
 8002dca:	f642 32c4 	movw	r2, #11204	; 0x2bc4
 8002dce:	18a1      	adds	r1, r4, r2
 8002dd0:	50a3      	str	r3, [r4, r2]
 8002dd2:	f642 32cc 	movw	r2, #11212	; 0x2bcc
 8002dd6:	604c      	str	r4, [r1, #4]
 8002dd8:	912a      	str	r1, [sp, #168]	; 0xa8
 8002dda:	4983      	ldr	r1, [pc, #524]	; (8002fe8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x684>)
 8002ddc:	50a1      	str	r1, [r4, r2]
 8002dde:	f642 32d0 	movw	r2, #11216	; 0x2bd0
 8002de2:	50a5      	str	r5, [r4, r2]
 8002de4:	f642 32d4 	movw	r2, #11220	; 0x2bd4
 8002de8:	18a1      	adds	r1, r4, r2
 8002dea:	50a3      	str	r3, [r4, r2]
 8002dec:	f642 32dc 	movw	r2, #11228	; 0x2bdc
 8002df0:	604c      	str	r4, [r1, #4]
 8002df2:	912b      	str	r1, [sp, #172]	; 0xac
 8002df4:	497d      	ldr	r1, [pc, #500]	; (8002fec <_ZN27CustomContainerKeyboardBaseC1Ev+0x688>)
 8002df6:	50a1      	str	r1, [r4, r2]
 8002df8:	f642 32e0 	movw	r2, #11232	; 0x2be0
 8002dfc:	50a5      	str	r5, [r4, r2]
 8002dfe:	f642 32e4 	movw	r2, #11236	; 0x2be4
 8002e02:	18a1      	adds	r1, r4, r2
 8002e04:	50a3      	str	r3, [r4, r2]
 8002e06:	f642 32ec 	movw	r2, #11244	; 0x2bec
 8002e0a:	604c      	str	r4, [r1, #4]
 8002e0c:	912c      	str	r1, [sp, #176]	; 0xb0
 8002e0e:	4978      	ldr	r1, [pc, #480]	; (8002ff0 <_ZN27CustomContainerKeyboardBaseC1Ev+0x68c>)
 8002e10:	50a1      	str	r1, [r4, r2]
 8002e12:	f642 32f0 	movw	r2, #11248	; 0x2bf0
 8002e16:	50a5      	str	r5, [r4, r2]
 8002e18:	f642 32f4 	movw	r2, #11252	; 0x2bf4
 8002e1c:	18a1      	adds	r1, r4, r2
 8002e1e:	912d      	str	r1, [sp, #180]	; 0xb4
 8002e20:	50a3      	str	r3, [r4, r2]
 8002e22:	f642 32fc 	movw	r2, #11260	; 0x2bfc
 8002e26:	604c      	str	r4, [r1, #4]
 8002e28:	4972      	ldr	r1, [pc, #456]	; (8002ff4 <_ZN27CustomContainerKeyboardBaseC1Ev+0x690>)
 8002e2a:	50a1      	str	r1, [r4, r2]
 8002e2c:	f504 5230 	add.w	r2, r4, #11264	; 0x2c00
 8002e30:	6015      	str	r5, [r2, #0]
 8002e32:	f642 4204 	movw	r2, #11268	; 0x2c04
 8002e36:	18a1      	adds	r1, r4, r2
 8002e38:	50a3      	str	r3, [r4, r2]
 8002e3a:	f642 420c 	movw	r2, #11276	; 0x2c0c
 8002e3e:	604c      	str	r4, [r1, #4]
 8002e40:	912e      	str	r1, [sp, #184]	; 0xb8
 8002e42:	496d      	ldr	r1, [pc, #436]	; (8002ff8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x694>)
 8002e44:	50a1      	str	r1, [r4, r2]
 8002e46:	f642 4210 	movw	r2, #11280	; 0x2c10
 8002e4a:	50a5      	str	r5, [r4, r2]
 8002e4c:	f642 4214 	movw	r2, #11284	; 0x2c14
 8002e50:	18a1      	adds	r1, r4, r2
 8002e52:	50a3      	str	r3, [r4, r2]
 8002e54:	f642 421c 	movw	r2, #11292	; 0x2c1c
 8002e58:	604c      	str	r4, [r1, #4]
 8002e5a:	912f      	str	r1, [sp, #188]	; 0xbc
 8002e5c:	4967      	ldr	r1, [pc, #412]	; (8002ffc <_ZN27CustomContainerKeyboardBaseC1Ev+0x698>)
 8002e5e:	50a1      	str	r1, [r4, r2]
 8002e60:	f642 4220 	movw	r2, #11296	; 0x2c20
 8002e64:	50a5      	str	r5, [r4, r2]
 8002e66:	f642 4224 	movw	r2, #11300	; 0x2c24
 8002e6a:	18a1      	adds	r1, r4, r2
 8002e6c:	50a3      	str	r3, [r4, r2]
 8002e6e:	f642 422c 	movw	r2, #11308	; 0x2c2c
 8002e72:	604c      	str	r4, [r1, #4]
 8002e74:	9130      	str	r1, [sp, #192]	; 0xc0
 8002e76:	4962      	ldr	r1, [pc, #392]	; (8003000 <_ZN27CustomContainerKeyboardBaseC1Ev+0x69c>)
 8002e78:	50a1      	str	r1, [r4, r2]
 8002e7a:	f642 4230 	movw	r2, #11312	; 0x2c30
 8002e7e:	50a5      	str	r5, [r4, r2]
 8002e80:	f642 4234 	movw	r2, #11316	; 0x2c34
 8002e84:	18a1      	adds	r1, r4, r2
 8002e86:	50a3      	str	r3, [r4, r2]
 8002e88:	f642 423c 	movw	r2, #11324	; 0x2c3c
 8002e8c:	604c      	str	r4, [r1, #4]
 8002e8e:	9131      	str	r1, [sp, #196]	; 0xc4
 8002e90:	495c      	ldr	r1, [pc, #368]	; (8003004 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6a0>)
 8002e92:	50a1      	str	r1, [r4, r2]
 8002e94:	f504 5231 	add.w	r2, r4, #11328	; 0x2c40
 8002e98:	6015      	str	r5, [r2, #0]
 8002e9a:	f642 4244 	movw	r2, #11332	; 0x2c44
 8002e9e:	18a1      	adds	r1, r4, r2
 8002ea0:	50a3      	str	r3, [r4, r2]
 8002ea2:	f642 424c 	movw	r2, #11340	; 0x2c4c
 8002ea6:	604c      	str	r4, [r1, #4]
 8002ea8:	9132      	str	r1, [sp, #200]	; 0xc8
 8002eaa:	4957      	ldr	r1, [pc, #348]	; (8003008 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6a4>)
 8002eac:	50a1      	str	r1, [r4, r2]
 8002eae:	f642 4250 	movw	r2, #11344	; 0x2c50
 8002eb2:	50a5      	str	r5, [r4, r2]
 8002eb4:	f642 4254 	movw	r2, #11348	; 0x2c54
 8002eb8:	18a1      	adds	r1, r4, r2
 8002eba:	50a3      	str	r3, [r4, r2]
 8002ebc:	f642 425c 	movw	r2, #11356	; 0x2c5c
 8002ec0:	604c      	str	r4, [r1, #4]
 8002ec2:	9133      	str	r1, [sp, #204]	; 0xcc
 8002ec4:	4951      	ldr	r1, [pc, #324]	; (800300c <_ZN27CustomContainerKeyboardBaseC1Ev+0x6a8>)
 8002ec6:	50a1      	str	r1, [r4, r2]
 8002ec8:	f642 4260 	movw	r2, #11360	; 0x2c60
 8002ecc:	50a5      	str	r5, [r4, r2]
 8002ece:	f642 4264 	movw	r2, #11364	; 0x2c64
 8002ed2:	18a1      	adds	r1, r4, r2
 8002ed4:	50a3      	str	r3, [r4, r2]
 8002ed6:	f642 426c 	movw	r2, #11372	; 0x2c6c
 8002eda:	604c      	str	r4, [r1, #4]
 8002edc:	9134      	str	r1, [sp, #208]	; 0xd0
 8002ede:	494c      	ldr	r1, [pc, #304]	; (8003010 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6ac>)
 8002ee0:	50a1      	str	r1, [r4, r2]
 8002ee2:	f642 4270 	movw	r2, #11376	; 0x2c70
 8002ee6:	50a5      	str	r5, [r4, r2]
 8002ee8:	f642 4274 	movw	r2, #11380	; 0x2c74
 8002eec:	18a1      	adds	r1, r4, r2
 8002eee:	50a3      	str	r3, [r4, r2]
 8002ef0:	f642 427c 	movw	r2, #11388	; 0x2c7c
 8002ef4:	604c      	str	r4, [r1, #4]
 8002ef6:	9135      	str	r1, [sp, #212]	; 0xd4
 8002ef8:	4946      	ldr	r1, [pc, #280]	; (8003014 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6b0>)
 8002efa:	50a1      	str	r1, [r4, r2]
 8002efc:	f504 5232 	add.w	r2, r4, #11392	; 0x2c80
 8002f00:	6015      	str	r5, [r2, #0]
 8002f02:	f642 4284 	movw	r2, #11396	; 0x2c84
 8002f06:	18a1      	adds	r1, r4, r2
 8002f08:	50a3      	str	r3, [r4, r2]
 8002f0a:	f642 428c 	movw	r2, #11404	; 0x2c8c
 8002f0e:	604c      	str	r4, [r1, #4]
 8002f10:	9136      	str	r1, [sp, #216]	; 0xd8
 8002f12:	4941      	ldr	r1, [pc, #260]	; (8003018 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6b4>)
 8002f14:	50a1      	str	r1, [r4, r2]
 8002f16:	f642 4290 	movw	r2, #11408	; 0x2c90
 8002f1a:	50a5      	str	r5, [r4, r2]
 8002f1c:	f642 4294 	movw	r2, #11412	; 0x2c94
 8002f20:	18a1      	adds	r1, r4, r2
 8002f22:	50a3      	str	r3, [r4, r2]
 8002f24:	f642 429c 	movw	r2, #11420	; 0x2c9c
 8002f28:	604c      	str	r4, [r1, #4]
 8002f2a:	9137      	str	r1, [sp, #220]	; 0xdc
 8002f2c:	493b      	ldr	r1, [pc, #236]	; (800301c <_ZN27CustomContainerKeyboardBaseC1Ev+0x6b8>)
 8002f2e:	50a1      	str	r1, [r4, r2]
 8002f30:	f642 42a0 	movw	r2, #11424	; 0x2ca0
 8002f34:	50a5      	str	r5, [r4, r2]
 8002f36:	f642 42a4 	movw	r2, #11428	; 0x2ca4
 8002f3a:	18a1      	adds	r1, r4, r2
 8002f3c:	50a3      	str	r3, [r4, r2]
 8002f3e:	f642 42ac 	movw	r2, #11436	; 0x2cac
 8002f42:	604c      	str	r4, [r1, #4]
 8002f44:	9138      	str	r1, [sp, #224]	; 0xe0
 8002f46:	4936      	ldr	r1, [pc, #216]	; (8003020 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6bc>)
 8002f48:	50a1      	str	r1, [r4, r2]
 8002f4a:	f642 42b0 	movw	r2, #11440	; 0x2cb0
 8002f4e:	4935      	ldr	r1, [pc, #212]	; (8003024 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6c0>)
 8002f50:	50a5      	str	r5, [r4, r2]
 8002f52:	f642 42b4 	movw	r2, #11444	; 0x2cb4
 8002f56:	18a7      	adds	r7, r4, r2
 8002f58:	50a3      	str	r3, [r4, r2]
 8002f5a:	f642 42bc 	movw	r2, #11452	; 0x2cbc
 8002f5e:	607c      	str	r4, [r7, #4]
 8002f60:	50a1      	str	r1, [r4, r2]
 8002f62:	f504 5233 	add.w	r2, r4, #11456	; 0x2cc0
 8002f66:	4930      	ldr	r1, [pc, #192]	; (8003028 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6c4>)
 8002f68:	6015      	str	r5, [r2, #0]
 8002f6a:	f642 42c4 	movw	r2, #11460	; 0x2cc4
 8002f6e:	18a6      	adds	r6, r4, r2
 8002f70:	50a3      	str	r3, [r4, r2]
 8002f72:	f642 42cc 	movw	r2, #11468	; 0x2ccc
 8002f76:	6074      	str	r4, [r6, #4]
 8002f78:	50a1      	str	r1, [r4, r2]
 8002f7a:	f642 42d0 	movw	r2, #11472	; 0x2cd0
 8002f7e:	50a5      	str	r5, [r4, r2]
 8002f80:	f642 42d4 	movw	r2, #11476	; 0x2cd4
 8002f84:	18a1      	adds	r1, r4, r2
 8002f86:	50a3      	str	r3, [r4, r2]
 8002f88:	f642 43dc 	movw	r3, #11484	; 0x2cdc
 8002f8c:	4a27      	ldr	r2, [pc, #156]	; (800302c <_ZN27CustomContainerKeyboardBaseC1Ev+0x6c8>)
 8002f8e:	604c      	str	r4, [r1, #4]
 8002f90:	50e2      	str	r2, [r4, r3]
 8002f92:	f642 43e0 	movw	r3, #11488	; 0x2ce0
 8002f96:	9139      	str	r1, [sp, #228]	; 0xe4
 8002f98:	50e5      	str	r5, [r4, r3]
    triggerKeyboardCallback(0)
 8002f9a:	f642 43e4 	movw	r3, #11492	; 0x2ce4
    boxWithBorder1.setPosition(-5, 0, 800, 300);
 8002f9e:	462a      	mov	r2, r5
    triggerKeyboardCallback(0)
 8002fa0:	50e5      	str	r5, [r4, r3]
        rect.width = width;
 8002fa2:	4b23      	ldr	r3, [pc, #140]	; (8003030 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6cc>)
 8002fa4:	60a3      	str	r3, [r4, #8]
    boxWithBorder1.setPosition(-5, 0, 800, 300);
 8002fa6:	f44f 7396 	mov.w	r3, #300	; 0x12c
 8002faa:	9300      	str	r3, [sp, #0]
 8002fac:	f06f 0104 	mvn.w	r1, #4
 8002fb0:	f44f 7348 	mov.w	r3, #800	; 0x320
 8002fb4:	f7ff fc42 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8002fb8:	4b1e      	ldr	r3, [pc, #120]	; (8003034 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6d0>)
 8002fba:	6563      	str	r3, [r4, #84]	; 0x54
        borderColor = color;
 8002fbc:	f103 33c7 	add.w	r3, r3, #3351758791	; 0xc7c7c7c7
 8002fc0:	f103 5360 	add.w	r3, r3, #939524096	; 0x38000000
 8002fc4:	65a3      	str	r3, [r4, #88]	; 0x58
 8002fc6:	e037      	b.n	8003038 <_ZN27CustomContainerKeyboardBaseC1Ev+0x6d4>
 8002fc8:	08002529 	.word	0x08002529
 8002fcc:	0800252d 	.word	0x0800252d
 8002fd0:	08002531 	.word	0x08002531
 8002fd4:	08002535 	.word	0x08002535
 8002fd8:	08002539 	.word	0x08002539
 8002fdc:	0800253d 	.word	0x0800253d
 8002fe0:	08002541 	.word	0x08002541
 8002fe4:	08002545 	.word	0x08002545
 8002fe8:	08002549 	.word	0x08002549
 8002fec:	0800254d 	.word	0x0800254d
 8002ff0:	08002551 	.word	0x08002551
 8002ff4:	08002555 	.word	0x08002555
 8002ff8:	08002559 	.word	0x08002559
 8002ffc:	0800255d 	.word	0x0800255d
 8003000:	08002561 	.word	0x08002561
 8003004:	08002565 	.word	0x08002565
 8003008:	08002569 	.word	0x08002569
 800300c:	0800256d 	.word	0x0800256d
 8003010:	08002571 	.word	0x08002571
 8003014:	08002575 	.word	0x08002575
 8003018:	08002579 	.word	0x08002579
 800301c:	0800257d 	.word	0x0800257d
 8003020:	08002581 	.word	0x08002581
 8003024:	08002585 	.word	0x08002585
 8003028:	08002589 	.word	0x08002589
 800302c:	0800258d 	.word	0x0800258d
 8003030:	012c0320 	.word	0x012c0320
 8003034:	ff9a9b9c 	.word	0xff9a9b9c
        borderSize = size;
 8003038:	f04f 0306 	mov.w	r3, #6
    customContainer1.setXY(35, 51);
 800303c:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800303e:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8003042:	2233      	movs	r2, #51	; 0x33
 8003044:	2123      	movs	r1, #35	; 0x23
 8003046:	f7ff f925 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
        this->triggerButton_keyCallback = &callback;
 800304a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    customContainer2.setXY(96, 51);
 800304c:	980c      	ldr	r0, [sp, #48]	; 0x30
 800304e:	f8c4 3170 	str.w	r3, [r4, #368]	; 0x170
 8003052:	2233      	movs	r2, #51	; 0x33
 8003054:	2160      	movs	r1, #96	; 0x60
 8003056:	f7ff f91d 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800305a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
    customContainer3.setXY(157, 51);
 800305c:	980d      	ldr	r0, [sp, #52]	; 0x34
 800305e:	f8c4 3284 	str.w	r3, [r4, #644]	; 0x284
 8003062:	2233      	movs	r2, #51	; 0x33
 8003064:	219d      	movs	r1, #157	; 0x9d
 8003066:	f7ff f915 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800306a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    customContainer4.setXY(218, 51);
 800306c:	980e      	ldr	r0, [sp, #56]	; 0x38
 800306e:	f8c4 3398 	str.w	r3, [r4, #920]	; 0x398
 8003072:	2233      	movs	r2, #51	; 0x33
 8003074:	21da      	movs	r1, #218	; 0xda
 8003076:	f7ff f90d 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800307a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
    customContainer5.setXY(279, 51);
 800307c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800307e:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 8003082:	2233      	movs	r2, #51	; 0x33
 8003084:	f240 1117 	movw	r1, #279	; 0x117
 8003088:	f7ff f904 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800308c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    customContainer6.setXY(340, 51);
 800308e:	9810      	ldr	r0, [sp, #64]	; 0x40
 8003090:	f8c4 35c0 	str.w	r3, [r4, #1472]	; 0x5c0
 8003094:	2233      	movs	r2, #51	; 0x33
 8003096:	f44f 71aa 	mov.w	r1, #340	; 0x154
 800309a:	f7ff f8fb 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800309e:	9b20      	ldr	r3, [sp, #128]	; 0x80
    customContainer7.setXY(401, 51);
 80030a0:	9811      	ldr	r0, [sp, #68]	; 0x44
 80030a2:	f8c4 36d4 	str.w	r3, [r4, #1748]	; 0x6d4
 80030a6:	2233      	movs	r2, #51	; 0x33
 80030a8:	f240 1191 	movw	r1, #401	; 0x191
 80030ac:	f7ff f8f2 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80030b0:	9b21      	ldr	r3, [sp, #132]	; 0x84
    customContainer8.setXY(462, 51);
 80030b2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80030b4:	f8c4 37e8 	str.w	r3, [r4, #2024]	; 0x7e8
 80030b8:	2233      	movs	r2, #51	; 0x33
 80030ba:	f44f 71e7 	mov.w	r1, #462	; 0x1ce
 80030be:	f7ff f8e9 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80030c2:	9b22      	ldr	r3, [sp, #136]	; 0x88
    customContainer9.setXY(523, 51);
 80030c4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80030c6:	f8c4 38fc 	str.w	r3, [r4, #2300]	; 0x8fc
 80030ca:	2233      	movs	r2, #51	; 0x33
 80030cc:	f240 210b 	movw	r1, #523	; 0x20b
 80030d0:	f7ff f8e0 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80030d4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    customContainer10.setXY(584, 51);
 80030d6:	9814      	ldr	r0, [sp, #80]	; 0x50
 80030d8:	f8c4 3a10 	str.w	r3, [r4, #2576]	; 0xa10
 80030dc:	2233      	movs	r2, #51	; 0x33
 80030de:	f44f 7112 	mov.w	r1, #584	; 0x248
 80030e2:	f7ff f8d7 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80030e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
    customContainer1_1.setXY(35, 112);
 80030e8:	9815      	ldr	r0, [sp, #84]	; 0x54
 80030ea:	f8c4 3b24 	str.w	r3, [r4, #2852]	; 0xb24
 80030ee:	2270      	movs	r2, #112	; 0x70
 80030f0:	2123      	movs	r1, #35	; 0x23
 80030f2:	f7ff f8cf 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80030f6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
    customContainer2_1.setXY(96, 112);
 80030f8:	9816      	ldr	r0, [sp, #88]	; 0x58
 80030fa:	f8c4 3c38 	str.w	r3, [r4, #3128]	; 0xc38
 80030fe:	2270      	movs	r2, #112	; 0x70
 8003100:	2160      	movs	r1, #96	; 0x60
 8003102:	f7ff f8c7 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8003106:	9b28      	ldr	r3, [sp, #160]	; 0xa0
    customContainer3_1.setXY(157, 112);
 8003108:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800310a:	f8c4 3d4c 	str.w	r3, [r4, #3404]	; 0xd4c
 800310e:	2270      	movs	r2, #112	; 0x70
 8003110:	219d      	movs	r1, #157	; 0x9d
 8003112:	f7ff f8bf 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8003116:	9b29      	ldr	r3, [sp, #164]	; 0xa4
    customContainer4_1.setXY(218, 112);
 8003118:	9818      	ldr	r0, [sp, #96]	; 0x60
 800311a:	f8c4 3e60 	str.w	r3, [r4, #3680]	; 0xe60
 800311e:	2270      	movs	r2, #112	; 0x70
 8003120:	21da      	movs	r1, #218	; 0xda
 8003122:	f7ff f8b7 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8003126:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
    customContainer5_1.setXY(279, 112);
 8003128:	9819      	ldr	r0, [sp, #100]	; 0x64
 800312a:	f8c4 3f74 	str.w	r3, [r4, #3956]	; 0xf74
 800312e:	2270      	movs	r2, #112	; 0x70
 8003130:	f240 1117 	movw	r1, #279	; 0x117
 8003134:	f7ff f8ae 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8003138:	f241 0388 	movw	r3, #4232	; 0x1088
 800313c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 800313e:	50e2      	str	r2, [r4, r3]
    customContainer6_1.setXY(340, 112);
 8003140:	ee1b 0a10 	vmov	r0, s22
 8003144:	2270      	movs	r2, #112	; 0x70
 8003146:	f44f 71aa 	mov.w	r1, #340	; 0x154
 800314a:	f7ff f8a3 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800314e:	f241 139c 	movw	r3, #4508	; 0x119c
 8003152:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8003154:	50e2      	str	r2, [r4, r3]
    customContainer7_1.setXY(401, 112);
 8003156:	981a      	ldr	r0, [sp, #104]	; 0x68
 8003158:	2270      	movs	r2, #112	; 0x70
 800315a:	f240 1191 	movw	r1, #401	; 0x191
 800315e:	f7ff f899 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8003162:	f241 23b0 	movw	r3, #4784	; 0x12b0
 8003166:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8003168:	50e2      	str	r2, [r4, r3]
    customContainer8_1.setXY(462, 112);
 800316a:	ee1b 0a90 	vmov	r0, s23
 800316e:	2270      	movs	r2, #112	; 0x70
 8003170:	f44f 71e7 	mov.w	r1, #462	; 0x1ce
 8003174:	f7ff f88e 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8003178:	f241 33c4 	movw	r3, #5060	; 0x13c4
 800317c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 800317e:	50e2      	str	r2, [r4, r3]
    customContainer9_1.setXY(523, 112);
 8003180:	ee1c 0a10 	vmov	r0, s24
 8003184:	2270      	movs	r2, #112	; 0x70
 8003186:	f240 210b 	movw	r1, #523	; 0x20b
 800318a:	f7ff f883 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800318e:	f241 43d8 	movw	r3, #5336	; 0x14d8
 8003192:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8003194:	50e2      	str	r2, [r4, r3]
    customContainer10_1.setXY(584, 112);
 8003196:	ee1c 0a90 	vmov	r0, s25
 800319a:	2270      	movs	r2, #112	; 0x70
 800319c:	f44f 7112 	mov.w	r1, #584	; 0x248
 80031a0:	f7ff f878 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80031a4:	f241 53ec 	movw	r3, #5612	; 0x15ec
 80031a8:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 80031aa:	50e2      	str	r2, [r4, r3]
    customContainer1_2.setXY(96, 173);
 80031ac:	ee1d 0a10 	vmov	r0, s26
 80031b0:	22ad      	movs	r2, #173	; 0xad
 80031b2:	2160      	movs	r1, #96	; 0x60
 80031b4:	f7ff f86e 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80031b8:	f504 53b8 	add.w	r3, r4, #5888	; 0x1700
 80031bc:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 80031be:	601a      	str	r2, [r3, #0]
    customContainer2_2.setXY(157, 173);
 80031c0:	ee1d 0a90 	vmov	r0, s27
 80031c4:	22ad      	movs	r2, #173	; 0xad
 80031c6:	219d      	movs	r1, #157	; 0x9d
 80031c8:	f7ff f864 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80031cc:	f641 0314 	movw	r3, #6164	; 0x1814
 80031d0:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 80031d2:	50e2      	str	r2, [r4, r3]
    customContainer3_2.setXY(218, 173);
 80031d4:	ee1e 0a10 	vmov	r0, s28
 80031d8:	22ad      	movs	r2, #173	; 0xad
 80031da:	21da      	movs	r1, #218	; 0xda
 80031dc:	f7ff f85a 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80031e0:	f641 1328 	movw	r3, #6440	; 0x1928
 80031e4:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 80031e6:	50e2      	str	r2, [r4, r3]
    customContainer4_2.setXY(279, 173);
 80031e8:	ee1e 0a90 	vmov	r0, s29
 80031ec:	22ad      	movs	r2, #173	; 0xad
 80031ee:	f240 1117 	movw	r1, #279	; 0x117
 80031f2:	f7ff f84f 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80031f6:	f641 233c 	movw	r3, #6716	; 0x1a3c
 80031fa:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 80031fc:	50e2      	str	r2, [r4, r3]
    customContainer5_2.setXY(340, 173);
 80031fe:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8003200:	22ad      	movs	r2, #173	; 0xad
 8003202:	f44f 71aa 	mov.w	r1, #340	; 0x154
 8003206:	f7ff f845 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800320a:	f641 3350 	movw	r3, #6992	; 0x1b50
 800320e:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 8003210:	50e2      	str	r2, [r4, r3]
    customContainer6_2.setXY(401, 173);
 8003212:	ee1f 0a10 	vmov	r0, s30
 8003216:	22ad      	movs	r2, #173	; 0xad
 8003218:	f240 1191 	movw	r1, #401	; 0x191
 800321c:	f7ff f83a 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8003220:	f641 4364 	movw	r3, #7268	; 0x1c64
 8003224:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8003226:	50e2      	str	r2, [r4, r3]
    customContainer7_2.setXY(462, 173);
 8003228:	ee1f 0a90 	vmov	r0, s31
 800322c:	22ad      	movs	r2, #173	; 0xad
 800322e:	f44f 71e7 	mov.w	r1, #462	; 0x1ce
 8003232:	f7ff f82f 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8003236:	f641 5378 	movw	r3, #7544	; 0x1d78
 800323a:	9a37      	ldr	r2, [sp, #220]	; 0xdc
 800323c:	50e2      	str	r2, [r4, r3]
    customContainer8_2.setXY(523, 173);
 800323e:	9804      	ldr	r0, [sp, #16]
 8003240:	22ad      	movs	r2, #173	; 0xad
 8003242:	f240 210b 	movw	r1, #523	; 0x20b
 8003246:	f7ff f825 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800324a:	f641 638c 	movw	r3, #7820	; 0x1e8c
 800324e:	9a38      	ldr	r2, [sp, #224]	; 0xe0
 8003250:	50e2      	str	r2, [r4, r3]
    customContainer9_2.setXY(584, 173);
 8003252:	9805      	ldr	r0, [sp, #20]
 8003254:	22ad      	movs	r2, #173	; 0xad
 8003256:	f44f 7112 	mov.w	r1, #584	; 0x248
 800325a:	f7ff f81b 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800325e:	f504 53fd 	add.w	r3, r4, #8096	; 0x1fa0
    customContainer10_2.setXY(645, 173);
 8003262:	9806      	ldr	r0, [sp, #24]
 8003264:	601f      	str	r7, [r3, #0]
 8003266:	22ad      	movs	r2, #173	; 0xad
 8003268:	f240 2185 	movw	r1, #645	; 0x285
 800326c:	f7ff f812 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8003270:	f242 03b4 	movw	r3, #8372	; 0x20b4
    textArea1.setPosition(35, 21, 720, 30);
 8003274:	2215      	movs	r2, #21
 8003276:	50e6      	str	r6, [r4, r3]
 8003278:	231e      	movs	r3, #30
 800327a:	9300      	str	r3, [sp, #0]
 800327c:	ee1a 0a10 	vmov	r0, s20
 8003280:	f44f 7334 	mov.w	r3, #720	; 0x2d0
 8003284:	2123      	movs	r1, #35	; 0x23
 8003286:	f7ff fad9 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 800328a:	f242 03e8 	movw	r3, #8424	; 0x20e8
 800328e:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 8003292:	50e2      	str	r2, [r4, r3]
     *
     * @see getLinespacing
     */
    FORCE_INLINE_FUNCTION void setLinespacing(int16_t space)
    {
        linespace = space;
 8003294:	ee1a 3a10 	vmov	r3, s20
 8003298:	869d      	strh	r5, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800329a:	4b0a      	ldr	r3, [pc, #40]	; (80032c4 <_ZN27CustomContainerKeyboardBaseC1Ev+0x960>)
 800329c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T_RESOURCEID2).getText());
 800329e:	f504 5628 	add.w	r6, r4, #10752	; 0x2a00
 80032a2:	3624      	adds	r6, #36	; 0x24
 80032a4:	b92b      	cbnz	r3, 80032b2 <_ZN27CustomContainerKeyboardBaseC1Ev+0x94e>
 80032a6:	4b08      	ldr	r3, [pc, #32]	; (80032c8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x964>)
 80032a8:	4a08      	ldr	r2, [pc, #32]	; (80032cc <_ZN27CustomContainerKeyboardBaseC1Ev+0x968>)
 80032aa:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80032ac:	4808      	ldr	r0, [pc, #32]	; (80032d0 <_ZN27CustomContainerKeyboardBaseC1Ev+0x96c>)
 80032ae:	f021 f8c3 	bl	8024438 <__assert_func>
 80032b2:	4b08      	ldr	r3, [pc, #32]	; (80032d4 <_ZN27CustomContainerKeyboardBaseC1Ev+0x970>)
 80032b4:	881b      	ldrh	r3, [r3, #0]
 80032b6:	2b02      	cmp	r3, #2
 80032b8:	d810      	bhi.n	80032dc <_ZN27CustomContainerKeyboardBaseC1Ev+0x978>
 80032ba:	4b07      	ldr	r3, [pc, #28]	; (80032d8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x974>)
 80032bc:	4a03      	ldr	r2, [pc, #12]	; (80032cc <_ZN27CustomContainerKeyboardBaseC1Ev+0x968>)
 80032be:	21af      	movs	r1, #175	; 0xaf
 80032c0:	e7f4      	b.n	80032ac <_ZN27CustomContainerKeyboardBaseC1Ev+0x948>
 80032c2:	bf00      	nop
 80032c4:	20020ae0 	.word	0x20020ae0
 80032c8:	08027000 	.word	0x08027000
 80032cc:	08027042 	.word	0x08027042
 80032d0:	08027070 	.word	0x08027070
 80032d4:	20020ae4 	.word	0x20020ae4
 80032d8:	080270b7 	.word	0x080270b7
        return texts->getText(typedTextId);
 80032dc:	4bce      	ldr	r3, [pc, #824]	; (8003618 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcb4>)
 80032de:	2102      	movs	r1, #2
 80032e0:	6818      	ldr	r0, [r3, #0]
 80032e2:	f003 fdf1 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 80032e6:	4acd      	ldr	r2, [pc, #820]	; (800361c <_ZN27CustomContainerKeyboardBaseC1Ev+0xcb8>)
 80032e8:	4603      	mov	r3, r0
 80032ea:	2128      	movs	r1, #40	; 0x28
 80032ec:	4630      	mov	r0, r6
 80032ee:	f014 ff57 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wildcard = value;
 80032f2:	f242 03f4 	movw	r3, #8436	; 0x20f4
        borderBox.setPosition(x, y, width, height);
 80032f6:	ee18 7a10 	vmov	r7, s16
 80032fa:	50e6      	str	r6, [r4, r3]
    textArea1.setTypedText(touchgfx::TypedText(T_RESOURCEID3));
 80032fc:	ee1a 0a10 	vmov	r0, s20
        : typedTextId(id)
 8003300:	4ec7      	ldr	r6, [pc, #796]	; (8003620 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcbc>)
 8003302:	963a      	str	r6, [sp, #232]	; 0xe8
 8003304:	2303      	movs	r3, #3
 8003306:	a93a      	add	r1, sp, #232	; 0xe8
 8003308:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 800330c:	f00e fec5 	bl	801209a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003310:	2279      	movs	r2, #121	; 0x79
 8003312:	f107 0034 	add.w	r0, r7, #52	; 0x34
 8003316:	9200      	str	r2, [sp, #0]
 8003318:	233c      	movs	r3, #60	; 0x3c
 800331a:	462a      	mov	r2, r5
 800331c:	4629      	mov	r1, r5
 800331e:	f7ff fa8d 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8003322:	f242 135c 	movw	r3, #8540	; 0x215c
 8003326:	f04f 0201 	mov.w	r2, #1
 800332a:	52e2      	strh	r2, [r4, r3]
    flexButton_enter.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800332c:	4bbd      	ldr	r3, [pc, #756]	; (8003624 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc0>)
 800332e:	9300      	str	r3, [sp, #0]
 8003330:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 8003334:	4abc      	ldr	r2, [pc, #752]	; (8003628 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc4>)
 8003336:	49bd      	ldr	r1, [pc, #756]	; (800362c <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc8>)
 8003338:	ee18 0a10 	vmov	r0, s16
 800333c:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 8003340:	f7ff faa4 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8003344:	2309      	movs	r3, #9
    flexButton_enter.setText(TypedText(T___SINGLEUSE_CLAL));
 8003346:	ee18 0a10 	vmov	r0, s16
 800334a:	a93a      	add	r1, sp, #232	; 0xe8
 800334c:	963a      	str	r6, [sp, #232]	; 0xe8
 800334e:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8003352:	f7ff faa7 	bl	80028a4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8003356:	2179      	movs	r1, #121	; 0x79
 8003358:	2234      	movs	r2, #52	; 0x34
 800335a:	f107 0078 	add.w	r0, r7, #120	; 0x78
 800335e:	9100      	str	r1, [sp, #0]
 8003360:	233c      	movs	r3, #60	; 0x3c
 8003362:	4629      	mov	r1, r5
 8003364:	f7ff fa6a 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8003368:	f242 13ac 	movw	r3, #8620	; 0x21ac
 800336c:	4fb0      	ldr	r7, [pc, #704]	; (8003630 <_ZN27CustomContainerKeyboardBaseC1Ev+0xccc>)
 800336e:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 8003370:	f242 13b0 	movw	r3, #8624	; 0x21b0
        handlePressedUpdated();
 8003374:	ee18 0a10 	vmov	r0, s16
        colorPressed = newColorPressed;
 8003378:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 800337a:	f7ff f90a 	bl	8002592 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_enter.setPosition(706, 173, 60, 121);
 800337e:	2179      	movs	r1, #121	; 0x79
 8003380:	ee18 0a10 	vmov	r0, s16
 8003384:	9100      	str	r1, [sp, #0]
 8003386:	233c      	movs	r3, #60	; 0x3c
 8003388:	22ad      	movs	r2, #173	; 0xad
 800338a:	f240 21c2 	movw	r1, #706	; 0x2c2
 800338e:	f7ff fa55 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        action = &callback;
 8003392:	f242 1328 	movw	r3, #8488	; 0x2128
 8003396:	ee18 0a90 	vmov	r0, s17
 800339a:	263c      	movs	r6, #60	; 0x3c
 800339c:	9903      	ldr	r1, [sp, #12]
 800339e:	50e1      	str	r1, [r4, r3]
 80033a0:	462a      	mov	r2, r5
 80033a2:	f44f 73d5 	mov.w	r3, #426	; 0x1aa
 80033a6:	4629      	mov	r1, r5
 80033a8:	3034      	adds	r0, #52	; 0x34
 80033aa:	9600      	str	r6, [sp, #0]
 80033ac:	f7ff fa46 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_space.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80033b0:	4a9c      	ldr	r2, [pc, #624]	; (8003624 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc0>)
 80033b2:	9200      	str	r2, [sp, #0]
 80033b4:	f242 2318 	movw	r3, #8728	; 0x2218
 80033b8:	f04f 0101 	mov.w	r1, #1
 80033bc:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 80033c0:	52e1      	strh	r1, [r4, r3]
 80033c2:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 80033c6:	4b9b      	ldr	r3, [pc, #620]	; (8003634 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcd0>)
 80033c8:	4998      	ldr	r1, [pc, #608]	; (800362c <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc8>)
 80033ca:	ee18 0a90 	vmov	r0, s17
 80033ce:	f7ff fa5d 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton_space.setWildcardText(TypedText(T_RESOURCEID15));
 80033d2:	f10d 0ce8 	add.w	ip, sp, #232	; 0xe8
 80033d6:	4b92      	ldr	r3, [pc, #584]	; (8003620 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcbc>)
 80033d8:	933a      	str	r3, [sp, #232]	; 0xe8
 80033da:	4661      	mov	r1, ip
 80033dc:	230c      	movs	r3, #12
 80033de:	ee18 0a90 	vmov	r0, s17
 80033e2:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 80033e6:	f7ff fa6c 	bl	80028c2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
    flexButton_spaceBuffer[0] = 0;
 80033ea:	f642 2374 	movw	r3, #10868	; 0x2a74
 80033ee:	18e2      	adds	r2, r4, r3
 80033f0:	52e5      	strh	r5, [r4, r3]
        wildcardText.setPosition(x, y, width, height);
 80033f2:	ee18 0a90 	vmov	r0, s17
 80033f6:	f242 2368 	movw	r3, #8808	; 0x2268
 80033fa:	4629      	mov	r1, r5
 80033fc:	50e2      	str	r2, [r4, r3]
 80033fe:	3078      	adds	r0, #120	; 0x78
 8003400:	462a      	mov	r2, r5
 8003402:	f44f 73d5 	mov.w	r3, #426	; 0x1aa
 8003406:	9600      	str	r6, [sp, #0]
 8003408:	f7ff fa18 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 800340c:	f242 236c 	movw	r3, #8812	; 0x226c
        handlePressedUpdated();
 8003410:	ee18 0a90 	vmov	r0, s17
        colorReleased = newColorReleased;
 8003414:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 8003416:	f242 2370 	movw	r3, #8816	; 0x2270
 800341a:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 800341c:	f7fe fe85 	bl	800212a <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_space.setPosition(218, 234, 426, 60);
 8003420:	ee18 0a90 	vmov	r0, s17
 8003424:	f44f 73d5 	mov.w	r3, #426	; 0x1aa
 8003428:	22ea      	movs	r2, #234	; 0xea
 800342a:	21da      	movs	r1, #218	; 0xda
 800342c:	9600      	str	r6, [sp, #0]
 800342e:	f7ff fa05 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8003432:	f242 13e4 	movw	r3, #8676	; 0x21e4
 8003436:	ee19 0a10 	vmov	r0, s18
 800343a:	9903      	ldr	r1, [sp, #12]
 800343c:	50e1      	str	r1, [r4, r3]
 800343e:	462a      	mov	r2, r5
 8003440:	4633      	mov	r3, r6
 8003442:	4629      	mov	r1, r5
 8003444:	3034      	adds	r0, #52	; 0x34
 8003446:	9600      	str	r6, [sp, #0]
 8003448:	f7ff f9f8 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_language.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800344c:	4a75      	ldr	r2, [pc, #468]	; (8003624 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc0>)
 800344e:	9200      	str	r2, [sp, #0]
 8003450:	f242 23d8 	movw	r3, #8920	; 0x22d8
 8003454:	f04f 0101 	mov.w	r1, #1
 8003458:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 800345c:	52e1      	strh	r1, [r4, r3]
 800345e:	ee19 0a10 	vmov	r0, s18
 8003462:	4b74      	ldr	r3, [pc, #464]	; (8003634 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcd0>)
 8003464:	4971      	ldr	r1, [pc, #452]	; (800362c <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc8>)
 8003466:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 800346a:	f7ff fa0f 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton_language.setWildcardText(TypedText(T_RESOURCEID13));
 800346e:	f10d 0ee8 	add.w	lr, sp, #232	; 0xe8
 8003472:	4b6b      	ldr	r3, [pc, #428]	; (8003620 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcbc>)
 8003474:	933a      	str	r3, [sp, #232]	; 0xe8
 8003476:	4671      	mov	r1, lr
 8003478:	2304      	movs	r3, #4
 800347a:	ee19 0a10 	vmov	r0, s18
 800347e:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8003482:	f7ff fa1e 	bl	80028c2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003486:	496c      	ldr	r1, [pc, #432]	; (8003638 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcd4>)
    Unicode::snprintf(flexButton_languageBuffer, FLEXBUTTON_LANGUAGE_SIZE, "%s", TypedText(T_RESOURCEID4).getText());
 8003488:	f504 5e2a 	add.w	lr, r4, #10880	; 0x2a80
 800348c:	680b      	ldr	r3, [r1, #0]
 800348e:	f10e 0e08 	add.w	lr, lr, #8
 8003492:	f8cd e028 	str.w	lr, [sp, #40]	; 0x28
 8003496:	2b00      	cmp	r3, #0
 8003498:	f43f af05 	beq.w	80032a6 <_ZN27CustomContainerKeyboardBaseC1Ev+0x942>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800349c:	4867      	ldr	r0, [pc, #412]	; (800363c <_ZN27CustomContainerKeyboardBaseC1Ev+0xcd8>)
 800349e:	8803      	ldrh	r3, [r0, #0]
 80034a0:	2b05      	cmp	r3, #5
 80034a2:	f67f af0a 	bls.w	80032ba <_ZN27CustomContainerKeyboardBaseC1Ev+0x956>
        return texts->getText(typedTextId);
 80034a6:	485c      	ldr	r0, [pc, #368]	; (8003618 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcb4>)
 80034a8:	2105      	movs	r1, #5
 80034aa:	6800      	ldr	r0, [r0, #0]
 80034ac:	f003 fd0c 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 80034b0:	4a5a      	ldr	r2, [pc, #360]	; (800361c <_ZN27CustomContainerKeyboardBaseC1Ev+0xcb8>)
 80034b2:	4603      	mov	r3, r0
 80034b4:	210a      	movs	r1, #10
 80034b6:	980a      	ldr	r0, [sp, #40]	; 0x28
 80034b8:	f014 fe72 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80034bc:	f242 3328 	movw	r3, #9000	; 0x2328
        wildcardText.setPosition(x, y, width, height);
 80034c0:	ee19 0a10 	vmov	r0, s18
 80034c4:	990a      	ldr	r1, [sp, #40]	; 0x28
 80034c6:	50e1      	str	r1, [r4, r3]
 80034c8:	2214      	movs	r2, #20
 80034ca:	4629      	mov	r1, r5
 80034cc:	4633      	mov	r3, r6
 80034ce:	3078      	adds	r0, #120	; 0x78
 80034d0:	9600      	str	r6, [sp, #0]
 80034d2:	f7ff f9b3 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 80034d6:	f242 332c 	movw	r3, #9004	; 0x232c
        handlePressedUpdated();
 80034da:	ee19 0a10 	vmov	r0, s18
        colorReleased = newColorReleased;
 80034de:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 80034e0:	f242 3330 	movw	r3, #9008	; 0x2330
 80034e4:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 80034e6:	f7fe fe20 	bl	800212a <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_language.setPosition(157, 234, 60, 60);
 80034ea:	ee19 0a10 	vmov	r0, s18
 80034ee:	4633      	mov	r3, r6
 80034f0:	22ea      	movs	r2, #234	; 0xea
 80034f2:	219d      	movs	r1, #157	; 0x9d
 80034f4:	9600      	str	r6, [sp, #0]
 80034f6:	f7ff f9a1 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 80034fa:	f242 23a4 	movw	r3, #8868	; 0x22a4
 80034fe:	9903      	ldr	r1, [sp, #12]
 8003500:	50e1      	str	r1, [r4, r3]
    customContainer11_1.setXY(645, 112);
 8003502:	9807      	ldr	r0, [sp, #28]
 8003504:	2270      	movs	r2, #112	; 0x70
 8003506:	f240 2185 	movw	r1, #645	; 0x285
 800350a:	f7fe fec3 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800350e:	f242 4344 	movw	r3, #9284	; 0x2444
 8003512:	9939      	ldr	r1, [sp, #228]	; 0xe4
 8003514:	50e1      	str	r1, [r4, r3]
    customContainer11.setXY(645, 51);
 8003516:	9808      	ldr	r0, [sp, #32]
 8003518:	2233      	movs	r2, #51	; 0x33
 800351a:	f240 2185 	movw	r1, #645	; 0x285
 800351e:	f7fe feb9 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8003522:	f242 5358 	movw	r3, #9560	; 0x2558
 8003526:	9925      	ldr	r1, [sp, #148]	; 0x94
 8003528:	50e1      	str	r1, [r4, r3]
    customContainer12.setXY(706, 51);
 800352a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800352c:	2233      	movs	r2, #51	; 0x33
 800352e:	f240 21c2 	movw	r1, #706	; 0x2c2
 8003532:	f7fe feaf 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8003536:	f242 636c 	movw	r3, #9836	; 0x266c
 800353a:	ee19 0a90 	vmov	r0, s19
 800353e:	9926      	ldr	r1, [sp, #152]	; 0x98
 8003540:	50e1      	str	r1, [r4, r3]
 8003542:	462a      	mov	r2, r5
 8003544:	4633      	mov	r3, r6
 8003546:	4629      	mov	r1, r5
 8003548:	3034      	adds	r0, #52	; 0x34
 800354a:	9600      	str	r6, [sp, #0]
 800354c:	f7ff f976 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_close.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003550:	4a34      	ldr	r2, [pc, #208]	; (8003624 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc0>)
 8003552:	9200      	str	r2, [sp, #0]
 8003554:	f242 63d4 	movw	r3, #9940	; 0x26d4
 8003558:	f04f 0c01 	mov.w	ip, #1
 800355c:	f824 c003 	strh.w	ip, [r4, r3]
 8003560:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 8003564:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 8003568:	4930      	ldr	r1, [pc, #192]	; (800362c <_ZN27CustomContainerKeyboardBaseC1Ev+0xcc8>)
 800356a:	ee19 0a90 	vmov	r0, s19
 800356e:	f603 4392 	addw	r3, r3, #3218	; 0xc92
 8003572:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 8003576:	f7ff f989 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 800357a:	f04f 0e06 	mov.w	lr, #6
 800357e:	f8ad e0ec 	strh.w	lr, [sp, #236]	; 0xec
    flexButton_close.setWildcardText(TypedText(T_RESOURCEID14));
 8003582:	f10d 0ee8 	add.w	lr, sp, #232	; 0xe8
 8003586:	4b26      	ldr	r3, [pc, #152]	; (8003620 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcbc>)
 8003588:	933a      	str	r3, [sp, #232]	; 0xe8
 800358a:	4671      	mov	r1, lr
 800358c:	ee19 0a90 	vmov	r0, s19
 8003590:	f7ff f997 	bl	80028c2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003594:	4928      	ldr	r1, [pc, #160]	; (8003638 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcd4>)
    Unicode::snprintf(flexButton_closeBuffer, FLEXBUTTON_CLOSE_SIZE, "%s", TypedText(T_RESOURCEID5).getText());
 8003596:	f504 5e2a 	add.w	lr, r4, #10880	; 0x2a80
 800359a:	680b      	ldr	r3, [r1, #0]
 800359c:	f10e 0e1c 	add.w	lr, lr, #28
 80035a0:	f8cd e028 	str.w	lr, [sp, #40]	; 0x28
 80035a4:	2b00      	cmp	r3, #0
 80035a6:	f43f ae7e 	beq.w	80032a6 <_ZN27CustomContainerKeyboardBaseC1Ev+0x942>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80035aa:	4824      	ldr	r0, [pc, #144]	; (800363c <_ZN27CustomContainerKeyboardBaseC1Ev+0xcd8>)
 80035ac:	8803      	ldrh	r3, [r0, #0]
 80035ae:	2b07      	cmp	r3, #7
 80035b0:	f67f ae83 	bls.w	80032ba <_ZN27CustomContainerKeyboardBaseC1Ev+0x956>
        return texts->getText(typedTextId);
 80035b4:	4818      	ldr	r0, [pc, #96]	; (8003618 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcb4>)
 80035b6:	2107      	movs	r1, #7
 80035b8:	6800      	ldr	r0, [r0, #0]
 80035ba:	f003 fc85 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 80035be:	4a17      	ldr	r2, [pc, #92]	; (800361c <_ZN27CustomContainerKeyboardBaseC1Ev+0xcb8>)
 80035c0:	4603      	mov	r3, r0
 80035c2:	210a      	movs	r1, #10
 80035c4:	980a      	ldr	r0, [sp, #40]	; 0x28
 80035c6:	f014 fdeb 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80035ca:	f242 7324 	movw	r3, #10020	; 0x2724
        wildcardText.setPosition(x, y, width, height);
 80035ce:	ee19 0a90 	vmov	r0, s19
 80035d2:	990a      	ldr	r1, [sp, #40]	; 0x28
 80035d4:	50e1      	str	r1, [r4, r3]
 80035d6:	2214      	movs	r2, #20
 80035d8:	4629      	mov	r1, r5
 80035da:	4633      	mov	r3, r6
 80035dc:	3078      	adds	r0, #120	; 0x78
 80035de:	9600      	str	r6, [sp, #0]
 80035e0:	f7ff f92c 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 80035e4:	f242 7328 	movw	r3, #10024	; 0x2728
        handlePressedUpdated();
 80035e8:	ee19 0a90 	vmov	r0, s19
        colorReleased = newColorReleased;
 80035ec:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 80035ee:	f242 732c 	movw	r3, #10028	; 0x272c
 80035f2:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 80035f4:	f7fe fd99 	bl	800212a <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_close.setPosition(96, 234, 60, 60);
 80035f8:	ee19 0a90 	vmov	r0, s19
 80035fc:	4633      	mov	r3, r6
 80035fe:	22ea      	movs	r2, #234	; 0xea
 8003600:	2160      	movs	r1, #96	; 0x60
 8003602:	9600      	str	r6, [sp, #0]
 8003604:	f7ff f91a 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8003608:	f242 63a0 	movw	r3, #9888	; 0x26a0
 800360c:	f04f 0e79 	mov.w	lr, #121	; 0x79
 8003610:	9903      	ldr	r1, [sp, #12]
 8003612:	50e1      	str	r1, [r4, r3]
 8003614:	e014      	b.n	8003640 <_ZN27CustomContainerKeyboardBaseC1Ev+0xcdc>
 8003616:	bf00      	nop
 8003618:	20020aec 	.word	0x20020aec
 800361c:	08027109 	.word	0x08027109
 8003620:	08027114 	.word	0x08027114
 8003624:	ff336699 	.word	0xff336699
 8003628:	ff0099cc 	.word	0xff0099cc
 800362c:	ff006699 	.word	0xff006699
 8003630:	ff0a0a0a 	.word	0xff0a0a0a
 8003634:	ff003366 	.word	0xff003366
 8003638:	20020ae0 	.word	0x20020ae0
 800363c:	20020ae4 	.word	0x20020ae4
 8003640:	f8cd e000 	str.w	lr, [sp]
 8003644:	462a      	mov	r2, r5
 8003646:	4629      	mov	r1, r5
 8003648:	4633      	mov	r3, r6
 800364a:	f10a 0034 	add.w	r0, sl, #52	; 0x34
 800364e:	f7ff f8f5 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_shift.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003652:	4ad9      	ldr	r2, [pc, #868]	; (80039b8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1054>)
 8003654:	9200      	str	r2, [sp, #0]
 8003656:	f242 7394 	movw	r3, #10132	; 0x2794
 800365a:	f04f 0c01 	mov.w	ip, #1
 800365e:	f824 c003 	strh.w	ip, [r4, r3]
 8003662:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 8003666:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 800366a:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 800366e:	49d3      	ldr	r1, [pc, #844]	; (80039bc <_ZN27CustomContainerKeyboardBaseC1Ev+0x1058>)
 8003670:	f603 33d2 	addw	r3, r3, #3026	; 0xbd2
 8003674:	4650      	mov	r0, sl
 8003676:	f7ff f909 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton_shift.setText(TypedText(T___SINGLEUSE_DBNX));
 800367a:	f10d 0ee8 	add.w	lr, sp, #232	; 0xe8
        : typedTextId(id)
 800367e:	4bd0      	ldr	r3, [pc, #832]	; (80039c0 <_ZN27CustomContainerKeyboardBaseC1Ev+0x105c>)
 8003680:	933a      	str	r3, [sp, #232]	; 0xe8
 8003682:	4671      	mov	r1, lr
 8003684:	2308      	movs	r3, #8
 8003686:	4650      	mov	r0, sl
 8003688:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 800368c:	f7ff f90a 	bl	80028a4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8003690:	4629      	mov	r1, r5
 8003692:	2214      	movs	r2, #20
 8003694:	4633      	mov	r3, r6
 8003696:	f10a 0078 	add.w	r0, sl, #120	; 0x78
 800369a:	9600      	str	r6, [sp, #0]
 800369c:	f7ff f8ce 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 80036a0:	f242 73e4 	movw	r3, #10212	; 0x27e4
        handlePressedUpdated();
 80036a4:	4650      	mov	r0, sl
        colorReleased = newColorReleased;
 80036a6:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 80036a8:	f242 73e8 	movw	r3, #10216	; 0x27e8
 80036ac:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 80036ae:	f7fe ff70 	bl	8002592 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_shift.setPosition(35, 173, 60, 60);
 80036b2:	4633      	mov	r3, r6
 80036b4:	22ad      	movs	r2, #173	; 0xad
 80036b6:	2123      	movs	r1, #35	; 0x23
 80036b8:	4650      	mov	r0, sl
 80036ba:	9600      	str	r6, [sp, #0]
 80036bc:	f7ff f8be 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 80036c0:	f242 7360 	movw	r3, #10080	; 0x2760
 80036c4:	9903      	ldr	r1, [sp, #12]
 80036c6:	50e1      	str	r1, [r4, r3]
 80036c8:	462a      	mov	r2, r5
 80036ca:	4629      	mov	r1, r5
 80036cc:	4633      	mov	r3, r6
 80036ce:	f109 0034 	add.w	r0, r9, #52	; 0x34
 80036d2:	9600      	str	r6, [sp, #0]
 80036d4:	f7ff f8b2 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_del_all.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80036d8:	4ab7      	ldr	r2, [pc, #732]	; (80039b8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1054>)
 80036da:	9200      	str	r2, [sp, #0]
 80036dc:	f642 0350 	movw	r3, #10320	; 0x2850
 80036e0:	f04f 0c01 	mov.w	ip, #1
 80036e4:	f824 c003 	strh.w	ip, [r4, r3]
 80036e8:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 80036ec:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 80036f0:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 80036f4:	49b1      	ldr	r1, [pc, #708]	; (80039bc <_ZN27CustomContainerKeyboardBaseC1Ev+0x1058>)
 80036f6:	4db2      	ldr	r5, [pc, #712]	; (80039c0 <_ZN27CustomContainerKeyboardBaseC1Ev+0x105c>)
 80036f8:	f603 3316 	addw	r3, r3, #2838	; 0xb16
 80036fc:	4648      	mov	r0, r9
 80036fe:	f7ff f8c5 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton_del_all.setText(TypedText(T___SINGLEUSE_HLSL));
 8003702:	f10d 0ee8 	add.w	lr, sp, #232	; 0xe8
 8003706:	4671      	mov	r1, lr
 8003708:	230a      	movs	r3, #10
 800370a:	4648      	mov	r0, r9
 800370c:	953a      	str	r5, [sp, #232]	; 0xe8
 800370e:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8003712:	f7ff f8c7 	bl	80028a4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8003716:	2214      	movs	r2, #20
 8003718:	2100      	movs	r1, #0
 800371a:	4633      	mov	r3, r6
 800371c:	f109 0078 	add.w	r0, r9, #120	; 0x78
 8003720:	9600      	str	r6, [sp, #0]
 8003722:	f7ff f88b 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8003726:	f642 03a0 	movw	r3, #10400	; 0x28a0
        handlePressedUpdated();
 800372a:	4648      	mov	r0, r9
        colorReleased = newColorReleased;
 800372c:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 800372e:	f642 03a4 	movw	r3, #10404	; 0x28a4
 8003732:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 8003734:	f7fe ff2d 	bl	8002592 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_del_all.setPosition(645, 234, 60, 60);
 8003738:	4633      	mov	r3, r6
 800373a:	22ea      	movs	r2, #234	; 0xea
 800373c:	f240 2185 	movw	r1, #645	; 0x285
 8003740:	4648      	mov	r0, r9
 8003742:	9600      	str	r6, [sp, #0]
 8003744:	f7ff f87a 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8003748:	f642 031c 	movw	r3, #10268	; 0x281c
 800374c:	9903      	ldr	r1, [sp, #12]
 800374e:	50e1      	str	r1, [r4, r3]
 8003750:	2200      	movs	r2, #0
 8003752:	4611      	mov	r1, r2
 8003754:	4633      	mov	r3, r6
 8003756:	f108 0034 	add.w	r0, r8, #52	; 0x34
 800375a:	9600      	str	r6, [sp, #0]
 800375c:	f7ff f86e 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_del_pre.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003760:	4a95      	ldr	r2, [pc, #596]	; (80039b8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1054>)
 8003762:	9200      	str	r2, [sp, #0]
 8003764:	f642 130c 	movw	r3, #10508	; 0x290c
 8003768:	f04f 0c01 	mov.w	ip, #1
 800376c:	f824 c003 	strh.w	ip, [r4, r3]
 8003770:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 8003774:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 8003778:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 800377c:	498f      	ldr	r1, [pc, #572]	; (80039bc <_ZN27CustomContainerKeyboardBaseC1Ev+0x1058>)
 800377e:	f603 235a 	addw	r3, r3, #2650	; 0xa5a
 8003782:	4640      	mov	r0, r8
 8003784:	f7ff f882 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton_del_pre.setText(TypedText(T___SINGLEUSE_K2XR));
 8003788:	f10d 0ee8 	add.w	lr, sp, #232	; 0xe8
 800378c:	4671      	mov	r1, lr
 800378e:	230b      	movs	r3, #11
 8003790:	4640      	mov	r0, r8
 8003792:	953a      	str	r5, [sp, #232]	; 0xe8
 8003794:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 8003798:	f7ff f884 	bl	80028a4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 800379c:	2214      	movs	r2, #20
 800379e:	2100      	movs	r1, #0
 80037a0:	4633      	mov	r3, r6
 80037a2:	f108 0078 	add.w	r0, r8, #120	; 0x78
 80037a6:	9600      	str	r6, [sp, #0]
 80037a8:	f7ff f848 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 80037ac:	f642 135c 	movw	r3, #10588	; 0x295c
        handlePressedUpdated();
 80037b0:	4640      	mov	r0, r8
        colorReleased = newColorReleased;
 80037b2:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 80037b4:	f642 1360 	movw	r3, #10592	; 0x2960
 80037b8:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 80037ba:	f7fe feea 	bl	8002592 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_del_pre.setPosition(706, 112, 60, 60);
 80037be:	4633      	mov	r3, r6
 80037c0:	2270      	movs	r2, #112	; 0x70
 80037c2:	f240 21c2 	movw	r1, #706	; 0x2c2
 80037c6:	4640      	mov	r0, r8
 80037c8:	9600      	str	r6, [sp, #0]
 80037ca:	f7ff f837 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 80037ce:	f642 03d8 	movw	r3, #10456	; 0x28d8
 80037d2:	9903      	ldr	r1, [sp, #12]
 80037d4:	50e1      	str	r1, [r4, r3]
 80037d6:	2200      	movs	r2, #0
 80037d8:	4611      	mov	r1, r2
 80037da:	4633      	mov	r3, r6
 80037dc:	f10b 0034 	add.w	r0, fp, #52	; 0x34
 80037e0:	9600      	str	r6, [sp, #0]
 80037e2:	f7ff f82b 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton_ABC_123.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80037e6:	4a74      	ldr	r2, [pc, #464]	; (80039b8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1054>)
 80037e8:	9200      	str	r2, [sp, #0]
 80037ea:	f642 13c8 	movw	r3, #10696	; 0x29c8
 80037ee:	f04f 0c01 	mov.w	ip, #1
 80037f2:	f824 c003 	strh.w	ip, [r4, r3]
 80037f6:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 80037fa:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 80037fe:	496f      	ldr	r1, [pc, #444]	; (80039bc <_ZN27CustomContainerKeyboardBaseC1Ev+0x1058>)
 8003800:	f603 139e 	addw	r3, r3, #2462	; 0x99e
 8003804:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 8003808:	4658      	mov	r0, fp
 800380a:	f7ff f83f 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 800380e:	953a      	str	r5, [sp, #232]	; 0xe8
    flexButton_ABC_123.setWildcardText(TypedText(T_RESOURCEID17));
 8003810:	ad3a      	add	r5, sp, #232	; 0xe8
 8003812:	230f      	movs	r3, #15
 8003814:	4629      	mov	r1, r5
 8003816:	4658      	mov	r0, fp
 8003818:	f8ad 30ec 	strh.w	r3, [sp, #236]	; 0xec
 800381c:	f7ff f851 	bl	80028c2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003820:	4968      	ldr	r1, [pc, #416]	; (80039c4 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1060>)
 8003822:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(flexButton_ABC_123Buffer, FLEXBUTTON_ABC_123_SIZE, "%s", TypedText(T_RESOURCEID7).getText());
 8003824:	f504 552a 	add.w	r5, r4, #10880	; 0x2a80
 8003828:	3530      	adds	r5, #48	; 0x30
 800382a:	2b00      	cmp	r3, #0
 800382c:	f43f ad3b 	beq.w	80032a6 <_ZN27CustomContainerKeyboardBaseC1Ev+0x942>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8003830:	4a65      	ldr	r2, [pc, #404]	; (80039c8 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1064>)
 8003832:	8813      	ldrh	r3, [r2, #0]
 8003834:	2b10      	cmp	r3, #16
 8003836:	f67f ad40 	bls.w	80032ba <_ZN27CustomContainerKeyboardBaseC1Ev+0x956>
        return texts->getText(typedTextId);
 800383a:	4864      	ldr	r0, [pc, #400]	; (80039cc <_ZN27CustomContainerKeyboardBaseC1Ev+0x1068>)
 800383c:	2110      	movs	r1, #16
 800383e:	6800      	ldr	r0, [r0, #0]
 8003840:	f003 fb42 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 8003844:	4a62      	ldr	r2, [pc, #392]	; (80039d0 <_ZN27CustomContainerKeyboardBaseC1Ev+0x106c>)
 8003846:	4603      	mov	r3, r0
 8003848:	210a      	movs	r1, #10
 800384a:	4628      	mov	r0, r5
 800384c:	f014 fca8 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8003850:	f642 2318 	movw	r3, #10776	; 0x2a18
        wildcardText.setPosition(x, y, width, height);
 8003854:	2214      	movs	r2, #20
 8003856:	50e5      	str	r5, [r4, r3]
 8003858:	2100      	movs	r1, #0
 800385a:	4633      	mov	r3, r6
 800385c:	f10b 0078 	add.w	r0, fp, #120	; 0x78
 8003860:	9600      	str	r6, [sp, #0]
 8003862:	f7fe ffeb 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8003866:	f642 231c 	movw	r3, #10780	; 0x2a1c
        handlePressedUpdated();
 800386a:	4658      	mov	r0, fp
        colorReleased = newColorReleased;
 800386c:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 800386e:	f642 2320 	movw	r3, #10784	; 0x2a20
 8003872:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 8003874:	f7fe fc59 	bl	800212a <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_ABC_123.setPosition(35, 234, 60, 60);
 8003878:	4633      	mov	r3, r6
 800387a:	4658      	mov	r0, fp
 800387c:	9600      	str	r6, [sp, #0]
 800387e:	22ea      	movs	r2, #234	; 0xea
 8003880:	2123      	movs	r1, #35	; 0x23
 8003882:	f7fe ffdb 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8003886:	f642 1394 	movw	r3, #10644	; 0x2994
 800388a:	9a03      	ldr	r2, [sp, #12]
 800388c:	50e2      	str	r2, [r4, r3]
    add(boxWithBorder1);
 800388e:	ee1a 1a90 	vmov	r1, s21
 8003892:	4620      	mov	r0, r4
 8003894:	f00c fe20 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer1);
 8003898:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800389a:	4620      	mov	r0, r4
 800389c:	f00c fe1c 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer2);
 80038a0:	990c      	ldr	r1, [sp, #48]	; 0x30
 80038a2:	4620      	mov	r0, r4
 80038a4:	f00c fe18 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer3);
 80038a8:	990d      	ldr	r1, [sp, #52]	; 0x34
 80038aa:	4620      	mov	r0, r4
 80038ac:	f00c fe14 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer4);
 80038b0:	990e      	ldr	r1, [sp, #56]	; 0x38
 80038b2:	4620      	mov	r0, r4
 80038b4:	f00c fe10 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer5);
 80038b8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80038ba:	4620      	mov	r0, r4
 80038bc:	f00c fe0c 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer6);
 80038c0:	9910      	ldr	r1, [sp, #64]	; 0x40
 80038c2:	4620      	mov	r0, r4
 80038c4:	f00c fe08 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer7);
 80038c8:	9911      	ldr	r1, [sp, #68]	; 0x44
 80038ca:	4620      	mov	r0, r4
 80038cc:	f00c fe04 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer8);
 80038d0:	9912      	ldr	r1, [sp, #72]	; 0x48
 80038d2:	4620      	mov	r0, r4
 80038d4:	f00c fe00 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer9);
 80038d8:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80038da:	4620      	mov	r0, r4
 80038dc:	f00c fdfc 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer10);
 80038e0:	9914      	ldr	r1, [sp, #80]	; 0x50
 80038e2:	4620      	mov	r0, r4
 80038e4:	f00c fdf8 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer1_1);
 80038e8:	9915      	ldr	r1, [sp, #84]	; 0x54
 80038ea:	4620      	mov	r0, r4
 80038ec:	f00c fdf4 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer2_1);
 80038f0:	9916      	ldr	r1, [sp, #88]	; 0x58
 80038f2:	4620      	mov	r0, r4
 80038f4:	f00c fdf0 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer3_1);
 80038f8:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80038fa:	4620      	mov	r0, r4
 80038fc:	f00c fdec 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer4_1);
 8003900:	9918      	ldr	r1, [sp, #96]	; 0x60
 8003902:	4620      	mov	r0, r4
 8003904:	f00c fde8 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer5_1);
 8003908:	9919      	ldr	r1, [sp, #100]	; 0x64
 800390a:	4620      	mov	r0, r4
 800390c:	f00c fde4 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer6_1);
 8003910:	ee1b 1a10 	vmov	r1, s22
 8003914:	4620      	mov	r0, r4
 8003916:	f00c fddf 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer7_1);
 800391a:	991a      	ldr	r1, [sp, #104]	; 0x68
 800391c:	4620      	mov	r0, r4
 800391e:	f00c fddb 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer8_1);
 8003922:	ee1b 1a90 	vmov	r1, s23
 8003926:	4620      	mov	r0, r4
 8003928:	f00c fdd6 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer9_1);
 800392c:	ee1c 1a10 	vmov	r1, s24
 8003930:	4620      	mov	r0, r4
 8003932:	f00c fdd1 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer10_1);
 8003936:	ee1c 1a90 	vmov	r1, s25
 800393a:	4620      	mov	r0, r4
 800393c:	f00c fdcc 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer1_2);
 8003940:	ee1d 1a10 	vmov	r1, s26
 8003944:	4620      	mov	r0, r4
 8003946:	f00c fdc7 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer2_2);
 800394a:	ee1d 1a90 	vmov	r1, s27
 800394e:	4620      	mov	r0, r4
 8003950:	f00c fdc2 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer3_2);
 8003954:	ee1e 1a10 	vmov	r1, s28
 8003958:	4620      	mov	r0, r4
 800395a:	f00c fdbd 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer4_2);
 800395e:	ee1e 1a90 	vmov	r1, s29
 8003962:	4620      	mov	r0, r4
 8003964:	f00c fdb8 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer5_2);
 8003968:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800396a:	4620      	mov	r0, r4
 800396c:	f00c fdb4 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer6_2);
 8003970:	ee1f 1a10 	vmov	r1, s30
 8003974:	4620      	mov	r0, r4
 8003976:	f00c fdaf 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer7_2);
 800397a:	ee1f 1a90 	vmov	r1, s31
 800397e:	4620      	mov	r0, r4
 8003980:	f00c fdaa 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer8_2);
 8003984:	9904      	ldr	r1, [sp, #16]
 8003986:	4620      	mov	r0, r4
 8003988:	f00c fda6 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer9_2);
 800398c:	9905      	ldr	r1, [sp, #20]
 800398e:	4620      	mov	r0, r4
 8003990:	f00c fda2 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer10_2);
 8003994:	9906      	ldr	r1, [sp, #24]
 8003996:	4620      	mov	r0, r4
 8003998:	f00c fd9e 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textArea1);
 800399c:	ee1a 1a10 	vmov	r1, s20
 80039a0:	4620      	mov	r0, r4
 80039a2:	f00c fd99 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_enter);
 80039a6:	ee18 1a10 	vmov	r1, s16
 80039aa:	4620      	mov	r0, r4
 80039ac:	f00c fd94 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_space);
 80039b0:	ee18 1a90 	vmov	r1, s17
 80039b4:	e00e      	b.n	80039d4 <_ZN27CustomContainerKeyboardBaseC1Ev+0x1070>
 80039b6:	bf00      	nop
 80039b8:	ff336699 	.word	0xff336699
 80039bc:	ff006699 	.word	0xff006699
 80039c0:	08027114 	.word	0x08027114
 80039c4:	20020ae0 	.word	0x20020ae0
 80039c8:	20020ae4 	.word	0x20020ae4
 80039cc:	20020aec 	.word	0x20020aec
 80039d0:	08027109 	.word	0x08027109
 80039d4:	4620      	mov	r0, r4
 80039d6:	f00c fd7f 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_language);
 80039da:	ee19 1a10 	vmov	r1, s18
 80039de:	4620      	mov	r0, r4
 80039e0:	f00c fd7a 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer11_1);
 80039e4:	9907      	ldr	r1, [sp, #28]
 80039e6:	4620      	mov	r0, r4
 80039e8:	f00c fd76 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer11);
 80039ec:	9908      	ldr	r1, [sp, #32]
 80039ee:	4620      	mov	r0, r4
 80039f0:	f00c fd72 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainer12);
 80039f4:	9909      	ldr	r1, [sp, #36]	; 0x24
 80039f6:	4620      	mov	r0, r4
 80039f8:	f00c fd6e 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_close);
 80039fc:	ee19 1a90 	vmov	r1, s19
 8003a00:	4620      	mov	r0, r4
 8003a02:	f00c fd69 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_shift);
 8003a06:	4651      	mov	r1, sl
 8003a08:	4620      	mov	r0, r4
 8003a0a:	f00c fd65 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_del_all);
 8003a0e:	4649      	mov	r1, r9
 8003a10:	4620      	mov	r0, r4
 8003a12:	f00c fd61 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_del_pre);
 8003a16:	4641      	mov	r1, r8
 8003a18:	4620      	mov	r0, r4
 8003a1a:	f00c fd5d 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_ABC_123);
 8003a1e:	4620      	mov	r0, r4
 8003a20:	4659      	mov	r1, fp
 8003a22:	f00c fd59 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003a26:	4620      	mov	r0, r4
 8003a28:	b03d      	add	sp, #244	; 0xf4
 8003a2a:	ecbd 8b10 	vpop	{d8-d15}
 8003a2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003a32:	bf00      	nop

08003a34 <_ZN31CustomContainerKeyboard_NumBaseD1Ev>:

class CustomContainerKeyboard_NumBase : public touchgfx::Container
{
public:
    CustomContainerKeyboard_NumBase();
    virtual ~CustomContainerKeyboard_NumBase() {}
 8003a34:	4770      	bx	lr

08003a36 <_ZN31CustomContainerKeyboard_NumBase16ClickButtonEnterEv>:
     * Virtual Action Handlers
     */
    virtual void ClickButtonEnter()
    {
        // Override and implement this function in CustomContainerKeyboard_Num
    }
 8003a36:	4770      	bx	lr

08003a38 <_ZN31CustomContainerKeyboard_NumBase24ClickButtonCloseKeyboardEv>:

    virtual void ClickButtonCloseKeyboard()
    {
        // Override and implement this function in CustomContainerKeyboard_Num
    }
 8003a38:	4770      	bx	lr

08003a3a <_ZN31CustomContainerKeyboard_NumBase17ClickButtonDelPreEv>:

    virtual void ClickButtonDelPre()
    {
        // Override and implement this function in CustomContainerKeyboard_Num
    }
 8003a3a:	4770      	bx	lr

08003a3c <_ZN31CustomContainerKeyboard_NumBase31emitTriggerKeyboard_NumCallbackEv>:
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitTriggerKeyboard_NumCallback()
 8003a3c:	b570      	push	{r4, r5, r6, lr}
    {
        if (triggerKeyboard_NumCallback && triggerKeyboard_NumCallback->isValid())
 8003a3e:	f241 05a8 	movw	r5, #4264	; 0x10a8
    virtual void emitTriggerKeyboard_NumCallback()
 8003a42:	4604      	mov	r4, r0
        if (triggerKeyboard_NumCallback && triggerKeyboard_NumCallback->isValid())
 8003a44:	5940      	ldr	r0, [r0, r5]
 8003a46:	b148      	cbz	r0, 8003a5c <_ZN31CustomContainerKeyboard_NumBase31emitTriggerKeyboard_NumCallbackEv+0x20>
 8003a48:	6803      	ldr	r3, [r0, #0]
 8003a4a:	68db      	ldr	r3, [r3, #12]
 8003a4c:	4798      	blx	r3
 8003a4e:	b128      	cbz	r0, 8003a5c <_ZN31CustomContainerKeyboard_NumBase31emitTriggerKeyboard_NumCallbackEv+0x20>
        {
            this->triggerKeyboard_NumCallback->execute();
 8003a50:	5960      	ldr	r0, [r4, r5]
 8003a52:	6803      	ldr	r3, [r0, #0]
        }
    }
 8003a54:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            this->triggerKeyboard_NumCallback->execute();
 8003a58:	689b      	ldr	r3, [r3, #8]
 8003a5a:	4718      	bx	r3
    }
 8003a5c:	bd70      	pop	{r4, r5, r6, pc}

08003a5e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>:
void CustomContainerKeyboard_NumBase::customContainerButton_key1TriggerButton_keyCallbackHandler()
{
    //Interaction3
    //When customContainerButton_key1 triggerButton_key call action1 on CustomContainerKeyboard_Num
    //Call action1
    action1();
 8003a5e:	6803      	ldr	r3, [r0, #0]
 8003a60:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003a64:	4718      	bx	r3

08003a66 <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key2TriggerButton_keyCallbackHandlerEv>:
 8003a66:	f7ff bffa 	b.w	8003a5e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003a6a <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key3TriggerButton_keyCallbackHandlerEv>:
 8003a6a:	f7ff bff8 	b.w	8003a5e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003a6e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key4TriggerButton_keyCallbackHandlerEv>:
 8003a6e:	f7ff bff6 	b.w	8003a5e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003a72 <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key5TriggerButton_keyCallbackHandlerEv>:
 8003a72:	f7ff bff4 	b.w	8003a5e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003a76 <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key6TriggerButton_keyCallbackHandlerEv>:
 8003a76:	f7ff bff2 	b.w	8003a5e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003a7a <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key7TriggerButton_keyCallbackHandlerEv>:
 8003a7a:	f7ff bff0 	b.w	8003a5e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003a7e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key8TriggerButton_keyCallbackHandlerEv>:
 8003a7e:	f7ff bfee 	b.w	8003a5e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003a82 <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key9TriggerButton_keyCallbackHandlerEv>:
 8003a82:	f7ff bfec 	b.w	8003a5e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003a86 <_ZN31CustomContainerKeyboard_NumBase59customContainerButton_key10TriggerButton_keyCallbackHandlerEv>:
 8003a86:	f7ff bfea 	b.w	8003a5e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003a8a <_ZN31CustomContainerKeyboard_NumBase59customContainerButton_key11TriggerButton_keyCallbackHandlerEv>:
 8003a8a:	f7ff bfe8 	b.w	8003a5e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003a8e <_ZN31CustomContainerKeyboard_NumBase59customContainerButton_key12TriggerButton_keyCallbackHandlerEv>:
 8003a8e:	f7ff bfe6 	b.w	8003a5e <_ZN31CustomContainerKeyboard_NumBase58customContainerButton_key1TriggerButton_keyCallbackHandlerEv>

08003a92 <_ZN31CustomContainerKeyboard_NumBase7action1Ev>:
}

void CustomContainerKeyboard_NumBase::action1()
{

}
 8003a92:	4770      	bx	lr

08003a94 <_ZN8touchgfx8CallbackI31CustomContainerKeyboard_NumBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003a94:	4770      	bx	lr

08003a96 <_ZN8touchgfx8CallbackI31CustomContainerKeyboard_NumBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003a96:	4770      	bx	lr

08003a98 <_ZN8touchgfx8CallbackI31CustomContainerKeyboard_NumBasevvvE7executeEv>:
    virtual void execute()
 8003a98:	b410      	push	{r4}
        (pobject->*pmemfun_0)();
 8003a9a:	68c2      	ldr	r2, [r0, #12]
 8003a9c:	6841      	ldr	r1, [r0, #4]
 8003a9e:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8003aa0:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8003aa2:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8003aa6:	07d2      	lsls	r2, r2, #31
 8003aa8:	bf48      	it	mi
 8003aaa:	590a      	ldrmi	r2, [r1, r4]
 8003aac:	689b      	ldr	r3, [r3, #8]
    }
 8003aae:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8003ab2:	bf48      	it	mi
 8003ab4:	58d3      	ldrmi	r3, [r2, r3]
 8003ab6:	4718      	bx	r3

08003ab8 <_ZNK8touchgfx8CallbackI31CustomContainerKeyboard_NumBasevvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_0 != 0);
 8003ab8:	6843      	ldr	r3, [r0, #4]
 8003aba:	b12b      	cbz	r3, 8003ac8 <_ZNK8touchgfx8CallbackI31CustomContainerKeyboard_NumBasevvvE7isValidEv+0x10>
 8003abc:	6883      	ldr	r3, [r0, #8]
 8003abe:	b92b      	cbnz	r3, 8003acc <_ZNK8touchgfx8CallbackI31CustomContainerKeyboard_NumBasevvvE7isValidEv+0x14>
 8003ac0:	68c0      	ldr	r0, [r0, #12]
 8003ac2:	f000 0001 	and.w	r0, r0, #1
 8003ac6:	4770      	bx	lr
 8003ac8:	4618      	mov	r0, r3
 8003aca:	4770      	bx	lr
 8003acc:	2001      	movs	r0, #1
    }
 8003ace:	4770      	bx	lr

08003ad0 <_ZN8touchgfx8CallbackI31CustomContainerKeyboard_NumBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003ad0:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8003ad2:	68c2      	ldr	r2, [r0, #12]
 8003ad4:	6844      	ldr	r4, [r0, #4]
 8003ad6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003ad8:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8003ada:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003ade:	07d2      	lsls	r2, r2, #31
 8003ae0:	bf48      	it	mi
 8003ae2:	5962      	ldrmi	r2, [r4, r5]
 8003ae4:	689b      	ldr	r3, [r3, #8]
    }
 8003ae6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8003ae8:	bf48      	it	mi
 8003aea:	58d3      	ldrmi	r3, [r2, r3]
 8003aec:	4718      	bx	r3

08003aee <_ZNK8touchgfx8CallbackI31CustomContainerKeyboard_NumBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8003aee:	6843      	ldr	r3, [r0, #4]
 8003af0:	b12b      	cbz	r3, 8003afe <_ZNK8touchgfx8CallbackI31CustomContainerKeyboard_NumBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8003af2:	6883      	ldr	r3, [r0, #8]
 8003af4:	b92b      	cbnz	r3, 8003b02 <_ZNK8touchgfx8CallbackI31CustomContainerKeyboard_NumBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8003af6:	68c0      	ldr	r0, [r0, #12]
 8003af8:	f000 0001 	and.w	r0, r0, #1
 8003afc:	4770      	bx	lr
 8003afe:	4618      	mov	r0, r3
 8003b00:	4770      	bx	lr
 8003b02:	2001      	movs	r0, #1
    }
 8003b04:	4770      	bx	lr

08003b06 <_ZN8touchgfx8CallbackI31CustomContainerKeyboard_NumBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003b06:	b510      	push	{r4, lr}
 8003b08:	2110      	movs	r1, #16
 8003b0a:	4604      	mov	r4, r0
 8003b0c:	f020 fc65 	bl	80243da <_ZdlPvj>
 8003b10:	4620      	mov	r0, r4
 8003b12:	bd10      	pop	{r4, pc}

08003b14 <_ZN8touchgfx8CallbackI31CustomContainerKeyboard_NumBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003b14:	b510      	push	{r4, lr}
 8003b16:	2110      	movs	r1, #16
 8003b18:	4604      	mov	r4, r0
 8003b1a:	f020 fc5e 	bl	80243da <_ZdlPvj>
 8003b1e:	4620      	mov	r0, r4
 8003b20:	bd10      	pop	{r4, pc}

08003b22 <_ZN31CustomContainerKeyboard_NumBaseD0Ev>:
    virtual ~CustomContainerKeyboard_NumBase() {}
 8003b22:	b510      	push	{r4, lr}
 8003b24:	f241 01ac 	movw	r1, #4268	; 0x10ac
 8003b28:	4604      	mov	r4, r0
 8003b2a:	f020 fc56 	bl	80243da <_ZdlPvj>
 8003b2e:	4620      	mov	r0, r4
 8003b30:	bd10      	pop	{r4, pc}

08003b32 <_ZN31CustomContainerKeyboard_NumBase10initializeEv>:
{
 8003b32:	b510      	push	{r4, lr}
 8003b34:	4604      	mov	r4, r0
    customContainerButton_key1.initialize();
 8003b36:	f500 7006 	add.w	r0, r0, #536	; 0x218
 8003b3a:	f003 f9f5 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key2.initialize();
 8003b3e:	f504 704b 	add.w	r0, r4, #812	; 0x32c
 8003b42:	f003 f9f1 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key3.initialize();
 8003b46:	f504 6088 	add.w	r0, r4, #1088	; 0x440
 8003b4a:	f003 f9ed 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key4.initialize();
 8003b4e:	f204 5054 	addw	r0, r4, #1364	; 0x554
 8003b52:	f003 f9e9 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key5.initialize();
 8003b56:	f504 60cd 	add.w	r0, r4, #1640	; 0x668
 8003b5a:	f003 f9e5 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key6.initialize();
 8003b5e:	f204 707c 	addw	r0, r4, #1916	; 0x77c
 8003b62:	f003 f9e1 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key7.initialize();
 8003b66:	f504 6009 	add.w	r0, r4, #2192	; 0x890
 8003b6a:	f003 f9dd 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key8.initialize();
 8003b6e:	f604 10a4 	addw	r0, r4, #2468	; 0x9a4
 8003b72:	f003 f9d9 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key9.initialize();
 8003b76:	f604 20b8 	addw	r0, r4, #2744	; 0xab8
 8003b7a:	f003 f9d5 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key10.initialize();
 8003b7e:	f604 30cc 	addw	r0, r4, #3020	; 0xbcc
 8003b82:	f003 f9d1 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key11.initialize();
 8003b86:	f504 604e 	add.w	r0, r4, #3296	; 0xce0
 8003b8a:	f003 f9cd 	bl	8006f28 <_ZN25CustomContainerButton_key10initializeEv>
    customContainerButton_key12.initialize();
 8003b8e:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
}
 8003b92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    customContainerButton_key12.initialize();
 8003b96:	f003 b9c7 	b.w	8006f28 <_ZN25CustomContainerButton_key10initializeEv>

08003b9a <_ZN31CustomContainerKeyboard_NumBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void CustomContainerKeyboard_NumBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButtonEnter)
 8003b9a:	f100 0360 	add.w	r3, r0, #96	; 0x60
 8003b9e:	4299      	cmp	r1, r3
{
 8003ba0:	b510      	push	{r4, lr}
 8003ba2:	4604      	mov	r4, r0
    if (&src == &flexButtonEnter)
 8003ba4:	d10a      	bne.n	8003bbc <_ZN31CustomContainerKeyboard_NumBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
    {
        //Interaction1
        //When flexButtonEnter clicked call virtual function
        //Call ClickButtonEnter
        ClickButtonEnter();
 8003ba6:	6803      	ldr	r3, [r0, #0]
 8003ba8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8003bac:	4798      	blx	r3

        //Interaction15
        //When flexButtonEnter clicked emit triggerKeyboard_Num callback
        //Emit callback
        emitTriggerKeyboard_NumCallback();
 8003bae:	6823      	ldr	r3, [r4, #0]
 8003bb0:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8003bb4:	4620      	mov	r0, r4
        //Interaction16
        //When flexButton_del_pre clicked call virtual function
        //Call ClickButtonDelPre
        ClickButtonDelPre();
    }
}
 8003bb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        ClickButtonDelPre();
 8003bba:	4718      	bx	r3
    else if (&src == &flexButtonClose)
 8003bbc:	f500 738e 	add.w	r3, r0, #284	; 0x11c
 8003bc0:	4299      	cmp	r1, r3
 8003bc2:	d103      	bne.n	8003bcc <_ZN31CustomContainerKeyboard_NumBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x32>
        ClickButtonCloseKeyboard();
 8003bc4:	6803      	ldr	r3, [r0, #0]
 8003bc6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8003bca:	e7f4      	b.n	8003bb6 <_ZN31CustomContainerKeyboard_NumBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
    else if (&src == &flexButton_del_pre)
 8003bcc:	f600 7308 	addw	r3, r0, #3848	; 0xf08
 8003bd0:	4299      	cmp	r1, r3
 8003bd2:	d103      	bne.n	8003bdc <_ZN31CustomContainerKeyboard_NumBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x42>
        ClickButtonDelPre();
 8003bd4:	6803      	ldr	r3, [r0, #0]
 8003bd6:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003bda:	e7ec      	b.n	8003bb6 <_ZN31CustomContainerKeyboard_NumBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
}
 8003bdc:	bd10      	pop	{r4, pc}
	...

08003be0 <_ZN31CustomContainerKeyboard_NumBaseC1Ev>:
CustomContainerKeyboard_NumBase::CustomContainerKeyboard_NumBase() :
 8003be0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003be4:	ed2d 8b0c 	vpush	{d8-d13}
 8003be8:	4604      	mov	r4, r0
 8003bea:	b091      	sub	sp, #68	; 0x44
    triggerKeyboard_NumCallback(0)
 8003bec:	46a3      	mov	fp, r4
 8003bee:	2500      	movs	r5, #0
 8003bf0:	f7fe fb3e 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 8003bf4:	4bcd      	ldr	r3, [pc, #820]	; (8003f2c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x34c>)
 8003bf6:	62a5      	str	r5, [r4, #40]	; 0x28
 8003bf8:	f84b 3b2c 	str.w	r3, [fp], #44
        : Box(), borderColor(0), borderSize(0)
 8003bfc:	4658      	mov	r0, fp
 8003bfe:	f7fe fa5b 	bl	80020b8 <_ZN8touchgfx3BoxC1Ev>
 8003c02:	f104 0960 	add.w	r9, r4, #96	; 0x60
 8003c06:	4bca      	ldr	r3, [pc, #808]	; (8003f30 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x350>)
 8003c08:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003c0a:	f504 788e 	add.w	r8, r4, #284	; 0x11c
 8003c0e:	65a5      	str	r5, [r4, #88]	; 0x58
 8003c10:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8003c14:	4648      	mov	r0, r9
 8003c16:	f7fe fe8f 	bl	8002938 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8003c1a:	f504 7aec 	add.w	sl, r4, #472	; 0x1d8
 8003c1e:	4640      	mov	r0, r8
 8003c20:	f7fe fe8a 	bl	8002938 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : TextArea(), wildcard(0)
 8003c24:	4650      	mov	r0, sl
 8003c26:	f7fe fe15 	bl	8002854 <_ZN8touchgfx8TextAreaC1Ev>
 8003c2a:	4bc2      	ldr	r3, [pc, #776]	; (8003f34 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x354>)
 8003c2c:	f8c4 31d8 	str.w	r3, [r4, #472]	; 0x1d8
 8003c30:	f504 7306 	add.w	r3, r4, #536	; 0x218
 8003c34:	4618      	mov	r0, r3
 8003c36:	f8c4 5214 	str.w	r5, [r4, #532]	; 0x214
 8003c3a:	ee08 3a10 	vmov	s16, r3
 8003c3e:	f003 f97d 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8003c42:	f504 734b 	add.w	r3, r4, #812	; 0x32c
 8003c46:	4618      	mov	r0, r3
 8003c48:	ee08 3a90 	vmov	s17, r3
 8003c4c:	f003 f976 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8003c50:	f504 6388 	add.w	r3, r4, #1088	; 0x440
 8003c54:	4618      	mov	r0, r3
 8003c56:	ee09 3a10 	vmov	s18, r3
 8003c5a:	f003 f96f 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8003c5e:	f204 5354 	addw	r3, r4, #1364	; 0x554
 8003c62:	4618      	mov	r0, r3
 8003c64:	ee09 3a90 	vmov	s19, r3
 8003c68:	f003 f968 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8003c6c:	f504 63cd 	add.w	r3, r4, #1640	; 0x668
 8003c70:	4618      	mov	r0, r3
 8003c72:	ee0a 3a10 	vmov	s20, r3
 8003c76:	f003 f961 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8003c7a:	f204 737c 	addw	r3, r4, #1916	; 0x77c
 8003c7e:	4618      	mov	r0, r3
 8003c80:	ee0a 3a90 	vmov	s21, r3
 8003c84:	f003 f95a 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8003c88:	f504 6309 	add.w	r3, r4, #2192	; 0x890
 8003c8c:	4618      	mov	r0, r3
 8003c8e:	ee0b 3a10 	vmov	s22, r3
 8003c92:	f003 f953 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8003c96:	f604 13a4 	addw	r3, r4, #2468	; 0x9a4
 8003c9a:	4618      	mov	r0, r3
 8003c9c:	ee0b 3a90 	vmov	s23, r3
 8003ca0:	f003 f94c 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8003ca4:	f604 23b8 	addw	r3, r4, #2744	; 0xab8
 8003ca8:	4618      	mov	r0, r3
 8003caa:	ee0c 3a10 	vmov	s24, r3
 8003cae:	f003 f945 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8003cb2:	f604 33cc 	addw	r3, r4, #3020	; 0xbcc
 8003cb6:	4618      	mov	r0, r3
 8003cb8:	ee0c 3a90 	vmov	s25, r3
 8003cbc:	f003 f93e 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8003cc0:	f504 634e 	add.w	r3, r4, #3296	; 0xce0
 8003cc4:	4618      	mov	r0, r3
 8003cc6:	ee0d 3a10 	vmov	s26, r3
 8003cca:	f003 f937 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8003cce:	f604 53f4 	addw	r3, r4, #3572	; 0xdf4
 8003cd2:	4618      	mov	r0, r3
 8003cd4:	f604 7708 	addw	r7, r4, #3848	; 0xf08
 8003cd8:	ee0d 3a90 	vmov	s27, r3
 8003cdc:	f003 f92e 	bl	8006f3c <_ZN25CustomContainerButton_keyC1Ev>
 8003ce0:	4638      	mov	r0, r7
 8003ce2:	f7fe fe29 	bl	8002938 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8003ce6:	4b94      	ldr	r3, [pc, #592]	; (8003f38 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x358>)
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8003ce8:	4a94      	ldr	r2, [pc, #592]	; (8003f3c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x35c>)
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8003cea:	f8c4 3fd8 	str.w	r3, [r4, #4056]	; 0xfd8
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8003cee:	f8c4 2ff0 	str.w	r2, [r4, #4080]	; 0xff0
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8003cf2:	4b93      	ldr	r3, [pc, #588]	; (8003f40 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x360>)
 8003cf4:	f8c4 3fe0 	str.w	r3, [r4, #4064]	; 0xfe0
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8003cf8:	f504 5280 	add.w	r2, r4, #4096	; 0x1000
 8003cfc:	4b91      	ldr	r3, [pc, #580]	; (8003f44 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x364>)
 8003cfe:	4992      	ldr	r1, [pc, #584]	; (8003f48 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x368>)
 8003d00:	f8c4 3fe8 	str.w	r3, [r4, #4072]	; 0xfe8
 8003d04:	f8c4 3ff8 	str.w	r3, [r4, #4088]	; 0xff8
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8003d08:	f8c4 4fdc 	str.w	r4, [r4, #4060]	; 0xfdc
 8003d0c:	f8c4 5fe4 	str.w	r5, [r4, #4068]	; 0xfe4
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8003d10:	f8c4 4fec 	str.w	r4, [r4, #4076]	; 0xfec
 8003d14:	f8c4 5ff4 	str.w	r5, [r4, #4084]	; 0xff4
 8003d18:	f8c4 4ffc 	str.w	r4, [r4, #4092]	; 0xffc
 8003d1c:	6011      	str	r1, [r2, #0]
 8003d1e:	f241 0204 	movw	r2, #4100	; 0x1004
    boxWithBorder1.setPosition(0, 0, 270, 300);
 8003d22:	4658      	mov	r0, fp
 8003d24:	50a5      	str	r5, [r4, r2]
 8003d26:	f241 0208 	movw	r2, #4104	; 0x1008
 8003d2a:	18a1      	adds	r1, r4, r2
 8003d2c:	50a3      	str	r3, [r4, r2]
 8003d2e:	f241 0210 	movw	r2, #4112	; 0x1010
 8003d32:	604c      	str	r4, [r1, #4]
 8003d34:	9104      	str	r1, [sp, #16]
 8003d36:	4985      	ldr	r1, [pc, #532]	; (8003f4c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x36c>)
 8003d38:	50a1      	str	r1, [r4, r2]
 8003d3a:	f241 0214 	movw	r2, #4116	; 0x1014
 8003d3e:	2679      	movs	r6, #121	; 0x79
 8003d40:	50a5      	str	r5, [r4, r2]
 8003d42:	f241 0218 	movw	r2, #4120	; 0x1018
 8003d46:	18a1      	adds	r1, r4, r2
 8003d48:	50a3      	str	r3, [r4, r2]
 8003d4a:	f504 5281 	add.w	r2, r4, #4128	; 0x1020
 8003d4e:	604c      	str	r4, [r1, #4]
 8003d50:	9105      	str	r1, [sp, #20]
 8003d52:	497f      	ldr	r1, [pc, #508]	; (8003f50 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x370>)
 8003d54:	6011      	str	r1, [r2, #0]
 8003d56:	f241 0224 	movw	r2, #4132	; 0x1024
 8003d5a:	50a5      	str	r5, [r4, r2]
 8003d5c:	f241 0228 	movw	r2, #4136	; 0x1028
 8003d60:	18a1      	adds	r1, r4, r2
 8003d62:	50a3      	str	r3, [r4, r2]
 8003d64:	f241 0230 	movw	r2, #4144	; 0x1030
 8003d68:	604c      	str	r4, [r1, #4]
 8003d6a:	9106      	str	r1, [sp, #24]
 8003d6c:	4979      	ldr	r1, [pc, #484]	; (8003f54 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x374>)
 8003d6e:	50a1      	str	r1, [r4, r2]
 8003d70:	f241 0234 	movw	r2, #4148	; 0x1034
 8003d74:	50a5      	str	r5, [r4, r2]
 8003d76:	f241 0238 	movw	r2, #4152	; 0x1038
 8003d7a:	18a1      	adds	r1, r4, r2
 8003d7c:	50a3      	str	r3, [r4, r2]
 8003d7e:	f504 5282 	add.w	r2, r4, #4160	; 0x1040
 8003d82:	604c      	str	r4, [r1, #4]
 8003d84:	9107      	str	r1, [sp, #28]
 8003d86:	4974      	ldr	r1, [pc, #464]	; (8003f58 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x378>)
 8003d88:	6011      	str	r1, [r2, #0]
 8003d8a:	f241 0244 	movw	r2, #4164	; 0x1044
 8003d8e:	50a5      	str	r5, [r4, r2]
 8003d90:	f241 0248 	movw	r2, #4168	; 0x1048
 8003d94:	18a1      	adds	r1, r4, r2
 8003d96:	9108      	str	r1, [sp, #32]
 8003d98:	50a3      	str	r3, [r4, r2]
 8003d9a:	f241 0250 	movw	r2, #4176	; 0x1050
 8003d9e:	604c      	str	r4, [r1, #4]
 8003da0:	496e      	ldr	r1, [pc, #440]	; (8003f5c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x37c>)
 8003da2:	50a1      	str	r1, [r4, r2]
 8003da4:	f241 0254 	movw	r2, #4180	; 0x1054
 8003da8:	50a5      	str	r5, [r4, r2]
 8003daa:	f241 0258 	movw	r2, #4184	; 0x1058
 8003dae:	18a1      	adds	r1, r4, r2
 8003db0:	50a3      	str	r3, [r4, r2]
 8003db2:	f504 5283 	add.w	r2, r4, #4192	; 0x1060
 8003db6:	604c      	str	r4, [r1, #4]
 8003db8:	9109      	str	r1, [sp, #36]	; 0x24
 8003dba:	4969      	ldr	r1, [pc, #420]	; (8003f60 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x380>)
 8003dbc:	6011      	str	r1, [r2, #0]
 8003dbe:	f241 0264 	movw	r2, #4196	; 0x1064
 8003dc2:	50a5      	str	r5, [r4, r2]
 8003dc4:	f241 0268 	movw	r2, #4200	; 0x1068
 8003dc8:	18a1      	adds	r1, r4, r2
 8003dca:	50a3      	str	r3, [r4, r2]
 8003dcc:	f241 0270 	movw	r2, #4208	; 0x1070
 8003dd0:	604c      	str	r4, [r1, #4]
 8003dd2:	910a      	str	r1, [sp, #40]	; 0x28
 8003dd4:	4963      	ldr	r1, [pc, #396]	; (8003f64 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x384>)
 8003dd6:	50a1      	str	r1, [r4, r2]
 8003dd8:	f241 0274 	movw	r2, #4212	; 0x1074
 8003ddc:	50a5      	str	r5, [r4, r2]
 8003dde:	f241 0278 	movw	r2, #4216	; 0x1078
 8003de2:	18a1      	adds	r1, r4, r2
 8003de4:	50a3      	str	r3, [r4, r2]
 8003de6:	f504 5284 	add.w	r2, r4, #4224	; 0x1080
 8003dea:	604c      	str	r4, [r1, #4]
 8003dec:	910b      	str	r1, [sp, #44]	; 0x2c
 8003dee:	495e      	ldr	r1, [pc, #376]	; (8003f68 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x388>)
 8003df0:	6011      	str	r1, [r2, #0]
 8003df2:	f241 0284 	movw	r2, #4228	; 0x1084
 8003df6:	50a5      	str	r5, [r4, r2]
 8003df8:	f241 0288 	movw	r2, #4232	; 0x1088
 8003dfc:	18a1      	adds	r1, r4, r2
 8003dfe:	50a3      	str	r3, [r4, r2]
 8003e00:	f241 0290 	movw	r2, #4240	; 0x1090
 8003e04:	604c      	str	r4, [r1, #4]
 8003e06:	910c      	str	r1, [sp, #48]	; 0x30
 8003e08:	4958      	ldr	r1, [pc, #352]	; (8003f6c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x38c>)
 8003e0a:	50a1      	str	r1, [r4, r2]
 8003e0c:	f241 0294 	movw	r2, #4244	; 0x1094
 8003e10:	50a5      	str	r5, [r4, r2]
 8003e12:	f241 0298 	movw	r2, #4248	; 0x1098
 8003e16:	18a1      	adds	r1, r4, r2
 8003e18:	50a3      	str	r3, [r4, r2]
 8003e1a:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 8003e1e:	4a54      	ldr	r2, [pc, #336]	; (8003f70 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x390>)
 8003e20:	604c      	str	r4, [r1, #4]
 8003e22:	601a      	str	r2, [r3, #0]
 8003e24:	f241 03a4 	movw	r3, #4260	; 0x10a4
 8003e28:	910d      	str	r1, [sp, #52]	; 0x34
 8003e2a:	50e5      	str	r5, [r4, r3]
    triggerKeyboard_NumCallback(0)
 8003e2c:	f241 03a8 	movw	r3, #4264	; 0x10a8
    boxWithBorder1.setPosition(0, 0, 270, 300);
 8003e30:	462a      	mov	r2, r5
    triggerKeyboard_NumCallback(0)
 8003e32:	50e5      	str	r5, [r4, r3]
 8003e34:	4b4f      	ldr	r3, [pc, #316]	; (8003f74 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x394>)
 8003e36:	60a3      	str	r3, [r4, #8]
    boxWithBorder1.setPosition(0, 0, 270, 300);
 8003e38:	f44f 7396 	mov.w	r3, #300	; 0x12c
 8003e3c:	9300      	str	r3, [sp, #0]
 8003e3e:	4629      	mov	r1, r5
 8003e40:	f44f 7387 	mov.w	r3, #270	; 0x10e
 8003e44:	f7fe fcfa 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 8003e48:	4a4b      	ldr	r2, [pc, #300]	; (8003f78 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x398>)
 8003e4a:	9600      	str	r6, [sp, #0]
 8003e4c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003e50:	e9c4 2315 	strd	r2, r3, [r4, #84]	; 0x54
        borderSize = size;
 8003e54:	2305      	movs	r3, #5
 8003e56:	462a      	mov	r2, r5
 8003e58:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8003e5c:	4629      	mov	r1, r5
 8003e5e:	233c      	movs	r3, #60	; 0x3c
 8003e60:	f104 0094 	add.w	r0, r4, #148	; 0x94
 8003e64:	f7fe fcea 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8003e68:	f04f 0301 	mov.w	r3, #1
        down = colorPressed;
 8003e6c:	4943      	ldr	r1, [pc, #268]	; (8003f7c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x39c>)
 8003e6e:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 8003e72:	4b43      	ldr	r3, [pc, #268]	; (8003f80 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3a0>)
        borderUp = borderColorReleased;
 8003e74:	4843      	ldr	r0, [pc, #268]	; (8003f84 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3a4>)
 8003e76:	f8c4 00d0 	str.w	r0, [r4, #208]	; 0xd0
        down = colorPressed;
 8003e7a:	e9c4 3132 	strd	r3, r1, [r4, #200]	; 0xc8
        borderDown = borderColorPressed;
 8003e7e:	f503 134c 	add.w	r3, r3, #3342336	; 0x330000
 8003e82:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        handlePressedUpdated();
 8003e86:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8003e88:	4648      	mov	r0, r9
 8003e8a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003e8e:	4798      	blx	r3
    flexButtonEnter.setText(TypedText(T___SINGLEUSE_O6I9));
 8003e90:	f10d 0e38 	add.w	lr, sp, #56	; 0x38
        : typedTextId(id)
 8003e94:	4b3c      	ldr	r3, [pc, #240]	; (8003f88 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3a8>)
 8003e96:	930e      	str	r3, [sp, #56]	; 0x38
 8003e98:	4671      	mov	r1, lr
 8003e9a:	231c      	movs	r3, #28
 8003e9c:	4648      	mov	r0, r9
 8003e9e:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8003ea2:	f7fe fcff 	bl	80028a4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8003ea6:	2232      	movs	r2, #50	; 0x32
 8003ea8:	4629      	mov	r1, r5
 8003eaa:	9600      	str	r6, [sp, #0]
 8003eac:	233c      	movs	r3, #60	; 0x3c
 8003eae:	f104 00d8 	add.w	r0, r4, #216	; 0xd8
 8003eb2:	f7fe fcc3 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8003eb6:	4b35      	ldr	r3, [pc, #212]	; (8003f8c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3ac>)
        handlePressedUpdated();
 8003eb8:	4648      	mov	r0, r9
        colorPressed = newColorPressed;
 8003eba:	e9c4 3345 	strd	r3, r3, [r4, #276]	; 0x114
        handlePressedUpdated();
 8003ebe:	f7fe fb68 	bl	8002592 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonEnter.setPosition(196, 106, 60, 121);
 8003ec2:	9600      	str	r6, [sp, #0]
 8003ec4:	233c      	movs	r3, #60	; 0x3c
    flexButtonEnter.setAction(flexButtonCallback);
 8003ec6:	f604 76d8 	addw	r6, r4, #4056	; 0xfd8
    flexButtonEnter.setPosition(196, 106, 60, 121);
 8003eca:	226a      	movs	r2, #106	; 0x6a
 8003ecc:	21c4      	movs	r1, #196	; 0xc4
 8003ece:	4648      	mov	r0, r9
 8003ed0:	f7fe fcb4 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonEnter.setAction(flexButtonCallback);
 8003ed4:	9602      	str	r6, [sp, #8]
 8003ed6:	f8c4 6090 	str.w	r6, [r4, #144]	; 0x90
        borderBox.setPosition(x, y, width, height);
 8003eda:	263c      	movs	r6, #60	; 0x3c
 8003edc:	4633      	mov	r3, r6
 8003ede:	462a      	mov	r2, r5
 8003ee0:	4629      	mov	r1, r5
 8003ee2:	f504 70a8 	add.w	r0, r4, #336	; 0x150
 8003ee6:	9600      	str	r6, [sp, #0]
 8003ee8:	f7fe fca8 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 8003eec:	4923      	ldr	r1, [pc, #140]	; (8003f7c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x39c>)
 8003eee:	4a24      	ldr	r2, [pc, #144]	; (8003f80 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3a0>)
        handlePressedUpdated();
 8003ef0:	f8d4 311c 	ldr.w	r3, [r4, #284]	; 0x11c
        borderUp = borderColorReleased;
 8003ef4:	4823      	ldr	r0, [pc, #140]	; (8003f84 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3a4>)
        handlePressedUpdated();
 8003ef6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
        borderUp = borderColorReleased;
 8003efa:	f8c4 018c 	str.w	r0, [r4, #396]	; 0x18c
 8003efe:	f04f 0c01 	mov.w	ip, #1
        down = colorPressed;
 8003f02:	e9c4 2161 	strd	r2, r1, [r4, #388]	; 0x184
        borderDown = borderColorPressed;
 8003f06:	f502 124c 	add.w	r2, r2, #3342336	; 0x330000
 8003f0a:	f8a4 c180 	strh.w	ip, [r4, #384]	; 0x180
 8003f0e:	f8c4 2190 	str.w	r2, [r4, #400]	; 0x190
        handlePressedUpdated();
 8003f12:	4640      	mov	r0, r8
 8003f14:	4798      	blx	r3
 8003f16:	4a1c      	ldr	r2, [pc, #112]	; (8003f88 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3a8>)
 8003f18:	920e      	str	r2, [sp, #56]	; 0x38
 8003f1a:	231b      	movs	r3, #27
    flexButtonClose.setText(TypedText(T___SINGLEUSE_66SU));
 8003f1c:	a90e      	add	r1, sp, #56	; 0x38
 8003f1e:	4640      	mov	r0, r8
 8003f20:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8003f24:	f7fe fcbe 	bl	80028a4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
 8003f28:	e032      	b.n	8003f90 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x3b0>
 8003f2a:	bf00      	nop
 8003f2c:	080274b8 	.word	0x080274b8
 8003f30:	08029ec4 	.word	0x08029ec4
 8003f34:	08029da4 	.word	0x08029da4
 8003f38:	08027488 	.word	0x08027488
 8003f3c:	08003a5f 	.word	0x08003a5f
 8003f40:	08003b9b 	.word	0x08003b9b
 8003f44:	080274a0 	.word	0x080274a0
 8003f48:	08003a67 	.word	0x08003a67
 8003f4c:	08003a6b 	.word	0x08003a6b
 8003f50:	08003a6f 	.word	0x08003a6f
 8003f54:	08003a73 	.word	0x08003a73
 8003f58:	08003a77 	.word	0x08003a77
 8003f5c:	08003a7b 	.word	0x08003a7b
 8003f60:	08003a7f 	.word	0x08003a7f
 8003f64:	08003a83 	.word	0x08003a83
 8003f68:	08003a87 	.word	0x08003a87
 8003f6c:	08003a8b 	.word	0x08003a8b
 8003f70:	08003a8f 	.word	0x08003a8f
 8003f74:	012c010e 	.word	0x012c010e
 8003f78:	ff878787 	.word	0xff878787
 8003f7c:	ff0099cc 	.word	0xff0099cc
 8003f80:	ff006699 	.word	0xff006699
 8003f84:	ff003366 	.word	0xff003366
 8003f88:	08027114 	.word	0x08027114
 8003f8c:	ff0a0a0a 	.word	0xff0a0a0a
        text.setPosition(x, y, width, height);
 8003f90:	2214      	movs	r2, #20
 8003f92:	4629      	mov	r1, r5
 8003f94:	4633      	mov	r3, r6
 8003f96:	f504 70ca 	add.w	r0, r4, #404	; 0x194
 8003f9a:	9600      	str	r6, [sp, #0]
 8003f9c:	f7fe fc4e 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8003fa0:	4baa      	ldr	r3, [pc, #680]	; (800424c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x66c>)
        handlePressedUpdated();
 8003fa2:	4640      	mov	r0, r8
        colorPressed = newColorPressed;
 8003fa4:	e9c4 3374 	strd	r3, r3, [r4, #464]	; 0x1d0
        handlePressedUpdated();
 8003fa8:	f7fe faf3 	bl	8002592 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonClose.setPosition(196, 228, 60, 60);
 8003fac:	4633      	mov	r3, r6
 8003fae:	22e4      	movs	r2, #228	; 0xe4
 8003fb0:	21c4      	movs	r1, #196	; 0xc4
 8003fb2:	4640      	mov	r0, r8
 8003fb4:	9600      	str	r6, [sp, #0]
 8003fb6:	f7fe fc41 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8003fba:	9b02      	ldr	r3, [sp, #8]
 8003fbc:	f8c4 314c 	str.w	r3, [r4, #332]	; 0x14c
    textArea1.setPosition(13, 14, 200, 25);
 8003fc0:	2319      	movs	r3, #25
 8003fc2:	9300      	str	r3, [sp, #0]
 8003fc4:	220e      	movs	r2, #14
 8003fc6:	23c8      	movs	r3, #200	; 0xc8
 8003fc8:	210d      	movs	r1, #13
 8003fca:	4650      	mov	r0, sl
 8003fcc:	f7fe fc36 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8003fd0:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003fd4:	f8c4 3208 	str.w	r3, [r4, #520]	; 0x208
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4UB8).getText());
 8003fd8:	f604 73c4 	addw	r3, r4, #4036	; 0xfc4
 8003fdc:	9303      	str	r3, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003fde:	4b9c      	ldr	r3, [pc, #624]	; (8004250 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x670>)
        linespace = space;
 8003fe0:	f8a4 520c 	strh.w	r5, [r4, #524]	; 0x20c
 8003fe4:	681b      	ldr	r3, [r3, #0]
 8003fe6:	b92b      	cbnz	r3, 8003ff4 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x414>
 8003fe8:	4b9a      	ldr	r3, [pc, #616]	; (8004254 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x674>)
 8003fea:	4a9b      	ldr	r2, [pc, #620]	; (8004258 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x678>)
 8003fec:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8003fee:	489b      	ldr	r0, [pc, #620]	; (800425c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x67c>)
 8003ff0:	f020 fa22 	bl	8024438 <__assert_func>
 8003ff4:	4b9a      	ldr	r3, [pc, #616]	; (8004260 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x680>)
 8003ff6:	881b      	ldrh	r3, [r3, #0]
 8003ff8:	2b1a      	cmp	r3, #26
 8003ffa:	d803      	bhi.n	8004004 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x424>
 8003ffc:	4b99      	ldr	r3, [pc, #612]	; (8004264 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x684>)
 8003ffe:	4a96      	ldr	r2, [pc, #600]	; (8004258 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x678>)
 8004000:	21af      	movs	r1, #175	; 0xaf
 8004002:	e7f4      	b.n	8003fee <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x40e>
        return texts->getText(typedTextId);
 8004004:	4b98      	ldr	r3, [pc, #608]	; (8004268 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x688>)
 8004006:	211a      	movs	r1, #26
 8004008:	6818      	ldr	r0, [r3, #0]
 800400a:	f002 ff5d 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 800400e:	4a97      	ldr	r2, [pc, #604]	; (800426c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x68c>)
 8004010:	4603      	mov	r3, r0
 8004012:	210a      	movs	r1, #10
 8004014:	9803      	ldr	r0, [sp, #12]
 8004016:	f014 f8c3 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wildcard = value;
 800401a:	9b03      	ldr	r3, [sp, #12]
 800401c:	f8c4 3214 	str.w	r3, [r4, #532]	; 0x214
        : typedTextId(id)
 8004020:	f04f 0219 	mov.w	r2, #25
 8004024:	4b92      	ldr	r3, [pc, #584]	; (8004270 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x690>)
 8004026:	930e      	str	r3, [sp, #56]	; 0x38
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z4JY));
 8004028:	a90e      	add	r1, sp, #56	; 0x38
 800402a:	4650      	mov	r0, sl
 800402c:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 8004030:	f00e f833 	bl	801209a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    customContainerButton_key1.setXY(13, 45);
 8004034:	ee18 0a10 	vmov	r0, s16
 8004038:	222d      	movs	r2, #45	; 0x2d
 800403a:	210d      	movs	r1, #13
 800403c:	f7fe f92a 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
    customContainerButton_key1.setTriggerButton_keyCallback(customContainerButton_key1TriggerButton_keyCallback);
 8004040:	f604 73e8 	addw	r3, r4, #4072	; 0xfe8
    customContainerButton_key2.setXY(74, 45);
 8004044:	ee18 0a90 	vmov	r0, s17
 8004048:	f8c4 3328 	str.w	r3, [r4, #808]	; 0x328
 800404c:	222d      	movs	r2, #45	; 0x2d
 800404e:	214a      	movs	r1, #74	; 0x4a
 8004050:	f7fe f920 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
    customContainerButton_key2.setTriggerButton_keyCallback(customContainerButton_key2TriggerButton_keyCallback);
 8004054:	f604 73f8 	addw	r3, r4, #4088	; 0xff8
 8004058:	f8c4 343c 	str.w	r3, [r4, #1084]	; 0x43c
    customContainerButton_key3.setXY(135, 45);
 800405c:	ee19 0a10 	vmov	r0, s18
 8004060:	222d      	movs	r2, #45	; 0x2d
 8004062:	2187      	movs	r1, #135	; 0x87
 8004064:	f7fe f916 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8004068:	9a04      	ldr	r2, [sp, #16]
 800406a:	f8c4 2550 	str.w	r2, [r4, #1360]	; 0x550
    customContainerButton_key4.setXY(13, 106);
 800406e:	ee19 0a90 	vmov	r0, s19
 8004072:	226a      	movs	r2, #106	; 0x6a
 8004074:	210d      	movs	r1, #13
 8004076:	f7fe f90d 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800407a:	9a05      	ldr	r2, [sp, #20]
 800407c:	f8c4 2664 	str.w	r2, [r4, #1636]	; 0x664
    customContainerButton_key5.setXY(74, 106);
 8004080:	ee1a 0a10 	vmov	r0, s20
 8004084:	226a      	movs	r2, #106	; 0x6a
 8004086:	214a      	movs	r1, #74	; 0x4a
 8004088:	f7fe f904 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800408c:	9a06      	ldr	r2, [sp, #24]
 800408e:	f8c4 2778 	str.w	r2, [r4, #1912]	; 0x778
    customContainerButton_key6.setXY(135, 106);
 8004092:	ee1a 0a90 	vmov	r0, s21
 8004096:	226a      	movs	r2, #106	; 0x6a
 8004098:	2187      	movs	r1, #135	; 0x87
 800409a:	f7fe f8fb 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800409e:	9a07      	ldr	r2, [sp, #28]
 80040a0:	f8c4 288c 	str.w	r2, [r4, #2188]	; 0x88c
    customContainerButton_key7.setXY(13, 167);
 80040a4:	ee1b 0a10 	vmov	r0, s22
 80040a8:	22a7      	movs	r2, #167	; 0xa7
 80040aa:	210d      	movs	r1, #13
 80040ac:	f7fe f8f2 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80040b0:	9a08      	ldr	r2, [sp, #32]
 80040b2:	f8c4 29a0 	str.w	r2, [r4, #2464]	; 0x9a0
    customContainerButton_key8.setXY(74, 167);
 80040b6:	ee1b 0a90 	vmov	r0, s23
 80040ba:	22a7      	movs	r2, #167	; 0xa7
 80040bc:	214a      	movs	r1, #74	; 0x4a
 80040be:	f7fe f8e9 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80040c2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80040c4:	f8c4 2ab4 	str.w	r2, [r4, #2740]	; 0xab4
    customContainerButton_key9.setXY(135, 167);
 80040c8:	ee1c 0a10 	vmov	r0, s24
 80040cc:	22a7      	movs	r2, #167	; 0xa7
 80040ce:	2187      	movs	r1, #135	; 0x87
 80040d0:	f7fe f8e0 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80040d4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80040d6:	f8c4 2bc8 	str.w	r2, [r4, #3016]	; 0xbc8
    customContainerButton_key10.setXY(13, 228);
 80040da:	ee1c 0a90 	vmov	r0, s25
 80040de:	22e4      	movs	r2, #228	; 0xe4
 80040e0:	210d      	movs	r1, #13
 80040e2:	f7fe f8d7 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80040e6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80040e8:	f8c4 2cdc 	str.w	r2, [r4, #3292]	; 0xcdc
    customContainerButton_key11.setXY(74, 228);
 80040ec:	ee1d 0a10 	vmov	r0, s26
 80040f0:	22e4      	movs	r2, #228	; 0xe4
 80040f2:	214a      	movs	r1, #74	; 0x4a
 80040f4:	f7fe f8ce 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80040f8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80040fa:	f8c4 2df0 	str.w	r2, [r4, #3568]	; 0xdf0
    customContainerButton_key12.setXY(135, 228);
 80040fe:	ee1d 0a90 	vmov	r0, s27
 8004102:	22e4      	movs	r2, #228	; 0xe4
 8004104:	2187      	movs	r1, #135	; 0x87
 8004106:	f7fe f8c5 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800410a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800410c:	f8c4 2f04 	str.w	r2, [r4, #3844]	; 0xf04
        borderBox.setPosition(x, y, width, height);
 8004110:	4629      	mov	r1, r5
 8004112:	4633      	mov	r3, r6
 8004114:	462a      	mov	r2, r5
 8004116:	f604 703c 	addw	r0, r4, #3900	; 0xf3c
 800411a:	9600      	str	r6, [sp, #0]
 800411c:	f7fe fb8e 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8004120:	f04f 0201 	mov.w	r2, #1
 8004124:	f8a4 2f6c 	strh.w	r2, [r4, #3948]	; 0xf6c
        up = colorReleased;
 8004128:	4a52      	ldr	r2, [pc, #328]	; (8004274 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x694>)
 800412a:	f8c4 2f70 	str.w	r2, [r4, #3952]	; 0xf70
        down = colorPressed;
 800412e:	f502 524c 	add.w	r2, r2, #13056	; 0x3300
 8004132:	3233      	adds	r2, #51	; 0x33
 8004134:	f8c4 2f74 	str.w	r2, [r4, #3956]	; 0xf74
        borderUp = borderColorReleased;
 8004138:	f5a2 42cc 	sub.w	r2, r2, #26112	; 0x6600
 800413c:	3a66      	subs	r2, #102	; 0x66
        handlePressedUpdated();
 800413e:	f8d4 3f08 	ldr.w	r3, [r4, #3848]	; 0xf08
        borderUp = borderColorReleased;
 8004142:	f8c4 2f78 	str.w	r2, [r4, #3960]	; 0xf78
        borderDown = borderColorPressed;
 8004146:	f102 1233 	add.w	r2, r2, #3342387	; 0x330033
 800414a:	f502 524c 	add.w	r2, r2, #13056	; 0x3300
 800414e:	f8c4 2f7c 	str.w	r2, [r4, #3964]	; 0xf7c
        handlePressedUpdated();
 8004152:	4638      	mov	r0, r7
 8004154:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004158:	4798      	blx	r3
 800415a:	4b45      	ldr	r3, [pc, #276]	; (8004270 <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x690>)
 800415c:	930e      	str	r3, [sp, #56]	; 0x38
    flexButton_del_pre.setText(TypedText(T___SINGLEUSE_TS12));
 800415e:	a90e      	add	r1, sp, #56	; 0x38
 8004160:	2316      	movs	r3, #22
 8004162:	4638      	mov	r0, r7
 8004164:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8004168:	f7fe fb9c 	bl	80028a4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 800416c:	4629      	mov	r1, r5
 800416e:	4633      	mov	r3, r6
 8004170:	2214      	movs	r2, #20
 8004172:	f504 6078 	add.w	r0, r4, #3968	; 0xf80
 8004176:	9600      	str	r6, [sp, #0]
 8004178:	f7fe fb60 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 800417c:	4b33      	ldr	r3, [pc, #204]	; (800424c <_ZN31CustomContainerKeyboard_NumBaseC1Ev+0x66c>)
 800417e:	f8c4 3fbc 	str.w	r3, [r4, #4028]	; 0xfbc
        colorPressed = newColorPressed;
 8004182:	f8c4 3fc0 	str.w	r3, [r4, #4032]	; 0xfc0
        handlePressedUpdated();
 8004186:	4638      	mov	r0, r7
 8004188:	f7fe fa03 	bl	8002592 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_del_pre.setPosition(196, 45, 60, 60);
 800418c:	222d      	movs	r2, #45	; 0x2d
 800418e:	4633      	mov	r3, r6
 8004190:	4638      	mov	r0, r7
 8004192:	9600      	str	r6, [sp, #0]
 8004194:	21c4      	movs	r1, #196	; 0xc4
 8004196:	f7fe fb51 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 800419a:	9b02      	ldr	r3, [sp, #8]
 800419c:	f8c4 3f38 	str.w	r3, [r4, #3896]	; 0xf38
    add(boxWithBorder1);
 80041a0:	4659      	mov	r1, fp
 80041a2:	4620      	mov	r0, r4
 80041a4:	f00c f998 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButtonEnter);
 80041a8:	4649      	mov	r1, r9
 80041aa:	4620      	mov	r0, r4
 80041ac:	f00c f994 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButtonClose);
 80041b0:	4641      	mov	r1, r8
 80041b2:	4620      	mov	r0, r4
 80041b4:	f00c f990 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textArea1);
 80041b8:	4651      	mov	r1, sl
 80041ba:	4620      	mov	r0, r4
 80041bc:	f00c f98c 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key1);
 80041c0:	ee18 1a10 	vmov	r1, s16
 80041c4:	4620      	mov	r0, r4
 80041c6:	f00c f987 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key2);
 80041ca:	ee18 1a90 	vmov	r1, s17
 80041ce:	4620      	mov	r0, r4
 80041d0:	f00c f982 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key3);
 80041d4:	ee19 1a10 	vmov	r1, s18
 80041d8:	4620      	mov	r0, r4
 80041da:	f00c f97d 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key4);
 80041de:	ee19 1a90 	vmov	r1, s19
 80041e2:	4620      	mov	r0, r4
 80041e4:	f00c f978 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key5);
 80041e8:	ee1a 1a10 	vmov	r1, s20
 80041ec:	4620      	mov	r0, r4
 80041ee:	f00c f973 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key6);
 80041f2:	ee1a 1a90 	vmov	r1, s21
 80041f6:	4620      	mov	r0, r4
 80041f8:	f00c f96e 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key7);
 80041fc:	ee1b 1a10 	vmov	r1, s22
 8004200:	4620      	mov	r0, r4
 8004202:	f00c f969 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key8);
 8004206:	ee1b 1a90 	vmov	r1, s23
 800420a:	4620      	mov	r0, r4
 800420c:	f00c f964 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key9);
 8004210:	ee1c 1a10 	vmov	r1, s24
 8004214:	4620      	mov	r0, r4
 8004216:	f00c f95f 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key10);
 800421a:	ee1c 1a90 	vmov	r1, s25
 800421e:	4620      	mov	r0, r4
 8004220:	f00c f95a 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key11);
 8004224:	ee1d 1a10 	vmov	r1, s26
 8004228:	4620      	mov	r0, r4
 800422a:	f00c f955 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(customContainerButton_key12);
 800422e:	ee1d 1a90 	vmov	r1, s27
 8004232:	4620      	mov	r0, r4
 8004234:	f00c f950 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(flexButton_del_pre);
 8004238:	4620      	mov	r0, r4
 800423a:	4639      	mov	r1, r7
 800423c:	f00c f94c 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004240:	4620      	mov	r0, r4
 8004242:	b011      	add	sp, #68	; 0x44
 8004244:	ecbd 8b0c 	vpop	{d8-d13}
 8004248:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800424c:	ff0a0a0a 	.word	0xff0a0a0a
 8004250:	20020ae0 	.word	0x20020ae0
 8004254:	08027000 	.word	0x08027000
 8004258:	08027042 	.word	0x08027042
 800425c:	08027070 	.word	0x08027070
 8004260:	20020ae4 	.word	0x20020ae4
 8004264:	080270b7 	.word	0x080270b7
 8004268:	20020aec 	.word	0x20020aec
 800426c:	08027109 	.word	0x08027109
 8004270:	08027114 	.word	0x08027114
 8004274:	ff006699 	.word	0xff006699

08004278 <_ZN29CustomContainerScrollListBaseD1Ev>:

class CustomContainerScrollListBase : public touchgfx::Container
{
public:
    CustomContainerScrollListBase();
    virtual ~CustomContainerScrollListBase() {}
 8004278:	4770      	bx	lr

0800427a <_ZN29CustomContainerScrollListBase10initializeEv>:
}

void CustomContainerScrollListBase::initialize()
{

}
 800427a:	4770      	bx	lr

0800427c <_ZN29CustomContainerScrollListBaseD0Ev>:
 800427c:	b510      	push	{r4, lr}
 800427e:	f44f 718a 	mov.w	r1, #276	; 0x114
 8004282:	4604      	mov	r4, r0
 8004284:	f020 f8a9 	bl	80243da <_ZdlPvj>
 8004288:	4620      	mov	r0, r4
 800428a:	bd10      	pop	{r4, pc}

0800428c <_ZN29CustomContainerScrollListBaseC1Ev>:
CustomContainerScrollListBase::CustomContainerScrollListBase()
 800428c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8004290:	4604      	mov	r4, r0
 8004292:	4625      	mov	r5, r4
 8004294:	f7fd ffec 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 8004298:	2600      	movs	r6, #0
 800429a:	4b42      	ldr	r3, [pc, #264]	; (80043a4 <_ZN29CustomContainerScrollListBaseC1Ev+0x118>)
 800429c:	62a6      	str	r6, [r4, #40]	; 0x28
 800429e:	f845 3b2c 	str.w	r3, [r5], #44
 80042a2:	4628      	mov	r0, r5
 80042a4:	f7fe f804 	bl	80022b0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80042a8:	4b3f      	ldr	r3, [pc, #252]	; (80043a8 <_ZN29CustomContainerScrollListBaseC1Ev+0x11c>)
 80042aa:	60a3      	str	r3, [r4, #8]
        borderBox.setPosition(x, y, width, height);
 80042ac:	f104 0060 	add.w	r0, r4, #96	; 0x60
        setXY(x, y);
 80042b0:	4632      	mov	r2, r6
 80042b2:	4631      	mov	r1, r6
 80042b4:	9001      	str	r0, [sp, #4]
 80042b6:	f7fd ffed 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80042ba:	2214      	movs	r2, #20
 80042bc:	2132      	movs	r1, #50	; 0x32
 80042be:	9801      	ldr	r0, [sp, #4]
 80042c0:	f7fd feed 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80042c4:	2301      	movs	r3, #1
 80042c6:	f8a4 3090 	strh.w	r3, [r4, #144]	; 0x90
        up = colorReleased;
 80042ca:	4b38      	ldr	r3, [pc, #224]	; (80043ac <_ZN29CustomContainerScrollListBaseC1Ev+0x120>)
 80042cc:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
        down = colorPressed;
 80042d0:	f503 534c 	add.w	r3, r3, #13056	; 0x3300
 80042d4:	3333      	adds	r3, #51	; 0x33
 80042d6:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        borderUp = borderColorReleased;
 80042da:	f5a3 43cc 	sub.w	r3, r3, #26112	; 0x6600
 80042de:	3b66      	subs	r3, #102	; 0x66
 80042e0:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
        borderDown = borderColorPressed;
 80042e4:	f103 1333 	add.w	r3, r3, #3342387	; 0x330033
 80042e8:	f503 534c 	add.w	r3, r3, #13056	; 0x3300
 80042ec:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
        handlePressedUpdated();
 80042f0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80042f2:	4628      	mov	r0, r5
 80042f4:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80042f8:	4798      	blx	r3
        wildcardText.setTypedText(t);
 80042fa:	f104 07a4 	add.w	r7, r4, #164	; 0xa4
 80042fe:	4b2c      	ldr	r3, [pc, #176]	; (80043b0 <_ZN29CustomContainerScrollListBaseC1Ev+0x124>)
 8004300:	9302      	str	r3, [sp, #8]
 8004302:	a902      	add	r1, sp, #8
 8004304:	234e      	movs	r3, #78	; 0x4e
 8004306:	4638      	mov	r0, r7
 8004308:	f8ad 300c 	strh.w	r3, [sp, #12]
 800430c:	f00d fec5 	bl	801209a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        wildcardText.setWidthHeight(T::getWidth(), T::getHeight());
 8004310:	f9b4 3036 	ldrsh.w	r3, [r4, #54]	; 0x36
        rect.height = height;
 8004314:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004318:	4b26      	ldr	r3, [pc, #152]	; (80043b4 <_ZN29CustomContainerScrollListBaseC1Ev+0x128>)
        rect.width = width;
 800431a:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 800431c:	681b      	ldr	r3, [r3, #0]
 800431e:	f8a4 20ac 	strh.w	r2, [r4, #172]	; 0xac
    Unicode::snprintf(flexButton1Buffer, FLEXBUTTON1_SIZE, "%s", TypedText(T___SINGLEUSE_CAOO).getText());
 8004322:	f104 08ec 	add.w	r8, r4, #236	; 0xec
 8004326:	b92b      	cbnz	r3, 8004334 <_ZN29CustomContainerScrollListBaseC1Ev+0xa8>
 8004328:	4b23      	ldr	r3, [pc, #140]	; (80043b8 <_ZN29CustomContainerScrollListBaseC1Ev+0x12c>)
 800432a:	4a24      	ldr	r2, [pc, #144]	; (80043bc <_ZN29CustomContainerScrollListBaseC1Ev+0x130>)
 800432c:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800432e:	4824      	ldr	r0, [pc, #144]	; (80043c0 <_ZN29CustomContainerScrollListBaseC1Ev+0x134>)
 8004330:	f020 f882 	bl	8024438 <__assert_func>
 8004334:	4b23      	ldr	r3, [pc, #140]	; (80043c4 <_ZN29CustomContainerScrollListBaseC1Ev+0x138>)
 8004336:	881b      	ldrh	r3, [r3, #0]
 8004338:	2b4f      	cmp	r3, #79	; 0x4f
 800433a:	d803      	bhi.n	8004344 <_ZN29CustomContainerScrollListBaseC1Ev+0xb8>
 800433c:	4b22      	ldr	r3, [pc, #136]	; (80043c8 <_ZN29CustomContainerScrollListBaseC1Ev+0x13c>)
 800433e:	4a1f      	ldr	r2, [pc, #124]	; (80043bc <_ZN29CustomContainerScrollListBaseC1Ev+0x130>)
 8004340:	21af      	movs	r1, #175	; 0xaf
 8004342:	e7f4      	b.n	800432e <_ZN29CustomContainerScrollListBaseC1Ev+0xa2>
        return texts->getText(typedTextId);
 8004344:	4b21      	ldr	r3, [pc, #132]	; (80043cc <_ZN29CustomContainerScrollListBaseC1Ev+0x140>)
 8004346:	214f      	movs	r1, #79	; 0x4f
 8004348:	6818      	ldr	r0, [r3, #0]
 800434a:	f002 fdbd 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 800434e:	4a20      	ldr	r2, [pc, #128]	; (80043d0 <_ZN29CustomContainerScrollListBaseC1Ev+0x144>)
 8004350:	4603      	mov	r3, r0
 8004352:	2114      	movs	r1, #20
 8004354:	4640      	mov	r0, r8
 8004356:	f013 ff23 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        setXY(x, y);
 800435a:	4632      	mov	r2, r6
 800435c:	4631      	mov	r1, r6
 800435e:	4638      	mov	r0, r7
 8004360:	f8c4 80e0 	str.w	r8, [r4, #224]	; 0xe0
 8004364:	f7fd ff96 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8004368:	2214      	movs	r2, #20
 800436a:	2132      	movs	r1, #50	; 0x32
 800436c:	4638      	mov	r0, r7
 800436e:	f7fd fe96 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
        colorReleased = newColorReleased;
 8004372:	4b18      	ldr	r3, [pc, #96]	; (80043d4 <_ZN29CustomContainerScrollListBaseC1Ev+0x148>)
        handlePressedUpdated();
 8004374:	4628      	mov	r0, r5
        colorPressed = newColorPressed;
 8004376:	e9c4 3339 	strd	r3, r3, [r4, #228]	; 0xe4
        handlePressedUpdated();
 800437a:	f7fd fed6 	bl	800212a <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
        setXY(x, y);
 800437e:	4632      	mov	r2, r6
 8004380:	4631      	mov	r1, r6
 8004382:	4628      	mov	r0, r5
 8004384:	f7fd ff86 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8004388:	2214      	movs	r2, #20
 800438a:	4628      	mov	r0, r5
 800438c:	2132      	movs	r1, #50	; 0x32
 800438e:	f7fd fe86 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
    add(flexButton1);
 8004392:	4620      	mov	r0, r4
 8004394:	4629      	mov	r1, r5
 8004396:	f00c f89f 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800439a:	4620      	mov	r0, r4
 800439c:	b004      	add	sp, #16
 800439e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80043a2:	bf00      	nop
 80043a4:	0802755c 	.word	0x0802755c
 80043a8:	00140032 	.word	0x00140032
 80043ac:	ff006699 	.word	0xff006699
 80043b0:	08027114 	.word	0x08027114
 80043b4:	20020ae0 	.word	0x20020ae0
 80043b8:	08027000 	.word	0x08027000
 80043bc:	08027042 	.word	0x08027042
 80043c0:	08027070 	.word	0x08027070
 80043c4:	20020ae4 	.word	0x20020ae4
 80043c8:	080270b7 	.word	0x080270b7
 80043cc:	20020aec 	.word	0x20020aec
 80043d0:	08027109 	.word	0x08027109
 80043d4:	ff0a0a0a 	.word	0xff0a0a0a

080043d8 <_ZN27CustomContainerTableLogBaseD1Ev>:

class CustomContainerTableLogBase : public touchgfx::Container
{
public:
    CustomContainerTableLogBase();
    virtual ~CustomContainerTableLogBase() {}
 80043d8:	4770      	bx	lr

080043da <_ZN27CustomContainerTableLogBase10initializeEv>:
}

void CustomContainerTableLogBase::initialize()
{

}
 80043da:	4770      	bx	lr

080043dc <_ZN27CustomContainerTableLogBaseD0Ev>:
 80043dc:	b510      	push	{r4, lr}
 80043de:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 80043e2:	4604      	mov	r4, r0
 80043e4:	f01f fff9 	bl	80243da <_ZdlPvj>
 80043e8:	4620      	mov	r0, r4
 80043ea:	bd10      	pop	{r4, pc}

080043ec <_ZN8touchgfx13BoxWithBorderC1Ev>:
    BoxWithBorder()
 80043ec:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 80043ee:	2226      	movs	r2, #38	; 0x26
 80043f0:	4604      	mov	r4, r0
 80043f2:	2100      	movs	r1, #0
 80043f4:	f020 fac6 	bl	8024984 <memset>
 80043f8:	4620      	mov	r0, r4
 80043fa:	f7fd ff39 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 80043fe:	23ff      	movs	r3, #255	; 0xff
        : Box(), borderColor(0), borderSize(0)
 8004400:	4a04      	ldr	r2, [pc, #16]	; (8004414 <_ZN8touchgfx13BoxWithBorderC1Ev+0x28>)
 8004402:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
 8004406:	2300      	movs	r3, #0
 8004408:	62a3      	str	r3, [r4, #40]	; 0x28
 800440a:	6022      	str	r2, [r4, #0]
 800440c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800440e:	8623      	strh	r3, [r4, #48]	; 0x30
    }
 8004410:	4620      	mov	r0, r4
 8004412:	bd10      	pop	{r4, pc}
 8004414:	08029ec4 	.word	0x08029ec4

08004418 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8004418:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 800441a:	2226      	movs	r2, #38	; 0x26
 800441c:	4604      	mov	r4, r0
 800441e:	2100      	movs	r1, #0
 8004420:	f020 fab0 	bl	8024984 <memset>
 8004424:	4620      	mov	r0, r4
 8004426:	f7fd ff23 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
        : typedTextId(id)
 800442a:	4b08      	ldr	r3, [pc, #32]	; (800444c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x34>)
 800442c:	62a3      	str	r3, [r4, #40]	; 0x28
 800442e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004432:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8004434:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8004438:	2300      	movs	r3, #0
 800443a:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : TextArea(), wildcard(0)
 800443e:	4a04      	ldr	r2, [pc, #16]	; (8004450 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x38>)
 8004440:	8723      	strh	r3, [r4, #56]	; 0x38
 8004442:	6022      	str	r2, [r4, #0]
 8004444:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8004446:	4620      	mov	r0, r4
 8004448:	bd10      	pop	{r4, pc}
 800444a:	bf00      	nop
 800444c:	08027114 	.word	0x08027114
 8004450:	08029da4 	.word	0x08029da4

08004454 <_ZN27CustomContainerTableLogBaseC1Ev>:
CustomContainerTableLogBase::CustomContainerTableLogBase()
 8004454:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004458:	ed2d 8b10 	vpush	{d8-d15}
 800445c:	4604      	mov	r4, r0
 800445e:	b087      	sub	sp, #28
 8004460:	f7fd ff06 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 8004464:	4622      	mov	r2, r4
 8004466:	2500      	movs	r5, #0
 8004468:	4b8e      	ldr	r3, [pc, #568]	; (80046a4 <_ZN27CustomContainerTableLogBaseC1Ev+0x250>)
 800446a:	62a5      	str	r5, [r4, #40]	; 0x28
 800446c:	f842 3b2c 	str.w	r3, [r2], #44
 8004470:	4610      	mov	r0, r2
 8004472:	ee08 2a10 	vmov	s16, r2
 8004476:	f7ff ffb9 	bl	80043ec <_ZN8touchgfx13BoxWithBorderC1Ev>
 800447a:	f104 0360 	add.w	r3, r4, #96	; 0x60
 800447e:	4618      	mov	r0, r3
 8004480:	ee0d 3a10 	vmov	s26, r3
 8004484:	f7ff ffb2 	bl	80043ec <_ZN8touchgfx13BoxWithBorderC1Ev>
 8004488:	f104 0394 	add.w	r3, r4, #148	; 0x94
 800448c:	4618      	mov	r0, r3
 800448e:	ee0d 3a90 	vmov	s27, r3
 8004492:	f7ff ffab 	bl	80043ec <_ZN8touchgfx13BoxWithBorderC1Ev>
 8004496:	f104 03c8 	add.w	r3, r4, #200	; 0xc8
 800449a:	4618      	mov	r0, r3
 800449c:	ee0e 3a10 	vmov	s28, r3
 80044a0:	f7ff ffa4 	bl	80043ec <_ZN8touchgfx13BoxWithBorderC1Ev>
 80044a4:	f104 03fc 	add.w	r3, r4, #252	; 0xfc
 80044a8:	4618      	mov	r0, r3
 80044aa:	ee0e 3a90 	vmov	s29, r3
 80044ae:	f7ff ff9d 	bl	80043ec <_ZN8touchgfx13BoxWithBorderC1Ev>
 80044b2:	f504 7398 	add.w	r3, r4, #304	; 0x130
 80044b6:	4618      	mov	r0, r3
 80044b8:	ee0f 3a10 	vmov	s30, r3
 80044bc:	f7ff ff96 	bl	80043ec <_ZN8touchgfx13BoxWithBorderC1Ev>
 80044c0:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 80044c4:	4618      	mov	r0, r3
 80044c6:	ee0f 3a90 	vmov	s31, r3
 80044ca:	f7ff ff8f 	bl	80043ec <_ZN8touchgfx13BoxWithBorderC1Ev>
 80044ce:	f504 73cc 	add.w	r3, r4, #408	; 0x198
 80044d2:	4618      	mov	r0, r3
 80044d4:	9302      	str	r3, [sp, #8]
 80044d6:	f7ff ff89 	bl	80043ec <_ZN8touchgfx13BoxWithBorderC1Ev>
 80044da:	f504 73e6 	add.w	r3, r4, #460	; 0x1cc
 80044de:	4618      	mov	r0, r3
 80044e0:	9303      	str	r3, [sp, #12]
 80044e2:	f7ff ff83 	bl	80043ec <_ZN8touchgfx13BoxWithBorderC1Ev>
 80044e6:	f504 7300 	add.w	r3, r4, #512	; 0x200
 80044ea:	4618      	mov	r0, r3
 80044ec:	ee08 3a90 	vmov	s17, r3
 80044f0:	f7ff ff92 	bl	8004418 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80044f4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80044f8:	4618      	mov	r0, r3
 80044fa:	ee09 3a10 	vmov	s18, r3
 80044fe:	f7ff ff8b 	bl	8004418 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004502:	f504 7320 	add.w	r3, r4, #640	; 0x280
 8004506:	4618      	mov	r0, r3
 8004508:	ee09 3a90 	vmov	s19, r3
 800450c:	f7ff ff84 	bl	8004418 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004510:	f504 7330 	add.w	r3, r4, #704	; 0x2c0
 8004514:	4618      	mov	r0, r3
 8004516:	ee0a 3a10 	vmov	s20, r3
 800451a:	f7ff ff7d 	bl	8004418 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800451e:	f504 7340 	add.w	r3, r4, #768	; 0x300
 8004522:	4618      	mov	r0, r3
 8004524:	ee0a 3a90 	vmov	s21, r3
 8004528:	f7ff ff76 	bl	8004418 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800452c:	f504 7350 	add.w	r3, r4, #832	; 0x340
 8004530:	4618      	mov	r0, r3
 8004532:	ee0b 3a10 	vmov	s22, r3
 8004536:	f7ff ff6f 	bl	8004418 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800453a:	f504 7360 	add.w	r3, r4, #896	; 0x380
 800453e:	4618      	mov	r0, r3
 8004540:	ee0b 3a90 	vmov	s23, r3
 8004544:	f7ff ff68 	bl	8004418 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004548:	f504 7370 	add.w	r3, r4, #960	; 0x3c0
 800454c:	4618      	mov	r0, r3
 800454e:	ee0c 3a10 	vmov	s24, r3
 8004552:	f7ff ff61 	bl	8004418 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004556:	f504 6380 	add.w	r3, r4, #1024	; 0x400
 800455a:	4618      	mov	r0, r3
    boxWithBorderDataTime.setPosition(0, 0, 150, 20);
 800455c:	2714      	movs	r7, #20
CustomContainerTableLogBase::CustomContainerTableLogBase()
 800455e:	ee0c 3a90 	vmov	s25, r3
 8004562:	f7ff ff59 	bl	8004418 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
        rect.width = width;
 8004566:	4b50      	ldr	r3, [pc, #320]	; (80046a8 <_ZN27CustomContainerTableLogBaseC1Ev+0x254>)
 8004568:	60a3      	str	r3, [r4, #8]
        borderColor = color;
 800456a:	f04f 39ff 	mov.w	r9, #4294967295
        borderSize = size;
 800456e:	f04f 0801 	mov.w	r8, #1
        borderColor = color;
 8004572:	f04f 467f 	mov.w	r6, #4278190080	; 0xff000000
    boxWithBorderDataTime.setPosition(0, 0, 150, 20);
 8004576:	ee18 0a10 	vmov	r0, s16
 800457a:	2396      	movs	r3, #150	; 0x96
 800457c:	462a      	mov	r2, r5
 800457e:	4629      	mov	r1, r5
 8004580:	9700      	str	r7, [sp, #0]
 8004582:	f7fe f95b 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8004586:	e9c4 9615 	strd	r9, r6, [r4, #84]	; 0x54
    boxWithBorderChan.setPosition(150, 0, 50, 20);
 800458a:	ee1d 0a10 	vmov	r0, s26
 800458e:	2332      	movs	r3, #50	; 0x32
 8004590:	462a      	mov	r2, r5
 8004592:	2196      	movs	r1, #150	; 0x96
        borderSize = size;
 8004594:	f8a4 805c 	strh.w	r8, [r4, #92]	; 0x5c
 8004598:	9700      	str	r7, [sp, #0]
 800459a:	f7fe f94f 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 800459e:	e9c4 9622 	strd	r9, r6, [r4, #136]	; 0x88
    boxWithBorderTypeChan.setPosition(200, 0, 100, 20);
 80045a2:	ee1d 0a90 	vmov	r0, s27
 80045a6:	2364      	movs	r3, #100	; 0x64
 80045a8:	462a      	mov	r2, r5
 80045aa:	21c8      	movs	r1, #200	; 0xc8
        borderSize = size;
 80045ac:	f8a4 8090 	strh.w	r8, [r4, #144]	; 0x90
 80045b0:	9700      	str	r7, [sp, #0]
 80045b2:	f7fe f943 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 80045b6:	e9c4 962f 	strd	r9, r6, [r4, #188]	; 0xbc
    boxWithBorderStLoop.setPosition(300, 0, 100, 20);
 80045ba:	ee1e 0a10 	vmov	r0, s28
 80045be:	2364      	movs	r3, #100	; 0x64
 80045c0:	462a      	mov	r2, r5
 80045c2:	f44f 7196 	mov.w	r1, #300	; 0x12c
        borderSize = size;
 80045c6:	f8a4 80c4 	strh.w	r8, [r4, #196]	; 0xc4
 80045ca:	9700      	str	r7, [sp, #0]
 80045cc:	f7fe f936 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 80045d0:	e9c4 963c 	strd	r9, r6, [r4, #240]	; 0xf0
    boxWithBorderConc.setPosition(400, 0, 50, 20);
 80045d4:	ee1e 0a90 	vmov	r0, s29
 80045d8:	2332      	movs	r3, #50	; 0x32
 80045da:	462a      	mov	r2, r5
 80045dc:	f44f 71c8 	mov.w	r1, #400	; 0x190
        borderSize = size;
 80045e0:	f8a4 80f8 	strh.w	r8, [r4, #248]	; 0xf8
 80045e4:	9700      	str	r7, [sp, #0]
 80045e6:	f7fe f929 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 80045ea:	e9c4 9649 	strd	r9, r6, [r4, #292]	; 0x124
    boxWithBorderUnit.setPosition(450, 0, 50, 20);
 80045ee:	ee1f 0a10 	vmov	r0, s30
 80045f2:	2332      	movs	r3, #50	; 0x32
 80045f4:	462a      	mov	r2, r5
 80045f6:	f44f 71e1 	mov.w	r1, #450	; 0x1c2
        borderSize = size;
 80045fa:	f8a4 812c 	strh.w	r8, [r4, #300]	; 0x12c
 80045fe:	9700      	str	r7, [sp, #0]
 8004600:	f7fe f91c 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 8004604:	e9c4 9656 	strd	r9, r6, [r4, #344]	; 0x158
    boxWithBorderStCur.setPosition(500, 0, 100, 20);
 8004608:	ee1f 0a90 	vmov	r0, s31
 800460c:	2364      	movs	r3, #100	; 0x64
 800460e:	462a      	mov	r2, r5
 8004610:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
        borderSize = size;
 8004614:	f8a4 8160 	strh.w	r8, [r4, #352]	; 0x160
 8004618:	9700      	str	r7, [sp, #0]
 800461a:	f7fe f90f 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 800461e:	e9c4 9663 	strd	r9, r6, [r4, #396]	; 0x18c
    boxWithBorderErr.setPosition(600, 0, 50, 20);
 8004622:	9802      	ldr	r0, [sp, #8]
        borderSize = size;
 8004624:	f8a4 8194 	strh.w	r8, [r4, #404]	; 0x194
 8004628:	2332      	movs	r3, #50	; 0x32
 800462a:	462a      	mov	r2, r5
 800462c:	f44f 7116 	mov.w	r1, #600	; 0x258
 8004630:	9700      	str	r7, [sp, #0]
 8004632:	f7fe f903 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    textAreaDataTime.setPosition(0, 0, 150, 19);
 8004636:	f04f 0a13 	mov.w	sl, #19
        borderColor = color;
 800463a:	e9c4 9670 	strd	r9, r6, [r4, #448]	; 0x1c0
    boxWithBorderGas.setPosition(650, 0, 100, 20);
 800463e:	9803      	ldr	r0, [sp, #12]
        borderSize = size;
 8004640:	f8a4 81c8 	strh.w	r8, [r4, #456]	; 0x1c8
 8004644:	2364      	movs	r3, #100	; 0x64
 8004646:	462a      	mov	r2, r5
 8004648:	f240 218a 	movw	r1, #650	; 0x28a
 800464c:	9700      	str	r7, [sp, #0]
 800464e:	f7fe f8f5 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 8004652:	e9c4 967d 	strd	r9, r6, [r4, #500]	; 0x1f4
    textAreaDataTime.setPosition(0, 0, 150, 19);
 8004656:	2396      	movs	r3, #150	; 0x96
 8004658:	ee18 0a90 	vmov	r0, s17
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800465c:	f8df 9060 	ldr.w	r9, [pc, #96]	; 80046c0 <_ZN27CustomContainerTableLogBaseC1Ev+0x26c>
        borderSize = size;
 8004660:	f8a4 81fc 	strh.w	r8, [r4, #508]	; 0x1fc
 8004664:	f8cd a000 	str.w	sl, [sp]
 8004668:	462a      	mov	r2, r5
 800466a:	4629      	mov	r1, r5
 800466c:	f7fe f8e6 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8004670:	4b0e      	ldr	r3, [pc, #56]	; (80046ac <_ZN27CustomContainerTableLogBaseC1Ev+0x258>)
 8004672:	f8c4 3230 	str.w	r3, [r4, #560]	; 0x230
 8004676:	f8d9 3000 	ldr.w	r3, [r9]
        linespace = space;
 800467a:	f8a4 8234 	strh.w	r8, [r4, #564]	; 0x234
    Unicode::snprintf(textAreaDataTimeBuffer, TEXTAREADATATIME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_WIXH).getText());
 800467e:	f504 6b88 	add.w	fp, r4, #1088	; 0x440
 8004682:	b92b      	cbnz	r3, 8004690 <_ZN27CustomContainerTableLogBaseC1Ev+0x23c>
 8004684:	4b0a      	ldr	r3, [pc, #40]	; (80046b0 <_ZN27CustomContainerTableLogBaseC1Ev+0x25c>)
 8004686:	4a0b      	ldr	r2, [pc, #44]	; (80046b4 <_ZN27CustomContainerTableLogBaseC1Ev+0x260>)
 8004688:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800468a:	480b      	ldr	r0, [pc, #44]	; (80046b8 <_ZN27CustomContainerTableLogBaseC1Ev+0x264>)
 800468c:	f01f fed4 	bl	8024438 <__assert_func>
 8004690:	f8df 8030 	ldr.w	r8, [pc, #48]	; 80046c4 <_ZN27CustomContainerTableLogBaseC1Ev+0x270>
 8004694:	f8b8 3000 	ldrh.w	r3, [r8]
 8004698:	2b24      	cmp	r3, #36	; 0x24
 800469a:	d815      	bhi.n	80046c8 <_ZN27CustomContainerTableLogBaseC1Ev+0x274>
 800469c:	4b07      	ldr	r3, [pc, #28]	; (80046bc <_ZN27CustomContainerTableLogBaseC1Ev+0x268>)
 800469e:	4a05      	ldr	r2, [pc, #20]	; (80046b4 <_ZN27CustomContainerTableLogBaseC1Ev+0x260>)
 80046a0:	21af      	movs	r1, #175	; 0xaf
 80046a2:	e7f2      	b.n	800468a <_ZN27CustomContainerTableLogBaseC1Ev+0x236>
 80046a4:	080275ec 	.word	0x080275ec
 80046a8:	001402ee 	.word	0x001402ee
 80046ac:	ff030202 	.word	0xff030202
 80046b0:	08027000 	.word	0x08027000
 80046b4:	08027042 	.word	0x08027042
 80046b8:	08027070 	.word	0x08027070
 80046bc:	080270b7 	.word	0x080270b7
 80046c0:	20020ae0 	.word	0x20020ae0
 80046c4:	20020ae4 	.word	0x20020ae4
        return texts->getText(typedTextId);
 80046c8:	4be2      	ldr	r3, [pc, #904]	; (8004a54 <_ZN27CustomContainerTableLogBaseC1Ev+0x600>)
 80046ca:	2124      	movs	r1, #36	; 0x24
 80046cc:	6818      	ldr	r0, [r3, #0]
 80046ce:	f002 fbfb 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 80046d2:	4ae1      	ldr	r2, [pc, #900]	; (8004a58 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 80046d4:	4603      	mov	r3, r0
 80046d6:	4639      	mov	r1, r7
 80046d8:	4658      	mov	r0, fp
 80046da:	f013 fd61 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80046de:	4fdf      	ldr	r7, [pc, #892]	; (8004a5c <_ZN27CustomContainerTableLogBaseC1Ev+0x608>)
        wildcard = value;
 80046e0:	f8c4 b23c 	str.w	fp, [r4, #572]	; 0x23c
 80046e4:	2323      	movs	r3, #35	; 0x23
    textAreaDataTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LBEI));
 80046e6:	ee18 0a90 	vmov	r0, s17
 80046ea:	a904      	add	r1, sp, #16
 80046ec:	f8ad 3014 	strh.w	r3, [sp, #20]
 80046f0:	9704      	str	r7, [sp, #16]
 80046f2:	f00d fcd2 	bl	801209a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaNumChan.setPosition(150, 0, 50, 19);
 80046f6:	2332      	movs	r3, #50	; 0x32
 80046f8:	ee19 0a10 	vmov	r0, s18
 80046fc:	f8cd a000 	str.w	sl, [sp]
 8004700:	462a      	mov	r2, r5
 8004702:	2196      	movs	r1, #150	; 0x96
 8004704:	f7fe f89a 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004708:	f8d9 3000 	ldr.w	r3, [r9]
        this->color = color;
 800470c:	f8c4 6270 	str.w	r6, [r4, #624]	; 0x270
        linespace = space;
 8004710:	f8a4 5274 	strh.w	r5, [r4, #628]	; 0x274
    Unicode::snprintf(textAreaNumChanBuffer, TEXTAREANUMCHAN_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_53KN).getText());
 8004714:	f504 6b8d 	add.w	fp, r4, #1128	; 0x468
 8004718:	2b00      	cmp	r3, #0
 800471a:	d0b3      	beq.n	8004684 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800471c:	f8b8 3000 	ldrh.w	r3, [r8]
 8004720:	2b22      	cmp	r3, #34	; 0x22
 8004722:	d9bb      	bls.n	800469c <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 8004724:	4bcb      	ldr	r3, [pc, #812]	; (8004a54 <_ZN27CustomContainerTableLogBaseC1Ev+0x600>)
 8004726:	2122      	movs	r1, #34	; 0x22
 8004728:	6818      	ldr	r0, [r3, #0]
 800472a:	f002 fbcd 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 800472e:	4aca      	ldr	r2, [pc, #808]	; (8004a58 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 8004730:	4603      	mov	r3, r0
 8004732:	2105      	movs	r1, #5
 8004734:	4658      	mov	r0, fp
 8004736:	f013 fd33 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800473a:	2321      	movs	r3, #33	; 0x21
    textAreaNumChan.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L982));
 800473c:	ee19 0a10 	vmov	r0, s18
 8004740:	f8c4 b27c 	str.w	fp, [r4, #636]	; 0x27c
 8004744:	a904      	add	r1, sp, #16
 8004746:	f8ad 3014 	strh.w	r3, [sp, #20]
 800474a:	9704      	str	r7, [sp, #16]
 800474c:	f00d fca5 	bl	801209a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaTypeChan.setPosition(200, 0, 100, 19);
 8004750:	2364      	movs	r3, #100	; 0x64
 8004752:	ee19 0a90 	vmov	r0, s19
 8004756:	f8cd a000 	str.w	sl, [sp]
 800475a:	462a      	mov	r2, r5
 800475c:	21c8      	movs	r1, #200	; 0xc8
 800475e:	f7fe f86d 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004762:	f8d9 3000 	ldr.w	r3, [r9]
        this->color = color;
 8004766:	f8c4 62b0 	str.w	r6, [r4, #688]	; 0x2b0
        linespace = space;
 800476a:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
    Unicode::snprintf(textAreaTypeChanBuffer, TEXTAREATYPECHAN_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_P13T).getText());
 800476e:	f204 4b72 	addw	fp, r4, #1138	; 0x472
 8004772:	2b00      	cmp	r3, #0
 8004774:	d086      	beq.n	8004684 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004776:	f8b8 3000 	ldrh.w	r3, [r8]
 800477a:	2b26      	cmp	r3, #38	; 0x26
 800477c:	d98e      	bls.n	800469c <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 800477e:	4bb5      	ldr	r3, [pc, #724]	; (8004a54 <_ZN27CustomContainerTableLogBaseC1Ev+0x600>)
 8004780:	2126      	movs	r1, #38	; 0x26
 8004782:	6818      	ldr	r0, [r3, #0]
 8004784:	f002 fba0 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 8004788:	4ab3      	ldr	r2, [pc, #716]	; (8004a58 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 800478a:	4603      	mov	r3, r0
 800478c:	210a      	movs	r1, #10
 800478e:	4658      	mov	r0, fp
 8004790:	f013 fd06 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004794:	2325      	movs	r3, #37	; 0x25
    textAreaTypeChan.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DOAO));
 8004796:	ee19 0a90 	vmov	r0, s19
 800479a:	f8c4 b2bc 	str.w	fp, [r4, #700]	; 0x2bc
 800479e:	a904      	add	r1, sp, #16
 80047a0:	f8ad 3014 	strh.w	r3, [sp, #20]
 80047a4:	9704      	str	r7, [sp, #16]
 80047a6:	f00d fc78 	bl	801209a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaStLoop.setPosition(300, 0, 100, 19);
 80047aa:	2364      	movs	r3, #100	; 0x64
 80047ac:	ee1a 0a10 	vmov	r0, s20
 80047b0:	f8cd a000 	str.w	sl, [sp]
 80047b4:	462a      	mov	r2, r5
 80047b6:	f44f 7196 	mov.w	r1, #300	; 0x12c
 80047ba:	f7fe f83f 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80047be:	f8d9 3000 	ldr.w	r3, [r9]
        this->color = color;
 80047c2:	f8c4 62f0 	str.w	r6, [r4, #752]	; 0x2f0
        linespace = space;
 80047c6:	f8a4 52f4 	strh.w	r5, [r4, #756]	; 0x2f4
    Unicode::snprintf(textAreaStLoopBuffer, TEXTAREASTLOOP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_A188).getText());
 80047ca:	f204 4b86 	addw	fp, r4, #1158	; 0x486
 80047ce:	2b00      	cmp	r3, #0
 80047d0:	f43f af58 	beq.w	8004684 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80047d4:	f8b8 3000 	ldrh.w	r3, [r8]
 80047d8:	2b28      	cmp	r3, #40	; 0x28
 80047da:	f67f af5f 	bls.w	800469c <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 80047de:	4b9d      	ldr	r3, [pc, #628]	; (8004a54 <_ZN27CustomContainerTableLogBaseC1Ev+0x600>)
 80047e0:	2128      	movs	r1, #40	; 0x28
 80047e2:	6818      	ldr	r0, [r3, #0]
 80047e4:	f002 fb70 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 80047e8:	4a9b      	ldr	r2, [pc, #620]	; (8004a58 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 80047ea:	4603      	mov	r3, r0
 80047ec:	210a      	movs	r1, #10
 80047ee:	4658      	mov	r0, fp
 80047f0:	f013 fcd6 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80047f4:	2327      	movs	r3, #39	; 0x27
    textAreaStLoop.setTypedText(touchgfx::TypedText(T___SINGLEUSE_I04R));
 80047f6:	ee1a 0a10 	vmov	r0, s20
 80047fa:	a904      	add	r1, sp, #16
 80047fc:	f8c4 b2fc 	str.w	fp, [r4, #764]	; 0x2fc
 8004800:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004804:	9704      	str	r7, [sp, #16]
 8004806:	f00d fc48 	bl	801209a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaConc.setPosition(400, 0, 50, 19);
 800480a:	2332      	movs	r3, #50	; 0x32
 800480c:	462a      	mov	r2, r5
 800480e:	ee1a 0a90 	vmov	r0, s21
 8004812:	f8cd a000 	str.w	sl, [sp]
 8004816:	f44f 71c8 	mov.w	r1, #400	; 0x190
 800481a:	f7fe f80f 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800481e:	f8d9 3000 	ldr.w	r3, [r9]
 8004822:	f8a4 5334 	strh.w	r5, [r4, #820]	; 0x334
        this->color = color;
 8004826:	f8c4 6330 	str.w	r6, [r4, #816]	; 0x330
    Unicode::snprintf(textAreaConcBuffer, TEXTAREACONC_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_QS1C).getText());
 800482a:	f204 459a 	addw	r5, r4, #1178	; 0x49a
 800482e:	2b00      	cmp	r3, #0
 8004830:	f43f af28 	beq.w	8004684 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8004834:	f8b8 3000 	ldrh.w	r3, [r8]
 8004838:	2b2a      	cmp	r3, #42	; 0x2a
 800483a:	f67f af2f 	bls.w	800469c <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 800483e:	f8df 9214 	ldr.w	r9, [pc, #532]	; 8004a54 <_ZN27CustomContainerTableLogBaseC1Ev+0x600>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004842:	f8df 8220 	ldr.w	r8, [pc, #544]	; 8004a64 <_ZN27CustomContainerTableLogBaseC1Ev+0x610>
        return texts->getText(typedTextId);
 8004846:	f8d9 0000 	ldr.w	r0, [r9]
 800484a:	212a      	movs	r1, #42	; 0x2a
 800484c:	f002 fb3c 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 8004850:	4a81      	ldr	r2, [pc, #516]	; (8004a58 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 8004852:	4603      	mov	r3, r0
 8004854:	210a      	movs	r1, #10
 8004856:	4628      	mov	r0, r5
 8004858:	f013 fca2 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaUnit.setPosition(450, 0, 50, 19);
 800485c:	f04f 0a13 	mov.w	sl, #19
        : typedTextId(id)
 8004860:	2329      	movs	r3, #41	; 0x29
    textAreaConc.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q6FU));
 8004862:	ee1a 0a90 	vmov	r0, s21
 8004866:	f8c4 533c 	str.w	r5, [r4, #828]	; 0x33c
 800486a:	a904      	add	r1, sp, #16
 800486c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004870:	9704      	str	r7, [sp, #16]
 8004872:	f00d fc12 	bl	801209a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaUnit.setPosition(450, 0, 50, 19);
 8004876:	2332      	movs	r3, #50	; 0x32
 8004878:	ee1b 0a10 	vmov	r0, s22
 800487c:	f8cd a000 	str.w	sl, [sp]
 8004880:	2200      	movs	r2, #0
 8004882:	f44f 71e1 	mov.w	r1, #450	; 0x1c2
 8004886:	f7fd ffd9 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 800488a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800488e:	f8c4 3370 	str.w	r3, [r4, #880]	; 0x370
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004892:	f8d8 3000 	ldr.w	r3, [r8]
        linespace = space;
 8004896:	2500      	movs	r5, #0
        : typedTextId(id)
 8004898:	463e      	mov	r6, r7
 800489a:	f8a4 5374 	strh.w	r5, [r4, #884]	; 0x374
    Unicode::snprintf(textAreaUnitBuffer, TEXTAREAUNIT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LNEH).getText());
 800489e:	f204 4bae 	addw	fp, r4, #1198	; 0x4ae
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80048a2:	2b00      	cmp	r3, #0
 80048a4:	f43f aeee 	beq.w	8004684 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80048a8:	4f6d      	ldr	r7, [pc, #436]	; (8004a60 <_ZN27CustomContainerTableLogBaseC1Ev+0x60c>)
 80048aa:	883b      	ldrh	r3, [r7, #0]
 80048ac:	2b2c      	cmp	r3, #44	; 0x2c
 80048ae:	f67f aef5 	bls.w	800469c <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 80048b2:	212c      	movs	r1, #44	; 0x2c
 80048b4:	f8d9 0000 	ldr.w	r0, [r9]
 80048b8:	f002 fb06 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 80048bc:	4a66      	ldr	r2, [pc, #408]	; (8004a58 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 80048be:	4603      	mov	r3, r0
 80048c0:	210a      	movs	r1, #10
 80048c2:	4658      	mov	r0, fp
 80048c4:	f013 fc6c 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80048c8:	232b      	movs	r3, #43	; 0x2b
    textAreaUnit.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YDSR));
 80048ca:	ee1b 0a10 	vmov	r0, s22
 80048ce:	f8c4 b37c 	str.w	fp, [r4, #892]	; 0x37c
 80048d2:	a904      	add	r1, sp, #16
 80048d4:	f8ad 3014 	strh.w	r3, [sp, #20]
 80048d8:	9604      	str	r6, [sp, #16]
 80048da:	f00d fbde 	bl	801209a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaStCur.setPosition(500, 0, 100, 19);
 80048de:	2364      	movs	r3, #100	; 0x64
 80048e0:	ee1b 0a90 	vmov	r0, s23
 80048e4:	f8cd a000 	str.w	sl, [sp]
 80048e8:	462a      	mov	r2, r5
 80048ea:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 80048ee:	f7fd ffa5 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 80048f2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80048f6:	f8c4 33b0 	str.w	r3, [r4, #944]	; 0x3b0
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80048fa:	f8d8 3000 	ldr.w	r3, [r8]
        linespace = space;
 80048fe:	f8a4 53b4 	strh.w	r5, [r4, #948]	; 0x3b4
    Unicode::snprintf(textAreaStCurBuffer, TEXTAREASTCUR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_83ZL).getText());
 8004902:	f204 4bc2 	addw	fp, r4, #1218	; 0x4c2
 8004906:	2b00      	cmp	r3, #0
 8004908:	f43f aebc 	beq.w	8004684 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800490c:	883b      	ldrh	r3, [r7, #0]
 800490e:	2b2e      	cmp	r3, #46	; 0x2e
 8004910:	f67f aec4 	bls.w	800469c <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 8004914:	212e      	movs	r1, #46	; 0x2e
 8004916:	f8d9 0000 	ldr.w	r0, [r9]
 800491a:	f002 fad5 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 800491e:	4a4e      	ldr	r2, [pc, #312]	; (8004a58 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 8004920:	4603      	mov	r3, r0
 8004922:	210a      	movs	r1, #10
 8004924:	4658      	mov	r0, fp
 8004926:	f013 fc3b 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800492a:	232d      	movs	r3, #45	; 0x2d
    textAreaStCur.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJ1U));
 800492c:	ee1b 0a90 	vmov	r0, s23
 8004930:	f8c4 b3bc 	str.w	fp, [r4, #956]	; 0x3bc
 8004934:	a904      	add	r1, sp, #16
 8004936:	f8ad 3014 	strh.w	r3, [sp, #20]
 800493a:	9604      	str	r6, [sp, #16]
 800493c:	f00d fbad 	bl	801209a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaErr.setPosition(600, 0, 50, 19);
 8004940:	2332      	movs	r3, #50	; 0x32
 8004942:	ee1c 0a10 	vmov	r0, s24
 8004946:	f8cd a000 	str.w	sl, [sp]
 800494a:	462a      	mov	r2, r5
 800494c:	f44f 7116 	mov.w	r1, #600	; 0x258
 8004950:	f7fd ff74 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 8004954:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004958:	f8c4 33f0 	str.w	r3, [r4, #1008]	; 0x3f0
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800495c:	f8d8 3000 	ldr.w	r3, [r8]
        linespace = space;
 8004960:	f8a4 53f4 	strh.w	r5, [r4, #1012]	; 0x3f4
    Unicode::snprintf(textAreaErrBuffer, TEXTAREAERR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_60JG).getText());
 8004964:	f204 4bd6 	addw	fp, r4, #1238	; 0x4d6
 8004968:	2b00      	cmp	r3, #0
 800496a:	f43f ae8b 	beq.w	8004684 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800496e:	883b      	ldrh	r3, [r7, #0]
 8004970:	2b30      	cmp	r3, #48	; 0x30
 8004972:	f67f ae93 	bls.w	800469c <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 8004976:	2130      	movs	r1, #48	; 0x30
 8004978:	f8d9 0000 	ldr.w	r0, [r9]
 800497c:	f002 faa4 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 8004980:	4a35      	ldr	r2, [pc, #212]	; (8004a58 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 8004982:	4603      	mov	r3, r0
 8004984:	210a      	movs	r1, #10
 8004986:	4658      	mov	r0, fp
 8004988:	f013 fc0a 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800498c:	232f      	movs	r3, #47	; 0x2f
    textAreaErr.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PXKK));
 800498e:	ee1c 0a10 	vmov	r0, s24
 8004992:	a904      	add	r1, sp, #16
 8004994:	f8c4 b3fc 	str.w	fp, [r4, #1020]	; 0x3fc
 8004998:	f8ad 3014 	strh.w	r3, [sp, #20]
 800499c:	9604      	str	r6, [sp, #16]
 800499e:	f00d fb7c 	bl	801209a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textAreaGas.setPosition(650, 0, 100, 19);
 80049a2:	2364      	movs	r3, #100	; 0x64
 80049a4:	462a      	mov	r2, r5
 80049a6:	ee1c 0a90 	vmov	r0, s25
 80049aa:	f8cd a000 	str.w	sl, [sp]
 80049ae:	f240 218a 	movw	r1, #650	; 0x28a
 80049b2:	f7fd ff43 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 80049b6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80049ba:	f8c4 3430 	str.w	r3, [r4, #1072]	; 0x430
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80049be:	f8d8 3000 	ldr.w	r3, [r8]
        linespace = space;
 80049c2:	f8a4 5434 	strh.w	r5, [r4, #1076]	; 0x434
    Unicode::snprintf(textAreaGasBuffer, TEXTAREAGAS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_A04E).getText());
 80049c6:	f204 45ea 	addw	r5, r4, #1258	; 0x4ea
 80049ca:	2b00      	cmp	r3, #0
 80049cc:	f43f ae5a 	beq.w	8004684 <_ZN27CustomContainerTableLogBaseC1Ev+0x230>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80049d0:	883b      	ldrh	r3, [r7, #0]
 80049d2:	2b32      	cmp	r3, #50	; 0x32
 80049d4:	f67f ae62 	bls.w	800469c <_ZN27CustomContainerTableLogBaseC1Ev+0x248>
        return texts->getText(typedTextId);
 80049d8:	f8d9 0000 	ldr.w	r0, [r9]
 80049dc:	2132      	movs	r1, #50	; 0x32
 80049de:	f002 fa73 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 80049e2:	4a1d      	ldr	r2, [pc, #116]	; (8004a58 <_ZN27CustomContainerTableLogBaseC1Ev+0x604>)
 80049e4:	4603      	mov	r3, r0
 80049e6:	210a      	movs	r1, #10
 80049e8:	4628      	mov	r0, r5
 80049ea:	f013 fbd9 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80049ee:	2331      	movs	r3, #49	; 0x31
    textAreaGas.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JQ77));
 80049f0:	ee1c 0a90 	vmov	r0, s25
 80049f4:	a904      	add	r1, sp, #16
 80049f6:	f8c4 543c 	str.w	r5, [r4, #1084]	; 0x43c
 80049fa:	f8ad 3014 	strh.w	r3, [sp, #20]
 80049fe:	9604      	str	r6, [sp, #16]
 8004a00:	f00d fb4b 	bl	801209a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(boxWithBorderDataTime);
 8004a04:	ee18 1a10 	vmov	r1, s16
 8004a08:	4620      	mov	r0, r4
 8004a0a:	f00b fd65 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderChan);
 8004a0e:	ee1d 1a10 	vmov	r1, s26
 8004a12:	4620      	mov	r0, r4
 8004a14:	f00b fd60 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderTypeChan);
 8004a18:	ee1d 1a90 	vmov	r1, s27
 8004a1c:	4620      	mov	r0, r4
 8004a1e:	f00b fd5b 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderStLoop);
 8004a22:	ee1e 1a10 	vmov	r1, s28
 8004a26:	4620      	mov	r0, r4
 8004a28:	f00b fd56 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderConc);
 8004a2c:	ee1e 1a90 	vmov	r1, s29
 8004a30:	4620      	mov	r0, r4
 8004a32:	f00b fd51 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderUnit);
 8004a36:	ee1f 1a10 	vmov	r1, s30
 8004a3a:	4620      	mov	r0, r4
 8004a3c:	f00b fd4c 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderStCur);
 8004a40:	ee1f 1a90 	vmov	r1, s31
 8004a44:	4620      	mov	r0, r4
 8004a46:	f00b fd47 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(boxWithBorderErr);
 8004a4a:	9902      	ldr	r1, [sp, #8]
 8004a4c:	4620      	mov	r0, r4
 8004a4e:	f00b fd43 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004a52:	e009      	b.n	8004a68 <_ZN27CustomContainerTableLogBaseC1Ev+0x614>
 8004a54:	20020aec 	.word	0x20020aec
 8004a58:	08027109 	.word	0x08027109
 8004a5c:	08027114 	.word	0x08027114
 8004a60:	20020ae4 	.word	0x20020ae4
 8004a64:	20020ae0 	.word	0x20020ae0
    add(boxWithBorderGas);
 8004a68:	9903      	ldr	r1, [sp, #12]
 8004a6a:	4620      	mov	r0, r4
 8004a6c:	f00b fd34 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaDataTime);
 8004a70:	ee18 1a90 	vmov	r1, s17
 8004a74:	4620      	mov	r0, r4
 8004a76:	f00b fd2f 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaNumChan);
 8004a7a:	ee19 1a10 	vmov	r1, s18
 8004a7e:	4620      	mov	r0, r4
 8004a80:	f00b fd2a 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaTypeChan);
 8004a84:	ee19 1a90 	vmov	r1, s19
 8004a88:	4620      	mov	r0, r4
 8004a8a:	f00b fd25 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaStLoop);
 8004a8e:	ee1a 1a10 	vmov	r1, s20
 8004a92:	4620      	mov	r0, r4
 8004a94:	f00b fd20 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaConc);
 8004a98:	ee1a 1a90 	vmov	r1, s21
 8004a9c:	4620      	mov	r0, r4
 8004a9e:	f00b fd1b 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaUnit);
 8004aa2:	ee1b 1a10 	vmov	r1, s22
 8004aa6:	4620      	mov	r0, r4
 8004aa8:	f00b fd16 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaStCur);
 8004aac:	ee1b 1a90 	vmov	r1, s23
 8004ab0:	4620      	mov	r0, r4
 8004ab2:	f00b fd11 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaErr);
 8004ab6:	ee1c 1a10 	vmov	r1, s24
 8004aba:	4620      	mov	r0, r4
 8004abc:	f00b fd0c 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    add(textAreaGas);
 8004ac0:	4620      	mov	r0, r4
 8004ac2:	ee1c 1a90 	vmov	r1, s25
 8004ac6:	f00b fd07 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004aca:	4620      	mov	r0, r4
 8004acc:	b007      	add	sp, #28
 8004ace:	ecbd 8b10 	vpop	{d8-d15}
 8004ad2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004ad6:	bf00      	nop

08004ad8 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 8004ad8:	4770      	bx	lr

08004ada <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8004ada:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8004ade:	6808      	ldr	r0, [r1, #0]
 8004ae0:	6849      	ldr	r1, [r1, #4]
 8004ae2:	c303      	stmia	r3!, {r0, r1}
    }
 8004ae4:	4770      	bx	lr

08004ae6 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8004ae6:	4770      	bx	lr

08004ae8 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8004ae8:	4770      	bx	lr

08004aea <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8004aea:	6041      	str	r1, [r0, #4]
    }
 8004aec:	4770      	bx	lr

08004aee <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8004aee:	4770      	bx	lr

08004af0 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8004af0:	2301      	movs	r3, #1
 8004af2:	7203      	strb	r3, [r0, #8]
    }
 8004af4:	4770      	bx	lr

08004af6 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8004af6:	4770      	bx	lr

08004af8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004af8:	4770      	bx	lr

08004afa <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
    virtual void execute()
 8004afa:	b410      	push	{r4}
        (pobject->*pmemfun_0)();
 8004afc:	68c2      	ldr	r2, [r0, #12]
 8004afe:	6841      	ldr	r1, [r0, #4]
 8004b00:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8004b02:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8004b04:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8004b08:	07d2      	lsls	r2, r2, #31
 8004b0a:	bf48      	it	mi
 8004b0c:	590a      	ldrmi	r2, [r1, r4]
 8004b0e:	689b      	ldr	r3, [r3, #8]
    }
 8004b10:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8004b14:	bf48      	it	mi
 8004b16:	58d3      	ldrmi	r3, [r2, r3]
 8004b18:	4718      	bx	r3

08004b1a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_0 != 0);
 8004b1a:	6843      	ldr	r3, [r0, #4]
 8004b1c:	b12b      	cbz	r3, 8004b2a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8004b1e:	6883      	ldr	r3, [r0, #8]
 8004b20:	b92b      	cbnz	r3, 8004b2e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8004b22:	68c0      	ldr	r0, [r0, #12]
 8004b24:	f000 0001 	and.w	r0, r0, #1
 8004b28:	4770      	bx	lr
 8004b2a:	4618      	mov	r0, r3
 8004b2c:	4770      	bx	lr
 8004b2e:	2001      	movs	r0, #1
    }
 8004b30:	4770      	bx	lr

08004b32 <_ZN8touchgfx12NoTransitionD0Ev>:
 8004b32:	b510      	push	{r4, lr}
 8004b34:	210c      	movs	r1, #12
 8004b36:	4604      	mov	r4, r0
 8004b38:	f01f fc4f 	bl	80243da <_ZdlPvj>
 8004b3c:	4620      	mov	r0, r4
 8004b3e:	bd10      	pop	{r4, pc}

08004b40 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004b40:	b510      	push	{r4, lr}
 8004b42:	2110      	movs	r1, #16
 8004b44:	4604      	mov	r4, r0
 8004b46:	f01f fc48 	bl	80243da <_ZdlPvj>
 8004b4a:	4620      	mov	r0, r4
 8004b4c:	bd10      	pop	{r4, pc}

08004b4e <_ZN23FrontendApplicationBaseD0Ev>:
 8004b4e:	b510      	push	{r4, lr}
 8004b50:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8004b54:	4604      	mov	r4, r0
 8004b56:	f01f fc40 	bl	80243da <_ZdlPvj>
 8004b5a:	4620      	mov	r0, r4
 8004b5c:	bd10      	pop	{r4, pc}

08004b5e <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8004b5e:	b510      	push	{r4, lr}
        Application::getInstance()->draw();
 8004b60:	f00f fe76 	bl	8014850 <_ZN8touchgfx11Application11getInstanceEv>
 8004b64:	6803      	ldr	r3, [r0, #0]
    }
 8004b66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->draw();
 8004b6a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b6c:	4718      	bx	r3

08004b6e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8004b6e:	b510      	push	{r4, lr}
 8004b70:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8004b72:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8004b76:	b158      	cbz	r0, 8004b90 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8004b78:	6803      	ldr	r3, [r0, #0]
 8004b7a:	68db      	ldr	r3, [r3, #12]
 8004b7c:	4798      	blx	r3
 8004b7e:	b138      	cbz	r0, 8004b90 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8004b80:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8004b84:	6803      	ldr	r3, [r0, #0]
 8004b86:	689b      	ldr	r3, [r3, #8]
 8004b88:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8004b8a:	2300      	movs	r3, #0
 8004b8c:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 8004b90:	bd10      	pop	{r4, pc}
	...

08004b94 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen2_screen/Screen2View.hpp>
#include <gui/screen2_screen/Screen2Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8004b94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004b96:	4604      	mov	r4, r0
 8004b98:	4617      	mov	r7, r2
 8004b9a:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8004b9c:	f00f fec0 	bl	8014920 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8004ba0:	4b10      	ldr	r3, [pc, #64]	; (8004be4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 8004ba2:	2500      	movs	r5, #0
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8004ba4:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
        return instance;
 8004ba8:	4e0f      	ldr	r6, [pc, #60]	; (8004be8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
        instance = this;
 8004baa:	601c      	str	r4, [r3, #0]
        : pobject(0), pmemfun_0(0)
 8004bac:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 8004bb0:	4b0e      	ldr	r3, [pc, #56]	; (8004bec <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 8004bb2:	6830      	ldr	r0, [r6, #0]
 8004bb4:	6023      	str	r3, [r4, #0]
 8004bb6:	4b0e      	ldr	r3, [pc, #56]	; (8004bf0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8004bb8:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8004bbc:	6803      	ldr	r3, [r0, #0]
 8004bbe:	4629      	mov	r1, r5
 8004bc0:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8004bc2:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
 8004bc6:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8004bc8:	4628      	mov	r0, r5
 8004bca:	f002 f941 	bl	8006e50 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8004bce:	6833      	ldr	r3, [r6, #0]
 8004bd0:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8004bd4:	b10a      	cbz	r2, 8004bda <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
 8004bd6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8004bd8:	b900      	cbnz	r0, 8004bdc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>
        return instance->lcdRef;
 8004bda:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8004bdc:	f018 fac7 	bl	801d16e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8004be0:	4620      	mov	r0, r4
 8004be2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004be4:	20020adc 	.word	0x20020adc
 8004be8:	20020a90 	.word	0x20020a90
 8004bec:	08027ab8 	.word	0x08027ab8
 8004bf0:	08027aa0 	.word	0x08027aa0

08004bf4 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004bf4:	4b06      	ldr	r3, [pc, #24]	; (8004c10 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8004bf6:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004bfa:	2300      	movs	r3, #0
 8004bfc:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004c00:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004c04:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004c08:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004c0c:	4770      	bx	lr
 8004c0e:	bf00      	nop
 8004c10:	08004d75 	.word	0x08004d75

08004c14 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>:
 8004c14:	4b06      	ldr	r3, [pc, #24]	; (8004c30 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv+0x1c>)
 8004c16:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8004c1a:	2300      	movs	r3, #0
 8004c1c:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen2

void FrontendApplicationBase::gotoScreen2ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen2ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004c20:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8004c24:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8004c28:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8004c2c:	4770      	bx	lr
 8004c2e:	bf00      	nop
 8004c30:	08004edd 	.word	0x08004edd

08004c34 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8004c34:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004c38:	4607      	mov	r7, r0
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004c3a:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8004c3c:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8004c40:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004c42:	6803      	ldr	r3, [r0, #0]
 8004c44:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8004c46:	4688      	mov	r8, r1
 8004c48:	4614      	mov	r4, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004c4a:	4798      	blx	r3
 8004c4c:	f64e 1323 	movw	r3, #59683	; 0xe923
 8004c50:	4298      	cmp	r0, r3
 8004c52:	d805      	bhi.n	8004c60 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x2c>
 8004c54:	4b41      	ldr	r3, [pc, #260]	; (8004d5c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 8004c56:	4a42      	ldr	r2, [pc, #264]	; (8004d60 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8004c58:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004c5a:	4842      	ldr	r0, [pc, #264]	; (8004d64 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 8004c5c:	f01f fbec 	bl	8024438 <__assert_func>
 8004c60:	6860      	ldr	r0, [r4, #4]
 8004c62:	6803      	ldr	r3, [r0, #0]
 8004c64:	6a1b      	ldr	r3, [r3, #32]
 8004c66:	4798      	blx	r3
 8004c68:	280f      	cmp	r0, #15
 8004c6a:	d803      	bhi.n	8004c74 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x40>
 8004c6c:	4b3e      	ldr	r3, [pc, #248]	; (8004d68 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 8004c6e:	4a3c      	ldr	r2, [pc, #240]	; (8004d60 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8004c70:	21a4      	movs	r1, #164	; 0xa4
 8004c72:	e7f2      	b.n	8004c5a <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x26>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004c74:	68e0      	ldr	r0, [r4, #12]
 8004c76:	6803      	ldr	r3, [r0, #0]
 8004c78:	6a1b      	ldr	r3, [r3, #32]
 8004c7a:	4798      	blx	r3
 8004c7c:	280b      	cmp	r0, #11
 8004c7e:	d803      	bhi.n	8004c88 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x54>
 8004c80:	4b3a      	ldr	r3, [pc, #232]	; (8004d6c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 8004c82:	4a37      	ldr	r2, [pc, #220]	; (8004d60 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8004c84:	21a5      	movs	r1, #165	; 0xa5
 8004c86:	e7e8      	b.n	8004c5a <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x26>
    Application::getInstance()->clearAllTimerWidgets();
 8004c88:	f00f fde2 	bl	8014850 <_ZN8touchgfx11Application11getInstanceEv>
 8004c8c:	f00f fe2e 	bl	80148ec <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8004c90:	f8d9 0000 	ldr.w	r0, [r9]
 8004c94:	b110      	cbz	r0, 8004c9c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x68>
        (*currentTrans)->tearDown();
 8004c96:	6803      	ldr	r3, [r0, #0]
 8004c98:	68db      	ldr	r3, [r3, #12]
 8004c9a:	4798      	blx	r3
    if (*currentTrans)
 8004c9c:	f8d9 0000 	ldr.w	r0, [r9]
 8004ca0:	b110      	cbz	r0, 8004ca8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x74>
        (*currentTrans)->~Transition();
 8004ca2:	6803      	ldr	r3, [r0, #0]
 8004ca4:	681b      	ldr	r3, [r3, #0]
 8004ca6:	4798      	blx	r3
    if (*currentScreen)
 8004ca8:	6838      	ldr	r0, [r7, #0]
 8004caa:	b110      	cbz	r0, 8004cb2 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7e>
        (*currentScreen)->tearDownScreen();
 8004cac:	6803      	ldr	r3, [r0, #0]
 8004cae:	695b      	ldr	r3, [r3, #20]
 8004cb0:	4798      	blx	r3
    if (*currentPresenter)
 8004cb2:	f8d8 0000 	ldr.w	r0, [r8]
 8004cb6:	b110      	cbz	r0, 8004cbe <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8a>
        (*currentPresenter)->deactivate();
 8004cb8:	6803      	ldr	r3, [r0, #0]
 8004cba:	685b      	ldr	r3, [r3, #4]
 8004cbc:	4798      	blx	r3
    if (*currentScreen)
 8004cbe:	6838      	ldr	r0, [r7, #0]
 8004cc0:	b110      	cbz	r0, 8004cc8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x94>
        (*currentScreen)->~Screen();
 8004cc2:	6803      	ldr	r3, [r0, #0]
 8004cc4:	681b      	ldr	r3, [r3, #0]
 8004cc6:	4798      	blx	r3
    if (*currentPresenter)
 8004cc8:	f8d8 0000 	ldr.w	r0, [r8]
 8004ccc:	b110      	cbz	r0, 8004cd4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xa0>
        (*currentPresenter)->~Presenter();
 8004cce:	6803      	ldr	r3, [r0, #0]
 8004cd0:	689b      	ldr	r3, [r3, #8]
 8004cd2:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004cd4:	68e0      	ldr	r0, [r4, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8004cd6:	6803      	ldr	r3, [r0, #0]
 8004cd8:	2100      	movs	r1, #0
 8004cda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cdc:	4798      	blx	r3
        : screenContainer(0), done(false)
 8004cde:	f04f 0b00 	mov.w	fp, #0
 8004ce2:	4b23      	ldr	r3, [pc, #140]	; (8004d70 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13c>)
 8004ce4:	6003      	str	r3, [r0, #0]
 8004ce6:	4605      	mov	r5, r0
 8004ce8:	f8c0 b004 	str.w	fp, [r0, #4]
 8004cec:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004cf0:	68a0      	ldr	r0, [r4, #8]
 8004cf2:	6803      	ldr	r3, [r0, #0]
 8004cf4:	4659      	mov	r1, fp
 8004cf6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cf8:	4798      	blx	r3
 8004cfa:	4606      	mov	r6, r0
 8004cfc:	f003 f83c 	bl	8007d78 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004d00:	6860      	ldr	r0, [r4, #4]
 8004d02:	6803      	ldr	r3, [r0, #0]
 8004d04:	4659      	mov	r1, fp
 8004d06:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d08:	4798      	blx	r3
 8004d0a:	4631      	mov	r1, r6
 8004d0c:	4604      	mov	r4, r0
 8004d0e:	f002 ff1f 	bl	8007b50 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8004d12:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004d16:	f8c8 4000 	str.w	r4, [r8]
    *currentScreen = newScreen;
 8004d1a:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 8004d1c:	b1e4      	cbz	r4, 8004d58 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x124>
 8004d1e:	1d23      	adds	r3, r4, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8004d20:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004d24:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8004d26:	f8c4 a008 	str.w	sl, [r4, #8]
 8004d2a:	4630      	mov	r0, r6
 8004d2c:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 8004d2e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004d30:	4798      	blx	r3
    newPresenter->activate();
 8004d32:	6823      	ldr	r3, [r4, #0]
 8004d34:	4620      	mov	r0, r4
 8004d36:	681b      	ldr	r3, [r3, #0]
 8004d38:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004d3a:	4629      	mov	r1, r5
 8004d3c:	4630      	mov	r0, r6
 8004d3e:	f011 f979 	bl	8016034 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004d42:	682b      	ldr	r3, [r5, #0]
 8004d44:	4628      	mov	r0, r5
 8004d46:	691b      	ldr	r3, [r3, #16]
 8004d48:	4798      	blx	r3
    newTransition->invalidate();
 8004d4a:	682b      	ldr	r3, [r5, #0]
 8004d4c:	4628      	mov	r0, r5
 8004d4e:	695b      	ldr	r3, [r3, #20]
 8004d50:	4798      	blx	r3
    newScreen->bind(*newPresenter);

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
}
 8004d52:	4620      	mov	r0, r4
 8004d54:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    model->bind(newPresenter);
 8004d58:	4623      	mov	r3, r4
 8004d5a:	e7e1      	b.n	8004d20 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xec>
 8004d5c:	08027674 	.word	0x08027674
 8004d60:	08027702 	.word	0x08027702
 8004d64:	08027806 	.word	0x08027806
 8004d68:	0802784d 	.word	0x0802784d
 8004d6c:	080278f0 	.word	0x080278f0
 8004d70:	08027afc 	.word	0x08027afc

08004d74 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
{
 8004d74:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004d76:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 8004d7a:	9300      	str	r3, [sp, #0]
 8004d7c:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 8004d80:	4b04      	ldr	r3, [pc, #16]	; (8004d94 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>)
 8004d82:	f500 719c 	add.w	r1, r0, #312	; 0x138
 8004d86:	4804      	ldr	r0, [pc, #16]	; (8004d98 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>)
 8004d88:	f7ff ff54 	bl	8004c34 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8004d8c:	b003      	add	sp, #12
 8004d8e:	f85d fb04 	ldr.w	pc, [sp], #4
 8004d92:	bf00      	nop
 8004d94:	20020ad0 	.word	0x20020ad0
 8004d98:	20020acc 	.word	0x20020acc

08004d9c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8004d9c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004da0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004da2:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8004da4:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8004da8:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004daa:	6803      	ldr	r3, [r0, #0]
 8004dac:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8004dae:	4688      	mov	r8, r1
 8004db0:	4614      	mov	r4, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004db2:	4798      	blx	r3
 8004db4:	f244 537b 	movw	r3, #17787	; 0x457b
 8004db8:	4298      	cmp	r0, r3
 8004dba:	d805      	bhi.n	8004dc8 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x2c>
 8004dbc:	4b41      	ldr	r3, [pc, #260]	; (8004ec4 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 8004dbe:	4a42      	ldr	r2, [pc, #264]	; (8004ec8 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8004dc0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004dc2:	4842      	ldr	r0, [pc, #264]	; (8004ecc <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 8004dc4:	f01f fb38 	bl	8024438 <__assert_func>
 8004dc8:	6860      	ldr	r0, [r4, #4]
 8004dca:	6803      	ldr	r3, [r0, #0]
 8004dcc:	6a1b      	ldr	r3, [r3, #32]
 8004dce:	4798      	blx	r3
 8004dd0:	280f      	cmp	r0, #15
 8004dd2:	d803      	bhi.n	8004ddc <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x40>
 8004dd4:	4b3e      	ldr	r3, [pc, #248]	; (8004ed0 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 8004dd6:	4a3c      	ldr	r2, [pc, #240]	; (8004ec8 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8004dd8:	21a4      	movs	r1, #164	; 0xa4
 8004dda:	e7f2      	b.n	8004dc2 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x26>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004ddc:	68e0      	ldr	r0, [r4, #12]
 8004dde:	6803      	ldr	r3, [r0, #0]
 8004de0:	6a1b      	ldr	r3, [r3, #32]
 8004de2:	4798      	blx	r3
 8004de4:	280b      	cmp	r0, #11
 8004de6:	d803      	bhi.n	8004df0 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x54>
 8004de8:	4b3a      	ldr	r3, [pc, #232]	; (8004ed4 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 8004dea:	4a37      	ldr	r2, [pc, #220]	; (8004ec8 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8004dec:	21a5      	movs	r1, #165	; 0xa5
 8004dee:	e7e8      	b.n	8004dc2 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x26>
    Application::getInstance()->clearAllTimerWidgets();
 8004df0:	f00f fd2e 	bl	8014850 <_ZN8touchgfx11Application11getInstanceEv>
 8004df4:	f00f fd7a 	bl	80148ec <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8004df8:	f8d9 0000 	ldr.w	r0, [r9]
 8004dfc:	b110      	cbz	r0, 8004e04 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x68>
        (*currentTrans)->tearDown();
 8004dfe:	6803      	ldr	r3, [r0, #0]
 8004e00:	68db      	ldr	r3, [r3, #12]
 8004e02:	4798      	blx	r3
    if (*currentTrans)
 8004e04:	f8d9 0000 	ldr.w	r0, [r9]
 8004e08:	b110      	cbz	r0, 8004e10 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x74>
        (*currentTrans)->~Transition();
 8004e0a:	6803      	ldr	r3, [r0, #0]
 8004e0c:	681b      	ldr	r3, [r3, #0]
 8004e0e:	4798      	blx	r3
    if (*currentScreen)
 8004e10:	6838      	ldr	r0, [r7, #0]
 8004e12:	b110      	cbz	r0, 8004e1a <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7e>
        (*currentScreen)->tearDownScreen();
 8004e14:	6803      	ldr	r3, [r0, #0]
 8004e16:	695b      	ldr	r3, [r3, #20]
 8004e18:	4798      	blx	r3
    if (*currentPresenter)
 8004e1a:	f8d8 0000 	ldr.w	r0, [r8]
 8004e1e:	b110      	cbz	r0, 8004e26 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x8a>
        (*currentPresenter)->deactivate();
 8004e20:	6803      	ldr	r3, [r0, #0]
 8004e22:	685b      	ldr	r3, [r3, #4]
 8004e24:	4798      	blx	r3
    if (*currentScreen)
 8004e26:	6838      	ldr	r0, [r7, #0]
 8004e28:	b110      	cbz	r0, 8004e30 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x94>
        (*currentScreen)->~Screen();
 8004e2a:	6803      	ldr	r3, [r0, #0]
 8004e2c:	681b      	ldr	r3, [r3, #0]
 8004e2e:	4798      	blx	r3
    if (*currentPresenter)
 8004e30:	f8d8 0000 	ldr.w	r0, [r8]
 8004e34:	b110      	cbz	r0, 8004e3c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xa0>
        (*currentPresenter)->~Presenter();
 8004e36:	6803      	ldr	r3, [r0, #0]
 8004e38:	689b      	ldr	r3, [r3, #8]
 8004e3a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004e3c:	68e0      	ldr	r0, [r4, #12]
 8004e3e:	6803      	ldr	r3, [r0, #0]
 8004e40:	2100      	movs	r1, #0
 8004e42:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e44:	4798      	blx	r3
 8004e46:	f04f 0b00 	mov.w	fp, #0
 8004e4a:	4b23      	ldr	r3, [pc, #140]	; (8004ed8 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13c>)
 8004e4c:	6003      	str	r3, [r0, #0]
 8004e4e:	4605      	mov	r5, r0
 8004e50:	f8c0 b004 	str.w	fp, [r0, #4]
 8004e54:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004e58:	68a0      	ldr	r0, [r4, #8]
 8004e5a:	6803      	ldr	r3, [r0, #0]
 8004e5c:	4659      	mov	r1, fp
 8004e5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e60:	4798      	blx	r3
 8004e62:	4606      	mov	r6, r0
 8004e64:	f003 fad6 	bl	8008414 <_ZN11Screen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004e68:	6860      	ldr	r0, [r4, #4]
 8004e6a:	6803      	ldr	r3, [r0, #0]
 8004e6c:	4659      	mov	r1, fp
 8004e6e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e70:	4798      	blx	r3
 8004e72:	4631      	mov	r1, r6
 8004e74:	4604      	mov	r4, r0
 8004e76:	f003 f9cd 	bl	8008214 <_ZN16Screen2PresenterC1ER11Screen2View>
    *currentTrans = newTransition;
 8004e7a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004e7e:	f8c8 4000 	str.w	r4, [r8]
    *currentScreen = newScreen;
 8004e82:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 8004e84:	b1e4      	cbz	r4, 8004ec0 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x124>
 8004e86:	1d23      	adds	r3, r4, #4
 8004e88:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004e8c:	6833      	ldr	r3, [r6, #0]
 8004e8e:	f8c4 a008 	str.w	sl, [r4, #8]
 8004e92:	4630      	mov	r0, r6
 8004e94:	68db      	ldr	r3, [r3, #12]
 8004e96:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004e98:	4798      	blx	r3
    newPresenter->activate();
 8004e9a:	6823      	ldr	r3, [r4, #0]
 8004e9c:	4620      	mov	r0, r4
 8004e9e:	681b      	ldr	r3, [r3, #0]
 8004ea0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004ea2:	4629      	mov	r1, r5
 8004ea4:	4630      	mov	r0, r6
 8004ea6:	f011 f8c5 	bl	8016034 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004eaa:	682b      	ldr	r3, [r5, #0]
 8004eac:	4628      	mov	r0, r5
 8004eae:	691b      	ldr	r3, [r3, #16]
 8004eb0:	4798      	blx	r3
    newTransition->invalidate();
 8004eb2:	682b      	ldr	r3, [r5, #0]
 8004eb4:	4628      	mov	r0, r5
 8004eb6:	695b      	ldr	r3, [r3, #20]
 8004eb8:	4798      	blx	r3
}
 8004eba:	4620      	mov	r0, r4
 8004ebc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    model->bind(newPresenter);
 8004ec0:	4623      	mov	r3, r4
 8004ec2:	e7e1      	b.n	8004e88 <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xec>
 8004ec4:	08027674 	.word	0x08027674
 8004ec8:	08027993 	.word	0x08027993
 8004ecc:	08027806 	.word	0x08027806
 8004ed0:	0802784d 	.word	0x0802784d
 8004ed4:	080278f0 	.word	0x080278f0
 8004ed8:	08027afc 	.word	0x08027afc

08004edc <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen2ScreenNoTransitionImpl()
{
 8004edc:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004ede:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 8004ee2:	9300      	str	r3, [sp, #0]
 8004ee4:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 8004ee8:	4b04      	ldr	r3, [pc, #16]	; (8004efc <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x20>)
 8004eea:	f500 719c 	add.w	r1, r0, #312	; 0x138
 8004eee:	4804      	ldr	r0, [pc, #16]	; (8004f00 <_ZN23FrontendApplicationBase33gotoScreen2ScreenNoTransitionImplEv+0x24>)
 8004ef0:	f7ff ff54 	bl	8004d9c <_ZN8touchgfx14makeTransitionI11Screen2View16Screen2PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8004ef4:	b003      	add	sp, #12
 8004ef6:	f85d fb04 	ldr.w	pc, [sp], #4
 8004efa:	bf00      	nop
 8004efc:	20020ad0 	.word	0x20020ad0
 8004f00:	20020acc 	.word	0x20020acc

08004f04 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8004f04:	6a00      	ldr	r0, [r0, #32]
 8004f06:	4770      	bx	lr

08004f08 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8004f08:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8004f0a:	4770      	bx	lr

08004f0c <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8004f0c:	4770      	bx	lr

08004f0e <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8004f0e:	888b      	ldrh	r3, [r1, #4]
 8004f10:	6980      	ldr	r0, [r0, #24]
 8004f12:	680a      	ldr	r2, [r1, #0]
 8004f14:	0adb      	lsrs	r3, r3, #11
 8004f16:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8004f1a:	4410      	add	r0, r2
 8004f1c:	4770      	bx	lr

08004f1e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8004f1e:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8004f20:	b1c2      	cbz	r2, 8004f54 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8004f22:	7b13      	ldrb	r3, [r2, #12]
 8004f24:	b1b3      	cbz	r3, 8004f54 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8004f26:	7b54      	ldrb	r4, [r2, #13]
 8004f28:	7ad2      	ldrb	r2, [r2, #11]
 8004f2a:	0224      	lsls	r4, r4, #8
 8004f2c:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8004f30:	4314      	orrs	r4, r2
 8004f32:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8004f34:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8004f36:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8004f3a:	8813      	ldrh	r3, [r2, #0]
 8004f3c:	428b      	cmp	r3, r1
 8004f3e:	d102      	bne.n	8004f46 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8004f40:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8004f44:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8004f46:	d805      	bhi.n	8004f54 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8004f48:	3801      	subs	r0, #1
 8004f4a:	b280      	uxth	r0, r0
 8004f4c:	3204      	adds	r2, #4
 8004f4e:	2800      	cmp	r0, #0
 8004f50:	d1f3      	bne.n	8004f3a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8004f52:	e7f7      	b.n	8004f44 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8004f54:	2000      	movs	r0, #0
 8004f56:	e7f5      	b.n	8004f44 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08004f58 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8004f58:	b510      	push	{r4, lr}
 8004f5a:	2128      	movs	r1, #40	; 0x28
 8004f5c:	4604      	mov	r4, r0
 8004f5e:	f01f fa3c 	bl	80243da <_ZdlPvj>
 8004f62:	4620      	mov	r0, r4
 8004f64:	bd10      	pop	{r4, pc}
	...

08004f68 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8004f68:	b530      	push	{r4, r5, lr}
 8004f6a:	b089      	sub	sp, #36	; 0x24
 8004f6c:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8004f6e:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8004f72:	9506      	str	r5, [sp, #24]
 8004f74:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8004f78:	9505      	str	r5, [sp, #20]
 8004f7a:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8004f7e:	9504      	str	r5, [sp, #16]
 8004f80:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8004f84:	9503      	str	r5, [sp, #12]
 8004f86:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8004f8a:	9502      	str	r5, [sp, #8]
 8004f8c:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8004f90:	9501      	str	r5, [sp, #4]
 8004f92:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8004f96:	9500      	str	r5, [sp, #0]
 8004f98:	f010 fcac 	bl	80158f4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8004f9c:	4b06      	ldr	r3, [pc, #24]	; (8004fb8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 8004f9e:	6023      	str	r3, [r4, #0]
 8004fa0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004fa2:	61a3      	str	r3, [r4, #24]
 8004fa4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004fa6:	61e3      	str	r3, [r4, #28]
 8004fa8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004faa:	6223      	str	r3, [r4, #32]
 8004fac:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8004fae:	6263      	str	r3, [r4, #36]	; 0x24
}
 8004fb0:	4620      	mov	r0, r4
 8004fb2:	b009      	add	sp, #36	; 0x24
 8004fb4:	bd30      	pop	{r4, r5, pc}
 8004fb6:	bf00      	nop
 8004fb8:	08027b20 	.word	0x08027b20

08004fbc <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8004fbc:	4770      	bx	lr

08004fbe <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8004fbe:	4770      	bx	lr

08004fc0 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8004fc0:	4770      	bx	lr

08004fc2 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8004fc2:	4770      	bx	lr

08004fc4 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 8004fc4:	4770      	bx	lr

08004fc6 <_ZN15Screen1ViewBase21scrollList1UpdateItemER25CustomContainerScrollLists>:
    virtual void setupScreen();

    virtual void scrollList1UpdateItem(CustomContainerScrollList& item, int16_t itemIndex)
    {
        // Override and implement this function in Screen1
    }
 8004fc6:	4770      	bx	lr

08004fc8 <_ZN15Screen1ViewBase18functionFilterDataEv>:
     * Virtual Action Handlers
     */
    virtual void functionFilterData()
    {
        // Override and implement this function in Screen1
    }
 8004fc8:	4770      	bx	lr

08004fca <_ZN15Screen1ViewBase15functionReadLogEv>:

    virtual void functionReadLog()
    {
        // Override and implement this function in Screen1
    }
 8004fca:	4770      	bx	lr

08004fcc <_ZN15Screen1ViewBase16functionPageBackEv>:

    virtual void functionPageBack()
    {
        // Override and implement this function in Screen1
    }
 8004fcc:	4770      	bx	lr

08004fce <_ZN15Screen1ViewBase19functionPageForwardEv>:

    virtual void functionPageForward()
    {
        // Override and implement this function in Screen1
    }
 8004fce:	4770      	bx	lr

08004fd0 <_ZN15Screen1ViewBase14functionPage_1Ev>:

    virtual void functionPage_1()
    {
        // Override and implement this function in Screen1
    }
 8004fd0:	4770      	bx	lr

08004fd2 <_ZN15Screen1ViewBase14functionPage_2Ev>:

    virtual void functionPage_2()
    {
        // Override and implement this function in Screen1
    }
 8004fd2:	4770      	bx	lr

08004fd4 <_ZN15Screen1ViewBase14functionPage_3Ev>:

    virtual void functionPage_3()
    {
        // Override and implement this function in Screen1
    }
 8004fd4:	4770      	bx	lr

08004fd6 <_ZN15Screen1ViewBase14functionPage_4Ev>:

    virtual void functionPage_4()
    {
        // Override and implement this function in Screen1
    }
 8004fd6:	4770      	bx	lr

08004fd8 <_ZN15Screen1ViewBase14functionPage_5Ev>:

    virtual void functionPage_5()
    {
        // Override and implement this function in Screen1
    }
 8004fd8:	4770      	bx	lr

08004fda <_ZN15Screen1ViewBase21functionOkFilDataTimeEv>:

    virtual void functionOkFilDataTime()
    {
        // Override and implement this function in Screen1
    }
 8004fda:	4770      	bx	lr

08004fdc <_ZN8touchgfx17DrawableListItemsI25CustomContainerScrollListLi8EE20getNumberOfDrawablesEv>:
    }

    virtual int16_t getNumberOfDrawables()
    {
        return SIZE;
    }
 8004fdc:	2008      	movs	r0, #8
 8004fde:	4770      	bx	lr

08004fe0 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    TextAreaWithTwoWildcards twoWildcardText; ///< The wildcard text
    colortype colorReleased;                  ///< The color released
    colortype colorPressed;                   ///< The color pressed

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 8004fe0:	b508      	push	{r3, lr}
    {
        twoWildcardText.setColor(T::getPressed() ? colorPressed : colorReleased);
 8004fe2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8004fe6:	b133      	cbz	r3, 8004ff6 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x16>
 8004fe8:	f8d0 30c0 	ldr.w	r3, [r0, #192]	; 0xc0
        this->color = color;
 8004fec:	f8c0 30a8 	str.w	r3, [r0, #168]	; 0xa8
        T::handlePressedUpdated();
 8004ff0:	f7fd f88e 	bl	8002110 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 8004ff4:	bd08      	pop	{r3, pc}
        twoWildcardText.setColor(T::getPressed() ? colorPressed : colorReleased);
 8004ff6:	f8d0 30bc 	ldr.w	r3, [r0, #188]	; 0xbc
 8004ffa:	e7f7      	b.n	8004fec <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0xc>

08004ffc <_ZN8touchgfx8CallbackI15Screen1ViewBasePNS_26DrawableListItemsInterfaceEssED1Ev>:
struct Callback : public GenericCallback<T1, T2, T3>
 8004ffc:	4770      	bx	lr

08004ffe <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004ffe:	4770      	bx	lr

08005000 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 8005000:	4770      	bx	lr
	...

08005004 <_ZN8touchgfx17DrawableListItemsI25CustomContainerScrollListLi8EED1Ev>:
class DrawableListItems : public DrawableListItemsInterface
 8005004:	b538      	push	{r3, r4, r5, lr}
 8005006:	4b08      	ldr	r3, [pc, #32]	; (8005028 <_ZN8touchgfx17DrawableListItemsI25CustomContainerScrollListLi8EED1Ev+0x24>)
 8005008:	6003      	str	r3, [r0, #0]
 800500a:	4604      	mov	r4, r0
 800500c:	f44f 65f2 	mov.w	r5, #1936	; 0x790
 8005010:	5963      	ldr	r3, [r4, r5]
 8005012:	1960      	adds	r0, r4, r5
 8005014:	681b      	ldr	r3, [r3, #0]
 8005016:	f5a5 758a 	sub.w	r5, r5, #276	; 0x114
 800501a:	4798      	blx	r3
 800501c:	f515 7f88 	cmn.w	r5, #272	; 0x110
 8005020:	d1f6      	bne.n	8005010 <_ZN8touchgfx17DrawableListItemsI25CustomContainerScrollListLi8EED1Ev+0xc>
 8005022:	4620      	mov	r0, r4
 8005024:	bd38      	pop	{r3, r4, r5, pc}
 8005026:	bf00      	nop
 8005028:	08027d28 	.word	0x08027d28

0800502c <_ZN15Screen1ViewBaseD1Ev>:
    virtual ~Screen1ViewBase() {}
 800502c:	b510      	push	{r4, lr}
 800502e:	4b05      	ldr	r3, [pc, #20]	; (8005044 <_ZN15Screen1ViewBaseD1Ev+0x18>)
 8005030:	6003      	str	r3, [r0, #0]
 8005032:	4604      	mov	r4, r0
 8005034:	f500 408b 	add.w	r0, r0, #17792	; 0x4580
 8005038:	3038      	adds	r0, #56	; 0x38
 800503a:	f7ff ffe3 	bl	8005004 <_ZN8touchgfx17DrawableListItemsI25CustomContainerScrollListLi8EED1Ev>
 800503e:	4620      	mov	r0, r4
 8005040:	bd10      	pop	{r4, pc}
 8005042:	bf00      	nop
 8005044:	08027d88 	.word	0x08027d88

08005048 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
class TwoWildcardTextButtonStyle : public T
 8005048:	4770      	bx	lr

0800504a <_ZN8touchgfx8CallbackI15Screen1ViewBasePNS_26DrawableListItemsInterfaceEssE7executeES3_ss>:
    virtual void execute(T1 t1, T2 t2, T3 t3)
 800504a:	b4f0      	push	{r4, r5, r6, r7}
        (pobject->*pmemfun_3)(t1, t2, t3);
 800504c:	68c5      	ldr	r5, [r0, #12]
 800504e:	6846      	ldr	r6, [r0, #4]
 8005050:	106f      	asrs	r7, r5, #1
    virtual void execute(T1 t1, T2 t2, T3 t3)
 8005052:	4604      	mov	r4, r0
        (pobject->*pmemfun_3)(t1, t2, t3);
 8005054:	eb06 0065 	add.w	r0, r6, r5, asr #1
 8005058:	07ed      	lsls	r5, r5, #31
 800505a:	68a4      	ldr	r4, [r4, #8]
 800505c:	bf44      	itt	mi
 800505e:	59f5      	ldrmi	r5, [r6, r7]
 8005060:	592c      	ldrmi	r4, [r5, r4]
 8005062:	46a4      	mov	ip, r4
    }
 8005064:	bcf0      	pop	{r4, r5, r6, r7}
        (pobject->*pmemfun_3)(t1, t2, t3);
 8005066:	4760      	bx	ip

08005068 <_ZNK8touchgfx8CallbackI15Screen1ViewBasePNS_26DrawableListItemsInterfaceEssE7isValidEv>:
        return (pobject != 0) && (pmemfun_3 != 0);
 8005068:	6843      	ldr	r3, [r0, #4]
 800506a:	b12b      	cbz	r3, 8005078 <_ZNK8touchgfx8CallbackI15Screen1ViewBasePNS_26DrawableListItemsInterfaceEssE7isValidEv+0x10>
 800506c:	6883      	ldr	r3, [r0, #8]
 800506e:	b92b      	cbnz	r3, 800507c <_ZNK8touchgfx8CallbackI15Screen1ViewBasePNS_26DrawableListItemsInterfaceEssE7isValidEv+0x14>
 8005070:	68c0      	ldr	r0, [r0, #12]
 8005072:	f000 0001 	and.w	r0, r0, #1
 8005076:	4770      	bx	lr
 8005078:	4618      	mov	r0, r3
 800507a:	4770      	bx	lr
 800507c:	2001      	movs	r0, #1
    }
 800507e:	4770      	bx	lr

08005080 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005080:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8005082:	68c2      	ldr	r2, [r0, #12]
 8005084:	6844      	ldr	r4, [r0, #4]
 8005086:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005088:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 800508a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800508e:	07d2      	lsls	r2, r2, #31
 8005090:	bf48      	it	mi
 8005092:	5962      	ldrmi	r2, [r4, r5]
 8005094:	689b      	ldr	r3, [r3, #8]
    }
 8005096:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8005098:	bf48      	it	mi
 800509a:	58d3      	ldrmi	r3, [r2, r3]
 800509c:	4718      	bx	r3

0800509e <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 800509e:	6843      	ldr	r3, [r0, #4]
 80050a0:	b12b      	cbz	r3, 80050ae <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 80050a2:	6883      	ldr	r3, [r0, #8]
 80050a4:	b92b      	cbnz	r3, 80050b2 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 80050a6:	68c0      	ldr	r0, [r0, #12]
 80050a8:	f000 0001 	and.w	r0, r0, #1
 80050ac:	4770      	bx	lr
 80050ae:	4618      	mov	r0, r3
 80050b0:	4770      	bx	lr
 80050b2:	2001      	movs	r0, #1
    }
 80050b4:	4770      	bx	lr

080050b6 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80050b6:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80050b8:	68c2      	ldr	r2, [r0, #12]
 80050ba:	6844      	ldr	r4, [r0, #4]
 80050bc:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80050be:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80050c0:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80050c4:	07d2      	lsls	r2, r2, #31
 80050c6:	bf48      	it	mi
 80050c8:	5962      	ldrmi	r2, [r4, r5]
 80050ca:	689b      	ldr	r3, [r3, #8]
    }
 80050cc:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80050ce:	bf48      	it	mi
 80050d0:	58d3      	ldrmi	r3, [r2, r3]
 80050d2:	4718      	bx	r3

080050d4 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 80050d4:	6843      	ldr	r3, [r0, #4]
 80050d6:	b12b      	cbz	r3, 80050e4 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80050d8:	6883      	ldr	r3, [r0, #8]
 80050da:	b92b      	cbnz	r3, 80050e8 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80050dc:	68c0      	ldr	r0, [r0, #12]
 80050de:	f000 0001 	and.w	r0, r0, #1
 80050e2:	4770      	bx	lr
 80050e4:	4618      	mov	r0, r3
 80050e6:	4770      	bx	lr
 80050e8:	2001      	movs	r0, #1
    }
 80050ea:	4770      	bx	lr

080050ec <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        twoWildcardText.setAlpha(T::getAlpha());
 80050ec:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
        alpha = newAlpha;
 80050f0:	f880 30ae 	strb.w	r3, [r0, #174]	; 0xae
        alpha = newAlpha;
 80050f4:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
        T::handleAlphaUpdated();
    }
 80050f8:	4770      	bx	lr

080050fa <_ZN8touchgfx17DrawableListItemsI25CustomContainerScrollListLi8EED0Ev>:
 80050fa:	b510      	push	{r4, lr}
 80050fc:	4604      	mov	r4, r0
 80050fe:	f7ff ff81 	bl	8005004 <_ZN8touchgfx17DrawableListItemsI25CustomContainerScrollListLi8EED1Ev>
 8005102:	4620      	mov	r0, r4
 8005104:	f640 01a4 	movw	r1, #2212	; 0x8a4
 8005108:	f01f f967 	bl	80243da <_ZdlPvj>
 800510c:	4620      	mov	r0, r4
 800510e:	bd10      	pop	{r4, pc}

08005110 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005110:	b510      	push	{r4, lr}
 8005112:	2110      	movs	r1, #16
 8005114:	4604      	mov	r4, r0
 8005116:	f01f f960 	bl	80243da <_ZdlPvj>
 800511a:	4620      	mov	r0, r4
 800511c:	bd10      	pop	{r4, pc}

0800511e <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 800511e:	b510      	push	{r4, lr}
 8005120:	2110      	movs	r1, #16
 8005122:	4604      	mov	r4, r0
 8005124:	f01f f959 	bl	80243da <_ZdlPvj>
 8005128:	4620      	mov	r0, r4
 800512a:	bd10      	pop	{r4, pc}

0800512c <_ZN8touchgfx8CallbackI15Screen1ViewBasePNS_26DrawableListItemsInterfaceEssED0Ev>:
struct Callback : public GenericCallback<T1, T2, T3>
 800512c:	b510      	push	{r4, lr}
 800512e:	2110      	movs	r1, #16
 8005130:	4604      	mov	r4, r0
 8005132:	f01f f952 	bl	80243da <_ZdlPvj>
 8005136:	4620      	mov	r0, r4
 8005138:	bd10      	pop	{r4, pc}

0800513a <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class TwoWildcardTextButtonStyle : public T
 800513a:	b510      	push	{r4, lr}
 800513c:	21c4      	movs	r1, #196	; 0xc4
 800513e:	4604      	mov	r4, r0
 8005140:	f01f f94b 	bl	80243da <_ZdlPvj>
 8005144:	4620      	mov	r0, r4
 8005146:	bd10      	pop	{r4, pc}

08005148 <_ZN15Screen1ViewBaseD0Ev>:
 8005148:	b510      	push	{r4, lr}
 800514a:	4604      	mov	r4, r0
 800514c:	f7ff ff6e 	bl	800502c <_ZN15Screen1ViewBaseD1Ev>
 8005150:	4620      	mov	r0, r4
 8005152:	f644 716c 	movw	r1, #20332	; 0x4f6c
 8005156:	f01f f940 	bl	80243da <_ZdlPvj>
 800515a:	4620      	mov	r0, r4
 800515c:	bd10      	pop	{r4, pc}
	...

08005160 <_ZN8touchgfx17DrawableListItemsI25CustomContainerScrollListLi8EE11getDrawableEs>:
    virtual Drawable* getDrawable(int16_t index)
 8005160:	b508      	push	{r3, lr}
        assert(index >= 0 && index < SIZE);
 8005162:	b28b      	uxth	r3, r1
 8005164:	2b07      	cmp	r3, #7
 8005166:	d905      	bls.n	8005174 <_ZN8touchgfx17DrawableListItemsI25CustomContainerScrollListLi8EE11getDrawableEs+0x14>
 8005168:	4b05      	ldr	r3, [pc, #20]	; (8005180 <_ZN8touchgfx17DrawableListItemsI25CustomContainerScrollListLi8EE11getDrawableEs+0x20>)
 800516a:	4a06      	ldr	r2, [pc, #24]	; (8005184 <_ZN8touchgfx17DrawableListItemsI25CustomContainerScrollListLi8EE11getDrawableEs+0x24>)
 800516c:	4806      	ldr	r0, [pc, #24]	; (8005188 <_ZN8touchgfx17DrawableListItemsI25CustomContainerScrollListLi8EE11getDrawableEs+0x28>)
 800516e:	2154      	movs	r1, #84	; 0x54
 8005170:	f01f f962 	bl	8024438 <__assert_func>
        return &element[index];
 8005174:	f44f 738a 	mov.w	r3, #276	; 0x114
 8005178:	fb01 0003 	mla	r0, r1, r3, r0
    }
 800517c:	3004      	adds	r0, #4
 800517e:	bd08      	pop	{r3, pc}
 8005180:	08027b70 	.word	0x08027b70
 8005184:	08027b8b 	.word	0x08027b8b
 8005188:	08027c28 	.word	0x08027c28

0800518c <_ZN15Screen1ViewBase11setupScreenEv>:
    add(toggleButton1);
    add(scrollList1);
}

void Screen1ViewBase::setupScreen()
{
 800518c:	b570      	push	{r4, r5, r6, lr}
 800518e:	4604      	mov	r4, r0
    customContainerTableLog_0.initialize();
 8005190:	30d0      	adds	r0, #208	; 0xd0
 8005192:	f002 f8e4 	bl	800735e <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_1.initialize();
 8005196:	f504 60d4 	add.w	r0, r4, #1696	; 0x6a0
 800519a:	f002 f8e0 	bl	800735e <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_2.initialize();
 800519e:	f504 6047 	add.w	r0, r4, #3184	; 0xc70
 80051a2:	f002 f8dc 	bl	800735e <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_3.initialize();
 80051a6:	f504 5092 	add.w	r0, r4, #4672	; 0x1240
 80051aa:	f002 f8d8 	bl	800735e <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_4.initialize();
 80051ae:	f504 50c0 	add.w	r0, r4, #6144	; 0x1800
 80051b2:	3010      	adds	r0, #16
 80051b4:	f002 f8d3 	bl	800735e <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_5.initialize();
 80051b8:	f504 50ef 	add.w	r0, r4, #7648	; 0x1de0
 80051bc:	f002 f8cf 	bl	800735e <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_6.initialize();
 80051c0:	f504 500e 	add.w	r0, r4, #9088	; 0x2380
 80051c4:	3030      	adds	r0, #48	; 0x30
 80051c6:	f002 f8ca 	bl	800735e <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_7.initialize();
 80051ca:	f504 5026 	add.w	r0, r4, #10624	; 0x2980
 80051ce:	f002 f8c6 	bl	800735e <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_8.initialize();
 80051d2:	f504 503d 	add.w	r0, r4, #12096	; 0x2f40
 80051d6:	3010      	adds	r0, #16
 80051d8:	f002 f8c1 	bl	800735e <_ZN23CustomContainerTableLog10initializeEv>
    customContainerTableLog_9.initialize();
 80051dc:	f504 5054 	add.w	r0, r4, #13568	; 0x3500
 80051e0:	3020      	adds	r0, #32
 80051e2:	f002 f8bc 	bl	800735e <_ZN23CustomContainerTableLog10initializeEv>
    virtual void itemChanged(int itemIndex);

    /** Removed all drawables and initializes the content of these items. */
    virtual void initialize()
    {
        list.refreshDrawables();
 80051e6:	f504 408a 	add.w	r0, r4, #17664	; 0x4500
 80051ea:	3020      	adds	r0, #32
 80051ec:	f00a fb4a 	bl	800f884 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>
 80051f0:	f244 55bc 	movw	r5, #17852	; 0x45bc
    scrollList1.initialize();
    for (int i = 0; i < scrollList1ListItems.getNumberOfDrawables(); i++)
 80051f4:	f644 665c 	movw	r6, #20060	; 0x4e5c
    {
        scrollList1ListItems[i].initialize();
 80051f8:	5963      	ldr	r3, [r4, r5]
 80051fa:	1960      	adds	r0, r4, r5
 80051fc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005200:	f505 758a 	add.w	r5, r5, #276	; 0x114
 8005204:	4798      	blx	r3
    for (int i = 0; i < scrollList1ListItems.getNumberOfDrawables(); i++)
 8005206:	42b5      	cmp	r5, r6
 8005208:	d1f6      	bne.n	80051f8 <_ZN15Screen1ViewBase11setupScreenEv+0x6c>
    }
}
 800520a:	bd70      	pop	{r4, r5, r6, pc}

0800520c <_ZN15Screen1ViewBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss>:
        modalWindow1.invalidate();
    }
}

void Screen1ViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
 800520c:	b513      	push	{r0, r1, r4, lr}
 800520e:	4604      	mov	r4, r0
 8005210:	4608      	mov	r0, r1
 8005212:	4611      	mov	r1, r2
 8005214:	461a      	mov	r2, r3
    if (items == &scrollList1ListItems)
 8005216:	f504 438b 	add.w	r3, r4, #17792	; 0x4580
 800521a:	3338      	adds	r3, #56	; 0x38
 800521c:	4298      	cmp	r0, r3
 800521e:	d10c      	bne.n	800523a <_ZN15Screen1ViewBase25updateItemCallbackHandlerEPN8touchgfx26DrawableListItemsInterfaceEss+0x2e>
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
 8005220:	6803      	ldr	r3, [r0, #0]
 8005222:	9201      	str	r2, [sp, #4]
 8005224:	689b      	ldr	r3, [r3, #8]
 8005226:	4798      	blx	r3
        CustomContainerScrollList* cc = (CustomContainerScrollList*)d;
        scrollList1UpdateItem(*cc, itemIndex);
 8005228:	6823      	ldr	r3, [r4, #0]
 800522a:	9a01      	ldr	r2, [sp, #4]
 800522c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
 800522e:	4601      	mov	r1, r0
        scrollList1UpdateItem(*cc, itemIndex);
 8005230:	4620      	mov	r0, r4
    }
}
 8005232:	b002      	add	sp, #8
 8005234:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        scrollList1UpdateItem(*cc, itemIndex);
 8005238:	4718      	bx	r3
}
 800523a:	b002      	add	sp, #8
 800523c:	bd10      	pop	{r4, pc}

0800523e <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    if (&src == &flexButtonReadLog)
 800523e:	f500 526c 	add.w	r2, r0, #15104	; 0x3b00
 8005242:	3224      	adds	r2, #36	; 0x24
 8005244:	4291      	cmp	r1, r2
 8005246:	d102      	bne.n	800524e <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
        functionReadLog();
 8005248:	6803      	ldr	r3, [r0, #0]
 800524a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
        functionFilterData();
 800524c:	4718      	bx	r3
    else if (&src == &flexButtonFilterData)
 800524e:	f500 526f 	add.w	r2, r0, #15296	; 0x3bc0
 8005252:	3220      	adds	r2, #32
 8005254:	4291      	cmp	r1, r2
 8005256:	d102      	bne.n	800525e <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x20>
        functionFilterData();
 8005258:	6803      	ldr	r3, [r0, #0]
 800525a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800525c:	e7f6      	b.n	800524c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    else if (&src == &flexButtonPageBack)
 800525e:	f500 5273 	add.w	r2, r0, #15552	; 0x3cc0
 8005262:	3214      	adds	r2, #20
 8005264:	4291      	cmp	r1, r2
 8005266:	d102      	bne.n	800526e <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x30>
        functionPageBack();
 8005268:	6803      	ldr	r3, [r0, #0]
 800526a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800526c:	e7ee      	b.n	800524c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    else if (&src == &flexButtonPage_1)
 800526e:	f500 5276 	add.w	r2, r0, #15744	; 0x3d80
 8005272:	3214      	adds	r2, #20
 8005274:	4291      	cmp	r1, r2
 8005276:	d102      	bne.n	800527e <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x40>
        functionPage_1();
 8005278:	6803      	ldr	r3, [r0, #0]
 800527a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800527c:	e7e6      	b.n	800524c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    else if (&src == &flexButtonPage_2)
 800527e:	f500 5279 	add.w	r2, r0, #15936	; 0x3e40
 8005282:	3214      	adds	r2, #20
 8005284:	4291      	cmp	r1, r2
 8005286:	d102      	bne.n	800528e <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x50>
        functionPage_2();
 8005288:	6803      	ldr	r3, [r0, #0]
 800528a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800528c:	e7de      	b.n	800524c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    else if (&src == &flexButtonPage_3)
 800528e:	f500 527c 	add.w	r2, r0, #16128	; 0x3f00
 8005292:	3214      	adds	r2, #20
 8005294:	4291      	cmp	r1, r2
 8005296:	d102      	bne.n	800529e <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x60>
        functionPage_3();
 8005298:	6803      	ldr	r3, [r0, #0]
 800529a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800529c:	e7d6      	b.n	800524c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    else if (&src == &flexButtonPage_4)
 800529e:	f500 527f 	add.w	r2, r0, #16320	; 0x3fc0
 80052a2:	3214      	adds	r2, #20
 80052a4:	4291      	cmp	r1, r2
 80052a6:	d102      	bne.n	80052ae <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x70>
        functionPage_4();
 80052a8:	6803      	ldr	r3, [r0, #0]
 80052aa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80052ac:	e7ce      	b.n	800524c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    else if (&src == &flexButtonPage_5)
 80052ae:	f500 4281 	add.w	r2, r0, #16512	; 0x4080
 80052b2:	3214      	adds	r2, #20
 80052b4:	4291      	cmp	r1, r2
 80052b6:	d102      	bne.n	80052be <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x80>
        functionPage_5();
 80052b8:	6803      	ldr	r3, [r0, #0]
 80052ba:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80052bc:	e7c6      	b.n	800524c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    else if (&src == &flexButtonPageForward)
 80052be:	f500 4282 	add.w	r2, r0, #16640	; 0x4100
 80052c2:	3254      	adds	r2, #84	; 0x54
 80052c4:	4291      	cmp	r1, r2
 80052c6:	d102      	bne.n	80052ce <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x90>
        functionPageForward();
 80052c8:	6803      	ldr	r3, [r0, #0]
 80052ca:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80052cc:	e7be      	b.n	800524c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    else if (&src == &flexButtonOkFilDataTime)
 80052ce:	f500 4285 	add.w	r2, r0, #17024	; 0x4280
 80052d2:	3244      	adds	r2, #68	; 0x44
 80052d4:	4291      	cmp	r1, r2
 80052d6:	d102      	bne.n	80052de <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa0>
        functionOkFilDataTime();
 80052d8:	6802      	ldr	r2, [r0, #0]
 80052da:	6d52      	ldr	r2, [r2, #84]	; 0x54
 80052dc:	4710      	bx	r2
    else if (&src == &flexButtonExitFilDataTime)
 80052de:	f500 4287 	add.w	r2, r0, #17280	; 0x4380
 80052e2:	4291      	cmp	r1, r2
 80052e4:	d108      	bne.n	80052f8 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xba>
        visible = vis;
 80052e6:	f244 2239 	movw	r2, #16953	; 0x4239
 80052ea:	2100      	movs	r1, #0
 80052ec:	5481      	strb	r1, [r0, r2]
        modalWindow1.invalidate();
 80052ee:	f500 4084 	add.w	r0, r0, #16896	; 0x4200
 80052f2:	3014      	adds	r0, #20
 80052f4:	f010 ba54 	b.w	80157a0 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 80052f8:	4770      	bx	lr

080052fa <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &button1)
 80052fa:	f500 506b 	add.w	r0, r0, #15040	; 0x3ac0
 80052fe:	3030      	adds	r0, #48	; 0x30
 8005300:	4281      	cmp	r1, r0
{
 8005302:	b508      	push	{r3, lr}
    if (&src == &button1)
 8005304:	d105      	bne.n	8005312 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005306:	f00f faa3 	bl	8014850 <_ZN8touchgfx11Application11getInstanceEv>
}
 800530a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen2ScreenNoTransition();
 800530e:	f7ff bc81 	b.w	8004c14 <_ZN23FrontendApplicationBase29gotoScreen2ScreenNoTransitionEv>
}
 8005312:	bd08      	pop	{r3, pc}

08005314 <_ZN8touchgfx14AbstractButtonC1Ev>:
 */
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
 8005314:	b510      	push	{r4, lr}
        : Widget(), action(), pressed(false)
 8005316:	2226      	movs	r2, #38	; 0x26
    AbstractButton()
 8005318:	4604      	mov	r4, r0
        : Widget(), action(), pressed(false)
 800531a:	2100      	movs	r1, #0
 800531c:	f01f fb32 	bl	8024984 <memset>
 8005320:	4620      	mov	r0, r4
 8005322:	f7fc ffa5 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 8005326:	4b05      	ldr	r3, [pc, #20]	; (800533c <_ZN8touchgfx14AbstractButtonC1Ev+0x28>)
 8005328:	6023      	str	r3, [r4, #0]
 800532a:	2300      	movs	r3, #0
 800532c:	62a3      	str	r3, [r4, #40]	; 0x28
 800532e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        touchable = touch;
 8005332:	2301      	movs	r3, #1
 8005334:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
    {
        setTouchable(true);
    }
 8005338:	4620      	mov	r0, r4
 800533a:	bd10      	pop	{r4, pc}
 800533c:	08029ab4 	.word	0x08029ab4

08005340 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>:
 8005340:	6803      	ldr	r3, [r0, #0]
        colorPressed = newColorPressed;
 8005342:	e9c0 122e 	strd	r1, r2, [r0, #184]	; 0xb8
        handlePressedUpdated();
 8005346:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800534a:	4718      	bx	r3

0800534c <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 800534c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005350:	ed2d 8b10 	vpush	{d8-d15}
 8005354:	4604      	mov	r4, r0
 8005356:	b097      	sub	sp, #92	; 0x5c
        : presenter(0)
 8005358:	f010 fcc0 	bl	8015cdc <_ZN8touchgfx6ScreenC1Ev>
    updateItemCallback(this, &Screen1ViewBase::updateItemCallbackHandler)
 800535c:	4622      	mov	r2, r4
 800535e:	2500      	movs	r5, #0
 8005360:	4bde      	ldr	r3, [pc, #888]	; (80056dc <_ZN15Screen1ViewBaseC1Ev+0x390>)
 8005362:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005364:	f842 3b40 	str.w	r3, [r2], #64
 8005368:	4610      	mov	r0, r2
 800536a:	9208      	str	r2, [sp, #32]
 800536c:	f7fc fea4 	bl	80020b8 <_ZN8touchgfx3BoxC1Ev>
 8005370:	f104 036c 	add.w	r3, r4, #108	; 0x6c
        : Box(), borderColor(0), borderSize(0)
 8005374:	4618      	mov	r0, r3
 8005376:	9309      	str	r3, [sp, #36]	; 0x24
 8005378:	f7fc fe9e 	bl	80020b8 <_ZN8touchgfx3BoxC1Ev>
 800537c:	4bd8      	ldr	r3, [pc, #864]	; (80056e0 <_ZN15Screen1ViewBaseC1Ev+0x394>)
 800537e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005380:	f104 03a0 	add.w	r3, r4, #160	; 0xa0
 8005384:	f8c4 5098 	str.w	r5, [r4, #152]	; 0x98
 8005388:	f8a4 509c 	strh.w	r5, [r4, #156]	; 0x9c
 800538c:	4618      	mov	r0, r3
 800538e:	ee08 3a10 	vmov	s16, r3
 8005392:	f7fc ff6d 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
     *           places the elements vertically, ::EAST places the elements horizontally.
     *
     * @see setDirection
     */
    ListLayout(const Direction d = SOUTH)
        : Container(), direction(d), offset(0)
 8005396:	4bd3      	ldr	r3, [pc, #844]	; (80056e4 <_ZN15Screen1ViewBaseC1Ev+0x398>)
 8005398:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
 800539c:	f04f 0a01 	mov.w	sl, #1
 80053a0:	f104 03d0 	add.w	r3, r4, #208	; 0xd0
 80053a4:	f8c4 50c8 	str.w	r5, [r4, #200]	; 0xc8
 80053a8:	f884 a0cc 	strb.w	sl, [r4, #204]	; 0xcc
 80053ac:	f8a4 50ce 	strh.w	r5, [r4, #206]	; 0xce
 80053b0:	4618      	mov	r0, r3
 80053b2:	930a      	str	r3, [sp, #40]	; 0x28
 80053b4:	f001 ffde 	bl	8007374 <_ZN23CustomContainerTableLogC1Ev>
 80053b8:	f504 63d4 	add.w	r3, r4, #1696	; 0x6a0
 80053bc:	4618      	mov	r0, r3
 80053be:	930b      	str	r3, [sp, #44]	; 0x2c
 80053c0:	f001 ffd8 	bl	8007374 <_ZN23CustomContainerTableLogC1Ev>
 80053c4:	f504 6347 	add.w	r3, r4, #3184	; 0xc70
 80053c8:	4618      	mov	r0, r3
 80053ca:	930c      	str	r3, [sp, #48]	; 0x30
 80053cc:	f001 ffd2 	bl	8007374 <_ZN23CustomContainerTableLogC1Ev>
 80053d0:	f504 5392 	add.w	r3, r4, #4672	; 0x1240
 80053d4:	4618      	mov	r0, r3
 80053d6:	930d      	str	r3, [sp, #52]	; 0x34
 80053d8:	f001 ffcc 	bl	8007374 <_ZN23CustomContainerTableLogC1Ev>
 80053dc:	f504 53c0 	add.w	r3, r4, #6144	; 0x1800
 80053e0:	3310      	adds	r3, #16
 80053e2:	4618      	mov	r0, r3
 80053e4:	9303      	str	r3, [sp, #12]
 80053e6:	f001 ffc5 	bl	8007374 <_ZN23CustomContainerTableLogC1Ev>
 80053ea:	f504 53ef 	add.w	r3, r4, #7648	; 0x1de0
 80053ee:	4618      	mov	r0, r3
 80053f0:	930e      	str	r3, [sp, #56]	; 0x38
 80053f2:	f001 ffbf 	bl	8007374 <_ZN23CustomContainerTableLogC1Ev>
 80053f6:	f504 530e 	add.w	r3, r4, #9088	; 0x2380
 80053fa:	3330      	adds	r3, #48	; 0x30
 80053fc:	4618      	mov	r0, r3
 80053fe:	9306      	str	r3, [sp, #24]
 8005400:	f504 573d 	add.w	r7, r4, #12096	; 0x2f40
 8005404:	f001 ffb6 	bl	8007374 <_ZN23CustomContainerTableLogC1Ev>
 8005408:	f504 5326 	add.w	r3, r4, #10624	; 0x2980
 800540c:	4618      	mov	r0, r3
 800540e:	3710      	adds	r7, #16
 8005410:	f504 5654 	add.w	r6, r4, #13568	; 0x3500
 8005414:	930f      	str	r3, [sp, #60]	; 0x3c
 8005416:	3620      	adds	r6, #32
 8005418:	f001 ffac 	bl	8007374 <_ZN23CustomContainerTableLogC1Ev>
 800541c:	4638      	mov	r0, r7
 800541e:	f001 ffa9 	bl	8007374 <_ZN23CustomContainerTableLogC1Ev>
 8005422:	f643 28f0 	movw	r8, #15088	; 0x3af0
 8005426:	4630      	mov	r0, r6
 8005428:	f001 ffa4 	bl	8007374 <_ZN23CustomContainerTableLogC1Ev>
 800542c:	eb04 0308 	add.w	r3, r4, r8
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 8005430:	4618      	mov	r0, r3
 8005432:	9304      	str	r3, [sp, #16]
 8005434:	f7ff ff6e 	bl	8005314 <_ZN8touchgfx14AbstractButtonC1Ev>
 8005438:	4aab      	ldr	r2, [pc, #684]	; (80056e8 <_ZN15Screen1ViewBaseC1Ev+0x39c>)
 800543a:	f844 2008 	str.w	r2, [r4, r8]
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 800543e:	f643 321e 	movw	r2, #15134	; 0x3b1e
 8005442:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8005446:	f824 9002 	strh.w	r9, [r4, r2]
 800544a:	9b04      	ldr	r3, [sp, #16]
 800544c:	f643 3220 	movw	r2, #15136	; 0x3b20
 8005450:	f643 38e0 	movw	r8, #15328	; 0x3be0
 8005454:	f824 9002 	strh.w	r9, [r4, r2]
 8005458:	f883 9032 	strb.w	r9, [r3, #50]	; 0x32
 800545c:	f504 536c 	add.w	r3, r4, #15104	; 0x3b00
 8005460:	3324      	adds	r3, #36	; 0x24
 8005462:	4618      	mov	r0, r3
 8005464:	ee09 3a90 	vmov	s19, r3
 8005468:	f7fd fa66 	bl	8002938 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800546c:	eb04 0308 	add.w	r3, r4, r8
 8005470:	ee0e 3a10 	vmov	s28, r3
        : T()
 8005474:	4618      	mov	r0, r3
 8005476:	f7fd fa33 	bl	80028e0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800547a:	ee1e 3a10 	vmov	r3, s28
 800547e:	4a9b      	ldr	r2, [pc, #620]	; (80056ec <_ZN15Screen1ViewBaseC1Ev+0x3a0>)
 8005480:	f844 2008 	str.w	r2, [r4, r8]
 8005484:	f103 0878 	add.w	r8, r3, #120	; 0x78
 */
class TextAreaWithTwoWildcards : public TextArea
{
public:
    TextAreaWithTwoWildcards()
        : TextArea(), wc1(0), wc2(0)
 8005488:	4640      	mov	r0, r8
 800548a:	f7fd f9e3 	bl	8002854 <_ZN8touchgfx8TextAreaC1Ev>
 800548e:	f643 4158 	movw	r1, #15448	; 0x3c58
 8005492:	1862      	adds	r2, r4, r1
 8005494:	4896      	ldr	r0, [pc, #600]	; (80056f0 <_ZN15Screen1ViewBaseC1Ev+0x3a4>)
 8005496:	5060      	str	r0, [r4, r1]
 8005498:	e9c2 550f 	strd	r5, r5, [r2, #60]	; 0x3c
        : color(0)
 800549c:	f643 429c 	movw	r2, #15516	; 0x3c9c
        T::add(twoWildcardText);
 80054a0:	4641      	mov	r1, r8
 80054a2:	50a5      	str	r5, [r4, r2]
 80054a4:	f643 42a0 	movw	r2, #15520	; 0x3ca0
 80054a8:	f643 4ba4 	movw	fp, #15524	; 0x3ca4
 80054ac:	50a5      	str	r5, [r4, r2]
 80054ae:	ee1e 0a10 	vmov	r0, s28
 80054b2:	f00b f811 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80054b6:	eb04 030b 	add.w	r3, r4, fp
 80054ba:	ee08 3a90 	vmov	s17, r3
 80054be:	4618      	mov	r0, r3
 80054c0:	f7fc fed6 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 80054c4:	ee18 3a90 	vmov	r3, s17
 80054c8:	629d      	str	r5, [r3, #40]	; 0x28
 80054ca:	4b86      	ldr	r3, [pc, #536]	; (80056e4 <_ZN15Screen1ViewBaseC1Ev+0x398>)
 80054cc:	f844 300b 	str.w	r3, [r4, fp]
 80054d0:	ee18 3a90 	vmov	r3, s17
 80054d4:	f883 a02c 	strb.w	sl, [r3, #44]	; 0x2c
 80054d8:	85dd      	strh	r5, [r3, #46]	; 0x2e
 80054da:	f504 5373 	add.w	r3, r4, #15552	; 0x3cc0
 80054de:	3314      	adds	r3, #20
 80054e0:	4618      	mov	r0, r3
 80054e2:	ee0a 3a90 	vmov	s21, r3
 80054e6:	f7fc fee3 	bl	80022b0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80054ea:	f504 5376 	add.w	r3, r4, #15744	; 0x3d80
 80054ee:	3314      	adds	r3, #20
 80054f0:	4618      	mov	r0, r3
 80054f2:	ee0b 3a10 	vmov	s22, r3
 80054f6:	f7fc fedb 	bl	80022b0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80054fa:	f504 5379 	add.w	r3, r4, #15936	; 0x3e40
 80054fe:	3314      	adds	r3, #20
 8005500:	4618      	mov	r0, r3
 8005502:	ee0b 3a90 	vmov	s23, r3
 8005506:	f7fc fed3 	bl	80022b0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800550a:	f504 537c 	add.w	r3, r4, #16128	; 0x3f00
 800550e:	3314      	adds	r3, #20
 8005510:	4618      	mov	r0, r3
 8005512:	ee0c 3a10 	vmov	s24, r3
 8005516:	f7fc fecb 	bl	80022b0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800551a:	f504 537f 	add.w	r3, r4, #16320	; 0x3fc0
 800551e:	3314      	adds	r3, #20
 8005520:	4618      	mov	r0, r3
 8005522:	ee0c 3a90 	vmov	s25, r3
 8005526:	f7fc fec3 	bl	80022b0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800552a:	f504 4381 	add.w	r3, r4, #16512	; 0x4080
 800552e:	3314      	adds	r3, #20
 8005530:	4618      	mov	r0, r3
 8005532:	ee0d 3a10 	vmov	s26, r3
 8005536:	f7fc febb 	bl	80022b0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800553a:	f504 4382 	add.w	r3, r4, #16640	; 0x4100
 800553e:	3354      	adds	r3, #84	; 0x54
 8005540:	4618      	mov	r0, r3
 8005542:	ee0d 3a90 	vmov	s27, r3
 8005546:	f7fc feb3 	bl	80022b0 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800554a:	f504 4384 	add.w	r3, r4, #16896	; 0x4200
 800554e:	3314      	adds	r3, #20
 8005550:	4618      	mov	r0, r3
 8005552:	ee09 3a10 	vmov	s18, r3
 8005556:	f00a fecf 	bl	80102f8 <_ZN8touchgfx11ModalWindowC1Ev>
 800555a:	f504 4385 	add.w	r3, r4, #17024	; 0x4280
 800555e:	3344      	adds	r3, #68	; 0x44
 8005560:	4618      	mov	r0, r3
 8005562:	ee0a 3a10 	vmov	s20, r3
 8005566:	f7fd f9e7 	bl	8002938 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800556a:	f504 4387 	add.w	r3, r4, #17280	; 0x4380
 800556e:	f244 4a3c 	movw	sl, #17468	; 0x443c
 8005572:	4618      	mov	r0, r3
 8005574:	ee0f 3a90 	vmov	s31, r3
 8005578:	f7fd f9de 	bl	8002938 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800557c:	eb04 030a 	add.w	r3, r4, sl
 8005580:	ee0e 3a90 	vmov	s29, r3
        : TextArea(), wildcard(0)
 8005584:	4618      	mov	r0, r3
 8005586:	f7fd f965 	bl	8002854 <_ZN8touchgfx8TextAreaC1Ev>
 800558a:	f8df b188 	ldr.w	fp, [pc, #392]	; 8005714 <_ZN15Screen1ViewBaseC1Ev+0x3c8>
 800558e:	f844 b00a 	str.w	fp, [r4, sl]
 8005592:	ee1e 3a90 	vmov	r3, s29
 8005596:	f244 4a7c 	movw	sl, #17532	; 0x447c
 800559a:	63dd      	str	r5, [r3, #60]	; 0x3c
 800559c:	eb04 030a 	add.w	r3, r4, sl
 80055a0:	ee0f 3a10 	vmov	s30, r3
 80055a4:	4618      	mov	r0, r3
 80055a6:	f7fd f955 	bl	8002854 <_ZN8touchgfx8TextAreaC1Ev>
 80055aa:	ee1f 3a10 	vmov	r3, s30
 80055ae:	f844 b00a 	str.w	fp, [r4, sl]
 80055b2:	63dd      	str	r5, [r3, #60]	; 0x3c
 80055b4:	f244 45bc 	movw	r5, #17596	; 0x44bc
 80055b8:	1963      	adds	r3, r4, r5
 80055ba:	4618      	mov	r0, r3
 80055bc:	9307      	str	r3, [sp, #28]
 80055be:	f7ff fea9 	bl	8005314 <_ZN8touchgfx14AbstractButtonC1Ev>
 80055c2:	f244 43ea 	movw	r3, #17642	; 0x44ea
 80055c6:	f504 4b89 	add.w	fp, r4, #17536	; 0x4480
 80055ca:	f824 9003 	strh.w	r9, [r4, r3]
 80055ce:	f244 43ec 	movw	r3, #17644	; 0x44ec
 80055d2:	f10b 0b74 	add.w	fp, fp, #116	; 0x74
 80055d6:	f824 9003 	strh.w	r9, [r4, r3]
 80055da:	1963      	adds	r3, r4, r5
 80055dc:	4658      	mov	r0, fp
 80055de:	f883 9032 	strb.w	r9, [r3, #50]	; 0x32
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 80055e2:	4b44      	ldr	r3, [pc, #272]	; (80056f4 <_ZN15Screen1ViewBaseC1Ev+0x3a8>)
 80055e4:	5163      	str	r3, [r4, r5]
 80055e6:	f244 43f0 	movw	r3, #17648	; 0x44f0
 80055ea:	f504 458b 	add.w	r5, r4, #17792	; 0x4580
 80055ee:	f824 9003 	strh.w	r9, [r4, r3]
 80055f2:	f00a fb9b 	bl	800fd2c <_ZN8touchgfx10ScrollListC1Ev>
 80055f6:	f244 53b8 	movw	r3, #17848	; 0x45b8
 80055fa:	18e2      	adds	r2, r4, r3
 80055fc:	9211      	str	r2, [sp, #68]	; 0x44
class DrawableListItems : public DrawableListItemsInterface
 80055fe:	4a3e      	ldr	r2, [pc, #248]	; (80056f8 <_ZN15Screen1ViewBaseC1Ev+0x3ac>)
 8005600:	50e2      	str	r2, [r4, r3]
 8005602:	f504 439c 	add.w	r3, r4, #19968	; 0x4e00
 8005606:	335c      	adds	r3, #92	; 0x5c
 8005608:	353c      	adds	r5, #60	; 0x3c
 800560a:	9305      	str	r3, [sp, #20]
 800560c:	4628      	mov	r0, r5
 800560e:	f001 fe9b 	bl	8007348 <_ZN25CustomContainerScrollListC1Ev>
 8005612:	9b05      	ldr	r3, [sp, #20]
 8005614:	f505 758a 	add.w	r5, r5, #276	; 0x114
 8005618:	42ab      	cmp	r3, r5
 800561a:	d1f7      	bne.n	800560c <_ZN15Screen1ViewBaseC1Ev+0x2c0>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 800561c:	f644 733c 	movw	r3, #20284	; 0x4f3c
 8005620:	4a36      	ldr	r2, [pc, #216]	; (80056fc <_ZN15Screen1ViewBaseC1Ev+0x3b0>)
 8005622:	50e2      	str	r2, [r4, r3]
 8005624:	eb04 0903 	add.w	r9, r4, r3
 8005628:	f644 7344 	movw	r3, #20292	; 0x4f44
 800562c:	4a34      	ldr	r2, [pc, #208]	; (8005700 <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
 800562e:	f8c9 4004 	str.w	r4, [r9, #4]
 8005632:	50e2      	str	r2, [r4, r3]
 8005634:	f644 7348 	movw	r3, #20296	; 0x4f48
 8005638:	2500      	movs	r5, #0
 800563a:	50e5      	str	r5, [r4, r3]
 800563c:	f644 734c 	movw	r3, #20300	; 0x4f4c
 8005640:	18e2      	adds	r2, r4, r3
 8005642:	9202      	str	r2, [sp, #8]
 8005644:	4a2f      	ldr	r2, [pc, #188]	; (8005704 <_ZN15Screen1ViewBaseC1Ev+0x3b8>)
 8005646:	50e2      	str	r2, [r4, r3]
 8005648:	9b02      	ldr	r3, [sp, #8]
 800564a:	4a2f      	ldr	r2, [pc, #188]	; (8005708 <_ZN15Screen1ViewBaseC1Ev+0x3bc>)
 800564c:	605c      	str	r4, [r3, #4]
 800564e:	f644 7354 	movw	r3, #20308	; 0x4f54
    __background.setPosition(0, 0, 800, 480);
 8005652:	f44f 7af0 	mov.w	sl, #480	; 0x1e0
 8005656:	50e2      	str	r2, [r4, r3]
 8005658:	f644 7358 	movw	r3, #20312	; 0x4f58
 800565c:	9808      	ldr	r0, [sp, #32]
 800565e:	50e5      	str	r5, [r4, r3]
        : pobject(pobject), pmemfun_3(pmemfun_3)
 8005660:	f644 735c 	movw	r3, #20316	; 0x4f5c
 8005664:	18e2      	adds	r2, r4, r3
 8005666:	9210      	str	r2, [sp, #64]	; 0x40
 8005668:	4a28      	ldr	r2, [pc, #160]	; (800570c <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
 800566a:	50e2      	str	r2, [r4, r3]
 800566c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800566e:	4a28      	ldr	r2, [pc, #160]	; (8005710 <_ZN15Screen1ViewBaseC1Ev+0x3c4>)
 8005670:	605c      	str	r4, [r3, #4]
 8005672:	f644 7364 	movw	r3, #20324	; 0x4f64
 8005676:	f8cd a000 	str.w	sl, [sp]
 800567a:	50e2      	str	r2, [r4, r3]
 800567c:	f644 7368 	movw	r3, #20328	; 0x4f68
 8005680:	462a      	mov	r2, r5
 8005682:	50e5      	str	r5, [r4, r3]
 8005684:	4629      	mov	r1, r5
 8005686:	f44f 7348 	mov.w	r3, #800	; 0x320
 800568a:	f7fd f8d7 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 800568e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    boxWithBorder1.setPosition(-2, 0, 800, 480);
 8005692:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005694:	66a3      	str	r3, [r4, #104]	; 0x68
 8005696:	f8cd a000 	str.w	sl, [sp]
 800569a:	f44f 7348 	mov.w	r3, #800	; 0x320
 800569e:	462a      	mov	r2, r5
 80056a0:	f06f 0101 	mvn.w	r1, #1
 80056a4:	f7fd f8ca 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = color;
 80056a8:	f04f 32ff 	mov.w	r2, #4294967295
 80056ac:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80056b0:	e9c4 2325 	strd	r2, r3, [r4, #148]	; 0x94
        borderSize = size;
 80056b4:	2303      	movs	r3, #3
 80056b6:	f8a4 309c 	strh.w	r3, [r4, #156]	; 0x9c
    listLayoutLogTable.setDirection(touchgfx::SOUTH);
 80056ba:	ee18 0a10 	vmov	r0, s16
 80056be:	2101      	movs	r1, #1
 80056c0:	f00b fa14 	bl	8010aec <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>
    listLayoutLogTable.setXY(32, 200);
 80056c4:	22c8      	movs	r2, #200	; 0xc8
 80056c6:	ee18 0a10 	vmov	r0, s16
 80056ca:	2120      	movs	r1, #32
 80056cc:	f7fc fde2 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
    listLayoutLogTable.add(customContainerTableLog_0);
 80056d0:	990a      	ldr	r1, [sp, #40]	; 0x28
 80056d2:	f8df a044 	ldr.w	sl, [pc, #68]	; 8005718 <_ZN15Screen1ViewBaseC1Ev+0x3cc>
 80056d6:	ee18 0a10 	vmov	r0, s16
 80056da:	e01f      	b.n	800571c <_ZN15Screen1ViewBaseC1Ev+0x3d0>
 80056dc:	08027d88 	.word	0x08027d88
 80056e0:	08029ec4 	.word	0x08029ec4
 80056e4:	08029220 	.word	0x08029220
 80056e8:	08029d00 	.word	0x08029d00
 80056ec:	08027c90 	.word	0x08027c90
 80056f0:	08029e1c 	.word	0x08029e1c
 80056f4:	08029b20 	.word	0x08029b20
 80056f8:	08027d28 	.word	0x08027d28
 80056fc:	08027d40 	.word	0x08027d40
 8005700:	080052fb 	.word	0x080052fb
 8005704:	08027d58 	.word	0x08027d58
 8005708:	0800523f 	.word	0x0800523f
 800570c:	08027d70 	.word	0x08027d70
 8005710:	0800520d 	.word	0x0800520d
 8005714:	08029da4 	.word	0x08029da4
 8005718:	ff336699 	.word	0xff336699
 800571c:	f00b fa50 	bl	8010bc0 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_1);
 8005720:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005722:	ee18 0a10 	vmov	r0, s16
 8005726:	f00b fa4b 	bl	8010bc0 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_2);
 800572a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800572c:	ee18 0a10 	vmov	r0, s16
 8005730:	f00b fa46 	bl	8010bc0 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_3);
 8005734:	990d      	ldr	r1, [sp, #52]	; 0x34
 8005736:	ee18 0a10 	vmov	r0, s16
 800573a:	f00b fa41 	bl	8010bc0 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_4);
 800573e:	9903      	ldr	r1, [sp, #12]
 8005740:	ee18 0a10 	vmov	r0, s16
 8005744:	f00b fa3c 	bl	8010bc0 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_5);
 8005748:	990e      	ldr	r1, [sp, #56]	; 0x38
 800574a:	ee18 0a10 	vmov	r0, s16
 800574e:	f00b fa37 	bl	8010bc0 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_6);
 8005752:	9906      	ldr	r1, [sp, #24]
 8005754:	ee18 0a10 	vmov	r0, s16
 8005758:	f00b fa32 	bl	8010bc0 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_7);
 800575c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800575e:	ee18 0a10 	vmov	r0, s16
 8005762:	f00b fa2d 	bl	8010bc0 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_8);
 8005766:	4639      	mov	r1, r7
 8005768:	ee18 0a10 	vmov	r0, s16
 800576c:	f00b fa28 	bl	8010bc0 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    listLayoutLogTable.add(customContainerTableLog_9);
 8005770:	4631      	mov	r1, r6
 8005772:	ee18 0a10 	vmov	r0, s16
 8005776:	f00b fa23 	bl	8010bc0 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    button1.setXY(18, 14);
 800577a:	9804      	ldr	r0, [sp, #16]
 800577c:	220e      	movs	r2, #14
 800577e:	2112      	movs	r1, #18
 8005780:	f7fc fd88 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8005784:	f04f 0601 	mov.w	r6, #1
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 8005788:	9804      	ldr	r0, [sp, #16]
 800578a:	f8ad 6050 	strh.w	r6, [sp, #80]	; 0x50
 800578e:	aa14      	add	r2, sp, #80	; 0x50
 8005790:	a913      	add	r1, sp, #76	; 0x4c
 8005792:	f8ad 504c 	strh.w	r5, [sp, #76]	; 0x4c
 8005796:	f00c fcc0 	bl	801211a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 800579a:	f643 3318 	movw	r3, #15128	; 0x3b18
        borderBox.setPosition(x, y, width, height);
 800579e:	ee19 0a90 	vmov	r0, s19
 80057a2:	271e      	movs	r7, #30
 80057a4:	f844 9003 	str.w	r9, [r4, r3]
 80057a8:	9700      	str	r7, [sp, #0]
 80057aa:	23c4      	movs	r3, #196	; 0xc4
 80057ac:	462a      	mov	r2, r5
 80057ae:	4629      	mov	r1, r5
 80057b0:	3034      	adds	r0, #52	; 0x34
 80057b2:	f7fd f843 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 80057b6:	f643 3388 	movw	r3, #15240	; 0x3b88
    flexButtonReadLog.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80057ba:	4a3f      	ldr	r2, [pc, #252]	; (80058b8 <_ZN15Screen1ViewBaseC1Ev+0x56c>)
 80057bc:	52e6      	strh	r6, [r4, r3]
 80057be:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 80057c2:	493e      	ldr	r1, [pc, #248]	; (80058bc <_ZN15Screen1ViewBaseC1Ev+0x570>)
 80057c4:	f8cd a000 	str.w	sl, [sp]
 80057c8:	ee19 0a90 	vmov	r0, s19
 80057cc:	f6a3 0322 	subw	r3, r3, #2082	; 0x822
 80057d0:	f7fd f85c 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 80057d4:	4b3a      	ldr	r3, [pc, #232]	; (80058c0 <_ZN15Screen1ViewBaseC1Ev+0x574>)
 80057d6:	9314      	str	r3, [sp, #80]	; 0x50
    flexButtonReadLog.setText(TypedText(T___SINGLEUSE_Z9OO));
 80057d8:	ee19 0a90 	vmov	r0, s19
 80057dc:	2333      	movs	r3, #51	; 0x33
 80057de:	a914      	add	r1, sp, #80	; 0x50
 80057e0:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 80057e4:	f7fd f85e 	bl	80028a4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 80057e8:	ee19 0a90 	vmov	r0, s19
 80057ec:	2205      	movs	r2, #5
 80057ee:	4629      	mov	r1, r5
 80057f0:	9700      	str	r7, [sp, #0]
 80057f2:	23c4      	movs	r3, #196	; 0xc4
 80057f4:	3078      	adds	r0, #120	; 0x78
 80057f6:	f7fd f821 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 80057fa:	f643 33d8 	movw	r3, #15320	; 0x3bd8
 80057fe:	4e31      	ldr	r6, [pc, #196]	; (80058c4 <_ZN15Screen1ViewBaseC1Ev+0x578>)
 8005800:	50e6      	str	r6, [r4, r3]
        colorPressed = newColorPressed;
 8005802:	f643 33dc 	movw	r3, #15324	; 0x3bdc
        handlePressedUpdated();
 8005806:	ee19 0a90 	vmov	r0, s19
        colorPressed = newColorPressed;
 800580a:	50e6      	str	r6, [r4, r3]
        handlePressedUpdated();
 800580c:	f7fc fec1 	bl	8002592 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonReadLog.setPosition(585, 74, 196, 30);
 8005810:	ee19 0a90 	vmov	r0, s19
 8005814:	9700      	str	r7, [sp, #0]
 8005816:	23c4      	movs	r3, #196	; 0xc4
 8005818:	224a      	movs	r2, #74	; 0x4a
 800581a:	f240 2149 	movw	r1, #585	; 0x249
 800581e:	f7fd f80d 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8005822:	f643 3354 	movw	r3, #15188	; 0x3b54
 8005826:	9a02      	ldr	r2, [sp, #8]
 8005828:	50e2      	str	r2, [r4, r3]
 800582a:	ee1e 0a10 	vmov	r0, s28
 800582e:	223b      	movs	r2, #59	; 0x3b
 8005830:	9200      	str	r2, [sp, #0]
 8005832:	2396      	movs	r3, #150	; 0x96
 8005834:	462a      	mov	r2, r5
 8005836:	4629      	mov	r1, r5
 8005838:	3034      	adds	r0, #52	; 0x34
 800583a:	f7fc ffff 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 800583e:	f643 4344 	movw	r3, #15428	; 0x3c44
 8005842:	f04f 0202 	mov.w	r2, #2
 8005846:	52e2      	strh	r2, [r4, r3]
    flexButtonFilterData.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8005848:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 800584c:	4a1a      	ldr	r2, [pc, #104]	; (80058b8 <_ZN15Screen1ViewBaseC1Ev+0x56c>)
 800584e:	491b      	ldr	r1, [pc, #108]	; (80058bc <_ZN15Screen1ViewBaseC1Ev+0x570>)
 8005850:	f8cd a000 	str.w	sl, [sp]
 8005854:	ee1e 0a10 	vmov	r0, s28
 8005858:	f6a3 03de 	subw	r3, r3, #2270	; 0x8de
 800585c:	f7fd f816 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8005860:	4b17      	ldr	r3, [pc, #92]	; (80058c0 <_ZN15Screen1ViewBaseC1Ev+0x574>)
 8005862:	9314      	str	r3, [sp, #80]	; 0x50
        twoWildcardText.setTypedText(t);
 8005864:	a914      	add	r1, sp, #80	; 0x50
 8005866:	2342      	movs	r3, #66	; 0x42
 8005868:	4640      	mov	r0, r8
 800586a:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 800586e:	f00c fc14 	bl	801209a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        twoWildcardText.setWidthHeight(T::getWidth(), T::getHeight());
 8005872:	f643 33ea 	movw	r3, #15338	; 0x3bea
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005876:	4f14      	ldr	r7, [pc, #80]	; (80058c8 <_ZN15Screen1ViewBaseC1Ev+0x57c>)
 8005878:	5ee2      	ldrsh	r2, [r4, r3]
 800587a:	f643 33e8 	movw	r3, #15336	; 0x3be8
 800587e:	4640      	mov	r0, r8
 8005880:	5ee1      	ldrsh	r1, [r4, r3]
 8005882:	f7fc fc0c 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8005886:	683b      	ldr	r3, [r7, #0]
 8005888:	f8cd a00c 	str.w	sl, [sp, #12]
    Unicode::snprintf(flexButtonFilterDataBuffer1, FLEXBUTTONFILTERDATABUFFER1_SIZE, "%s", TypedText(T___SINGLEUSE_5ZOV).getText());
 800588c:	f504 499d 	add.w	r9, r4, #20096	; 0x4e80
 8005890:	f109 0904 	add.w	r9, r9, #4
 8005894:	b92b      	cbnz	r3, 80058a2 <_ZN15Screen1ViewBaseC1Ev+0x556>
 8005896:	4b0d      	ldr	r3, [pc, #52]	; (80058cc <_ZN15Screen1ViewBaseC1Ev+0x580>)
 8005898:	4a0d      	ldr	r2, [pc, #52]	; (80058d0 <_ZN15Screen1ViewBaseC1Ev+0x584>)
 800589a:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800589c:	480d      	ldr	r0, [pc, #52]	; (80058d4 <_ZN15Screen1ViewBaseC1Ev+0x588>)
 800589e:	f01e fdcb 	bl	8024438 <__assert_func>
 80058a2:	f8df a038 	ldr.w	sl, [pc, #56]	; 80058dc <_ZN15Screen1ViewBaseC1Ev+0x590>
 80058a6:	f8ba 3000 	ldrh.w	r3, [sl]
 80058aa:	2b43      	cmp	r3, #67	; 0x43
 80058ac:	d818      	bhi.n	80058e0 <_ZN15Screen1ViewBaseC1Ev+0x594>
 80058ae:	4b0a      	ldr	r3, [pc, #40]	; (80058d8 <_ZN15Screen1ViewBaseC1Ev+0x58c>)
 80058b0:	4a07      	ldr	r2, [pc, #28]	; (80058d0 <_ZN15Screen1ViewBaseC1Ev+0x584>)
 80058b2:	21af      	movs	r1, #175	; 0xaf
 80058b4:	e7f2      	b.n	800589c <_ZN15Screen1ViewBaseC1Ev+0x550>
 80058b6:	bf00      	nop
 80058b8:	ff0099cc 	.word	0xff0099cc
 80058bc:	ff006699 	.word	0xff006699
 80058c0:	08027114 	.word	0x08027114
 80058c4:	ff0a0a0a 	.word	0xff0a0a0a
 80058c8:	20020ae0 	.word	0x20020ae0
 80058cc:	08027000 	.word	0x08027000
 80058d0:	08027042 	.word	0x08027042
 80058d4:	08027070 	.word	0x08027070
 80058d8:	080270b7 	.word	0x080270b7
 80058dc:	20020ae4 	.word	0x20020ae4
        return texts->getText(typedTextId);
 80058e0:	4bd7      	ldr	r3, [pc, #860]	; (8005c40 <_ZN15Screen1ViewBaseC1Ev+0x8f4>)
 80058e2:	2143      	movs	r1, #67	; 0x43
 80058e4:	6818      	ldr	r0, [r3, #0]
 80058e6:	f001 faef 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 80058ea:	4ad6      	ldr	r2, [pc, #856]	; (8005c44 <_ZN15Screen1ViewBaseC1Ev+0x8f8>)
 80058ec:	4603      	mov	r3, r0
 80058ee:	210b      	movs	r1, #11
 80058f0:	4648      	mov	r0, r9
 80058f2:	f012 fc55 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithTwoWildcard
     *       may need it.
     */
    void setWildcard1(const Unicode::UnicodeChar* value)
    {
        wc1 = value;
 80058f6:	f643 4394 	movw	r3, #15508	; 0x3c94
 80058fa:	f844 9003 	str.w	r9, [r4, r3]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80058fe:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(flexButtonFilterDataBuffer2, FLEXBUTTONFILTERDATABUFFER2_SIZE, "%s", TypedText(T___SINGLEUSE_W7NB).getText());
 8005900:	f504 499d 	add.w	r9, r4, #20096	; 0x4e80
 8005904:	f109 091a 	add.w	r9, r9, #26
 8005908:	2b00      	cmp	r3, #0
 800590a:	d0c4      	beq.n	8005896 <_ZN15Screen1ViewBaseC1Ev+0x54a>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800590c:	f8ba 3000 	ldrh.w	r3, [sl]
 8005910:	2b49      	cmp	r3, #73	; 0x49
 8005912:	d9cc      	bls.n	80058ae <_ZN15Screen1ViewBaseC1Ev+0x562>
        return texts->getText(typedTextId);
 8005914:	4bca      	ldr	r3, [pc, #808]	; (8005c40 <_ZN15Screen1ViewBaseC1Ev+0x8f4>)
 8005916:	2149      	movs	r1, #73	; 0x49
 8005918:	6818      	ldr	r0, [r3, #0]
 800591a:	f001 fad5 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 800591e:	4ac9      	ldr	r2, [pc, #804]	; (8005c44 <_ZN15Screen1ViewBaseC1Ev+0x8f8>)
 8005920:	4603      	mov	r3, r0
 8005922:	210b      	movs	r1, #11
 8005924:	4648      	mov	r0, r9
 8005926:	f012 fc3b 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithTwoWildcard
     *       may need it.
     */
    void setWildcard2(const Unicode::UnicodeChar* value)
    {
        wc2 = value;
 800592a:	f643 4398 	movw	r3, #15512	; 0x3c98
        twoWildcardText.setPosition(x, y, width, height);
 800592e:	213b      	movs	r1, #59	; 0x3b
 8005930:	f844 9003 	str.w	r9, [r4, r3]
 8005934:	462a      	mov	r2, r5
 8005936:	4640      	mov	r0, r8
 8005938:	9100      	str	r1, [sp, #0]
 800593a:	2396      	movs	r3, #150	; 0x96
 800593c:	4629      	mov	r1, r5
 800593e:	f7fc ff7d 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8005942:	f643 439c 	movw	r3, #15516	; 0x3c9c
        handlePressedUpdated();
 8005946:	ee1e 0a10 	vmov	r0, s28
        colorReleased = newColorReleased;
 800594a:	50e6      	str	r6, [r4, r3]
        colorPressed = newColorPressed;
 800594c:	f643 43a0 	movw	r3, #15520	; 0x3ca0
 8005950:	f04f 0832 	mov.w	r8, #50	; 0x32
 8005954:	50e6      	str	r6, [r4, r3]
        handlePressedUpdated();
 8005956:	f7ff fb43 	bl	8004fe0 <_ZN8touchgfx26TwoWildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonFilterData.setPosition(32, 141, 150, 59);
 800595a:	213b      	movs	r1, #59	; 0x3b
 800595c:	228d      	movs	r2, #141	; 0x8d
 800595e:	ee1e 0a10 	vmov	r0, s28
 8005962:	9100      	str	r1, [sp, #0]
 8005964:	2396      	movs	r3, #150	; 0x96
 8005966:	2120      	movs	r1, #32
 8005968:	f7fc ff68 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 800596c:	f643 4310 	movw	r3, #15376	; 0x3c10
 8005970:	9902      	ldr	r1, [sp, #8]
 8005972:	50e1      	str	r1, [r4, r3]
    listLayoutPageButton.setDirection(touchgfx::EAST);
 8005974:	ee18 0a90 	vmov	r0, s17
 8005978:	2102      	movs	r1, #2
 800597a:	f00b f8b7 	bl	8010aec <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>
    listLayoutPageButton.setXY(203, 413);
 800597e:	ee18 0a90 	vmov	r0, s17
 8005982:	f240 129d 	movw	r2, #413	; 0x19d
 8005986:	21cb      	movs	r1, #203	; 0xcb
 8005988:	f7fc fc84 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800598c:	ee1a 0a90 	vmov	r0, s21
 8005990:	4643      	mov	r3, r8
 8005992:	462a      	mov	r2, r5
 8005994:	4629      	mov	r1, r5
 8005996:	3034      	adds	r0, #52	; 0x34
 8005998:	f8cd 8000 	str.w	r8, [sp]
 800599c:	f7fc ff4e 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 80059a0:	f643 5338 	movw	r3, #15672	; 0x3d38
 80059a4:	f04f 0101 	mov.w	r1, #1
 80059a8:	52e1      	strh	r1, [r4, r3]
    flexButtonPageBack.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80059aa:	9903      	ldr	r1, [sp, #12]
 80059ac:	4aa6      	ldr	r2, [pc, #664]	; (8005c48 <_ZN15Screen1ViewBaseC1Ev+0x8fc>)
 80059ae:	9100      	str	r1, [sp, #0]
 80059b0:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 80059b4:	49a5      	ldr	r1, [pc, #660]	; (8005c4c <_ZN15Screen1ViewBaseC1Ev+0x900>)
 80059b6:	ee1a 0a90 	vmov	r0, s21
 80059ba:	f6a3 13d2 	subw	r3, r3, #2514	; 0x9d2
 80059be:	f7fc ff65 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 80059c2:	4ba3      	ldr	r3, [pc, #652]	; (8005c50 <_ZN15Screen1ViewBaseC1Ev+0x904>)
 80059c4:	9314      	str	r3, [sp, #80]	; 0x50
    flexButtonPageBack.setWildcardText(TypedText(T___SINGLEUSE_IRA4));
 80059c6:	a814      	add	r0, sp, #80	; 0x50
 80059c8:	2334      	movs	r3, #52	; 0x34
 80059ca:	4601      	mov	r1, r0
 80059cc:	ee1a 0a90 	vmov	r0, s21
 80059d0:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 80059d4:	f7fc ff75 	bl	80028c2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80059d8:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(flexButtonPageBackBuffer, FLEXBUTTONPAGEBACK_SIZE, "%s", TypedText(T___SINGLEUSE_EGRS).getText());
 80059da:	f504 499d 	add.w	r9, r4, #20096	; 0x4e80
 80059de:	f109 0930 	add.w	r9, r9, #48	; 0x30
 80059e2:	2b00      	cmp	r3, #0
 80059e4:	f43f af57 	beq.w	8005896 <_ZN15Screen1ViewBaseC1Ev+0x54a>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80059e8:	f8ba 3000 	ldrh.w	r3, [sl]
 80059ec:	2b35      	cmp	r3, #53	; 0x35
 80059ee:	f67f af5e 	bls.w	80058ae <_ZN15Screen1ViewBaseC1Ev+0x562>
        return texts->getText(typedTextId);
 80059f2:	4a93      	ldr	r2, [pc, #588]	; (8005c40 <_ZN15Screen1ViewBaseC1Ev+0x8f4>)
 80059f4:	2135      	movs	r1, #53	; 0x35
 80059f6:	6810      	ldr	r0, [r2, #0]
 80059f8:	f001 fa66 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 80059fc:	4a91      	ldr	r2, [pc, #580]	; (8005c44 <_ZN15Screen1ViewBaseC1Ev+0x8f8>)
 80059fe:	4603      	mov	r3, r0
 8005a00:	210a      	movs	r1, #10
 8005a02:	4648      	mov	r0, r9
 8005a04:	f012 fbcc 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wildcard = value;
 8005a08:	f643 5388 	movw	r3, #15752	; 0x3d88
        wildcardText.setPosition(x, y, width, height);
 8005a0c:	ee1a 0a90 	vmov	r0, s21
 8005a10:	f844 9003 	str.w	r9, [r4, r3]
 8005a14:	2205      	movs	r2, #5
 8005a16:	4643      	mov	r3, r8
 8005a18:	4629      	mov	r1, r5
 8005a1a:	3078      	adds	r0, #120	; 0x78
 8005a1c:	f8cd 8000 	str.w	r8, [sp]
 8005a20:	f7fc ff0c 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPageBack.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8005a24:	4632      	mov	r2, r6
 8005a26:	ee1a 0a90 	vmov	r0, s21
 8005a2a:	4631      	mov	r1, r6
 8005a2c:	f7ff fc88 	bl	8005340 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
        rect.width = width;
 8005a30:	f643 43dc 	movw	r3, #15580	; 0x3cdc
 8005a34:	f04f 1032 	mov.w	r0, #3276850	; 0x320032
 8005a38:	50e0      	str	r0, [r4, r3]
 8005a3a:	f643 5304 	movw	r3, #15620	; 0x3d04
 8005a3e:	9902      	ldr	r1, [sp, #8]
 8005a40:	50e1      	str	r1, [r4, r3]
    listLayoutPageButton.add(flexButtonPageBack);
 8005a42:	ee18 0a90 	vmov	r0, s17
 8005a46:	ee1a 1a90 	vmov	r1, s21
 8005a4a:	f00b f8b9 	bl	8010bc0 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8005a4e:	ee1b 0a10 	vmov	r0, s22
 8005a52:	4643      	mov	r3, r8
 8005a54:	462a      	mov	r2, r5
 8005a56:	4629      	mov	r1, r5
 8005a58:	3034      	adds	r0, #52	; 0x34
 8005a5a:	f8cd 8000 	str.w	r8, [sp]
 8005a5e:	f7fc feed 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8005a62:	f643 53f8 	movw	r3, #15864	; 0x3df8
 8005a66:	f04f 0101 	mov.w	r1, #1
 8005a6a:	52e1      	strh	r1, [r4, r3]
    flexButtonPage_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8005a6c:	9903      	ldr	r1, [sp, #12]
 8005a6e:	4a76      	ldr	r2, [pc, #472]	; (8005c48 <_ZN15Screen1ViewBaseC1Ev+0x8fc>)
 8005a70:	9100      	str	r1, [sp, #0]
 8005a72:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 8005a76:	4975      	ldr	r1, [pc, #468]	; (8005c4c <_ZN15Screen1ViewBaseC1Ev+0x900>)
 8005a78:	ee1b 0a10 	vmov	r0, s22
 8005a7c:	f6a3 2392 	subw	r3, r3, #2706	; 0xa92
 8005a80:	f7fc ff04 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8005a84:	4b72      	ldr	r3, [pc, #456]	; (8005c50 <_ZN15Screen1ViewBaseC1Ev+0x904>)
 8005a86:	9314      	str	r3, [sp, #80]	; 0x50
    flexButtonPage_1.setWildcardText(TypedText(T___SINGLEUSE_WP7W));
 8005a88:	a814      	add	r0, sp, #80	; 0x50
 8005a8a:	2336      	movs	r3, #54	; 0x36
 8005a8c:	4601      	mov	r1, r0
 8005a8e:	ee1b 0a10 	vmov	r0, s22
 8005a92:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8005a96:	f7fc ff14 	bl	80028c2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005a9a:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(flexButtonPage_1Buffer, FLEXBUTTONPAGE_1_SIZE, "%s", TypedText(T___SINGLEUSE_IWNN).getText());
 8005a9c:	f504 499d 	add.w	r9, r4, #20096	; 0x4e80
 8005aa0:	f109 0944 	add.w	r9, r9, #68	; 0x44
 8005aa4:	2b00      	cmp	r3, #0
 8005aa6:	f43f aef6 	beq.w	8005896 <_ZN15Screen1ViewBaseC1Ev+0x54a>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8005aaa:	f8ba 3000 	ldrh.w	r3, [sl]
 8005aae:	2b37      	cmp	r3, #55	; 0x37
 8005ab0:	f67f aefd 	bls.w	80058ae <_ZN15Screen1ViewBaseC1Ev+0x562>
        return texts->getText(typedTextId);
 8005ab4:	4a62      	ldr	r2, [pc, #392]	; (8005c40 <_ZN15Screen1ViewBaseC1Ev+0x8f4>)
 8005ab6:	2137      	movs	r1, #55	; 0x37
 8005ab8:	6810      	ldr	r0, [r2, #0]
 8005aba:	f001 fa05 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 8005abe:	4a61      	ldr	r2, [pc, #388]	; (8005c44 <_ZN15Screen1ViewBaseC1Ev+0x8f8>)
 8005ac0:	4603      	mov	r3, r0
 8005ac2:	210a      	movs	r1, #10
 8005ac4:	4648      	mov	r0, r9
 8005ac6:	f012 fb6b 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8005aca:	f643 6348 	movw	r3, #15944	; 0x3e48
 8005ace:	ee1b 0a10 	vmov	r0, s22
 8005ad2:	4629      	mov	r1, r5
 8005ad4:	f844 9003 	str.w	r9, [r4, r3]
 8005ad8:	f8cd 8000 	str.w	r8, [sp]
 8005adc:	4643      	mov	r3, r8
 8005ade:	2205      	movs	r2, #5
 8005ae0:	3078      	adds	r0, #120	; 0x78
 8005ae2:	f7fc feab 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPage_1.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8005ae6:	ee1b 0a10 	vmov	r0, s22
 8005aea:	4632      	mov	r2, r6
 8005aec:	4631      	mov	r1, r6
 8005aee:	f7ff fc27 	bl	8005340 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
 8005af2:	f643 539c 	movw	r3, #15772	; 0x3d9c
 8005af6:	f04f 1232 	mov.w	r2, #3276850	; 0x320032
 8005afa:	50e2      	str	r2, [r4, r3]
 8005afc:	f643 53c4 	movw	r3, #15812	; 0x3dc4
 8005b00:	9a02      	ldr	r2, [sp, #8]
 8005b02:	50e2      	str	r2, [r4, r3]
    listLayoutPageButton.add(flexButtonPage_1);
 8005b04:	ee1b 1a10 	vmov	r1, s22
 8005b08:	ee18 0a90 	vmov	r0, s17
 8005b0c:	f00b f858 	bl	8010bc0 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8005b10:	ee1b 0a90 	vmov	r0, s23
 8005b14:	4643      	mov	r3, r8
 8005b16:	462a      	mov	r2, r5
 8005b18:	4629      	mov	r1, r5
 8005b1a:	f8cd 8000 	str.w	r8, [sp]
 8005b1e:	3034      	adds	r0, #52	; 0x34
 8005b20:	f7fc fe8c 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8005b24:	f643 63b8 	movw	r3, #16056	; 0x3eb8
 8005b28:	f04f 0801 	mov.w	r8, #1
    flexButtonPage_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8005b2c:	9a03      	ldr	r2, [sp, #12]
 8005b2e:	f824 8003 	strh.w	r8, [r4, r3]
 8005b32:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 8005b36:	4945      	ldr	r1, [pc, #276]	; (8005c4c <_ZN15Screen1ViewBaseC1Ev+0x900>)
 8005b38:	9200      	str	r2, [sp, #0]
 8005b3a:	ee1b 0a90 	vmov	r0, s23
 8005b3e:	4a42      	ldr	r2, [pc, #264]	; (8005c48 <_ZN15Screen1ViewBaseC1Ev+0x8fc>)
 8005b40:	f6a3 3352 	subw	r3, r3, #2898	; 0xb52
 8005b44:	f7fc fea2 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8005b48:	4b41      	ldr	r3, [pc, #260]	; (8005c50 <_ZN15Screen1ViewBaseC1Ev+0x904>)
 8005b4a:	9314      	str	r3, [sp, #80]	; 0x50
    flexButtonPage_2.setWildcardText(TypedText(T___SINGLEUSE_AKZM));
 8005b4c:	ee1b 0a90 	vmov	r0, s23
 8005b50:	2338      	movs	r3, #56	; 0x38
 8005b52:	a914      	add	r1, sp, #80	; 0x50
 8005b54:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8005b58:	f7fc feb3 	bl	80028c2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005b5c:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(flexButtonPage_2Buffer, FLEXBUTTONPAGE_2_SIZE, "%s", TypedText(T___SINGLEUSE_G02N).getText());
 8005b5e:	f504 459d 	add.w	r5, r4, #20096	; 0x4e80
 8005b62:	3558      	adds	r5, #88	; 0x58
 8005b64:	2b00      	cmp	r3, #0
 8005b66:	f43f ae96 	beq.w	8005896 <_ZN15Screen1ViewBaseC1Ev+0x54a>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8005b6a:	f8df a0ec 	ldr.w	sl, [pc, #236]	; 8005c58 <_ZN15Screen1ViewBaseC1Ev+0x90c>
 8005b6e:	f8ba 3000 	ldrh.w	r3, [sl]
 8005b72:	2b39      	cmp	r3, #57	; 0x39
 8005b74:	f67f ae9b 	bls.w	80058ae <_ZN15Screen1ViewBaseC1Ev+0x562>
        return texts->getText(typedTextId);
 8005b78:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 8005c40 <_ZN15Screen1ViewBaseC1Ev+0x8f4>
 8005b7c:	4e35      	ldr	r6, [pc, #212]	; (8005c54 <_ZN15Screen1ViewBaseC1Ev+0x908>)
 8005b7e:	f8d9 0000 	ldr.w	r0, [r9]
 8005b82:	2139      	movs	r1, #57	; 0x39
 8005b84:	f001 f9a0 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 8005b88:	4a2e      	ldr	r2, [pc, #184]	; (8005c44 <_ZN15Screen1ViewBaseC1Ev+0x8f8>)
 8005b8a:	4603      	mov	r3, r0
 8005b8c:	210a      	movs	r1, #10
 8005b8e:	4628      	mov	r0, r5
 8005b90:	f012 fb06 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8005b94:	f643 7308 	movw	r3, #16136	; 0x3f08
 8005b98:	ee1b 0a90 	vmov	r0, s23
 8005b9c:	50e5      	str	r5, [r4, r3]
 8005b9e:	2532      	movs	r5, #50	; 0x32
 8005ba0:	462b      	mov	r3, r5
 8005ba2:	2205      	movs	r2, #5
 8005ba4:	2100      	movs	r1, #0
 8005ba6:	3078      	adds	r0, #120	; 0x78
 8005ba8:	9500      	str	r5, [sp, #0]
 8005baa:	f7fc fe47 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPage_2.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8005bae:	ee1b 0a90 	vmov	r0, s23
 8005bb2:	4632      	mov	r2, r6
 8005bb4:	4631      	mov	r1, r6
 8005bb6:	f7ff fbc3 	bl	8005340 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
 8005bba:	f643 635c 	movw	r3, #15964	; 0x3e5c
 8005bbe:	f04f 1232 	mov.w	r2, #3276850	; 0x320032
 8005bc2:	50e2      	str	r2, [r4, r3]
 8005bc4:	f643 6384 	movw	r3, #16004	; 0x3e84
 8005bc8:	9a02      	ldr	r2, [sp, #8]
 8005bca:	50e2      	str	r2, [r4, r3]
    listLayoutPageButton.add(flexButtonPage_2);
 8005bcc:	ee1b 1a90 	vmov	r1, s23
 8005bd0:	ee18 0a90 	vmov	r0, s17
 8005bd4:	f00a fff4 	bl	8010bc0 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8005bd8:	ee1c 0a10 	vmov	r0, s24
 8005bdc:	2200      	movs	r2, #0
 8005bde:	4611      	mov	r1, r2
 8005be0:	462b      	mov	r3, r5
 8005be2:	3034      	adds	r0, #52	; 0x34
 8005be4:	9500      	str	r5, [sp, #0]
 8005be6:	f7fc fe29 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8005bea:	f643 7378 	movw	r3, #16248	; 0x3f78
    flexButtonPage_3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8005bee:	9a03      	ldr	r2, [sp, #12]
 8005bf0:	f824 8003 	strh.w	r8, [r4, r3]
 8005bf4:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 8005bf8:	4914      	ldr	r1, [pc, #80]	; (8005c4c <_ZN15Screen1ViewBaseC1Ev+0x900>)
 8005bfa:	9200      	str	r2, [sp, #0]
 8005bfc:	ee1c 0a10 	vmov	r0, s24
 8005c00:	4a11      	ldr	r2, [pc, #68]	; (8005c48 <_ZN15Screen1ViewBaseC1Ev+0x8fc>)
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005c02:	f8df 8058 	ldr.w	r8, [pc, #88]	; 8005c5c <_ZN15Screen1ViewBaseC1Ev+0x910>
 8005c06:	f6a3 4312 	subw	r3, r3, #3090	; 0xc12
 8005c0a:	f7fc fe3f 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8005c0e:	4b10      	ldr	r3, [pc, #64]	; (8005c50 <_ZN15Screen1ViewBaseC1Ev+0x904>)
 8005c10:	9314      	str	r3, [sp, #80]	; 0x50
    flexButtonPage_3.setWildcardText(TypedText(T___SINGLEUSE_5HYA));
 8005c12:	ee1c 0a10 	vmov	r0, s24
 8005c16:	233a      	movs	r3, #58	; 0x3a
 8005c18:	a914      	add	r1, sp, #80	; 0x50
 8005c1a:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8005c1e:	f7fc fe50 	bl	80028c2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005c22:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(flexButtonPage_3Buffer, FLEXBUTTONPAGE_3_SIZE, "%s", TypedText(T___SINGLEUSE_LYTH).getText());
 8005c26:	f504 479d 	add.w	r7, r4, #20096	; 0x4e80
 8005c2a:	376c      	adds	r7, #108	; 0x6c
 8005c2c:	2b00      	cmp	r3, #0
 8005c2e:	f43f ae32 	beq.w	8005896 <_ZN15Screen1ViewBaseC1Ev+0x54a>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8005c32:	f8ba 3000 	ldrh.w	r3, [sl]
 8005c36:	2b3b      	cmp	r3, #59	; 0x3b
 8005c38:	f67f ae39 	bls.w	80058ae <_ZN15Screen1ViewBaseC1Ev+0x562>
 8005c3c:	e010      	b.n	8005c60 <_ZN15Screen1ViewBaseC1Ev+0x914>
 8005c3e:	bf00      	nop
 8005c40:	20020aec 	.word	0x20020aec
 8005c44:	08027109 	.word	0x08027109
 8005c48:	ff0099cc 	.word	0xff0099cc
 8005c4c:	ff006699 	.word	0xff006699
 8005c50:	08027114 	.word	0x08027114
 8005c54:	ff0a0a0a 	.word	0xff0a0a0a
 8005c58:	20020ae4 	.word	0x20020ae4
 8005c5c:	20020ae0 	.word	0x20020ae0
        return texts->getText(typedTextId);
 8005c60:	213b      	movs	r1, #59	; 0x3b
 8005c62:	f8d9 0000 	ldr.w	r0, [r9]
 8005c66:	f001 f92f 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 8005c6a:	4ad8      	ldr	r2, [pc, #864]	; (8005fcc <_ZN15Screen1ViewBaseC1Ev+0xc80>)
 8005c6c:	4603      	mov	r3, r0
 8005c6e:	210a      	movs	r1, #10
 8005c70:	4638      	mov	r0, r7
 8005c72:	f012 fa95 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8005c76:	f643 73c8 	movw	r3, #16328	; 0x3fc8
 8005c7a:	ee1c 0a10 	vmov	r0, s24
 8005c7e:	50e7      	str	r7, [r4, r3]
 8005c80:	2205      	movs	r2, #5
 8005c82:	462b      	mov	r3, r5
 8005c84:	2100      	movs	r1, #0
 8005c86:	3078      	adds	r0, #120	; 0x78
 8005c88:	9500      	str	r5, [sp, #0]
 8005c8a:	f7fc fdd7 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPage_3.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8005c8e:	ee1c 0a10 	vmov	r0, s24
 8005c92:	4632      	mov	r2, r6
 8005c94:	4631      	mov	r1, r6
 8005c96:	f7ff fb53 	bl	8005340 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
 8005c9a:	f643 731c 	movw	r3, #16156	; 0x3f1c
 8005c9e:	f04f 1232 	mov.w	r2, #3276850	; 0x320032
 8005ca2:	50e2      	str	r2, [r4, r3]
 8005ca4:	f643 7344 	movw	r3, #16196	; 0x3f44
 8005ca8:	9a02      	ldr	r2, [sp, #8]
 8005caa:	50e2      	str	r2, [r4, r3]
    listLayoutPageButton.add(flexButtonPage_3);
 8005cac:	ee1c 1a10 	vmov	r1, s24
 8005cb0:	ee18 0a90 	vmov	r0, s17
 8005cb4:	f00a ff84 	bl	8010bc0 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8005cb8:	ee1c 0a90 	vmov	r0, s25
 8005cbc:	2200      	movs	r2, #0
 8005cbe:	4611      	mov	r1, r2
 8005cc0:	462b      	mov	r3, r5
 8005cc2:	3034      	adds	r0, #52	; 0x34
 8005cc4:	9500      	str	r5, [sp, #0]
 8005cc6:	f7fc fdb9 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8005cca:	f244 0338 	movw	r3, #16440	; 0x4038
 8005cce:	f04f 0201 	mov.w	r2, #1
 8005cd2:	52e2      	strh	r2, [r4, r3]
    flexButtonPage_4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8005cd4:	9a03      	ldr	r2, [sp, #12]
 8005cd6:	49be      	ldr	r1, [pc, #760]	; (8005fd0 <_ZN15Screen1ViewBaseC1Ev+0xc84>)
 8005cd8:	9200      	str	r2, [sp, #0]
 8005cda:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 8005cde:	4abd      	ldr	r2, [pc, #756]	; (8005fd4 <_ZN15Screen1ViewBaseC1Ev+0xc88>)
 8005ce0:	ee1c 0a90 	vmov	r0, s25
 8005ce4:	f6a3 43d2 	subw	r3, r3, #3282	; 0xcd2
 8005ce8:	f7fc fdd0 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8005cec:	4bba      	ldr	r3, [pc, #744]	; (8005fd8 <_ZN15Screen1ViewBaseC1Ev+0xc8c>)
 8005cee:	9314      	str	r3, [sp, #80]	; 0x50
    flexButtonPage_4.setWildcardText(TypedText(T___SINGLEUSE_IX3T));
 8005cf0:	ee1c 0a90 	vmov	r0, s25
 8005cf4:	233c      	movs	r3, #60	; 0x3c
 8005cf6:	a914      	add	r1, sp, #80	; 0x50
 8005cf8:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8005cfc:	f7fc fde1 	bl	80028c2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005d00:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(flexButtonPage_4Buffer, FLEXBUTTONPAGE_4_SIZE, "%s", TypedText(T___SINGLEUSE_MKU4).getText());
 8005d04:	f504 479e 	add.w	r7, r4, #20224	; 0x4f00
 8005d08:	2b00      	cmp	r3, #0
 8005d0a:	f43f adc4 	beq.w	8005896 <_ZN15Screen1ViewBaseC1Ev+0x54a>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8005d0e:	f8ba 3000 	ldrh.w	r3, [sl]
 8005d12:	2b3d      	cmp	r3, #61	; 0x3d
 8005d14:	f67f adcb 	bls.w	80058ae <_ZN15Screen1ViewBaseC1Ev+0x562>
        return texts->getText(typedTextId);
 8005d18:	213d      	movs	r1, #61	; 0x3d
 8005d1a:	f8d9 0000 	ldr.w	r0, [r9]
 8005d1e:	f001 f8d3 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 8005d22:	4aaa      	ldr	r2, [pc, #680]	; (8005fcc <_ZN15Screen1ViewBaseC1Ev+0xc80>)
 8005d24:	4603      	mov	r3, r0
 8005d26:	210a      	movs	r1, #10
 8005d28:	4638      	mov	r0, r7
 8005d2a:	f012 fa39 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8005d2e:	f244 0388 	movw	r3, #16520	; 0x4088
 8005d32:	ee1c 0a90 	vmov	r0, s25
 8005d36:	50e7      	str	r7, [r4, r3]
 8005d38:	2205      	movs	r2, #5
 8005d3a:	462b      	mov	r3, r5
 8005d3c:	2100      	movs	r1, #0
 8005d3e:	3078      	adds	r0, #120	; 0x78
 8005d40:	9500      	str	r5, [sp, #0]
 8005d42:	f7fc fd7b 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPage_4.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8005d46:	ee1c 0a90 	vmov	r0, s25
 8005d4a:	4632      	mov	r2, r6
 8005d4c:	4631      	mov	r1, r6
 8005d4e:	f7ff faf7 	bl	8005340 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
 8005d52:	f643 73dc 	movw	r3, #16348	; 0x3fdc
 8005d56:	f04f 1132 	mov.w	r1, #3276850	; 0x320032
 8005d5a:	50e1      	str	r1, [r4, r3]
 8005d5c:	f244 0304 	movw	r3, #16388	; 0x4004
 8005d60:	9a02      	ldr	r2, [sp, #8]
 8005d62:	50e2      	str	r2, [r4, r3]
    listLayoutPageButton.add(flexButtonPage_4);
 8005d64:	ee1c 1a90 	vmov	r1, s25
 8005d68:	ee18 0a90 	vmov	r0, s17
 8005d6c:	f00a ff28 	bl	8010bc0 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8005d70:	ee1d 0a10 	vmov	r0, s26
 8005d74:	2200      	movs	r2, #0
 8005d76:	4611      	mov	r1, r2
 8005d78:	462b      	mov	r3, r5
 8005d7a:	3034      	adds	r0, #52	; 0x34
 8005d7c:	9500      	str	r5, [sp, #0]
 8005d7e:	f7fc fd5d 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8005d82:	f244 03f8 	movw	r3, #16632	; 0x40f8
 8005d86:	f04f 0201 	mov.w	r2, #1
 8005d8a:	52e2      	strh	r2, [r4, r3]
    flexButtonPage_5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8005d8c:	9a03      	ldr	r2, [sp, #12]
 8005d8e:	4990      	ldr	r1, [pc, #576]	; (8005fd0 <_ZN15Screen1ViewBaseC1Ev+0xc84>)
 8005d90:	9200      	str	r2, [sp, #0]
 8005d92:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 8005d96:	4a8f      	ldr	r2, [pc, #572]	; (8005fd4 <_ZN15Screen1ViewBaseC1Ev+0xc88>)
 8005d98:	ee1d 0a10 	vmov	r0, s26
 8005d9c:	f6a3 5392 	subw	r3, r3, #3474	; 0xd92
 8005da0:	f7fc fd74 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8005da4:	4b8c      	ldr	r3, [pc, #560]	; (8005fd8 <_ZN15Screen1ViewBaseC1Ev+0xc8c>)
 8005da6:	9314      	str	r3, [sp, #80]	; 0x50
    flexButtonPage_5.setWildcardText(TypedText(T___SINGLEUSE_I0UZ));
 8005da8:	ee1d 0a10 	vmov	r0, s26
 8005dac:	233e      	movs	r3, #62	; 0x3e
 8005dae:	a914      	add	r1, sp, #80	; 0x50
 8005db0:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8005db4:	f7fc fd85 	bl	80028c2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005db8:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(flexButtonPage_5Buffer, FLEXBUTTONPAGE_5_SIZE, "%s", TypedText(T___SINGLEUSE_ONOL).getText());
 8005dbc:	3714      	adds	r7, #20
 8005dbe:	2b00      	cmp	r3, #0
 8005dc0:	f43f ad69 	beq.w	8005896 <_ZN15Screen1ViewBaseC1Ev+0x54a>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8005dc4:	f8ba 3000 	ldrh.w	r3, [sl]
 8005dc8:	2b3f      	cmp	r3, #63	; 0x3f
 8005dca:	f67f ad70 	bls.w	80058ae <_ZN15Screen1ViewBaseC1Ev+0x562>
        return texts->getText(typedTextId);
 8005dce:	213f      	movs	r1, #63	; 0x3f
 8005dd0:	f8d9 0000 	ldr.w	r0, [r9]
 8005dd4:	f001 f878 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 8005dd8:	4a7c      	ldr	r2, [pc, #496]	; (8005fcc <_ZN15Screen1ViewBaseC1Ev+0xc80>)
 8005dda:	4603      	mov	r3, r0
 8005ddc:	210a      	movs	r1, #10
 8005dde:	4638      	mov	r0, r7
 8005de0:	f012 f9de 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8005de4:	f244 1348 	movw	r3, #16712	; 0x4148
 8005de8:	ee1d 0a10 	vmov	r0, s26
 8005dec:	50e7      	str	r7, [r4, r3]
 8005dee:	2205      	movs	r2, #5
 8005df0:	462b      	mov	r3, r5
 8005df2:	2100      	movs	r1, #0
 8005df4:	3078      	adds	r0, #120	; 0x78
 8005df6:	9500      	str	r5, [sp, #0]
 8005df8:	f7fc fd20 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPage_5.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8005dfc:	ee1d 0a10 	vmov	r0, s26
 8005e00:	4632      	mov	r2, r6
 8005e02:	4631      	mov	r1, r6
 8005e04:	f7ff fa9c 	bl	8005340 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
 8005e08:	f244 039c 	movw	r3, #16540	; 0x409c
 8005e0c:	f04f 1132 	mov.w	r1, #3276850	; 0x320032
 8005e10:	50e1      	str	r1, [r4, r3]
 8005e12:	f244 03c4 	movw	r3, #16580	; 0x40c4
 8005e16:	9a02      	ldr	r2, [sp, #8]
 8005e18:	50e2      	str	r2, [r4, r3]
    listLayoutPageButton.add(flexButtonPage_5);
 8005e1a:	ee1d 1a10 	vmov	r1, s26
 8005e1e:	ee18 0a90 	vmov	r0, s17
 8005e22:	f00a fecd 	bl	8010bc0 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8005e26:	ee1d 0a90 	vmov	r0, s27
 8005e2a:	2200      	movs	r2, #0
 8005e2c:	4611      	mov	r1, r2
 8005e2e:	462b      	mov	r3, r5
 8005e30:	3034      	adds	r0, #52	; 0x34
 8005e32:	9500      	str	r5, [sp, #0]
 8005e34:	f7fc fd02 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8005e38:	f244 13b8 	movw	r3, #16824	; 0x41b8
 8005e3c:	f04f 0201 	mov.w	r2, #1
 8005e40:	52e2      	strh	r2, [r4, r3]
    flexButtonPageForward.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8005e42:	9a03      	ldr	r2, [sp, #12]
 8005e44:	4962      	ldr	r1, [pc, #392]	; (8005fd0 <_ZN15Screen1ViewBaseC1Ev+0xc84>)
 8005e46:	9200      	str	r2, [sp, #0]
 8005e48:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 8005e4c:	4a61      	ldr	r2, [pc, #388]	; (8005fd4 <_ZN15Screen1ViewBaseC1Ev+0xc88>)
 8005e4e:	ee1d 0a90 	vmov	r0, s27
 8005e52:	f6a3 6352 	subw	r3, r3, #3666	; 0xe52
 8005e56:	f7fc fd19 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8005e5a:	4b5f      	ldr	r3, [pc, #380]	; (8005fd8 <_ZN15Screen1ViewBaseC1Ev+0xc8c>)
 8005e5c:	9314      	str	r3, [sp, #80]	; 0x50
    flexButtonPageForward.setWildcardText(TypedText(T___SINGLEUSE_A1TC));
 8005e5e:	ee1d 0a90 	vmov	r0, s27
 8005e62:	2340      	movs	r3, #64	; 0x40
 8005e64:	a914      	add	r1, sp, #80	; 0x50
 8005e66:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8005e6a:	f7fc fd2a 	bl	80028c2 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE15setWildcardTextENS_9TypedTextE>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005e6e:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(flexButtonPageForwardBuffer, FLEXBUTTONPAGEFORWARD_SIZE, "%s", TypedText(T___SINGLEUSE_UI2S).getText());
 8005e72:	f504 479e 	add.w	r7, r4, #20224	; 0x4f00
 8005e76:	3728      	adds	r7, #40	; 0x28
 8005e78:	2b00      	cmp	r3, #0
 8005e7a:	f43f ad0c 	beq.w	8005896 <_ZN15Screen1ViewBaseC1Ev+0x54a>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8005e7e:	f8ba 3000 	ldrh.w	r3, [sl]
 8005e82:	2b41      	cmp	r3, #65	; 0x41
 8005e84:	f67f ad13 	bls.w	80058ae <_ZN15Screen1ViewBaseC1Ev+0x562>
        return texts->getText(typedTextId);
 8005e88:	f8d9 0000 	ldr.w	r0, [r9]
 8005e8c:	2141      	movs	r1, #65	; 0x41
 8005e8e:	f001 f81b 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 8005e92:	4a4e      	ldr	r2, [pc, #312]	; (8005fcc <_ZN15Screen1ViewBaseC1Ev+0xc80>)
 8005e94:	4603      	mov	r3, r0
 8005e96:	210a      	movs	r1, #10
 8005e98:	4638      	mov	r0, r7
 8005e9a:	f012 f981 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8005e9e:	f244 2308 	movw	r3, #16904	; 0x4208
 8005ea2:	ee1d 0a90 	vmov	r0, s27
 8005ea6:	50e7      	str	r7, [r4, r3]
 8005ea8:	2205      	movs	r2, #5
 8005eaa:	462b      	mov	r3, r5
 8005eac:	2100      	movs	r1, #0
 8005eae:	3078      	adds	r0, #120	; 0x78
 8005eb0:	9500      	str	r5, [sp, #0]
 8005eb2:	f7fc fcc3 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonPageForward.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
 8005eb6:	ee1d 0a90 	vmov	r0, s27
 8005eba:	4632      	mov	r2, r6
 8005ebc:	4631      	mov	r1, r6
 8005ebe:	f7ff fa3f 	bl	8005340 <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE21setWildcardTextColorsENS_9colortypeES5_>
 8005ec2:	f244 135c 	movw	r3, #16732	; 0x415c
 8005ec6:	f04f 1132 	mov.w	r1, #3276850	; 0x320032
 8005eca:	50e1      	str	r1, [r4, r3]
 8005ecc:	f244 1384 	movw	r3, #16772	; 0x4184
 8005ed0:	9a02      	ldr	r2, [sp, #8]
 8005ed2:	50e2      	str	r2, [r4, r3]
    listLayoutPageButton.add(flexButtonPageForward);
 8005ed4:	ee1d 1a90 	vmov	r1, s27
 8005ed8:	ee18 0a90 	vmov	r0, s17
 8005edc:	f00a fe70 	bl	8010bc0 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
    modalWindow1.setBackground(touchgfx::BitmapId(BITMAP_DARK_BACKGROUNDS_MAIN_BG_480X272PX_ID), 160, 104);
 8005ee0:	2305      	movs	r3, #5
 8005ee2:	22a0      	movs	r2, #160	; 0xa0
 8005ee4:	ee19 0a10 	vmov	r0, s18
 8005ee8:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
 8005eec:	a914      	add	r1, sp, #80	; 0x50
 8005eee:	2368      	movs	r3, #104	; 0x68
 8005ef0:	f04f 4a7f 	mov.w	sl, #4278190080	; 0xff000000
 8005ef4:	f00a f9bf 	bl	8010276 <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>
    modalWindow1.setShadeColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 8005ef8:	ee19 0a10 	vmov	r0, s18
 8005efc:	4651      	mov	r1, sl
 8005efe:	f00a f9a7 	bl	8010250 <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>
    modalWindow1.setShadeAlpha(150);
 8005f02:	2196      	movs	r1, #150	; 0x96
 8005f04:	ee19 0a10 	vmov	r0, s18
 8005f08:	f00a f9a6 	bl	8010258 <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>
    modalWindow1.hide();
 8005f0c:	ee19 0a10 	vmov	r0, s18
 8005f10:	f00a f994 	bl	801023c <_ZN8touchgfx11ModalWindow4hideEv>
 8005f14:	ee1a 0a10 	vmov	r0, s20
 8005f18:	2728      	movs	r7, #40	; 0x28
 8005f1a:	2200      	movs	r2, #0
 8005f1c:	4611      	mov	r1, r2
 8005f1e:	462b      	mov	r3, r5
 8005f20:	3034      	adds	r0, #52	; 0x34
 8005f22:	9700      	str	r7, [sp, #0]
 8005f24:	f7fc fc8a 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8005f28:	f244 3328 	movw	r3, #17192	; 0x4328
 8005f2c:	f04f 0201 	mov.w	r2, #1
 8005f30:	52e2      	strh	r2, [r4, r3]
    flexButtonOkFilDataTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8005f32:	9a03      	ldr	r2, [sp, #12]
 8005f34:	4926      	ldr	r1, [pc, #152]	; (8005fd0 <_ZN15Screen1ViewBaseC1Ev+0xc84>)
 8005f36:	9200      	str	r2, [sp, #0]
 8005f38:	f103 437f 	add.w	r3, r3, #4278190080	; 0xff000000
 8005f3c:	4a25      	ldr	r2, [pc, #148]	; (8005fd4 <_ZN15Screen1ViewBaseC1Ev+0xc88>)
 8005f3e:	ee1a 0a10 	vmov	r0, s20
 8005f42:	f6a3 73c2 	subw	r3, r3, #4034	; 0xfc2
 8005f46:	f7fc fca1 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8005f4a:	4b23      	ldr	r3, [pc, #140]	; (8005fd8 <_ZN15Screen1ViewBaseC1Ev+0xc8c>)
 8005f4c:	9314      	str	r3, [sp, #80]	; 0x50
    flexButtonOkFilDataTime.setText(TypedText(T___SINGLEUSE_NY18));
 8005f4e:	ee1a 0a10 	vmov	r0, s20
 8005f52:	2344      	movs	r3, #68	; 0x44
 8005f54:	a914      	add	r1, sp, #80	; 0x50
 8005f56:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8005f5a:	f7fc fca3 	bl	80028a4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8005f5e:	ee1a 0a10 	vmov	r0, s20
 8005f62:	2200      	movs	r2, #0
 8005f64:	4611      	mov	r1, r2
 8005f66:	462b      	mov	r3, r5
 8005f68:	3078      	adds	r0, #120	; 0x78
 8005f6a:	9700      	str	r7, [sp, #0]
 8005f6c:	f7fc fc66 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8005f70:	f244 3378 	movw	r3, #17272	; 0x4378
        handlePressedUpdated();
 8005f74:	ee1a 0a10 	vmov	r0, s20
        colorReleased = newColorReleased;
 8005f78:	50e6      	str	r6, [r4, r3]
        colorPressed = newColorPressed;
 8005f7a:	f244 337c 	movw	r3, #17276	; 0x437c
 8005f7e:	f504 4987 	add.w	r9, r4, #17280	; 0x4380
 8005f82:	50e6      	str	r6, [r4, r3]
        handlePressedUpdated();
 8005f84:	f7fc fb05 	bl	8002592 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonOkFilDataTime.setPosition(143, 222, 50, 40);
 8005f88:	ee1a 0a10 	vmov	r0, s20
 8005f8c:	462b      	mov	r3, r5
 8005f8e:	22de      	movs	r2, #222	; 0xde
 8005f90:	218f      	movs	r1, #143	; 0x8f
 8005f92:	9700      	str	r7, [sp, #0]
 8005f94:	f7fc fc52 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8005f98:	f244 23f4 	movw	r3, #17140	; 0x42f4
 8005f9c:	9a02      	ldr	r2, [sp, #8]
 8005f9e:	50e2      	str	r2, [r4, r3]
    modalWindow1.add(flexButtonOkFilDataTime);
 8005fa0:	ee1a 1a10 	vmov	r1, s20
 8005fa4:	ee19 0a10 	vmov	r0, s18
 8005fa8:	f00a f94f 	bl	801024a <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
 8005fac:	2200      	movs	r2, #0
 8005fae:	4611      	mov	r1, r2
 8005fb0:	462b      	mov	r3, r5
 8005fb2:	f109 0034 	add.w	r0, r9, #52	; 0x34
 8005fb6:	9700      	str	r7, [sp, #0]
 8005fb8:	f7fc fc40 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8005fbc:	f244 33e4 	movw	r3, #17380	; 0x43e4
 8005fc0:	f04f 0201 	mov.w	r2, #1
 8005fc4:	52e2      	strh	r2, [r4, r3]
    flexButtonExitFilDataTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8005fc6:	9a03      	ldr	r2, [sp, #12]
 8005fc8:	4b04      	ldr	r3, [pc, #16]	; (8005fdc <_ZN15Screen1ViewBaseC1Ev+0xc90>)
 8005fca:	e009      	b.n	8005fe0 <_ZN15Screen1ViewBaseC1Ev+0xc94>
 8005fcc:	08027109 	.word	0x08027109
 8005fd0:	ff006699 	.word	0xff006699
 8005fd4:	ff0099cc 	.word	0xff0099cc
 8005fd8:	08027114 	.word	0x08027114
 8005fdc:	ff003366 	.word	0xff003366
 8005fe0:	4996      	ldr	r1, [pc, #600]	; (800623c <_ZN15Screen1ViewBaseC1Ev+0xef0>)
 8005fe2:	9200      	str	r2, [sp, #0]
 8005fe4:	ee1f 0a90 	vmov	r0, s31
 8005fe8:	4a95      	ldr	r2, [pc, #596]	; (8006240 <_ZN15Screen1ViewBaseC1Ev+0xef4>)
 8005fea:	f7fc fc4f 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8005fee:	4b95      	ldr	r3, [pc, #596]	; (8006244 <_ZN15Screen1ViewBaseC1Ev+0xef8>)
 8005ff0:	9314      	str	r3, [sp, #80]	; 0x50
    flexButtonExitFilDataTime.setText(TypedText(T___SINGLEUSE_BK1O));
 8005ff2:	ee1f 0a90 	vmov	r0, s31
 8005ff6:	2345      	movs	r3, #69	; 0x45
 8005ff8:	a914      	add	r1, sp, #80	; 0x50
 8005ffa:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8005ffe:	f7fc fc51 	bl	80028a4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8006002:	2200      	movs	r2, #0
 8006004:	4611      	mov	r1, r2
 8006006:	462b      	mov	r3, r5
 8006008:	f109 0078 	add.w	r0, r9, #120	; 0x78
 800600c:	9700      	str	r7, [sp, #0]
 800600e:	f7fc fc15 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8006012:	f244 4334 	movw	r3, #17460	; 0x4434
        handlePressedUpdated();
 8006016:	ee1f 0a90 	vmov	r0, s31
        colorReleased = newColorReleased;
 800601a:	50e6      	str	r6, [r4, r3]
        colorPressed = newColorPressed;
 800601c:	f244 4338 	movw	r3, #17464	; 0x4438
 8006020:	50e6      	str	r6, [r4, r3]
        handlePressedUpdated();
 8006022:	f7fc fab6 	bl	8002592 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonExitFilDataTime.setPosition(279, 222, 50, 40);
 8006026:	ee1f 0a90 	vmov	r0, s31
 800602a:	462b      	mov	r3, r5
 800602c:	22de      	movs	r2, #222	; 0xde
 800602e:	f240 1117 	movw	r1, #279	; 0x117
 8006032:	9700      	str	r7, [sp, #0]
 8006034:	f7fc fc02 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8006038:	f244 33b0 	movw	r3, #17328	; 0x43b0
 800603c:	9a02      	ldr	r2, [sp, #8]
 800603e:	50e2      	str	r2, [r4, r3]
    modalWindow1.add(flexButtonExitFilDataTime);
 8006040:	ee1f 1a90 	vmov	r1, s31
 8006044:	ee19 0a10 	vmov	r0, s18
 8006048:	f00a f8ff 	bl	801024a <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    textAreaDataStart.setXY(80, 25);
 800604c:	2219      	movs	r2, #25
 800604e:	ee1e 0a90 	vmov	r0, s29
 8006052:	2150      	movs	r1, #80	; 0x50
 8006054:	f7fc f91e 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 8006058:	f244 436c 	movw	r3, #17516	; 0x446c
        linespace = space;
 800605c:	ee1e 2a90 	vmov	r2, s29
        this->color = color;
 8006060:	f844 a003 	str.w	sl, [r4, r3]
        linespace = space;
 8006064:	2300      	movs	r3, #0
 8006066:	8693      	strh	r3, [r2, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006068:	f8d8 3000 	ldr.w	r3, [r8]
 800606c:	2b00      	cmp	r3, #0
 800606e:	f43f ac12 	beq.w	8005896 <_ZN15Screen1ViewBaseC1Ev+0x54a>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8006072:	f8df 91e0 	ldr.w	r9, [pc, #480]	; 8006254 <_ZN15Screen1ViewBaseC1Ev+0xf08>
 8006076:	f8b9 3000 	ldrh.w	r3, [r9]
 800607a:	2b4b      	cmp	r3, #75	; 0x4b
 800607c:	f67f ac17 	bls.w	80058ae <_ZN15Screen1ViewBaseC1Ev+0x562>
        return texts->getText(typedTextId);
 8006080:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 8006258 <_ZN15Screen1ViewBaseC1Ev+0xf0c>
        : typedTextId(id)
 8006084:	4f6f      	ldr	r7, [pc, #444]	; (8006244 <_ZN15Screen1ViewBaseC1Ev+0xef8>)
        return texts->getText(typedTextId);
 8006086:	f8d8 0000 	ldr.w	r0, [r8]
 800608a:	214b      	movs	r1, #75	; 0x4b
 800608c:	f000 ff1c 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
    Unicode::snprintf(textAreaDataStartBuffer, TEXTAREADATASTART_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_68K3).getText());
 8006090:	210a      	movs	r1, #10
 8006092:	4603      	mov	r3, r0
 8006094:	4a6c      	ldr	r2, [pc, #432]	; (8006248 <_ZN15Screen1ViewBaseC1Ev+0xefc>)
 8006096:	9805      	ldr	r0, [sp, #20]
 8006098:	f012 f882 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800609c:	f244 4378 	movw	r3, #17528	; 0x4478
 80060a0:	9a05      	ldr	r2, [sp, #20]
 80060a2:	50e2      	str	r2, [r4, r3]
    textAreaDataStart.resizeToCurrentText();
 80060a4:	ee1e 0a90 	vmov	r0, s29
 80060a8:	f00b ffda 	bl	8012060 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80060ac:	234a      	movs	r3, #74	; 0x4a
    textAreaDataStart.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A8GK));
 80060ae:	ee1e 0a90 	vmov	r0, s29
 80060b2:	a914      	add	r1, sp, #80	; 0x50
 80060b4:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 80060b8:	9714      	str	r7, [sp, #80]	; 0x50
 80060ba:	f00b ffee 	bl	801209a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    modalWindow1.add(textAreaDataStart);
 80060be:	ee1e 1a90 	vmov	r1, s29
 80060c2:	ee19 0a10 	vmov	r0, s18
 80060c6:	f00a f8c0 	bl	801024a <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    textAreaDataStop.setXY(330, 25);
 80060ca:	ee1f 0a10 	vmov	r0, s30
 80060ce:	2219      	movs	r2, #25
 80060d0:	f44f 71a5 	mov.w	r1, #330	; 0x14a
 80060d4:	f7fc f8de 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
        this->color = color;
 80060d8:	f244 43ac 	movw	r3, #17580	; 0x44ac
        linespace = space;
 80060dc:	2500      	movs	r5, #0
        this->color = color;
 80060de:	f844 a003 	str.w	sl, [r4, r3]
        linespace = space;
 80060e2:	ee1f 3a10 	vmov	r3, s30
 80060e6:	869d      	strh	r5, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80060e8:	4b58      	ldr	r3, [pc, #352]	; (800624c <_ZN15Screen1ViewBaseC1Ev+0xf00>)
 80060ea:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textAreaDataStopBuffer, TEXTAREADATASTOP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_EEOS).getText());
 80060ec:	f504 469c 	add.w	r6, r4, #19968	; 0x4e00
 80060f0:	3670      	adds	r6, #112	; 0x70
 80060f2:	2b00      	cmp	r3, #0
 80060f4:	f43f abcf 	beq.w	8005896 <_ZN15Screen1ViewBaseC1Ev+0x54a>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80060f8:	f8b9 3000 	ldrh.w	r3, [r9]
 80060fc:	2b4d      	cmp	r3, #77	; 0x4d
 80060fe:	f67f abd6 	bls.w	80058ae <_ZN15Screen1ViewBaseC1Ev+0x562>
        return texts->getText(typedTextId);
 8006102:	f8d8 0000 	ldr.w	r0, [r8]
 8006106:	214d      	movs	r1, #77	; 0x4d
 8006108:	f000 fede 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 800610c:	4a4e      	ldr	r2, [pc, #312]	; (8006248 <_ZN15Screen1ViewBaseC1Ev+0xefc>)
 800610e:	4603      	mov	r3, r0
 8006110:	210a      	movs	r1, #10
 8006112:	4630      	mov	r0, r6
 8006114:	f012 f844 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8006118:	f244 43b8 	movw	r3, #17592	; 0x44b8
    textAreaDataStop.resizeToCurrentText();
 800611c:	ee1f 0a10 	vmov	r0, s30
 8006120:	50e6      	str	r6, [r4, r3]
 8006122:	f00b ff9d 	bl	8012060 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006126:	234c      	movs	r3, #76	; 0x4c
    textAreaDataStop.setTypedText(touchgfx::TypedText(T___SINGLEUSE_01JS));
 8006128:	ee1f 0a10 	vmov	r0, s30
 800612c:	a914      	add	r1, sp, #80	; 0x50
 800612e:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8006132:	9714      	str	r7, [sp, #80]	; 0x50
 8006134:	f00b ffb1 	bl	801209a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    modalWindow1.add(textAreaDataStop);
 8006138:	ee1f 1a10 	vmov	r1, s30
 800613c:	ee19 0a10 	vmov	r0, s18
 8006140:	f00a f883 	bl	801024a <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    toggleButton1.setXY(407, 25);
 8006144:	9807      	ldr	r0, [sp, #28]
 8006146:	2219      	movs	r2, #25
 8006148:	f240 1197 	movw	r1, #407	; 0x197
 800614c:	f7fc f8a2 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
    {
        originalPressed = bitmapPressed;
 8006150:	9a07      	ldr	r2, [sp, #28]
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8006152:	9807      	ldr	r0, [sp, #28]
 8006154:	2302      	movs	r3, #2
 8006156:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 800615a:	2303      	movs	r3, #3
        originalPressed = bitmapPressed;
 800615c:	8693      	strh	r3, [r2, #52]	; 0x34
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 800615e:	a913      	add	r1, sp, #76	; 0x4c
 8006160:	aa14      	add	r2, sp, #80	; 0x50
 8006162:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
 8006166:	f00b ffd8 	bl	801211a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    scrollList1.setPosition(335, 14, 50, 127);
 800616a:	237f      	movs	r3, #127	; 0x7f
 800616c:	220e      	movs	r2, #14
 800616e:	9300      	str	r3, [sp, #0]
 8006170:	4658      	mov	r0, fp
 8006172:	2332      	movs	r3, #50	; 0x32
 8006174:	f240 114f 	movw	r1, #335	; 0x14f
 8006178:	f7fc fb60 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    scrollList1.setHorizontal(false);
 800617c:	4629      	mov	r1, r5
 800617e:	4658      	mov	r0, fp
 8006180:	f009 ffdd 	bl	801013e <_ZN8touchgfx10ScrollBase13setHorizontalEb>
    scrollList1.setCircular(false);
 8006184:	4629      	mov	r1, r5
 8006186:	4658      	mov	r0, fp
 8006188:	f00a f830 	bl	80101ec <_ZN8touchgfx10ScrollBase11setCircularEb>
    scrollList1.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
 800618c:	4658      	mov	r0, fp
 800618e:	4930      	ldr	r1, [pc, #192]	; (8006250 <_ZN15Screen1ViewBaseC1Ev+0xf04>)
 8006190:	f009 ff19 	bl	800ffc6 <_ZN8touchgfx10ScrollBase17setEasingEquationEPFstsstE>
    scrollList1.setSwipeAcceleration(10);
 8006194:	4658      	mov	r0, fp
 8006196:	210a      	movs	r1, #10
 8006198:	f009 ff18 	bl	800ffcc <_ZN8touchgfx10ScrollBase20setSwipeAccelerationEt>
    scrollList1.setDragAcceleration(10);
 800619c:	4658      	mov	r0, fp
 800619e:	210a      	movs	r1, #10
 80061a0:	f009 ff17 	bl	800ffd2 <_ZN8touchgfx10ScrollBase19setDragAccelerationEt>
    scrollList1.setNumberOfItems(15);
 80061a4:	4658      	mov	r0, fp
 80061a6:	210f      	movs	r1, #15
 80061a8:	f009 fe89 	bl	800febe <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs>
    scrollList1.setPadding(0, 0);
 80061ac:	462a      	mov	r2, r5
 80061ae:	4629      	mov	r1, r5
 80061b0:	4658      	mov	r0, fp
 80061b2:	f009 fdcd 	bl	800fd50 <_ZN8touchgfx10ScrollList10setPaddingEss>
    scrollList1.setSnapping(false);
 80061b6:	4629      	mov	r1, r5
 80061b8:	4658      	mov	r0, fp
 80061ba:	f009 fde1 	bl	800fd80 <_ZN8touchgfx10ScrollList11setSnappingEb>
    scrollList1.setDrawableSize(20, 0);
 80061be:	462a      	mov	r2, r5
 80061c0:	4658      	mov	r0, fp
 80061c2:	2114      	movs	r1, #20
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80061c4:	1d25      	adds	r5, r4, #4
 80061c6:	f009 fef7 	bl	800ffb8 <_ZN8touchgfx10ScrollBase15setDrawableSizeEss>
    scrollList1.setDrawables(scrollList1ListItems, updateItemCallback);
 80061ca:	e9dd 2110 	ldrd	r2, r1, [sp, #64]	; 0x40
 80061ce:	4658      	mov	r0, fp
 80061d0:	f009 fcdd 	bl	800fb8e <_ZN8touchgfx10ScrollList12setDrawablesERNS_26DrawableListItemsInterfaceERNS_15GenericCallbackIPS1_ssEE>
 80061d4:	9908      	ldr	r1, [sp, #32]
 80061d6:	4628      	mov	r0, r5
 80061d8:	f00a f97e 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80061dc:	9909      	ldr	r1, [sp, #36]	; 0x24
 80061de:	4628      	mov	r0, r5
 80061e0:	f00a f97a 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80061e4:	ee18 1a10 	vmov	r1, s16
 80061e8:	4628      	mov	r0, r5
 80061ea:	f00a f975 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80061ee:	9904      	ldr	r1, [sp, #16]
 80061f0:	4628      	mov	r0, r5
 80061f2:	f00a f971 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80061f6:	ee19 1a90 	vmov	r1, s19
 80061fa:	4628      	mov	r0, r5
 80061fc:	f00a f96c 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006200:	ee1e 1a10 	vmov	r1, s28
 8006204:	4628      	mov	r0, r5
 8006206:	f00a f967 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800620a:	ee18 1a90 	vmov	r1, s17
 800620e:	4628      	mov	r0, r5
 8006210:	f00a f962 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006214:	ee19 1a10 	vmov	r1, s18
 8006218:	4628      	mov	r0, r5
 800621a:	f00a f95d 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800621e:	9907      	ldr	r1, [sp, #28]
 8006220:	4628      	mov	r0, r5
 8006222:	f00a f959 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006226:	4628      	mov	r0, r5
 8006228:	4659      	mov	r1, fp
 800622a:	f00a f955 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800622e:	4620      	mov	r0, r4
 8006230:	b017      	add	sp, #92	; 0x5c
 8006232:	ecbd 8b10 	vpop	{d8-d15}
 8006236:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800623a:	bf00      	nop
 800623c:	ff006699 	.word	0xff006699
 8006240:	ff0099cc 	.word	0xff0099cc
 8006244:	08027114 	.word	0x08027114
 8006248:	08027109 	.word	0x08027109
 800624c:	20020ae0 	.word	0x20020ae0
 8006250:	08016041 	.word	0x08016041
 8006254:	20020ae4 	.word	0x20020ae4
 8006258:	20020aec 	.word	0x20020aec

0800625c <_ZN15Screen2ViewBaseD1Ev>:

class Screen2ViewBase : public touchgfx::View<Screen2Presenter>
{
public:
    Screen2ViewBase();
    virtual ~Screen2ViewBase() {}
 800625c:	4770      	bx	lr

0800625e <_ZN15Screen2ViewBase31CallbackcustomContainerKeyboardEv>:
     * Virtual Action Handlers
     */
    virtual void CallbackcustomContainerKeyboard()
    {
        // Override and implement this function in Screen2
    }
 800625e:	4770      	bx	lr

08006260 <_ZN15Screen2ViewBase9function2Ev>:

    virtual void function2()
    {
        // Override and implement this function in Screen2
    }
 8006260:	4770      	bx	lr

08006262 <_ZN15Screen2ViewBase9function3Ev>:

    virtual void function3()
    {
        // Override and implement this function in Screen2
    }
 8006262:	4770      	bx	lr

08006264 <_ZN15Screen2ViewBase35CallbackcustomContainerKeyboard_NumEv>:

    virtual void CallbackcustomContainerKeyboard_Num()
    {
        // Override and implement this function in Screen2
    }
 8006264:	4770      	bx	lr

08006266 <_ZN15Screen2ViewBase20functionSaveSettingsEv>:

    virtual void functionSaveSettings()
    {
        // Override and implement this function in Screen2
    }
 8006266:	4770      	bx	lr

08006268 <_ZN15Screen2ViewBase23functionSaveModalWindowEv>:

    virtual void functionSaveModalWindow()
    {
        // Override and implement this function in Screen2
    }
 8006268:	4770      	bx	lr

0800626a <_ZN15Screen2ViewBase54customContainerKeyboard1TriggerKeyboardCallbackHandlerEv>:
void Screen2ViewBase::customContainerKeyboard1TriggerKeyboardCallbackHandler()
{
    //Interaction1
    //When customContainerKeyboard1 triggerKeyboard call virtual function
    //Call CallbackcustomContainerKeyboard
    CallbackcustomContainerKeyboard();
 800626a:	6803      	ldr	r3, [r0, #0]
 800626c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800626e:	4718      	bx	r3

08006270 <_ZN15Screen2ViewBase62customContainerKeyboard_Num1TriggerKeyboard_NumCallbackHandlerEv>:
void Screen2ViewBase::customContainerKeyboard_Num1TriggerKeyboard_NumCallbackHandler()
{
    //Interaction4
    //When customContainerKeyboard_Num1 triggerKeyboard_Num call virtual function
    //Call CallbackcustomContainerKeyboard_Num
    CallbackcustomContainerKeyboard_Num();
 8006270:	6803      	ldr	r3, [r0, #0]
 8006272:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006274:	4718      	bx	r3

08006276 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
 * The position of the icon can be adjusted with setIconXY.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class IconButtonStyle : public T
 8006276:	4770      	bx	lr

08006278 <_ZN8touchgfx8CallbackI15Screen2ViewBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8006278:	4770      	bx	lr

0800627a <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800627a:	4770      	bx	lr

0800627c <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 800627c:	4770      	bx	lr

0800627e <_ZN8touchgfx23WildcardTextButtonStyleINS_15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEED1Ev>:
class WildcardTextButtonStyle : public T
 800627e:	4770      	bx	lr

08006280 <_ZN8touchgfx8CallbackI15Screen2ViewBasevvvE7executeEv>:
    virtual void execute()
 8006280:	b410      	push	{r4}
        (pobject->*pmemfun_0)();
 8006282:	68c2      	ldr	r2, [r0, #12]
 8006284:	6841      	ldr	r1, [r0, #4]
 8006286:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8006288:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 800628a:	eb01 0062 	add.w	r0, r1, r2, asr #1
 800628e:	07d2      	lsls	r2, r2, #31
 8006290:	bf48      	it	mi
 8006292:	590a      	ldrmi	r2, [r1, r4]
 8006294:	689b      	ldr	r3, [r3, #8]
    }
 8006296:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 800629a:	bf48      	it	mi
 800629c:	58d3      	ldrmi	r3, [r2, r3]
 800629e:	4718      	bx	r3

080062a0 <_ZNK8touchgfx8CallbackI15Screen2ViewBasevvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_0 != 0);
 80062a0:	6843      	ldr	r3, [r0, #4]
 80062a2:	b12b      	cbz	r3, 80062b0 <_ZNK8touchgfx8CallbackI15Screen2ViewBasevvvE7isValidEv+0x10>
 80062a4:	6883      	ldr	r3, [r0, #8]
 80062a6:	b92b      	cbnz	r3, 80062b4 <_ZNK8touchgfx8CallbackI15Screen2ViewBasevvvE7isValidEv+0x14>
 80062a8:	68c0      	ldr	r0, [r0, #12]
 80062aa:	f000 0001 	and.w	r0, r0, #1
 80062ae:	4770      	bx	lr
 80062b0:	4618      	mov	r0, r3
 80062b2:	4770      	bx	lr
 80062b4:	2001      	movs	r0, #1
    }
 80062b6:	4770      	bx	lr

080062b8 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80062b8:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80062ba:	68c2      	ldr	r2, [r0, #12]
 80062bc:	6844      	ldr	r4, [r0, #4]
 80062be:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80062c0:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80062c2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80062c6:	07d2      	lsls	r2, r2, #31
 80062c8:	bf48      	it	mi
 80062ca:	5962      	ldrmi	r2, [r4, r5]
 80062cc:	689b      	ldr	r3, [r3, #8]
    }
 80062ce:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80062d0:	bf48      	it	mi
 80062d2:	58d3      	ldrmi	r3, [r2, r3]
 80062d4:	4718      	bx	r3

080062d6 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 80062d6:	6843      	ldr	r3, [r0, #4]
 80062d8:	b12b      	cbz	r3, 80062e6 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 80062da:	6883      	ldr	r3, [r0, #8]
 80062dc:	b92b      	cbnz	r3, 80062ea <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 80062de:	68c0      	ldr	r0, [r0, #12]
 80062e0:	f000 0001 	and.w	r0, r0, #1
 80062e4:	4770      	bx	lr
 80062e6:	4618      	mov	r0, r3
 80062e8:	4770      	bx	lr
 80062ea:	2001      	movs	r0, #1
    }
 80062ec:	4770      	bx	lr

080062ee <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80062ee:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80062f0:	68c2      	ldr	r2, [r0, #12]
 80062f2:	6844      	ldr	r4, [r0, #4]
 80062f4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80062f6:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80062f8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80062fc:	07d2      	lsls	r2, r2, #31
 80062fe:	bf48      	it	mi
 8006300:	5962      	ldrmi	r2, [r4, r5]
 8006302:	689b      	ldr	r3, [r3, #8]
    }
 8006304:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8006306:	bf48      	it	mi
 8006308:	58d3      	ldrmi	r3, [r2, r3]
 800630a:	4718      	bx	r3

0800630c <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 800630c:	6843      	ldr	r3, [r0, #4]
 800630e:	b12b      	cbz	r3, 800631c <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006310:	6883      	ldr	r3, [r0, #8]
 8006312:	b92b      	cbnz	r3, 8006320 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006314:	68c0      	ldr	r0, [r0, #12]
 8006316:	f000 0001 	and.w	r0, r0, #1
 800631a:	4770      	bx	lr
 800631c:	4618      	mov	r0, r3
 800631e:	4770      	bx	lr
 8006320:	2001      	movs	r0, #1
    }
 8006322:	4770      	bx	lr

08006324 <_ZN8touchgfx23WildcardTextButtonStyleINS_15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE18handleAlphaUpdatedEv>:
        wildcardText.setAlpha(T::getAlpha());
 8006324:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
        alpha = newAlpha;
 8006328:	f880 30de 	strb.w	r3, [r0, #222]	; 0xde
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800632c:	f880 30a4 	strb.w	r3, [r0, #164]	; 0xa4
        alpha = newAlpha;
 8006330:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    }
 8006334:	4770      	bx	lr

08006336 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        iconImage.setAlpha(T::getAlpha());
 8006336:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 800633a:	f880 30a4 	strb.w	r3, [r0, #164]	; 0xa4
 800633e:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
        T::handleAlphaUpdated();
    }
 8006342:	4770      	bx	lr

08006344 <_ZN8touchgfx8CallbackI15Screen2ViewBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8006344:	b510      	push	{r4, lr}
 8006346:	2110      	movs	r1, #16
 8006348:	4604      	mov	r4, r0
 800634a:	f01e f846 	bl	80243da <_ZdlPvj>
 800634e:	4620      	mov	r0, r4
 8006350:	bd10      	pop	{r4, pc}

08006352 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006352:	b510      	push	{r4, lr}
 8006354:	2110      	movs	r1, #16
 8006356:	4604      	mov	r4, r0
 8006358:	f01e f83f 	bl	80243da <_ZdlPvj>
 800635c:	4620      	mov	r0, r4
 800635e:	bd10      	pop	{r4, pc}

08006360 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 8006360:	b510      	push	{r4, lr}
 8006362:	2110      	movs	r1, #16
 8006364:	4604      	mov	r4, r0
 8006366:	f01e f838 	bl	80243da <_ZdlPvj>
 800636a:	4620      	mov	r0, r4
 800636c:	bd10      	pop	{r4, pc}

0800636e <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class IconButtonStyle : public T
 800636e:	b510      	push	{r4, lr}
 8006370:	21a8      	movs	r1, #168	; 0xa8
 8006372:	4604      	mov	r4, r0
 8006374:	f01e f831 	bl	80243da <_ZdlPvj>
 8006378:	4620      	mov	r0, r4
 800637a:	bd10      	pop	{r4, pc}

0800637c <_ZN8touchgfx23WildcardTextButtonStyleINS_15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEED0Ev>:
class WildcardTextButtonStyle : public T
 800637c:	b510      	push	{r4, lr}
 800637e:	21f0      	movs	r1, #240	; 0xf0
 8006380:	4604      	mov	r4, r0
 8006382:	f01e f82a 	bl	80243da <_ZdlPvj>
 8006386:	4620      	mov	r0, r4
 8006388:	bd10      	pop	{r4, pc}

0800638a <_ZN15Screen2ViewBaseD0Ev>:
    virtual ~Screen2ViewBase() {}
 800638a:	b510      	push	{r4, lr}
 800638c:	f244 5178 	movw	r1, #17784	; 0x4578
 8006390:	4604      	mov	r4, r0
 8006392:	f01e f822 	bl	80243da <_ZdlPvj>
 8006396:	4620      	mov	r0, r4
 8006398:	bd10      	pop	{r4, pc}

0800639a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 800639a:	b510      	push	{r4, lr}
 800639c:	4604      	mov	r4, r0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 800639e:	307c      	adds	r0, #124	; 0x7c
 80063a0:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80063a4:	b13b      	cbz	r3, 80063b6 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x1c>
 80063a6:	f104 017a 	add.w	r1, r4, #122	; 0x7a
 80063aa:	f00c f995 	bl	80126d8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::handlePressedUpdated();
 80063ae:	4620      	mov	r0, r4
 80063b0:	f7fb feae 	bl	8002110 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 80063b4:	bd10      	pop	{r4, pc}
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 80063b6:	f104 0178 	add.w	r1, r4, #120	; 0x78
 80063ba:	e7f6      	b.n	80063aa <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x10>

080063bc <_ZN8touchgfx23WildcardTextButtonStyleINS_15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 80063bc:	b508      	push	{r3, lr}
        wildcardText.setColor(T::getPressed() ? colorPressed : colorReleased);
 80063be:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80063c2:	b133      	cbz	r3, 80063d2 <_ZN8touchgfx23WildcardTextButtonStyleINS_15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE20handlePressedUpdatedEv+0x16>
 80063c4:	f8d0 30ec 	ldr.w	r3, [r0, #236]	; 0xec
        this->color = color;
 80063c8:	f8c0 30d8 	str.w	r3, [r0, #216]	; 0xd8
        T::handlePressedUpdated();
 80063cc:	f7ff ffe5 	bl	800639a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    }
 80063d0:	bd08      	pop	{r3, pc}
        wildcardText.setColor(T::getPressed() ? colorPressed : colorReleased);
 80063d2:	f8d0 30e8 	ldr.w	r3, [r0, #232]	; 0xe8
 80063d6:	e7f7      	b.n	80063c8 <_ZN8touchgfx23WildcardTextButtonStyleINS_15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE20handlePressedUpdatedEv+0xc>

080063d8 <_ZN15Screen2ViewBase11setupScreenEv>:
{
 80063d8:	b510      	push	{r4, lr}
 80063da:	4604      	mov	r4, r0
    customContainerKeyboard1.initialize();
 80063dc:	30a0      	adds	r0, #160	; 0xa0
 80063de:	f000 fe6b 	bl	80070b8 <_ZN23CustomContainerKeyboard10initializeEv>
    customContainerKeyboard_Num1.initialize();
 80063e2:	f504 5040 	add.w	r0, r4, #12288	; 0x3000
 80063e6:	3038      	adds	r0, #56	; 0x38
}
 80063e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    customContainerKeyboard_Num1.initialize();
 80063ec:	f000 beca 	b.w	8007184 <_ZN27CustomContainerKeyboard_Num10initializeEv>

080063f0 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    }
}

void Screen2ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton_text_out)
 80063f0:	f500 523d 	add.w	r2, r0, #12096	; 0x2f40
 80063f4:	3208      	adds	r2, #8
 80063f6:	4291      	cmp	r1, r2
{
 80063f8:	4603      	mov	r3, r0
    if (&src == &flexButton_text_out)
 80063fa:	d102      	bne.n	8006402 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x12>
    {
        //Interaction2
        //When flexButton_text_out clicked call virtual function
        //Call function2
        function2();
 80063fc:	6803      	ldr	r3, [r0, #0]
 80063fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    else if (&src == &flexButtonSaveYes)
    {
        //Interaction6
        //When flexButtonSaveYes clicked call virtual function
        //Call functionSaveModalWindow
        functionSaveModalWindow();
 8006400:	4718      	bx	r3
    else if (&src == &flexButton_text_out_Num)
 8006402:	f500 4281 	add.w	r2, r0, #16512	; 0x4080
 8006406:	3274      	adds	r2, #116	; 0x74
 8006408:	4291      	cmp	r1, r2
 800640a:	d102      	bne.n	8006412 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
        function3();
 800640c:	6803      	ldr	r3, [r0, #0]
 800640e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006410:	e7f6      	b.n	8006400 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    else if (&src == &flexButtonSave)
 8006412:	f500 4283 	add.w	r2, r0, #16768	; 0x4180
 8006416:	3234      	adds	r2, #52	; 0x34
 8006418:	4291      	cmp	r1, r2
 800641a:	d102      	bne.n	8006422 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x32>
        functionSaveSettings();
 800641c:	6803      	ldr	r3, [r0, #0]
 800641e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006420:	e7ee      	b.n	8006400 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    else if (&src == &flexButtonSaveNo)
 8006422:	f500 4286 	add.w	r2, r0, #17152	; 0x4300
 8006426:	3220      	adds	r2, #32
 8006428:	4291      	cmp	r1, r2
 800642a:	d102      	bne.n	8006432 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x42>
        functionSaveModalWindow();
 800642c:	681b      	ldr	r3, [r3, #0]
 800642e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006430:	e7e6      	b.n	8006400 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x10>
    else if (&src == &flexButtonSaveYes)
 8006432:	f500 4287 	add.w	r2, r0, #17280	; 0x4380
 8006436:	325c      	adds	r2, #92	; 0x5c
 8006438:	4291      	cmp	r1, r2
 800643a:	d0f7      	beq.n	800642c <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3c>
    }
}
 800643c:	4770      	bx	lr

0800643e <_ZN15Screen2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &button1)
 800643e:	306c      	adds	r0, #108	; 0x6c
 8006440:	4288      	cmp	r0, r1
{
 8006442:	b508      	push	{r3, lr}
    if (&src == &button1)
 8006444:	d105      	bne.n	8006452 <_ZN15Screen2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006446:	f00e fa03 	bl	8014850 <_ZN8touchgfx11Application11getInstanceEv>
}
 800644a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen1ScreenNoTransition();
 800644e:	f7fe bbd1 	b.w	8004bf4 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
}
 8006452:	bd08      	pop	{r3, pc}

08006454 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>:
        iconReleased = newIconReleased;
 8006454:	880b      	ldrh	r3, [r1, #0]
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8006456:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 800645a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        iconReleased = newIconReleased;
 800645e:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
        iconPressed = newIconPressed;
 8006462:	8813      	ldrh	r3, [r2, #0]
 8006464:	f8a0 307a 	strh.w	r3, [r0, #122]	; 0x7a
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8006468:	4604      	mov	r4, r0
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 800646a:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 800646e:	4610      	mov	r0, r2
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8006470:	4617      	mov	r7, r2
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8006472:	f3c1 054f 	ubfx	r5, r1, #1, #16
 8006476:	f011 ff73 	bl	8018360 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800647a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800647e:	4680      	mov	r8, r0
 8006480:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8006484:	4638      	mov	r0, r7
 8006486:	f3c3 064f 	ubfx	r6, r3, #1, #16
 800648a:	f011 ffa3 	bl	80183d4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800648e:	eba5 0158 	sub.w	r1, r5, r8, lsr #1
 8006492:	eba6 0250 	sub.w	r2, r6, r0, lsr #1
 8006496:	b212      	sxth	r2, r2
 8006498:	f104 007c 	add.w	r0, r4, #124	; 0x7c
 800649c:	b209      	sxth	r1, r1
 800649e:	f7fb fef9 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
        handlePressedUpdated();
 80064a2:	6823      	ldr	r3, [r4, #0]
 80064a4:	4620      	mov	r0, r4
 80064a6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 80064aa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        handlePressedUpdated();
 80064ae:	4718      	bx	r3

080064b0 <_ZN15Screen2ViewBaseC1Ev>:
Screen2ViewBase::Screen2ViewBase() :
 80064b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80064b4:	ed2d 8b08 	vpush	{d8-d11}
 80064b8:	4604      	mov	r4, r0
 80064ba:	b08b      	sub	sp, #44	; 0x2c
 80064bc:	f00f fc0e 	bl	8015cdc <_ZN8touchgfx6ScreenC1Ev>
    customContainerKeyboard_Num1TriggerKeyboard_NumCallback(this, &Screen2ViewBase::customContainerKeyboard_Num1TriggerKeyboard_NumCallbackHandler)
 80064c0:	4622      	mov	r2, r4
 80064c2:	2500      	movs	r5, #0
 80064c4:	4bd7      	ldr	r3, [pc, #860]	; (8006824 <_ZN15Screen2ViewBaseC1Ev+0x374>)
 80064c6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80064c8:	f842 3b40 	str.w	r3, [r2], #64
 80064cc:	4610      	mov	r0, r2
 80064ce:	ee09 2a90 	vmov	s19, r2
 80064d2:	f7fb fdf1 	bl	80020b8 <_ZN8touchgfx3BoxC1Ev>
 80064d6:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 80064da:	ee0a 3a10 	vmov	s20, r3
        : Widget(), action(), pressed(false)
 80064de:	2226      	movs	r2, #38	; 0x26
 80064e0:	4629      	mov	r1, r5
 80064e2:	4618      	mov	r0, r3
 80064e4:	f01e fa4e 	bl	8024984 <memset>
 80064e8:	ee1a 0a10 	vmov	r0, s20
 80064ec:	f7fb fec0 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
        touchable = touch;
 80064f0:	f04f 0301 	mov.w	r3, #1
 80064f4:	f884 3090 	strb.w	r3, [r4, #144]	; 0x90
 80064f8:	4bcb      	ldr	r3, [pc, #812]	; (8006828 <_ZN15Screen2ViewBaseC1Ev+0x378>)
 80064fa:	66e3      	str	r3, [r4, #108]	; 0x6c
 80064fc:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8006500:	f104 03a0 	add.w	r3, r4, #160	; 0xa0
 8006504:	f642 7848 	movw	r8, #12104	; 0x2f48
 8006508:	eb04 0608 	add.w	r6, r4, r8
 800650c:	4618      	mov	r0, r3
 800650e:	f8a4 709a 	strh.w	r7, [r4, #154]	; 0x9a
 8006512:	f8a4 709c 	strh.w	r7, [r4, #156]	; 0x9c
 8006516:	f884 709e 	strb.w	r7, [r4, #158]	; 0x9e
 800651a:	f8c4 5094 	str.w	r5, [r4, #148]	; 0x94
 800651e:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8006522:	ee0b 3a10 	vmov	s22, r3
 8006526:	f000 fd7f 	bl	8007028 <_ZN23CustomContainerKeyboardC1Ev>
        : T()
 800652a:	4630      	mov	r0, r6
 800652c:	f7fc f9d8 	bl	80028e0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8006530:	4bbe      	ldr	r3, [pc, #760]	; (800682c <_ZN15Screen2ViewBaseC1Ev+0x37c>)
 8006532:	f844 3008 	str.w	r3, [r4, r8]
 8006536:	f504 533f 	add.w	r3, r4, #12224	; 0x2fc0
        : Widget(), bitmap(bitmap), alpha(255)
 800653a:	f642 7bc4 	movw	fp, #12228	; 0x2fc4
 800653e:	801f      	strh	r7, [r3, #0]
 8006540:	f642 73c2 	movw	r3, #12226	; 0x2fc2
 8006544:	eb04 0a0b 	add.w	sl, r4, fp
 8006548:	2226      	movs	r2, #38	; 0x26
 800654a:	52e7      	strh	r7, [r4, r3]
 800654c:	f106 097c 	add.w	r9, r6, #124	; 0x7c
 8006550:	4629      	mov	r1, r5
 8006552:	4650      	mov	r0, sl
 8006554:	f8ad 7020 	strh.w	r7, [sp, #32]
 8006558:	f01e fa14 	bl	8024984 <memset>
 800655c:	4648      	mov	r0, r9
 800655e:	f7fb fe87 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 8006562:	4bb3      	ldr	r3, [pc, #716]	; (8006830 <_ZN15Screen2ViewBaseC1Ev+0x380>)
 8006564:	f844 300b 	str.w	r3, [r4, fp]
 8006568:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800656c:	f8aa 3026 	strh.w	r3, [sl, #38]	; 0x26
 8006570:	f88a 7028 	strb.w	r7, [sl, #40]	; 0x28
        Image::setBitmap(bitmap);
 8006574:	4648      	mov	r0, r9
 8006576:	a908      	add	r1, sp, #32
 8006578:	f00c f8ae 	bl	80126d8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::add(iconImage);
 800657c:	4649      	mov	r1, r9
 800657e:	4630      	mov	r0, r6
 8006580:	f009 ffaa 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T()
 8006584:	f106 07a8 	add.w	r7, r6, #168	; 0xa8
 8006588:	4baa      	ldr	r3, [pc, #680]	; (8006834 <_ZN15Screen2ViewBaseC1Ev+0x384>)
 800658a:	f844 3008 	str.w	r3, [r4, r8]
        : TextArea(), wildcard(0)
 800658e:	4638      	mov	r0, r7
 8006590:	f7fc f960 	bl	8002854 <_ZN8touchgfx8TextAreaC1Ev>
 8006594:	f642 73f0 	movw	r3, #12272	; 0x2ff0
 8006598:	18e2      	adds	r2, r4, r3
 800659a:	f8df 92d8 	ldr.w	r9, [pc, #728]	; 8006874 <_ZN15Screen2ViewBaseC1Ev+0x3c4>
 800659e:	f844 9003 	str.w	r9, [r4, r3]
 80065a2:	63d5      	str	r5, [r2, #60]	; 0x3c
 80065a4:	f243 0330 	movw	r3, #12336	; 0x3030
 80065a8:	f243 0234 	movw	r2, #12340	; 0x3034
        T::add(wildcardText);
 80065ac:	4639      	mov	r1, r7
 80065ae:	50e5      	str	r5, [r4, r3]
 80065b0:	4630      	mov	r0, r6
 80065b2:	50a5      	str	r5, [r4, r2]
 80065b4:	f009 ff90 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80065b8:	f504 5340 	add.w	r3, r4, #12288	; 0x3000
 80065bc:	3338      	adds	r3, #56	; 0x38
 80065be:	f244 08f4 	movw	r8, #16628	; 0x40f4
 80065c2:	4618      	mov	r0, r3
 80065c4:	ee0a 3a90 	vmov	s21, r3
 80065c8:	f000 fde6 	bl	8007198 <_ZN27CustomContainerKeyboard_NumC1Ev>
 80065cc:	eb04 0308 	add.w	r3, r4, r8
 80065d0:	ee08 3a90 	vmov	s17, r3
        : T()
 80065d4:	4618      	mov	r0, r3
 80065d6:	f7fc f983 	bl	80028e0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 80065da:	4b97      	ldr	r3, [pc, #604]	; (8006838 <_ZN15Screen2ViewBaseC1Ev+0x388>)
 80065dc:	f844 3008 	str.w	r3, [r4, r8]
 80065e0:	ee18 3a90 	vmov	r3, s17
 80065e4:	f103 0878 	add.w	r8, r3, #120	; 0x78
 80065e8:	4640      	mov	r0, r8
 80065ea:	f7fc f933 	bl	8002854 <_ZN8touchgfx8TextAreaC1Ev>
 80065ee:	f244 136c 	movw	r3, #16748	; 0x416c
 80065f2:	18e2      	adds	r2, r4, r3
 80065f4:	f244 10ac 	movw	r0, #16812	; 0x41ac
 80065f8:	f844 9003 	str.w	r9, [r4, r3]
 80065fc:	63d5      	str	r5, [r2, #60]	; 0x3c
 80065fe:	5025      	str	r5, [r4, r0]
 8006600:	f244 10b0 	movw	r0, #16816	; 0x41b0
 8006604:	f504 4a83 	add.w	sl, r4, #16768	; 0x4180
        T::add(wildcardText);
 8006608:	4641      	mov	r1, r8
 800660a:	5025      	str	r5, [r4, r0]
 800660c:	f10a 0a34 	add.w	sl, sl, #52	; 0x34
 8006610:	ee18 0a90 	vmov	r0, s17
 8006614:	f504 4b84 	add.w	fp, r4, #16896	; 0x4200
 8006618:	f009 ff5e 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800661c:	f10b 0b70 	add.w	fp, fp, #112	; 0x70
 8006620:	4650      	mov	r0, sl
 8006622:	f7fc f989 	bl	8002938 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8006626:	4658      	mov	r0, fp
 8006628:	f009 fe66 	bl	80102f8 <_ZN8touchgfx11ModalWindowC1Ev>
 800662c:	f504 4386 	add.w	r3, r4, #17152	; 0x4300
 8006630:	3320      	adds	r3, #32
 8006632:	f504 4987 	add.w	r9, r4, #17280	; 0x4380
 8006636:	4618      	mov	r0, r3
 8006638:	f109 095c 	add.w	r9, r9, #92	; 0x5c
 800663c:	ee08 3a10 	vmov	s16, r3
 8006640:	f7fc f97a 	bl	8002938 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8006644:	4648      	mov	r0, r9
 8006646:	f7fc f977 	bl	8002938 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800664a:	f504 4389 	add.w	r3, r4, #17536	; 0x4480
 800664e:	3318      	adds	r3, #24
 8006650:	4618      	mov	r0, r3
 8006652:	ee09 3a10 	vmov	s18, r3
 8006656:	f7fc f8fd 	bl	8002854 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 800665a:	f244 5338 	movw	r3, #17720	; 0x4538
 800665e:	18e2      	adds	r2, r4, r3
 8006660:	9203      	str	r2, [sp, #12]
 8006662:	4a76      	ldr	r2, [pc, #472]	; (800683c <_ZN15Screen2ViewBaseC1Ev+0x38c>)
 8006664:	50e2      	str	r2, [r4, r3]
 8006666:	9b03      	ldr	r3, [sp, #12]
 8006668:	4a75      	ldr	r2, [pc, #468]	; (8006840 <_ZN15Screen2ViewBaseC1Ev+0x390>)
 800666a:	605c      	str	r4, [r3, #4]
 800666c:	f244 5340 	movw	r3, #17728	; 0x4540
        : pobject(pobject), pmemfun_0(pmemfun_0)
 8006670:	4974      	ldr	r1, [pc, #464]	; (8006844 <_ZN15Screen2ViewBaseC1Ev+0x394>)
        : pobject(pobject), pmemfun_1(pmemfun_1)
 8006672:	50e2      	str	r2, [r4, r3]
 8006674:	f244 5344 	movw	r3, #17732	; 0x4544
    __background.setPosition(0, 0, 800, 480);
 8006678:	ee19 0a90 	vmov	r0, s19
 800667c:	50e5      	str	r5, [r4, r3]
 800667e:	f244 5348 	movw	r3, #17736	; 0x4548
 8006682:	18e2      	adds	r2, r4, r3
 8006684:	9202      	str	r2, [sp, #8]
 8006686:	4a70      	ldr	r2, [pc, #448]	; (8006848 <_ZN15Screen2ViewBaseC1Ev+0x398>)
 8006688:	50e2      	str	r2, [r4, r3]
 800668a:	9b02      	ldr	r3, [sp, #8]
 800668c:	4a6f      	ldr	r2, [pc, #444]	; (800684c <_ZN15Screen2ViewBaseC1Ev+0x39c>)
 800668e:	605c      	str	r4, [r3, #4]
 8006690:	f244 5350 	movw	r3, #17744	; 0x4550
 8006694:	50e2      	str	r2, [r4, r3]
 8006696:	f244 5354 	movw	r3, #17748	; 0x4554
 800669a:	50e5      	str	r5, [r4, r3]
        : pobject(pobject), pmemfun_0(pmemfun_0)
 800669c:	f244 5358 	movw	r3, #17752	; 0x4558
 80066a0:	18e2      	adds	r2, r4, r3
 80066a2:	9204      	str	r2, [sp, #16]
 80066a4:	4a6a      	ldr	r2, [pc, #424]	; (8006850 <_ZN15Screen2ViewBaseC1Ev+0x3a0>)
 80066a6:	50e2      	str	r2, [r4, r3]
 80066a8:	9b04      	ldr	r3, [sp, #16]
 80066aa:	605c      	str	r4, [r3, #4]
 80066ac:	f244 5360 	movw	r3, #17760	; 0x4560
 80066b0:	50e1      	str	r1, [r4, r3]
 80066b2:	f244 5364 	movw	r3, #17764	; 0x4564
 80066b6:	50e5      	str	r5, [r4, r3]
 80066b8:	f244 5368 	movw	r3, #17768	; 0x4568
 80066bc:	18e1      	adds	r1, r4, r3
 80066be:	50e2      	str	r2, [r4, r3]
 80066c0:	f244 5370 	movw	r3, #17776	; 0x4570
 80066c4:	4a63      	ldr	r2, [pc, #396]	; (8006854 <_ZN15Screen2ViewBaseC1Ev+0x3a4>)
 80066c6:	604c      	str	r4, [r1, #4]
 80066c8:	50e2      	str	r2, [r4, r3]
 80066ca:	f244 5374 	movw	r3, #17780	; 0x4574
 80066ce:	9105      	str	r1, [sp, #20]
 80066d0:	50e5      	str	r5, [r4, r3]
 80066d2:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 80066d6:	9300      	str	r3, [sp, #0]
 80066d8:	462a      	mov	r2, r5
 80066da:	f44f 7348 	mov.w	r3, #800	; 0x320
 80066de:	4629      	mov	r1, r5
 80066e0:	f7fc f8ac 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        this->color = color;
 80066e4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80066e8:	66a3      	str	r3, [r4, #104]	; 0x68
    button1.setXY(0, 0);
 80066ea:	ee1a 0a10 	vmov	r0, s20
 80066ee:	462a      	mov	r2, r5
 80066f0:	4629      	mov	r1, r5
 80066f2:	f7fb fdcf 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 80066f6:	f10d 0c1c 	add.w	ip, sp, #28
 80066fa:	f04f 0001 	mov.w	r0, #1
 80066fe:	4661      	mov	r1, ip
 8006700:	f8ad 0020 	strh.w	r0, [sp, #32]
 8006704:	aa08      	add	r2, sp, #32
 8006706:	ee1a 0a10 	vmov	r0, s20
 800670a:	f8ad 501c 	strh.w	r5, [sp, #28]
 800670e:	f00b fd04 	bl	801211a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        action = &callback;
 8006712:	9b03      	ldr	r3, [sp, #12]
 8006714:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
    customContainerKeyboard1.setXY(0, 480);
 8006718:	ee1b 0a10 	vmov	r0, s22
 800671c:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8006720:	4629      	mov	r1, r5
 8006722:	f7fb fdb7 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
        this->triggerKeyboardCallback = &callback;
 8006726:	f642 5384 	movw	r3, #11652	; 0x2d84
 800672a:	9a04      	ldr	r2, [sp, #16]
 800672c:	50e2      	str	r2, [r4, r3]
 800672e:	2332      	movs	r3, #50	; 0x32
 8006730:	9300      	str	r3, [sp, #0]
 8006732:	462a      	mov	r2, r5
 8006734:	f44f 73c0 	mov.w	r3, #384	; 0x180
 8006738:	4629      	mov	r1, r5
 800673a:	f106 0034 	add.w	r0, r6, #52	; 0x34
 800673e:	f7fc f87d 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8006742:	f642 73ac 	movw	r3, #12204	; 0x2fac
 8006746:	f04f 0c05 	mov.w	ip, #5
 800674a:	f824 c003 	strh.w	ip, [r4, r3]
    flexButton_text_out.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800674e:	4b42      	ldr	r3, [pc, #264]	; (8006858 <_ZN15Screen2ViewBaseC1Ev+0x3a8>)
 8006750:	9300      	str	r3, [sp, #0]
 8006752:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 8006756:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 800675a:	4a40      	ldr	r2, [pc, #256]	; (800685c <_ZN15Screen2ViewBaseC1Ev+0x3ac>)
 800675c:	4940      	ldr	r1, [pc, #256]	; (8006860 <_ZN15Screen2ViewBaseC1Ev+0x3b0>)
 800675e:	4630      	mov	r0, r6
 8006760:	f7fc f894 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8006764:	f04f 0c0a 	mov.w	ip, #10
 8006768:	f8ad c01c 	strh.w	ip, [sp, #28]
 800676c:	f8ad c020 	strh.w	ip, [sp, #32]
    flexButton_text_out.setIconBitmaps(Bitmap(BITMAP_KEYBOARD_ID), Bitmap(BITMAP_KEYBOARD_ID));
 8006770:	f10d 0c1c 	add.w	ip, sp, #28
 8006774:	4661      	mov	r1, ip
 8006776:	aa08      	add	r2, sp, #32
 8006778:	4630      	mov	r0, r6
 800677a:	f7ff fe6b 	bl	8006454 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
        rect.x = x;
 800677e:	f642 73c8 	movw	r3, #12232	; 0x2fc8
        wildcardText.setTypedText(t);
 8006782:	f10d 0c20 	add.w	ip, sp, #32
 8006786:	4a37      	ldr	r2, [pc, #220]	; (8006864 <_ZN15Screen2ViewBaseC1Ev+0x3b4>)
 8006788:	50e2      	str	r2, [r4, r3]
 800678a:	4661      	mov	r1, ip
 800678c:	4a36      	ldr	r2, [pc, #216]	; (8006868 <_ZN15Screen2ViewBaseC1Ev+0x3b8>)
 800678e:	9208      	str	r2, [sp, #32]
 8006790:	230e      	movs	r3, #14
 8006792:	4638      	mov	r0, r7
 8006794:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006798:	f00b fc7f 	bl	801209a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        wildcardText.setWidthHeight(T::getWidth(), T::getHeight());
 800679c:	f642 7352 	movw	r3, #12114	; 0x2f52
 80067a0:	4638      	mov	r0, r7
 80067a2:	5ee2      	ldrsh	r2, [r4, r3]
 80067a4:	f642 7350 	movw	r3, #12112	; 0x2f50
 80067a8:	5ee1      	ldrsh	r1, [r4, r3]
 80067aa:	f7fb fc78 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
    flexButton_text_outBuffer[0] = 0;
 80067ae:	f244 43d4 	movw	r3, #17620	; 0x44d4
 80067b2:	18e2      	adds	r2, r4, r3
 80067b4:	52e5      	strh	r5, [r4, r3]
        wildcard = value;
 80067b6:	f243 032c 	movw	r3, #12332	; 0x302c
        wildcardText.setPosition(x, y, width, height);
 80067ba:	f04f 0c32 	mov.w	ip, #50	; 0x32
 80067be:	f8cd c000 	str.w	ip, [sp]
 80067c2:	50e2      	str	r2, [r4, r3]
 80067c4:	4638      	mov	r0, r7
 80067c6:	f44f 73c0 	mov.w	r3, #384	; 0x180
 80067ca:	462a      	mov	r2, r5
 80067cc:	4629      	mov	r1, r5
 80067ce:	f7fc f835 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 80067d2:	f243 0130 	movw	r1, #12336	; 0x3030
 80067d6:	4f25      	ldr	r7, [pc, #148]	; (800686c <_ZN15Screen2ViewBaseC1Ev+0x3bc>)
 80067d8:	5067      	str	r7, [r4, r1]
        colorPressed = newColorPressed;
 80067da:	f243 0134 	movw	r1, #12340	; 0x3034
        handlePressedUpdated();
 80067de:	4630      	mov	r0, r6
        colorPressed = newColorPressed;
 80067e0:	5067      	str	r7, [r4, r1]
        handlePressedUpdated();
 80067e2:	f7ff fdeb 	bl	80063bc <_ZN8touchgfx23WildcardTextButtonStyleINS_15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEEE20handlePressedUpdatedEv>
    flexButton_text_out.setPosition(407, 25, 384, 50);
 80067e6:	2132      	movs	r1, #50	; 0x32
 80067e8:	9100      	str	r1, [sp, #0]
 80067ea:	f44f 73c0 	mov.w	r3, #384	; 0x180
 80067ee:	2219      	movs	r2, #25
 80067f0:	f240 1197 	movw	r1, #407	; 0x197
 80067f4:	4630      	mov	r0, r6
 80067f6:	f7fc f821 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 80067fa:	f642 7378 	movw	r3, #12152	; 0x2f78
 80067fe:	9902      	ldr	r1, [sp, #8]
 8006800:	50e1      	str	r1, [r4, r3]
    customContainerKeyboard_Num1.setXY(-270, 180);
 8006802:	ee1a 0a90 	vmov	r0, s21
 8006806:	491a      	ldr	r1, [pc, #104]	; (8006870 <_ZN15Screen2ViewBaseC1Ev+0x3c0>)
 8006808:	22b4      	movs	r2, #180	; 0xb4
 800680a:	f7fb fd43 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
        this->triggerKeyboard_NumCallback = &callback;
 800680e:	f244 03e0 	movw	r3, #16608	; 0x40e0
 8006812:	9905      	ldr	r1, [sp, #20]
 8006814:	50e1      	str	r1, [r4, r3]
 8006816:	ee18 0a90 	vmov	r0, s17
 800681a:	212d      	movs	r1, #45	; 0x2d
 800681c:	9100      	str	r1, [sp, #0]
 800681e:	23c7      	movs	r3, #199	; 0xc7
 8006820:	462a      	mov	r2, r5
 8006822:	e029      	b.n	8006878 <_ZN15Screen2ViewBaseC1Ev+0x3c8>
 8006824:	08027f68 	.word	0x08027f68
 8006828:	08029d00 	.word	0x08029d00
 800682c:	08027de8 	.word	0x08027de8
 8006830:	08029f28 	.word	0x08029f28
 8006834:	08027e84 	.word	0x08027e84
 8006838:	080271bc 	.word	0x080271bc
 800683c:	08027f20 	.word	0x08027f20
 8006840:	0800643f 	.word	0x0800643f
 8006844:	0800626b 	.word	0x0800626b
 8006848:	08027f38 	.word	0x08027f38
 800684c:	080063f1 	.word	0x080063f1
 8006850:	08027f50 	.word	0x08027f50
 8006854:	08006271 	.word	0x08006271
 8006858:	ff336699 	.word	0xff336699
 800685c:	ff0099cc 	.word	0xff0099cc
 8006860:	ff006699 	.word	0xff006699
 8006864:	000e0162 	.word	0x000e0162
 8006868:	08027114 	.word	0x08027114
 800686c:	ff0a0a0a 	.word	0xff0a0a0a
 8006870:	fffffef2 	.word	0xfffffef2
 8006874:	08029da4 	.word	0x08029da4
 8006878:	4629      	mov	r1, r5
 800687a:	3034      	adds	r0, #52	; 0x34
 800687c:	f7fb ffde 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8006880:	f244 1358 	movw	r3, #16728	; 0x4158
 8006884:	f04f 0001 	mov.w	r0, #1
 8006888:	52e0      	strh	r0, [r4, r3]
    flexButton_text_out_Num.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800688a:	4bc9      	ldr	r3, [pc, #804]	; (8006bb0 <_ZN15Screen2ViewBaseC1Ev+0x700>)
 800688c:	9300      	str	r3, [sp, #0]
 800688e:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 8006892:	4ac8      	ldr	r2, [pc, #800]	; (8006bb4 <_ZN15Screen2ViewBaseC1Ev+0x704>)
 8006894:	49c8      	ldr	r1, [pc, #800]	; (8006bb8 <_ZN15Screen2ViewBaseC1Ev+0x708>)
 8006896:	ee18 0a90 	vmov	r0, s17
 800689a:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 800689e:	f7fb fff5 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 80068a2:	4ac6      	ldr	r2, [pc, #792]	; (8006bbc <_ZN15Screen2ViewBaseC1Ev+0x70c>)
 80068a4:	9208      	str	r2, [sp, #32]
 80068a6:	2317      	movs	r3, #23
        wildcardText.setTypedText(t);
 80068a8:	a908      	add	r1, sp, #32
 80068aa:	4640      	mov	r0, r8
 80068ac:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80068b0:	f00b fbf3 	bl	801209a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        wildcardText.setWidthHeight(T::getWidth(), T::getHeight());
 80068b4:	f244 03fe 	movw	r3, #16638	; 0x40fe
 80068b8:	4640      	mov	r0, r8
 80068ba:	5ee2      	ldrsh	r2, [r4, r3]
 80068bc:	f244 03fc 	movw	r3, #16636	; 0x40fc
 80068c0:	5ee1      	ldrsh	r1, [r4, r3]
 80068c2:	f7fb fbec 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
    Unicode::snprintf(flexButton_text_out_NumBuffer, FLEXBUTTON_TEXT_OUT_NUM_SIZE, "%s", TypedText(T___SINGLEUSE_D72U).getText());
 80068c6:	f504 438a 	add.w	r3, r4, #17664	; 0x4500
 80068ca:	3324      	adds	r3, #36	; 0x24
 80068cc:	9303      	str	r3, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80068ce:	4bbc      	ldr	r3, [pc, #752]	; (8006bc0 <_ZN15Screen2ViewBaseC1Ev+0x710>)
 80068d0:	681b      	ldr	r3, [r3, #0]
 80068d2:	b92b      	cbnz	r3, 80068e0 <_ZN15Screen2ViewBaseC1Ev+0x430>
 80068d4:	4bbb      	ldr	r3, [pc, #748]	; (8006bc4 <_ZN15Screen2ViewBaseC1Ev+0x714>)
 80068d6:	4abc      	ldr	r2, [pc, #752]	; (8006bc8 <_ZN15Screen2ViewBaseC1Ev+0x718>)
 80068d8:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80068da:	48bc      	ldr	r0, [pc, #752]	; (8006bcc <_ZN15Screen2ViewBaseC1Ev+0x71c>)
 80068dc:	f01d fdac 	bl	8024438 <__assert_func>
 80068e0:	4bbb      	ldr	r3, [pc, #748]	; (8006bd0 <_ZN15Screen2ViewBaseC1Ev+0x720>)
 80068e2:	881b      	ldrh	r3, [r3, #0]
 80068e4:	2b18      	cmp	r3, #24
 80068e6:	d803      	bhi.n	80068f0 <_ZN15Screen2ViewBaseC1Ev+0x440>
 80068e8:	4bba      	ldr	r3, [pc, #744]	; (8006bd4 <_ZN15Screen2ViewBaseC1Ev+0x724>)
 80068ea:	4ab7      	ldr	r2, [pc, #732]	; (8006bc8 <_ZN15Screen2ViewBaseC1Ev+0x718>)
 80068ec:	21af      	movs	r1, #175	; 0xaf
 80068ee:	e7f4      	b.n	80068da <_ZN15Screen2ViewBaseC1Ev+0x42a>
        return texts->getText(typedTextId);
 80068f0:	4bb9      	ldr	r3, [pc, #740]	; (8006bd8 <_ZN15Screen2ViewBaseC1Ev+0x728>)
 80068f2:	2118      	movs	r1, #24
 80068f4:	6818      	ldr	r0, [r3, #0]
 80068f6:	f000 fae7 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 80068fa:	4ab8      	ldr	r2, [pc, #736]	; (8006bdc <_ZN15Screen2ViewBaseC1Ev+0x72c>)
 80068fc:	4603      	mov	r3, r0
 80068fe:	210a      	movs	r1, #10
 8006900:	9803      	ldr	r0, [sp, #12]
 8006902:	f011 fc4d 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8006906:	f244 13a8 	movw	r3, #16808	; 0x41a8
 800690a:	9a03      	ldr	r2, [sp, #12]
 800690c:	50e2      	str	r2, [r4, r3]
        wildcardText.setPosition(x, y, width, height);
 800690e:	232d      	movs	r3, #45	; 0x2d
 8006910:	4629      	mov	r1, r5
 8006912:	9300      	str	r3, [sp, #0]
 8006914:	2207      	movs	r2, #7
 8006916:	4640      	mov	r0, r8
 8006918:	23c7      	movs	r3, #199	; 0xc7
 800691a:	f7fb ff8f 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 800691e:	f244 13ac 	movw	r3, #16812	; 0x41ac
        handlePressedUpdated();
 8006922:	ee18 0a90 	vmov	r0, s17
        colorReleased = newColorReleased;
 8006926:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 8006928:	f244 13b0 	movw	r3, #16816	; 0x41b0
 800692c:	f04f 0846 	mov.w	r8, #70	; 0x46
 8006930:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 8006932:	f7fb fbfa 	bl	800212a <_ZN8touchgfx23WildcardTextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButton_text_out_Num.setPosition(178, 30, 199, 45);
 8006936:	232d      	movs	r3, #45	; 0x2d
 8006938:	ee18 0a90 	vmov	r0, s17
 800693c:	9300      	str	r3, [sp, #0]
 800693e:	221e      	movs	r2, #30
 8006940:	23c7      	movs	r3, #199	; 0xc7
 8006942:	21b2      	movs	r1, #178	; 0xb2
 8006944:	f7fb ff7a 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8006948:	f244 1324 	movw	r3, #16676	; 0x4124
 800694c:	9a02      	ldr	r2, [sp, #8]
 800694e:	50e2      	str	r2, [r4, r3]
 8006950:	4629      	mov	r1, r5
 8006952:	462a      	mov	r2, r5
 8006954:	f10a 0034 	add.w	r0, sl, #52	; 0x34
 8006958:	f8cd 8000 	str.w	r8, [sp]
 800695c:	23a0      	movs	r3, #160	; 0xa0
 800695e:	f7fb ff6d 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8006962:	f244 2318 	movw	r3, #16920	; 0x4218
 8006966:	f04f 0205 	mov.w	r2, #5
 800696a:	52e2      	strh	r2, [r4, r3]
    flexButtonSave.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800696c:	4b90      	ldr	r3, [pc, #576]	; (8006bb0 <_ZN15Screen2ViewBaseC1Ev+0x700>)
 800696e:	9300      	str	r3, [sp, #0]
 8006970:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 8006974:	4a8f      	ldr	r2, [pc, #572]	; (8006bb4 <_ZN15Screen2ViewBaseC1Ev+0x704>)
 8006976:	4990      	ldr	r1, [pc, #576]	; (8006bb8 <_ZN15Screen2ViewBaseC1Ev+0x708>)
 8006978:	4650      	mov	r0, sl
 800697a:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 800697e:	f7fb ff85 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
        : typedTextId(id)
 8006982:	4b8e      	ldr	r3, [pc, #568]	; (8006bbc <_ZN15Screen2ViewBaseC1Ev+0x70c>)
 8006984:	9308      	str	r3, [sp, #32]
    flexButtonSave.setText(TypedText(T___SINGLEUSE_QKLS));
 8006986:	a908      	add	r1, sp, #32
 8006988:	231d      	movs	r3, #29
 800698a:	4650      	mov	r0, sl
 800698c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006990:	f7fb ff88 	bl	80028a4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8006994:	4629      	mov	r1, r5
 8006996:	220a      	movs	r2, #10
 8006998:	f10a 0078 	add.w	r0, sl, #120	; 0x78
 800699c:	f8cd 8000 	str.w	r8, [sp]
 80069a0:	23a0      	movs	r3, #160	; 0xa0
 80069a2:	f7fb ff4b 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 80069a6:	f244 2368 	movw	r3, #17000	; 0x4268
        handlePressedUpdated();
 80069aa:	4650      	mov	r0, sl
        colorReleased = newColorReleased;
 80069ac:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 80069ae:	f244 236c 	movw	r3, #17004	; 0x426c
 80069b2:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 80069b4:	f7fb fded 	bl	8002592 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonSave.setPosition(631, 368, 160, 70);
 80069b8:	4650      	mov	r0, sl
 80069ba:	f8cd 8000 	str.w	r8, [sp]
 80069be:	23a0      	movs	r3, #160	; 0xa0
 80069c0:	f44f 72b8 	mov.w	r2, #368	; 0x170
 80069c4:	f240 2177 	movw	r1, #631	; 0x277
 80069c8:	f7fb ff38 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 80069cc:	f244 13e4 	movw	r3, #16868	; 0x41e4
 80069d0:	9902      	ldr	r1, [sp, #8]
 80069d2:	50e1      	str	r1, [r4, r3]
    modalWindow1.setBackground(touchgfx::BitmapId(BITMAP_DARK_BACKGROUNDS_MAIN_BG_320X240PX_ID), 240, 120);
 80069d4:	2304      	movs	r3, #4
 80069d6:	22f0      	movs	r2, #240	; 0xf0
 80069d8:	f8ad 3020 	strh.w	r3, [sp, #32]
 80069dc:	a908      	add	r1, sp, #32
 80069de:	2378      	movs	r3, #120	; 0x78
 80069e0:	4658      	mov	r0, fp
 80069e2:	f009 fc48 	bl	8010276 <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>
    modalWindow1.setShadeColor(touchgfx::Color::getColorFromRGB(28, 28, 28));
 80069e6:	4658      	mov	r0, fp
 80069e8:	497d      	ldr	r1, [pc, #500]	; (8006be0 <_ZN15Screen2ViewBaseC1Ev+0x730>)
 80069ea:	f009 fc31 	bl	8010250 <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>
    modalWindow1.setShadeAlpha(149);
 80069ee:	2195      	movs	r1, #149	; 0x95
 80069f0:	4658      	mov	r0, fp
 80069f2:	f009 fc31 	bl	8010258 <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>
    modalWindow1.hide();
 80069f6:	4658      	mov	r0, fp
 80069f8:	f009 fc20 	bl	801023c <_ZN8touchgfx11ModalWindow4hideEv>
 80069fc:	ee18 0a10 	vmov	r0, s16
 8006a00:	462a      	mov	r2, r5
 8006a02:	4629      	mov	r1, r5
 8006a04:	f8cd 8000 	str.w	r8, [sp]
 8006a08:	2364      	movs	r3, #100	; 0x64
 8006a0a:	3034      	adds	r0, #52	; 0x34
 8006a0c:	f7fb ff16 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonSaveNo.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8006a10:	4a67      	ldr	r2, [pc, #412]	; (8006bb0 <_ZN15Screen2ViewBaseC1Ev+0x700>)
 8006a12:	9200      	str	r2, [sp, #0]
 8006a14:	f244 3384 	movw	r3, #17284	; 0x4384
 8006a18:	f04f 0105 	mov.w	r1, #5
 8006a1c:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 8006a20:	52e1      	strh	r1, [r4, r3]
 8006a22:	ee18 0a10 	vmov	r0, s16
 8006a26:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 8006a2a:	4b6e      	ldr	r3, [pc, #440]	; (8006be4 <_ZN15Screen2ViewBaseC1Ev+0x734>)
 8006a2c:	4962      	ldr	r1, [pc, #392]	; (8006bb8 <_ZN15Screen2ViewBaseC1Ev+0x708>)
 8006a2e:	f7fb ff2d 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButtonSaveNo.setText(TypedText(T___SINGLEUSE_XFCU));
 8006a32:	a808      	add	r0, sp, #32
 8006a34:	4b61      	ldr	r3, [pc, #388]	; (8006bbc <_ZN15Screen2ViewBaseC1Ev+0x70c>)
 8006a36:	9308      	str	r3, [sp, #32]
 8006a38:	4601      	mov	r1, r0
 8006a3a:	231e      	movs	r3, #30
 8006a3c:	ee18 0a10 	vmov	r0, s16
 8006a40:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006a44:	f7fb ff2e 	bl	80028a4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8006a48:	ee18 0a10 	vmov	r0, s16
 8006a4c:	4629      	mov	r1, r5
 8006a4e:	2214      	movs	r2, #20
 8006a50:	f8cd 8000 	str.w	r8, [sp]
 8006a54:	2364      	movs	r3, #100	; 0x64
 8006a56:	3078      	adds	r0, #120	; 0x78
 8006a58:	f7fb fef0 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8006a5c:	f244 33d4 	movw	r3, #17364	; 0x43d4
        handlePressedUpdated();
 8006a60:	ee18 0a10 	vmov	r0, s16
        colorReleased = newColorReleased;
 8006a64:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 8006a66:	f244 33d8 	movw	r3, #17368	; 0x43d8
 8006a6a:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 8006a6c:	f7fb fd91 	bl	8002592 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonSaveNo.setPosition(196, 120, 100, 70);
 8006a70:	ee18 0a10 	vmov	r0, s16
 8006a74:	2278      	movs	r2, #120	; 0x78
 8006a76:	f8cd 8000 	str.w	r8, [sp]
 8006a7a:	2364      	movs	r3, #100	; 0x64
 8006a7c:	21c4      	movs	r1, #196	; 0xc4
 8006a7e:	f7fb fedd 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8006a82:	f244 3350 	movw	r3, #17232	; 0x4350
 8006a86:	9902      	ldr	r1, [sp, #8]
 8006a88:	50e1      	str	r1, [r4, r3]
    modalWindow1.add(flexButtonSaveNo);
 8006a8a:	4658      	mov	r0, fp
 8006a8c:	ee18 1a10 	vmov	r1, s16
 8006a90:	f009 fbdb 	bl	801024a <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
 8006a94:	462a      	mov	r2, r5
 8006a96:	4629      	mov	r1, r5
 8006a98:	f109 0034 	add.w	r0, r9, #52	; 0x34
 8006a9c:	f8cd 8000 	str.w	r8, [sp]
 8006aa0:	2364      	movs	r3, #100	; 0x64
 8006aa2:	f7fb fecb 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButtonSaveYes.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8006aa6:	4a42      	ldr	r2, [pc, #264]	; (8006bb0 <_ZN15Screen2ViewBaseC1Ev+0x700>)
 8006aa8:	9200      	str	r2, [sp, #0]
 8006aaa:	f244 4340 	movw	r3, #17472	; 0x4440
 8006aae:	f04f 0105 	mov.w	r1, #5
 8006ab2:	f5a2 124b 	sub.w	r2, r2, #3325952	; 0x32c000
 8006ab6:	52e1      	strh	r1, [r4, r3]
 8006ab8:	f6a2 42cd 	subw	r2, r2, #3277	; 0xccd
 8006abc:	4648      	mov	r0, r9
 8006abe:	4b49      	ldr	r3, [pc, #292]	; (8006be4 <_ZN15Screen2ViewBaseC1Ev+0x734>)
 8006ac0:	493d      	ldr	r1, [pc, #244]	; (8006bb8 <_ZN15Screen2ViewBaseC1Ev+0x708>)
 8006ac2:	f7fb fee3 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8006ac6:	4b3d      	ldr	r3, [pc, #244]	; (8006bbc <_ZN15Screen2ViewBaseC1Ev+0x70c>)
 8006ac8:	9308      	str	r3, [sp, #32]
    flexButtonSaveYes.setText(TypedText(T___SINGLEUSE_KVEN));
 8006aca:	a908      	add	r1, sp, #32
 8006acc:	231f      	movs	r3, #31
 8006ace:	4648      	mov	r0, r9
 8006ad0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006ad4:	f7fb fee6 	bl	80028a4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE7setTextENS_9TypedTextE>
        text.setPosition(x, y, width, height);
 8006ad8:	4629      	mov	r1, r5
 8006ada:	2214      	movs	r2, #20
 8006adc:	f109 0078 	add.w	r0, r9, #120	; 0x78
 8006ae0:	f8cd 8000 	str.w	r8, [sp]
 8006ae4:	2364      	movs	r3, #100	; 0x64
 8006ae6:	f7fb fea9 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
        colorReleased = newColorReleased;
 8006aea:	f244 4390 	movw	r3, #17552	; 0x4490
        handlePressedUpdated();
 8006aee:	4648      	mov	r0, r9
        colorReleased = newColorReleased;
 8006af0:	50e7      	str	r7, [r4, r3]
        colorPressed = newColorPressed;
 8006af2:	f244 4394 	movw	r3, #17556	; 0x4494
 8006af6:	50e7      	str	r7, [r4, r3]
        handlePressedUpdated();
 8006af8:	f7fb fd4b 	bl	8002592 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    flexButtonSaveYes.setPosition(37, 120, 100, 70);
 8006afc:	4648      	mov	r0, r9
 8006afe:	f8cd 8000 	str.w	r8, [sp]
 8006b02:	2364      	movs	r3, #100	; 0x64
 8006b04:	2278      	movs	r2, #120	; 0x78
 8006b06:	2125      	movs	r1, #37	; 0x25
 8006b08:	f7fb fe98 	bl	800283c <_ZN8touchgfx8Drawable11setPositionEssss>
 8006b0c:	f244 430c 	movw	r3, #17420	; 0x440c
 8006b10:	9a02      	ldr	r2, [sp, #8]
 8006b12:	50e2      	str	r2, [r4, r3]
    modalWindow1.add(flexButtonSaveYes);
 8006b14:	4649      	mov	r1, r9
 8006b16:	4658      	mov	r0, fp
 8006b18:	f009 fb97 	bl	801024a <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    textArea1.setXY(50, 60);
 8006b1c:	ee19 0a10 	vmov	r0, s18
 8006b20:	223c      	movs	r2, #60	; 0x3c
 8006b22:	2132      	movs	r1, #50	; 0x32
 8006b24:	f7fb fbb6 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8006b28:	f244 43c8 	movw	r3, #17608	; 0x44c8
 8006b2c:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 8006b30:	50e2      	str	r2, [r4, r3]
        linespace = space;
 8006b32:	ee19 2a10 	vmov	r2, s18
 8006b36:	4b21      	ldr	r3, [pc, #132]	; (8006bbc <_ZN15Screen2ViewBaseC1Ev+0x70c>)
 8006b38:	9308      	str	r3, [sp, #32]
 8006b3a:	2320      	movs	r3, #32
 8006b3c:	8695      	strh	r5, [r2, #52]	; 0x34
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5CIK));
 8006b3e:	eb0d 0103 	add.w	r1, sp, r3
 8006b42:	ee19 0a10 	vmov	r0, s18
 8006b46:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006b4a:	1d25      	adds	r5, r4, #4
 8006b4c:	f00b faa5 	bl	801209a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    modalWindow1.add(textArea1);
 8006b50:	ee19 1a10 	vmov	r1, s18
 8006b54:	4658      	mov	r0, fp
 8006b56:	f009 fb78 	bl	801024a <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
 8006b5a:	ee19 1a90 	vmov	r1, s19
 8006b5e:	4628      	mov	r0, r5
 8006b60:	f009 fcba 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006b64:	ee1a 1a10 	vmov	r1, s20
 8006b68:	4628      	mov	r0, r5
 8006b6a:	f009 fcb5 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006b6e:	ee1b 1a10 	vmov	r1, s22
 8006b72:	4628      	mov	r0, r5
 8006b74:	f009 fcb0 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006b78:	4631      	mov	r1, r6
 8006b7a:	4628      	mov	r0, r5
 8006b7c:	f009 fcac 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006b80:	ee1a 1a90 	vmov	r1, s21
 8006b84:	4628      	mov	r0, r5
 8006b86:	f009 fca7 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006b8a:	ee18 1a90 	vmov	r1, s17
 8006b8e:	4628      	mov	r0, r5
 8006b90:	f009 fca2 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006b94:	4651      	mov	r1, sl
 8006b96:	4628      	mov	r0, r5
 8006b98:	f009 fc9e 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006b9c:	4628      	mov	r0, r5
 8006b9e:	4659      	mov	r1, fp
 8006ba0:	f009 fc9a 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006ba4:	4620      	mov	r0, r4
 8006ba6:	b00b      	add	sp, #44	; 0x2c
 8006ba8:	ecbd 8b08 	vpop	{d8-d11}
 8006bac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006bb0:	ff336699 	.word	0xff336699
 8006bb4:	ff0099cc 	.word	0xff0099cc
 8006bb8:	ff006699 	.word	0xff006699
 8006bbc:	08027114 	.word	0x08027114
 8006bc0:	20020ae0 	.word	0x20020ae0
 8006bc4:	08027000 	.word	0x08027000
 8006bc8:	08027042 	.word	0x08027042
 8006bcc:	08027070 	.word	0x08027070
 8006bd0:	20020ae4 	.word	0x20020ae4
 8006bd4:	080270b7 	.word	0x080270b7
 8006bd8:	20020aec 	.word	0x20020aec
 8006bdc:	08027109 	.word	0x08027109
 8006be0:	ff1c1c1c 	.word	0xff1c1c1c
 8006be4:	ff003366 	.word	0xff003366

08006be8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 155, 10, 2, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8006be8:	4770      	bx	lr
	...

08006bec <_Z23getFont_verdana_10_4bppv>:
{
 8006bec:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 155, 10, 2, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8006bee:	4d16      	ldr	r5, [pc, #88]	; (8006c48 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8006bf0:	782c      	ldrb	r4, [r5, #0]
 8006bf2:	f3bf 8f5b 	dmb	ish
 8006bf6:	f014 0401 	ands.w	r4, r4, #1
{
 8006bfa:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 155, 10, 2, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8006bfc:	d120      	bne.n	8006c40 <_Z23getFont_verdana_10_4bppv+0x54>
 8006bfe:	4628      	mov	r0, r5
 8006c00:	f01d fbed 	bl	80243de <__cxa_guard_acquire>
 8006c04:	b1e0      	cbz	r0, 8006c40 <_Z23getFont_verdana_10_4bppv+0x54>
 8006c06:	233f      	movs	r3, #63	; 0x3f
 8006c08:	9307      	str	r3, [sp, #28]
 8006c0a:	4b10      	ldr	r3, [pc, #64]	; (8006c4c <_Z23getFont_verdana_10_4bppv+0x60>)
 8006c0c:	9306      	str	r3, [sp, #24]
 8006c0e:	4b10      	ldr	r3, [pc, #64]	; (8006c50 <_Z23getFont_verdana_10_4bppv+0x64>)
 8006c10:	9305      	str	r3, [sp, #20]
 8006c12:	2301      	movs	r3, #1
 8006c14:	e9cd 3303 	strd	r3, r3, [sp, #12]
 8006c18:	9302      	str	r3, [sp, #8]
 8006c1a:	2204      	movs	r2, #4
 8006c1c:	2302      	movs	r3, #2
 8006c1e:	e9cd 3200 	strd	r3, r2, [sp]
 8006c22:	490c      	ldr	r1, [pc, #48]	; (8006c54 <_Z23getFont_verdana_10_4bppv+0x68>)
 8006c24:	480c      	ldr	r0, [pc, #48]	; (8006c58 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8006c26:	9408      	str	r4, [sp, #32]
 8006c28:	230a      	movs	r3, #10
 8006c2a:	229b      	movs	r2, #155	; 0x9b
 8006c2c:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8006c30:	f7fe f99a 	bl	8004f68 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006c34:	4628      	mov	r0, r5
 8006c36:	f01d fbde 	bl	80243f6 <__cxa_guard_release>
 8006c3a:	4808      	ldr	r0, [pc, #32]	; (8006c5c <_Z23getFont_verdana_10_4bppv+0x70>)
 8006c3c:	f01d fc1a 	bl	8024474 <atexit>
    return verdana_10_4bpp;
}
 8006c40:	4805      	ldr	r0, [pc, #20]	; (8006c58 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8006c42:	b00d      	add	sp, #52	; 0x34
 8006c44:	bd30      	pop	{r4, r5, pc}
 8006c46:	bf00      	nop
 8006c48:	2000f9f8 	.word	0x2000f9f8
 8006c4c:	0802b950 	.word	0x0802b950
 8006c50:	0802bd40 	.word	0x0802bd40
 8006c54:	9012da58 	.word	0x9012da58
 8006c58:	2000f9fc 	.word	0x2000f9fc
 8006c5c:	08006be9 	.word	0x08006be9

08006c60 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_15_4bpp();

touchgfx::GeneratedFont& getFont_verdana_15_4bpp()
{
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 155, 15, 3, 4, 1, 1, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8006c60:	4770      	bx	lr
	...

08006c64 <_Z23getFont_verdana_15_4bppv>:
{
 8006c64:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 155, 15, 3, 4, 1, 1, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8006c66:	4d16      	ldr	r5, [pc, #88]	; (8006cc0 <_Z23getFont_verdana_15_4bppv+0x5c>)
 8006c68:	782c      	ldrb	r4, [r5, #0]
 8006c6a:	f3bf 8f5b 	dmb	ish
 8006c6e:	f014 0401 	ands.w	r4, r4, #1
{
 8006c72:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 155, 15, 3, 4, 1, 1, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8006c74:	d120      	bne.n	8006cb8 <_Z23getFont_verdana_15_4bppv+0x54>
 8006c76:	4628      	mov	r0, r5
 8006c78:	f01d fbb1 	bl	80243de <__cxa_guard_acquire>
 8006c7c:	b1e0      	cbz	r0, 8006cb8 <_Z23getFont_verdana_15_4bppv+0x54>
 8006c7e:	233f      	movs	r3, #63	; 0x3f
 8006c80:	9307      	str	r3, [sp, #28]
 8006c82:	4b10      	ldr	r3, [pc, #64]	; (8006cc4 <_Z23getFont_verdana_15_4bppv+0x60>)
 8006c84:	9306      	str	r3, [sp, #24]
 8006c86:	4b10      	ldr	r3, [pc, #64]	; (8006cc8 <_Z23getFont_verdana_15_4bppv+0x64>)
 8006c88:	9305      	str	r3, [sp, #20]
 8006c8a:	2301      	movs	r3, #1
 8006c8c:	e9cd 3303 	strd	r3, r3, [sp, #12]
 8006c90:	9302      	str	r3, [sp, #8]
 8006c92:	2204      	movs	r2, #4
 8006c94:	2303      	movs	r3, #3
 8006c96:	e9cd 3200 	strd	r3, r2, [sp]
 8006c9a:	490c      	ldr	r1, [pc, #48]	; (8006ccc <_Z23getFont_verdana_15_4bppv+0x68>)
 8006c9c:	480c      	ldr	r0, [pc, #48]	; (8006cd0 <_Z23getFont_verdana_15_4bppv+0x6c>)
 8006c9e:	9408      	str	r4, [sp, #32]
 8006ca0:	230f      	movs	r3, #15
 8006ca2:	229b      	movs	r2, #155	; 0x9b
 8006ca4:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8006ca8:	f7fe f95e 	bl	8004f68 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006cac:	4628      	mov	r0, r5
 8006cae:	f01d fba2 	bl	80243f6 <__cxa_guard_release>
 8006cb2:	4808      	ldr	r0, [pc, #32]	; (8006cd4 <_Z23getFont_verdana_15_4bppv+0x70>)
 8006cb4:	f01d fbde 	bl	8024474 <atexit>
    return verdana_15_4bpp;
}
 8006cb8:	4805      	ldr	r0, [pc, #20]	; (8006cd0 <_Z23getFont_verdana_15_4bppv+0x6c>)
 8006cba:	b00d      	add	sp, #52	; 0x34
 8006cbc:	bd30      	pop	{r4, r5, pc}
 8006cbe:	bf00      	nop
 8006cc0:	2000fa24 	.word	0x2000fa24
 8006cc4:	0802b984 	.word	0x0802b984
 8006cc8:	0802bd44 	.word	0x0802bd44
 8006ccc:	9012e2d4 	.word	0x9012e2d4
 8006cd0:	2000fa28 	.word	0x2000fa28
 8006cd4:	08006c61 	.word	0x08006c61

08006cd8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 154, 40, 8, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8006cd8:	4770      	bx	lr
	...

08006cdc <_Z23getFont_verdana_40_4bppv>:
{
 8006cdc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 154, 40, 8, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8006cde:	4d16      	ldr	r5, [pc, #88]	; (8006d38 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8006ce0:	782c      	ldrb	r4, [r5, #0]
 8006ce2:	f3bf 8f5b 	dmb	ish
 8006ce6:	f014 0401 	ands.w	r4, r4, #1
{
 8006cea:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 154, 40, 8, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8006cec:	d121      	bne.n	8006d32 <_Z23getFont_verdana_40_4bppv+0x56>
 8006cee:	4628      	mov	r0, r5
 8006cf0:	f01d fb75 	bl	80243de <__cxa_guard_acquire>
 8006cf4:	b1e8      	cbz	r0, 8006d32 <_Z23getFont_verdana_40_4bppv+0x56>
 8006cf6:	233f      	movs	r3, #63	; 0x3f
 8006cf8:	9307      	str	r3, [sp, #28]
 8006cfa:	4b10      	ldr	r3, [pc, #64]	; (8006d3c <_Z23getFont_verdana_40_4bppv+0x60>)
 8006cfc:	9306      	str	r3, [sp, #24]
 8006cfe:	4b10      	ldr	r3, [pc, #64]	; (8006d40 <_Z23getFont_verdana_40_4bppv+0x64>)
 8006d00:	9305      	str	r3, [sp, #20]
 8006d02:	2302      	movs	r3, #2
 8006d04:	e9cd 3303 	strd	r3, r3, [sp, #12]
 8006d08:	2201      	movs	r2, #1
 8006d0a:	2304      	movs	r3, #4
 8006d0c:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8006d10:	2308      	movs	r3, #8
 8006d12:	490c      	ldr	r1, [pc, #48]	; (8006d44 <_Z23getFont_verdana_40_4bppv+0x68>)
 8006d14:	9300      	str	r3, [sp, #0]
 8006d16:	229a      	movs	r2, #154	; 0x9a
 8006d18:	2328      	movs	r3, #40	; 0x28
 8006d1a:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8006d1e:	480a      	ldr	r0, [pc, #40]	; (8006d48 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8006d20:	9408      	str	r4, [sp, #32]
 8006d22:	f7fe f921 	bl	8004f68 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8006d26:	4628      	mov	r0, r5
 8006d28:	f01d fb65 	bl	80243f6 <__cxa_guard_release>
 8006d2c:	4807      	ldr	r0, [pc, #28]	; (8006d4c <_Z23getFont_verdana_40_4bppv+0x70>)
 8006d2e:	f01d fba1 	bl	8024474 <atexit>
    return verdana_40_4bpp;
}
 8006d32:	4805      	ldr	r0, [pc, #20]	; (8006d48 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8006d34:	b00d      	add	sp, #52	; 0x34
 8006d36:	bd30      	pop	{r4, r5, pc}
 8006d38:	2000fa50 	.word	0x2000fa50
 8006d3c:	0802ba60 	.word	0x0802ba60
 8006d40:	0802bd48 	.word	0x0802bd48
 8006d44:	9012eb50 	.word	0x9012eb50
 8006d48:	2000fa54 	.word	0x2000fa54
 8006d4c:	08006cd9 	.word	0x08006cd9

08006d50 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8006d50:	2000      	movs	r0, #0
 8006d52:	4770      	bx	lr

08006d54 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8006d54:	2000      	movs	r0, #0
 8006d56:	4770      	bx	lr

08006d58 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8006d58:	b40e      	push	{r1, r2, r3}
 8006d5a:	b503      	push	{r0, r1, lr}
 8006d5c:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthRTL(TEXT_DIRECTION_LTR, text, pArg);
 8006d5e:	2100      	movs	r1, #0
{
 8006d60:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8006d64:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthRTL(TEXT_DIRECTION_LTR, text, pArg);
 8006d66:	f00e fc1d 	bl	80155a4 <_ZNK8touchgfx4Font17getStringWidthRTLEhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8006d6a:	b002      	add	sp, #8
 8006d6c:	f85d eb04 	ldr.w	lr, [sp], #4
 8006d70:	b003      	add	sp, #12
 8006d72:	4770      	bx	lr

08006d74 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8006d74:	b40c      	push	{r2, r3}
 8006d76:	b507      	push	{r0, r1, r2, lr}
 8006d78:	ab04      	add	r3, sp, #16
 8006d7a:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8006d7e:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthRTL(textDirection, text, pArg);
 8006d80:	f00e fc10 	bl	80155a4 <_ZNK8touchgfx4Font17getStringWidthRTLEhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8006d84:	b003      	add	sp, #12
 8006d86:	f85d eb04 	ldr.w	lr, [sp], #4
 8006d8a:	b002      	add	sp, #8
 8006d8c:	4770      	bx	lr
	...

08006d90 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 8006d90:	b510      	push	{r4, lr}
 8006d92:	4604      	mov	r4, r0
    nextCharacters.replaceAt0(unicodeConverter(direction));
 8006d94:	f00f fa9a 	bl	80162cc <_ZN8touchgfx12TextProvider16unicodeConverterEh>
            assert(used < size);
            replaceAt(++used - 1, newChar);
        }
        FORCE_INLINE_FUNCTION void replaceAt0(Unicode::UnicodeChar newChar)
        {
            buffer[pos] = newChar;
 8006d98:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8006d9a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8006d9e:	8458      	strh	r0, [r3, #34]	; 0x22
    if (fontGsubTable && nextCharacters.peekChar())
 8006da0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8006da2:	b35b      	cbz	r3, 8006dfc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6c>
            assert(used > 0);
 8006da4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8006da6:	b92b      	cbnz	r3, 8006db4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x24>
 8006da8:	4b17      	ldr	r3, [pc, #92]	; (8006e08 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8006daa:	4a18      	ldr	r2, [pc, #96]	; (8006e0c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8006dac:	21c0      	movs	r1, #192	; 0xc0
            assert(offset < used);
 8006dae:	4818      	ldr	r0, [pc, #96]	; (8006e10 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8006db0:	f01d fb42 	bl	8024438 <__assert_func>
 8006db4:	b310      	cbz	r0, 8006dfc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6c>
    {
        substituteGlyphs();
 8006db6:	4620      	mov	r0, r4
 8006db8:	f010 fc14 	bl	80175e4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
 8006dbc:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8006dbe:	2b01      	cmp	r3, #1
 8006dc0:	d803      	bhi.n	8006dca <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x3a>
 8006dc2:	4b14      	ldr	r3, [pc, #80]	; (8006e14 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x84>)
 8006dc4:	4a14      	ldr	r2, [pc, #80]	; (8006e18 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x88>)
 8006dc6:	21c5      	movs	r1, #197	; 0xc5
 8006dc8:	e7f1      	b.n	8006dae <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x1e>
            const uint16_t index = pos + offset;
 8006dca:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8006dcc:	1c53      	adds	r3, r2, #1
 8006dce:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8006dd0:	2b09      	cmp	r3, #9
 8006dd2:	4619      	mov	r1, r3
 8006dd4:	bf88      	it	hi
 8006dd6:	f1a3 010a 	subhi.w	r1, r3, #10
 8006dda:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8006dde:	f640 103f 	movw	r0, #2367	; 0x93f
 8006de2:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8006de4:	4281      	cmp	r1, r0
 8006de6:	d109      	bne.n	8006dfc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6c>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8006de8:	2b0a      	cmp	r3, #10
 8006dea:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8006dee:	bf28      	it	cs
 8006df0:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8006df2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8006df6:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8006df8:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8006dfa:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8006dfc:	4620      	mov	r0, r4
}
 8006dfe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8006e02:	f010 bad3 	b.w	80173ac <_ZN8touchgfx12TextProvider11getNextCharEv>
 8006e06:	bf00      	nop
 8006e08:	08027fac 	.word	0x08027fac
 8006e0c:	08027fb5 	.word	0x08027fb5
 8006e10:	08028060 	.word	0x08028060
 8006e14:	080280aa 	.word	0x080280aa
 8006e18:	080280b8 	.word	0x080280b8

08006e1c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 8006e1c:	b510      	push	{r4, lr}
 8006e1e:	4604      	mov	r4, r0
    fillInputBuffer();
 8006e20:	f010 fa7c 	bl	801731c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
    unicodeConverterInit();
 8006e24:	4620      	mov	r0, r4
}
 8006e26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    unicodeConverterInit();
 8006e2a:	f00f ba4a 	b.w	80162c2 <_ZN8touchgfx12TextProvider20unicodeConverterInitEv>

08006e2e <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8006e2e:	b510      	push	{r4, lr}
 8006e30:	b086      	sub	sp, #24
 8006e32:	ac02      	add	r4, sp, #8
 8006e34:	e884 0006 	stmia.w	r4, {r1, r2}
 8006e38:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8006e3a:	ab0a      	add	r3, sp, #40	; 0x28
 8006e3c:	9305      	str	r3, [sp, #20]
    drawStringRTL(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8006e3e:	9301      	str	r3, [sp, #4]
 8006e40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006e42:	9300      	str	r3, [sp, #0]
 8006e44:	4621      	mov	r1, r4
 8006e46:	9b08      	ldr	r3, [sp, #32]
 8006e48:	f00d f854 	bl	8013ef4 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8006e4c:	b006      	add	sp, #24
 8006e4e:	bd10      	pop	{r4, pc}

08006e50 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8006e50:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8006e52:	bb18      	cbnz	r0, 8006e9c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8006e54:	4b12      	ldr	r3, [pc, #72]	; (8006ea0 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8006e56:	4813      	ldr	r0, [pc, #76]	; (8006ea4 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8006e58:	681b      	ldr	r3, [r3, #0]
 8006e5a:	4913      	ldr	r1, [pc, #76]	; (8006ea8 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8006e5c:	b1b3      	cbz	r3, 8006e8c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8006e5e:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8006e60:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8006e62:	441a      	add	r2, r3
 8006e64:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8006e66:	685a      	ldr	r2, [r3, #4]
 8006e68:	441a      	add	r2, r3
 8006e6a:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8006e6c:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8006e6e:	4b0f      	ldr	r3, [pc, #60]	; (8006eac <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8006e70:	2200      	movs	r2, #0
 8006e72:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8006e74:	f000 f838 	bl	8006ee8 <_ZN17TypedTextDatabase8getFontsEv>
 8006e78:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8006e7a:	f000 f833 	bl	8006ee4 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8006e7e:	4b0c      	ldr	r3, [pc, #48]	; (8006eb0 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8006e80:	601c      	str	r4, [r3, #0]
        fonts = f;
 8006e82:	4b0c      	ldr	r3, [pc, #48]	; (8006eb4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8006e84:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8006e86:	4b0c      	ldr	r3, [pc, #48]	; (8006eb8 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8006e88:	8018      	strh	r0, [r3, #0]
    }
}
 8006e8a:	e007      	b.n	8006e9c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8006e8c:	4b0b      	ldr	r3, [pc, #44]	; (8006ebc <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8006e8e:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8006e90:	4b0b      	ldr	r3, [pc, #44]	; (8006ec0 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8006e92:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8006e94:	4b0b      	ldr	r3, [pc, #44]	; (8006ec4 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8006e96:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8006e98:	2c00      	cmp	r4, #0
 8006e9a:	d1e8      	bne.n	8006e6e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8006e9c:	bd38      	pop	{r3, r4, r5, pc}
 8006e9e:	bf00      	nop
 8006ea0:	2000fa7c 	.word	0x2000fa7c
 8006ea4:	2000fa80 	.word	0x2000fa80
 8006ea8:	2000fa84 	.word	0x2000fa84
 8006eac:	2000fa88 	.word	0x2000fa88
 8006eb0:	20020ae0 	.word	0x20020ae0
 8006eb4:	20020ae8 	.word	0x20020ae8
 8006eb8:	20020ae4 	.word	0x20020ae4
 8006ebc:	9012f4fc 	.word	0x9012f4fc
 8006ec0:	9012f3bc 	.word	0x9012f3bc
 8006ec4:	9012f7c0 	.word	0x9012f7c0

08006ec8 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8006ec8:	4b04      	ldr	r3, [pc, #16]	; (8006edc <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8006eca:	681b      	ldr	r3, [r3, #0]
 8006ecc:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8006ed0:	4b03      	ldr	r3, [pc, #12]	; (8006ee0 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8006ed2:	681b      	ldr	r3, [r3, #0]
}
 8006ed4:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8006ed8:	4770      	bx	lr
 8006eda:	bf00      	nop
 8006edc:	2000fa84 	.word	0x2000fa84
 8006ee0:	2000fa80 	.word	0x2000fa80

08006ee4 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8006ee4:	2050      	movs	r0, #80	; 0x50
 8006ee6:	4770      	bx	lr

08006ee8 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8006ee8:	4800      	ldr	r0, [pc, #0]	; (8006eec <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8006eea:	4770      	bx	lr
 8006eec:	2000fa8c 	.word	0x2000fa8c

08006ef0 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8006ef0:	b510      	push	{r4, lr}
    &(getFont_verdana_15_4bpp()),
 8006ef2:	f7ff feb7 	bl	8006c64 <_Z23getFont_verdana_15_4bppv>
};
 8006ef6:	4c04      	ldr	r4, [pc, #16]	; (8006f08 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8006ef8:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8006efa:	f7ff feef 	bl	8006cdc <_Z23getFont_verdana_40_4bppv>
};
 8006efe:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8006f00:	f7ff fe74 	bl	8006bec <_Z23getFont_verdana_10_4bppv>
};
 8006f04:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8006f06:	bd10      	pop	{r4, pc}
 8006f08:	2000fa8c 	.word	0x2000fa8c

08006f0c <_ZN25CustomContainerButton_keyD1Ev>:

class CustomContainerButton_key : public CustomContainerButton_keyBase
{
public:
    CustomContainerButton_key();
    virtual ~CustomContainerButton_key() {}
 8006f0c:	4770      	bx	lr
	...

08006f10 <_ZN25CustomContainerButton_key19functionButtonClickEv>:
}

void CustomContainerButton_key::functionButtonClick()
{
	touchgfx_printf("function1 %s\n\r", flexButton_keyboardBuffer);
	data_ContainerTextArea[count_ContainerTextArea] = flexButton_keyboardBuffer[0];
 8006f10:	4b03      	ldr	r3, [pc, #12]	; (8006f20 <_ZN25CustomContainerButton_key19functionButtonClickEv+0x10>)
 8006f12:	f8b0 10ec 	ldrh.w	r1, [r0, #236]	; 0xec
 8006f16:	881a      	ldrh	r2, [r3, #0]
 8006f18:	4b02      	ldr	r3, [pc, #8]	; (8006f24 <_ZN25CustomContainerButton_key19functionButtonClickEv+0x14>)
 8006f1a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
}
 8006f1e:	4770      	bx	lr
 8006f20:	2000fa98 	.word	0x2000fa98
 8006f24:	2000fa9a 	.word	0x2000fa9a

08006f28 <_ZN25CustomContainerButton_key10initializeEv>:
    CustomContainerButton_keyBase::initialize();
 8006f28:	f7fb b8f0 	b.w	800210c <_ZN29CustomContainerButton_keyBase10initializeEv>

08006f2c <_ZN25CustomContainerButton_keyD0Ev>:
 8006f2c:	b510      	push	{r4, lr}
 8006f2e:	f44f 718a 	mov.w	r1, #276	; 0x114
 8006f32:	4604      	mov	r4, r0
 8006f34:	f01d fa51 	bl	80243da <_ZdlPvj>
 8006f38:	4620      	mov	r0, r4
 8006f3a:	bd10      	pop	{r4, pc}

08006f3c <_ZN25CustomContainerButton_keyC1Ev>:
CustomContainerButton_key::CustomContainerButton_key()
 8006f3c:	b510      	push	{r4, lr}
 8006f3e:	4604      	mov	r4, r0
 8006f40:	f7fb fa12 	bl	8002368 <_ZN29CustomContainerButton_keyBaseC1Ev>
 8006f44:	4b01      	ldr	r3, [pc, #4]	; (8006f4c <_ZN25CustomContainerButton_keyC1Ev+0x10>)
 8006f46:	6023      	str	r3, [r4, #0]
}
 8006f48:	4620      	mov	r0, r4
 8006f4a:	bd10      	pop	{r4, pc}
 8006f4c:	08028194 	.word	0x08028194

08006f50 <_ZN23CustomContainerKeyboardD1Ev>:

class CustomContainerKeyboard : public CustomContainerKeyboardBase
{
public:
    CustomContainerKeyboard();
    virtual ~CustomContainerKeyboard() {}
 8006f50:	4770      	bx	lr

08006f52 <_ZN23CustomContainerKeyboard16ClickButtonEnterEv>:
//	customContainer6_2.initialize_my(keyboard_mas[language_type][28]);
//	customContainer7_2.initialize_my(keyboard_mas[language_type][29]);
//	customContainer8_2.initialize_my(keyboard_mas[language_type][30]);
//	customContainer9_2.initialize_my(keyboard_mas[language_type][31]);
//	customContainer10_2.initialize_my(keyboard_mas[language_type][32]);
}
 8006f52:	4770      	bx	lr

08006f54 <_ZN23CustomContainerKeyboard16ClickButtonShiftEv>:
}

//==================================================================================================================
//When flexButton_shift clicked call virtual function
void CustomContainerKeyboard::ClickButtonShift() {
	if (capital_letters) {
 8006f54:	f642 42eb 	movw	r2, #11499	; 0x2ceb
 8006f58:	5c83      	ldrb	r3, [r0, r2]
 8006f5a:	fab3 f383 	clz	r3, r3
 8006f5e:	095b      	lsrs	r3, r3, #5
 8006f60:	5483      	strb	r3, [r0, r2]
	}
	else {
		capital_letters = 1;
	}
	UpdateButtonKeyboard();
}
 8006f62:	4770      	bx	lr

08006f64 <_ZN23CustomContainerKeyboard24ClickButtonCloseKeyboardEv>:

//==================================================================================================================
//When flexButton_close clicked call virtual function
void CustomContainerKeyboard::ClickButtonCloseKeyboard() {
	count_ContainerTextArea = 0;
 8006f64:	4b0d      	ldr	r3, [pc, #52]	; (8006f9c <_ZN23CustomContainerKeyboard24ClickButtonCloseKeyboardEv+0x38>)
void CustomContainerKeyboard::ClickButtonCloseKeyboard() {
 8006f66:	b570      	push	{r4, r5, r6, lr}
	count_ContainerTextArea = 0;
 8006f68:	2500      	movs	r5, #0
 8006f6a:	801d      	strh	r5, [r3, #0]
	setVisible(false);
	invalidate();
 8006f6c:	6803      	ldr	r3, [r0, #0]
        visible = vis;
 8006f6e:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
void CustomContainerKeyboard::ClickButtonCloseKeyboard() {
 8006f72:	4604      	mov	r4, r0
	invalidate();
 8006f74:	695b      	ldr	r3, [r3, #20]
 8006f76:	4798      	blx	r3
        setX(x);
 8006f78:	6823      	ldr	r3, [r4, #0]
 8006f7a:	4629      	mov	r1, r5
 8006f7c:	4620      	mov	r0, r4
 8006f7e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006f80:	4798      	blx	r3
        setY(y);
 8006f82:	6823      	ldr	r3, [r4, #0]
 8006f84:	4620      	mov	r0, r4
 8006f86:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006f88:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8006f8c:	4798      	blx	r3
	setXY(0, 480);
	invalidate();
 8006f8e:	6823      	ldr	r3, [r4, #0]
 8006f90:	4620      	mov	r0, r4
 8006f92:	695b      	ldr	r3, [r3, #20]
}
 8006f94:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	invalidate();
 8006f98:	4718      	bx	r3
 8006f9a:	bf00      	nop
 8006f9c:	2000fa98 	.word	0x2000fa98

08006fa0 <_ZN23CustomContainerKeyboard16ClickButtonSpaceEv>:
}

//==================================================================================================================
//When flexButton_space clicked call virtual function
void CustomContainerKeyboard::ClickButtonSpace() {
	data_ContainerTextArea[count_ContainerTextArea] = flexButton_spaceBuffer[0];
 8006fa0:	f642 2274 	movw	r2, #10868	; 0x2a74
void CustomContainerKeyboard::ClickButtonSpace() {
 8006fa4:	b410      	push	{r4}
	data_ContainerTextArea[count_ContainerTextArea] = flexButton_spaceBuffer[0];
 8006fa6:	5a84      	ldrh	r4, [r0, r2]
 8006fa8:	4a05      	ldr	r2, [pc, #20]	; (8006fc0 <_ZN23CustomContainerKeyboard16ClickButtonSpaceEv+0x20>)
	action1();
 8006faa:	6803      	ldr	r3, [r0, #0]
	data_ContainerTextArea[count_ContainerTextArea] = flexButton_spaceBuffer[0];
 8006fac:	8811      	ldrh	r1, [r2, #0]
 8006fae:	4a05      	ldr	r2, [pc, #20]	; (8006fc4 <_ZN23CustomContainerKeyboard16ClickButtonSpaceEv+0x24>)
	action1();
 8006fb0:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
	data_ContainerTextArea[count_ContainerTextArea] = flexButton_spaceBuffer[0];
 8006fb4:	f822 4011 	strh.w	r4, [r2, r1, lsl #1]
}
 8006fb8:	f85d 4b04 	ldr.w	r4, [sp], #4
	action1();
 8006fbc:	4718      	bx	r3
 8006fbe:	bf00      	nop
 8006fc0:	2000fa98 	.word	0x2000fa98
 8006fc4:	2000fa9a 	.word	0x2000fa9a

08006fc8 <_ZN23CustomContainerKeyboard19ClickButtonLanguageEv>:
	if (language_type == LANG_RUS) {
 8006fc8:	f642 42e9 	movw	r2, #11497	; 0x2ce9
 8006fcc:	5c83      	ldrb	r3, [r0, r2]
 8006fce:	3b01      	subs	r3, #1
 8006fd0:	bf18      	it	ne
 8006fd2:	2301      	movne	r3, #1
 8006fd4:	5483      	strb	r3, [r0, r2]
	flexButton_language.invalidate();
 8006fd6:	f500 5009 	add.w	r0, r0, #8768	; 0x2240
 8006fda:	3034      	adds	r0, #52	; 0x34
 8006fdc:	f00e bbe0 	b.w	80157a0 <_ZNK8touchgfx8Drawable10invalidateEv>

08006fe0 <_ZN23CustomContainerKeyboard17ClickButtonABC123Ev>:

}

//==================================================================================================================
//When flexButton_ABC_123 clicked call virtual function button_ABC_mas
void CustomContainerKeyboard::ClickButtonABC123() {
 8006fe0:	b510      	push	{r4, lr}
	if (keyboard_type == TYPE_ABC) {
 8006fe2:	f642 43ea 	movw	r3, #11498	; 0x2cea
void CustomContainerKeyboard::ClickButtonABC123() {
 8006fe6:	4604      	mov	r4, r0
	if (keyboard_type == TYPE_ABC) {
 8006fe8:	5cc2      	ldrb	r2, [r0, r3]
 8006fea:	2a01      	cmp	r2, #1
 8006fec:	d10f      	bne.n	800700e <_ZN23CustomContainerKeyboard17ClickButtonABC123Ev+0x2e>
		keyboard_type = TYPE_123;
 8006fee:	2200      	movs	r2, #0
 8006ff0:	54c2      	strb	r2, [r0, r3]
		Unicode::snprintf(flexButton_ABC_123Buffer, FLEXBUTTON_ABC_123_SIZE, "123");
 8006ff2:	f500 502a 	add.w	r0, r0, #10880	; 0x2a80
 8006ff6:	4a07      	ldr	r2, [pc, #28]	; (8007014 <_ZN23CustomContainerKeyboard17ClickButtonABC123Ev+0x34>)
 8006ff8:	210a      	movs	r1, #10
 8006ffa:	3030      	adds	r0, #48	; 0x30
 8006ffc:	f011 f8d0 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	}
	else {
		keyboard_type = TYPE_ABC;
		keyboard_mas_from_cp1251_to_utf8((char*) button_ABC_mas[language_type], &flexButton_ABC_123Buffer[0], sizeof(button_ABC_mas)/2);
	}
	flexButton_ABC_123.invalidate();
 8007000:	f504 5025 	add.w	r0, r4, #10560	; 0x2940
 8007004:	3024      	adds	r0, #36	; 0x24
	UpdateButtonKeyboard();
}
 8007006:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	flexButton_ABC_123.invalidate();
 800700a:	f00e bbc9 	b.w	80157a0 <_ZNK8touchgfx8Drawable10invalidateEv>
		keyboard_type = TYPE_ABC;
 800700e:	2201      	movs	r2, #1
 8007010:	54c2      	strb	r2, [r0, r3]
}
 8007012:	e7f5      	b.n	8007000 <_ZN23CustomContainerKeyboard17ClickButtonABC123Ev+0x20>
 8007014:	08028228 	.word	0x08028228

08007018 <_ZN23CustomContainerKeyboardD0Ev>:
 8007018:	b510      	push	{r4, lr}
 800701a:	f642 61a8 	movw	r1, #11944	; 0x2ea8
 800701e:	4604      	mov	r4, r0
 8007020:	f01d f9db 	bl	80243da <_ZdlPvj>
 8007024:	4620      	mov	r0, r4
 8007026:	bd10      	pop	{r4, pc}

08007028 <_ZN23CustomContainerKeyboardC1Ev>:
CustomContainerKeyboard::CustomContainerKeyboard() {
 8007028:	b538      	push	{r3, r4, r5, lr}
 800702a:	4604      	mov	r4, r0
 800702c:	f7fb fc9a 	bl	8002964 <_ZN27CustomContainerKeyboardBaseC1Ev>
 8007030:	4b13      	ldr	r3, [pc, #76]	; (8007080 <_ZN23CustomContainerKeyboardC1Ev+0x58>)
 8007032:	6023      	str	r3, [r4, #0]
 8007034:	f642 43e8 	movw	r3, #11496	; 0x2ce8
 8007038:	4a12      	ldr	r2, [pc, #72]	; (8007084 <_ZN23CustomContainerKeyboardC1Ev+0x5c>)
 800703a:	50e2      	str	r2, [r4, r3]
 800703c:	f642 53f4 	movw	r3, #11764	; 0x2df4
 8007040:	2500      	movs	r5, #0
 8007042:	18e2      	adds	r2, r4, r3
 8007044:	50e5      	str	r5, [r4, r3]
 8007046:	f642 53fa 	movw	r3, #11770	; 0x2dfa
 800704a:	8095      	strh	r5, [r2, #4]
 800704c:	18e2      	adds	r2, r4, r3
 800704e:	50e5      	str	r5, [r4, r3]
 8007050:	4629      	mov	r1, r5
 8007052:	8095      	strh	r5, [r2, #4]
 8007054:	f504 5038 	add.w	r0, r4, #11776	; 0x2e00
 8007058:	2242      	movs	r2, #66	; 0x42
 800705a:	f01d fc93 	bl	8024984 <memset>
 800705e:	f504 5039 	add.w	r0, r4, #11840	; 0x2e40
 8007062:	4629      	mov	r1, r5
 8007064:	2242      	movs	r2, #66	; 0x42
 8007066:	3002      	adds	r0, #2
 8007068:	f01d fc8c 	bl	8024984 <memset>
 800706c:	f504 503a 	add.w	r0, r4, #11904	; 0x2e80
 8007070:	2221      	movs	r2, #33	; 0x21
 8007072:	4629      	mov	r1, r5
 8007074:	3004      	adds	r0, #4
 8007076:	f01d fc85 	bl	8024984 <memset>
}
 800707a:	4620      	mov	r0, r4
 800707c:	bd38      	pop	{r3, r4, r5, pc}
 800707e:	bf00      	nop
 8007080:	08028234 	.word	0x08028234
 8007084:	0101001e 	.word	0x0101001e

08007088 <_ZN23CustomContainerKeyboard10UpdateTextEv>:
	Unicode::snprintf(textArea1Buffer, count_ContainerTextArea + 1,
 8007088:	4b09      	ldr	r3, [pc, #36]	; (80070b0 <_ZN23CustomContainerKeyboard10UpdateTextEv+0x28>)
 800708a:	4a0a      	ldr	r2, [pc, #40]	; (80070b4 <_ZN23CustomContainerKeyboard10UpdateTextEv+0x2c>)
 800708c:	8819      	ldrh	r1, [r3, #0]
void CustomContainerKeyboard::UpdateText() {
 800708e:	b510      	push	{r4, lr}
	Unicode::snprintf(textArea1Buffer, count_ContainerTextArea + 1,
 8007090:	3101      	adds	r1, #1
void CustomContainerKeyboard::UpdateText() {
 8007092:	4604      	mov	r4, r0
	Unicode::snprintf(textArea1Buffer, count_ContainerTextArea + 1,
 8007094:	f500 5028 	add.w	r0, r0, #10752	; 0x2a00
 8007098:	b289      	uxth	r1, r1
 800709a:	3024      	adds	r0, #36	; 0x24
 800709c:	f011 f86a 	bl	8018174 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
	textArea1.invalidate();
 80070a0:	f504 5002 	add.w	r0, r4, #8320	; 0x2080
 80070a4:	3038      	adds	r0, #56	; 0x38
}
 80070a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textArea1.invalidate();
 80070aa:	f00e bb79 	b.w	80157a0 <_ZNK8touchgfx8Drawable10invalidateEv>
 80070ae:	bf00      	nop
 80070b0:	2000fa98 	.word	0x2000fa98
 80070b4:	2000fa9a 	.word	0x2000fa9a

080070b8 <_ZN23CustomContainerKeyboard10initializeEv>:
void CustomContainerKeyboard::initialize() {
 80070b8:	b510      	push	{r4, lr}
 80070ba:	4604      	mov	r4, r0
	CustomContainerKeyboardBase::initialize();
 80070bc:	f7fb fad5 	bl	800266a <_ZN27CustomContainerKeyboardBase10initializeEv>
	count_ContainerTextArea = 0; // Очистка буфера обмена элемента контейнера CustomContainerKeyboard
 80070c0:	4b05      	ldr	r3, [pc, #20]	; (80070d8 <_ZN23CustomContainerKeyboard10initializeEv+0x20>)
 80070c2:	2200      	movs	r2, #0
 80070c4:	801a      	strh	r2, [r3, #0]
	capital_letters = 1;			// Включение заглавных букв
 80070c6:	f642 43eb 	movw	r3, #11499	; 0x2ceb
 80070ca:	2201      	movs	r2, #1
 80070cc:	54e2      	strb	r2, [r4, r3]
	UpdateText();
 80070ce:	4620      	mov	r0, r4
}
 80070d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	UpdateText();
 80070d4:	f7ff bfd8 	b.w	8007088 <_ZN23CustomContainerKeyboard10UpdateTextEv>
 80070d8:	2000fa98 	.word	0x2000fa98

080070dc <_ZN23CustomContainerKeyboard17ClickButtonDelPreEv>:
void CustomContainerKeyboard::ClickButtonDelPre() {
 80070dc:	b538      	push	{r3, r4, r5, lr}
	if (count_ContainerTextArea) {
 80070de:	4d0a      	ldr	r5, [pc, #40]	; (8007108 <_ZN23CustomContainerKeyboard17ClickButtonDelPreEv+0x2c>)
 80070e0:	882b      	ldrh	r3, [r5, #0]
void CustomContainerKeyboard::ClickButtonDelPre() {
 80070e2:	4604      	mov	r4, r0
	if (count_ContainerTextArea) {
 80070e4:	b923      	cbnz	r3, 80070f0 <_ZN23CustomContainerKeyboard17ClickButtonDelPreEv+0x14>
	if ((count_ContainerTextArea == 0) && (capital_letters == 0)) {
 80070e6:	f642 43eb 	movw	r3, #11499	; 0x2ceb
 80070ea:	5ce2      	ldrb	r2, [r4, r3]
 80070ec:	b142      	cbz	r2, 8007100 <_ZN23CustomContainerKeyboard17ClickButtonDelPreEv+0x24>
}
 80070ee:	bd38      	pop	{r3, r4, r5, pc}
		count_ContainerTextArea -= 1;
 80070f0:	3b01      	subs	r3, #1
 80070f2:	802b      	strh	r3, [r5, #0]
		UpdateText();
 80070f4:	f7ff ffc8 	bl	8007088 <_ZN23CustomContainerKeyboard10UpdateTextEv>
	if ((count_ContainerTextArea == 0) && (capital_letters == 0)) {
 80070f8:	882b      	ldrh	r3, [r5, #0]
 80070fa:	2b00      	cmp	r3, #0
 80070fc:	d1f7      	bne.n	80070ee <_ZN23CustomContainerKeyboard17ClickButtonDelPreEv+0x12>
 80070fe:	e7f2      	b.n	80070e6 <_ZN23CustomContainerKeyboard17ClickButtonDelPreEv+0xa>
		capital_letters = 1;
 8007100:	2201      	movs	r2, #1
 8007102:	54e2      	strb	r2, [r4, r3]
}
 8007104:	e7f3      	b.n	80070ee <_ZN23CustomContainerKeyboard17ClickButtonDelPreEv+0x12>
 8007106:	bf00      	nop
 8007108:	2000fa98 	.word	0x2000fa98

0800710c <_ZN23CustomContainerKeyboard17ClickButtonDelAllEv>:
	count_ContainerTextArea = 0;
 800710c:	4b04      	ldr	r3, [pc, #16]	; (8007120 <_ZN23CustomContainerKeyboard17ClickButtonDelAllEv+0x14>)
 800710e:	2200      	movs	r2, #0
 8007110:	801a      	strh	r2, [r3, #0]
	capital_letters = 1;
 8007112:	f642 43eb 	movw	r3, #11499	; 0x2ceb
 8007116:	2201      	movs	r2, #1
 8007118:	54c2      	strb	r2, [r0, r3]
	UpdateText();
 800711a:	f7ff bfb5 	b.w	8007088 <_ZN23CustomContainerKeyboard10UpdateTextEv>
 800711e:	bf00      	nop
 8007120:	2000fa98 	.word	0x2000fa98

08007124 <_ZN23CustomContainerKeyboard7action1Ev>:

//==================================================================================================================
void CustomContainerKeyboard::action1() {
//	textArea1Buffer[] = data_ContainerTextArea[];
	count_ContainerTextArea++;
 8007124:	4a06      	ldr	r2, [pc, #24]	; (8007140 <_ZN23CustomContainerKeyboard7action1Ev+0x1c>)
 8007126:	8813      	ldrh	r3, [r2, #0]
 8007128:	3301      	adds	r3, #1
 800712a:	b29b      	uxth	r3, r3
	if (count_ContainerTextArea == 1) {
 800712c:	2b01      	cmp	r3, #1
	count_ContainerTextArea++;
 800712e:	8013      	strh	r3, [r2, #0]
		capital_letters = 0;
 8007130:	bf02      	ittt	eq
 8007132:	f642 43eb 	movweq	r3, #11499	; 0x2ceb
 8007136:	2200      	moveq	r2, #0
 8007138:	54c2      	strbeq	r2, [r0, r3]
	if (count_ContainerTextArea == count_Container) {
		count_ContainerTextArea = (count_Container);
	}
	//-----------------------------------------------------------

	UpdateText();
 800713a:	f7ff bfa5 	b.w	8007088 <_ZN23CustomContainerKeyboard10UpdateTextEv>
 800713e:	bf00      	nop
 8007140:	2000fa98 	.word	0x2000fa98

08007144 <_ZN27CustomContainerKeyboard_NumD1Ev>:

class CustomContainerKeyboard_Num : public CustomContainerKeyboard_NumBase
{
public:
    CustomContainerKeyboard_Num();
    virtual ~CustomContainerKeyboard_Num() {}
 8007144:	4770      	bx	lr

08007146 <_ZN27CustomContainerKeyboard_Num16ClickButtonEnterEv>:
//	customContainerButton_key8.initialize_my(keyboard_mas[7]);
//	customContainerButton_key9.initialize_my(keyboard_mas[8]);
//	customContainerButton_key10.initialize_my(keyboard_mas[9]);
//	customContainerButton_key11.initialize_my(keyboard_mas[10]);
//	customContainerButton_key12.initialize_my(keyboard_mas[11]);
}
 8007146:	4770      	bx	lr

08007148 <_ZN27CustomContainerKeyboard_Num24ClickButtonCloseKeyboardEv>:
}

//==================================================================================================================
//When flexButton_close clicked call virtual function
void CustomContainerKeyboard_Num::ClickButtonCloseKeyboard() {
	count_ContainerTextArea = 0;
 8007148:	4a0c      	ldr	r2, [pc, #48]	; (800717c <_ZN27CustomContainerKeyboard_Num24ClickButtonCloseKeyboardEv+0x34>)
 800714a:	2300      	movs	r3, #0
void CustomContainerKeyboard_Num::ClickButtonCloseKeyboard() {
 800714c:	b510      	push	{r4, lr}
	count_ContainerTextArea = 0;
 800714e:	8013      	strh	r3, [r2, #0]
        visible = vis;
 8007150:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
	setVisible(false);
	invalidate();
 8007154:	6803      	ldr	r3, [r0, #0]
void CustomContainerKeyboard_Num::ClickButtonCloseKeyboard() {
 8007156:	4604      	mov	r4, r0
	invalidate();
 8007158:	695b      	ldr	r3, [r3, #20]
 800715a:	4798      	blx	r3
        setX(x);
 800715c:	6823      	ldr	r3, [r4, #0]
 800715e:	4908      	ldr	r1, [pc, #32]	; (8007180 <_ZN27CustomContainerKeyboard_Num24ClickButtonCloseKeyboardEv+0x38>)
 8007160:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007162:	4620      	mov	r0, r4
 8007164:	4798      	blx	r3
        setY(y);
 8007166:	6823      	ldr	r3, [r4, #0]
 8007168:	4620      	mov	r0, r4
 800716a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800716c:	21b4      	movs	r1, #180	; 0xb4
 800716e:	4798      	blx	r3
	setXY(-270, 180);
	invalidate();
 8007170:	6823      	ldr	r3, [r4, #0]
 8007172:	4620      	mov	r0, r4
 8007174:	695b      	ldr	r3, [r3, #20]
}
 8007176:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	invalidate();
 800717a:	4718      	bx	r3
 800717c:	2000fa98 	.word	0x2000fa98
 8007180:	fffffef2 	.word	0xfffffef2

08007184 <_ZN27CustomContainerKeyboard_Num10initializeEv>:
    CustomContainerKeyboard_NumBase::initialize();
 8007184:	f7fc bcd5 	b.w	8003b32 <_ZN31CustomContainerKeyboard_NumBase10initializeEv>

08007188 <_ZN27CustomContainerKeyboard_NumD0Ev>:
 8007188:	b510      	push	{r4, lr}
 800718a:	f241 01bc 	movw	r1, #4284	; 0x10bc
 800718e:	4604      	mov	r4, r0
 8007190:	f01d f923 	bl	80243da <_ZdlPvj>
 8007194:	4620      	mov	r0, r4
 8007196:	bd10      	pop	{r4, pc}

08007198 <_ZN27CustomContainerKeyboard_NumC1Ev>:
CustomContainerKeyboard_Num::CustomContainerKeyboard_Num()
 8007198:	b510      	push	{r4, lr}
 800719a:	4604      	mov	r4, r0
 800719c:	f7fc fd20 	bl	8003be0 <_ZN31CustomContainerKeyboard_NumBaseC1Ev>
 80071a0:	4b08      	ldr	r3, [pc, #32]	; (80071c4 <_ZN27CustomContainerKeyboard_NumC1Ev+0x2c>)
 80071a2:	6023      	str	r3, [r4, #0]
 80071a4:	f241 03ac 	movw	r3, #4268	; 0x10ac
 80071a8:	2205      	movs	r2, #5
 80071aa:	54e2      	strb	r2, [r4, r3]
 80071ac:	4a06      	ldr	r2, [pc, #24]	; (80071c8 <_ZN27CustomContainerKeyboard_NumC1Ev+0x30>)
 80071ae:	f241 00ad 	movw	r0, #4269	; 0x10ad
 80071b2:	1821      	adds	r1, r4, r0
 80071b4:	6813      	ldr	r3, [r2, #0]
 80071b6:	5023      	str	r3, [r4, r0]
 80071b8:	6853      	ldr	r3, [r2, #4]
 80071ba:	604b      	str	r3, [r1, #4]
 80071bc:	6893      	ldr	r3, [r2, #8]
 80071be:	608b      	str	r3, [r1, #8]
}
 80071c0:	4620      	mov	r0, r4
 80071c2:	bd10      	pop	{r4, pc}
 80071c4:	080282ec 	.word	0x080282ec
 80071c8:	08026794 	.word	0x08026794

080071cc <_ZN27CustomContainerKeyboard_Num10UpdateTextEv>:
void CustomContainerKeyboard_Num::UpdateText() {
 80071cc:	b538      	push	{r3, r4, r5, lr}
	Unicode::snprintf(textArea1Buffer, count_ContainerTextArea + 1,
 80071ce:	4d14      	ldr	r5, [pc, #80]	; (8007220 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv+0x54>)
 80071d0:	4a14      	ldr	r2, [pc, #80]	; (8007224 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv+0x58>)
 80071d2:	8829      	ldrh	r1, [r5, #0]
 80071d4:	3101      	adds	r1, #1
void CustomContainerKeyboard_Num::UpdateText() {
 80071d6:	4604      	mov	r4, r0
	Unicode::snprintf(textArea1Buffer, count_ContainerTextArea + 1,
 80071d8:	b289      	uxth	r1, r1
 80071da:	f600 70c4 	addw	r0, r0, #4036	; 0xfc4
 80071de:	f010 ffc9 	bl	8018174 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
	if(count_ContainerTextArea == 1){
 80071e2:	882b      	ldrh	r3, [r5, #0]
 80071e4:	2b01      	cmp	r3, #1
 80071e6:	d113      	bne.n	8007210 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv+0x44>
		if((textArea1Buffer[1] == button_123_mas[9]) || (textArea1Buffer[1] == button_123_mas[11])){
 80071e8:	f241 02b6 	movw	r2, #4278	; 0x10b6
 80071ec:	f8b4 3fc6 	ldrh.w	r3, [r4, #4038]	; 0xfc6
 80071f0:	5ca2      	ldrb	r2, [r4, r2]
 80071f2:	429a      	cmp	r2, r3
 80071f4:	d004      	beq.n	8007200 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv+0x34>
 80071f6:	f241 02b8 	movw	r2, #4280	; 0x10b8
 80071fa:	5ca2      	ldrb	r2, [r4, r2]
 80071fc:	429a      	cmp	r2, r3
 80071fe:	d109      	bne.n	8007214 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv+0x48>
			count_ContainerTextArea = 0;
 8007200:	2300      	movs	r3, #0
 8007202:	802b      	strh	r3, [r5, #0]
		textArea1Buffer[0] = button_123_mas[10];
 8007204:	f241 03b7 	movw	r3, #4279	; 0x10b7
 8007208:	5ce3      	ldrb	r3, [r4, r3]
 800720a:	f8a4 3fc4 	strh.w	r3, [r4, #4036]	; 0xfc4
 800720e:	e001      	b.n	8007214 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv+0x48>
	if(count_ContainerTextArea == 0){
 8007210:	2b00      	cmp	r3, #0
 8007212:	d0f7      	beq.n	8007204 <_ZN27CustomContainerKeyboard_Num10UpdateTextEv+0x38>
	textArea1.invalidate();
 8007214:	f504 70ec 	add.w	r0, r4, #472	; 0x1d8
}
 8007218:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	textArea1.invalidate();
 800721c:	f00e bac0 	b.w	80157a0 <_ZNK8touchgfx8Drawable10invalidateEv>
 8007220:	2000fa98 	.word	0x2000fa98
 8007224:	2000fa9a 	.word	0x2000fa9a

08007228 <_ZN27CustomContainerKeyboard_Num17ClickButtonDelPreEv>:
	if (count_ContainerTextArea) {
 8007228:	4a03      	ldr	r2, [pc, #12]	; (8007238 <_ZN27CustomContainerKeyboard_Num17ClickButtonDelPreEv+0x10>)
 800722a:	8813      	ldrh	r3, [r2, #0]
 800722c:	b11b      	cbz	r3, 8007236 <_ZN27CustomContainerKeyboard_Num17ClickButtonDelPreEv+0xe>
		count_ContainerTextArea -= 1;
 800722e:	3b01      	subs	r3, #1
 8007230:	8013      	strh	r3, [r2, #0]
		UpdateText();
 8007232:	f7ff bfcb 	b.w	80071cc <_ZN27CustomContainerKeyboard_Num10UpdateTextEv>
}
 8007236:	4770      	bx	lr
 8007238:	2000fa98 	.word	0x2000fa98

0800723c <_ZN27CustomContainerKeyboard_Num7action1Ev>:

//==================================================================================================================
void CustomContainerKeyboard_Num::action1() {
 800723c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
// textArea1Buffer[] = data_ContainerTextArea[];
	count_ContainerTextArea++;
 800723e:	4d3a      	ldr	r5, [pc, #232]	; (8007328 <_ZN27CustomContainerKeyboard_Num7action1Ev+0xec>)

	//------------------------------------------------------------------------------
	// Проверка на одну запятую
	if((data_ContainerTextArea[count_ContainerTextArea - 1] == button_123_mas[11])){
 8007240:	4e3a      	ldr	r6, [pc, #232]	; (800732c <_ZN27CustomContainerKeyboard_Num7action1Ev+0xf0>)
	count_ContainerTextArea++;
 8007242:	882b      	ldrh	r3, [r5, #0]
	if((data_ContainerTextArea[count_ContainerTextArea - 1] == button_123_mas[11])){
 8007244:	f241 02b8 	movw	r2, #4280	; 0x10b8
	count_ContainerTextArea++;
 8007248:	3301      	adds	r3, #1
 800724a:	b29b      	uxth	r3, r3
	if((data_ContainerTextArea[count_ContainerTextArea - 1] == button_123_mas[11])){
 800724c:	5c81      	ldrb	r1, [r0, r2]
	count_ContainerTextArea++;
 800724e:	802b      	strh	r3, [r5, #0]
	if((data_ContainerTextArea[count_ContainerTextArea - 1] == button_123_mas[11])){
 8007250:	1e5a      	subs	r2, r3, #1
void CustomContainerKeyboard_Num::action1() {
 8007252:	4604      	mov	r4, r0
	if((data_ContainerTextArea[count_ContainerTextArea - 1] == button_123_mas[11])){
 8007254:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8007258:	428a      	cmp	r2, r1
 800725a:	460f      	mov	r7, r1
 800725c:	d116      	bne.n	800728c <_ZN27CustomContainerKeyboard_Num7action1Ev+0x50>
		if(count_ContainerTextArea == 1){
 800725e:	2b01      	cmp	r3, #1
 8007260:	d107      	bne.n	8007272 <_ZN27CustomContainerKeyboard_Num7action1Ev+0x36>
			data_ContainerTextArea[1] = data_ContainerTextArea[0];
 8007262:	8833      	ldrh	r3, [r6, #0]
 8007264:	8073      	strh	r3, [r6, #2]
			data_ContainerTextArea[0] = button_123_mas[10];
 8007266:	f241 03b7 	movw	r3, #4279	; 0x10b7
 800726a:	5cc3      	ldrb	r3, [r0, r3]
 800726c:	8033      	strh	r3, [r6, #0]
			count_ContainerTextArea += 1;
 800726e:	2302      	movs	r3, #2
 8007270:	802b      	strh	r3, [r5, #0]
		}
		char * str_no = (char*)memchr((char*)&textArea1Buffer[0], button_123_mas[11], 10);
 8007272:	220a      	movs	r2, #10
 8007274:	f604 70c4 	addw	r0, r4, #4036	; 0xfc4
 8007278:	9101      	str	r1, [sp, #4]
 800727a:	f7f8 ffc1 	bl	8000200 <memchr>
		if(str_no != NULL){
 800727e:	9901      	ldr	r1, [sp, #4]
 8007280:	b120      	cbz	r0, 800728c <_ZN27CustomContainerKeyboard_Num7action1Ev+0x50>
			count_ContainerTextArea -= 1;
 8007282:	882b      	ldrh	r3, [r5, #0]
 8007284:	3b01      	subs	r3, #1
 8007286:	802b      	strh	r3, [r5, #0]
	}

	UpdateText();


}
 8007288:	b003      	add	sp, #12
 800728a:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if((textArea1Buffer[0] == button_123_mas[10]) &&
 800728c:	f241 03b7 	movw	r3, #4279	; 0x10b7
 8007290:	5ce2      	ldrb	r2, [r4, r3]
 8007292:	f8b4 3fc4 	ldrh.w	r3, [r4, #4036]	; 0xfc4
 8007296:	4293      	cmp	r3, r2
 8007298:	d10b      	bne.n	80072b2 <_ZN27CustomContainerKeyboard_Num7action1Ev+0x76>
 800729a:	882b      	ldrh	r3, [r5, #0]
 800729c:	1e58      	subs	r0, r3, #1
 800729e:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 80072a2:	42b8      	cmp	r0, r7
 80072a4:	d005      	beq.n	80072b2 <_ZN27CustomContainerKeyboard_Num7action1Ev+0x76>
			(data_ContainerTextArea[count_ContainerTextArea - 1] != button_123_mas[11]) &&
 80072a6:	2b02      	cmp	r3, #2
			data_ContainerTextArea[0] = data_ContainerTextArea[1];
 80072a8:	bf01      	itttt	eq
 80072aa:	8873      	ldrheq	r3, [r6, #2]
 80072ac:	8033      	strheq	r3, [r6, #0]
		count_ContainerTextArea = 1;
 80072ae:	2301      	moveq	r3, #1
 80072b0:	802b      	strheq	r3, [r5, #0]
	if((data_ContainerTextArea[count_ContainerTextArea - 1] == button_123_mas[9]) && (count_ContainerTextArea == 1)){
 80072b2:	8828      	ldrh	r0, [r5, #0]
 80072b4:	f241 03b6 	movw	r3, #4278	; 0x10b6
 80072b8:	1e47      	subs	r7, r0, #1
 80072ba:	5ce3      	ldrb	r3, [r4, r3]
 80072bc:	f836 7017 	ldrh.w	r7, [r6, r7, lsl #1]
 80072c0:	429f      	cmp	r7, r3
 80072c2:	d104      	bne.n	80072ce <_ZN27CustomContainerKeyboard_Num7action1Ev+0x92>
 80072c4:	2801      	cmp	r0, #1
		data_ContainerTextArea[1] = button_123_mas[10];
 80072c6:	bf02      	ittt	eq
 80072c8:	8072      	strheq	r2, [r6, #2]
		count_ContainerTextArea += 1;
 80072ca:	2202      	moveq	r2, #2
 80072cc:	802a      	strheq	r2, [r5, #0]
	if((data_ContainerTextArea[count_ContainerTextArea - 1] == button_123_mas[9]) && (count_ContainerTextArea > 1)){
 80072ce:	882f      	ldrh	r7, [r5, #0]
 80072d0:	1e7a      	subs	r2, r7, #1
 80072d2:	f836 0012 	ldrh.w	r0, [r6, r2, lsl #1]
 80072d6:	4298      	cmp	r0, r3
 80072d8:	d103      	bne.n	80072e2 <_ZN27CustomContainerKeyboard_Num7action1Ev+0xa6>
 80072da:	2f01      	cmp	r7, #1
 80072dc:	d901      	bls.n	80072e2 <_ZN27CustomContainerKeyboard_Num7action1Ev+0xa6>
		count_ContainerTextArea -= 1;
 80072de:	802a      	strh	r2, [r5, #0]
		return;
 80072e0:	e7d2      	b.n	8007288 <_ZN27CustomContainerKeyboard_Num7action1Ev+0x4c>
	count_Container = 5;
 80072e2:	2005      	movs	r0, #5
 80072e4:	f241 02ac 	movw	r2, #4268	; 0x10ac
	if (count_ContainerTextArea > 5) {
 80072e8:	4287      	cmp	r7, r0
	count_Container = 5;
 80072ea:	54a0      	strb	r0, [r4, r2]
	if (count_ContainerTextArea > 5) {
 80072ec:	d915      	bls.n	800731a <_ZN27CustomContainerKeyboard_Num7action1Ev+0xde>
		if(data_ContainerTextArea[0] == button_123_mas[9]){
 80072ee:	8830      	ldrh	r0, [r6, #0]
 80072f0:	4298      	cmp	r0, r3
			count_Container += 1;
 80072f2:	bf04      	itt	eq
 80072f4:	2306      	moveq	r3, #6
 80072f6:	54a3      	strbeq	r3, [r4, r2]
		char * str_no = (char*)memchr((char*)&textArea1Buffer[0], button_123_mas[11], 10);
 80072f8:	f604 70c4 	addw	r0, r4, #4036	; 0xfc4
 80072fc:	220a      	movs	r2, #10
 80072fe:	f7f8 ff7f 	bl	8000200 <memchr>
		if(str_no != NULL){
 8007302:	b120      	cbz	r0, 800730e <_ZN27CustomContainerKeyboard_Num7action1Ev+0xd2>
			count_Container += 1;
 8007304:	f241 02ac 	movw	r2, #4268	; 0x10ac
 8007308:	5ca3      	ldrb	r3, [r4, r2]
 800730a:	3301      	adds	r3, #1
 800730c:	54a3      	strb	r3, [r4, r2]
		if(count_ContainerTextArea >= count_Container){
 800730e:	f241 03ac 	movw	r3, #4268	; 0x10ac
 8007312:	5ce3      	ldrb	r3, [r4, r3]
 8007314:	429f      	cmp	r7, r3
			count_ContainerTextArea = (count_Container);
 8007316:	bf28      	it	cs
 8007318:	802b      	strhcs	r3, [r5, #0]
	UpdateText();
 800731a:	4620      	mov	r0, r4
}
 800731c:	b003      	add	sp, #12
 800731e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	UpdateText();
 8007322:	f7ff bf53 	b.w	80071cc <_ZN27CustomContainerKeyboard_Num10UpdateTextEv>
 8007326:	bf00      	nop
 8007328:	2000fa98 	.word	0x2000fa98
 800732c:	2000fa9a 	.word	0x2000fa9a

08007330 <_ZN25CustomContainerScrollListD1Ev>:

class CustomContainerScrollList : public CustomContainerScrollListBase
{
public:
    CustomContainerScrollList();
    virtual ~CustomContainerScrollList() {}
 8007330:	4770      	bx	lr

08007332 <_ZN25CustomContainerScrollList10initializeEv>:

}

void CustomContainerScrollList::initialize()
{
    CustomContainerScrollListBase::initialize();
 8007332:	f7fc bfa2 	b.w	800427a <_ZN29CustomContainerScrollListBase10initializeEv>

08007336 <_ZN25CustomContainerScrollListD0Ev>:
 8007336:	b510      	push	{r4, lr}
 8007338:	f44f 718a 	mov.w	r1, #276	; 0x114
 800733c:	4604      	mov	r4, r0
 800733e:	f01d f84c 	bl	80243da <_ZdlPvj>
 8007342:	4620      	mov	r0, r4
 8007344:	bd10      	pop	{r4, pc}
	...

08007348 <_ZN25CustomContainerScrollListC1Ev>:
CustomContainerScrollList::CustomContainerScrollList()
 8007348:	b510      	push	{r4, lr}
 800734a:	4604      	mov	r4, r0
 800734c:	f7fc ff9e 	bl	800428c <_ZN29CustomContainerScrollListBaseC1Ev>
 8007350:	4b01      	ldr	r3, [pc, #4]	; (8007358 <_ZN25CustomContainerScrollListC1Ev+0x10>)
 8007352:	6023      	str	r3, [r4, #0]
}
 8007354:	4620      	mov	r0, r4
 8007356:	bd10      	pop	{r4, pc}
 8007358:	08028390 	.word	0x08028390

0800735c <_ZN23CustomContainerTableLogD1Ev>:

class CustomContainerTableLog : public CustomContainerTableLogBase
{
public:
    CustomContainerTableLog();
    virtual ~CustomContainerTableLog() {}
 800735c:	4770      	bx	lr

0800735e <_ZN23CustomContainerTableLog10initializeEv>:

}

void CustomContainerTableLog::initialize()
{
    CustomContainerTableLogBase::initialize();
 800735e:	f7fd b83c 	b.w	80043da <_ZN27CustomContainerTableLogBase10initializeEv>

08007362 <_ZN23CustomContainerTableLogD0Ev>:
 8007362:	b510      	push	{r4, lr}
 8007364:	f44f 61ba 	mov.w	r1, #1488	; 0x5d0
 8007368:	4604      	mov	r4, r0
 800736a:	f01d f836 	bl	80243da <_ZdlPvj>
 800736e:	4620      	mov	r0, r4
 8007370:	bd10      	pop	{r4, pc}
	...

08007374 <_ZN23CustomContainerTableLogC1Ev>:
CustomContainerTableLog::CustomContainerTableLog()
 8007374:	b570      	push	{r4, r5, r6, lr}
 8007376:	4604      	mov	r4, r0
 8007378:	f7fd f86c 	bl	8004454 <_ZN27CustomContainerTableLogBaseC1Ev>
 800737c:	4b2b      	ldr	r3, [pc, #172]	; (800742c <_ZN23CustomContainerTableLogC1Ev+0xb8>)
 800737e:	6023      	str	r3, [r4, #0]
 8007380:	2228      	movs	r2, #40	; 0x28
 8007382:	2100      	movs	r1, #0
 8007384:	f204 40fe 	addw	r0, r4, #1278	; 0x4fe
 8007388:	f01d fafc 	bl	8024984 <memset>
 800738c:	f240 431f 	movw	r3, #1055	; 0x41f
 8007390:	f8a4 34fe 	strh.w	r3, [r4, #1278]	; 0x4fe
 8007394:	4b26      	ldr	r3, [pc, #152]	; (8007430 <_ZN23CustomContainerTableLogC1Ev+0xbc>)
 8007396:	f8c4 3500 	str.w	r3, [r4, #1280]	; 0x500
 800739a:	f503 2350 	add.w	r3, r3, #851968	; 0xd0000
 800739e:	3306      	adds	r3, #6
 80073a0:	f8c4 3504 	str.w	r3, [r4, #1284]	; 0x504
 80073a4:	2228      	movs	r2, #40	; 0x28
 80073a6:	2100      	movs	r1, #0
 80073a8:	f204 5026 	addw	r0, r4, #1318	; 0x526
 80073ac:	f01d faea 	bl	8024984 <memset>
 80073b0:	234b      	movs	r3, #75	; 0x4b
 80073b2:	f8a4 3528 	strh.w	r3, [r4, #1320]	; 0x528
 80073b6:	f240 431e 	movw	r3, #1054	; 0x41e
 80073ba:	f8a4 353a 	strh.w	r3, [r4, #1338]	; 0x53a
 80073be:	4b1d      	ldr	r3, [pc, #116]	; (8007434 <_ZN23CustomContainerTableLogC1Ev+0xc0>)
 80073c0:	f8c4 353c 	str.w	r3, [r4, #1340]	; 0x53c
 80073c4:	f5a3 235f 	sub.w	r3, r3, #913408	; 0xdf000
 80073c8:	264f      	movs	r6, #79	; 0x4f
 80073ca:	f6a3 73e6 	subw	r3, r3, #4070	; 0xfe6
 80073ce:	f8c4 3540 	str.w	r3, [r4, #1344]	; 0x540
 80073d2:	f8a4 6526 	strh.w	r6, [r4, #1318]	; 0x526
 80073d6:	2228      	movs	r2, #40	; 0x28
 80073d8:	2100      	movs	r1, #0
 80073da:	f204 504e 	addw	r0, r4, #1358	; 0x54e
 80073de:	f01d fad1 	bl	8024984 <memset>
 80073e2:	234c      	movs	r3, #76	; 0x4c
 80073e4:	f8a4 354e 	strh.w	r3, [r4, #1358]	; 0x54e
 80073e8:	4b13      	ldr	r3, [pc, #76]	; (8007438 <_ZN23CustomContainerTableLogC1Ev+0xc4>)
 80073ea:	f8c4 3550 	str.w	r3, [r4, #1360]	; 0x550
 80073ee:	2356      	movs	r3, #86	; 0x56
 80073f0:	f8a4 3562 	strh.w	r3, [r4, #1378]	; 0x562
 80073f4:	4b11      	ldr	r3, [pc, #68]	; (800743c <_ZN23CustomContainerTableLogC1Ev+0xc8>)
 80073f6:	f8c4 3564 	str.w	r3, [r4, #1380]	; 0x564
 80073fa:	2500      	movs	r5, #0
 80073fc:	234e      	movs	r3, #78	; 0x4e
 80073fe:	f8a4 3576 	strh.w	r3, [r4, #1398]	; 0x576
 8007402:	4629      	mov	r1, r5
 8007404:	f8c4 557a 	str.w	r5, [r4, #1402]	; 0x57a
 8007408:	f8a4 557e 	strh.w	r5, [r4, #1406]	; 0x57e
 800740c:	f8a4 6578 	strh.w	r6, [r4, #1400]	; 0x578
 8007410:	2228      	movs	r2, #40	; 0x28
 8007412:	f504 60b0 	add.w	r0, r4, #1408	; 0x580
 8007416:	f01d fab5 	bl	8024984 <memset>
 800741a:	2228      	movs	r2, #40	; 0x28
 800741c:	4629      	mov	r1, r5
 800741e:	f504 60b5 	add.w	r0, r4, #1448	; 0x5a8
 8007422:	f01d faaf 	bl	8024984 <memset>
}
 8007426:	4620      	mov	r0, r4
 8007428:	bd70      	pop	{r4, r5, r6, pc}
 800742a:	bf00      	nop
 800742c:	0802843c 	.word	0x0802843c
 8007430:	04420435 	.word	0x04420435
 8007434:	04400431 	.word	0x04400431
 8007438:	004c0045 	.word	0x004c0045
 800743c:	004c004f 	.word	0x004c004f

08007440 <_ZN23CustomContainerTableLog11UpdateLog_1EP15TileInfoTypeDef>:
}

void CustomContainerTableLog::UpdateLog_1(TileInfoTypeDef * data)
{
 8007440:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
        visible = vis;
 8007442:	2601      	movs	r6, #1
 8007444:	4604      	mov	r4, r0
 8007446:	f880 6025 	strb.w	r6, [r0, #37]	; 0x25
	setVisible(true);
	tmp = data->working_hours_log;
 800744a:	481c      	ldr	r0, [pc, #112]	; (80074bc <_ZN23CustomContainerTableLog11UpdateLog_1EP15TileInfoTypeDef+0x7c>)
 800744c:	680b      	ldr	r3, [r1, #0]
 800744e:	6003      	str	r3, [r0, #0]
{
 8007450:	460d      	mov	r5, r1
	tm_ptr = *gmtime(&tmp);
 8007452:	f001 fd75 	bl	8008f40 <gmtime>
 8007456:	4a1a      	ldr	r2, [pc, #104]	; (80074c0 <_ZN23CustomContainerTableLog11UpdateLog_1EP15TileInfoTypeDef+0x80>)
 8007458:	6803      	ldr	r3, [r0, #0]
 800745a:	6013      	str	r3, [r2, #0]
 800745c:	6843      	ldr	r3, [r0, #4]
 800745e:	6053      	str	r3, [r2, #4]
 8007460:	6883      	ldr	r3, [r0, #8]
	tm_ptr.tm_mon = 1;
	tm_ptr.tm_mday = 30;
//
	Unicode::snprintf(textAreaDataTimeBuffer, TEXTAREADATATIME_SIZE, "%.2d-%.2d-%4d %.2d:%.2d",
 8007462:	7851      	ldrb	r1, [r2, #1]
	tm_ptr = *gmtime(&tmp);
 8007464:	6093      	str	r3, [r2, #8]
	tm_ptr.tm_mday = 30;
 8007466:	231e      	movs	r3, #30
	tm_ptr.tm_mon = 1;
 8007468:	7156      	strb	r6, [r2, #5]
	tm_ptr.tm_mday = 30;
 800746a:	70d3      	strb	r3, [r2, #3]
	Unicode::snprintf(textAreaDataTimeBuffer, TEXTAREADATATIME_SIZE, "%.2d-%.2d-%4d %.2d:%.2d",
 800746c:	9103      	str	r1, [sp, #12]
 800746e:	7891      	ldrb	r1, [r2, #2]
 8007470:	9102      	str	r1, [sp, #8]
	tm_ptr.tm_mday, tm_ptr.tm_mon, tm_ptr.tm_year + 1900, tm_ptr.tm_hour, tm_ptr.tm_min);
 8007472:	88d2      	ldrh	r2, [r2, #6]
	Unicode::snprintf(textAreaDataTimeBuffer, TEXTAREADATATIME_SIZE, "%.2d-%.2d-%4d %.2d:%.2d",
 8007474:	f202 726c 	addw	r2, r2, #1900	; 0x76c
 8007478:	e9cd 6200 	strd	r6, r2, [sp]
 800747c:	2114      	movs	r1, #20
 800747e:	4a11      	ldr	r2, [pc, #68]	; (80074c4 <_ZN23CustomContainerTableLog11UpdateLog_1EP15TileInfoTypeDef+0x84>)
 8007480:	f504 6088 	add.w	r0, r4, #1088	; 0x440
 8007484:	f010 fe8c 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
//
	Unicode::snprintf(textAreaNumChanBuffer, TEXTAREANUMCHAN_SIZE, "%d", data->channel_num);
 8007488:	7a2b      	ldrb	r3, [r5, #8]
 800748a:	4a0f      	ldr	r2, [pc, #60]	; (80074c8 <_ZN23CustomContainerTableLog11UpdateLog_1EP15TileInfoTypeDef+0x88>)
 800748c:	2105      	movs	r1, #5
 800748e:	f504 608d 	add.w	r0, r4, #1128	; 0x468
 8007492:	f010 fe85 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
//
	Unicode::snprintf(textAreaTypeChanBuffer, TEXTAREATYPECHAN_SIZE, "%s", NamesTypeChannel[data->ch_type]);
 8007496:	7c6b      	ldrb	r3, [r5, #17]
 8007498:	2214      	movs	r2, #20
 800749a:	fb02 4303 	mla	r3, r2, r3, r4
 800749e:	f203 43fe 	addw	r3, r3, #1278	; 0x4fe
 80074a2:	4a0a      	ldr	r2, [pc, #40]	; (80074cc <_ZN23CustomContainerTableLog11UpdateLog_1EP15TileInfoTypeDef+0x8c>)
 80074a4:	210a      	movs	r1, #10
 80074a6:	f204 4072 	addw	r0, r4, #1138	; 0x472
 80074aa:	f010 fe79 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
//
//	Unicode::snprintf(textAreaErrBuffer, TEXTAREAERR_SIZE, "%s", NamesErr[err]);
//
//	Unicode::snprintf(textAreaGasBuffer, TEXTAREAGAS_SIZE, "%s", NamesGas[gas]);

	invalidate();
 80074ae:	6823      	ldr	r3, [r4, #0]
 80074b0:	695b      	ldr	r3, [r3, #20]
 80074b2:	4620      	mov	r0, r4
}
 80074b4:	b004      	add	sp, #16
 80074b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	invalidate();
 80074ba:	4718      	bx	r3
 80074bc:	2000faec 	.word	0x2000faec
 80074c0:	2000faf0 	.word	0x2000faf0
 80074c4:	08028418 	.word	0x08028418
 80074c8:	08028430 	.word	0x08028430
 80074cc:	08027109 	.word	0x08027109

080074d0 <_ZN8touchgfx8CallbackI10DatePickerRK13WheelSelectorRKivED1Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 80074d0:	4770      	bx	lr

080074d2 <_ZN8touchgfx8CallbackI10DatePickerRK13WheelSelectorRKivE7executeES4_S6_>:
    virtual void execute(T1 t1, T2 t2)
 80074d2:	b470      	push	{r4, r5, r6}
        (pobject->*pmemfun_2)(t1, t2);
 80074d4:	68c4      	ldr	r4, [r0, #12]
 80074d6:	6845      	ldr	r5, [r0, #4]
 80074d8:	1066      	asrs	r6, r4, #1
    virtual void execute(T1 t1, T2 t2)
 80074da:	4603      	mov	r3, r0
        (pobject->*pmemfun_2)(t1, t2);
 80074dc:	eb05 0064 	add.w	r0, r5, r4, asr #1
 80074e0:	07e4      	lsls	r4, r4, #31
 80074e2:	bf48      	it	mi
 80074e4:	59ac      	ldrmi	r4, [r5, r6]
 80074e6:	689b      	ldr	r3, [r3, #8]
 80074e8:	bf48      	it	mi
 80074ea:	58e3      	ldrmi	r3, [r4, r3]
    }
 80074ec:	bc70      	pop	{r4, r5, r6}
        (pobject->*pmemfun_2)(t1, t2);
 80074ee:	4718      	bx	r3

080074f0 <_ZNK8touchgfx8CallbackI10DatePickerRK13WheelSelectorRKivE7isValidEv>:
        return (pobject != 0) && (pmemfun_2 != 0);
 80074f0:	6843      	ldr	r3, [r0, #4]
 80074f2:	b12b      	cbz	r3, 8007500 <_ZNK8touchgfx8CallbackI10DatePickerRK13WheelSelectorRKivE7isValidEv+0x10>
 80074f4:	6883      	ldr	r3, [r0, #8]
 80074f6:	b92b      	cbnz	r3, 8007504 <_ZNK8touchgfx8CallbackI10DatePickerRK13WheelSelectorRKivE7isValidEv+0x14>
 80074f8:	68c0      	ldr	r0, [r0, #12]
 80074fa:	f000 0001 	and.w	r0, r0, #1
 80074fe:	4770      	bx	lr
 8007500:	4618      	mov	r0, r3
 8007502:	4770      	bx	lr
 8007504:	2001      	movs	r0, #1
    }
 8007506:	4770      	bx	lr

08007508 <_ZN8touchgfx8CallbackI10DatePickerRK13WheelSelectorRKivED0Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 8007508:	b510      	push	{r4, lr}
 800750a:	2110      	movs	r1, #16
 800750c:	4604      	mov	r4, r0
 800750e:	f01c ff64 	bl	80243da <_ZdlPvj>
 8007512:	4620      	mov	r0, r4
 8007514:	bd10      	pop	{r4, pc}
	...

08007518 <_ZN10DatePickerC1Ev>:
#include <gui/settings_screen/DatePicker.hpp>
#include <touchgfx/Color.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <texts/TextKeysAndLanguages.hpp>

DatePicker::DatePicker() :
 8007518:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    onSelectedElementChanged(this, &DatePicker::selectedElementChangedHandler)
 800751c:	4681      	mov	r9, r0
        : x(0), y(0), width(0), height(0)
 800751e:	2500      	movs	r5, #0
 8007520:	4ab5      	ldr	r2, [pc, #724]	; (80077f8 <_ZN10DatePickerC1Ev+0x2e0>)
 8007522:	6285      	str	r5, [r0, #40]	; 0x28
          visible(true)
 8007524:	f44f 7380 	mov.w	r3, #256	; 0x100
DatePicker::DatePicker() :
 8007528:	4604      	mov	r4, r0
 800752a:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800752e:	e9c0 5503 	strd	r5, r5, [r0, #12]
 8007532:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8007536:	e9c0 5507 	strd	r5, r5, [r0, #28]
 800753a:	8483      	strh	r3, [r0, #36]	; 0x24
    onSelectedElementChanged(this, &DatePicker::selectedElementChangedHandler)
 800753c:	f849 2b2c 	str.w	r2, [r9], #44
 8007540:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
        : Widget(), alpha(255), color(0)
 8007544:	23ff      	movs	r3, #255	; 0xff
 8007546:	f880 3052 	strb.w	r3, [r0, #82]	; 0x52
 800754a:	f100 0860 	add.w	r8, r0, #96	; 0x60
        : Box(), borderColor(0), borderSize(0)
 800754e:	4bab      	ldr	r3, [pc, #684]	; (80077fc <_ZN10DatePickerC1Ev+0x2e4>)
 8007550:	62c3      	str	r3, [r0, #44]	; 0x2c
 8007552:	f504 56cd 	add.w	r6, r4, #6560	; 0x19a0
DatePicker::DatePicker() :
 8007556:	b088      	sub	sp, #32
 8007558:	e9c0 550c 	strd	r5, r5, [r0, #48]	; 0x30
 800755c:	e9c0 550e 	strd	r5, r5, [r0, #56]	; 0x38
 8007560:	e9c0 5510 	strd	r5, r5, [r0, #64]	; 0x40
 8007564:	e9c0 5512 	strd	r5, r5, [r0, #72]	; 0x48
        : color(col)
 8007568:	6545      	str	r5, [r0, #84]	; 0x54
 800756a:	6585      	str	r5, [r0, #88]	; 0x58
 800756c:	f8a0 505c 	strh.w	r5, [r0, #92]	; 0x5c
    onSelectedElementChanged(this, &DatePicker::selectedElementChangedHandler)
 8007570:	360c      	adds	r6, #12
 8007572:	4640      	mov	r0, r8
 8007574:	f504 574b 	add.w	r7, r4, #12992	; 0x32c0
 8007578:	f001 f85a 	bl	8008630 <_ZN13WheelSelectorC1Ev>
 800757c:	3738      	adds	r7, #56	; 0x38
 800757e:	4630      	mov	r0, r6
 8007580:	f001 f856 	bl	8008630 <_ZN13WheelSelectorC1Ev>
 8007584:	4638      	mov	r0, r7
 8007586:	f001 f853 	bl	8008630 <_ZN13WheelSelectorC1Ev>
        : pobject(pobject), pmemfun_2(pmemfun_2)
 800758a:	f644 4344 	movw	r3, #19524	; 0x4c44
 800758e:	4a9c      	ldr	r2, [pc, #624]	; (8007800 <_ZN10DatePickerC1Ev+0x2e8>)
 8007590:	50e2      	str	r2, [r4, r3]
 8007592:	eb04 0a03 	add.w	sl, r4, r3
 8007596:	f644 434c 	movw	r3, #19532	; 0x4c4c
 800759a:	4a9a      	ldr	r2, [pc, #616]	; (8007804 <_ZN10DatePickerC1Ev+0x2ec>)
 800759c:	f8ca 4004 	str.w	r4, [sl, #4]
 80075a0:	50e2      	str	r2, [r4, r3]
 80075a2:	f644 4350 	movw	r3, #19536	; 0x4c50
        setXY(x, y);
 80075a6:	462a      	mov	r2, r5
 80075a8:	50e5      	str	r5, [r4, r3]
 80075aa:	4629      	mov	r1, r5
 80075ac:	4648      	mov	r0, r9
 80075ae:	f7fa fe71 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80075b2:	4648      	mov	r0, r9
 80075b4:	21e6      	movs	r1, #230	; 0xe6
 80075b6:	f7fa fd49 	bl	800204c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 80075ba:	4648      	mov	r0, r9
 80075bc:	2182      	movs	r1, #130	; 0x82
 80075be:	f7fa fd47 	bl	8002050 <_ZN8touchgfx8Drawable9setHeightEs>
        borderColor = color;
 80075c2:	4a91      	ldr	r2, [pc, #580]	; (8007808 <_ZN10DatePickerC1Ev+0x2f0>)
 80075c4:	4b91      	ldr	r3, [pc, #580]	; (800780c <_ZN10DatePickerC1Ev+0x2f4>)
 80075c6:	e9c4 2315 	strd	r2, r3, [r4, #84]	; 0x54
        borderSize = size;
 80075ca:	2303      	movs	r3, #3
 80075cc:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
//    add(background);
	background.setPosition(0, 0, 230, 130);
	background.setColor(touchgfx::Color::getColorFromRGB(0, 102, 53));
	background.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 102));
	background.setBorderSize(3);
	add(background);
 80075d0:	4649      	mov	r1, r9
 80075d2:	4620      	mov	r0, r4
 80075d4:	f008 ff80 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>

	months.setXY(10, 20);
 80075d8:	2214      	movs	r2, #20
 80075da:	210a      	movs	r1, #10
 80075dc:	4630      	mov	r0, r6
 80075de:	f7fa fe59 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
    virtual void handleDragEvent(const DragEvent& evt);
    virtual void handleGestureEvent(const GestureEvent& evt);

    void setElementSelectedCallback(touchgfx::GenericCallback<const WheelSelector&, const int&>& callback)
    {
        elementSelectedAction = &callback;
 80075e2:	f243 23f0 	movw	r3, #13040	; 0x32f0
	months.setElementSelectedCallback(onSelectedElementChanged);
	add(months);
 80075e6:	4631      	mov	r1, r6
 80075e8:	f844 a003 	str.w	sl, [r4, r3]
 80075ec:	4620      	mov	r0, r4
 80075ee:	f008 ff73 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>

    days.setXY(80, 20);
 80075f2:	2214      	movs	r2, #20
 80075f4:	2150      	movs	r1, #80	; 0x50
 80075f6:	4640      	mov	r0, r8
 80075f8:	f7fa fe4c 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
    add(days);
 80075fc:	4641      	mov	r1, r8
 80075fe:	4620      	mov	r0, r4
 8007600:	f008 ff6a 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>

    years.setXY(150, 20);
 8007604:	2214      	movs	r2, #20
 8007606:	2196      	movs	r1, #150	; 0x96
 8007608:	4638      	mov	r0, r7
 800760a:	f7fa fe43 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800760e:	f644 433c 	movw	r3, #19516	; 0x4c3c
    years.setElementSelectedCallback(onSelectedElementChanged);
    add(years);
 8007612:	4639      	mov	r1, r7
 8007614:	f844 a003 	str.w	sl, [r4, r3]
 8007618:	4620      	mov	r0, r4
 800761a:	f008 ff5d 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.width = width;
 800761e:	4b7c      	ldr	r3, [pc, #496]	; (8007810 <_ZN10DatePickerC1Ev+0x2f8>)
 8007620:	60a3      	str	r3, [r4, #8]
    setWidth(230);
    setHeight(130);

    // Setup the year wheel. The overlay image used covers all three wheels, so
    // a negative x value is used to place the overlay correctly inside the wheel
    years.setup(BITMAP_DATE_PICKER_SHADOW_TOP_ID, 70, 90, 30, 2, -14, 30);
 8007622:	f06f 020d 	mvn.w	r2, #13
 8007626:	231e      	movs	r3, #30
 8007628:	e9cd 2302 	strd	r2, r3, [sp, #8]
 800762c:	2202      	movs	r2, #2
 800762e:	e9cd 3200 	strd	r3, r2, [sp]
 8007632:	2109      	movs	r1, #9
 8007634:	235a      	movs	r3, #90	; 0x5a
 8007636:	2246      	movs	r2, #70	; 0x46
 8007638:	4638      	mov	r0, r7
 800763a:	f001 f8ab 	bl	8008794 <_ZN13WheelSelector5setupEtiiiiii>
    for (int i = START_YEAR; i < STOP_YEAR; i++)
    {
        Unicode::UnicodeChar temp[6];
        Unicode::snprintf(temp, 6, "%d", i);
 800763e:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8007818 <_ZN10DatePickerC1Ev+0x300>
    for (int i = START_YEAR; i < STOP_YEAR; i++)
 8007642:	f240 75e4 	movw	r5, #2020	; 0x7e4
        Unicode::snprintf(temp, 6, "%d", i);
 8007646:	462b      	mov	r3, r5
 8007648:	464a      	mov	r2, r9
 800764a:	2106      	movs	r1, #6
 800764c:	a805      	add	r0, sp, #20
 800764e:	f010 fda7 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        years.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 8007652:	ab05      	add	r3, sp, #20
 8007654:	2247      	movs	r2, #71	; 0x47
 8007656:	2146      	movs	r1, #70	; 0x46
 8007658:	4638      	mov	r0, r7
 800765a:	f001 f921 	bl	80088a0 <_ZN13WheelSelector7addTextEttPKt>
    for (int i = START_YEAR; i < STOP_YEAR; i++)
 800765e:	3501      	adds	r5, #1
 8007660:	f640 0302 	movw	r3, #2050	; 0x802
 8007664:	429d      	cmp	r5, r3
 8007666:	d1ee      	bne.n	8007646 <_ZN10DatePickerC1Ev+0x12e>
    }
    years.setSelectedItem(1, 20);
 8007668:	4638      	mov	r0, r7
 800766a:	4b6a      	ldr	r3, [pc, #424]	; (8007814 <_ZN10DatePickerC1Ev+0x2fc>)
    // a negative x value is used to place the overlay correctly inside the wheel
    days.setup(BITMAP_DATE_PICKER_SHADOW_TOP_ID, 70, 90, 30, 2, -14, 30);
    for (int i = 1; i < 32; i++)
    {
        Unicode::UnicodeChar temp[3];
        Unicode::snprintf(temp, 3, "%d", i);
 800766c:	4f6a      	ldr	r7, [pc, #424]	; (8007818 <_ZN10DatePickerC1Ev+0x300>)
    years.setSelectedItem(1, 20);
 800766e:	2214      	movs	r2, #20
 8007670:	2101      	movs	r1, #1
 8007672:	f001 fbaf 	bl	8008dd4 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>
    days.setup(BITMAP_DATE_PICKER_SHADOW_TOP_ID, 70, 90, 30, 2, -14, 30);
 8007676:	231e      	movs	r3, #30
 8007678:	f06f 020d 	mvn.w	r2, #13
 800767c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8007680:	2202      	movs	r2, #2
 8007682:	e9cd 3200 	strd	r3, r2, [sp]
 8007686:	2109      	movs	r1, #9
 8007688:	235a      	movs	r3, #90	; 0x5a
 800768a:	2246      	movs	r2, #70	; 0x46
 800768c:	4640      	mov	r0, r8
 800768e:	f001 f881 	bl	8008794 <_ZN13WheelSelector5setupEtiiiiii>
    for (int i = 1; i < 32; i++)
 8007692:	2501      	movs	r5, #1
        Unicode::snprintf(temp, 3, "%d", i);
 8007694:	462b      	mov	r3, r5
 8007696:	463a      	mov	r2, r7
 8007698:	2103      	movs	r1, #3
 800769a:	a805      	add	r0, sp, #20
 800769c:	f010 fd80 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    for (int i = 1; i < 32; i++)
 80076a0:	3501      	adds	r5, #1
        days.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 80076a2:	ab05      	add	r3, sp, #20
 80076a4:	2247      	movs	r2, #71	; 0x47
 80076a6:	2146      	movs	r1, #70	; 0x46
 80076a8:	4640      	mov	r0, r8
 80076aa:	f001 f8f9 	bl	80088a0 <_ZN13WheelSelector7addTextEttPKt>
    for (int i = 1; i < 32; i++)
 80076ae:	2d20      	cmp	r5, #32
 80076b0:	d1f0      	bne.n	8007694 <_ZN10DatePickerC1Ev+0x17c>
    }
    days.setSelectedItem(1, 20);
 80076b2:	4640      	mov	r0, r8
 80076b4:	4b57      	ldr	r3, [pc, #348]	; (8007814 <_ZN10DatePickerC1Ev+0x2fc>)
 80076b6:	2214      	movs	r2, #20
 80076b8:	2101      	movs	r1, #1
 80076ba:	f001 fb8b 	bl	8008dd4 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>

    // Setup the month wheel. The overlay image used covers all three wheels, so
    // a negative x value is used to place the overlay correctly inside the wheel
    months.setup(BITMAP_DATE_PICKER_SHADOW_TOP_ID, 70, 90, 30, 2, -14, 30);
 80076be:	231e      	movs	r3, #30
 80076c0:	f06f 020d 	mvn.w	r2, #13
 80076c4:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80076c8:	2202      	movs	r2, #2
 80076ca:	e9cd 3200 	strd	r3, r2, [sp]
 80076ce:	4630      	mov	r0, r6
 80076d0:	235a      	movs	r3, #90	; 0x5a
 80076d2:	2246      	movs	r2, #70	; 0x46
 80076d4:	2109      	movs	r1, #9
 80076d6:	f001 f85d 	bl	8008794 <_ZN13WheelSelector5setupEtiiiiii>
    Unicode::UnicodeChar temp[5];

    Unicode::snprintf(temp, 5, "JAN");
 80076da:	4a50      	ldr	r2, [pc, #320]	; (800781c <_ZN10DatePickerC1Ev+0x304>)
 80076dc:	2105      	movs	r1, #5
 80076de:	a805      	add	r0, sp, #20
 80076e0:	f010 fd5e 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 80076e4:	ab05      	add	r3, sp, #20
 80076e6:	4630      	mov	r0, r6
 80076e8:	2247      	movs	r2, #71	; 0x47
 80076ea:	2146      	movs	r1, #70	; 0x46
 80076ec:	f001 f8d8 	bl	80088a0 <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "FEB");
 80076f0:	4a4b      	ldr	r2, [pc, #300]	; (8007820 <_ZN10DatePickerC1Ev+0x308>)
 80076f2:	2105      	movs	r1, #5
 80076f4:	a805      	add	r0, sp, #20
 80076f6:	f010 fd53 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 80076fa:	ab05      	add	r3, sp, #20
 80076fc:	4630      	mov	r0, r6
 80076fe:	2247      	movs	r2, #71	; 0x47
 8007700:	2146      	movs	r1, #70	; 0x46
 8007702:	f001 f8cd 	bl	80088a0 <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "MAR");
 8007706:	4a47      	ldr	r2, [pc, #284]	; (8007824 <_ZN10DatePickerC1Ev+0x30c>)
 8007708:	2105      	movs	r1, #5
 800770a:	a805      	add	r0, sp, #20
 800770c:	f010 fd48 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 8007710:	ab05      	add	r3, sp, #20
 8007712:	4630      	mov	r0, r6
 8007714:	2247      	movs	r2, #71	; 0x47
 8007716:	2146      	movs	r1, #70	; 0x46
 8007718:	f001 f8c2 	bl	80088a0 <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "APR");
 800771c:	4a42      	ldr	r2, [pc, #264]	; (8007828 <_ZN10DatePickerC1Ev+0x310>)
 800771e:	2105      	movs	r1, #5
 8007720:	a805      	add	r0, sp, #20
 8007722:	f010 fd3d 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 8007726:	ab05      	add	r3, sp, #20
 8007728:	4630      	mov	r0, r6
 800772a:	2247      	movs	r2, #71	; 0x47
 800772c:	2146      	movs	r1, #70	; 0x46
 800772e:	f001 f8b7 	bl	80088a0 <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "MAY");
 8007732:	4a3e      	ldr	r2, [pc, #248]	; (800782c <_ZN10DatePickerC1Ev+0x314>)
 8007734:	2105      	movs	r1, #5
 8007736:	a805      	add	r0, sp, #20
 8007738:	f010 fd32 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 800773c:	ab05      	add	r3, sp, #20
 800773e:	4630      	mov	r0, r6
 8007740:	2247      	movs	r2, #71	; 0x47
 8007742:	2146      	movs	r1, #70	; 0x46
 8007744:	f001 f8ac 	bl	80088a0 <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "JUN");
 8007748:	4a39      	ldr	r2, [pc, #228]	; (8007830 <_ZN10DatePickerC1Ev+0x318>)
 800774a:	2105      	movs	r1, #5
 800774c:	a805      	add	r0, sp, #20
 800774e:	f010 fd27 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 8007752:	ab05      	add	r3, sp, #20
 8007754:	4630      	mov	r0, r6
 8007756:	2247      	movs	r2, #71	; 0x47
 8007758:	2146      	movs	r1, #70	; 0x46
 800775a:	f001 f8a1 	bl	80088a0 <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "JUL");
 800775e:	4a35      	ldr	r2, [pc, #212]	; (8007834 <_ZN10DatePickerC1Ev+0x31c>)
 8007760:	2105      	movs	r1, #5
 8007762:	a805      	add	r0, sp, #20
 8007764:	f010 fd1c 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 8007768:	ab05      	add	r3, sp, #20
 800776a:	4630      	mov	r0, r6
 800776c:	2247      	movs	r2, #71	; 0x47
 800776e:	2146      	movs	r1, #70	; 0x46
 8007770:	f001 f896 	bl	80088a0 <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "AUG");
 8007774:	4a30      	ldr	r2, [pc, #192]	; (8007838 <_ZN10DatePickerC1Ev+0x320>)
 8007776:	2105      	movs	r1, #5
 8007778:	a805      	add	r0, sp, #20
 800777a:	f010 fd11 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 800777e:	ab05      	add	r3, sp, #20
 8007780:	4630      	mov	r0, r6
 8007782:	2247      	movs	r2, #71	; 0x47
 8007784:	2146      	movs	r1, #70	; 0x46
 8007786:	f001 f88b 	bl	80088a0 <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "SEP");
 800778a:	4a2c      	ldr	r2, [pc, #176]	; (800783c <_ZN10DatePickerC1Ev+0x324>)
 800778c:	2105      	movs	r1, #5
 800778e:	a805      	add	r0, sp, #20
 8007790:	f010 fd06 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 8007794:	ab05      	add	r3, sp, #20
 8007796:	4630      	mov	r0, r6
 8007798:	2247      	movs	r2, #71	; 0x47
 800779a:	2146      	movs	r1, #70	; 0x46
 800779c:	f001 f880 	bl	80088a0 <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "OCT");
 80077a0:	4a27      	ldr	r2, [pc, #156]	; (8007840 <_ZN10DatePickerC1Ev+0x328>)
 80077a2:	2105      	movs	r1, #5
 80077a4:	a805      	add	r0, sp, #20
 80077a6:	f010 fcfb 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 80077aa:	ab05      	add	r3, sp, #20
 80077ac:	4630      	mov	r0, r6
 80077ae:	2247      	movs	r2, #71	; 0x47
 80077b0:	2146      	movs	r1, #70	; 0x46
 80077b2:	f001 f875 	bl	80088a0 <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "NOV");
 80077b6:	4a23      	ldr	r2, [pc, #140]	; (8007844 <_ZN10DatePickerC1Ev+0x32c>)
 80077b8:	2105      	movs	r1, #5
 80077ba:	a805      	add	r0, sp, #20
 80077bc:	f010 fcf0 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 80077c0:	ab05      	add	r3, sp, #20
 80077c2:	4630      	mov	r0, r6
 80077c4:	2247      	movs	r2, #71	; 0x47
 80077c6:	2146      	movs	r1, #70	; 0x46
 80077c8:	f001 f86a 	bl	80088a0 <_ZN13WheelSelector7addTextEttPKt>

    Unicode::snprintf(temp, 5, "DEC");
 80077cc:	4a1e      	ldr	r2, [pc, #120]	; (8007848 <_ZN10DatePickerC1Ev+0x330>)
 80077ce:	2105      	movs	r1, #5
 80077d0:	a805      	add	r0, sp, #20
 80077d2:	f010 fce5 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    months.addText(T_SETTINGS_DATE_PICKER_TEXT, T_SETTINGS_DATE_PICKER_TEXT_SELECTED, temp);
 80077d6:	ab05      	add	r3, sp, #20
 80077d8:	4630      	mov	r0, r6
 80077da:	2247      	movs	r2, #71	; 0x47
 80077dc:	2146      	movs	r1, #70	; 0x46
 80077de:	f001 f85f 	bl	80088a0 <_ZN13WheelSelector7addTextEttPKt>

    months.setSelectedItem(1, 20);
 80077e2:	4630      	mov	r0, r6
 80077e4:	4b0b      	ldr	r3, [pc, #44]	; (8007814 <_ZN10DatePickerC1Ev+0x2fc>)
 80077e6:	2214      	movs	r2, #20
 80077e8:	2101      	movs	r1, #1
 80077ea:	f001 faf3 	bl	8008dd4 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>
}
 80077ee:	4620      	mov	r0, r4
 80077f0:	b008      	add	sp, #32
 80077f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80077f6:	bf00      	nop
 80077f8:	08028514 	.word	0x08028514
 80077fc:	08029ec4 	.word	0x08029ec4
 8007800:	080284fc 	.word	0x080284fc
 8007804:	080078e1 	.word	0x080078e1
 8007808:	ff006635 	.word	0xff006635
 800780c:	ff000066 	.word	0xff000066
 8007810:	008200e6 	.word	0x008200e6
 8007814:	08016041 	.word	0x08016041
 8007818:	08028430 	.word	0x08028430
 800781c:	080284c4 	.word	0x080284c4
 8007820:	080284c8 	.word	0x080284c8
 8007824:	080284cc 	.word	0x080284cc
 8007828:	080284d0 	.word	0x080284d0
 800782c:	080284d4 	.word	0x080284d4
 8007830:	080284d8 	.word	0x080284d8
 8007834:	080284dc 	.word	0x080284dc
 8007838:	080284e0 	.word	0x080284e0
 800783c:	080284e4 	.word	0x080284e4
 8007840:	080284e8 	.word	0x080284e8
 8007844:	080284ec 	.word	0x080284ec
 8007848:	080284f0 	.word	0x080284f0

0800784c <_ZN10DatePicker6setDayEiiPFstsstE>:
{
}

void DatePicker::setDay(int index, int duration, EasingEquation equation)
{
    days.setSelectedItem(index, duration, equation);
 800784c:	3060      	adds	r0, #96	; 0x60
 800784e:	f001 bac1 	b.w	8008dd4 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>

08007852 <_ZN10DatePicker8setMonthEiiPFstsstE>:
}

void DatePicker::setMonth(int index, int duration, EasingEquation equation)
{
    months.setSelectedItem(index, duration, equation);
 8007852:	f500 50cd 	add.w	r0, r0, #6560	; 0x19a0
 8007856:	300c      	adds	r0, #12
 8007858:	f001 babc 	b.w	8008dd4 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>

0800785c <_ZN10DatePicker7setYearEiiPFstsstE>:
}

void DatePicker::setYear(int index, int duration, EasingEquation equation)
{
    years.setSelectedItem(index, duration, equation);
 800785c:	f500 504b 	add.w	r0, r0, #12992	; 0x32c0
 8007860:	3038      	adds	r0, #56	; 0x38
 8007862:	f001 bab7 	b.w	8008dd4 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>

08007866 <_ZN10DatePicker6getDayEv>:
}

int DatePicker::getDay()
{
    return days.getSelectedItem();
 8007866:	3060      	adds	r0, #96	; 0x60
 8007868:	f001 b8be 	b.w	80089e8 <_ZN13WheelSelector15getSelectedItemEv>

0800786c <_ZN10DatePicker8getMonthEv>:
}

int DatePicker::getMonth()
{
    return months.getSelectedItem();
 800786c:	f500 50cd 	add.w	r0, r0, #6560	; 0x19a0
 8007870:	300c      	adds	r0, #12
 8007872:	f001 b8b9 	b.w	80089e8 <_ZN13WheelSelector15getSelectedItemEv>

08007876 <_ZN10DatePicker7getYearEv>:
}

int DatePicker::getYear()
{
    return years.getSelectedItem();
 8007876:	f500 504b 	add.w	r0, r0, #12992	; 0x32c0
 800787a:	3038      	adds	r0, #56	; 0x38
 800787c:	f001 b8b4 	b.w	80089e8 <_ZN13WheelSelector15getSelectedItemEv>

08007880 <_ZN10DatePicker15getNumberOfDaysEtt>:
}

uint16_t DatePicker::getNumberOfDays(uint16_t month, uint16_t year)
{
    uint16_t result = 0;
    if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12)
 8007880:	290c      	cmp	r1, #12
 8007882:	d804      	bhi.n	800788e <_ZN10DatePicker15getNumberOfDaysEtt+0xe>
 8007884:	f241 53aa 	movw	r3, #5546	; 0x15aa
 8007888:	40cb      	lsrs	r3, r1
 800788a:	07db      	lsls	r3, r3, #31
 800788c:	d41d      	bmi.n	80078ca <_ZN10DatePicker15getNumberOfDaysEtt+0x4a>
    {
        result = 31;
    }
    else if (month == 4 || month == 6 || month == 9 || month == 11)
 800788e:	f021 0302 	bic.w	r3, r1, #2
 8007892:	2b04      	cmp	r3, #4
 8007894:	b298      	uxth	r0, r3
 8007896:	d01a      	beq.n	80078ce <_ZN10DatePicker15getNumberOfDaysEtt+0x4e>
 8007898:	2809      	cmp	r0, #9
 800789a:	d018      	beq.n	80078ce <_ZN10DatePicker15getNumberOfDaysEtt+0x4e>
    {
        result = 30;
    }
    else if (month == 2)
 800789c:	2902      	cmp	r1, #2
 800789e:	d118      	bne.n	80078d2 <_ZN10DatePicker15getNumberOfDaysEtt+0x52>
    {
        result = 28;
        if (year % 400 == 0)
 80078a0:	f44f 71c8 	mov.w	r1, #400	; 0x190
 80078a4:	fbb2 f3f1 	udiv	r3, r2, r1
 80078a8:	fb01 2313 	mls	r3, r1, r3, r2
 80078ac:	b29b      	uxth	r3, r3
 80078ae:	b193      	cbz	r3, 80078d6 <_ZN10DatePicker15getNumberOfDaysEtt+0x56>
        {
            result++;
        }
        else if (year % 100 == 0)
 80078b0:	2164      	movs	r1, #100	; 0x64
 80078b2:	fbb2 f3f1 	udiv	r3, r2, r1
 80078b6:	fb01 2313 	mls	r3, r1, r3, r2
 80078ba:	b29b      	uxth	r3, r3
 80078bc:	b16b      	cbz	r3, 80078da <_ZN10DatePicker15getNumberOfDaysEtt+0x5a>
        {
        }
        else if (year % 4 == 0)
 80078be:	f012 0f03 	tst.w	r2, #3
            result++;
 80078c2:	bf14      	ite	ne
 80078c4:	201c      	movne	r0, #28
 80078c6:	201d      	moveq	r0, #29
 80078c8:	4770      	bx	lr
        result = 31;
 80078ca:	201f      	movs	r0, #31
 80078cc:	4770      	bx	lr
        result = 30;
 80078ce:	201e      	movs	r0, #30
 80078d0:	4770      	bx	lr
    uint16_t result = 0;
 80078d2:	2000      	movs	r0, #0
 80078d4:	4770      	bx	lr
            result++;
 80078d6:	201d      	movs	r0, #29
 80078d8:	4770      	bx	lr
        result = 28;
 80078da:	201c      	movs	r0, #28
        {
            result++;
        }
    }
    return result;
}
 80078dc:	4770      	bx	lr
	...

080078e0 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi>:
{
 80078e0:	b570      	push	{r4, r5, r6, lr}
 80078e2:	4604      	mov	r4, r0
    int numberOfDaysInMonth = getNumberOfDays(months.getSelectedItem() + 1, START_YEAR + years.getSelectedItem());
 80078e4:	f500 50cd 	add.w	r0, r0, #6560	; 0x19a0
 80078e8:	300c      	adds	r0, #12
 80078ea:	f001 f87d 	bl	80089e8 <_ZN13WheelSelector15getSelectedItemEv>
 80078ee:	4605      	mov	r5, r0
 80078f0:	f504 504b 	add.w	r0, r4, #12992	; 0x32c0
 80078f4:	3038      	adds	r0, #56	; 0x38
 80078f6:	f001 f877 	bl	80089e8 <_ZN13WheelSelector15getSelectedItemEv>
 80078fa:	1c69      	adds	r1, r5, #1
 80078fc:	f200 70e4 	addw	r0, r0, #2020	; 0x7e4
 8007900:	b282      	uxth	r2, r0
 8007902:	b289      	uxth	r1, r1
 8007904:	4620      	mov	r0, r4
 8007906:	f7ff ffbb 	bl	8007880 <_ZN10DatePicker15getNumberOfDaysEtt>
    if (numberOfDaysInMonth == 28)
 800790a:	281c      	cmp	r0, #28
 800790c:	f104 0460 	add.w	r4, r4, #96	; 0x60
 8007910:	d110      	bne.n	8007934 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x54>
        days.hideBottomElements(3);
 8007912:	2103      	movs	r1, #3
 8007914:	4620      	mov	r0, r4
 8007916:	f001 f95f 	bl	8008bd8 <_ZN13WheelSelector18hideBottomElementsEi>
        if (days.getSelectedItem() > 27)
 800791a:	4620      	mov	r0, r4
 800791c:	f001 f864 	bl	80089e8 <_ZN13WheelSelector15getSelectedItemEv>
 8007920:	281b      	cmp	r0, #27
 8007922:	dd2b      	ble.n	800797c <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x9c>
            days.setSelectedItem(27, 20);
 8007924:	4b16      	ldr	r3, [pc, #88]	; (8007980 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0xa0>)
 8007926:	2214      	movs	r2, #20
 8007928:	211b      	movs	r1, #27
            days.setSelectedItem(28, 20);
 800792a:	4620      	mov	r0, r4
}
 800792c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            days.setSelectedItem(28, 20);
 8007930:	f001 ba50 	b.w	8008dd4 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>
    else if (numberOfDaysInMonth == 29)
 8007934:	281d      	cmp	r0, #29
 8007936:	d10c      	bne.n	8007952 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x72>
        days.hideBottomElements(2);
 8007938:	2102      	movs	r1, #2
 800793a:	4620      	mov	r0, r4
 800793c:	f001 f94c 	bl	8008bd8 <_ZN13WheelSelector18hideBottomElementsEi>
        if (days.getSelectedItem() > 28)
 8007940:	4620      	mov	r0, r4
 8007942:	f001 f851 	bl	80089e8 <_ZN13WheelSelector15getSelectedItemEv>
 8007946:	281c      	cmp	r0, #28
 8007948:	dd18      	ble.n	800797c <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x9c>
            days.setSelectedItem(28, 20);
 800794a:	4b0d      	ldr	r3, [pc, #52]	; (8007980 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0xa0>)
 800794c:	2214      	movs	r2, #20
 800794e:	211c      	movs	r1, #28
 8007950:	e7eb      	b.n	800792a <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x4a>
    else if (numberOfDaysInMonth == 30)
 8007952:	281e      	cmp	r0, #30
 8007954:	d10c      	bne.n	8007970 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x90>
        days.hideBottomElements(1);
 8007956:	2101      	movs	r1, #1
 8007958:	4620      	mov	r0, r4
 800795a:	f001 f93d 	bl	8008bd8 <_ZN13WheelSelector18hideBottomElementsEi>
        if (days.getSelectedItem() > 29)
 800795e:	4620      	mov	r0, r4
 8007960:	f001 f842 	bl	80089e8 <_ZN13WheelSelector15getSelectedItemEv>
 8007964:	281d      	cmp	r0, #29
 8007966:	dd09      	ble.n	800797c <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x9c>
            days.setSelectedItem(29, 20);
 8007968:	4b05      	ldr	r3, [pc, #20]	; (8007980 <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0xa0>)
 800796a:	2214      	movs	r2, #20
 800796c:	211d      	movs	r1, #29
 800796e:	e7dc      	b.n	800792a <_ZN10DatePicker29selectedElementChangedHandlerERK13WheelSelectorRKi+0x4a>
        days.hideBottomElements(0);
 8007970:	4620      	mov	r0, r4
 8007972:	2100      	movs	r1, #0
}
 8007974:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        days.hideBottomElements(0);
 8007978:	f001 b92e 	b.w	8008bd8 <_ZN13WheelSelector18hideBottomElementsEi>
}
 800797c:	bd70      	pop	{r4, r5, r6, pc}
 800797e:	bf00      	nop
 8007980:	08016041 	.word	0x08016041

08007984 <_ZN13WheelSelectorD1Ev>:
class WheelSelector : public Container
 8007984:	4b0c      	ldr	r3, [pc, #48]	; (80079b8 <_ZN13WheelSelectorD1Ev+0x34>)
 8007986:	b570      	push	{r4, r5, r6, lr}
 8007988:	4604      	mov	r4, r0
 800798a:	6003      	str	r3, [r0, #0]
 800798c:	f241 7518 	movw	r5, #5912	; 0x1718
 8007990:	f640 4698 	movw	r6, #3224	; 0xc98
 8007994:	5963      	ldr	r3, [r4, r5]
 8007996:	1960      	adds	r0, r4, r5
 8007998:	681b      	ldr	r3, [r3, #0]
 800799a:	3d54      	subs	r5, #84	; 0x54
 800799c:	4798      	blx	r3
 800799e:	42b5      	cmp	r5, r6
 80079a0:	d1f8      	bne.n	8007994 <_ZN13WheelSelectorD1Ev+0x10>
 80079a2:	f44f 652d 	mov.w	r5, #2768	; 0xad0
 80079a6:	5963      	ldr	r3, [r4, r5]
 80079a8:	1960      	adds	r0, r4, r5
 80079aa:	681b      	ldr	r3, [r3, #0]
 80079ac:	3d54      	subs	r5, #84	; 0x54
 80079ae:	4798      	blx	r3
 80079b0:	2d50      	cmp	r5, #80	; 0x50
 80079b2:	d1f8      	bne.n	80079a6 <_ZN13WheelSelectorD1Ev+0x22>
 80079b4:	4620      	mov	r0, r4
 80079b6:	bd70      	pop	{r4, r5, r6, pc}
 80079b8:	080288a8 	.word	0x080288a8

080079bc <_ZN10DatePickerD1Ev>:
DatePicker::~DatePicker()
 80079bc:	4b09      	ldr	r3, [pc, #36]	; (80079e4 <_ZN10DatePickerD1Ev+0x28>)
 80079be:	b510      	push	{r4, lr}
 80079c0:	4604      	mov	r4, r0
 80079c2:	6003      	str	r3, [r0, #0]
 80079c4:	f500 504b 	add.w	r0, r0, #12992	; 0x32c0
 80079c8:	3038      	adds	r0, #56	; 0x38
 80079ca:	f7ff ffdb 	bl	8007984 <_ZN13WheelSelectorD1Ev>
 80079ce:	f504 50cd 	add.w	r0, r4, #6560	; 0x19a0
 80079d2:	300c      	adds	r0, #12
 80079d4:	f7ff ffd6 	bl	8007984 <_ZN13WheelSelectorD1Ev>
 80079d8:	f104 0060 	add.w	r0, r4, #96	; 0x60
 80079dc:	f7ff ffd2 	bl	8007984 <_ZN13WheelSelectorD1Ev>
}
 80079e0:	4620      	mov	r0, r4
 80079e2:	bd10      	pop	{r4, pc}
 80079e4:	08028514 	.word	0x08028514

080079e8 <_ZN10DatePickerD0Ev>:
DatePicker::~DatePicker()
 80079e8:	b510      	push	{r4, lr}
 80079ea:	4604      	mov	r4, r0
}
 80079ec:	f7ff ffe6 	bl	80079bc <_ZN10DatePickerD1Ev>
 80079f0:	4620      	mov	r0, r4
 80079f2:	f644 4154 	movw	r1, #19540	; 0x4c54
 80079f6:	f01c fcf0 	bl	80243da <_ZdlPvj>
 80079fa:	4620      	mov	r0, r4
 80079fc:	bd10      	pop	{r4, pc}

080079fe <_ZN13WheelSelectorD0Ev>:
 80079fe:	b510      	push	{r4, lr}
 8007a00:	4604      	mov	r4, r0
 8007a02:	f7ff ffbf 	bl	8007984 <_ZN13WheelSelectorD1Ev>
 8007a06:	4620      	mov	r0, r4
 8007a08:	f641 114c 	movw	r1, #6476	; 0x194c
 8007a0c:	f01c fce5 	bl	80243da <_ZdlPvj>
 8007a10:	4620      	mov	r0, r4
 8007a12:	bd10      	pop	{r4, pc}

08007a14 <_ZN21DateSelectorContainerC1Ev>:
#include <gui/settings_screen/DateSelectorContainer.hpp>

DateSelectorContainer::DateSelectorContainer()
 8007a14:	b570      	push	{r4, r5, r6, lr}
          visible(true)
 8007a16:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007a1a:	4606      	mov	r6, r0
        : x(0), y(0), width(0), height(0)
 8007a1c:	2500      	movs	r5, #0
 8007a1e:	8483      	strh	r3, [r0, #36]	; 0x24
 8007a20:	4b0b      	ldr	r3, [pc, #44]	; (8007a50 <_ZN21DateSelectorContainerC1Ev+0x3c>)
 8007a22:	6285      	str	r5, [r0, #40]	; 0x28
 8007a24:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8007a28:	e9c0 5503 	strd	r5, r5, [r0, #12]
 8007a2c:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8007a30:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8007a34:	f846 3b2c 	str.w	r3, [r6], #44
 8007a38:	4604      	mov	r4, r0
 8007a3a:	4630      	mov	r0, r6
 8007a3c:	f7ff fd6c 	bl	8007518 <_ZN10DatePickerC1Ev>
{
    datePicker.setXY(0, 0);
    add(datePicker);
 8007a40:	4620      	mov	r0, r4
        rect.x = x;
 8007a42:	6325      	str	r5, [r4, #48]	; 0x30
 8007a44:	4631      	mov	r1, r6
 8007a46:	f008 fd47 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007a4a:	4620      	mov	r0, r4
 8007a4c:	bd70      	pop	{r4, r5, r6, pc}
 8007a4e:	bf00      	nop
 8007a50:	080285a0 	.word	0x080285a0

08007a54 <_ZN21DateSelectorContainer7setDateEthh>:
DateSelectorContainer::~DateSelectorContainer()
{
}

void DateSelectorContainer::setDate(uint16_t year, uint8_t month, uint8_t day)
{
 8007a54:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007a56:	460c      	mov	r4, r1
 8007a58:	4619      	mov	r1, r3
 8007a5a:	4615      	mov	r5, r2
    datePicker.setDay((day - 1), 16, EasingEquations::backEaseOut);
 8007a5c:	302c      	adds	r0, #44	; 0x2c
 8007a5e:	4b0d      	ldr	r3, [pc, #52]	; (8007a94 <_ZN21DateSelectorContainer7setDateEthh+0x40>)
 8007a60:	9001      	str	r0, [sp, #4]
 8007a62:	2210      	movs	r2, #16
 8007a64:	3901      	subs	r1, #1
 8007a66:	f7ff fef1 	bl	800784c <_ZN10DatePicker6setDayEiiPFstsstE>
    datePicker.setMonth(month, 16, EasingEquations::backEaseOut);
 8007a6a:	4629      	mov	r1, r5
 8007a6c:	9801      	ldr	r0, [sp, #4]
 8007a6e:	4b09      	ldr	r3, [pc, #36]	; (8007a94 <_ZN21DateSelectorContainer7setDateEthh+0x40>)
 8007a70:	2210      	movs	r2, #16
 8007a72:	f7ff feee 	bl	8007852 <_ZN10DatePicker8setMonthEiiPFstsstE>
    if(year >= 120){
 8007a76:	2c77      	cmp	r4, #119	; 0x77
    	datePicker.setYear(year - 120, 16, EasingEquations::backEaseOut);
 8007a78:	4b06      	ldr	r3, [pc, #24]	; (8007a94 <_ZN21DateSelectorContainer7setDateEthh+0x40>)
    if(year >= 120){
 8007a7a:	9801      	ldr	r0, [sp, #4]
    	datePicker.setYear(year - 120, 16, EasingEquations::backEaseOut);
 8007a7c:	f04f 0210 	mov.w	r2, #16
 8007a80:	bf8c      	ite	hi
 8007a82:	f1a4 0178 	subhi.w	r1, r4, #120	; 0x78
    }
    else{
    	datePicker.setYear(0, 16, EasingEquations::backEaseOut);
 8007a86:	2100      	movls	r1, #0
    }
}
 8007a88:	b003      	add	sp, #12
 8007a8a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    	datePicker.setYear(0, 16, EasingEquations::backEaseOut);
 8007a8e:	f7ff bee5 	b.w	800785c <_ZN10DatePicker7setYearEiiPFstsstE>
 8007a92:	bf00      	nop
 8007a94:	08016041 	.word	0x08016041

08007a98 <_ZN21DateSelectorContainer7getYearEv>:

uint16_t DateSelectorContainer::getYear()
{
 8007a98:	b508      	push	{r3, lr}
    return (datePicker.getYear() + 120);
 8007a9a:	302c      	adds	r0, #44	; 0x2c
 8007a9c:	f7ff feeb 	bl	8007876 <_ZN10DatePicker7getYearEv>
 8007aa0:	3078      	adds	r0, #120	; 0x78
}
 8007aa2:	b280      	uxth	r0, r0
 8007aa4:	bd08      	pop	{r3, pc}

08007aa6 <_ZN21DateSelectorContainer8getMonthEv>:

uint8_t DateSelectorContainer::getMonth()
{
 8007aa6:	b508      	push	{r3, lr}
    return datePicker.getMonth();
 8007aa8:	302c      	adds	r0, #44	; 0x2c
 8007aaa:	f7ff fedf 	bl	800786c <_ZN10DatePicker8getMonthEv>
}
 8007aae:	b2c0      	uxtb	r0, r0
 8007ab0:	bd08      	pop	{r3, pc}

08007ab2 <_ZN21DateSelectorContainer6getDayEv>:

uint8_t DateSelectorContainer::getDay()
{
 8007ab2:	b508      	push	{r3, lr}
    return (datePicker.getDay() + 1);
 8007ab4:	302c      	adds	r0, #44	; 0x2c
 8007ab6:	f7ff fed6 	bl	8007866 <_ZN10DatePicker6getDayEv>
 8007aba:	3001      	adds	r0, #1
}
 8007abc:	b2c0      	uxtb	r0, r0
 8007abe:	bd08      	pop	{r3, pc}

08007ac0 <_ZN21DateSelectorContainerD1Ev>:
DateSelectorContainer::~DateSelectorContainer()
 8007ac0:	b510      	push	{r4, lr}
 8007ac2:	4b04      	ldr	r3, [pc, #16]	; (8007ad4 <_ZN21DateSelectorContainerD1Ev+0x14>)
 8007ac4:	4604      	mov	r4, r0
 8007ac6:	f840 3b2c 	str.w	r3, [r0], #44
 8007aca:	f7ff ff77 	bl	80079bc <_ZN10DatePickerD1Ev>
}
 8007ace:	4620      	mov	r0, r4
 8007ad0:	bd10      	pop	{r4, pc}
 8007ad2:	bf00      	nop
 8007ad4:	080285a0 	.word	0x080285a0

08007ad8 <_ZN21DateSelectorContainerD0Ev>:
DateSelectorContainer::~DateSelectorContainer()
 8007ad8:	b510      	push	{r4, lr}
 8007ada:	4604      	mov	r4, r0
}
 8007adc:	f7ff fff0 	bl	8007ac0 <_ZN21DateSelectorContainerD1Ev>
 8007ae0:	4620      	mov	r0, r4
 8007ae2:	f44f 4199 	mov.w	r1, #19584	; 0x4c80
 8007ae6:	f01c fc78 	bl	80243da <_ZdlPvj>
 8007aea:	4620      	mov	r0, r4
 8007aec:	bd10      	pop	{r4, pc}

08007aee <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8007aee:	4770      	bx	lr

08007af0 <_ZN19FrontendApplicationD0Ev>:
 8007af0:	b510      	push	{r4, lr}
 8007af2:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8007af6:	4604      	mov	r4, r0
 8007af8:	f01c fc6f 	bl	80243da <_ZdlPvj>
 8007afc:	4620      	mov	r0, r4
 8007afe:	bd10      	pop	{r4, pc}

08007b00 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8007b00:	b510      	push	{r4, lr}
 8007b02:	4604      	mov	r4, r0
    {
        model.tick();
 8007b04:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8007b08:	f000 f813 	bl	8007b32 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8007b0c:	4620      	mov	r0, r4
    }
 8007b0e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8007b12:	f00c bd71 	b.w	80145f8 <_ZN8touchgfx11Application15handleTickEventEv>
	...

08007b18 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8007b18:	b510      	push	{r4, lr}
 8007b1a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8007b1c:	f7fd f83a 	bl	8004b94 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8007b20:	4b01      	ldr	r3, [pc, #4]	; (8007b28 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8007b22:	6023      	str	r3, [r4, #0]
{

}
 8007b24:	4620      	mov	r0, r4
 8007b26:	bd10      	pop	{r4, pc}
 8007b28:	0802862c 	.word	0x0802862c

08007b2c <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8007b2c:	2200      	movs	r2, #0
 8007b2e:	6002      	str	r2, [r0, #0]
{

}
 8007b30:	4770      	bx	lr

08007b32 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8007b32:	4770      	bx	lr

08007b34 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8007b34:	4770      	bx	lr

08007b36 <_ZThn4_N16Screen1PresenterD1Ev>:
 8007b36:	3804      	subs	r0, #4
 8007b38:	4770      	bx	lr

08007b3a <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8007b3a:	4770      	bx	lr

08007b3c <_ZN16Screen1PresenterD0Ev>:
 8007b3c:	b510      	push	{r4, lr}
 8007b3e:	2110      	movs	r1, #16
 8007b40:	4604      	mov	r4, r0
 8007b42:	f01c fc4a 	bl	80243da <_ZdlPvj>
 8007b46:	4620      	mov	r0, r4
 8007b48:	bd10      	pop	{r4, pc}

08007b4a <_ZThn4_N16Screen1PresenterD0Ev>:
 8007b4a:	f1a0 0004 	sub.w	r0, r0, #4
 8007b4e:	e7f5      	b.n	8007b3c <_ZN16Screen1PresenterD0Ev>

08007b50 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8007b50:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8007b52:	2200      	movs	r2, #0
 8007b54:	6082      	str	r2, [r0, #8]
    : view(v)
 8007b56:	4a04      	ldr	r2, [pc, #16]	; (8007b68 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8007b58:	60c1      	str	r1, [r0, #12]
 8007b5a:	f102 0408 	add.w	r4, r2, #8
 8007b5e:	3220      	adds	r2, #32
 8007b60:	6004      	str	r4, [r0, #0]
 8007b62:	6042      	str	r2, [r0, #4]
}
 8007b64:	bd10      	pop	{r4, pc}
 8007b66:	bf00      	nop
 8007b68:	08028668 	.word	0x08028668

08007b6c <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8007b6c:	4770      	bx	lr
	...

08007b70 <_ZN11Screen1View18functionFilterDataEv>:
	modalWindow1.setVisible(false);
	invalidate();
}

void Screen1View::functionFilterData(void)
{
 8007b70:	b570      	push	{r4, r5, r6, lr}
	tmp = time_stop_fil;
 8007b72:	f64e 03e4 	movw	r3, #59620	; 0xe8e4
 8007b76:	4e1a      	ldr	r6, [pc, #104]	; (8007be0 <_ZN11Screen1View18functionFilterDataEv+0x70>)
 8007b78:	58c3      	ldr	r3, [r0, r3]
 8007b7a:	6033      	str	r3, [r6, #0]
{
 8007b7c:	4605      	mov	r5, r0
	timeptr = *gmtime(&tmp);
 8007b7e:	4630      	mov	r0, r6
 8007b80:	f001 f9de 	bl	8008f40 <gmtime>
 8007b84:	4c17      	ldr	r4, [pc, #92]	; (8007be4 <_ZN11Screen1View18functionFilterDataEv+0x74>)
 8007b86:	6803      	ldr	r3, [r0, #0]
 8007b88:	6023      	str	r3, [r4, #0]
 8007b8a:	6843      	ldr	r3, [r0, #4]
 8007b8c:	6063      	str	r3, [r4, #4]
 8007b8e:	6883      	ldr	r3, [r0, #8]
	dateSelectorContainerStop.setDate(timeptr.tm_year, timeptr.tm_mon, timeptr.tm_mday);
 8007b90:	7962      	ldrb	r2, [r4, #5]
 8007b92:	88e1      	ldrh	r1, [r4, #6]
	timeptr = *gmtime(&tmp);
 8007b94:	60a3      	str	r3, [r4, #8]
	dateSelectorContainerStop.setDate(timeptr.tm_year, timeptr.tm_mon, timeptr.tm_mday);
 8007b96:	f505 401b 	add.w	r0, r5, #39680	; 0x9b00
 8007b9a:	78e3      	ldrb	r3, [r4, #3]
 8007b9c:	30ec      	adds	r0, #236	; 0xec
 8007b9e:	f7ff ff59 	bl	8007a54 <_ZN21DateSelectorContainer7setDateEthh>

	tmp = time_start_fil;
 8007ba2:	f64e 03e0 	movw	r3, #59616	; 0xe8e0
	timeptr = *gmtime(&tmp);
 8007ba6:	4630      	mov	r0, r6
	tmp = time_start_fil;
 8007ba8:	58eb      	ldr	r3, [r5, r3]
 8007baa:	6033      	str	r3, [r6, #0]
	timeptr = *gmtime(&tmp);
 8007bac:	f001 f9c8 	bl	8008f40 <gmtime>
 8007bb0:	6803      	ldr	r3, [r0, #0]
 8007bb2:	6023      	str	r3, [r4, #0]
 8007bb4:	6843      	ldr	r3, [r0, #4]
 8007bb6:	6063      	str	r3, [r4, #4]
 8007bb8:	6883      	ldr	r3, [r0, #8]
	dateSelectorContainerStart.setDate(timeptr.tm_year, timeptr.tm_mon, timeptr.tm_mday);
 8007bba:	7962      	ldrb	r2, [r4, #5]
	timeptr = *gmtime(&tmp);
 8007bbc:	60a3      	str	r3, [r4, #8]
	dateSelectorContainerStart.setDate(timeptr.tm_year, timeptr.tm_mon, timeptr.tm_mday);
 8007bbe:	f505 409e 	add.w	r0, r5, #20224	; 0x4f00
 8007bc2:	78e3      	ldrb	r3, [r4, #3]
 8007bc4:	88e1      	ldrh	r1, [r4, #6]
 8007bc6:	306c      	adds	r0, #108	; 0x6c
 8007bc8:	f7ff ff44 	bl	8007a54 <_ZN21DateSelectorContainer7setDateEthh>
        visible = vis;
 8007bcc:	f244 2339 	movw	r3, #16953	; 0x4239
 8007bd0:	2201      	movs	r2, #1
 8007bd2:	54ea      	strb	r2, [r5, r3]
     *
     * @see Container::invalidate
     */
    void invalidate() const
    {
        container.invalidate();
 8007bd4:	1d28      	adds	r0, r5, #4


	modalWindow1.setVisible(true);
	invalidate();
}
 8007bd6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8007bda:	f00d bde1 	b.w	80157a0 <_ZNK8touchgfx8Drawable10invalidateEv>
 8007bde:	bf00      	nop
 8007be0:	2000fafc 	.word	0x2000fafc
 8007be4:	2000fb00 	.word	0x2000fb00

08007be8 <_ZN11Screen1View21functionOkFilDataTimeEv>:
{
 8007be8:	b573      	push	{r0, r1, r4, r5, r6, lr}
	timeptr1.tm_year = dateSelectorContainerStart.getYear();
 8007bea:	f500 469e 	add.w	r6, r0, #20224	; 0x4f00
 8007bee:	366c      	adds	r6, #108	; 0x6c
{
 8007bf0:	4605      	mov	r5, r0
	timeptr1.tm_year = dateSelectorContainerStart.getYear();
 8007bf2:	4630      	mov	r0, r6
 8007bf4:	f7ff ff50 	bl	8007a98 <_ZN21DateSelectorContainer7getYearEv>
 8007bf8:	4c25      	ldr	r4, [pc, #148]	; (8007c90 <_ZN11Screen1View21functionOkFilDataTimeEv+0xa8>)
 8007bfa:	80e0      	strh	r0, [r4, #6]
	timeptr1.tm_mon 	= dateSelectorContainerStart.getMonth();
 8007bfc:	4630      	mov	r0, r6
 8007bfe:	f7ff ff52 	bl	8007aa6 <_ZN21DateSelectorContainer8getMonthEv>
 8007c02:	7160      	strb	r0, [r4, #5]
	timeptr1.tm_mday = dateSelectorContainerStart.getDay();
 8007c04:	4630      	mov	r0, r6
 8007c06:	f7ff ff54 	bl	8007ab2 <_ZN21DateSelectorContainer6getDayEv>
	Unicode::snprintf(flexButtonFilterDataBuffer1, FLEXBUTTONFILTERDATABUFFER1_SIZE, "%.2d-%.2d-%4d", timeptr1.tm_mday, timeptr1.tm_mon, timeptr1.tm_year + 1900);
 8007c0a:	88e3      	ldrh	r3, [r4, #6]
	timeptr1.tm_mday = dateSelectorContainerStart.getDay();
 8007c0c:	70e0      	strb	r0, [r4, #3]
	Unicode::snprintf(flexButtonFilterDataBuffer1, FLEXBUTTONFILTERDATABUFFER1_SIZE, "%.2d-%.2d-%4d", timeptr1.tm_mday, timeptr1.tm_mon, timeptr1.tm_year + 1900);
 8007c0e:	f203 736c 	addw	r3, r3, #1900	; 0x76c
 8007c12:	9301      	str	r3, [sp, #4]
 8007c14:	7963      	ldrb	r3, [r4, #5]
 8007c16:	9300      	str	r3, [sp, #0]
 8007c18:	4603      	mov	r3, r0
 8007c1a:	f505 409d 	add.w	r0, r5, #20096	; 0x4e80
 8007c1e:	4a1d      	ldr	r2, [pc, #116]	; (8007c94 <_ZN11Screen1View21functionOkFilDataTimeEv+0xac>)
 8007c20:	210b      	movs	r1, #11
 8007c22:	3004      	adds	r0, #4
 8007c24:	f010 fabc 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	time_start_fil 	= (uint32_t)mktime(&timeptr1);
 8007c28:	4620      	mov	r0, r4
 8007c2a:	f001 fa8f 	bl	800914c <mktime>
	timeptr1.tm_year = dateSelectorContainerStop.getYear();
 8007c2e:	f505 461b 	add.w	r6, r5, #39680	; 0x9b00
	time_start_fil 	= (uint32_t)mktime(&timeptr1);
 8007c32:	f64e 03e0 	movw	r3, #59616	; 0xe8e0
	timeptr1.tm_year = dateSelectorContainerStop.getYear();
 8007c36:	36ec      	adds	r6, #236	; 0xec
	time_start_fil 	= (uint32_t)mktime(&timeptr1);
 8007c38:	50e8      	str	r0, [r5, r3]
	timeptr1.tm_year = dateSelectorContainerStop.getYear();
 8007c3a:	4630      	mov	r0, r6
 8007c3c:	f7ff ff2c 	bl	8007a98 <_ZN21DateSelectorContainer7getYearEv>
 8007c40:	80e0      	strh	r0, [r4, #6]
	timeptr1.tm_mon 	= dateSelectorContainerStop.getMonth();
 8007c42:	4630      	mov	r0, r6
 8007c44:	f7ff ff2f 	bl	8007aa6 <_ZN21DateSelectorContainer8getMonthEv>
 8007c48:	7160      	strb	r0, [r4, #5]
	timeptr1.tm_mday = dateSelectorContainerStop.getDay();
 8007c4a:	4630      	mov	r0, r6
 8007c4c:	f7ff ff31 	bl	8007ab2 <_ZN21DateSelectorContainer6getDayEv>
	Unicode::snprintf(flexButtonFilterDataBuffer2, FLEXBUTTONFILTERDATABUFFER2_SIZE, "%.2d-%.2d-%4d", timeptr1.tm_mday, timeptr1.tm_mon, timeptr1.tm_year + 1900);
 8007c50:	88e3      	ldrh	r3, [r4, #6]
	timeptr1.tm_mday = dateSelectorContainerStop.getDay();
 8007c52:	70e0      	strb	r0, [r4, #3]
	Unicode::snprintf(flexButtonFilterDataBuffer2, FLEXBUTTONFILTERDATABUFFER2_SIZE, "%.2d-%.2d-%4d", timeptr1.tm_mday, timeptr1.tm_mon, timeptr1.tm_year + 1900);
 8007c54:	f203 736c 	addw	r3, r3, #1900	; 0x76c
 8007c58:	9301      	str	r3, [sp, #4]
 8007c5a:	7963      	ldrb	r3, [r4, #5]
 8007c5c:	9300      	str	r3, [sp, #0]
 8007c5e:	4603      	mov	r3, r0
 8007c60:	f505 409d 	add.w	r0, r5, #20096	; 0x4e80
 8007c64:	4a0b      	ldr	r2, [pc, #44]	; (8007c94 <_ZN11Screen1View21functionOkFilDataTimeEv+0xac>)
 8007c66:	210b      	movs	r1, #11
 8007c68:	301a      	adds	r0, #26
 8007c6a:	f010 fa99 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	time_stop_fil 	= (uint32_t)mktime(&timeptr1);
 8007c6e:	4620      	mov	r0, r4
 8007c70:	f001 fa6c 	bl	800914c <mktime>
 8007c74:	f64e 03e4 	movw	r3, #59620	; 0xe8e4
 8007c78:	2200      	movs	r2, #0
 8007c7a:	50e8      	str	r0, [r5, r3]
 8007c7c:	f244 2339 	movw	r3, #16953	; 0x4239
 8007c80:	1d28      	adds	r0, r5, #4
 8007c82:	54ea      	strb	r2, [r5, r3]
}
 8007c84:	b002      	add	sp, #8
 8007c86:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8007c8a:	f00d bd89 	b.w	80157a0 <_ZNK8touchgfx8Drawable10invalidateEv>
 8007c8e:	bf00      	nop
 8007c90:	2000fb0c 	.word	0x2000fb0c
 8007c94:	08028690 	.word	0x08028690

08007c98 <_ZN11Screen1View11setupScreenEv>:
{
 8007c98:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007c9c:	4604      	mov	r4, r0
    read_start_stop_state_archiv(&time_start_fil, &time_stop_fil);
 8007c9e:	f64e 0be0 	movw	fp, #59616	; 0xe8e0
 8007ca2:	f64e 05e4 	movw	r5, #59620	; 0xe8e4
    Screen1ViewBase::setupScreen();
 8007ca6:	f7fd fa71 	bl	800518c <_ZN15Screen1ViewBase11setupScreenEv>
    tmp = time_stop_fil;
 8007caa:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8007d74 <_ZN11Screen1View11setupScreenEv+0xdc>
    read_start_stop_state_archiv(&time_start_fil, &time_stop_fil);
 8007cae:	1961      	adds	r1, r4, r5
 8007cb0:	eb04 000b 	add.w	r0, r4, fp
 8007cb4:	f7f9 fe71 	bl	800199a <read_start_stop_state_archiv>
    time_stop_fil = 1735039935;
 8007cb8:	4b2b      	ldr	r3, [pc, #172]	; (8007d68 <_ZN11Screen1View11setupScreenEv+0xd0>)
 8007cba:	5163      	str	r3, [r4, r5]
	timeptr = *gmtime(&tmp);
 8007cbc:	4650      	mov	r0, sl
    time_start_fil = time_stop_fil;
 8007cbe:	f844 300b 	str.w	r3, [r4, fp]
    tmp = time_stop_fil;
 8007cc2:	f8ca 3000 	str.w	r3, [sl]
	timeptr = *gmtime(&tmp);
 8007cc6:	f001 f93b 	bl	8008f40 <gmtime>
 8007cca:	4d28      	ldr	r5, [pc, #160]	; (8007d6c <_ZN11Screen1View11setupScreenEv+0xd4>)
 8007ccc:	6803      	ldr	r3, [r0, #0]
 8007cce:	602b      	str	r3, [r5, #0]
 8007cd0:	6843      	ldr	r3, [r0, #4]
 8007cd2:	606b      	str	r3, [r5, #4]
 8007cd4:	6883      	ldr	r3, [r0, #8]
 8007cd6:	60ab      	str	r3, [r5, #8]
	dateSelectorContainerStop.setPosition(250, 50, modalWindow1.getWidth(), modalWindow1.getHeight());
 8007cd8:	f244 291c 	movw	r9, #16924	; 0x421c
 8007cdc:	f244 281e 	movw	r8, #16926	; 0x421e
        rect.x = x;
 8007ce0:	f649 33f0 	movw	r3, #39920	; 0x9bf0
 8007ce4:	f504 461b 	add.w	r6, r4, #39680	; 0x9b00
 8007ce8:	36ec      	adds	r6, #236	; 0xec
 8007cea:	4821      	ldr	r0, [pc, #132]	; (8007d70 <_ZN11Screen1View11setupScreenEv+0xd8>)
 8007cec:	f934 1009 	ldrsh.w	r1, [r4, r9]
 8007cf0:	f934 2008 	ldrsh.w	r2, [r4, r8]
 8007cf4:	50e0      	str	r0, [r4, r3]
	modalWindow1.add(dateSelectorContainerStop);
 8007cf6:	f504 4784 	add.w	r7, r4, #16896	; 0x4200
        setWidthHeight(width, height);
 8007cfa:	4630      	mov	r0, r6
 8007cfc:	f7fa f9cf 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8007d00:	3714      	adds	r7, #20
	dateSelectorContainerStop.setDate(timeptr.tm_year, timeptr.tm_mon, timeptr.tm_mday);
 8007d02:	796a      	ldrb	r2, [r5, #5]
 8007d04:	78eb      	ldrb	r3, [r5, #3]
 8007d06:	88e9      	ldrh	r1, [r5, #6]
 8007d08:	4630      	mov	r0, r6
 8007d0a:	f7ff fea3 	bl	8007a54 <_ZN21DateSelectorContainer7setDateEthh>
	modalWindow1.add(dateSelectorContainerStop);
 8007d0e:	4631      	mov	r1, r6
 8007d10:	4638      	mov	r0, r7
 8007d12:	f008 fa9a 	bl	801024a <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    tmp = time_start_fil;
 8007d16:	f854 300b 	ldr.w	r3, [r4, fp]
 8007d1a:	f8ca 3000 	str.w	r3, [sl]
    timeptr = *gmtime(&tmp);
 8007d1e:	4650      	mov	r0, sl
 8007d20:	f001 f90e 	bl	8008f40 <gmtime>
 8007d24:	6803      	ldr	r3, [r0, #0]
 8007d26:	602b      	str	r3, [r5, #0]
 8007d28:	6843      	ldr	r3, [r0, #4]
 8007d2a:	606b      	str	r3, [r5, #4]
 8007d2c:	6883      	ldr	r3, [r0, #8]
 8007d2e:	60ab      	str	r3, [r5, #8]
    dateSelectorContainerStart.setPosition(0, 50, modalWindow1.getWidth(), modalWindow1.getHeight());
 8007d30:	f504 469e 	add.w	r6, r4, #20224	; 0x4f00
        rect.x = x;
 8007d34:	f644 7370 	movw	r3, #20336	; 0x4f70
 8007d38:	366c      	adds	r6, #108	; 0x6c
 8007d3a:	f44f 1048 	mov.w	r0, #3276800	; 0x320000
 8007d3e:	f934 1009 	ldrsh.w	r1, [r4, r9]
 8007d42:	f934 2008 	ldrsh.w	r2, [r4, r8]
 8007d46:	50e0      	str	r0, [r4, r3]
        setWidthHeight(width, height);
 8007d48:	4630      	mov	r0, r6
 8007d4a:	f7fa f9a8 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
    dateSelectorContainerStart.setDate(timeptr.tm_year, timeptr.tm_mon, timeptr.tm_mday);
 8007d4e:	88e9      	ldrh	r1, [r5, #6]
 8007d50:	78eb      	ldrb	r3, [r5, #3]
 8007d52:	796a      	ldrb	r2, [r5, #5]
 8007d54:	4630      	mov	r0, r6
 8007d56:	f7ff fe7d 	bl	8007a54 <_ZN21DateSelectorContainer7setDateEthh>
    modalWindow1.add(dateSelectorContainerStart);
 8007d5a:	4631      	mov	r1, r6
 8007d5c:	4638      	mov	r0, r7
}
 8007d5e:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    modalWindow1.add(dateSelectorContainerStart);
 8007d62:	f008 ba72 	b.w	801024a <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
 8007d66:	bf00      	nop
 8007d68:	676a9bbf 	.word	0x676a9bbf
 8007d6c:	2000fb00 	.word	0x2000fb00
 8007d70:	003200fa 	.word	0x003200fa
 8007d74:	2000fafc 	.word	0x2000fafc

08007d78 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8007d78:	b510      	push	{r4, lr}
 8007d7a:	4604      	mov	r4, r0
 8007d7c:	f7fd fae6 	bl	800534c <_ZN15Screen1ViewBaseC1Ev>
 8007d80:	4b2a      	ldr	r3, [pc, #168]	; (8007e2c <_ZN11Screen1ViewC1Ev+0xb4>)
 8007d82:	6023      	str	r3, [r4, #0]
 8007d84:	f504 409e 	add.w	r0, r4, #20224	; 0x4f00
 8007d88:	306c      	adds	r0, #108	; 0x6c
 8007d8a:	f7ff fe43 	bl	8007a14 <_ZN21DateSelectorContainerC1Ev>
 8007d8e:	f504 401b 	add.w	r0, r4, #39680	; 0x9b00
 8007d92:	30ec      	adds	r0, #236	; 0xec
 8007d94:	f7ff fe3e 	bl	8007a14 <_ZN21DateSelectorContainerC1Ev>
 8007d98:	f64e 03d0 	movw	r3, #59600	; 0xe8d0
 8007d9c:	f04f 1201 	mov.w	r2, #65537	; 0x10001
 8007da0:	50e2      	str	r2, [r4, r3]
 8007da2:	f64e 03d4 	movw	r3, #59604	; 0xe8d4
 8007da6:	2201      	movs	r2, #1
 8007da8:	52e2      	strh	r2, [r4, r3]
 8007daa:	f504 4368 	add.w	r3, r4, #59392	; 0xe800
 8007dae:	f64e 02f4 	movw	r2, #59636	; 0xe8f4
 8007db2:	336c      	adds	r3, #108	; 0x6c
 8007db4:	50a3      	str	r3, [r4, r2]
 8007db6:	f64e 02f8 	movw	r2, #59640	; 0xe8f8
}
 8007dba:	4620      	mov	r0, r4
Screen1View::Screen1View()
 8007dbc:	50a3      	str	r3, [r4, r2]
 8007dbe:	f64e 03fc 	movw	r3, #59644	; 0xe8fc
 8007dc2:	f104 02d0 	add.w	r2, r4, #208	; 0xd0
 8007dc6:	50e2      	str	r2, [r4, r3]
 8007dc8:	f504 4369 	add.w	r3, r4, #59648	; 0xe900
 8007dcc:	f504 62d4 	add.w	r2, r4, #1696	; 0x6a0
 8007dd0:	601a      	str	r2, [r3, #0]
 8007dd2:	f64e 1304 	movw	r3, #59652	; 0xe904
 8007dd6:	f504 6247 	add.w	r2, r4, #3184	; 0xc70
 8007dda:	50e2      	str	r2, [r4, r3]
 8007ddc:	f64e 1308 	movw	r3, #59656	; 0xe908
 8007de0:	f504 5292 	add.w	r2, r4, #4672	; 0x1240
 8007de4:	50e2      	str	r2, [r4, r3]
 8007de6:	f504 53c0 	add.w	r3, r4, #6144	; 0x1800
 8007dea:	f64e 120c 	movw	r2, #59660	; 0xe90c
 8007dee:	3310      	adds	r3, #16
 8007df0:	50a3      	str	r3, [r4, r2]
 8007df2:	f64e 1310 	movw	r3, #59664	; 0xe910
 8007df6:	f504 52ef 	add.w	r2, r4, #7648	; 0x1de0
 8007dfa:	50e2      	str	r2, [r4, r3]
 8007dfc:	f504 530e 	add.w	r3, r4, #9088	; 0x2380
 8007e00:	f64e 1214 	movw	r2, #59668	; 0xe914
 8007e04:	3330      	adds	r3, #48	; 0x30
 8007e06:	50a3      	str	r3, [r4, r2]
 8007e08:	f64e 1318 	movw	r3, #59672	; 0xe918
 8007e0c:	f504 5226 	add.w	r2, r4, #10624	; 0x2980
 8007e10:	50e2      	str	r2, [r4, r3]
 8007e12:	f504 533d 	add.w	r3, r4, #12096	; 0x2f40
 8007e16:	f64e 121c 	movw	r2, #59676	; 0xe91c
 8007e1a:	3310      	adds	r3, #16
 8007e1c:	50a3      	str	r3, [r4, r2]
 8007e1e:	f504 5354 	add.w	r3, r4, #13568	; 0x3500
 8007e22:	f64e 1220 	movw	r2, #59680	; 0xe920
 8007e26:	3320      	adds	r3, #32
 8007e28:	50a3      	str	r3, [r4, r2]
}
 8007e2a:	bd10      	pop	{r4, pc}
 8007e2c:	080286a8 	.word	0x080286a8

08007e30 <_ZN11Screen1View11PageRefreshEv>:
{
 8007e30:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	touchgfx::Unicode::itoa((first_page_table), 		flexButtonPage_1Buffer, FLEXBUTTONPAGE_1_SIZE, 10);
 8007e34:	f64e 05d2 	movw	r5, #59602	; 0xe8d2
{
 8007e38:	4604      	mov	r4, r0
	touchgfx::Unicode::itoa((first_page_table), 		flexButtonPage_1Buffer, FLEXBUTTONPAGE_1_SIZE, 10);
 8007e3a:	230a      	movs	r3, #10
 8007e3c:	f500 419d 	add.w	r1, r0, #20096	; 0x4e80
 8007e40:	461a      	mov	r2, r3
 8007e42:	5b40      	ldrh	r0, [r0, r5]
 8007e44:	3144      	adds	r1, #68	; 0x44
 8007e46:	f00f fe4f 	bl	8017ae8 <_ZN8touchgfx7Unicode4itoaElPtti>
	touchgfx::Unicode::itoa((first_page_table + 1), 	flexButtonPage_2Buffer, FLEXBUTTONPAGE_2_SIZE, 10);
 8007e4a:	5b60      	ldrh	r0, [r4, r5]
 8007e4c:	230a      	movs	r3, #10
 8007e4e:	f504 419d 	add.w	r1, r4, #20096	; 0x4e80
 8007e52:	461a      	mov	r2, r3
 8007e54:	3158      	adds	r1, #88	; 0x58
 8007e56:	3001      	adds	r0, #1
 8007e58:	f00f fe46 	bl	8017ae8 <_ZN8touchgfx7Unicode4itoaElPtti>
	touchgfx::Unicode::itoa((first_page_table + 2), 	flexButtonPage_3Buffer, FLEXBUTTONPAGE_3_SIZE, 10);
 8007e5c:	5b60      	ldrh	r0, [r4, r5]
 8007e5e:	230a      	movs	r3, #10
 8007e60:	f504 419d 	add.w	r1, r4, #20096	; 0x4e80
 8007e64:	461a      	mov	r2, r3
 8007e66:	316c      	adds	r1, #108	; 0x6c
 8007e68:	3002      	adds	r0, #2
 8007e6a:	f00f fe3d 	bl	8017ae8 <_ZN8touchgfx7Unicode4itoaElPtti>
	touchgfx::Unicode::itoa((first_page_table + 3), 	flexButtonPage_4Buffer, FLEXBUTTONPAGE_4_SIZE, 10);
 8007e6e:	5b60      	ldrh	r0, [r4, r5]
 8007e70:	230a      	movs	r3, #10
 8007e72:	461a      	mov	r2, r3
 8007e74:	f504 419e 	add.w	r1, r4, #20224	; 0x4f00
 8007e78:	3003      	adds	r0, #3
 8007e7a:	f00f fe35 	bl	8017ae8 <_ZN8touchgfx7Unicode4itoaElPtti>
	touchgfx::Unicode::itoa((first_page_table + 4), 	flexButtonPage_5Buffer, FLEXBUTTONPAGE_5_SIZE, 10);
 8007e7e:	5b60      	ldrh	r0, [r4, r5]
 8007e80:	230a      	movs	r3, #10
 8007e82:	f504 419e 	add.w	r1, r4, #20224	; 0x4f00
 8007e86:	461a      	mov	r2, r3
 8007e88:	3114      	adds	r1, #20
 8007e8a:	3004      	adds	r0, #4
 8007e8c:	f00f fe2c 	bl	8017ae8 <_ZN8touchgfx7Unicode4itoaElPtti>
	if(current_page_table == 1){
 8007e90:	f64e 03d4 	movw	r3, #59604	; 0xe8d4
 8007e94:	f643 42f9 	movw	r2, #15609	; 0x3cf9
 8007e98:	5ae3      	ldrh	r3, [r4, r3]
 8007e9a:	1e59      	subs	r1, r3, #1
 8007e9c:	bf18      	it	ne
 8007e9e:	2101      	movne	r1, #1
 8007ea0:	54a1      	strb	r1, [r4, r2]
	if((current_page_table*10) > search_count_log){
 8007ea2:	f64e 01d6 	movw	r1, #59606	; 0xe8d6
 8007ea6:	220a      	movs	r2, #10
 8007ea8:	435a      	muls	r2, r3
 8007eaa:	5a63      	ldrh	r3, [r4, r1]
 8007eac:	429a      	cmp	r2, r3
 8007eae:	dd49      	ble.n	8007f44 <_ZN11Screen1View11PageRefreshEv+0x114>
		search_count_log += 10;
 8007eb0:	330a      	adds	r3, #10
 8007eb2:	b29b      	uxth	r3, r3
		if((current_page_table*10) != search_count_log){
 8007eb4:	429a      	cmp	r2, r3
		search_count_log += 10;
 8007eb6:	5263      	strh	r3, [r4, r1]
		if((current_page_table*10) != search_count_log){
 8007eb8:	d044      	beq.n	8007f44 <_ZN11Screen1View11PageRefreshEv+0x114>
        visible = vis;
 8007eba:	f244 1379 	movw	r3, #16761	; 0x4179
 8007ebe:	2200      	movs	r2, #0
	flexButtonPage_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 8007ec0:	f504 5a76 	add.w	sl, r4, #15744	; 0x3d80
 8007ec4:	4d4f      	ldr	r5, [pc, #316]	; (8008004 <_ZN11Screen1View11PageRefreshEv+0x1d4>)
 8007ec6:	54e2      	strb	r2, [r4, r3]
 8007ec8:	f10a 0a14 	add.w	sl, sl, #20
	flexButtonPage_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 8007ecc:	f504 5979 	add.w	r9, r4, #15936	; 0x3e40
	flexButtonPage_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 8007ed0:	4b4d      	ldr	r3, [pc, #308]	; (8008008 <_ZN11Screen1View11PageRefreshEv+0x1d8>)
 8007ed2:	4a4e      	ldr	r2, [pc, #312]	; (800800c <_ZN11Screen1View11PageRefreshEv+0x1dc>)
 8007ed4:	494e      	ldr	r1, [pc, #312]	; (8008010 <_ZN11Screen1View11PageRefreshEv+0x1e0>)
 8007ed6:	9500      	str	r5, [sp, #0]
 8007ed8:	4650      	mov	r0, sl
	flexButtonPage_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 8007eda:	f109 0914 	add.w	r9, r9, #20
	flexButtonPage_3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 8007ede:	f504 587c 	add.w	r8, r4, #16128	; 0x3f00
	flexButtonPage_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 8007ee2:	f7fa fcd3 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
	flexButtonPage_3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 8007ee6:	f108 0814 	add.w	r8, r8, #20
	flexButtonPage_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 8007eea:	4b47      	ldr	r3, [pc, #284]	; (8008008 <_ZN11Screen1View11PageRefreshEv+0x1d8>)
 8007eec:	4a47      	ldr	r2, [pc, #284]	; (800800c <_ZN11Screen1View11PageRefreshEv+0x1dc>)
 8007eee:	4948      	ldr	r1, [pc, #288]	; (8008010 <_ZN11Screen1View11PageRefreshEv+0x1e0>)
 8007ef0:	9500      	str	r5, [sp, #0]
 8007ef2:	4648      	mov	r0, r9
	flexButtonPage_4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 8007ef4:	f504 577f 	add.w	r7, r4, #16320	; 0x3fc0
	flexButtonPage_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 8007ef8:	f7fa fcc8 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
	flexButtonPage_4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 8007efc:	3714      	adds	r7, #20
	flexButtonPage_3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 8007efe:	4b42      	ldr	r3, [pc, #264]	; (8008008 <_ZN11Screen1View11PageRefreshEv+0x1d8>)
 8007f00:	4a42      	ldr	r2, [pc, #264]	; (800800c <_ZN11Screen1View11PageRefreshEv+0x1dc>)
 8007f02:	4943      	ldr	r1, [pc, #268]	; (8008010 <_ZN11Screen1View11PageRefreshEv+0x1e0>)
 8007f04:	9500      	str	r5, [sp, #0]
 8007f06:	4640      	mov	r0, r8
	flexButtonPage_5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 8007f08:	f504 4681 	add.w	r6, r4, #16512	; 0x4080
	flexButtonPage_3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 8007f0c:	f7fa fcbe 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
	flexButtonPage_5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 8007f10:	3614      	adds	r6, #20
	flexButtonPage_4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 8007f12:	4b3d      	ldr	r3, [pc, #244]	; (8008008 <_ZN11Screen1View11PageRefreshEv+0x1d8>)
 8007f14:	4a3d      	ldr	r2, [pc, #244]	; (800800c <_ZN11Screen1View11PageRefreshEv+0x1dc>)
 8007f16:	493e      	ldr	r1, [pc, #248]	; (8008010 <_ZN11Screen1View11PageRefreshEv+0x1e0>)
 8007f18:	9500      	str	r5, [sp, #0]
 8007f1a:	4638      	mov	r0, r7
 8007f1c:	f7fa fcb6 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
	flexButtonPage_5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204),
 8007f20:	4b39      	ldr	r3, [pc, #228]	; (8008008 <_ZN11Screen1View11PageRefreshEv+0x1d8>)
 8007f22:	4a3a      	ldr	r2, [pc, #232]	; (800800c <_ZN11Screen1View11PageRefreshEv+0x1dc>)
 8007f24:	493a      	ldr	r1, [pc, #232]	; (8008010 <_ZN11Screen1View11PageRefreshEv+0x1e0>)
 8007f26:	9500      	str	r5, [sp, #0]
 8007f28:	4630      	mov	r0, r6
 8007f2a:	f7fa fcaf 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
	switch(current_button_table){
 8007f2e:	f64e 03d0 	movw	r3, #59600	; 0xe8d0
 8007f32:	5ae3      	ldrh	r3, [r4, r3]
 8007f34:	3b01      	subs	r3, #1
 8007f36:	2b04      	cmp	r3, #4
 8007f38:	d810      	bhi.n	8007f5c <_ZN11Screen1View11PageRefreshEv+0x12c>
 8007f3a:	e8df f003 	tbb	[pc, r3]
 8007f3e:	3b07      	.short	0x3b07
 8007f40:	4942      	.short	0x4942
 8007f42:	50          	.byte	0x50
 8007f43:	00          	.byte	0x00
 8007f44:	f244 1379 	movw	r3, #16761	; 0x4179
 8007f48:	2201      	movs	r2, #1
 8007f4a:	e7b9      	b.n	8007ec0 <_ZN11Screen1View11PageRefreshEv+0x90>
    colortype(uint32_t col)
 8007f4c:	4b31      	ldr	r3, [pc, #196]	; (8008014 <_ZN11Screen1View11PageRefreshEv+0x1e4>)
		flexButtonPage_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(153, 0, 0), touchgfx::Color::getColorFromRGB(204, 0, 0),
 8007f4e:	9300      	str	r3, [sp, #0]
 8007f50:	4a31      	ldr	r2, [pc, #196]	; (8008018 <_ZN11Screen1View11PageRefreshEv+0x1e8>)
 8007f52:	4b32      	ldr	r3, [pc, #200]	; (800801c <_ZN11Screen1View11PageRefreshEv+0x1ec>)
 8007f54:	4932      	ldr	r1, [pc, #200]	; (8008020 <_ZN11Screen1View11PageRefreshEv+0x1f0>)
 8007f56:	4650      	mov	r0, sl
		flexButtonPage_5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(153, 0, 0), touchgfx::Color::getColorFromRGB(204, 0, 0),
 8007f58:	f7fa fc98 	bl	800288c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
		if(parce_found_logs(data_log, ((current_page_table - 1)*10) + i)){
 8007f5c:	f504 4768 	add.w	r7, r4, #59392	; 0xe800
 8007f60:	f504 4868 	add.w	r8, r4, #59392	; 0xe800
 8007f64:	f504 4668 	add.w	r6, r4, #59392	; 0xe800
{
 8007f68:	2500      	movs	r5, #0
		if(parce_found_logs(data_log, ((current_page_table - 1)*10) + i)){
 8007f6a:	37d4      	adds	r7, #212	; 0xd4
 8007f6c:	f108 086c 	add.w	r8, r8, #108	; 0x6c
 8007f70:	36d8      	adds	r6, #216	; 0xd8
 8007f72:	8839      	ldrh	r1, [r7, #0]
 8007f74:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8007f78:	eb05 0141 	add.w	r1, r5, r1, lsl #1
 8007f7c:	390a      	subs	r1, #10
 8007f7e:	b289      	uxth	r1, r1
 8007f80:	4640      	mov	r0, r8
 8007f82:	f7f9 fd08 	bl	8001996 <parce_found_logs>
 8007f86:	2800      	cmp	r0, #0
 8007f88:	d030      	beq.n	8007fec <_ZN11Screen1View11PageRefreshEv+0x1bc>
			if(type_log_fil == TYPE_LOG_READINGS){
 8007f8a:	7833      	ldrb	r3, [r6, #0]
 8007f8c:	b94b      	cbnz	r3, 8007fa2 <_ZN11Screen1View11PageRefreshEv+0x172>
				mas_ContainerTableLog[i]->UpdateLog_1(Event_log_readings_ptr);
 8007f8e:	f504 4368 	add.w	r3, r4, #59392	; 0xe800
 8007f92:	33fc      	adds	r3, #252	; 0xfc
 8007f94:	f64e 02f4 	movw	r2, #59636	; 0xe8f4
 8007f98:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8007f9c:	58a1      	ldr	r1, [r4, r2]
 8007f9e:	f7ff fa4f 	bl	8007440 <_ZN23CustomContainerTableLog11UpdateLog_1EP15TileInfoTypeDef>
	for(uint8_t i = 0; i < 10; i++){
 8007fa2:	3501      	adds	r5, #1
 8007fa4:	2d0a      	cmp	r5, #10
 8007fa6:	d1e4      	bne.n	8007f72 <_ZN11Screen1View11PageRefreshEv+0x142>
 8007fa8:	1d20      	adds	r0, r4, #4
}
 8007faa:	b002      	add	sp, #8
 8007fac:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007fb0:	f00d bbf6 	b.w	80157a0 <_ZNK8touchgfx8Drawable10invalidateEv>
 8007fb4:	4b17      	ldr	r3, [pc, #92]	; (8008014 <_ZN11Screen1View11PageRefreshEv+0x1e4>)
		flexButtonPage_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(153, 0, 0), touchgfx::Color::getColorFromRGB(204, 0, 0),
 8007fb6:	9300      	str	r3, [sp, #0]
 8007fb8:	4a17      	ldr	r2, [pc, #92]	; (8008018 <_ZN11Screen1View11PageRefreshEv+0x1e8>)
 8007fba:	4b18      	ldr	r3, [pc, #96]	; (800801c <_ZN11Screen1View11PageRefreshEv+0x1ec>)
 8007fbc:	4918      	ldr	r1, [pc, #96]	; (8008020 <_ZN11Screen1View11PageRefreshEv+0x1f0>)
 8007fbe:	4648      	mov	r0, r9
 8007fc0:	e7ca      	b.n	8007f58 <_ZN11Screen1View11PageRefreshEv+0x128>
 8007fc2:	4b14      	ldr	r3, [pc, #80]	; (8008014 <_ZN11Screen1View11PageRefreshEv+0x1e4>)
		flexButtonPage_3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(153, 0, 0), touchgfx::Color::getColorFromRGB(204, 0, 0),
 8007fc4:	9300      	str	r3, [sp, #0]
 8007fc6:	4a14      	ldr	r2, [pc, #80]	; (8008018 <_ZN11Screen1View11PageRefreshEv+0x1e8>)
 8007fc8:	4b14      	ldr	r3, [pc, #80]	; (800801c <_ZN11Screen1View11PageRefreshEv+0x1ec>)
 8007fca:	4915      	ldr	r1, [pc, #84]	; (8008020 <_ZN11Screen1View11PageRefreshEv+0x1f0>)
 8007fcc:	4640      	mov	r0, r8
 8007fce:	e7c3      	b.n	8007f58 <_ZN11Screen1View11PageRefreshEv+0x128>
 8007fd0:	4b10      	ldr	r3, [pc, #64]	; (8008014 <_ZN11Screen1View11PageRefreshEv+0x1e4>)
		flexButtonPage_4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(153, 0, 0), touchgfx::Color::getColorFromRGB(204, 0, 0),
 8007fd2:	9300      	str	r3, [sp, #0]
 8007fd4:	4a10      	ldr	r2, [pc, #64]	; (8008018 <_ZN11Screen1View11PageRefreshEv+0x1e8>)
 8007fd6:	4b11      	ldr	r3, [pc, #68]	; (800801c <_ZN11Screen1View11PageRefreshEv+0x1ec>)
 8007fd8:	4911      	ldr	r1, [pc, #68]	; (8008020 <_ZN11Screen1View11PageRefreshEv+0x1f0>)
 8007fda:	4638      	mov	r0, r7
 8007fdc:	e7bc      	b.n	8007f58 <_ZN11Screen1View11PageRefreshEv+0x128>
 8007fde:	4b0d      	ldr	r3, [pc, #52]	; (8008014 <_ZN11Screen1View11PageRefreshEv+0x1e4>)
		flexButtonPage_5.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(153, 0, 0), touchgfx::Color::getColorFromRGB(204, 0, 0),
 8007fe0:	9300      	str	r3, [sp, #0]
 8007fe2:	4a0d      	ldr	r2, [pc, #52]	; (8008018 <_ZN11Screen1View11PageRefreshEv+0x1e8>)
 8007fe4:	4b0d      	ldr	r3, [pc, #52]	; (800801c <_ZN11Screen1View11PageRefreshEv+0x1ec>)
 8007fe6:	490e      	ldr	r1, [pc, #56]	; (8008020 <_ZN11Screen1View11PageRefreshEv+0x1f0>)
 8007fe8:	4630      	mov	r0, r6
 8007fea:	e7b5      	b.n	8007f58 <_ZN11Screen1View11PageRefreshEv+0x128>
			if(type_log_fil == TYPE_LOG_READINGS){
 8007fec:	7832      	ldrb	r2, [r6, #0]
 8007fee:	2a00      	cmp	r2, #0
 8007ff0:	d1d7      	bne.n	8007fa2 <_ZN11Screen1View11PageRefreshEv+0x172>
				mas_ContainerTableLog[i]->setVisible(false);
 8007ff2:	f504 4368 	add.w	r3, r4, #59392	; 0xe800
 8007ff6:	33fc      	adds	r3, #252	; 0xfc
 8007ff8:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8007ffc:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    }
 8008000:	e7cf      	b.n	8007fa2 <_ZN11Screen1View11PageRefreshEv+0x172>
 8008002:	bf00      	nop
 8008004:	ff336699 	.word	0xff336699
 8008008:	ff003366 	.word	0xff003366
 800800c:	ff0099cc 	.word	0xff0099cc
 8008010:	ff006699 	.word	0xff006699
 8008014:	ff993535 	.word	0xff993535
 8008018:	ffcc0000 	.word	0xffcc0000
 800801c:	ff660000 	.word	0xff660000
 8008020:	ff990000 	.word	0xff990000

08008024 <_ZN11Screen1View15functionReadLogEv>:
	position = 0;
 8008024:	f64e 02e8 	movw	r2, #59624	; 0xe8e8
 8008028:	2100      	movs	r1, #0
 800802a:	5281      	strh	r1, [r0, r2]
	time_start_back = time_start_fil;
 800802c:	f64e 02e0 	movw	r2, #59616	; 0xe8e0
{
 8008030:	b410      	push	{r4}
	time_start_back = time_start_fil;
 8008032:	5884      	ldr	r4, [r0, r2]
 8008034:	f64e 02dc 	movw	r2, #59612	; 0xe8dc
 8008038:	5084      	str	r4, [r0, r2]
	current_button_table = 1;
 800803a:	f64e 02d0 	movw	r2, #59600	; 0xe8d0
 800803e:	f04f 1401 	mov.w	r4, #65537	; 0x10001
 8008042:	5084      	str	r4, [r0, r2]
	current_page_table = 1;
 8008044:	f64e 02d4 	movw	r2, #59604	; 0xe8d4
 8008048:	f504 1444 	add.w	r4, r4, #3211264	; 0x310000
 800804c:	5084      	str	r4, [r0, r2]
        visible = vis;
 800804e:	f643 44c9 	movw	r4, #15561	; 0x3cc9
 8008052:	2201      	movs	r2, #1
 8008054:	5502      	strb	r2, [r0, r4]
 8008056:	f643 44f9 	movw	r4, #15609	; 0x3cf9
 800805a:	f880 20c5 	strb.w	r2, [r0, #197]	; 0xc5
 800805e:	5501      	strb	r1, [r0, r4]
 8008060:	f244 1479 	movw	r4, #16761	; 0x4179
 8008064:	5501      	strb	r1, [r0, r4]
 8008066:	f244 01b9 	movw	r1, #16569	; 0x40b9
}
 800806a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800806e:	5442      	strb	r2, [r0, r1]
 8008070:	f643 71f9 	movw	r1, #16377	; 0x3ff9
 8008074:	5442      	strb	r2, [r0, r1]
 8008076:	f643 7139 	movw	r1, #16185	; 0x3f39
 800807a:	5442      	strb	r2, [r0, r1]
 800807c:	f643 6179 	movw	r1, #15993	; 0x3e79
 8008080:	5442      	strb	r2, [r0, r1]
		PageRefresh();
 8008082:	f7ff bed5 	b.w	8007e30 <_ZN11Screen1View11PageRefreshEv>

08008086 <_ZN11Screen1View16functionPageBackEv>:
	if(current_page_table > 1){
 8008086:	f64e 02d4 	movw	r2, #59604	; 0xe8d4
 800808a:	5a83      	ldrh	r3, [r0, r2]
 800808c:	2b01      	cmp	r3, #1
		current_page_table--;
 800808e:	bf84      	itt	hi
 8008090:	f103 33ff 	addhi.w	r3, r3, #4294967295
 8008094:	5283      	strhhi	r3, [r0, r2]
	if(current_button_table > 1){
 8008096:	f64e 02d0 	movw	r2, #59600	; 0xe8d0
 800809a:	5a83      	ldrh	r3, [r0, r2]
 800809c:	2b01      	cmp	r3, #1
		current_button_table--;
 800809e:	bf84      	itt	hi
 80080a0:	f103 33ff 	addhi.w	r3, r3, #4294967295
 80080a4:	5283      	strhhi	r3, [r0, r2]
	if(first_page_table > current_page_table){
 80080a6:	f64e 03d4 	movw	r3, #59604	; 0xe8d4
 80080aa:	5ac2      	ldrh	r2, [r0, r3]
 80080ac:	f64e 03d2 	movw	r3, #59602	; 0xe8d2
 80080b0:	5ac1      	ldrh	r1, [r0, r3]
 80080b2:	4291      	cmp	r1, r2
		first_page_table = current_page_table;
 80080b4:	bf88      	it	hi
 80080b6:	52c2      	strhhi	r2, [r0, r3]
	PageRefresh();
 80080b8:	f7ff beba 	b.w	8007e30 <_ZN11Screen1View11PageRefreshEv>

080080bc <_ZN11Screen1View19functionPageForwardEv>:
	current_page_table++;
 80080bc:	f64e 02d4 	movw	r2, #59604	; 0xe8d4
	if(current_button_table < 5){
 80080c0:	f64e 01d0 	movw	r1, #59600	; 0xe8d0
	current_page_table++;
 80080c4:	5a83      	ldrh	r3, [r0, r2]
 80080c6:	3301      	adds	r3, #1
 80080c8:	b29b      	uxth	r3, r3
 80080ca:	5283      	strh	r3, [r0, r2]
	if(current_button_table < 5){
 80080cc:	5a42      	ldrh	r2, [r0, r1]
 80080ce:	2a04      	cmp	r2, #4
		current_button_table++;
 80080d0:	bf9c      	itt	ls
 80080d2:	3201      	addls	r2, #1
 80080d4:	5242      	strhls	r2, [r0, r1]
	if((current_page_table - first_page_table) >= 5){
 80080d6:	f64e 01d2 	movw	r1, #59602	; 0xe8d2
 80080da:	5a42      	ldrh	r2, [r0, r1]
 80080dc:	1a9b      	subs	r3, r3, r2
 80080de:	2b04      	cmp	r3, #4
		first_page_table += 1;
 80080e0:	bfc4      	itt	gt
 80080e2:	3201      	addgt	r2, #1
 80080e4:	5242      	strhgt	r2, [r0, r1]
	PageRefresh();
 80080e6:	f7ff bea3 	b.w	8007e30 <_ZN11Screen1View11PageRefreshEv>

080080ea <_ZN11Screen1View14functionPage_1Ev>:
	current_button_table = 1;
 80080ea:	f64e 03d0 	movw	r3, #59600	; 0xe8d0
 80080ee:	2201      	movs	r2, #1
{
 80080f0:	b510      	push	{r4, lr}
 80080f2:	4604      	mov	r4, r0
	current_button_table = 1;
 80080f4:	52c2      	strh	r2, [r0, r3]
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_1Buffer);
 80080f6:	f500 409d 	add.w	r0, r0, #20096	; 0x4e80
 80080fa:	3044      	adds	r0, #68	; 0x44
 80080fc:	f00f fd26 	bl	8017b4c <_ZN8touchgfx7Unicode4atoiEPKt>
 8008100:	f64e 03d4 	movw	r3, #59604	; 0xe8d4
 8008104:	52e0      	strh	r0, [r4, r3]
	PageRefresh();
 8008106:	4620      	mov	r0, r4
}
 8008108:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	PageRefresh();
 800810c:	f7ff be90 	b.w	8007e30 <_ZN11Screen1View11PageRefreshEv>

08008110 <_ZN11Screen1View14functionPage_2Ev>:
	current_button_table = 2;
 8008110:	f64e 03d0 	movw	r3, #59600	; 0xe8d0
 8008114:	2202      	movs	r2, #2
{
 8008116:	b510      	push	{r4, lr}
 8008118:	4604      	mov	r4, r0
	current_button_table = 2;
 800811a:	52c2      	strh	r2, [r0, r3]
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_2Buffer);
 800811c:	f500 409d 	add.w	r0, r0, #20096	; 0x4e80
 8008120:	3058      	adds	r0, #88	; 0x58
 8008122:	f00f fd13 	bl	8017b4c <_ZN8touchgfx7Unicode4atoiEPKt>
 8008126:	f64e 03d4 	movw	r3, #59604	; 0xe8d4
 800812a:	52e0      	strh	r0, [r4, r3]
	PageRefresh();
 800812c:	4620      	mov	r0, r4
}
 800812e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	PageRefresh();
 8008132:	f7ff be7d 	b.w	8007e30 <_ZN11Screen1View11PageRefreshEv>

08008136 <_ZN11Screen1View14functionPage_3Ev>:
	current_button_table = 3;
 8008136:	f64e 03d0 	movw	r3, #59600	; 0xe8d0
 800813a:	2203      	movs	r2, #3
{
 800813c:	b510      	push	{r4, lr}
 800813e:	4604      	mov	r4, r0
	current_button_table = 3;
 8008140:	52c2      	strh	r2, [r0, r3]
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_3Buffer);
 8008142:	f500 409d 	add.w	r0, r0, #20096	; 0x4e80
 8008146:	306c      	adds	r0, #108	; 0x6c
 8008148:	f00f fd00 	bl	8017b4c <_ZN8touchgfx7Unicode4atoiEPKt>
 800814c:	f64e 03d4 	movw	r3, #59604	; 0xe8d4
 8008150:	52e0      	strh	r0, [r4, r3]
	PageRefresh();
 8008152:	4620      	mov	r0, r4
}
 8008154:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	PageRefresh();
 8008158:	f7ff be6a 	b.w	8007e30 <_ZN11Screen1View11PageRefreshEv>

0800815c <_ZN11Screen1View14functionPage_4Ev>:
	current_button_table = 4;
 800815c:	f64e 03d0 	movw	r3, #59600	; 0xe8d0
{
 8008160:	b510      	push	{r4, lr}
	current_button_table = 4;
 8008162:	2204      	movs	r2, #4
{
 8008164:	4604      	mov	r4, r0
	current_button_table = 4;
 8008166:	52c2      	strh	r2, [r0, r3]
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_4Buffer);
 8008168:	f500 409e 	add.w	r0, r0, #20224	; 0x4f00
 800816c:	f00f fcee 	bl	8017b4c <_ZN8touchgfx7Unicode4atoiEPKt>
 8008170:	f64e 03d4 	movw	r3, #59604	; 0xe8d4
 8008174:	52e0      	strh	r0, [r4, r3]
	PageRefresh();
 8008176:	4620      	mov	r0, r4
}
 8008178:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	PageRefresh();
 800817c:	f7ff be58 	b.w	8007e30 <_ZN11Screen1View11PageRefreshEv>

08008180 <_ZN11Screen1View14functionPage_5Ev>:
	current_button_table = 5;
 8008180:	f64e 03d0 	movw	r3, #59600	; 0xe8d0
 8008184:	2205      	movs	r2, #5
{
 8008186:	b510      	push	{r4, lr}
 8008188:	4604      	mov	r4, r0
	current_button_table = 5;
 800818a:	52c2      	strh	r2, [r0, r3]
	current_page_table = touchgfx::Unicode::atoi(flexButtonPage_5Buffer);
 800818c:	f500 409e 	add.w	r0, r0, #20224	; 0x4f00
 8008190:	3014      	adds	r0, #20
 8008192:	f00f fcdb 	bl	8017b4c <_ZN8touchgfx7Unicode4atoiEPKt>
 8008196:	f64e 03d4 	movw	r3, #59604	; 0xe8d4
 800819a:	52e0      	strh	r0, [r4, r3]
	PageRefresh();
 800819c:	4620      	mov	r0, r4
}
 800819e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	PageRefresh();
 80081a2:	f7ff be45 	b.w	8007e30 <_ZN11Screen1View11PageRefreshEv>
	...

080081a8 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 80081a8:	4b0b      	ldr	r3, [pc, #44]	; (80081d8 <_ZN11Screen1ViewD1Ev+0x30>)
 80081aa:	b510      	push	{r4, lr}
 80081ac:	4604      	mov	r4, r0
 80081ae:	6003      	str	r3, [r0, #0]
 80081b0:	f500 401b 	add.w	r0, r0, #39680	; 0x9b00
 80081b4:	30ec      	adds	r0, #236	; 0xec
 80081b6:	f7ff fc83 	bl	8007ac0 <_ZN21DateSelectorContainerD1Ev>
 80081ba:	f504 409e 	add.w	r0, r4, #20224	; 0x4f00
 80081be:	306c      	adds	r0, #108	; 0x6c
 80081c0:	f7ff fc7e 	bl	8007ac0 <_ZN21DateSelectorContainerD1Ev>
    virtual ~Screen1ViewBase() {}
 80081c4:	4b05      	ldr	r3, [pc, #20]	; (80081dc <_ZN11Screen1ViewD1Ev+0x34>)
 80081c6:	6023      	str	r3, [r4, #0]
 80081c8:	f504 408b 	add.w	r0, r4, #17792	; 0x4580
 80081cc:	3038      	adds	r0, #56	; 0x38
 80081ce:	f7fc ff19 	bl	8005004 <_ZN8touchgfx17DrawableListItemsI25CustomContainerScrollListLi8EED1Ev>
 80081d2:	4620      	mov	r0, r4
 80081d4:	bd10      	pop	{r4, pc}
 80081d6:	bf00      	nop
 80081d8:	080286a8 	.word	0x080286a8
 80081dc:	08027d88 	.word	0x08027d88

080081e0 <_ZN11Screen1ViewD0Ev>:
 80081e0:	b510      	push	{r4, lr}
 80081e2:	4604      	mov	r4, r0
 80081e4:	f7ff ffe0 	bl	80081a8 <_ZN11Screen1ViewD1Ev>
 80081e8:	4620      	mov	r0, r4
 80081ea:	f64e 1124 	movw	r1, #59684	; 0xe924
 80081ee:	f01c f8f4 	bl	80243da <_ZdlPvj>
 80081f2:	4620      	mov	r0, r4
 80081f4:	bd10      	pop	{r4, pc}

080081f6 <_ZN16Screen2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen2Presenter() {};
 80081f6:	4770      	bx	lr

080081f8 <_ZThn4_N16Screen2PresenterD1Ev>:
 80081f8:	3804      	subs	r0, #4
 80081fa:	4770      	bx	lr

080081fc <_ZN16Screen2Presenter10deactivateEv>:
}

void Screen2Presenter::activate()
{

}
 80081fc:	4770      	bx	lr

080081fe <_ZN16Screen2PresenterD0Ev>:
 80081fe:	b510      	push	{r4, lr}
 8008200:	2110      	movs	r1, #16
 8008202:	4604      	mov	r4, r0
 8008204:	f01c f8e9 	bl	80243da <_ZdlPvj>
 8008208:	4620      	mov	r0, r4
 800820a:	bd10      	pop	{r4, pc}

0800820c <_ZThn4_N16Screen2PresenterD0Ev>:
 800820c:	f1a0 0004 	sub.w	r0, r0, #4
 8008210:	e7f5      	b.n	80081fe <_ZN16Screen2PresenterD0Ev>
	...

08008214 <_ZN16Screen2PresenterC1ER11Screen2View>:
Screen2Presenter::Screen2Presenter(Screen2View& v)
 8008214:	b510      	push	{r4, lr}
 8008216:	2200      	movs	r2, #0
 8008218:	6082      	str	r2, [r0, #8]
    : view(v)
 800821a:	4a04      	ldr	r2, [pc, #16]	; (800822c <_ZN16Screen2PresenterC1ER11Screen2View+0x18>)
 800821c:	60c1      	str	r1, [r0, #12]
 800821e:	f102 0408 	add.w	r4, r2, #8
 8008222:	3220      	adds	r2, #32
 8008224:	6004      	str	r4, [r0, #0]
 8008226:	6042      	str	r2, [r0, #4]
}
 8008228:	bd10      	pop	{r4, pc}
 800822a:	bf00      	nop
 800822c:	08028700 	.word	0x08028700

08008230 <_ZN11Screen2ViewD1Ev>:

class Screen2View : public Screen2ViewBase
{
public:
    Screen2View();
    virtual ~Screen2View() {}
 8008230:	4770      	bx	lr

08008232 <_ZN11Screen2View14tearDownScreenEv>:
}

void Screen2View::tearDownScreen()
{
    Screen2ViewBase::tearDownScreen();
}
 8008232:	4770      	bx	lr

08008234 <_ZN11Screen2View20functionSaveSettingsEv>:
 8008234:	f244 2395 	movw	r3, #17045	; 0x4295
 8008238:	2201      	movs	r2, #1
 800823a:	54c2      	strb	r2, [r0, r3]
//==================================================================================================================
// Кнопка сохранить
void Screen2View::functionSaveSettings()
{
	modalWindow1.setVisible(true);
	modalWindow1.invalidate();
 800823c:	f500 4084 	add.w	r0, r0, #16896	; 0x4200
 8008240:	3070      	adds	r0, #112	; 0x70
 8008242:	f00d baad 	b.w	80157a0 <_ZNK8touchgfx8Drawable10invalidateEv>

08008246 <_ZN11Screen2View23functionSaveModalWindowEv>:
 8008246:	f244 2395 	movw	r3, #17045	; 0x4295
 800824a:	2200      	movs	r2, #0
 800824c:	54c2      	strb	r2, [r0, r3]
//==================================================================================================================
// Кнопка сохранить (да\нет)
void Screen2View::functionSaveModalWindow()
{
	modalWindow1.setVisible(false);
	modalWindow1.invalidate();
 800824e:	f500 4084 	add.w	r0, r0, #16896	; 0x4200
 8008252:	3070      	adds	r0, #112	; 0x70
 8008254:	f00d baa4 	b.w	80157a0 <_ZNK8touchgfx8Drawable10invalidateEv>

08008258 <_ZN11Screen2View11setupScreenEv>:
{
 8008258:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800825a:	4604      	mov	r4, r0
 800825c:	2600      	movs	r6, #0
    Screen2ViewBase::setupScreen();
 800825e:	f7fe f8bb 	bl	80063d8 <_ZN15Screen2ViewBase11setupScreenEv>
    customContainerKeyboard_Num1.initialize();
 8008262:	f504 5540 	add.w	r5, r4, #12288	; 0x3000
    customContainerKeyboard1.initialize();
 8008266:	f104 00a0 	add.w	r0, r4, #160	; 0xa0
 800826a:	9001      	str	r0, [sp, #4]
    customContainerKeyboard_Num1.initialize();
 800826c:	3538      	adds	r5, #56	; 0x38
    customContainerKeyboard1.initialize();
 800826e:	f7fe ff23 	bl	80070b8 <_ZN23CustomContainerKeyboard10initializeEv>
    customContainerKeyboard1.invalidate();
 8008272:	9801      	ldr	r0, [sp, #4]
 8008274:	f884 60c5 	strb.w	r6, [r4, #197]	; 0xc5
 8008278:	f00d fa92 	bl	80157a0 <_ZNK8touchgfx8Drawable10invalidateEv>
    customContainerKeyboard_Num1.initialize();
 800827c:	4628      	mov	r0, r5
 800827e:	f7fe ff81 	bl	8007184 <_ZN27CustomContainerKeyboard_Num10initializeEv>
 8008282:	f243 035d 	movw	r3, #12381	; 0x305d
    customContainerKeyboard_Num1.invalidate();
 8008286:	4628      	mov	r0, r5
 8008288:	54e6      	strb	r6, [r4, r3]
 800828a:	f00d fa89 	bl	80157a0 <_ZNK8touchgfx8Drawable10invalidateEv>
 800828e:	f244 2395 	movw	r3, #17045	; 0x4295
    modalWindow1.invalidate();
 8008292:	f504 4084 	add.w	r0, r4, #16896	; 0x4200
 8008296:	3070      	adds	r0, #112	; 0x70
 8008298:	54e6      	strb	r6, [r4, r3]
}
 800829a:	b002      	add	sp, #8
 800829c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    modalWindow1.invalidate();
 80082a0:	f00d ba7e 	b.w	80157a0 <_ZNK8touchgfx8Drawable10invalidateEv>

080082a4 <_ZN11Screen2View31CallbackcustomContainerKeyboardEv>:
	count_flexButton_text_outBuffer = count_ContainerTextArea;
 80082a4:	4b0a      	ldr	r3, [pc, #40]	; (80082d0 <_ZN11Screen2View31CallbackcustomContainerKeyboardEv+0x2c>)
	Unicode::snprintf(flexButton_text_outBuffer, count_ContainerTextArea+1, data_ContainerTextArea);
 80082a6:	4a0b      	ldr	r2, [pc, #44]	; (80082d4 <_ZN11Screen2View31CallbackcustomContainerKeyboardEv+0x30>)
	count_flexButton_text_outBuffer = count_ContainerTextArea;
 80082a8:	8819      	ldrh	r1, [r3, #0]
{
 80082aa:	b510      	push	{r4, lr}
	count_flexButton_text_outBuffer = count_ContainerTextArea;
 80082ac:	f244 5378 	movw	r3, #17784	; 0x4578
{
 80082b0:	4604      	mov	r4, r0
	count_flexButton_text_outBuffer = count_ContainerTextArea;
 80082b2:	52c1      	strh	r1, [r0, r3]
	Unicode::snprintf(flexButton_text_outBuffer, count_ContainerTextArea+1, data_ContainerTextArea);
 80082b4:	3101      	adds	r1, #1
 80082b6:	f500 4089 	add.w	r0, r0, #17536	; 0x4480
 80082ba:	b289      	uxth	r1, r1
 80082bc:	3054      	adds	r0, #84	; 0x54
 80082be:	f00f ff59 	bl	8018174 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
	flexButton_text_out.invalidate();
 80082c2:	f504 503d 	add.w	r0, r4, #12096	; 0x2f40
 80082c6:	3008      	adds	r0, #8
}
 80082c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	flexButton_text_out.invalidate();
 80082cc:	f00d ba68 	b.w	80157a0 <_ZNK8touchgfx8Drawable10invalidateEv>
 80082d0:	2000fa98 	.word	0x2000fa98
 80082d4:	2000fa9a 	.word	0x2000fa9a

080082d8 <_ZN11Screen2View35CallbackcustomContainerKeyboard_NumEv>:
	if(data_ContainerTextArea[count_ContainerTextArea - 1] == '.'){
 80082d8:	4b0e      	ldr	r3, [pc, #56]	; (8008314 <_ZN11Screen2View35CallbackcustomContainerKeyboard_NumEv+0x3c>)
 80082da:	490f      	ldr	r1, [pc, #60]	; (8008318 <_ZN11Screen2View35CallbackcustomContainerKeyboard_NumEv+0x40>)
 80082dc:	881a      	ldrh	r2, [r3, #0]
 80082de:	3a01      	subs	r2, #1
{
 80082e0:	b510      	push	{r4, lr}
	if(data_ContainerTextArea[count_ContainerTextArea - 1] == '.'){
 80082e2:	f831 1012 	ldrh.w	r1, [r1, r2, lsl #1]
 80082e6:	292e      	cmp	r1, #46	; 0x2e
		count_ContainerTextArea -= 1;
 80082e8:	bf08      	it	eq
 80082ea:	801a      	strheq	r2, [r3, #0]
	count_flexButton_text_outBuffer_num = count_ContainerTextArea;
 80082ec:	8819      	ldrh	r1, [r3, #0]
	Unicode::snprintf(flexButton_text_out_NumBuffer, count_ContainerTextArea+1, data_ContainerTextArea);
 80082ee:	4a0a      	ldr	r2, [pc, #40]	; (8008318 <_ZN11Screen2View35CallbackcustomContainerKeyboard_NumEv+0x40>)
	count_flexButton_text_outBuffer_num = count_ContainerTextArea;
 80082f0:	f244 537a 	movw	r3, #17786	; 0x457a
{
 80082f4:	4604      	mov	r4, r0
	count_flexButton_text_outBuffer_num = count_ContainerTextArea;
 80082f6:	52c1      	strh	r1, [r0, r3]
	Unicode::snprintf(flexButton_text_out_NumBuffer, count_ContainerTextArea+1, data_ContainerTextArea);
 80082f8:	3101      	adds	r1, #1
 80082fa:	f500 408a 	add.w	r0, r0, #17664	; 0x4500
 80082fe:	b289      	uxth	r1, r1
 8008300:	3024      	adds	r0, #36	; 0x24
 8008302:	f00f ff37 	bl	8018174 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
	flexButton_text_out_Num.invalidate();
 8008306:	f504 4081 	add.w	r0, r4, #16512	; 0x4080
 800830a:	3074      	adds	r0, #116	; 0x74
}
 800830c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	flexButton_text_out_Num.invalidate();
 8008310:	f00d ba46 	b.w	80157a0 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008314:	2000fa98 	.word	0x2000fa98
 8008318:	2000fa9a 	.word	0x2000fa9a

0800831c <_ZN11Screen2ViewD0Ev>:
 800831c:	b510      	push	{r4, lr}
 800831e:	f244 517c 	movw	r1, #17788	; 0x457c
 8008322:	4604      	mov	r4, r0
 8008324:	f01c f859 	bl	80243da <_ZdlPvj>
 8008328:	4620      	mov	r0, r4
 800832a:	bd10      	pop	{r4, pc}

0800832c <_ZN11Screen2View9function3Ev>:
{
 800832c:	b570      	push	{r4, r5, r6, lr}
	customContainerKeyboard_Num1.initialize();
 800832e:	f500 5540 	add.w	r5, r0, #12288	; 0x3000
{
 8008332:	4604      	mov	r4, r0
	customContainerKeyboard_Num1.initialize();
 8008334:	3538      	adds	r5, #56	; 0x38
	Unicode::snprintf(data_ContainerTextArea, count_flexButton_text_outBuffer_num+1, flexButton_text_out_NumBuffer);
 8008336:	f244 567a 	movw	r6, #17786	; 0x457a
	customContainerKeyboard_Num1.initialize();
 800833a:	4628      	mov	r0, r5
 800833c:	f7fe ff22 	bl	8007184 <_ZN27CustomContainerKeyboard_Num10initializeEv>
	Unicode::snprintf(data_ContainerTextArea, count_flexButton_text_outBuffer_num+1, flexButton_text_out_NumBuffer);
 8008340:	5ba1      	ldrh	r1, [r4, r6]
 8008342:	4815      	ldr	r0, [pc, #84]	; (8008398 <_ZN11Screen2View9function3Ev+0x6c>)
 8008344:	3101      	adds	r1, #1
 8008346:	f504 428a 	add.w	r2, r4, #17664	; 0x4500
 800834a:	b289      	uxth	r1, r1
 800834c:	3224      	adds	r2, #36	; 0x24
 800834e:	f00f ff11 	bl	8018174 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
	customContainerKeyboard_Num1.count_Container = 5;				// Установка максимальной длины контейнера
 8008352:	f244 03e4 	movw	r3, #16612	; 0x40e4
 8008356:	2205      	movs	r2, #5
 8008358:	54e2      	strb	r2, [r4, r3]
	count_ContainerTextArea = count_flexButton_text_outBuffer_num; 	// Установка длины буффера обмена элемента экрана
 800835a:	4b10      	ldr	r3, [pc, #64]	; (800839c <_ZN11Screen2View9function3Ev+0x70>)
 800835c:	5ba2      	ldrh	r2, [r4, r6]
 800835e:	801a      	strh	r2, [r3, #0]
	customContainerKeyboard_Num1.UpdateText();						// Обновление текста в контейнере CustomContainerKeyboard
 8008360:	4628      	mov	r0, r5
 8008362:	f7fe ff33 	bl	80071cc <_ZN27CustomContainerKeyboard_Num10UpdateTextEv>
 8008366:	f243 035d 	movw	r3, #12381	; 0x305d
 800836a:	2201      	movs	r2, #1
 800836c:	54e2      	strb	r2, [r4, r3]
        rect.x = x;
 800836e:	f243 033c 	movw	r3, #12348	; 0x303c
 8008372:	4a0b      	ldr	r2, [pc, #44]	; (80083a0 <_ZN11Screen2View9function3Ev+0x74>)
 8008374:	50e2      	str	r2, [r4, r3]
	customContainerKeyboard_Num1.invalidate();
 8008376:	4628      	mov	r0, r5
 8008378:	f00d fa12 	bl	80157a0 <_ZNK8touchgfx8Drawable10invalidateEv>
	if(customContainerKeyboard1.isVisible()){
 800837c:	f894 30c5 	ldrb.w	r3, [r4, #197]	; 0xc5
 8008380:	b143      	cbz	r3, 8008394 <_ZN11Screen2View9function3Ev+0x68>
        visible = vis;
 8008382:	2300      	movs	r3, #0
 8008384:	f884 30c5 	strb.w	r3, [r4, #197]	; 0xc5
		customContainerKeyboard1.invalidate();
 8008388:	f104 00a0 	add.w	r0, r4, #160	; 0xa0
}
 800838c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		customContainerKeyboard1.invalidate();
 8008390:	f00d ba06 	b.w	80157a0 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8008394:	bd70      	pop	{r4, r5, r6, pc}
 8008396:	bf00      	nop
 8008398:	2000fa9a 	.word	0x2000fa9a
 800839c:	2000fa98 	.word	0x2000fa98
 80083a0:	00b40104 	.word	0x00b40104

080083a4 <_ZN11Screen2View9function2Ev>:
{
 80083a4:	b570      	push	{r4, r5, r6, lr}
 80083a6:	4604      	mov	r4, r0
	customContainerKeyboard1.initialize();
 80083a8:	f100 05a0 	add.w	r5, r0, #160	; 0xa0
	Unicode::snprintf(data_ContainerTextArea, count_flexButton_text_outBuffer+1, flexButton_text_outBuffer);
 80083ac:	f244 5678 	movw	r6, #17784	; 0x4578
	customContainerKeyboard1.initialize();
 80083b0:	4628      	mov	r0, r5
 80083b2:	f7fe fe81 	bl	80070b8 <_ZN23CustomContainerKeyboard10initializeEv>
	Unicode::snprintf(data_ContainerTextArea, count_flexButton_text_outBuffer+1, flexButton_text_outBuffer);
 80083b6:	5ba1      	ldrh	r1, [r4, r6]
 80083b8:	4814      	ldr	r0, [pc, #80]	; (800840c <_ZN11Screen2View9function2Ev+0x68>)
 80083ba:	3101      	adds	r1, #1
 80083bc:	f504 4289 	add.w	r2, r4, #17536	; 0x4480
 80083c0:	b289      	uxth	r1, r1
 80083c2:	3254      	adds	r2, #84	; 0x54
 80083c4:	f00f fed6 	bl	8018174 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>
	customContainerKeyboard1.count_Container = 30;				// Установка максимальной длины контейнера
 80083c8:	f642 5388 	movw	r3, #11656	; 0x2d88
 80083cc:	221e      	movs	r2, #30
 80083ce:	54e2      	strb	r2, [r4, r3]
	count_ContainerTextArea = count_flexButton_text_outBuffer; 	// Установка длины буффера обмена элемента экрана
 80083d0:	4b0f      	ldr	r3, [pc, #60]	; (8008410 <_ZN11Screen2View9function2Ev+0x6c>)
 80083d2:	5ba2      	ldrh	r2, [r4, r6]
 80083d4:	801a      	strh	r2, [r3, #0]
	customContainerKeyboard1.UpdateText();						// Обновление текста в контейнере CustomContainerKeyboard
 80083d6:	4628      	mov	r0, r5
 80083d8:	f7fe fe56 	bl	8007088 <_ZN23CustomContainerKeyboard10UpdateTextEv>
 80083dc:	2301      	movs	r3, #1
 80083de:	f884 30c5 	strb.w	r3, [r4, #197]	; 0xc5
        rect.x = x;
 80083e2:	f44f 0334 	mov.w	r3, #11796480	; 0xb40000
 80083e6:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
	customContainerKeyboard1.invalidate();
 80083ea:	4628      	mov	r0, r5
 80083ec:	f00d f9d8 	bl	80157a0 <_ZNK8touchgfx8Drawable10invalidateEv>
	if(customContainerKeyboard_Num1.isVisible()){
 80083f0:	f243 035d 	movw	r3, #12381	; 0x305d
 80083f4:	5ce2      	ldrb	r2, [r4, r3]
 80083f6:	b142      	cbz	r2, 800840a <_ZN11Screen2View9function2Ev+0x66>
		customContainerKeyboard_Num1.invalidate();
 80083f8:	f504 5040 	add.w	r0, r4, #12288	; 0x3000
        visible = vis;
 80083fc:	2200      	movs	r2, #0
 80083fe:	54e2      	strb	r2, [r4, r3]
 8008400:	3038      	adds	r0, #56	; 0x38
}
 8008402:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		customContainerKeyboard_Num1.invalidate();
 8008406:	f00d b9cb 	b.w	80157a0 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800840a:	bd70      	pop	{r4, r5, r6, pc}
 800840c:	2000fa9a 	.word	0x2000fa9a
 8008410:	2000fa98 	.word	0x2000fa98

08008414 <_ZN11Screen2ViewC1Ev>:
Screen2View::Screen2View()
 8008414:	b510      	push	{r4, lr}
 8008416:	4604      	mov	r4, r0
 8008418:	f7fe f84a 	bl	80064b0 <_ZN15Screen2ViewBaseC1Ev>
 800841c:	4b03      	ldr	r3, [pc, #12]	; (800842c <_ZN11Screen2ViewC1Ev+0x18>)
 800841e:	6023      	str	r3, [r4, #0]
 8008420:	f244 5378 	movw	r3, #17784	; 0x4578
 8008424:	2200      	movs	r2, #0
 8008426:	50e2      	str	r2, [r4, r3]
}
 8008428:	4620      	mov	r0, r4
 800842a:	bd10      	pop	{r4, pc}
 800842c:	08028730 	.word	0x08028730

08008430 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
     * @param  y      The y coordinate.
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
        : x(x), y(y), width(width), height(height)
 8008430:	2200      	movs	r2, #0
 8008432:	8002      	strh	r2, [r0, #0]
 8008434:	8042      	strh	r2, [r0, #2]
 8008436:	8082      	strh	r2, [r0, #4]
 8008438:	80c2      	strh	r2, [r0, #6]
    }
 800843a:	4770      	bx	lr

0800843c <_ZN8touchgfx8TextArea13setXBaselineYEss>:
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800843c:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800843e:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8008440:	4604      	mov	r4, r0
        setX(x);
 8008442:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8008444:	4615      	mov	r5, r2
        setX(x);
 8008446:	4798      	blx	r3
        setBaselineY(baselineY);
 8008448:	6823      	ldr	r3, [r4, #0]
 800844a:	4629      	mov	r1, r5
 800844c:	4620      	mov	r0, r4
 800844e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
    }
 8008450:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8008454:	4718      	bx	r3

08008456 <_ZN8touchgfx8CallbackI13WheelSelectorRKNS_12MoveAnimatorINS_9ContainerEEEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008456:	4770      	bx	lr

08008458 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEED1Ev>:
 * 'uint8_t getAlpha()' method.
 *
 * @tparam T specifies the type to extend with the FadeAnimator behavior.
 */
template <class T>
class FadeAnimator : public T
 8008458:	4770      	bx	lr

0800845a <_ZN8touchgfx12MoveAnimatorINS_9ContainerEED1Ev>:
 * callback when the animation has finished.
 *
 * This mixin can be used on any Drawable.
 */
template <class T>
class MoveAnimator : public T
 800845a:	4770      	bx	lr

0800845c <_ZN8touchgfx8CallbackI13WheelSelectorRKNS_12MoveAnimatorINS_9ContainerEEEvvE7executeES6_>:
    virtual void execute(T1 t1)
 800845c:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800845e:	68c2      	ldr	r2, [r0, #12]
 8008460:	6844      	ldr	r4, [r0, #4]
 8008462:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8008464:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8008466:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800846a:	07d2      	lsls	r2, r2, #31
 800846c:	bf48      	it	mi
 800846e:	5962      	ldrmi	r2, [r4, r5]
 8008470:	689b      	ldr	r3, [r3, #8]
    }
 8008472:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8008474:	bf48      	it	mi
 8008476:	58d3      	ldrmi	r3, [r2, r3]
 8008478:	4718      	bx	r3

0800847a <_ZNK8touchgfx8CallbackI13WheelSelectorRKNS_12MoveAnimatorINS_9ContainerEEEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 800847a:	6843      	ldr	r3, [r0, #4]
 800847c:	b12b      	cbz	r3, 800848a <_ZNK8touchgfx8CallbackI13WheelSelectorRKNS_12MoveAnimatorINS_9ContainerEEEvvE7isValidEv+0x10>
 800847e:	6883      	ldr	r3, [r0, #8]
 8008480:	b92b      	cbnz	r3, 800848e <_ZNK8touchgfx8CallbackI13WheelSelectorRKNS_12MoveAnimatorINS_9ContainerEEEvvE7isValidEv+0x14>
 8008482:	68c0      	ldr	r0, [r0, #12]
 8008484:	f000 0001 	and.w	r0, r0, #1
 8008488:	4770      	bx	lr
 800848a:	4618      	mov	r0, r3
 800848c:	4770      	bx	lr
 800848e:	2001      	movs	r0, #1
    }
 8008490:	4770      	bx	lr

08008492 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21setFadeAnimationDelayEt>:
     *
     * @see getFadeAnimationDelay
     */
    virtual void setFadeAnimationDelay(uint16_t delay)
    {
        fadeAnimationDelay = delay;
 8008492:	f8a0 1044 	strh.w	r1, [r0, #68]	; 0x44
    }
 8008496:	4770      	bx	lr

08008498 <_ZNK8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21getFadeAnimationDelayEv>:
     * @see setFadeAnimationDelay
     */
    virtual uint16_t getFadeAnimationDelay() const
    {
        return fadeAnimationDelay;
    }
 8008498:	f8b0 0044 	ldrh.w	r0, [r0, #68]	; 0x44
 800849c:	4770      	bx	lr

0800849e <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21setMoveAnimationDelayEt>:
     *
     * @see getMoveAnimationDelay
     */
    virtual void setMoveAnimationDelay(uint16_t delay)
    {
        moveAnimationDelay = delay;
 800849e:	8601      	strh	r1, [r0, #48]	; 0x30
    }
 80084a0:	4770      	bx	lr

080084a2 <_ZNK8touchgfx12MoveAnimatorINS_9ContainerEE21getMoveAnimationDelayEv>:
     * @see setMoveAnimationDelay
     */
    virtual uint16_t getMoveAnimationDelay() const
    {
        return moveAnimationDelay;
    }
 80084a2:	8e00      	ldrh	r0, [r0, #48]	; 0x30
 80084a4:	4770      	bx	lr

080084a6 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEED0Ev>:
class MoveAnimator : public T
 80084a6:	b510      	push	{r4, lr}
 80084a8:	2148      	movs	r1, #72	; 0x48
 80084aa:	4604      	mov	r4, r0
 80084ac:	f01b ff95 	bl	80243da <_ZdlPvj>
 80084b0:	4620      	mov	r0, r4
 80084b2:	bd10      	pop	{r4, pc}

080084b4 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEED0Ev>:
class FadeAnimator : public T
 80084b4:	b510      	push	{r4, lr}
 80084b6:	2154      	movs	r1, #84	; 0x54
 80084b8:	4604      	mov	r4, r0
 80084ba:	f01b ff8e 	bl	80243da <_ZdlPvj>
 80084be:	4620      	mov	r0, r4
 80084c0:	bd10      	pop	{r4, pc}

080084c2 <_ZN8touchgfx8CallbackI13WheelSelectorRKNS_12MoveAnimatorINS_9ContainerEEEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80084c2:	b510      	push	{r4, lr}
 80084c4:	2110      	movs	r1, #16
 80084c6:	4604      	mov	r4, r0
 80084c8:	f01b ff87 	bl	80243da <_ZdlPvj>
 80084cc:	4620      	mov	r0, r4
 80084ce:	bd10      	pop	{r4, pc}

080084d0 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 80084d0:	6803      	ldr	r3, [r0, #0]
class TypedText
 80084d2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
    virtual void setBaselineY(int16_t baselineY)
 80084d4:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 80084d6:	6b1e      	ldr	r6, [r3, #48]	; 0x30
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80084d8:	4b11      	ldr	r3, [pc, #68]	; (8008520 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80084da:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 80084dc:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 80084de:	b28d      	uxth	r5, r1
 80084e0:	b92b      	cbnz	r3, 80084ee <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 80084e2:	4b10      	ldr	r3, [pc, #64]	; (8008524 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80084e4:	4a10      	ldr	r2, [pc, #64]	; (8008528 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80084e6:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80084e8:	4810      	ldr	r0, [pc, #64]	; (800852c <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80084ea:	f01b ffa5 	bl	8024438 <__assert_func>
 80084ee:	4910      	ldr	r1, [pc, #64]	; (8008530 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80084f0:	8809      	ldrh	r1, [r1, #0]
 80084f2:	4291      	cmp	r1, r2
 80084f4:	d803      	bhi.n	80084fe <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80084f6:	4b0f      	ldr	r3, [pc, #60]	; (8008534 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80084f8:	4a0b      	ldr	r2, [pc, #44]	; (8008528 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80084fa:	21af      	movs	r1, #175	; 0xaf
 80084fc:	e7f4      	b.n	80084e8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
        return fonts[typedTexts[typedTextId].fontIdx];
 80084fe:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8008502:	4b0d      	ldr	r3, [pc, #52]	; (8008538 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8008504:	681b      	ldr	r3, [r3, #0]
 8008506:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800850a:	6803      	ldr	r3, [r0, #0]
 800850c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800850e:	4798      	blx	r3
 8008510:	1a28      	subs	r0, r5, r0
 8008512:	b201      	sxth	r1, r0
 8008514:	4633      	mov	r3, r6
 8008516:	4620      	mov	r0, r4
    }
 8008518:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 800851c:	4718      	bx	r3
 800851e:	bf00      	nop
 8008520:	20020ae0 	.word	0x20020ae0
 8008524:	08027000 	.word	0x08027000
 8008528:	08027042 	.word	0x08027042
 800852c:	08027070 	.word	0x08027070
 8008530:	20020ae4 	.word	0x20020ae4
 8008534:	080270b7 	.word	0x080270b7
 8008538:	20020ae8 	.word	0x20020ae8

0800853c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv>:
    virtual uint16_t getTextWidth() const
 800853c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
        return typedTextId != TYPED_TEXT_INVALID;
 800853e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
        return typedText.hasValidId() ? typedText.getFont()->getStringWidth(typedText.getTextDirection(), typedText.getText(), wildcard, 0) : 0;
 8008540:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008544:	4299      	cmp	r1, r3
    virtual uint16_t getTextWidth() const
 8008546:	4604      	mov	r4, r0
        return typedText.hasValidId() ? typedText.getFont()->getStringWidth(typedText.getTextDirection(), typedText.getText(), wildcard, 0) : 0;
 8008548:	d02a      	beq.n	80085a0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x64>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800854a:	4b16      	ldr	r3, [pc, #88]	; (80085a4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x68>)
 800854c:	681b      	ldr	r3, [r3, #0]
 800854e:	b92b      	cbnz	r3, 800855c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x20>
 8008550:	4b15      	ldr	r3, [pc, #84]	; (80085a8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x6c>)
 8008552:	4a16      	ldr	r2, [pc, #88]	; (80085ac <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 8008554:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8008556:	4816      	ldr	r0, [pc, #88]	; (80085b0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x74>)
 8008558:	f01b ff6e 	bl	8024438 <__assert_func>
 800855c:	4a15      	ldr	r2, [pc, #84]	; (80085b4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x78>)
 800855e:	8812      	ldrh	r2, [r2, #0]
 8008560:	428a      	cmp	r2, r1
 8008562:	d803      	bhi.n	800856c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x30>
 8008564:	4b14      	ldr	r3, [pc, #80]	; (80085b8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x7c>)
 8008566:	4a11      	ldr	r2, [pc, #68]	; (80085ac <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 8008568:	21af      	movs	r1, #175	; 0xaf
 800856a:	e7f4      	b.n	8008556 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x1a>
        return fonts[typedTexts[typedTextId].fontIdx];
 800856c:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8008570:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8008574:	4b11      	ldr	r3, [pc, #68]	; (80085bc <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x80>)
        return typedTexts[typedTextId].direction;
 8008576:	7855      	ldrb	r5, [r2, #1]
        return fonts[typedTexts[typedTextId].fontIdx];
 8008578:	681b      	ldr	r3, [r3, #0]
 800857a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800857e:	6833      	ldr	r3, [r6, #0]
 8008580:	69df      	ldr	r7, [r3, #28]
        return texts->getText(typedTextId);
 8008582:	4b0f      	ldr	r3, [pc, #60]	; (80085c0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x84>)
 8008584:	6818      	ldr	r0, [r3, #0]
 8008586:	f7fe fc9f 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
        return typedTexts[typedTextId].direction;
 800858a:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800858e:	2300      	movs	r3, #0
        return texts->getText(typedTextId);
 8008590:	4602      	mov	r2, r0
 8008592:	9300      	str	r3, [sp, #0]
 8008594:	4629      	mov	r1, r5
 8008596:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008598:	4630      	mov	r0, r6
 800859a:	47b8      	blx	r7
    }
 800859c:	b003      	add	sp, #12
 800859e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return typedText.hasValidId() ? typedText.getFont()->getStringWidth(typedText.getTextDirection(), typedText.getText(), wildcard, 0) : 0;
 80085a0:	2000      	movs	r0, #0
 80085a2:	e7fb      	b.n	800859c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x60>
 80085a4:	20020ae0 	.word	0x20020ae0
 80085a8:	08027000 	.word	0x08027000
 80085ac:	08027042 	.word	0x08027042
 80085b0:	08027070 	.word	0x08027070
 80085b4:	20020ae4 	.word	0x20020ae4
 80085b8:	080270b7 	.word	0x080270b7
 80085bc:	20020ae8 	.word	0x20020ae8
 80085c0:	20020aec 	.word	0x20020aec

080085c4 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv>:
        return typedTextId != TYPED_TEXT_INVALID;
 80085c4:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
        return typedText.hasValidId() ? calculateTextHeight(typedText.getText(), wildcard, 0) : 0;
 80085c6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80085ca:	4299      	cmp	r1, r3
    virtual int16_t getTextHeight()
 80085cc:	b570      	push	{r4, r5, r6, lr}
 80085ce:	4604      	mov	r4, r0
        return typedText.hasValidId() ? calculateTextHeight(typedText.getText(), wildcard, 0) : 0;
 80085d0:	d01e      	beq.n	8008610 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x4c>
 80085d2:	6803      	ldr	r3, [r0, #0]
 80085d4:	6edd      	ldr	r5, [r3, #108]	; 0x6c
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80085d6:	4b0f      	ldr	r3, [pc, #60]	; (8008614 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x50>)
 80085d8:	681b      	ldr	r3, [r3, #0]
 80085da:	b92b      	cbnz	r3, 80085e8 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x24>
 80085dc:	4b0e      	ldr	r3, [pc, #56]	; (8008618 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x54>)
 80085de:	4a0f      	ldr	r2, [pc, #60]	; (800861c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 80085e0:	21ae      	movs	r1, #174	; 0xae
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80085e2:	480f      	ldr	r0, [pc, #60]	; (8008620 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x5c>)
 80085e4:	f01b ff28 	bl	8024438 <__assert_func>
 80085e8:	4b0e      	ldr	r3, [pc, #56]	; (8008624 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x60>)
 80085ea:	881b      	ldrh	r3, [r3, #0]
 80085ec:	428b      	cmp	r3, r1
 80085ee:	d803      	bhi.n	80085f8 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x34>
 80085f0:	4b0d      	ldr	r3, [pc, #52]	; (8008628 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x64>)
 80085f2:	4a0a      	ldr	r2, [pc, #40]	; (800861c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 80085f4:	21af      	movs	r1, #175	; 0xaf
 80085f6:	e7f4      	b.n	80085e2 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x1e>
        return texts->getText(typedTextId);
 80085f8:	4b0c      	ldr	r3, [pc, #48]	; (800862c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x68>)
 80085fa:	6818      	ldr	r0, [r3, #0]
 80085fc:	f7fe fc64 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 8008600:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8008602:	4601      	mov	r1, r0
 8008604:	46ac      	mov	ip, r5
 8008606:	4620      	mov	r0, r4
 8008608:	2300      	movs	r3, #0
    }
 800860a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return typedText.hasValidId() ? calculateTextHeight(typedText.getText(), wildcard, 0) : 0;
 800860e:	4760      	bx	ip
    }
 8008610:	2000      	movs	r0, #0
 8008612:	bd70      	pop	{r4, r5, r6, pc}
 8008614:	20020ae0 	.word	0x20020ae0
 8008618:	08027000 	.word	0x08027000
 800861c:	08027042 	.word	0x08027042
 8008620:	08027070 	.word	0x08027070
 8008624:	20020ae4 	.word	0x20020ae4
 8008628:	080270b7 	.word	0x080270b7
 800862c:	20020aec 	.word	0x20020aec

08008630 <_ZN13WheelSelectorC1Ev>:
#include <touchgfx/events/ClickEvent.hpp>
#include <touchgfx/events/GestureEvent.hpp>
#include <touchgfx/events/DragEvent.hpp>
#include <stdlib.h>

WheelSelector::WheelSelector() :
 8008630:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8008634:	4604      	mov	r4, r0
 8008636:	f7f9 fe1b 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
    currentAnimationState(NO_ANIMATION),
    textsIndex(0),
    animationEndedCallback(this, &WheelSelector::animationEndedHandler),
    elementSelectedAction(0)
 800863a:	4b4f      	ldr	r3, [pc, #316]	; (8008778 <_ZN13WheelSelectorC1Ev+0x148>)
 800863c:	6023      	str	r3, [r4, #0]
 800863e:	2500      	movs	r5, #0
 8008640:	2303      	movs	r3, #3
 8008642:	f104 0630 	add.w	r6, r4, #48	; 0x30
        : Widget(), bitmap(bitmap), alpha(255)
 8008646:	2226      	movs	r2, #38	; 0x26
 8008648:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800864c:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8008650:	4629      	mov	r1, r5
 8008652:	4630      	mov	r0, r6
 8008654:	62a5      	str	r5, [r4, #40]	; 0x28
 8008656:	f8ad 7004 	strh.w	r7, [sp, #4]
 800865a:	f01c f993 	bl	8024984 <memset>
 800865e:	4630      	mov	r0, r6
 8008660:	f7f9 fe06 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 8008664:	4b45      	ldr	r3, [pc, #276]	; (800877c <_ZN13WheelSelectorC1Ev+0x14c>)
 8008666:	6323      	str	r3, [r4, #48]	; 0x30
 8008668:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800866c:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
        Image::setBitmap(bitmap);
 8008670:	4630      	mov	r0, r6
        : Widget(), bitmap(bitmap), alpha(255)
 8008672:	f884 7058 	strb.w	r7, [r4, #88]	; 0x58
        Image::setBitmap(bitmap);
 8008676:	a901      	add	r1, sp, #4
 8008678:	f00a f82e 	bl	80126d8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800867c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8008680:	f7f9 fdf6 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
          fadeAnimationEndedCallback(0)
 8008684:	f8df 9108 	ldr.w	r9, [pc, #264]	; 8008790 <_ZN13WheelSelectorC1Ev+0x160>
          moveAnimationEndedCallback(0)
 8008688:	4f3d      	ldr	r7, [pc, #244]	; (8008780 <_ZN13WheelSelectorC1Ev+0x150>)
 800868a:	f8c4 5084 	str.w	r5, [r4, #132]	; 0x84
 800868e:	e9c4 5523 	strd	r5, r5, [r4, #140]	; 0x8c
 8008692:	e9c4 5525 	strd	r5, r5, [r4, #148]	; 0x94
 8008696:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800869a:	65e7      	str	r7, [r4, #92]	; 0x5c
 800869c:	f884 5088 	strb.w	r5, [r4, #136]	; 0x88
 80086a0:	f8a4 508a 	strh.w	r5, [r4, #138]	; 0x8a
 80086a4:	f104 06a4 	add.w	r6, r4, #164	; 0xa4
 80086a8:	f604 3a24 	addw	sl, r4, #2852	; 0xb24
 80086ac:	46c8      	mov	r8, r9
        : TextArea(), wildcard(0)
 80086ae:	4630      	mov	r0, r6
 80086b0:	f7fa f8d0 	bl	8002854 <_ZN8touchgfx8TextAreaC1Ev>
 80086b4:	3654      	adds	r6, #84	; 0x54
 80086b6:	f846 5c18 	str.w	r5, [r6, #-24]
 80086ba:	f846 9c54 	str.w	r9, [r6, #-84]
 80086be:	f806 5c14 	strb.w	r5, [r6, #-20]
 80086c2:	f826 5c12 	strh.w	r5, [r6, #-18]
 80086c6:	f826 5c10 	strh.w	r5, [r6, #-16]
 80086ca:	f846 5c04 	str.w	r5, [r6, #-4]
 80086ce:	4556      	cmp	r6, sl
 80086d0:	d1ed      	bne.n	80086ae <_ZN13WheelSelectorC1Ev+0x7e>
 80086d2:	f604 40a4 	addw	r0, r4, #3236	; 0xca4
 80086d6:	f7f9 fdcb 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 80086da:	f8c4 7ca4 	str.w	r7, [r4, #3236]	; 0xca4
 80086de:	f04f 0300 	mov.w	r3, #0
 80086e2:	f504 57bb 	add.w	r7, r4, #5984	; 0x1760
 80086e6:	f8c4 5ccc 	str.w	r5, [r4, #3276]	; 0xccc
 80086ea:	f8a4 5cd2 	strh.w	r5, [r4, #3282]	; 0xcd2
 80086ee:	f8c4 5cd4 	str.w	r5, [r4, #3284]	; 0xcd4
 80086f2:	f8c4 5cd8 	str.w	r5, [r4, #3288]	; 0xcd8
 80086f6:	f8c4 5cdc 	str.w	r5, [r4, #3292]	; 0xcdc
 80086fa:	f8c4 5ce0 	str.w	r5, [r4, #3296]	; 0xce0
 80086fe:	f8c4 5ce4 	str.w	r5, [r4, #3300]	; 0xce4
 8008702:	f8c4 5ce8 	str.w	r5, [r4, #3304]	; 0xce8
 8008706:	f884 3cd0 	strb.w	r3, [r4, #3280]	; 0xcd0
 800870a:	f604 45ec 	addw	r5, r4, #3308	; 0xcec
 800870e:	370c      	adds	r7, #12
 8008710:	2600      	movs	r6, #0
 8008712:	4628      	mov	r0, r5
 8008714:	f7fa f89e 	bl	8002854 <_ZN8touchgfx8TextAreaC1Ev>
 8008718:	3554      	adds	r5, #84	; 0x54
 800871a:	f845 6c18 	str.w	r6, [r5, #-24]
 800871e:	f845 8c54 	str.w	r8, [r5, #-84]
 8008722:	f805 6c14 	strb.w	r6, [r5, #-20]
 8008726:	f825 6c12 	strh.w	r6, [r5, #-18]
 800872a:	f825 6c10 	strh.w	r6, [r5, #-16]
 800872e:	f845 6c04 	str.w	r6, [r5, #-4]
 8008732:	42bd      	cmp	r5, r7
 8008734:	d1ed      	bne.n	8008712 <_ZN13WheelSelectorC1Ev+0xe2>
 8008736:	f641 07ec 	movw	r7, #6380	; 0x18ec
 800873a:	19e5      	adds	r5, r4, r7
 800873c:	4628      	mov	r0, r5
 800873e:	f7f9 fd97 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 8008742:	4b10      	ldr	r3, [pc, #64]	; (8008784 <_ZN13WheelSelectorC1Ev+0x154>)
 8008744:	51e3      	str	r3, [r4, r7]
 8008746:	f641 1324 	movw	r3, #6436	; 0x1924
 800874a:	62ae      	str	r6, [r5, #40]	; 0x28
 800874c:	50e6      	str	r6, [r4, r3]
        : pobject(pobject), pmemfun_1(pmemfun_1)
 800874e:	f641 1334 	movw	r3, #6452	; 0x1934
 8008752:	18e2      	adds	r2, r4, r3
 8008754:	490c      	ldr	r1, [pc, #48]	; (8008788 <_ZN13WheelSelectorC1Ev+0x158>)
 8008756:	50e1      	str	r1, [r4, r3]
 8008758:	f641 133c 	movw	r3, #6460	; 0x193c
 800875c:	6054      	str	r4, [r2, #4]
 800875e:	4a0b      	ldr	r2, [pc, #44]	; (800878c <_ZN13WheelSelectorC1Ev+0x15c>)
 8008760:	50e2      	str	r2, [r4, r3]
 8008762:	f504 53ca 	add.w	r3, r4, #6464	; 0x1940
{
}
 8008766:	4620      	mov	r0, r4
 8008768:	601e      	str	r6, [r3, #0]
    elementSelectedAction(0)
 800876a:	f641 1344 	movw	r3, #6468	; 0x1944
 800876e:	50e6      	str	r6, [r4, r3]
}
 8008770:	b002      	add	sp, #8
 8008772:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008776:	bf00      	nop
 8008778:	080288a8 	.word	0x080288a8
 800877c:	08029f28 	.word	0x08029f28
 8008780:	0802877c 	.word	0x0802877c
 8008784:	080290b4 	.word	0x080290b4
 8008788:	08028890 	.word	0x08028890
 800878c:	08008a07 	.word	0x08008a07
 8008790:	08028810 	.word	0x08028810

08008794 <_ZN13WheelSelector5setupEtiiiiii>:

void WheelSelector::setup(BitmapId overlay_, int width, int height, int textHeight_, int textYOffsetInOffset_, int overlayX, int overlayY)
{
 8008794:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008798:	461f      	mov	r7, r3
        touchable = touch;
 800879a:	2301      	movs	r3, #1
 800879c:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
    setTouchable(true);

    textYOffsetInOffset = textYOffsetInOffset_;
 80087a0:	f641 131c 	movw	r3, #6428	; 0x191c
{
 80087a4:	4616      	mov	r6, r2

    centerOverlay.setBitmap(Bitmap(overlay_));
 80087a6:	f100 0530 	add.w	r5, r0, #48	; 0x30
    textYOffsetInOffset = textYOffsetInOffset_;
 80087aa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80087ac:	50c2      	str	r2, [r0, r3]
{
 80087ae:	4604      	mov	r4, r0
    textsWidth = width;
 80087b0:	f641 1828 	movw	r8, #6440	; 0x1928
 80087b4:	f8ad 1004 	strh.w	r1, [sp, #4]
    centerOverlay.setBitmap(Bitmap(overlay_));
 80087b8:	4628      	mov	r0, r5
 80087ba:	a901      	add	r1, sp, #4
    textsHeight = textHeight_;
 80087bc:	f641 1a2c 	movw	sl, #6444	; 0x192c
    centerOverlay.setBitmap(Bitmap(overlay_));
 80087c0:	f009 ff8a 	bl	80126d8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    textsHeight = textHeight_;
 80087c4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    textsWidth = width;
 80087c6:	f844 6008 	str.w	r6, [r4, r8]
    centerOverlay.setXY(overlayX, overlayY);
 80087ca:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
    textsHeight = textHeight_;
 80087ce:	f844 300a 	str.w	r3, [r4, sl]
    centerOverlay.setXY(overlayX, overlayY);
 80087d2:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 80087d6:	4628      	mov	r0, r5
 80087d8:	f7f9 fd5c 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>

    textContainer.setPosition(0, 0, textsWidth, 0);
 80087dc:	f104 095c 	add.w	r9, r4, #92	; 0x5c
 80087e0:	f934 b008 	ldrsh.w	fp, [r4, r8]
        setXY(x, y);
 80087e4:	2200      	movs	r2, #0
 80087e6:	4611      	mov	r1, r2
 80087e8:	4648      	mov	r0, r9
 80087ea:	f7f9 fd53 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80087ee:	2200      	movs	r2, #0
 80087f0:	4659      	mov	r1, fp
 80087f2:	4648      	mov	r0, r9
 80087f4:	f7f9 fc53 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
    textContainer.setMoveAnimationEndedAction(animationEndedCallback);
 80087f8:	f504 53c9 	add.w	r3, r4, #6432	; 0x1920
 80087fc:	3314      	adds	r3, #20
        moveAnimationEndedCallback = &callback;
 80087fe:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
    add(textContainer);
 8008802:	6823      	ldr	r3, [r4, #0]
 8008804:	4649      	mov	r1, r9
 8008806:	4620      	mov	r0, r4
 8008808:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800880a:	4798      	blx	r3

    add(centerOverlay);
 800880c:	6823      	ldr	r3, [r4, #0]
 800880e:	4629      	mov	r1, r5
 8008810:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008812:	4620      	mov	r0, r4

    centerTextViewPort.setPosition(0, centerOverlay.getY(), centerOverlay.getWidth(), textsHeight);
 8008814:	f504 55c7 	add.w	r5, r4, #6368	; 0x18e0
    add(centerOverlay);
 8008818:	4798      	blx	r3
    centerTextViewPort.setPosition(0, centerOverlay.getY(), centerOverlay.getWidth(), textsHeight);
 800881a:	350c      	adds	r5, #12
 800881c:	f9b4 9038 	ldrsh.w	r9, [r4, #56]	; 0x38
 8008820:	f934 a00a 	ldrsh.w	sl, [r4, sl]
        setXY(x, y);
 8008824:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8008828:	4628      	mov	r0, r5
 800882a:	2100      	movs	r1, #0
 800882c:	f7f9 fd32 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8008830:	4652      	mov	r2, sl
 8008832:	4649      	mov	r1, r9
 8008834:	4628      	mov	r0, r5
 8008836:	f7f9 fc32 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
    add(centerTextViewPort);
 800883a:	6823      	ldr	r3, [r4, #0]
 800883c:	4629      	mov	r1, r5
 800883e:	4620      	mov	r0, r4
 8008840:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008842:	4798      	blx	r3

    centerTextContainerYOffset = centerTextViewPort.getY();
 8008844:	f641 03f2 	movw	r3, #6386	; 0x18f2
 8008848:	f641 1218 	movw	r2, #6424	; 0x1918
 800884c:	5ee3      	ldrsh	r3, [r4, r3]
 800884e:	50a3      	str	r3, [r4, r2]

    centerTextContainer.setXY(textContainer.getX(), textContainer.getY() - centerTextContainerYOffset);
 8008850:	f8b4 2062 	ldrh.w	r2, [r4, #98]	; 0x62
 8008854:	f9b4 1060 	ldrsh.w	r1, [r4, #96]	; 0x60
 8008858:	f604 49a4 	addw	r9, r4, #3236	; 0xca4
 800885c:	1ad2      	subs	r2, r2, r3
 800885e:	b212      	sxth	r2, r2
 8008860:	4648      	mov	r0, r9
 8008862:	f7f9 fd17 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
    centerTextContainer.setWidth(textsWidth);
 8008866:	f854 3008 	ldr.w	r3, [r4, r8]
 800886a:	f8a4 3cac 	strh.w	r3, [r4, #3244]	; 0xcac
        rect.height = height;
 800886e:	f04f 0800 	mov.w	r8, #0
    centerTextContainer.setHeight(0);
    centerTextViewPort.add(centerTextContainer);
 8008872:	4649      	mov	r1, r9
 8008874:	4628      	mov	r0, r5
 8008876:	f8a4 8cae 	strh.w	r8, [r4, #3246]	; 0xcae
 800887a:	f007 fe2d 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>

    hiddenElements = 0;
 800887e:	f641 1330 	movw	r3, #6448	; 0x1930

    setWidth(width);
 8008882:	b231      	sxth	r1, r6
    hiddenElements = 0;
 8008884:	f844 8003 	str.w	r8, [r4, r3]
    setWidth(width);
 8008888:	6823      	ldr	r3, [r4, #0]
 800888a:	4620      	mov	r0, r4
 800888c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800888e:	4798      	blx	r3
    setHeight(height);
 8008890:	6823      	ldr	r3, [r4, #0]
 8008892:	b239      	sxth	r1, r7
 8008894:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008896:	4620      	mov	r0, r4
 8008898:	4798      	blx	r3
}
 800889a:	b003      	add	sp, #12
 800889c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080088a0 <_ZN13WheelSelector7addTextEttPKt>:

void WheelSelector::addText(TypedTextId textId, TypedTextId selectedTextId, const Unicode::UnicodeChar* newText)
{
 80088a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    Unicode::snprintf(textbuf[textsIndex], MAX_TEXT_SIZE, "%s", newText);
 80088a4:	f641 1524 	movw	r5, #6436	; 0x1924
{
 80088a8:	4604      	mov	r4, r0
    Unicode::snprintf(textbuf[textsIndex], MAX_TEXT_SIZE, "%s", newText);
 80088aa:	5940      	ldr	r0, [r0, r5]
{
 80088ac:	b085      	sub	sp, #20
    Unicode::snprintf(textbuf[textsIndex], MAX_TEXT_SIZE, "%s", newText);
 80088ae:	270c      	movs	r7, #12
 80088b0:	fb07 4000 	mla	r0, r7, r0, r4
{
 80088b4:	4688      	mov	r8, r1
 80088b6:	9201      	str	r2, [sp, #4]
    Unicode::snprintf(textbuf[textsIndex], MAX_TEXT_SIZE, "%s", newText);
 80088b8:	2106      	movs	r1, #6
 80088ba:	4a49      	ldr	r2, [pc, #292]	; (80089e0 <_ZN13WheelSelector7addTextEttPKt+0x140>)
 80088bc:	f600 3024 	addw	r0, r0, #2852	; 0xb24
 80088c0:	f00f fc6e 	bl	80181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    texts[textsIndex].setTypedText(TypedText(textId));
 80088c4:	5960      	ldr	r0, [r4, r5]
        : typedTextId(id)
 80088c6:	4b47      	ldr	r3, [pc, #284]	; (80089e4 <_ZN13WheelSelector7addTextEttPKt+0x144>)
 80088c8:	9302      	str	r3, [sp, #8]
 80088ca:	2654      	movs	r6, #84	; 0x54
 80088cc:	fb06 4000 	mla	r0, r6, r0, r4
 80088d0:	a902      	add	r1, sp, #8
 80088d2:	30a4      	adds	r0, #164	; 0xa4
 80088d4:	f8ad 800c 	strh.w	r8, [sp, #12]
 80088d8:	f009 fbdf 	bl	801209a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    texts[textsIndex].setWildcard(textbuf[textsIndex]);
 80088dc:	f854 c005 	ldr.w	ip, [r4, r5]
 80088e0:	fb06 f10c 	mul.w	r1, r6, ip
 80088e4:	f101 00a4 	add.w	r0, r1, #164	; 0xa4
 80088e8:	fb07 420c 	mla	r2, r7, ip, r4
    texts[textsIndex].setColor(Color::getColorFrom24BitRGB(0xFF, 0xFF, 0xFF));
    texts[textsIndex].setXY(0, textsIndex * textsHeight + textYOffsetInOffset);
 80088ec:	f641 182c 	movw	r8, #6444	; 0x192c
    texts[textsIndex].setWildcard(textbuf[textsIndex]);
 80088f0:	4420      	add	r0, r4
        this->color = color;
 80088f2:	4421      	add	r1, r4
    texts[textsIndex].setXY(0, textsIndex * textsHeight + textYOffsetInOffset);
 80088f4:	f641 1a1c 	movw	sl, #6428	; 0x191c
 80088f8:	f04f 3bff 	mov.w	fp, #4294967295
    texts[textsIndex].setWildcard(textbuf[textsIndex]);
 80088fc:	f602 3224 	addw	r2, r2, #2852	; 0xb24
        wildcard = value;
 8008900:	63c2      	str	r2, [r0, #60]	; 0x3c
    texts[textsIndex].setXY(0, textsIndex * textsHeight + textYOffsetInOffset);
 8008902:	f854 2008 	ldr.w	r2, [r4, r8]
 8008906:	f8c1 b0d4 	str.w	fp, [r1, #212]	; 0xd4
 800890a:	f854 100a 	ldr.w	r1, [r4, sl]
 800890e:	fb12 120c 	smlabb	r2, r2, ip, r1
 8008912:	b212      	sxth	r2, r2
 8008914:	2100      	movs	r1, #0
 8008916:	f7f9 fcbd 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
    texts[textsIndex].setWidth(textsWidth);
 800891a:	5962      	ldr	r2, [r4, r5]
 800891c:	4372      	muls	r2, r6
 800891e:	f102 00a4 	add.w	r0, r2, #164	; 0xa4
 8008922:	4422      	add	r2, r4
 8008924:	f641 1928 	movw	r9, #6440	; 0x1928
 8008928:	f8d2 20a4 	ldr.w	r2, [r2, #164]	; 0xa4
 800892c:	f934 1009 	ldrsh.w	r1, [r4, r9]
 8008930:	6b52      	ldr	r2, [r2, #52]	; 0x34
 8008932:	4420      	add	r0, r4
 8008934:	4790      	blx	r2
    textContainer.add(texts[textsIndex]);
 8008936:	5961      	ldr	r1, [r4, r5]
 8008938:	fb06 4101 	mla	r1, r6, r1, r4
 800893c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8008940:	31a4      	adds	r1, #164	; 0xa4
 8008942:	f007 fdc9 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textContainer.setHeight((textsIndex + 1) * textsHeight);
 8008946:	5960      	ldr	r0, [r4, r5]
 8008948:	f854 1008 	ldr.w	r1, [r4, r8]
 800894c:	4b25      	ldr	r3, [pc, #148]	; (80089e4 <_ZN13WheelSelector7addTextEttPKt+0x144>)
 800894e:	9302      	str	r3, [sp, #8]
 8008950:	1c42      	adds	r2, r0, #1
 8008952:	fb12 f201 	smulbb	r2, r2, r1

    centerTexts[textsIndex].setTypedText(TypedText(selectedTextId));
 8008956:	fb06 4000 	mla	r0, r6, r0, r4
 800895a:	9b01      	ldr	r3, [sp, #4]
 800895c:	f8a4 2066 	strh.w	r2, [r4, #102]	; 0x66
 8008960:	a902      	add	r1, sp, #8
 8008962:	f600 40ec 	addw	r0, r0, #3308	; 0xcec
 8008966:	f8ad 300c 	strh.w	r3, [sp, #12]
 800896a:	f009 fb96 	bl	801209a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    centerTexts[textsIndex].setWildcard(textbuf[textsIndex]);
 800896e:	5962      	ldr	r2, [r4, r5]
    centerTexts[textsIndex].setColor(Color::getColorFrom24BitRGB(0xFF, 0xFF, 0xFF));
    centerTexts[textsIndex].setXY(0, textsIndex * textsHeight + textYOffsetInOffset);
 8008970:	f854 100a 	ldr.w	r1, [r4, sl]
 8008974:	fb06 f302 	mul.w	r3, r6, r2
    centerTexts[textsIndex].setWildcard(textbuf[textsIndex]);
 8008978:	f603 40ec 	addw	r0, r3, #3308	; 0xcec
 800897c:	4420      	add	r0, r4
 800897e:	fb07 4702 	mla	r7, r7, r2, r4
 8008982:	4423      	add	r3, r4
 8008984:	f607 3724 	addw	r7, r7, #2852	; 0xb24
 8008988:	63c7      	str	r7, [r0, #60]	; 0x3c
 800898a:	f8c3 bd1c 	str.w	fp, [r3, #3356]	; 0xd1c
    centerTexts[textsIndex].setXY(0, textsIndex * textsHeight + textYOffsetInOffset);
 800898e:	f854 3008 	ldr.w	r3, [r4, r8]
 8008992:	fb13 1202 	smlabb	r2, r3, r2, r1
 8008996:	b212      	sxth	r2, r2
 8008998:	2100      	movs	r1, #0
 800899a:	f7f9 fc7b 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
    centerTexts[textsIndex].setWidth(textsWidth);
 800899e:	5963      	ldr	r3, [r4, r5]
 80089a0:	f934 1009 	ldrsh.w	r1, [r4, r9]
 80089a4:	4373      	muls	r3, r6
 80089a6:	f603 40ec 	addw	r0, r3, #3308	; 0xcec
 80089aa:	4423      	add	r3, r4
 80089ac:	4420      	add	r0, r4
 80089ae:	f8d3 3cec 	ldr.w	r3, [r3, #3308]	; 0xcec
 80089b2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80089b4:	4798      	blx	r3
    centerTextContainer.add(centerTexts[textsIndex]);
 80089b6:	5961      	ldr	r1, [r4, r5]
 80089b8:	fb06 4101 	mla	r1, r6, r1, r4
 80089bc:	f601 41ec 	addw	r1, r1, #3308	; 0xcec
 80089c0:	f604 40a4 	addw	r0, r4, #3236	; 0xca4
 80089c4:	f007 fd88 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    centerTextContainer.setHeight((textsIndex + 1) * textsHeight);
 80089c8:	5963      	ldr	r3, [r4, r5]
 80089ca:	f854 2008 	ldr.w	r2, [r4, r8]
 80089ce:	3301      	adds	r3, #1
 80089d0:	fb12 f203 	smulbb	r2, r2, r3
 80089d4:	f8a4 2cae 	strh.w	r2, [r4, #3246]	; 0xcae

    textsIndex++;
 80089d8:	5163      	str	r3, [r4, r5]
}
 80089da:	b005      	add	sp, #20
 80089dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80089e0:	08027109 	.word	0x08027109
 80089e4:	08027114 	.word	0x08027114

080089e8 <_ZN13WheelSelector15getSelectedItemEv>:
    animateMoveText(calculateSnapPosition(centerTextCenter - accumHeight), duration, EasingEquations::backEaseOut);
}

int WheelSelector::getSelectedItem()
{
    int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 80089e8:	f641 132c 	movw	r3, #6444	; 0x192c
 80089ec:	58c2      	ldr	r2, [r0, r3]
 80089ee:	f9b0 3036 	ldrsh.w	r3, [r0, #54]	; 0x36
    int foo = centerTextCenter - textContainer.getY();
 80089f2:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
    int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 80089f6:	eb02 71d2 	add.w	r1, r2, r2, lsr #31
 80089fa:	eb03 0361 	add.w	r3, r3, r1, asr #1
    int foo = centerTextCenter - textContainer.getY();
 80089fe:	1a18      	subs	r0, r3, r0
    return foo / textsHeight;
}
 8008a00:	fb90 f0f2 	sdiv	r0, r0, r2
 8008a04:	4770      	bx	lr

08008a06 <_ZN13WheelSelector21animationEndedHandlerERKN8touchgfx12MoveAnimatorINS0_9ContainerEEE>:

    hiddenElements = numberOfElementsToHide;
}

void WheelSelector::animationEndedHandler(const MoveAnimator<Container>& source)
{
 8008a06:	b573      	push	{r0, r1, r4, r5, r6, lr}
    currentAnimationState = NO_ANIMATION;

    if (elementSelectedAction != 0 && elementSelectedAction->isValid())
 8008a08:	f641 1544 	movw	r5, #6468	; 0x1944
    currentAnimationState = NO_ANIMATION;
 8008a0c:	2303      	movs	r3, #3
{
 8008a0e:	4604      	mov	r4, r0
    currentAnimationState = NO_ANIMATION;
 8008a10:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
    if (elementSelectedAction != 0 && elementSelectedAction->isValid())
 8008a14:	5940      	ldr	r0, [r0, r5]
 8008a16:	b170      	cbz	r0, 8008a36 <_ZN13WheelSelector21animationEndedHandlerERKN8touchgfx12MoveAnimatorINS0_9ContainerEEE+0x30>
 8008a18:	6803      	ldr	r3, [r0, #0]
 8008a1a:	68db      	ldr	r3, [r3, #12]
 8008a1c:	4798      	blx	r3
 8008a1e:	b150      	cbz	r0, 8008a36 <_ZN13WheelSelector21animationEndedHandlerERKN8touchgfx12MoveAnimatorINS0_9ContainerEEE+0x30>
    {
        elementSelectedAction->execute(*this, getSelectedItem());
 8008a20:	5965      	ldr	r5, [r4, r5]
 8008a22:	682b      	ldr	r3, [r5, #0]
 8008a24:	4620      	mov	r0, r4
 8008a26:	689e      	ldr	r6, [r3, #8]
 8008a28:	f7ff ffde 	bl	80089e8 <_ZN13WheelSelector15getSelectedItemEv>
 8008a2c:	aa01      	add	r2, sp, #4
 8008a2e:	9001      	str	r0, [sp, #4]
 8008a30:	4621      	mov	r1, r4
 8008a32:	4628      	mov	r0, r5
 8008a34:	47b0      	blx	r6
    }
}
 8008a36:	b002      	add	sp, #8
 8008a38:	bd70      	pop	{r4, r5, r6, pc}

08008a3a <_ZN13WheelSelector21calculateSnapPositionEi>:
    centerTextContainer.startMoveAnimation(centerTextContainer.getX(), newYPosition - centerTextContainerYOffset, duration, equation, equation);
}

int WheelSelector::calculateSnapPosition(int newYPosition)
{
    int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 8008a3a:	f641 132c 	movw	r3, #6444	; 0x192c
{
 8008a3e:	b510      	push	{r4, lr}
    int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 8008a40:	f9b0 4036 	ldrsh.w	r4, [r0, #54]	; 0x36
 8008a44:	58c0      	ldr	r0, [r0, r3]
 8008a46:	eb00 73d0 	add.w	r3, r0, r0, lsr #31
 8008a4a:	eb04 0363 	add.w	r3, r4, r3, asr #1
    int index = (centerTextCenter - newYPosition) / textsHeight;
 8008a4e:	1a59      	subs	r1, r3, r1
 8008a50:	fb91 f1f0 	sdiv	r1, r1, r0
    return centerTextCenter - (textsHeight * index + textsHeight / 2);
}
 8008a54:	fb00 4011 	mls	r0, r0, r1, r4
 8008a58:	bd10      	pop	{r4, pc}

08008a5a <_ZN13WheelSelector29getTextContainerVisibleHeightEv>:
    animateMoveText(calculateSnapPosition(textContainer.getY()), duration, EasingEquations::backEaseInOut);
}

int WheelSelector::getTextContainerVisibleHeight()
{
    return (textsHeight * (textsIndex - hiddenElements - 1));
 8008a5a:	f641 1324 	movw	r3, #6436	; 0x1924
 8008a5e:	f641 1230 	movw	r2, #6448	; 0x1930
 8008a62:	58c3      	ldr	r3, [r0, r3]
 8008a64:	5882      	ldr	r2, [r0, r2]
 8008a66:	1a9b      	subs	r3, r3, r2
 8008a68:	f641 122c 	movw	r2, #6444	; 0x192c
 8008a6c:	3b01      	subs	r3, #1
 8008a6e:	5880      	ldr	r0, [r0, r2]
}
 8008a70:	4358      	muls	r0, r3
 8008a72:	4770      	bx	lr

08008a74 <_ZN13WheelSelector19adjustForBoundariesERi>:
    if (newYPosition > centerOverlay.getY() + cutoff)
 8008a74:	680b      	ldr	r3, [r1, #0]
{
 8008a76:	b510      	push	{r4, lr}
    if (newYPosition > centerOverlay.getY() + cutoff)
 8008a78:	f9b0 4036 	ldrsh.w	r4, [r0, #54]	; 0x36
 8008a7c:	42a3      	cmp	r3, r4
        newYPosition = centerOverlay.getY() + cutoff;
 8008a7e:	bfc8      	it	gt
 8008a80:	600c      	strgt	r4, [r1, #0]
    if (newYPosition < centerOverlay.getY() - (getTextContainerVisibleHeight() + cutoff))
 8008a82:	f7ff ffea 	bl	8008a5a <_ZN13WheelSelector29getTextContainerVisibleHeightEv>
 8008a86:	680b      	ldr	r3, [r1, #0]
 8008a88:	1a20      	subs	r0, r4, r0
 8008a8a:	4283      	cmp	r3, r0
        newYPosition = centerOverlay.getY() - (getTextContainerVisibleHeight() + cutoff);
 8008a8c:	bfb8      	it	lt
 8008a8e:	6008      	strlt	r0, [r1, #0]
}
 8008a90:	bd10      	pop	{r4, pc}

08008a92 <_ZN13WheelSelector8moveTextEi>:
{
 8008a92:	b513      	push	{r0, r1, r4, lr}
 8008a94:	4604      	mov	r4, r0
 8008a96:	9101      	str	r1, [sp, #4]
    adjustForBoundaries(newYPosition);
 8008a98:	a901      	add	r1, sp, #4
 8008a9a:	f7ff ffeb 	bl	8008a74 <_ZN13WheelSelector19adjustForBoundariesERi>
    textContainer.moveTo(textContainer.getX(), newYPosition);
 8008a9e:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8008aa2:	f9b4 1060 	ldrsh.w	r1, [r4, #96]	; 0x60
 8008aa6:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8008aaa:	f7f9 fad8 	bl	800205e <_ZN8touchgfx8Drawable6moveToEss>
    centerTextContainer.moveTo(centerTextContainer.getX(), newYPosition - centerTextContainerYOffset);
 8008aae:	f641 1318 	movw	r3, #6424	; 0x1918
 8008ab2:	9a01      	ldr	r2, [sp, #4]
 8008ab4:	58e3      	ldr	r3, [r4, r3]
 8008ab6:	f9b4 1ca8 	ldrsh.w	r1, [r4, #3240]	; 0xca8
 8008aba:	1ad2      	subs	r2, r2, r3
 8008abc:	b212      	sxth	r2, r2
 8008abe:	f604 40a4 	addw	r0, r4, #3236	; 0xca4
 8008ac2:	f7f9 facc 	bl	800205e <_ZN8touchgfx8Drawable6moveToEss>
}
 8008ac6:	b002      	add	sp, #8
 8008ac8:	bd10      	pop	{r4, pc}

08008aca <_ZN13WheelSelector15handleDragEventERKN8touchgfx9DragEventE>:
    currentAnimationState = ANIMATING_DRAG;
 8008aca:	2202      	movs	r2, #2
 8008acc:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
     *
     * @return The distance of this drag event.
     */
    int16_t getDeltaY() const
    {
        return dragToY - dragFromY;
 8008ad0:	898a      	ldrh	r2, [r1, #12]
 8008ad2:	8909      	ldrh	r1, [r1, #8]
 8008ad4:	1a52      	subs	r2, r2, r1
    moveText(textContainer.getY() + evt.getDeltaY());
 8008ad6:	f9b0 1062 	ldrsh.w	r1, [r0, #98]	; 0x62
 8008ada:	fa01 f182 	sxtah	r1, r1, r2
 8008ade:	f7ff bfd8 	b.w	8008a92 <_ZN13WheelSelector8moveTextEi>

08008ae2 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE19cancelMoveAnimationEv>:
     * Cancel move animation and leave the Drawable in its current position. If the
     * animation is not running, nothing is done.
     */
    void cancelMoveAnimation()
    {
        if (moveAnimationRunning)
 8008ae2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    void cancelMoveAnimation()
 8008ae6:	b510      	push	{r4, lr}
 8008ae8:	4604      	mov	r4, r0
        if (moveAnimationRunning)
 8008aea:	b13b      	cbz	r3, 8008afc <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE19cancelMoveAnimationEv+0x1a>
        {
            Application::getInstance()->unregisterTimerWidget(this);
 8008aec:	f00b feb0 	bl	8014850 <_ZN8touchgfx11Application11getInstanceEv>
 8008af0:	4621      	mov	r1, r4
 8008af2:	f00b fee5 	bl	80148c0 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
            moveAnimationRunning = false;
 8008af6:	2300      	movs	r3, #0
 8008af8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        }
    }
 8008afc:	bd10      	pop	{r4, pc}

08008afe <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv>:

protected:
    /** Execute next step in fade animation and stop the timer if necessary. */
    void nextFadeAnimationStep()
    {
        if (fadeAnimationRunning)
 8008afe:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
    void nextFadeAnimationStep()
 8008b02:	b570      	push	{r4, r5, r6, lr}
 8008b04:	4604      	mov	r4, r0
        if (fadeAnimationRunning)
 8008b06:	2b00      	cmp	r3, #0
 8008b08:	d03e      	beq.n	8008b88 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv+0x8a>
        {
            fadeAnimationCounter++;
 8008b0a:	f8b0 0042 	ldrh.w	r0, [r0, #66]	; 0x42
            if (fadeAnimationCounter >= fadeAnimationDelay)
 8008b0e:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
            fadeAnimationCounter++;
 8008b12:	3001      	adds	r0, #1
 8008b14:	b280      	uxth	r0, r0
            if (fadeAnimationCounter >= fadeAnimationDelay)
 8008b16:	4298      	cmp	r0, r3
            fadeAnimationCounter++;
 8008b18:	f8a4 0042 	strh.w	r0, [r4, #66]	; 0x42
            if (fadeAnimationCounter >= fadeAnimationDelay)
 8008b1c:	d334      	bcc.n	8008b88 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv+0x8a>
            {
                // Adjust the used animationCounter for the startup delay
                uint32_t actualAnimationCounter = fadeAnimationCounter - fadeAnimationDelay;

                int16_t deltaAlpha = (int16_t)fadeAnimationAlphaEquation(actualAnimationCounter, 0, fadeAnimationEndAlpha - fadeAnimationStartAlpha, fadeAnimationDuration);
 8008b1e:	f8b4 1048 	ldrh.w	r1, [r4, #72]	; 0x48
 8008b22:	f8b4 204a 	ldrh.w	r2, [r4, #74]	; 0x4a
 8008b26:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8008b28:	1a52      	subs	r2, r2, r1
 8008b2a:	1ac0      	subs	r0, r0, r3
 8008b2c:	b212      	sxth	r2, r2
 8008b2e:	2100      	movs	r1, #0
 8008b30:	f8b4 3046 	ldrh.w	r3, [r4, #70]	; 0x46
 8008b34:	b280      	uxth	r0, r0
 8008b36:	47a8      	blx	r5

                T::setAlpha(fadeAnimationStartAlpha + deltaAlpha);
 8008b38:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 8008b3c:	4418      	add	r0, r3
        alpha = newAlpha;
 8008b3e:	f884 0036 	strb.w	r0, [r4, #54]	; 0x36
                T::invalidate();
 8008b42:	4620      	mov	r0, r4
 8008b44:	f00c fe2c 	bl	80157a0 <_ZNK8touchgfx8Drawable10invalidateEv>

                if (fadeAnimationCounter >= (uint32_t)(fadeAnimationDelay + fadeAnimationDuration))
 8008b48:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 8008b4c:	f8b4 1046 	ldrh.w	r1, [r4, #70]	; 0x46
 8008b50:	f8b4 2042 	ldrh.w	r2, [r4, #66]	; 0x42
 8008b54:	440b      	add	r3, r1
 8008b56:	429a      	cmp	r2, r3
 8008b58:	d316      	bcc.n	8008b88 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv+0x8a>
                {
                    // End of animation
                    fadeAnimationRunning = false;
 8008b5a:	2300      	movs	r3, #0
 8008b5c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
                    fadeAnimationDuration = 0;
 8008b60:	f8a4 3046 	strh.w	r3, [r4, #70]	; 0x46
                    Application::getInstance()->unregisterTimerWidget(this);
 8008b64:	f00b fe74 	bl	8014850 <_ZN8touchgfx11Application11getInstanceEv>
 8008b68:	4621      	mov	r1, r4
 8008b6a:	f00b fea9 	bl	80148c0 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>

                    if (fadeAnimationEndedCallback && fadeAnimationEndedCallback->isValid())
 8008b6e:	6d20      	ldr	r0, [r4, #80]	; 0x50
 8008b70:	b150      	cbz	r0, 8008b88 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv+0x8a>
 8008b72:	6803      	ldr	r3, [r0, #0]
 8008b74:	68db      	ldr	r3, [r3, #12]
 8008b76:	4798      	blx	r3
 8008b78:	b130      	cbz	r0, 8008b88 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv+0x8a>
                    {
                        fadeAnimationEndedCallback->execute(*this);
 8008b7a:	6d20      	ldr	r0, [r4, #80]	; 0x50
 8008b7c:	6803      	ldr	r3, [r0, #0]
 8008b7e:	4621      	mov	r1, r4
 8008b80:	689b      	ldr	r3, [r3, #8]
                    }
                }
            }
        }
    }
 8008b82:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                        fadeAnimationEndedCallback->execute(*this);
 8008b86:	4718      	bx	r3
    }
 8008b88:	bd70      	pop	{r4, r5, r6, pc}

08008b8a <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE15handleTickEventEv>:
    virtual void handleTickEvent()
 8008b8a:	b508      	push	{r3, lr}
        nextFadeAnimationStep();
 8008b8c:	f7ff ffb7 	bl	8008afe <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv>
    }
 8008b90:	bd08      	pop	{r3, pc}

08008b92 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE18startFadeAnimationEhtPFstsstE>:
    void startFadeAnimation(uint8_t endAlpha, uint16_t duration, EasingEquation alphaProgressionEquation = &EasingEquations::linearEaseNone)
 8008b92:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008b94:	461d      	mov	r5, r3
        if (!fadeAnimationRunning)
 8008b96:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
    void startFadeAnimation(uint8_t endAlpha, uint16_t duration, EasingEquation alphaProgressionEquation = &EasingEquations::linearEaseNone)
 8008b9a:	4604      	mov	r4, r0
 8008b9c:	460f      	mov	r7, r1
 8008b9e:	4616      	mov	r6, r2
        if (!fadeAnimationRunning)
 8008ba0:	b923      	cbnz	r3, 8008bac <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE18startFadeAnimationEhtPFstsstE+0x1a>
            Application::getInstance()->registerTimerWidget(this);
 8008ba2:	f00b fe55 	bl	8014850 <_ZN8touchgfx11Application11getInstanceEv>
 8008ba6:	4621      	mov	r1, r4
 8008ba8:	f00b fe58 	bl	801485c <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
        fadeAnimationCounter = 0;
 8008bac:	2300      	movs	r3, #0
 8008bae:	f8a4 3042 	strh.w	r3, [r4, #66]	; 0x42
        fadeAnimationStartAlpha = T::getAlpha();
 8008bb2:	f894 3036 	ldrb.w	r3, [r4, #54]	; 0x36
 8008bb6:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
        fadeAnimationDuration = duration;
 8008bba:	f8a4 6046 	strh.w	r6, [r4, #70]	; 0x46
        fadeAnimationRunning = true;
 8008bbe:	2301      	movs	r3, #1
 8008bc0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        if (fadeAnimationDelay == 0 && fadeAnimationDuration == 0)
 8008bc4:	6c63      	ldr	r3, [r4, #68]	; 0x44
        fadeAnimationEndAlpha = endAlpha;
 8008bc6:	f8a4 704a 	strh.w	r7, [r4, #74]	; 0x4a
        fadeAnimationAlphaEquation = alphaProgressionEquation;
 8008bca:	64e5      	str	r5, [r4, #76]	; 0x4c
        if (fadeAnimationDelay == 0 && fadeAnimationDuration == 0)
 8008bcc:	b913      	cbnz	r3, 8008bd4 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE18startFadeAnimationEhtPFstsstE+0x42>
            nextFadeAnimationStep(); // Set end alpha and shut down
 8008bce:	4620      	mov	r0, r4
 8008bd0:	f7ff ff95 	bl	8008afe <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE21nextFadeAnimationStepEv>
    }
 8008bd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08008bd8 <_ZN13WheelSelector18hideBottomElementsEi>:
{
 8008bd8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    for (int i = 0; i < textsIndex - numberOfElementsToHide; i++)
 8008bdc:	f500 58c9 	add.w	r8, r0, #6432	; 0x1920
            texts[i].startFadeAnimation(255, 12);
 8008be0:	f8df a08c 	ldr.w	sl, [pc, #140]	; 8008c70 <_ZN13WheelSelector18hideBottomElementsEi+0x98>
{
 8008be4:	4606      	mov	r6, r0
 8008be6:	460f      	mov	r7, r1
 8008be8:	f100 04a4 	add.w	r4, r0, #164	; 0xa4
    for (int i = 0; i < textsIndex - numberOfElementsToHide; i++)
 8008bec:	f04f 0900 	mov.w	r9, #0
 8008bf0:	f108 0804 	add.w	r8, r8, #4
 8008bf4:	f8d8 5000 	ldr.w	r5, [r8]
 8008bf8:	1bed      	subs	r5, r5, r7
 8008bfa:	454d      	cmp	r5, r9
 8008bfc:	dc1d      	bgt.n	8008c3a <_ZN13WheelSelector18hideBottomElementsEi+0x62>
 8008bfe:	2454      	movs	r4, #84	; 0x54
            texts[i].startFadeAnimation(0, 12);
 8008c00:	f8df 906c 	ldr.w	r9, [pc, #108]	; 8008c70 <_ZN13WheelSelector18hideBottomElementsEi+0x98>
 8008c04:	fb04 6405 	mla	r4, r4, r5, r6
    for (int i = textsIndex - numberOfElementsToHide; i < textsIndex; i++)
 8008c08:	f8d8 3000 	ldr.w	r3, [r8]
 8008c0c:	42ab      	cmp	r3, r5
 8008c0e:	dd29      	ble.n	8008c64 <_ZN13WheelSelector18hideBottomElementsEi+0x8c>
        if (texts[i].getAlpha() == 255)
 8008c10:	f894 30da 	ldrb.w	r3, [r4, #218]	; 0xda
 8008c14:	2bff      	cmp	r3, #255	; 0xff
 8008c16:	f104 00a4 	add.w	r0, r4, #164	; 0xa4
 8008c1a:	d10b      	bne.n	8008c34 <_ZN13WheelSelector18hideBottomElementsEi+0x5c>
            texts[i].startFadeAnimation(0, 12);
 8008c1c:	464b      	mov	r3, r9
 8008c1e:	220c      	movs	r2, #12
 8008c20:	2100      	movs	r1, #0
 8008c22:	f7ff ffb6 	bl	8008b92 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE18startFadeAnimationEhtPFstsstE>
            centerTexts[i].startFadeAnimation(0, 12);
 8008c26:	464b      	mov	r3, r9
 8008c28:	220c      	movs	r2, #12
 8008c2a:	2100      	movs	r1, #0
 8008c2c:	f604 40ec 	addw	r0, r4, #3308	; 0xcec
 8008c30:	f7ff ffaf 	bl	8008b92 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE18startFadeAnimationEhtPFstsstE>
    for (int i = textsIndex - numberOfElementsToHide; i < textsIndex; i++)
 8008c34:	3501      	adds	r5, #1
 8008c36:	3454      	adds	r4, #84	; 0x54
 8008c38:	e7e6      	b.n	8008c08 <_ZN13WheelSelector18hideBottomElementsEi+0x30>
        if (texts[i].getAlpha() != 255)
 8008c3a:	f894 3036 	ldrb.w	r3, [r4, #54]	; 0x36
 8008c3e:	2bff      	cmp	r3, #255	; 0xff
 8008c40:	d00c      	beq.n	8008c5c <_ZN13WheelSelector18hideBottomElementsEi+0x84>
            texts[i].startFadeAnimation(255, 12);
 8008c42:	4653      	mov	r3, sl
 8008c44:	220c      	movs	r2, #12
 8008c46:	21ff      	movs	r1, #255	; 0xff
 8008c48:	4620      	mov	r0, r4
 8008c4a:	f7ff ffa2 	bl	8008b92 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE18startFadeAnimationEhtPFstsstE>
            centerTexts[i].startFadeAnimation(255, 12);
 8008c4e:	4653      	mov	r3, sl
 8008c50:	220c      	movs	r2, #12
 8008c52:	21ff      	movs	r1, #255	; 0xff
 8008c54:	f604 4048 	addw	r0, r4, #3144	; 0xc48
 8008c58:	f7ff ff9b 	bl	8008b92 <_ZN8touchgfx12FadeAnimatorINS_23TextAreaWithOneWildcardEE18startFadeAnimationEhtPFstsstE>
    for (int i = 0; i < textsIndex - numberOfElementsToHide; i++)
 8008c5c:	f109 0901 	add.w	r9, r9, #1
 8008c60:	3454      	adds	r4, #84	; 0x54
 8008c62:	e7c7      	b.n	8008bf4 <_ZN13WheelSelector18hideBottomElementsEi+0x1c>
    hiddenElements = numberOfElementsToHide;
 8008c64:	f641 1330 	movw	r3, #6448	; 0x1930
 8008c68:	50f7      	str	r7, [r6, r3]
}
 8008c6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008c6e:	bf00      	nop
 8008c70:	08016169 	.word	0x08016169

08008c74 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv>:

protected:
    /** Execute next step in move animation and stop the timer if the animation has finished. */
    void nextMoveAnimationStep()
    {
        if (moveAnimationRunning)
 8008c74:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    void nextMoveAnimationStep()
 8008c78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008c7c:	4604      	mov	r4, r0
        if (moveAnimationRunning)
 8008c7e:	2b00      	cmp	r3, #0
 8008c80:	d040      	beq.n	8008d04 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv+0x90>
        {
            moveAnimationCounter++;
 8008c82:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
            if (moveAnimationCounter >= moveAnimationDelay)
 8008c84:	8e05      	ldrh	r5, [r0, #48]	; 0x30
            moveAnimationCounter++;
 8008c86:	3301      	adds	r3, #1
 8008c88:	b29b      	uxth	r3, r3
            if (moveAnimationCounter >= moveAnimationDelay)
 8008c8a:	42ab      	cmp	r3, r5
            moveAnimationCounter++;
 8008c8c:	85c3      	strh	r3, [r0, #46]	; 0x2e
            if (moveAnimationCounter >= moveAnimationDelay)
 8008c8e:	d339      	bcc.n	8008d04 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv+0x90>
            {
                // Adjust the used animationCounter for the startup delay
                uint32_t actualAnimationCounter = moveAnimationCounter - moveAnimationDelay;

                int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 8008c90:	1b5b      	subs	r3, r3, r5
 8008c92:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8008c94:	6bc6      	ldr	r6, [r0, #60]	; 0x3c
 8008c96:	b29d      	uxth	r5, r3
 8008c98:	8e83      	ldrh	r3, [r0, #52]	; 0x34
 8008c9a:	1ad2      	subs	r2, r2, r3
 8008c9c:	b212      	sxth	r2, r2
 8008c9e:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8008ca0:	2100      	movs	r1, #0
 8008ca2:	4628      	mov	r0, r5
 8008ca4:	47b0      	blx	r6
                int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 8008ca6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008ca8:	8f62      	ldrh	r2, [r4, #58]	; 0x3a
 8008caa:	6c27      	ldr	r7, [r4, #64]	; 0x40
 8008cac:	1ad2      	subs	r2, r2, r3
                int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 8008cae:	4606      	mov	r6, r0
                int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 8008cb0:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8008cb2:	b212      	sxth	r2, r2
 8008cb4:	2100      	movs	r1, #0
 8008cb6:	4628      	mov	r0, r5
 8008cb8:	47b8      	blx	r7

                T::moveTo(moveAnimationStartX + deltaX, moveAnimationStartY + deltaY);
 8008cba:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8008cbc:	8ea1      	ldrh	r1, [r4, #52]	; 0x34
 8008cbe:	4402      	add	r2, r0
 8008cc0:	4431      	add	r1, r6
 8008cc2:	b212      	sxth	r2, r2
 8008cc4:	b209      	sxth	r1, r1
 8008cc6:	4620      	mov	r0, r4
 8008cc8:	f7f9 f9c9 	bl	800205e <_ZN8touchgfx8Drawable6moveToEss>

                if (moveAnimationCounter >= (uint32_t)(moveAnimationDelay + moveAnimationDuration))
 8008ccc:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8008cce:	8e61      	ldrh	r1, [r4, #50]	; 0x32
 8008cd0:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 8008cd2:	440b      	add	r3, r1
 8008cd4:	429a      	cmp	r2, r3
 8008cd6:	d315      	bcc.n	8008d04 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv+0x90>
                {
                    // End of animation
                    moveAnimationRunning = false;
 8008cd8:	2300      	movs	r3, #0
 8008cda:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
                    moveAnimationCounter = 0;
 8008cde:	85e3      	strh	r3, [r4, #46]	; 0x2e
                    Application::getInstance()->unregisterTimerWidget(this);
 8008ce0:	f00b fdb6 	bl	8014850 <_ZN8touchgfx11Application11getInstanceEv>
 8008ce4:	4621      	mov	r1, r4
 8008ce6:	f00b fdeb 	bl	80148c0 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>

                    if (moveAnimationEndedCallback && moveAnimationEndedCallback->isValid())
 8008cea:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8008cec:	b150      	cbz	r0, 8008d04 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv+0x90>
 8008cee:	6803      	ldr	r3, [r0, #0]
 8008cf0:	68db      	ldr	r3, [r3, #12]
 8008cf2:	4798      	blx	r3
 8008cf4:	b130      	cbz	r0, 8008d04 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv+0x90>
                    {
                        moveAnimationEndedCallback->execute(*this);
 8008cf6:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8008cf8:	6803      	ldr	r3, [r0, #0]
 8008cfa:	4621      	mov	r1, r4
 8008cfc:	689b      	ldr	r3, [r3, #8]
                    }
                }
            }
        }
    }
 8008cfe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
                        moveAnimationEndedCallback->execute(*this);
 8008d02:	4718      	bx	r3
    }
 8008d04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008d08 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE15handleTickEventEv>:
    virtual void handleTickEvent()
 8008d08:	b508      	push	{r3, lr}
        nextMoveAnimationStep();
 8008d0a:	f7ff ffb3 	bl	8008c74 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv>
    }
 8008d0e:	bd08      	pop	{r3, pc}

08008d10 <_ZN13WheelSelector15animateMoveTextEiiPFstsstE>:
{
 8008d10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008d14:	461e      	mov	r6, r3
        if (!moveAnimationRunning)
 8008d16:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
    textContainer.startMoveAnimation(textContainer.getX(), newYPosition, duration, equation, equation);
 8008d1a:	f9b0 a060 	ldrsh.w	sl, [r0, #96]	; 0x60
{
 8008d1e:	4604      	mov	r4, r0
 8008d20:	460d      	mov	r5, r1
    textContainer.startMoveAnimation(textContainer.getX(), newYPosition, duration, equation, equation);
 8008d22:	f100 085c 	add.w	r8, r0, #92	; 0x5c
 8008d26:	fa0f f981 	sxth.w	r9, r1
 8008d2a:	b297      	uxth	r7, r2
 8008d2c:	b923      	cbnz	r3, 8008d38 <_ZN13WheelSelector15animateMoveTextEiiPFstsstE+0x28>
            Application::getInstance()->registerTimerWidget(this);
 8008d2e:	f00b fd8f 	bl	8014850 <_ZN8touchgfx11Application11getInstanceEv>
 8008d32:	4641      	mov	r1, r8
 8008d34:	f00b fd92 	bl	801485c <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
        moveAnimationCounter = 0;
 8008d38:	2300      	movs	r3, #0
 8008d3a:	f8a4 308a 	strh.w	r3, [r4, #138]	; 0x8a
        moveAnimationStartX = T::getX();
 8008d3e:	f8b4 3060 	ldrh.w	r3, [r4, #96]	; 0x60
 8008d42:	f8a4 3090 	strh.w	r3, [r4, #144]	; 0x90
        moveAnimationStartY = T::getY();
 8008d46:	f8b4 3062 	ldrh.w	r3, [r4, #98]	; 0x62
 8008d4a:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        moveAnimationDuration = duration;
 8008d4e:	f8a4 708e 	strh.w	r7, [r4, #142]	; 0x8e
        moveAnimationRunning = true;
 8008d52:	2301      	movs	r3, #1
 8008d54:	f884 3088 	strb.w	r3, [r4, #136]	; 0x88
        if (moveAnimationDelay == 0 && moveAnimationDuration == 0)
 8008d58:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
        moveAnimationEndX = endX;
 8008d5c:	f8a4 a094 	strh.w	sl, [r4, #148]	; 0x94
        moveAnimationYEquation = yProgressionEquation;
 8008d60:	e9c4 6626 	strd	r6, r6, [r4, #152]	; 0x98
        moveAnimationEndY = endY;
 8008d64:	f8a4 9096 	strh.w	r9, [r4, #150]	; 0x96
        if (moveAnimationDelay == 0 && moveAnimationDuration == 0)
 8008d68:	b913      	cbnz	r3, 8008d70 <_ZN13WheelSelector15animateMoveTextEiiPFstsstE+0x60>
            nextMoveAnimationStep(); // Set end position and shut down
 8008d6a:	4640      	mov	r0, r8
 8008d6c:	f7ff ff82 	bl	8008c74 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv>
    centerTextContainer.startMoveAnimation(centerTextContainer.getX(), newYPosition - centerTextContainerYOffset, duration, equation, equation);
 8008d70:	f641 1318 	movw	r3, #6424	; 0x1918
 8008d74:	f9b4 9ca8 	ldrsh.w	r9, [r4, #3240]	; 0xca8
 8008d78:	58e1      	ldr	r1, [r4, r3]
        if (!moveAnimationRunning)
 8008d7a:	f894 3cd0 	ldrb.w	r3, [r4, #3280]	; 0xcd0
 8008d7e:	1a6d      	subs	r5, r5, r1
 8008d80:	f604 48a4 	addw	r8, r4, #3236	; 0xca4
 8008d84:	b22d      	sxth	r5, r5
 8008d86:	b923      	cbnz	r3, 8008d92 <_ZN13WheelSelector15animateMoveTextEiiPFstsstE+0x82>
            Application::getInstance()->registerTimerWidget(this);
 8008d88:	f00b fd62 	bl	8014850 <_ZN8touchgfx11Application11getInstanceEv>
 8008d8c:	4641      	mov	r1, r8
 8008d8e:	f00b fd65 	bl	801485c <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
        moveAnimationCounter = 0;
 8008d92:	2300      	movs	r3, #0
 8008d94:	f8a4 3cd2 	strh.w	r3, [r4, #3282]	; 0xcd2
        moveAnimationStartX = T::getX();
 8008d98:	f8b4 3ca8 	ldrh.w	r3, [r4, #3240]	; 0xca8
 8008d9c:	f8a4 3cd8 	strh.w	r3, [r4, #3288]	; 0xcd8
        moveAnimationStartY = T::getY();
 8008da0:	f8b4 3caa 	ldrh.w	r3, [r4, #3242]	; 0xcaa
 8008da4:	f8a4 3cda 	strh.w	r3, [r4, #3290]	; 0xcda
        moveAnimationDuration = duration;
 8008da8:	f8a4 7cd6 	strh.w	r7, [r4, #3286]	; 0xcd6
        moveAnimationRunning = true;
 8008dac:	2301      	movs	r3, #1
 8008dae:	f884 3cd0 	strb.w	r3, [r4, #3280]	; 0xcd0
        if (moveAnimationDelay == 0 && moveAnimationDuration == 0)
 8008db2:	f8d4 3cd4 	ldr.w	r3, [r4, #3284]	; 0xcd4
        moveAnimationEndX = endX;
 8008db6:	f8a4 9cdc 	strh.w	r9, [r4, #3292]	; 0xcdc
        moveAnimationEndY = endY;
 8008dba:	f8a4 5cde 	strh.w	r5, [r4, #3294]	; 0xcde
        moveAnimationXEquation = xProgressionEquation;
 8008dbe:	f8c4 6ce0 	str.w	r6, [r4, #3296]	; 0xce0
        moveAnimationYEquation = yProgressionEquation;
 8008dc2:	f8c4 6ce4 	str.w	r6, [r4, #3300]	; 0xce4
        if (moveAnimationDelay == 0 && moveAnimationDuration == 0)
 8008dc6:	b913      	cbnz	r3, 8008dce <_ZN13WheelSelector15animateMoveTextEiiPFstsstE+0xbe>
            nextMoveAnimationStep(); // Set end position and shut down
 8008dc8:	4640      	mov	r0, r8
 8008dca:	f7ff ff53 	bl	8008c74 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE21nextMoveAnimationStepEv>
}
 8008dce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08008dd4 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE>:
    int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 8008dd4:	f641 132c 	movw	r3, #6444	; 0x192c
{
 8008dd8:	b570      	push	{r4, r5, r6, lr}
    int accumHeight = textsHeight * index + textsHeight / 2;
 8008dda:	58c3      	ldr	r3, [r0, r3]
    int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 8008ddc:	f9b0 5036 	ldrsh.w	r5, [r0, #54]	; 0x36
    animateMoveText(calculateSnapPosition(centerTextCenter - accumHeight), duration, EasingEquations::backEaseOut);
 8008de0:	fb03 5111 	mls	r1, r3, r1, r5
{
 8008de4:	4604      	mov	r4, r0
    animateMoveText(calculateSnapPosition(centerTextCenter - accumHeight), duration, EasingEquations::backEaseOut);
 8008de6:	f7ff fe28 	bl	8008a3a <_ZN13WheelSelector21calculateSnapPositionEi>
 8008dea:	4b03      	ldr	r3, [pc, #12]	; (8008df8 <_ZN13WheelSelector15setSelectedItemEiiPFstsstE+0x24>)
 8008dec:	4601      	mov	r1, r0
 8008dee:	4620      	mov	r0, r4
}
 8008df0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    animateMoveText(calculateSnapPosition(centerTextCenter - accumHeight), duration, EasingEquations::backEaseOut);
 8008df4:	f7ff bf8c 	b.w	8008d10 <_ZN13WheelSelector15animateMoveTextEiiPFstsstE>
 8008df8:	08016041 	.word	0x08016041

08008dfc <_ZN13WheelSelector18handleGestureEventERKN8touchgfx12GestureEventE>:
    if (evt.getType() == GestureEvent::SWIPE_VERTICAL)
 8008dfc:	790b      	ldrb	r3, [r1, #4]
 8008dfe:	2b01      	cmp	r3, #1
{
 8008e00:	b513      	push	{r0, r1, r4, lr}
 8008e02:	4604      	mov	r4, r0
    if (evt.getType() == GestureEvent::SWIPE_VERTICAL)
 8008e04:	d121      	bne.n	8008e4a <_ZN13WheelSelector18handleGestureEventERKN8touchgfx12GestureEventE+0x4e>
        currentAnimationState = ANIMATING_GESTURE;
 8008e06:	2300      	movs	r3, #0
        int newYPosition = textContainer.getY() + delta;
 8008e08:	f9b0 2062 	ldrsh.w	r2, [r0, #98]	; 0x62
        currentAnimationState = ANIMATING_GESTURE;
 8008e0c:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
        int newYPosition = textContainer.getY() + delta;
 8008e10:	88cb      	ldrh	r3, [r1, #6]
 8008e12:	2105      	movs	r1, #5
 8008e14:	fb13 2301 	smlabb	r3, r3, r1, r2
        adjustForBoundaries(newYPosition);
 8008e18:	a901      	add	r1, sp, #4
        int newYPosition = textContainer.getY() + delta;
 8008e1a:	9301      	str	r3, [sp, #4]
        adjustForBoundaries(newYPosition);
 8008e1c:	f7ff fe2a 	bl	8008a74 <_ZN13WheelSelector19adjustForBoundariesERi>
        int distanceToMove = newYPosition - textContainer.getY();
 8008e20:	9901      	ldr	r1, [sp, #4]
 8008e22:	f9b4 2062 	ldrsh.w	r2, [r4, #98]	; 0x62
 8008e26:	1a8a      	subs	r2, r1, r2
        int distanceToMoveABS = (distanceToMove > 0) ? distanceToMove : -distanceToMove;
 8008e28:	2a00      	cmp	r2, #0
        animateMoveText(calculateSnapPosition(newYPosition), duration, EasingEquations::backEaseOut);
 8008e2a:	4620      	mov	r0, r4
        int distanceToMoveABS = (distanceToMove > 0) ? distanceToMove : -distanceToMove;
 8008e2c:	bfb8      	it	lt
 8008e2e:	4252      	neglt	r2, r2
        int duration = distanceToMoveABS / 10;
 8008e30:	230a      	movs	r3, #10
 8008e32:	fbb2 f2f3 	udiv	r2, r2, r3
        animateMoveText(calculateSnapPosition(newYPosition), duration, EasingEquations::backEaseOut);
 8008e36:	f7ff fe00 	bl	8008a3a <_ZN13WheelSelector21calculateSnapPositionEi>
 8008e3a:	2a03      	cmp	r2, #3
 8008e3c:	4601      	mov	r1, r0
 8008e3e:	4b04      	ldr	r3, [pc, #16]	; (8008e50 <_ZN13WheelSelector18handleGestureEventERKN8touchgfx12GestureEventE+0x54>)
 8008e40:	bfb8      	it	lt
 8008e42:	2203      	movlt	r2, #3
 8008e44:	4620      	mov	r0, r4
 8008e46:	f7ff ff63 	bl	8008d10 <_ZN13WheelSelector15animateMoveTextEiiPFstsstE>
}
 8008e4a:	b002      	add	sp, #8
 8008e4c:	bd10      	pop	{r4, pc}
 8008e4e:	bf00      	nop
 8008e50:	08016041 	.word	0x08016041

08008e54 <_ZN13WheelSelector4snapEv>:
{
 8008e54:	b510      	push	{r4, lr}
    animateMoveText(calculateSnapPosition(textContainer.getY()), duration, EasingEquations::backEaseInOut);
 8008e56:	f9b0 1062 	ldrsh.w	r1, [r0, #98]	; 0x62
{
 8008e5a:	4604      	mov	r4, r0
    animateMoveText(calculateSnapPosition(textContainer.getY()), duration, EasingEquations::backEaseInOut);
 8008e5c:	f7ff fded 	bl	8008a3a <_ZN13WheelSelector21calculateSnapPositionEi>
 8008e60:	4b03      	ldr	r3, [pc, #12]	; (8008e70 <_ZN13WheelSelector4snapEv+0x1c>)
 8008e62:	4601      	mov	r1, r0
 8008e64:	2218      	movs	r2, #24
 8008e66:	4620      	mov	r0, r4
}
 8008e68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    animateMoveText(calculateSnapPosition(textContainer.getY()), duration, EasingEquations::backEaseInOut);
 8008e6c:	f7ff bf50 	b.w	8008d10 <_ZN13WheelSelector15animateMoveTextEiiPFstsstE>
 8008e70:	080160bd 	.word	0x080160bd

08008e74 <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE>:
    if (evt.getType() == ClickEvent::PRESSED)
 8008e74:	790b      	ldrb	r3, [r1, #4]
{
 8008e76:	b570      	push	{r4, r5, r6, lr}
 8008e78:	4604      	mov	r4, r0
 8008e7a:	460d      	mov	r5, r1
    if (evt.getType() == ClickEvent::PRESSED)
 8008e7c:	b9c3      	cbnz	r3, 8008eb0 <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0x3c>
        if (currentAnimationState != NO_ANIMATION)
 8008e7e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8008e82:	2b03      	cmp	r3, #3
 8008e84:	d006      	beq.n	8008e94 <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0x20>
            textContainer.cancelMoveAnimation();
 8008e86:	305c      	adds	r0, #92	; 0x5c
 8008e88:	f7ff fe2b 	bl	8008ae2 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE19cancelMoveAnimationEv>
            centerTextContainer.cancelMoveAnimation();
 8008e8c:	f604 40a4 	addw	r0, r4, #3236	; 0xca4
 8008e90:	f7ff fe27 	bl	8008ae2 <_ZN8touchgfx12MoveAnimatorINS_9ContainerEE19cancelMoveAnimationEv>
        xClick = evt.getX();
 8008e94:	f641 1348 	movw	r3, #6472	; 0x1948
 8008e98:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 8008e9c:	52e2      	strh	r2, [r4, r3]
        yClick = evt.getY();
 8008e9e:	f641 134a 	movw	r3, #6474	; 0x194a
 8008ea2:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 8008ea6:	52e2      	strh	r2, [r4, r3]
        currentAnimationState = NO_ANIMATION;
 8008ea8:	2303      	movs	r3, #3
 8008eaa:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
}
 8008eae:	bd70      	pop	{r4, r5, r6, pc}
    else if (evt.getType() == ClickEvent::RELEASED)
 8008eb0:	2b01      	cmp	r3, #1
 8008eb2:	d1fc      	bne.n	8008eae <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0x3a>
        if ((currentAnimationState == NO_ANIMATION) ||
 8008eb4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8008eb8:	2b03      	cmp	r3, #3
 8008eba:	d017      	beq.n	8008eec <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0x78>
 8008ebc:	2b02      	cmp	r3, #2
 8008ebe:	d1f6      	bne.n	8008eae <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0x3a>
                (currentAnimationState == ANIMATING_DRAG && abs(xClick - evt.getX()) < 10 && abs(yClick - evt.getY()) < 10))
 8008ec0:	f641 1348 	movw	r3, #6472	; 0x1948
 8008ec4:	f9b1 2006 	ldrsh.w	r2, [r1, #6]
 8008ec8:	5ec3      	ldrsh	r3, [r0, r3]
 8008eca:	1a9b      	subs	r3, r3, r2
 8008ecc:	2b00      	cmp	r3, #0
 8008ece:	bfb8      	it	lt
 8008ed0:	425b      	neglt	r3, r3
 8008ed2:	2b09      	cmp	r3, #9
 8008ed4:	dc2d      	bgt.n	8008f32 <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0xbe>
 8008ed6:	f641 134a 	movw	r3, #6474	; 0x194a
 8008eda:	f9b1 2008 	ldrsh.w	r2, [r1, #8]
 8008ede:	5ec3      	ldrsh	r3, [r0, r3]
 8008ee0:	1a9b      	subs	r3, r3, r2
 8008ee2:	2b00      	cmp	r3, #0
 8008ee4:	bfb8      	it	lt
 8008ee6:	425b      	neglt	r3, r3
 8008ee8:	2b09      	cmp	r3, #9
 8008eea:	dc22      	bgt.n	8008f32 <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0xbe>
            int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 8008eec:	f641 132c 	movw	r3, #6444	; 0x192c
 8008ef0:	f9b4 5036 	ldrsh.w	r5, [r4, #54]	; 0x36
 8008ef4:	58e3      	ldr	r3, [r4, r3]
            int newYPosition = calculateSnapPosition(textContainer.getY() - (yClick - centerTextCenter));
 8008ef6:	f9b4 1062 	ldrsh.w	r1, [r4, #98]	; 0x62
            int centerTextCenter = centerOverlay.getY() + textsHeight / 2;
 8008efa:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8008efe:	eb05 0563 	add.w	r5, r5, r3, asr #1
            int newYPosition = calculateSnapPosition(textContainer.getY() - (yClick - centerTextCenter));
 8008f02:	f641 134a 	movw	r3, #6474	; 0x194a
 8008f06:	4620      	mov	r0, r4
 8008f08:	5ee3      	ldrsh	r3, [r4, r3]
 8008f0a:	1b5b      	subs	r3, r3, r5
 8008f0c:	1ac9      	subs	r1, r1, r3
 8008f0e:	f7ff fd94 	bl	8008a3a <_ZN13WheelSelector21calculateSnapPositionEi>
 8008f12:	4601      	mov	r1, r0
            if (newYPosition + getTextContainerVisibleHeight() < centerTextCenter ||
 8008f14:	4620      	mov	r0, r4
 8008f16:	f7ff fda0 	bl	8008a5a <_ZN13WheelSelector29getTextContainerVisibleHeightEv>
 8008f1a:	4408      	add	r0, r1
 8008f1c:	4285      	cmp	r5, r0
 8008f1e:	dcc6      	bgt.n	8008eae <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0x3a>
 8008f20:	428d      	cmp	r5, r1
 8008f22:	dbc4      	blt.n	8008eae <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0x3a>
                animateMoveText(newYPosition, duration, EasingEquations::backEaseOut);
 8008f24:	4620      	mov	r0, r4
 8008f26:	4b05      	ldr	r3, [pc, #20]	; (8008f3c <_ZN13WheelSelector16handleClickEventERKN8touchgfx10ClickEventE+0xc8>)
}
 8008f28:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                animateMoveText(newYPosition, duration, EasingEquations::backEaseOut);
 8008f2c:	221a      	movs	r2, #26
 8008f2e:	f7ff beef 	b.w	8008d10 <_ZN13WheelSelector15animateMoveTextEiiPFstsstE>
            snap();
 8008f32:	4620      	mov	r0, r4
}
 8008f34:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            snap();
 8008f38:	f7ff bf8c 	b.w	8008e54 <_ZN13WheelSelector4snapEv>
 8008f3c:	08016041 	.word	0x08016041

08008f40 <gmtime>:
#include "time.h"

extern struct tm __tm_store;

struct tm * gmtime(const time_p * timeptr)
{
 8008f40:	b510      	push	{r4, lr}
	gmtime_r(timeptr, &__tm_store);
 8008f42:	4c03      	ldr	r4, [pc, #12]	; (8008f50 <gmtime+0x10>)
 8008f44:	4621      	mov	r1, r4
 8008f46:	f000 f805 	bl	8008f54 <gmtime_r>
	return &__tm_store;
}
 8008f4a:	4620      	mov	r0, r4
 8008f4c:	bd10      	pop	{r4, pc}
 8008f4e:	bf00      	nop
 8008f50:	20020f84 	.word	0x20020f84

08008f54 <gmtime_r>:
    ldiv_t          lresult;
    div_t           result;
    uint16_t        days, n, leapyear, years;

    time_p timer1 = *timer;
    if(timer1 < UNIX_OFFSET){
 8008f54:	4b48      	ldr	r3, [pc, #288]	; (8009078 <gmtime_r+0x124>)
    time_p timer1 = *timer;
 8008f56:	6802      	ldr	r2, [r0, #0]
{
 8008f58:	b530      	push	{r4, r5, lr}
    if(timer1 < UNIX_OFFSET){
 8008f5a:	429a      	cmp	r2, r3
    	timer1 = UNIX_OFFSET;
    }
    else{
    	timer1 = timer1 - UNIX_OFFSET;
 8008f5c:	bf8c      	ite	hi
 8008f5e:	4b47      	ldrhi	r3, [pc, #284]	; (800907c <gmtime_r+0x128>)
    	timer1 = UNIX_OFFSET;
 8008f60:	4b47      	ldrls	r3, [pc, #284]	; (8009080 <gmtime_r+0x12c>)
{
 8008f62:	460d      	mov	r5, r1
    }
    /* break down timer into whole and fractional parts of 1 day */
    days = timer1 / 86400UL;
 8008f64:	4947      	ldr	r1, [pc, #284]	; (8009084 <gmtime_r+0x130>)
{
 8008f66:	b085      	sub	sp, #20
    	timer1 = timer1 - UNIX_OFFSET;
 8008f68:	bf88      	it	hi
 8008f6a:	189b      	addhi	r3, r3, r2
    fract = timer1 % 86400UL;

    /*
            Extract hour, minute, and second from the fractional day
        */
    lresult = ldiv(fract, 60L);
 8008f6c:	4668      	mov	r0, sp
    days = timer1 / 86400UL;
 8008f6e:	fbb3 f4f1 	udiv	r4, r3, r1
    lresult = ldiv(fract, 60L);
 8008f72:	223c      	movs	r2, #60	; 0x3c
 8008f74:	fb01 3114 	mls	r1, r1, r4, r3
 8008f78:	f01b fccc 	bl	8024914 <ldiv>
    timeptr->tm_sec = lresult.rem;
 8008f7c:	9b01      	ldr	r3, [sp, #4]
    result = div(lresult.quot, 60);
 8008f7e:	9900      	ldr	r1, [sp, #0]
    timeptr->tm_sec = lresult.rem;
 8008f80:	702b      	strb	r3, [r5, #0]
    result = div(lresult.quot, 60);
 8008f82:	223c      	movs	r2, #60	; 0x3c
 8008f84:	a802      	add	r0, sp, #8
 8008f86:	f01b fa89 	bl	802449c <div>
    timeptr->tm_min = result.rem;
 8008f8a:	9b03      	ldr	r3, [sp, #12]
 8008f8c:	706b      	strb	r3, [r5, #1]
    timeptr->tm_hour = result.quot;
 8008f8e:	9b02      	ldr	r3, [sp, #8]
 8008f90:	70ab      	strb	r3, [r5, #2]

    /* Determine day of week ( the epoch was a Saturday ) */
    n = days + SATURDAY;
 8008f92:	1da3      	adds	r3, r4, #6
 8008f94:	b29b      	uxth	r3, r3
    n %= 7;
 8008f96:	2207      	movs	r2, #7
 8008f98:	fbb3 f2f2 	udiv	r2, r3, r2
 8008f9c:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
 8008fa0:	1a9b      	subs	r3, r3, r2
    timeptr->tm_wday = n;
 8008fa2:	712b      	strb	r3, [r5, #4]
        * Using this property, we can easily 'map' the time stamp into the leap cycles, quickly
        * deriving the year and day of year, along with the fact of whether it is a leap year.
        */

    /* map into a 100 year cycle */
    lresult = ldiv((long) days, 36525L);
 8008fa4:	4621      	mov	r1, r4
 8008fa6:	f648 62ad 	movw	r2, #36525	; 0x8ead
 8008faa:	4668      	mov	r0, sp
 8008fac:	f01b fcb2 	bl	8024914 <ldiv>
    years = 100 * lresult.quot;
 8008fb0:	9c00      	ldr	r4, [sp, #0]

    /* map into a 4 year cycle */
    lresult = ldiv(lresult.rem, 1461L);
 8008fb2:	9901      	ldr	r1, [sp, #4]
    years = 100 * lresult.quot;
 8008fb4:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 8008fb8:	eb04 0484 	add.w	r4, r4, r4, lsl #2
    lresult = ldiv(lresult.rem, 1461L);
 8008fbc:	f240 52b5 	movw	r2, #1461	; 0x5b5
 8008fc0:	4668      	mov	r0, sp
 8008fc2:	f01b fca7 	bl	8024914 <ldiv>
    years = 100 * lresult.quot;
 8008fc6:	00a4      	lsls	r4, r4, #2
    years += 4 * lresult.quot;
 8008fc8:	9b00      	ldr	r3, [sp, #0]
    days = lresult.rem;
 8008fca:	f8bd 1004 	ldrh.w	r1, [sp, #4]
    years = 100 * lresult.quot;
 8008fce:	b2a4      	uxth	r4, r4
    years += 4 * lresult.quot;
 8008fd0:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 8008fd4:	b2a4      	uxth	r4, r4
    if (years > 100)
 8008fd6:	2c64      	cmp	r4, #100	; 0x64
 8008fd8:	d92b      	bls.n	8009032 <gmtime_r+0xde>
        days++;
 8008fda:	3101      	adds	r1, #1
 8008fdc:	b289      	uxth	r1, r1

    /*
         * 'years' is now at the first year of a 4 year leap cycle, which will always be a leap year,
         * unless it is 100. 'days' is now an index into that cycle.
         */
    leapyear = 1;
 8008fde:	2301      	movs	r3, #1
    if (years == 100)
        leapyear = 0;

    /* compute length, in days, of first year of this cycle */
    n = 364 + leapyear;
 8008fe0:	2b00      	cmp	r3, #0
 8008fe2:	f240 126d 	movw	r2, #365	; 0x16d

    /*
     * if the number of days remaining is greater than the length of the
     * first year, we make one more division.
     */
    if (days > n) {
 8008fe6:	bf14      	ite	ne
 8008fe8:	4610      	movne	r0, r2
 8008fea:	f44f 70b6 	moveq.w	r0, #364	; 0x16c
 8008fee:	4288      	cmp	r0, r1
 8008ff0:	d20a      	bcs.n	8009008 <gmtime_r+0xb4>
        days -= leapyear;
 8008ff2:	1ac9      	subs	r1, r1, r3
        leapyear = 0;
        result = div(days, 365);
 8008ff4:	b289      	uxth	r1, r1
 8008ff6:	a802      	add	r0, sp, #8
 8008ff8:	f01b fa50 	bl	802449c <div>
        years += result.quot;
 8008ffc:	9b02      	ldr	r3, [sp, #8]
        days = result.rem;
 8008ffe:	f8bd 100c 	ldrh.w	r1, [sp, #12]
        years += result.quot;
 8009002:	441c      	add	r4, r3
 8009004:	b2a4      	uxth	r4, r4
        leapyear = 0;
 8009006:	2300      	movs	r3, #0
    /*
            Given the year, day of year, and leap year indicator, we can break down the
            month and day of month. If the day of year is less than 59 (or 60 if a leap year), then
            we handle the Jan/Feb month pair as an exception.
        */
    n = 59 + leapyear;
 8009008:	333b      	adds	r3, #59	; 0x3b
    timeptr->tm_year = 100 + years;
 800900a:	3464      	adds	r4, #100	; 0x64
    if (days < n) {
 800900c:	4299      	cmp	r1, r3
    timeptr->tm_year = 100 + years;
 800900e:	80ec      	strh	r4, [r5, #6]
    timeptr->tm_yday = days;
 8009010:	8129      	strh	r1, [r5, #8]
    if (days < n) {
 8009012:	d212      	bcs.n	800903a <gmtime_r+0xe6>
        /* special case: Jan/Feb month pair */
        result = div(days, 31);
 8009014:	221f      	movs	r2, #31
 8009016:	a802      	add	r0, sp, #8
 8009018:	f01b fa40 	bl	802449c <div>
        timeptr->tm_mon = result.quot;
 800901c:	9b02      	ldr	r3, [sp, #8]
        result = div(result.rem, 61);
        timeptr->tm_mon += result.quot * 2;

        /* map into a month */
        result = div(result.rem, 31);
        timeptr->tm_mon += result.quot;
 800901e:	716b      	strb	r3, [r5, #5]
        timeptr->tm_mday = result.rem;
 8009020:	9b03      	ldr	r3, [sp, #12]
 8009022:	70eb      	strb	r3, [r5, #3]
    }

    /*
            Cleanup and return
        */
    timeptr->tm_isdst = 0;  /* gmt is never in DST */
 8009024:	2300      	movs	r3, #0
 8009026:	816b      	strh	r3, [r5, #10]
    timeptr->tm_mday++; /* tm_mday is 1 based */
 8009028:	78eb      	ldrb	r3, [r5, #3]
 800902a:	3301      	adds	r3, #1
 800902c:	70eb      	strb	r3, [r5, #3]

}
 800902e:	b005      	add	sp, #20
 8009030:	bd30      	pop	{r4, r5, pc}
        leapyear = 0;
 8009032:	bf14      	ite	ne
 8009034:	2301      	movne	r3, #1
 8009036:	2300      	moveq	r3, #0
 8009038:	e7d2      	b.n	8008fe0 <gmtime_r+0x8c>
        days -= n;
 800903a:	1ac9      	subs	r1, r1, r3
        result = div(days, 153);
 800903c:	2299      	movs	r2, #153	; 0x99
 800903e:	b289      	uxth	r1, r1
 8009040:	a802      	add	r0, sp, #8
 8009042:	f01b fa2b 	bl	802449c <div>
        timeptr->tm_mon = 2 + result.quot * 5;
 8009046:	9b02      	ldr	r3, [sp, #8]
        result = div(result.rem, 61);
 8009048:	9903      	ldr	r1, [sp, #12]
        timeptr->tm_mon = 2 + result.quot * 5;
 800904a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800904e:	3302      	adds	r3, #2
 8009050:	716b      	strb	r3, [r5, #5]
        result = div(result.rem, 61);
 8009052:	223d      	movs	r2, #61	; 0x3d
 8009054:	a802      	add	r0, sp, #8
 8009056:	f01b fa21 	bl	802449c <div>
        timeptr->tm_mon += result.quot * 2;
 800905a:	796b      	ldrb	r3, [r5, #5]
 800905c:	9a02      	ldr	r2, [sp, #8]
        result = div(result.rem, 31);
 800905e:	9903      	ldr	r1, [sp, #12]
        timeptr->tm_mon += result.quot * 2;
 8009060:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8009064:	716b      	strb	r3, [r5, #5]
        result = div(result.rem, 31);
 8009066:	221f      	movs	r2, #31
 8009068:	a802      	add	r0, sp, #8
 800906a:	f01b fa17 	bl	802449c <div>
        timeptr->tm_mon += result.quot;
 800906e:	796b      	ldrb	r3, [r5, #5]
 8009070:	9a02      	ldr	r2, [sp, #8]
 8009072:	4413      	add	r3, r2
 8009074:	e7d3      	b.n	800901e <gmtime_r+0xca>
 8009076:	bf00      	nop
 8009078:	386d437f 	.word	0x386d437f
 800907c:	c792bc80 	.word	0xc792bc80
 8009080:	386d4380 	.word	0x386d4380
 8009084:	00015180 	.word	0x00015180

08009088 <mk_gmtime>:

#include "time.h"

time_p
mk_gmtime(const struct tm * timeptr)
{
 8009088:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

    /*
        Determine elapsed whole days since the epoch to the beginning of this year. Since our epoch is
        at a conjunction of the leap cycles, we can do this rather quickly.
        */
    n = timeptr->tm_year - 100;
 800908a:	88c7      	ldrh	r7, [r0, #6]
 800908c:	f1a7 0364 	sub.w	r3, r7, #100	; 0x64
 8009090:	b21b      	sxth	r3, r3
{
 8009092:	4605      	mov	r5, r0
    leaps = 0;
    if (n) {
 8009094:	b1cb      	cbz	r3, 80090ca <mk_gmtime+0x42>
        m = n - 1;
 8009096:	f1a7 0465 	sub.w	r4, r7, #101	; 0x65
 800909a:	b224      	sxth	r4, r4
        leaps = m / 4;
 800909c:	2c00      	cmp	r4, #0
 800909e:	4621      	mov	r1, r4
 80090a0:	bfb8      	it	lt
 80090a2:	1ce1      	addlt	r1, r4, #3
 80090a4:	108a      	asrs	r2, r1, #2
        leaps -= m / (100);
        leaps++;
 80090a6:	3201      	adds	r2, #1
        leaps -= m / (100);
 80090a8:	2664      	movs	r6, #100	; 0x64
 80090aa:	fb94 f4f6 	sdiv	r4, r4, r6
        leaps++;
 80090ae:	1b12      	subs	r2, r2, r4
 80090b0:	b212      	sxth	r2, r2
    }
    tmp = 365UL * n + leaps;
 80090b2:	f240 166d 	movw	r6, #365	; 0x16d
 80090b6:	fb13 2606 	smlabb	r6, r3, r6, r2
                account for a 'phase change' between July and August (153 days after March 1).
            */
    d = timeptr->tm_mday - 1;   /* tm_mday is one based */

    /* handle Jan/Feb as a special case */
    if (timeptr->tm_mon < 2) {
 80090ba:	796b      	ldrb	r3, [r5, #5]
    d = timeptr->tm_mday - 1;   /* tm_mday is one based */
 80090bc:	78ec      	ldrb	r4, [r5, #3]
    if (timeptr->tm_mon < 2) {
 80090be:	2b01      	cmp	r3, #1
 80090c0:	d818      	bhi.n	80090f4 <mk_gmtime+0x6c>
        if (timeptr->tm_mon)
 80090c2:	b923      	cbnz	r3, 80090ce <mk_gmtime+0x46>
    d = timeptr->tm_mday - 1;   /* tm_mday is one based */
 80090c4:	1e63      	subs	r3, r4, #1
        /*
         * if n is odd, we are in the second half of the
         * month pair
         */
        if (n & 1)
            d += 31;
 80090c6:	b21b      	sxth	r3, r3
 80090c8:	e003      	b.n	80090d2 <mk_gmtime+0x4a>
    leaps = 0;
 80090ca:	461a      	mov	r2, r3
 80090cc:	e7f1      	b.n	80090b2 <mk_gmtime+0x2a>
            d += 31;
 80090ce:	f104 031e 	add.w	r3, r4, #30

    /* compute 'fractional' day */
    tmp = timeptr->tm_hour;
    tmp *= ONE_HOUR;
    tmp += timeptr->tm_min * 60UL;
    tmp += timeptr->tm_sec;
 80090d2:	782c      	ldrb	r4, [r5, #0]

    ret += tmp;

    return ret + UNIX_OFFSET;
 80090d4:	4a1b      	ldr	r2, [pc, #108]	; (8009144 <mk_gmtime+0xbc>)
    tmp = timeptr->tm_hour;
 80090d6:	78a8      	ldrb	r0, [r5, #2]
    return ret + UNIX_OFFSET;
 80090d8:	7869      	ldrb	r1, [r5, #1]
 80090da:	4422      	add	r2, r4
 80090dc:	f44f 6461 	mov.w	r4, #3600	; 0xe10
 80090e0:	fb04 2000 	mla	r0, r4, r0, r2
 80090e4:	223c      	movs	r2, #60	; 0x3c
 80090e6:	fb12 0201 	smlabb	r2, r2, r1, r0
}
 80090ea:	4817      	ldr	r0, [pc, #92]	; (8009148 <mk_gmtime+0xc0>)
    tmp += d;
 80090ec:	4433      	add	r3, r6
}
 80090ee:	fb00 2003 	mla	r0, r0, r3, r2
 80090f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        n = 59 + is_leap_year(timeptr->tm_year + 1900);
 80090f4:	f207 706c 	addw	r0, r7, #1900	; 0x76c
 80090f8:	b280      	uxth	r0, r0
 80090fa:	f006 f979 	bl	800f3f0 <is_leap_year>
        d += n;
 80090fe:	f104 033a 	add.w	r3, r4, #58	; 0x3a
 8009102:	181c      	adds	r4, r3, r0
        n = timeptr->tm_mon - MARCH;
 8009104:	796b      	ldrb	r3, [r5, #5]
 8009106:	3b02      	subs	r3, #2
        if (n > (JULY - MARCH))
 8009108:	2b04      	cmp	r3, #4
        n = timeptr->tm_mon - MARCH;
 800910a:	b21a      	sxth	r2, r3
        n %= 5;
 800910c:	f04f 0305 	mov.w	r3, #5
 8009110:	fb92 f3f3 	sdiv	r3, r2, r3
 8009114:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8009118:	eba2 0203 	sub.w	r2, r2, r3
        m = n / 2;
 800911c:	eb02 73d2 	add.w	r3, r2, r2, lsr #31
        d += n;
 8009120:	b2a4      	uxth	r4, r4
        m = n / 2;
 8009122:	ea4f 0363 	mov.w	r3, r3, asr #1
            d += 153;
 8009126:	bfc8      	it	gt
 8009128:	3499      	addgt	r4, #153	; 0x99
        m *= 61;
 800912a:	ebc3 1103 	rsb	r1, r3, r3, lsl #4
            d += 153;
 800912e:	bfc8      	it	gt
 8009130:	b2a4      	uxthgt	r4, r4
        m *= 61;
 8009132:	eb03 0381 	add.w	r3, r3, r1, lsl #2
        d += m;
 8009136:	4423      	add	r3, r4
 8009138:	b29b      	uxth	r3, r3
        if (n & 1)
 800913a:	07d2      	lsls	r2, r2, #31
            d += 31;
 800913c:	bf48      	it	mi
 800913e:	331f      	addmi	r3, #31
 8009140:	e7c1      	b.n	80090c6 <mk_gmtime+0x3e>
 8009142:	bf00      	nop
 8009144:	386d4380 	.word	0x386d4380
 8009148:	00015180 	.word	0x00015180

0800914c <mktime>:

extern int16_t      (*__dst_ptr) (const time_p *, int32_t *);

time_p
mktime(struct tm * timeptr)
{
 800914c:	b513      	push	{r0, r1, r4, lr}
 800914e:	4604      	mov	r4, r0
	time_p          ret;

	ret = mk_gmtime(timeptr);
 8009150:	f7ff ff9a 	bl	8009088 <mk_gmtime>

	if (timeptr->tm_isdst < 0) {
 8009154:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
	ret = mk_gmtime(timeptr);
 8009158:	9001      	str	r0, [sp, #4]
	if (timeptr->tm_isdst < 0) {
 800915a:	2b00      	cmp	r3, #0
 800915c:	da06      	bge.n	800916c <mktime+0x20>
		if (__dst_ptr)
 800915e:	4b0d      	ldr	r3, [pc, #52]	; (8009194 <mktime+0x48>)
 8009160:	681b      	ldr	r3, [r3, #0]
 8009162:	b11b      	cbz	r3, 800916c <mktime+0x20>
			timeptr->tm_isdst = __dst_ptr(&ret, &__utc_offset);
 8009164:	490c      	ldr	r1, [pc, #48]	; (8009198 <mktime+0x4c>)
 8009166:	a801      	add	r0, sp, #4
 8009168:	4798      	blx	r3
 800916a:	8160      	strh	r0, [r4, #10]
	}
	if (timeptr->tm_isdst > 0)
 800916c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8009170:	2a00      	cmp	r2, #0
		ret -= timeptr->tm_isdst;
 8009172:	bfc2      	ittt	gt
 8009174:	9b01      	ldrgt	r3, [sp, #4]
 8009176:	1a9b      	subgt	r3, r3, r2
 8009178:	9301      	strgt	r3, [sp, #4]

	ret -= __utc_offset;
 800917a:	4b07      	ldr	r3, [pc, #28]	; (8009198 <mktime+0x4c>)
 800917c:	681a      	ldr	r2, [r3, #0]
 800917e:	9b01      	ldr	r3, [sp, #4]

	localtime_r(&ret, timeptr);
 8009180:	a801      	add	r0, sp, #4
	ret -= __utc_offset;
 8009182:	1a9b      	subs	r3, r3, r2
	localtime_r(&ret, timeptr);
 8009184:	4621      	mov	r1, r4
	ret -= __utc_offset;
 8009186:	9301      	str	r3, [sp, #4]
	localtime_r(&ret, timeptr);
 8009188:	f01b face 	bl	8024728 <localtime_r>

	return ret;
}
 800918c:	9801      	ldr	r0, [sp, #4]
 800918e:	b002      	add	sp, #8
 8009190:	bd10      	pop	{r4, pc}
 8009192:	bf00      	nop
 8009194:	20020f80 	.word	0x20020f80
 8009198:	20020f90 	.word	0x20020f90

0800919c <ft6x06_Reset>:
  */
void ft6x06_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT6206 IC */
}
 800919c:	4770      	bx	lr

0800919e <ft6x06_TS_ITStatus>:
  */
uint8_t ft6x06_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT6206 */
  return 0;
}
 800919e:	2000      	movs	r0, #0
 80091a0:	4770      	bx	lr

080091a2 <ft6x06_ReadID>:
{
 80091a2:	b510      	push	{r4, lr}
 80091a4:	4604      	mov	r4, r0
  TS_IO_Init();
 80091a6:	f000 fb7d 	bl	80098a4 <TS_IO_Init>
  return (TS_IO_Read(DeviceAddr, FT6206_CHIP_ID_REG));
 80091aa:	21a8      	movs	r1, #168	; 0xa8
 80091ac:	b2e0      	uxtb	r0, r4
 80091ae:	f000 fb93 	bl	80098d8 <TS_IO_Read>
}
 80091b2:	b280      	uxth	r0, r0
 80091b4:	bd10      	pop	{r4, pc}
	...

080091b8 <ft6x06_TS_DetectTouch>:
{
 80091b8:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 80091ba:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 80091bc:	2102      	movs	r1, #2
 80091be:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 80091c0:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 80091c4:	f000 fb88 	bl	80098d8 <TS_IO_Read>
 80091c8:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT6206_TD_STAT_MASK;
 80091cc:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80091d0:	f003 030f 	and.w	r3, r3, #15
 80091d4:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT6206_MAX_DETECTABLE_TOUCH)
 80091d8:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80091dc:	2b02      	cmp	r3, #2
    nbTouch = 0;
 80091de:	bf88      	it	hi
 80091e0:	f88d 4007 	strbhi.w	r4, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 80091e4:	4b04      	ldr	r3, [pc, #16]	; (80091f8 <ft6x06_TS_DetectTouch+0x40>)
 80091e6:	f89d 2007 	ldrb.w	r2, [sp, #7]
  return(nbTouch);
 80091ea:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 80091ee:	705a      	strb	r2, [r3, #1]
  ft6x06_handle.currActiveTouchIdx = 0;
 80091f0:	2200      	movs	r2, #0
 80091f2:	709a      	strb	r2, [r3, #2]
}
 80091f4:	b002      	add	sp, #8
 80091f6:	bd10      	pop	{r4, pc}
 80091f8:	2000fb1a 	.word	0x2000fb1a

080091fc <ft6x06_TS_GetXY>:
{
 80091fc:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 80091fe:	4c15      	ldr	r4, [pc, #84]	; (8009254 <ft6x06_TS_GetXY+0x58>)
{
 8009200:	4615      	mov	r5, r2
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8009202:	78a3      	ldrb	r3, [r4, #2]
 8009204:	7862      	ldrb	r2, [r4, #1]
 8009206:	429a      	cmp	r2, r3
{
 8009208:	460e      	mov	r6, r1
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 800920a:	d91f      	bls.n	800924c <ft6x06_TS_GetXY+0x50>
    switch(ft6x06_handle.currActiveTouchIdx)
 800920c:	b303      	cbz	r3, 8009250 <ft6x06_TS_GetXY+0x54>
      regAddress = FT6206_P2_XH_REG; 
 800920e:	2b01      	cmp	r3, #1
 8009210:	bf14      	ite	ne
 8009212:	2100      	movne	r1, #0
 8009214:	2109      	moveq	r1, #9
    TS_IO_ReadMultiple(DeviceAddr, regAddress, dataxy, sizeof(dataxy)); 
 8009216:	2304      	movs	r3, #4
 8009218:	eb0d 0203 	add.w	r2, sp, r3
 800921c:	b2c0      	uxtb	r0, r0
 800921e:	f000 fb77 	bl	8009910 <TS_IO_ReadMultiple>
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 8009222:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8009226:	f89d 2005 	ldrb.w	r2, [sp, #5]
 800922a:	021b      	lsls	r3, r3, #8
 800922c:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8009230:	4313      	orrs	r3, r2
 8009232:	8033      	strh	r3, [r6, #0]
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 8009234:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8009238:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800923c:	021b      	lsls	r3, r3, #8
 800923e:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8009242:	4313      	orrs	r3, r2
 8009244:	802b      	strh	r3, [r5, #0]
    ft6x06_handle.currActiveTouchIdx++;
 8009246:	78a3      	ldrb	r3, [r4, #2]
 8009248:	3301      	adds	r3, #1
 800924a:	70a3      	strb	r3, [r4, #2]
}
 800924c:	b002      	add	sp, #8
 800924e:	bd70      	pop	{r4, r5, r6, pc}
    switch(ft6x06_handle.currActiveTouchIdx)
 8009250:	2103      	movs	r1, #3
 8009252:	e7e0      	b.n	8009216 <ft6x06_TS_GetXY+0x1a>
 8009254:	2000fb1a 	.word	0x2000fb1a

08009258 <ft6x06_TS_EnableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8009258:	2201      	movs	r2, #1
 800925a:	21a4      	movs	r1, #164	; 0xa4
 800925c:	b2c0      	uxtb	r0, r0
 800925e:	f000 bb23 	b.w	80098a8 <TS_IO_Write>

08009262 <ft6x06_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8009262:	2200      	movs	r2, #0
 8009264:	21a4      	movs	r1, #164	; 0xa4
 8009266:	b2c0      	uxtb	r0, r0
 8009268:	f000 bb1e 	b.w	80098a8 <TS_IO_Write>

0800926c <ft6x06_TS_Start>:
  ft6x06_TS_DisableIT(DeviceAddr);
 800926c:	f7ff bff9 	b.w	8009262 <ft6x06_TS_DisableIT>

08009270 <ft6x06_TS_ClearIT>:
 8009270:	4770      	bx	lr
	...

08009274 <ft6x06_Init>:
{  
 8009274:	b410      	push	{r4}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
  {
    if(ft6x06[idx] == DeviceAddr)
 8009276:	4b09      	ldr	r3, [pc, #36]	; (800929c <ft6x06_Init+0x28>)
 8009278:	781a      	ldrb	r2, [r3, #0]
 800927a:	4290      	cmp	r0, r2
 800927c:	d00a      	beq.n	8009294 <ft6x06_Init+0x20>
 800927e:	7859      	ldrb	r1, [r3, #1]
 8009280:	4288      	cmp	r0, r1
 8009282:	d007      	beq.n	8009294 <ft6x06_Init+0x20>
 8009284:	b10a      	cbz	r2, 800928a <ft6x06_Init+0x16>
 8009286:	b929      	cbnz	r1, 8009294 <ft6x06_Init+0x20>
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 8009288:	2201      	movs	r2, #1
      ft6x06[empty] = DeviceAddr;
 800928a:	5498      	strb	r0, [r3, r2]
}
 800928c:	f85d 4b04 	ldr.w	r4, [sp], #4
      TS_IO_Init(); 
 8009290:	f000 bb08 	b.w	80098a4 <TS_IO_Init>
}
 8009294:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009298:	4770      	bx	lr
 800929a:	bf00      	nop
 800929c:	2000fb18 	.word	0x2000fb18

080092a0 <OTM8009A_Init>:
  * @param  hdsi_eval : pointer on DSI configuration structure
  * @param  hdsivideo_handle : pointer on DSI video mode configuration structure
  * @retval Status
  */
uint8_t OTM8009A_Init(uint32_t ColorCoding, uint32_t orientation)
{
 80092a0:	b538      	push	{r3, r4, r5, lr}
 80092a2:	4604      	mov	r4, r0
 80092a4:	460d      	mov	r5, r1
  /* Enable CMD2 to access vendor specific commands                               */
  /* Enter in command 2 mode and set EXTC to enable address shift function (0x00) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 80092a6:	2000      	movs	r0, #0
 80092a8:	49cb      	ldr	r1, [pc, #812]	; (80095d8 <OTM8009A_Init+0x338>)
 80092aa:	f7f7 fbdd 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData1);
 80092ae:	49cb      	ldr	r1, [pc, #812]	; (80095dc <OTM8009A_Init+0x33c>)
 80092b0:	2003      	movs	r0, #3
 80092b2:	f7f7 fbd9 	bl	8000a68 <DSI_IO_WriteCmd>

  /* Enter ORISE Command 2 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2); /* Shift address to 0x80 */
 80092b6:	49ca      	ldr	r1, [pc, #808]	; (80095e0 <OTM8009A_Init+0x340>)
 80092b8:	2000      	movs	r0, #0
 80092ba:	f7f7 fbd5 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData2);
 80092be:	49c9      	ldr	r1, [pc, #804]	; (80095e4 <OTM8009A_Init+0x344>)
 80092c0:	2002      	movs	r0, #2
 80092c2:	f7f7 fbd1 	bl	8000a68 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////
  /* SD_PCH_CTRL - 0xC480h - 129th parameter - Default 0x00          */
  /* Set SD_PT                                                       */
  /* -> Source output level during porch and non-display area to GND */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 80092c6:	49c6      	ldr	r1, [pc, #792]	; (80095e0 <OTM8009A_Init+0x340>)
 80092c8:	2000      	movs	r0, #0
 80092ca:	f7f7 fbcd 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData3);
 80092ce:	49c6      	ldr	r1, [pc, #792]	; (80095e8 <OTM8009A_Init+0x348>)
 80092d0:	2000      	movs	r0, #0
 80092d2:	f7f7 fbc9 	bl	8000a68 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 80092d6:	200a      	movs	r0, #10
 80092d8:	f000 fb30 	bl	800993c <OTM8009A_IO_Delay>
  /* Not documented */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData4);
 80092dc:	49c3      	ldr	r1, [pc, #780]	; (80095ec <OTM8009A_Init+0x34c>)
 80092de:	2000      	movs	r0, #0
 80092e0:	f7f7 fbc2 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData5);
 80092e4:	49c2      	ldr	r1, [pc, #776]	; (80095f0 <OTM8009A_Init+0x350>)
 80092e6:	2000      	movs	r0, #0
 80092e8:	f7f7 fbbe 	bl	8000a68 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 80092ec:	200a      	movs	r0, #10
 80092ee:	f000 fb25 	bl	800993c <OTM8009A_IO_Delay>
  /////////////////////////////////////////////////////////////////////

  /* PWR_CTRL4 - 0xC4B0h - 178th parameter - Default 0xA8 */
  /* Set gvdd_en_test                                     */
  /* -> enable GVDD test mode !!!                         */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData6);
 80092f2:	49c0      	ldr	r1, [pc, #768]	; (80095f4 <OTM8009A_Init+0x354>)
 80092f4:	2000      	movs	r0, #0
 80092f6:	f7f7 fbb7 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData7);
 80092fa:	49bf      	ldr	r1, [pc, #764]	; (80095f8 <OTM8009A_Init+0x358>)
 80092fc:	2000      	movs	r0, #0
 80092fe:	f7f7 fbb3 	bl	8000a68 <DSI_IO_WriteCmd>
  /* PWR_CTRL2 - 0xC590h - 146th parameter - Default 0x79      */
  /* Set pump 4 vgh voltage                                    */
  /* -> from 15.0v down to 13.0v                               */
  /* Set pump 5 vgh voltage                                    */
  /* -> from -12.0v downto -9.0v                               */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData8);
 8009302:	49be      	ldr	r1, [pc, #760]	; (80095fc <OTM8009A_Init+0x35c>)
 8009304:	2000      	movs	r0, #0
 8009306:	f7f7 fbaf 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 800930a:	49bd      	ldr	r1, [pc, #756]	; (8009600 <OTM8009A_Init+0x360>)
 800930c:	2000      	movs	r0, #0
 800930e:	f7f7 fbab 	bl	8000a68 <DSI_IO_WriteCmd>

  /* P_DRV_M - 0xC0B4h - 181th parameter - Default 0x00 */
  /* -> Column inversion                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData10);
 8009312:	49bc      	ldr	r1, [pc, #752]	; (8009604 <OTM8009A_Init+0x364>)
 8009314:	2000      	movs	r0, #0
 8009316:	f7f7 fba7 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData11);
 800931a:	49bb      	ldr	r1, [pc, #748]	; (8009608 <OTM8009A_Init+0x368>)
 800931c:	2000      	movs	r0, #0
 800931e:	f7f7 fba3 	bl	8000a68 <DSI_IO_WriteCmd>

  /* VCOMDC - 0xD900h - 1st parameter - Default 0x39h */
  /* VCOM Voltage settings                            */
  /* -> from -1.0000v downto -1.2625v                 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8009322:	49ad      	ldr	r1, [pc, #692]	; (80095d8 <OTM8009A_Init+0x338>)
 8009324:	2000      	movs	r0, #0
 8009326:	f7f7 fb9f 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData12);
 800932a:	49b8      	ldr	r1, [pc, #736]	; (800960c <OTM8009A_Init+0x36c>)
 800932c:	2000      	movs	r0, #0
 800932e:	f7f7 fb9b 	bl	8000a68 <DSI_IO_WriteCmd>

  /* Oscillator adjustment for Idle/Normal mode (LPDT only) set to 65Hz (default is 60Hz) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8009332:	49b7      	ldr	r1, [pc, #732]	; (8009610 <OTM8009A_Init+0x370>)
 8009334:	2000      	movs	r0, #0
 8009336:	f7f7 fb97 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData14);
 800933a:	49b6      	ldr	r1, [pc, #728]	; (8009614 <OTM8009A_Init+0x374>)
 800933c:	2000      	movs	r0, #0
 800933e:	f7f7 fb93 	bl	8000a68 <DSI_IO_WriteCmd>

  /* Video mode internal */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 8009342:	49b5      	ldr	r1, [pc, #724]	; (8009618 <OTM8009A_Init+0x378>)
 8009344:	2000      	movs	r0, #0
 8009346:	f7f7 fb8f 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData16);
 800934a:	49b4      	ldr	r1, [pc, #720]	; (800961c <OTM8009A_Init+0x37c>)
 800934c:	2000      	movs	r0, #0
 800934e:	f7f7 fb8b 	bl	8000a68 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 147h parameter - Default 0x00 */
  /* Set pump 4&5 x6                                     */
  /* -> ONLY VALID when PUMP4_EN_ASDM_HV = "0"           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData17);
 8009352:	49b3      	ldr	r1, [pc, #716]	; (8009620 <OTM8009A_Init+0x380>)
 8009354:	2000      	movs	r0, #0
 8009356:	f7f7 fb87 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData18);
 800935a:	49b2      	ldr	r1, [pc, #712]	; (8009624 <OTM8009A_Init+0x384>)
 800935c:	2000      	movs	r0, #0
 800935e:	f7f7 fb83 	bl	8000a68 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 150th parameter - Default 0x33h */
  /* Change pump4 clock ratio                              */
  /* -> from 1 line to 1/2 line                            */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData19);
 8009362:	49b1      	ldr	r1, [pc, #708]	; (8009628 <OTM8009A_Init+0x388>)
 8009364:	2000      	movs	r0, #0
 8009366:	f7f7 fb7f 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 800936a:	49a5      	ldr	r1, [pc, #660]	; (8009600 <OTM8009A_Init+0x360>)
 800936c:	2000      	movs	r0, #0
 800936e:	f7f7 fb7b 	bl	8000a68 <DSI_IO_WriteCmd>

  /* GVDD/NGVDD settings */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8009372:	4999      	ldr	r1, [pc, #612]	; (80095d8 <OTM8009A_Init+0x338>)
 8009374:	2000      	movs	r0, #0
 8009376:	f7f7 fb77 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData5);
 800937a:	49ac      	ldr	r1, [pc, #688]	; (800962c <OTM8009A_Init+0x38c>)
 800937c:	2002      	movs	r0, #2
 800937e:	f7f7 fb73 	bl	8000a68 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 149th parameter - Default 0x33h */
  /* Rewrite the default value !                           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData20);
 8009382:	49ab      	ldr	r1, [pc, #684]	; (8009630 <OTM8009A_Init+0x390>)
 8009384:	2000      	movs	r0, #0
 8009386:	f7f7 fb6f 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData21);
 800938a:	49aa      	ldr	r1, [pc, #680]	; (8009634 <OTM8009A_Init+0x394>)
 800938c:	2000      	movs	r0, #0
 800938e:	f7f7 fb6b 	bl	8000a68 <DSI_IO_WriteCmd>

  /* Panel display timing Setting 3 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData22);
 8009392:	49a9      	ldr	r1, [pc, #676]	; (8009638 <OTM8009A_Init+0x398>)
 8009394:	2000      	movs	r0, #0
 8009396:	f7f7 fb67 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData23);
 800939a:	49a8      	ldr	r1, [pc, #672]	; (800963c <OTM8009A_Init+0x39c>)
 800939c:	2000      	movs	r0, #0
 800939e:	f7f7 fb63 	bl	8000a68 <DSI_IO_WriteCmd>

  /* Power control 1 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData24);
 80093a2:	49a7      	ldr	r1, [pc, #668]	; (8009640 <OTM8009A_Init+0x3a0>)
 80093a4:	2000      	movs	r0, #0
 80093a6:	f7f7 fb5f 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData25);
 80093aa:	49a6      	ldr	r1, [pc, #664]	; (8009644 <OTM8009A_Init+0x3a4>)
 80093ac:	2000      	movs	r0, #0
 80093ae:	f7f7 fb5b 	bl	8000a68 <DSI_IO_WriteCmd>

  /* Source driver precharge */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 80093b2:	4997      	ldr	r1, [pc, #604]	; (8009610 <OTM8009A_Init+0x370>)
 80093b4:	2000      	movs	r0, #0
 80093b6:	f7f7 fb57 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData26);
 80093ba:	49a3      	ldr	r1, [pc, #652]	; (8009648 <OTM8009A_Init+0x3a8>)
 80093bc:	2000      	movs	r0, #0
 80093be:	f7f7 fb53 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 80093c2:	4995      	ldr	r1, [pc, #596]	; (8009618 <OTM8009A_Init+0x378>)
 80093c4:	2000      	movs	r0, #0
 80093c6:	f7f7 fb4f 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData27);
 80093ca:	49a0      	ldr	r1, [pc, #640]	; (800964c <OTM8009A_Init+0x3ac>)
 80093cc:	2000      	movs	r0, #0
 80093ce:	f7f7 fb4b 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData28);
 80093d2:	499f      	ldr	r1, [pc, #636]	; (8009650 <OTM8009A_Init+0x3b0>)
 80093d4:	2000      	movs	r0, #0
 80093d6:	f7f7 fb47 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData6);
 80093da:	499e      	ldr	r1, [pc, #632]	; (8009654 <OTM8009A_Init+0x3b4>)
 80093dc:	2002      	movs	r0, #2
 80093de:	f7f7 fb43 	bl	8000a68 <DSI_IO_WriteCmd>

  /* GOAVST */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 80093e2:	497f      	ldr	r1, [pc, #508]	; (80095e0 <OTM8009A_Init+0x340>)
 80093e4:	2000      	movs	r0, #0
 80093e6:	f7f7 fb3f 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 6, (uint8_t *)lcdRegData7);
 80093ea:	499b      	ldr	r1, [pc, #620]	; (8009658 <OTM8009A_Init+0x3b8>)
 80093ec:	2006      	movs	r0, #6
 80093ee:	f7f7 fb3b 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 80093f2:	499a      	ldr	r1, [pc, #616]	; (800965c <OTM8009A_Init+0x3bc>)
 80093f4:	2000      	movs	r0, #0
 80093f6:	f7f7 fb37 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData8);
 80093fa:	4999      	ldr	r1, [pc, #612]	; (8009660 <OTM8009A_Init+0x3c0>)
 80093fc:	200e      	movs	r0, #14
 80093fe:	f7f7 fb33 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8009402:	4998      	ldr	r1, [pc, #608]	; (8009664 <OTM8009A_Init+0x3c4>)
 8009404:	2000      	movs	r0, #0
 8009406:	f7f7 fb2f 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData9);
 800940a:	4997      	ldr	r1, [pc, #604]	; (8009668 <OTM8009A_Init+0x3c8>)
 800940c:	200e      	movs	r0, #14
 800940e:	f7f7 fb2b 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8009412:	4996      	ldr	r1, [pc, #600]	; (800966c <OTM8009A_Init+0x3cc>)
 8009414:	2000      	movs	r0, #0
 8009416:	f7f7 fb27 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData10);
 800941a:	4995      	ldr	r1, [pc, #596]	; (8009670 <OTM8009A_Init+0x3d0>)
 800941c:	200a      	movs	r0, #10
 800941e:	f7f7 fb23 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8009422:	4994      	ldr	r1, [pc, #592]	; (8009674 <OTM8009A_Init+0x3d4>)
 8009424:	2000      	movs	r0, #0
 8009426:	f7f7 fb1f 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData46);
 800942a:	4993      	ldr	r1, [pc, #588]	; (8009678 <OTM8009A_Init+0x3d8>)
 800942c:	2000      	movs	r0, #0
 800942e:	f7f7 fb1b 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8009432:	496b      	ldr	r1, [pc, #428]	; (80095e0 <OTM8009A_Init+0x340>)
 8009434:	2000      	movs	r0, #0
 8009436:	f7f7 fb17 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData11);
 800943a:	4990      	ldr	r1, [pc, #576]	; (800967c <OTM8009A_Init+0x3dc>)
 800943c:	200a      	movs	r0, #10
 800943e:	f7f7 fb13 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 8009442:	498f      	ldr	r1, [pc, #572]	; (8009680 <OTM8009A_Init+0x3e0>)
 8009444:	2000      	movs	r0, #0
 8009446:	f7f7 fb0f 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData12);
 800944a:	498e      	ldr	r1, [pc, #568]	; (8009684 <OTM8009A_Init+0x3e4>)
 800944c:	200f      	movs	r0, #15
 800944e:	f7f7 fb0b 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8009452:	4982      	ldr	r1, [pc, #520]	; (800965c <OTM8009A_Init+0x3bc>)
 8009454:	2000      	movs	r0, #0
 8009456:	f7f7 fb07 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData13);
 800945a:	498b      	ldr	r1, [pc, #556]	; (8009688 <OTM8009A_Init+0x3e8>)
 800945c:	200f      	movs	r0, #15
 800945e:	f7f7 fb03 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8009462:	4980      	ldr	r1, [pc, #512]	; (8009664 <OTM8009A_Init+0x3c4>)
 8009464:	2000      	movs	r0, #0
 8009466:	f7f7 faff 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData14);
 800946a:	4988      	ldr	r1, [pc, #544]	; (800968c <OTM8009A_Init+0x3ec>)
 800946c:	200a      	movs	r0, #10
 800946e:	f7f7 fafb 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8009472:	497e      	ldr	r1, [pc, #504]	; (800966c <OTM8009A_Init+0x3cc>)
 8009474:	2000      	movs	r0, #0
 8009476:	f7f7 faf7 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData15);
 800947a:	4985      	ldr	r1, [pc, #532]	; (8009690 <OTM8009A_Init+0x3f0>)
 800947c:	200f      	movs	r0, #15
 800947e:	f7f7 faf3 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8009482:	497c      	ldr	r1, [pc, #496]	; (8009674 <OTM8009A_Init+0x3d4>)
 8009484:	2000      	movs	r0, #0
 8009486:	f7f7 faef 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData16);
 800948a:	4982      	ldr	r1, [pc, #520]	; (8009694 <OTM8009A_Init+0x3f4>)
 800948c:	200f      	movs	r0, #15
 800948e:	f7f7 faeb 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData34);
 8009492:	4981      	ldr	r1, [pc, #516]	; (8009698 <OTM8009A_Init+0x3f8>)
 8009494:	2000      	movs	r0, #0
 8009496:	f7f7 fae7 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData17);
 800949a:	4980      	ldr	r1, [pc, #512]	; (800969c <OTM8009A_Init+0x3fc>)
 800949c:	200a      	movs	r0, #10
 800949e:	f7f7 fae3 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData35);
 80094a2:	497f      	ldr	r1, [pc, #508]	; (80096a0 <OTM8009A_Init+0x400>)
 80094a4:	2000      	movs	r0, #0
 80094a6:	f7f7 fadf 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData18);
 80094aa:	497e      	ldr	r1, [pc, #504]	; (80096a4 <OTM8009A_Init+0x404>)
 80094ac:	200a      	movs	r0, #10
 80094ae:	f7f7 fadb 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 80094b2:	494b      	ldr	r1, [pc, #300]	; (80095e0 <OTM8009A_Init+0x340>)
 80094b4:	2000      	movs	r0, #0
 80094b6:	f7f7 fad7 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData19);
 80094ba:	497b      	ldr	r1, [pc, #492]	; (80096a8 <OTM8009A_Init+0x408>)
 80094bc:	200a      	movs	r0, #10
 80094be:	f7f7 fad3 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 80094c2:	496f      	ldr	r1, [pc, #444]	; (8009680 <OTM8009A_Init+0x3e0>)
 80094c4:	2000      	movs	r0, #0
 80094c6:	f7f7 facf 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData20);
 80094ca:	4978      	ldr	r1, [pc, #480]	; (80096ac <OTM8009A_Init+0x40c>)
 80094cc:	200f      	movs	r0, #15
 80094ce:	f7f7 facb 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 80094d2:	4962      	ldr	r1, [pc, #392]	; (800965c <OTM8009A_Init+0x3bc>)
 80094d4:	2000      	movs	r0, #0
 80094d6:	f7f7 fac7 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData21);
 80094da:	4975      	ldr	r1, [pc, #468]	; (80096b0 <OTM8009A_Init+0x410>)
 80094dc:	200f      	movs	r0, #15
 80094de:	f7f7 fac3 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 80094e2:	4960      	ldr	r1, [pc, #384]	; (8009664 <OTM8009A_Init+0x3c4>)
 80094e4:	2000      	movs	r0, #0
 80094e6:	f7f7 fabf 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData22);
 80094ea:	4972      	ldr	r1, [pc, #456]	; (80096b4 <OTM8009A_Init+0x414>)
 80094ec:	200a      	movs	r0, #10
 80094ee:	f7f7 fabb 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 80094f2:	495e      	ldr	r1, [pc, #376]	; (800966c <OTM8009A_Init+0x3cc>)
 80094f4:	2000      	movs	r0, #0
 80094f6:	f7f7 fab7 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData23);
 80094fa:	496f      	ldr	r1, [pc, #444]	; (80096b8 <OTM8009A_Init+0x418>)
 80094fc:	200f      	movs	r0, #15
 80094fe:	f7f7 fab3 	bl	8000a68 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8009502:	495c      	ldr	r1, [pc, #368]	; (8009674 <OTM8009A_Init+0x3d4>)
 8009504:	2000      	movs	r0, #0
 8009506:	f7f7 faaf 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData24);
 800950a:	496c      	ldr	r1, [pc, #432]	; (80096bc <OTM8009A_Init+0x41c>)
 800950c:	200f      	movs	r0, #15
 800950e:	f7f7 faab 	bl	8000a68 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////////////
  /* PWR_CTRL1 - 0xc580h - 130th parameter - default 0x00 */
  /* Pump 1 min and max DM                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8009512:	493f      	ldr	r1, [pc, #252]	; (8009610 <OTM8009A_Init+0x370>)
 8009514:	2000      	movs	r0, #0
 8009516:	f7f7 faa7 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData47);
 800951a:	4969      	ldr	r1, [pc, #420]	; (80096c0 <OTM8009A_Init+0x420>)
 800951c:	2000      	movs	r0, #0
 800951e:	f7f7 faa3 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData48);
 8009522:	4968      	ldr	r1, [pc, #416]	; (80096c4 <OTM8009A_Init+0x424>)
 8009524:	2000      	movs	r0, #0
 8009526:	f7f7 fa9f 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData49);
 800952a:	4967      	ldr	r1, [pc, #412]	; (80096c8 <OTM8009A_Init+0x428>)
 800952c:	2000      	movs	r0, #0
 800952e:	f7f7 fa9b 	bl	8000a68 <DSI_IO_WriteCmd>
  /////////////////////////////////////////////////////////////////////////////

  /* CABC LEDPWM frequency adjusted to 19,5kHz */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData50);
 8009532:	4966      	ldr	r1, [pc, #408]	; (80096cc <OTM8009A_Init+0x42c>)
 8009534:	2000      	movs	r0, #0
 8009536:	f7f7 fa97 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData51);
 800953a:	4965      	ldr	r1, [pc, #404]	; (80096d0 <OTM8009A_Init+0x430>)
 800953c:	2000      	movs	r0, #0
 800953e:	f7f7 fa93 	bl	8000a68 <DSI_IO_WriteCmd>
  
  /* Exit CMD2 mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8009542:	4925      	ldr	r1, [pc, #148]	; (80095d8 <OTM8009A_Init+0x338>)
 8009544:	2000      	movs	r0, #0
 8009546:	f7f7 fa8f 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData25);
 800954a:	4962      	ldr	r1, [pc, #392]	; (80096d4 <OTM8009A_Init+0x434>)
 800954c:	2003      	movs	r0, #3
 800954e:	f7f7 fa8b 	bl	8000a68 <DSI_IO_WriteCmd>
  /*************************************************************************** */
  /* Standard DCS Initialization TO KEEP CAN BE DONE IN HSDT                   */
  /*************************************************************************** */

  /* NOP - goes back to DCS std command ? */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8009552:	4921      	ldr	r1, [pc, #132]	; (80095d8 <OTM8009A_Init+0x338>)
 8009554:	2000      	movs	r0, #0
 8009556:	f7f7 fa87 	bl	8000a68 <DSI_IO_WriteCmd>
          
  /* Gamma correction 2.2+ table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800955a:	491f      	ldr	r1, [pc, #124]	; (80095d8 <OTM8009A_Init+0x338>)
 800955c:	2000      	movs	r0, #0
 800955e:	f7f7 fa83 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData3);
 8009562:	495d      	ldr	r1, [pc, #372]	; (80096d8 <OTM8009A_Init+0x438>)
 8009564:	2010      	movs	r0, #16
 8009566:	f7f7 fa7f 	bl	8000a68 <DSI_IO_WriteCmd>
  
  /* Gamma correction 2.2- table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800956a:	491b      	ldr	r1, [pc, #108]	; (80095d8 <OTM8009A_Init+0x338>)
 800956c:	2000      	movs	r0, #0
 800956e:	f7f7 fa7b 	bl	8000a68 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData4);
 8009572:	495a      	ldr	r1, [pc, #360]	; (80096dc <OTM8009A_Init+0x43c>)
 8009574:	2010      	movs	r0, #16
 8009576:	f7f7 fa77 	bl	8000a68 <DSI_IO_WriteCmd>
          
  /* Send Sleep Out command to display : no parameter */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData36);
 800957a:	2000      	movs	r0, #0
 800957c:	4958      	ldr	r1, [pc, #352]	; (80096e0 <OTM8009A_Init+0x440>)
 800957e:	f7f7 fa73 	bl	8000a68 <DSI_IO_WriteCmd>
  
  /* Wait for sleep out exit */
  OTM8009A_IO_Delay(120);
 8009582:	2078      	movs	r0, #120	; 0x78
 8009584:	f000 f9da 	bl	800993c <OTM8009A_IO_Delay>

  switch(ColorCoding)
 8009588:	2c00      	cmp	r4, #0
 800958a:	f000 80c9 	beq.w	8009720 <OTM8009A_Init+0x480>
 800958e:	2c02      	cmp	r4, #2
 8009590:	d103      	bne.n	800959a <OTM8009A_Init+0x2fa>
  {
  case OTM8009A_FORMAT_RBG565 :
    /* Set Pixel color format to RGB565 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData37);
 8009592:	4954      	ldr	r1, [pc, #336]	; (80096e4 <OTM8009A_Init+0x444>)
 8009594:	2000      	movs	r0, #0
    break;
  case OTM8009A_FORMAT_RGB888 :
    /* Set Pixel color format to RGB888 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 8009596:	f7f7 fa67 	bl	8000a68 <DSI_IO_WriteCmd>
    break;
  }

  /* Send command to configure display in landscape orientation mode. By default
      the orientation mode is portrait  */
  if(orientation == OTM8009A_ORIENTATION_LANDSCAPE)
 800959a:	2d01      	cmp	r5, #1
 800959c:	d10b      	bne.n	80095b6 <OTM8009A_Init+0x316>
  {
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData39);
 800959e:	4952      	ldr	r1, [pc, #328]	; (80096e8 <OTM8009A_Init+0x448>)
 80095a0:	2000      	movs	r0, #0
 80095a2:	f7f7 fa61 	bl	8000a68 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData27);
 80095a6:	4951      	ldr	r1, [pc, #324]	; (80096ec <OTM8009A_Init+0x44c>)
 80095a8:	2004      	movs	r0, #4
 80095aa:	f7f7 fa5d 	bl	8000a68 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData28);
 80095ae:	4950      	ldr	r1, [pc, #320]	; (80096f0 <OTM8009A_Init+0x450>)
 80095b0:	2004      	movs	r0, #4
 80095b2:	f7f7 fa59 	bl	8000a68 <DSI_IO_WriteCmd>
  }

  /** CABC : Content Adaptive Backlight Control section start >> */
  /* Note : defaut is 0 (lowest Brightness), 0xFF is highest Brightness, try 0x7F : intermediate value */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData40);
 80095b6:	494f      	ldr	r1, [pc, #316]	; (80096f4 <OTM8009A_Init+0x454>)
 80095b8:	2000      	movs	r0, #0
 80095ba:	f7f7 fa55 	bl	8000a68 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData41);
 80095be:	494e      	ldr	r1, [pc, #312]	; (80096f8 <OTM8009A_Init+0x458>)
 80095c0:	2000      	movs	r0, #0
 80095c2:	f7f7 fa51 	bl	8000a68 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData42);
 80095c6:	494d      	ldr	r1, [pc, #308]	; (80096fc <OTM8009A_Init+0x45c>)
 80095c8:	2000      	movs	r0, #0
 80095ca:	f7f7 fa4d 	bl	8000a68 <DSI_IO_WriteCmd>

  /* defaut is 0 (lowest Brightness), 0xFF is highest Brightness */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData43);
 80095ce:	494c      	ldr	r1, [pc, #304]	; (8009700 <OTM8009A_Init+0x460>)
 80095d0:	2000      	movs	r0, #0
 80095d2:	f7f7 fa49 	bl	8000a68 <DSI_IO_WriteCmd>
 80095d6:	e095      	b.n	8009704 <OTM8009A_Init+0x464>
 80095d8:	0802892c 	.word	0x0802892c
 80095dc:	08028992 	.word	0x08028992
 80095e0:	08028942 	.word	0x08028942
 80095e4:	08028a18 	.word	0x08028a18
 80095e8:	08028958 	.word	0x08028958
 80095ec:	0802896e 	.word	0x0802896e
 80095f0:	08028984 	.word	0x08028984
 80095f4:	0802898a 	.word	0x0802898a
 80095f8:	0802898c 	.word	0x0802898c
 80095fc:	0802898e 	.word	0x0802898e
 8009600:	08028990 	.word	0x08028990
 8009604:	0802892e 	.word	0x0802892e
 8009608:	08028930 	.word	0x08028930
 800960c:	08028932 	.word	0x08028932
 8009610:	08028934 	.word	0x08028934
 8009614:	08028936 	.word	0x08028936
 8009618:	08028938 	.word	0x08028938
 800961c:	0802893a 	.word	0x0802893a
 8009620:	0802893c 	.word	0x0802893c
 8009624:	0802893e 	.word	0x0802893e
 8009628:	08028940 	.word	0x08028940
 800962c:	08028a96 	.word	0x08028a96
 8009630:	08028944 	.word	0x08028944
 8009634:	08028946 	.word	0x08028946
 8009638:	08028948 	.word	0x08028948
 800963c:	0802894a 	.word	0x0802894a
 8009640:	0802894c 	.word	0x0802894c
 8009644:	0802894e 	.word	0x0802894e
 8009648:	08028950 	.word	0x08028950
 800964c:	08028952 	.word	0x08028952
 8009650:	08028954 	.word	0x08028954
 8009654:	08028a99 	.word	0x08028a99
 8009658:	08028a9c 	.word	0x08028a9c
 800965c:	08028956 	.word	0x08028956
 8009660:	08028aa3 	.word	0x08028aa3
 8009664:	0802895a 	.word	0x0802895a
 8009668:	08028ab2 	.word	0x08028ab2
 800966c:	0802895c 	.word	0x0802895c
 8009670:	08028996 	.word	0x08028996
 8009674:	0802895e 	.word	0x0802895e
 8009678:	0802897c 	.word	0x0802897c
 800967c:	080289a1 	.word	0x080289a1
 8009680:	08028960 	.word	0x08028960
 8009684:	080289ac 	.word	0x080289ac
 8009688:	080289bc 	.word	0x080289bc
 800968c:	080289cc 	.word	0x080289cc
 8009690:	080289d7 	.word	0x080289d7
 8009694:	080289e7 	.word	0x080289e7
 8009698:	08028962 	.word	0x08028962
 800969c:	080289f7 	.word	0x080289f7
 80096a0:	08028964 	.word	0x08028964
 80096a4:	08028a02 	.word	0x08028a02
 80096a8:	08028a0d 	.word	0x08028a0d
 80096ac:	08028a1b 	.word	0x08028a1b
 80096b0:	08028a2b 	.word	0x08028a2b
 80096b4:	08028a3b 	.word	0x08028a3b
 80096b8:	08028a46 	.word	0x08028a46
 80096bc:	08028a56 	.word	0x08028a56
 80096c0:	0802897e 	.word	0x0802897e
 80096c4:	08028980 	.word	0x08028980
 80096c8:	08028982 	.word	0x08028982
 80096cc:	08028986 	.word	0x08028986
 80096d0:	08028988 	.word	0x08028988
 80096d4:	08028a66 	.word	0x08028a66
 80096d8:	08028a74 	.word	0x08028a74
 80096dc:	08028a85 	.word	0x08028a85
 80096e0:	08028966 	.word	0x08028966
 80096e4:	08028968 	.word	0x08028968
 80096e8:	0802896c 	.word	0x0802896c
 80096ec:	08028a6a 	.word	0x08028a6a
 80096f0:	08028a6f 	.word	0x08028a6f
 80096f4:	08028970 	.word	0x08028970
 80096f8:	08028972 	.word	0x08028972
 80096fc:	08028974 	.word	0x08028974
 8009700:	08028976 	.word	0x08028976

  /** CABC : Content Adaptive Backlight Control section end << */

  /* Send Command Display On */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData44);
 8009704:	4908      	ldr	r1, [pc, #32]	; (8009728 <OTM8009A_Init+0x488>)
 8009706:	2000      	movs	r0, #0
 8009708:	f7f7 f9ae 	bl	8000a68 <DSI_IO_WriteCmd>

  /* NOP command */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800970c:	4907      	ldr	r1, [pc, #28]	; (800972c <OTM8009A_Init+0x48c>)
 800970e:	2000      	movs	r0, #0
 8009710:	f7f7 f9aa 	bl	8000a68 <DSI_IO_WriteCmd>

  /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI commands sent by */
  /* DSI host from LTDC incoming pixels in video mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData45);
 8009714:	4906      	ldr	r1, [pc, #24]	; (8009730 <OTM8009A_Init+0x490>)
 8009716:	2000      	movs	r0, #0
 8009718:	f7f7 f9a6 	bl	8000a68 <DSI_IO_WriteCmd>

  return 0;
}
 800971c:	2000      	movs	r0, #0
 800971e:	bd38      	pop	{r3, r4, r5, pc}
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 8009720:	4904      	ldr	r1, [pc, #16]	; (8009734 <OTM8009A_Init+0x494>)
 8009722:	4620      	mov	r0, r4
 8009724:	e737      	b.n	8009596 <OTM8009A_Init+0x2f6>
 8009726:	bf00      	nop
 8009728:	08028978 	.word	0x08028978
 800972c:	0802892c 	.word	0x0802892c
 8009730:	0802897a 	.word	0x0802897a
 8009734:	0802896a 	.word	0x0802896a

08009738 <I2C1_Init>:

/**
  * @brief  Initializes I2C HAL.
  */
static void I2C1_Init(void)
{
 8009738:	b570      	push	{r4, r5, r6, lr}
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 800973a:	4d2e      	ldr	r5, [pc, #184]	; (80097f4 <I2C1_Init+0xbc>)
{
 800973c:	b088      	sub	sp, #32
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 800973e:	4628      	mov	r0, r5
 8009740:	f002 f96a 	bl	800ba18 <HAL_I2C_GetState>
 8009744:	4604      	mov	r4, r0
 8009746:	2800      	cmp	r0, #0
 8009748:	d151      	bne.n	80097ee <I2C1_Init+0xb6>
  {
    heval_I2c1.Instance = I2C1;
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 800974a:	4a2b      	ldr	r2, [pc, #172]	; (80097f8 <I2C1_Init+0xc0>)
 800974c:	4b2b      	ldr	r3, [pc, #172]	; (80097fc <I2C1_Init+0xc4>)
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 800974e:	4e2c      	ldr	r6, [pc, #176]	; (8009800 <I2C1_Init+0xc8>)
 8009750:	9001      	str	r0, [sp, #4]
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 8009752:	e9c5 2300 	strd	r2, r3, [r5]
    heval_I2c1.Init.DutyCycle       = I2C_DUTYCYCLE_2;
    heval_I2c1.Init.OwnAddress1     = 0;
    heval_I2c1.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
 8009756:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    heval_I2c1.Init.OwnAddress1     = 0;
 800975a:	e9c5 0002 	strd	r0, r0, [r5, #8]
    heval_I2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800975e:	e9c5 3004 	strd	r3, r0, [r5, #16]
    heval_I2c1.Init.OwnAddress2     = 0;
    heval_I2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8009762:	e9c5 0006 	strd	r0, r0, [r5, #24]
    heval_I2c1.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
 8009766:	6228      	str	r0, [r5, #32]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8009768:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800976a:	f043 0302 	orr.w	r3, r3, #2
 800976e:	6333      	str	r3, [r6, #48]	; 0x30
 8009770:	6b33      	ldr	r3, [r6, #48]	; 0x30
  gpio_init_structure.Pull = GPIO_NOPULL;
 8009772:	9005      	str	r0, [sp, #20]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8009774:	f003 0302 	and.w	r3, r3, #2
 8009778:	9301      	str	r3, [sp, #4]
 800977a:	9b01      	ldr	r3, [sp, #4]
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 800977c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8009780:	2312      	movs	r3, #18
 8009782:	e9cd 1303 	strd	r1, r3, [sp, #12]
  gpio_init_structure.Alternate = DISCO_I2C1_SCL_SDA_AF;
 8009786:	2002      	movs	r0, #2
 8009788:	2304      	movs	r3, #4
 800978a:	e9cd 0306 	strd	r0, r3, [sp, #24]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 800978e:	a903      	add	r1, sp, #12
 8009790:	481c      	ldr	r0, [pc, #112]	; (8009804 <I2C1_Init+0xcc>)
 8009792:	f001 fb6f 	bl	800ae74 <HAL_GPIO_Init>
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8009796:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 800979a:	481a      	ldr	r0, [pc, #104]	; (8009804 <I2C1_Init+0xcc>)
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 800979c:	9303      	str	r3, [sp, #12]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 800979e:	a903      	add	r1, sp, #12
 80097a0:	f001 fb68 	bl	800ae74 <HAL_GPIO_Init>
  DISCO_I2C1_CLK_ENABLE();
 80097a4:	9402      	str	r4, [sp, #8]
 80097a6:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80097a8:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80097ac:	6433      	str	r3, [r6, #64]	; 0x40
 80097ae:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80097b0:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80097b4:	9302      	str	r3, [sp, #8]
 80097b6:	9b02      	ldr	r3, [sp, #8]
  DISCO_I2C1_FORCE_RESET();
 80097b8:	6a33      	ldr	r3, [r6, #32]
 80097ba:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80097be:	6233      	str	r3, [r6, #32]
  DISCO_I2C1_RELEASE_RESET();
 80097c0:	6a33      	ldr	r3, [r6, #32]
 80097c2:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80097c6:	6233      	str	r3, [r6, #32]
  HAL_NVIC_SetPriority(DISCO_I2C1_EV_IRQn, 0x05, 0);
 80097c8:	4622      	mov	r2, r4
 80097ca:	2105      	movs	r1, #5
 80097cc:	201f      	movs	r0, #31
 80097ce:	f000 fd1d 	bl	800a20c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_EV_IRQn);
 80097d2:	201f      	movs	r0, #31
 80097d4:	f000 fd4c 	bl	800a270 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DISCO_I2C1_ER_IRQn, 0x05, 0);
 80097d8:	4622      	mov	r2, r4
 80097da:	2105      	movs	r1, #5
 80097dc:	2020      	movs	r0, #32
 80097de:	f000 fd15 	bl	800a20c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_ER_IRQn);
 80097e2:	2020      	movs	r0, #32
 80097e4:	f000 fd44 	bl	800a270 <HAL_NVIC_EnableIRQ>

    /* Init the I2C */
    I2C1_MspInit();
    HAL_I2C_Init(&heval_I2c1);
 80097e8:	4628      	mov	r0, r5
 80097ea:	f001 febb 	bl	800b564 <HAL_I2C_Init>
  }
}
 80097ee:	b008      	add	sp, #32
 80097f0:	bd70      	pop	{r4, r5, r6, pc}
 80097f2:	bf00      	nop
 80097f4:	2000fb20 	.word	0x2000fb20
 80097f8:	40005400 	.word	0x40005400
 80097fc:	00061a80 	.word	0x00061a80
 8009800:	40023800 	.word	0x40023800
 8009804:	40020400 	.word	0x40020400

08009808 <I2C1_Error.isra.0>:

/**
  * @brief  Manages error callback by re-initializing I2C.
  * @param  Addr: I2C Address
  */
static void I2C1_Error(uint8_t Addr)
 8009808:	b508      	push	{r3, lr}
{
  /* De-initialize the I2C comunication bus */
  HAL_I2C_DeInit(&heval_I2c1);
 800980a:	4803      	ldr	r0, [pc, #12]	; (8009818 <I2C1_Error.isra.0+0x10>)
 800980c:	f001 ff52 	bl	800b6b4 <HAL_I2C_DeInit>

  /* Re-Initiaize the I2C comunication bus */
  I2C1_Init();
}
 8009810:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  I2C1_Init();
 8009814:	f7ff bf90 	b.w	8009738 <I2C1_Init>
 8009818:	2000fb20 	.word	0x2000fb20

0800981c <BSP_PB_Init>:
{
 800981c:	b510      	push	{r4, lr}
 800981e:	b086      	sub	sp, #24
  BUTTON_GPIO_CLK_ENABLE();
 8009820:	4b19      	ldr	r3, [pc, #100]	; (8009888 <BSP_PB_Init+0x6c>)
 8009822:	2400      	movs	r4, #0
 8009824:	9400      	str	r4, [sp, #0]
 8009826:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009828:	f042 0201 	orr.w	r2, r2, #1
 800982c:	631a      	str	r2, [r3, #48]	; 0x30
 800982e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009830:	f003 0301 	and.w	r3, r3, #1
 8009834:	9300      	str	r3, [sp, #0]
 8009836:	9b00      	ldr	r3, [sp, #0]
  if(Button_Mode == BUTTON_MODE_GPIO)
 8009838:	b969      	cbnz	r1, 8009856 <BSP_PB_Init+0x3a>
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 800983a:	2301      	movs	r3, #1
    gpio_init_structure.Mode = GPIO_MODE_INPUT;
 800983c:	e9cd 3101 	strd	r3, r1, [sp, #4]
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8009840:	2302      	movs	r3, #2
 8009842:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8009844:	4b11      	ldr	r3, [pc, #68]	; (800988c <BSP_PB_Init+0x70>)
    gpio_init_structure.Pull = GPIO_NOPULL;
 8009846:	9103      	str	r1, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8009848:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800984c:	a901      	add	r1, sp, #4
 800984e:	f001 fb11 	bl	800ae74 <HAL_GPIO_Init>
}
 8009852:	b006      	add	sp, #24
 8009854:	bd10      	pop	{r4, pc}
  if(Button_Mode == BUTTON_MODE_EXTI)
 8009856:	2901      	cmp	r1, #1
 8009858:	d1fb      	bne.n	8009852 <BSP_PB_Init+0x36>
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 800985a:	2302      	movs	r3, #2
 800985c:	9304      	str	r3, [sp, #16]
    gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 800985e:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8009862:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8009864:	4b09      	ldr	r3, [pc, #36]	; (800988c <BSP_PB_Init+0x70>)
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8009866:	9101      	str	r1, [sp, #4]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8009868:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    gpio_init_structure.Pull = GPIO_NOPULL;
 800986c:	9403      	str	r4, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 800986e:	a901      	add	r1, sp, #4
 8009870:	f001 fb00 	bl	800ae74 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority((IRQn_Type)(BUTTON_IRQn[Button]), 0x0F, 0x00);
 8009874:	4622      	mov	r2, r4
 8009876:	210f      	movs	r1, #15
 8009878:	2006      	movs	r0, #6
 800987a:	f000 fcc7 	bl	800a20c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 800987e:	2006      	movs	r0, #6
 8009880:	f000 fcf6 	bl	800a270 <HAL_NVIC_EnableIRQ>
}
 8009884:	e7e5      	b.n	8009852 <BSP_PB_Init+0x36>
 8009886:	bf00      	nop
 8009888:	40023800 	.word	0x40023800
 800988c:	2000004c 	.word	0x2000004c

08009890 <BSP_PB_GetState>:
{
 8009890:	b508      	push	{r3, lr}
  return HAL_GPIO_ReadPin(BUTTON_PORT[Button], BUTTON_PIN[Button]);
 8009892:	4b03      	ldr	r3, [pc, #12]	; (80098a0 <BSP_PB_GetState+0x10>)
 8009894:	2101      	movs	r1, #1
 8009896:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800989a:	f001 fc73 	bl	800b184 <HAL_GPIO_ReadPin>
}
 800989e:	bd08      	pop	{r3, pc}
 80098a0:	2000004c 	.word	0x2000004c

080098a4 <TS_IO_Init>:
 80098a4:	f7ff bf48 	b.w	8009738 <I2C1_Init>

080098a8 <TS_IO_Write>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @param  Value: Data to be written
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 80098a8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&heval_I2c1,
 80098aa:	2301      	movs	r3, #1
 80098ac:	f88d 2017 	strb.w	r2, [sp, #23]
 80098b0:	2264      	movs	r2, #100	; 0x64
 80098b2:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80098b6:	f10d 0217 	add.w	r2, sp, #23
 80098ba:	9200      	str	r2, [sp, #0]
 80098bc:	460a      	mov	r2, r1
 80098be:	4601      	mov	r1, r0
 80098c0:	4804      	ldr	r0, [pc, #16]	; (80098d4 <TS_IO_Write+0x2c>)
 80098c2:	f001 ff11 	bl	800b6e8 <HAL_I2C_Mem_Write>
  if(status != HAL_OK)
 80098c6:	b108      	cbz	r0, 80098cc <TS_IO_Write+0x24>
    I2C1_Error(Addr);
 80098c8:	f7ff ff9e 	bl	8009808 <I2C1_Error.isra.0>
  I2C1_Write(Addr, Reg, Value);
}
 80098cc:	b007      	add	sp, #28
 80098ce:	f85d fb04 	ldr.w	pc, [sp], #4
 80098d2:	bf00      	nop
 80098d4:	2000fb20 	.word	0x2000fb20

080098d8 <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @retval Read data
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 80098d8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t Value = 0;
 80098da:	2300      	movs	r3, #0
{
 80098dc:	460a      	mov	r2, r1
  uint8_t Value = 0;
 80098de:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 80098e2:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80098e6:	2301      	movs	r3, #1
 80098e8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80098ec:	f10d 0117 	add.w	r1, sp, #23
 80098f0:	9100      	str	r1, [sp, #0]
 80098f2:	4601      	mov	r1, r0
 80098f4:	4805      	ldr	r0, [pc, #20]	; (800990c <TS_IO_Read+0x34>)
 80098f6:	f001 ff87 	bl	800b808 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 80098fa:	b108      	cbz	r0, 8009900 <TS_IO_Read+0x28>
    I2C1_Error(Addr);
 80098fc:	f7ff ff84 	bl	8009808 <I2C1_Error.isra.0>
  return I2C1_Read(Addr, Reg);
}
 8009900:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8009904:	b007      	add	sp, #28
 8009906:	f85d fb04 	ldr.w	pc, [sp], #4
 800990a:	bf00      	nop
 800990c:	2000fb20 	.word	0x2000fb20

08009910 <TS_IO_ReadMultiple>:
  * @param  Buffer: Pointer to data buffer
  * @param  Length: Length of the data
  * @retval Number of read data
  */
uint16_t TS_IO_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *Buffer, uint16_t Length)
{
 8009910:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 8009912:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8009916:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800991a:	9200      	str	r2, [sp, #0]
 800991c:	2301      	movs	r3, #1
 800991e:	460a      	mov	r2, r1
 8009920:	4601      	mov	r1, r0
 8009922:	4805      	ldr	r0, [pc, #20]	; (8009938 <TS_IO_ReadMultiple+0x28>)
 8009924:	f001 ff70 	bl	800b808 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8009928:	4604      	mov	r4, r0
 800992a:	b108      	cbz	r0, 8009930 <TS_IO_ReadMultiple+0x20>
    I2C1_Error(Addr);
 800992c:	f7ff ff6c 	bl	8009808 <I2C1_Error.isra.0>
 return I2C1_ReadMultiple(Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, Buffer, Length);
}
 8009930:	b2a0      	uxth	r0, r4
 8009932:	b004      	add	sp, #16
 8009934:	bd10      	pop	{r4, pc}
 8009936:	bf00      	nop
 8009938:	2000fb20 	.word	0x2000fb20

0800993c <OTM8009A_IO_Delay>:
 800993c:	f000 bc40 	b.w	800a1c0 <HAL_Delay>

08009940 <QSPI_AutoPollingMemReady.constprop.0>:
/**
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout: timeout value before returning an error
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8009940:	b500      	push	{lr}
 8009942:	b095      	sub	sp, #84	; 0x54
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8009944:	f44f 7280 	mov.w	r2, #256	; 0x100
 8009948:	920c      	str	r2, [sp, #48]	; 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 800994a:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  s_command.Instruction       = READ_STATUS_REG_CMD;
 800994e:	2205      	movs	r2, #5
 8009950:	9206      	str	r2, [sp, #24]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8009952:	910f      	str	r1, [sp, #60]	; 0x3c
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8009954:	2200      	movs	r2, #0
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 8009956:	2101      	movs	r1, #1
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
 8009958:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800995c:	e9cd 220d 	strd	r2, r2, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8009960:	e9cd 2211 	strd	r2, r2, [sp, #68]	; 0x44
  s_command.DummyCycles       = 0;
 8009964:	920b      	str	r2, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8009966:	9213      	str	r2, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 8009968:	9200      	str	r2, [sp, #0]
  s_config.Interval        = 0x10;
 800996a:	2210      	movs	r2, #16
 800996c:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 800996e:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8009972:	4603      	mov	r3, r0
  s_config.Mask            = N25Q128A_SR_WIP;
 8009974:	9101      	str	r1, [sp, #4]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8009976:	9205      	str	r2, [sp, #20]

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8009978:	a906      	add	r1, sp, #24
 800997a:	466a      	mov	r2, sp
 800997c:	4804      	ldr	r0, [pc, #16]	; (8009990 <QSPI_AutoPollingMemReady.constprop.0+0x50>)
 800997e:	f002 fbce 	bl	800c11e <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 8009982:	3800      	subs	r0, #0
 8009984:	bf18      	it	ne
 8009986:	2001      	movne	r0, #1
 8009988:	b015      	add	sp, #84	; 0x54
 800998a:	f85d fb04 	ldr.w	pc, [sp], #4
 800998e:	bf00      	nop
 8009990:	20020f94 	.word	0x20020f94

08009994 <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 8009994:	b500      	push	{lr}
 8009996:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8009998:	f44f 7380 	mov.w	r3, #256	; 0x100
 800999c:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 800999e:	2306      	movs	r3, #6
 80099a0:	9306      	str	r3, [sp, #24]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80099a2:	4817      	ldr	r0, [pc, #92]	; (8009a00 <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 80099a4:	2300      	movs	r3, #0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80099a6:	f241 3288 	movw	r2, #5000	; 0x1388
 80099aa:	a906      	add	r1, sp, #24
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80099ac:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80099b0:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_command.DataMode          = QSPI_DATA_NONE;
 80099b4:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 80099b6:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80099b8:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80099ba:	f002 fb6c 	bl	800c096 <HAL_QSPI_Command>
 80099be:	b9e0      	cbnz	r0, 80099fa <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 80099c0:	2302      	movs	r3, #2
  s_config.Mask            = N25Q128A_SR_WREN;
 80099c2:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 80099c6:	2201      	movs	r2, #1
 80099c8:	2310      	movs	r3, #16
 80099ca:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 80099ce:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 80099d2:	2305      	movs	r3, #5
 80099d4:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 80099d8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 80099dc:	9004      	str	r0, [sp, #16]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 80099de:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80099e0:	4807      	ldr	r0, [pc, #28]	; (8009a00 <QSPI_WriteEnable.constprop.0+0x6c>)
 80099e2:	f241 3388 	movw	r3, #5000	; 0x1388
 80099e6:	466a      	mov	r2, sp
 80099e8:	a906      	add	r1, sp, #24
 80099ea:	f002 fb98 	bl	800c11e <HAL_QSPI_AutoPolling>
    return QSPI_ERROR;
 80099ee:	3800      	subs	r0, #0
 80099f0:	bf18      	it	ne
 80099f2:	2001      	movne	r0, #1
}
 80099f4:	b015      	add	sp, #84	; 0x54
 80099f6:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 80099fa:	2001      	movs	r0, #1
 80099fc:	e7fa      	b.n	80099f4 <QSPI_WriteEnable.constprop.0+0x60>
 80099fe:	bf00      	nop
 8009a00:	20020f94 	.word	0x20020f94

08009a04 <BSP_QSPI_EnableMemoryMappedMode>:
{
 8009a04:	b500      	push	{lr}
 8009a06:	b091      	sub	sp, #68	; 0x44
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8009a08:	f44f 7380 	mov.w	r3, #256	; 0x100
 8009a0c:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 8009a0e:	23eb      	movs	r3, #235	; 0xeb
 8009a10:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 8009a12:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8009a16:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 8009a18:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8009a1c:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 8009a1e:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
 8009a22:	2300      	movs	r3, #0
 8009a24:	e9cd 320a 	strd	r3, r2, [sp, #40]	; 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 8009a28:	220a      	movs	r2, #10
 8009a2a:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8009a2c:	a902      	add	r1, sp, #8
 8009a2e:	466a      	mov	r2, sp
 8009a30:	4806      	ldr	r0, [pc, #24]	; (8009a4c <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8009a32:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8009a34:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
 8009a38:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8009a3a:	f002 fbc0 	bl	800c1be <HAL_QSPI_MemoryMapped>
}
 8009a3e:	3800      	subs	r0, #0
 8009a40:	bf18      	it	ne
 8009a42:	2001      	movne	r0, #1
 8009a44:	b011      	add	sp, #68	; 0x44
 8009a46:	f85d fb04 	ldr.w	pc, [sp], #4
 8009a4a:	bf00      	nop
 8009a4c:	20020f94 	.word	0x20020f94

08009a50 <BSP_QSPI_MspInit>:
{
 8009a50:	b570      	push	{r4, r5, r6, lr}
 8009a52:	b088      	sub	sp, #32
  QSPI_CLK_ENABLE();
 8009a54:	4b2c      	ldr	r3, [pc, #176]	; (8009b08 <BSP_QSPI_MspInit+0xb8>)
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8009a56:	482d      	ldr	r0, [pc, #180]	; (8009b0c <BSP_QSPI_MspInit+0xbc>)
  QSPI_CLK_ENABLE();
 8009a58:	2400      	movs	r4, #0
 8009a5a:	9400      	str	r4, [sp, #0]
 8009a5c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8009a5e:	f042 0202 	orr.w	r2, r2, #2
 8009a62:	639a      	str	r2, [r3, #56]	; 0x38
 8009a64:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8009a66:	f002 0202 	and.w	r2, r2, #2
 8009a6a:	9200      	str	r2, [sp, #0]
 8009a6c:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 8009a6e:	699a      	ldr	r2, [r3, #24]
 8009a70:	f042 0202 	orr.w	r2, r2, #2
 8009a74:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8009a76:	699a      	ldr	r2, [r3, #24]
 8009a78:	f022 0202 	bic.w	r2, r2, #2
 8009a7c:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 8009a7e:	9401      	str	r4, [sp, #4]
 8009a80:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009a82:	f042 0202 	orr.w	r2, r2, #2
 8009a86:	631a      	str	r2, [r3, #48]	; 0x30
 8009a88:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009a8a:	f002 0202 	and.w	r2, r2, #2
 8009a8e:	9201      	str	r2, [sp, #4]
 8009a90:	9a01      	ldr	r2, [sp, #4]
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 8009a92:	9402      	str	r4, [sp, #8]
 8009a94:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009a96:	f042 0220 	orr.w	r2, r2, #32
 8009a9a:	631a      	str	r2, [r3, #48]	; 0x30
 8009a9c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009a9e:	f003 0320 	and.w	r3, r3, #32
 8009aa2:	9302      	str	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8009aa4:	2240      	movs	r2, #64	; 0x40
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 8009aa6:	9b02      	ldr	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8009aa8:	2302      	movs	r3, #2
 8009aaa:	e9cd 2303 	strd	r2, r3, [sp, #12]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 8009aae:	2101      	movs	r1, #1
 8009ab0:	2303      	movs	r3, #3
 8009ab2:	e9cd 1305 	strd	r1, r3, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8009ab6:	260a      	movs	r6, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8009ab8:	a903      	add	r1, sp, #12
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8009aba:	2509      	movs	r5, #9
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8009abc:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8009abe:	f001 f9d9 	bl	800ae74 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 8009ac2:	f44f 6380 	mov.w	r3, #1024	; 0x400
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8009ac6:	a903      	add	r1, sp, #12
 8009ac8:	4811      	ldr	r0, [pc, #68]	; (8009b10 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 8009aca:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8009acc:	9405      	str	r4, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8009ace:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8009ad0:	f001 f9d0 	bl	800ae74 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 8009ad4:	f44f 7340 	mov.w	r3, #768	; 0x300
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8009ad8:	a903      	add	r1, sp, #12
 8009ada:	480d      	ldr	r0, [pc, #52]	; (8009b10 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 8009adc:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8009ade:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8009ae0:	f001 f9c8 	bl	800ae74 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 8009ae4:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8009ae6:	a903      	add	r1, sp, #12
 8009ae8:	4809      	ldr	r0, [pc, #36]	; (8009b10 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 8009aea:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8009aec:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8009aee:	f001 f9c1 	bl	800ae74 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 8009af2:	4622      	mov	r2, r4
 8009af4:	210f      	movs	r1, #15
 8009af6:	205b      	movs	r0, #91	; 0x5b
 8009af8:	f000 fb88 	bl	800a20c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 8009afc:	205b      	movs	r0, #91	; 0x5b
 8009afe:	f000 fbb7 	bl	800a270 <HAL_NVIC_EnableIRQ>
}
 8009b02:	b008      	add	sp, #32
 8009b04:	bd70      	pop	{r4, r5, r6, pc}
 8009b06:	bf00      	nop
 8009b08:	40023800 	.word	0x40023800
 8009b0c:	40020400 	.word	0x40020400
 8009b10:	40021400 	.word	0x40021400

08009b14 <BSP_QSPI_Init>:
{
 8009b14:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 8009b16:	4c48      	ldr	r4, [pc, #288]	; (8009c38 <BSP_QSPI_Init+0x124>)
 8009b18:	4b48      	ldr	r3, [pc, #288]	; (8009c3c <BSP_QSPI_Init+0x128>)
 8009b1a:	6023      	str	r3, [r4, #0]
{
 8009b1c:	b091      	sub	sp, #68	; 0x44
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8009b1e:	4620      	mov	r0, r4
 8009b20:	f002 faa6 	bl	800c070 <HAL_QSPI_DeInit>
 8009b24:	4605      	mov	r5, r0
 8009b26:	b110      	cbz	r0, 8009b2e <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 8009b28:	2001      	movs	r0, #1
}
 8009b2a:	b011      	add	sp, #68	; 0x44
 8009b2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 8009b2e:	4601      	mov	r1, r0
 8009b30:	4620      	mov	r0, r4
 8009b32:	f7ff ff8d 	bl	8009a50 <BSP_QSPI_MspInit>
  QSPIHandle.Init.ClockPrescaler     = 1; /* QSPI Freq= 180 MHz / (1+1) = 90 MHz */
 8009b36:	2601      	movs	r6, #1
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8009b38:	2310      	movs	r3, #16
  QSPIHandle.Init.FifoThreshold      = 1;
 8009b3a:	e9c4 6601 	strd	r6, r6, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8009b3e:	60e3      	str	r3, [r4, #12]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8009b40:	f04f 7780 	mov.w	r7, #16777216	; 0x1000000
 8009b44:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 8009b48:	fab3 f383 	clz	r3, r3
 8009b4c:	3b01      	subs	r3, #1
 8009b4e:	6123      	str	r3, [r4, #16]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8009b50:	4620      	mov	r0, r4
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 8009b52:	f44f 6380 	mov.w	r3, #1024	; 0x400
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 8009b56:	e9c4 3505 	strd	r3, r5, [r4, #20]
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 8009b5a:	e9c4 5507 	strd	r5, r5, [r4, #28]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8009b5e:	f002 fa33 	bl	800bfc8 <HAL_QSPI_Init>
 8009b62:	2800      	cmp	r0, #0
 8009b64:	d1e0      	bne.n	8009b28 <BSP_QSPI_Init+0x14>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8009b66:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8009b6a:	e9cd 000d 	strd	r0, r0, [sp, #52]	; 0x34
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8009b6e:	f44f 7580 	mov.w	r5, #256	; 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 8009b72:	2366      	movs	r3, #102	; 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 8009b74:	900b      	str	r0, [sp, #44]	; 0x2c
  s_command.DummyCycles       = 0;
 8009b76:	9007      	str	r0, [sp, #28]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8009b78:	900f      	str	r0, [sp, #60]	; 0x3c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009b7a:	f241 3288 	movw	r2, #5000	; 0x1388
 8009b7e:	a902      	add	r1, sp, #8
 8009b80:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8009b82:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 8009b84:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009b86:	f002 fa86 	bl	800c096 <HAL_QSPI_Command>
 8009b8a:	b108      	cbz	r0, 8009b90 <BSP_QSPI_Init+0x7c>
    return QSPI_NOT_SUPPORTED;
 8009b8c:	2004      	movs	r0, #4
 8009b8e:	e7cc      	b.n	8009b2a <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 8009b90:	2399      	movs	r3, #153	; 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009b92:	f241 3288 	movw	r2, #5000	; 0x1388
 8009b96:	a902      	add	r1, sp, #8
 8009b98:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 8009b9a:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009b9c:	f002 fa7b 	bl	800c096 <HAL_QSPI_Command>
 8009ba0:	2800      	cmp	r0, #0
 8009ba2:	d1f3      	bne.n	8009b8c <BSP_QSPI_Init+0x78>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 8009ba4:	f241 3088 	movw	r0, #5000	; 0x1388
 8009ba8:	f7ff feca 	bl	8009940 <QSPI_AutoPollingMemReady.constprop.0>
 8009bac:	2800      	cmp	r0, #0
 8009bae:	d1ed      	bne.n	8009b8c <BSP_QSPI_Init+0x78>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8009bb0:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8009bb4:	e9cd 600c 	strd	r6, r0, [sp, #48]	; 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8009bb8:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8009bbc:	2385      	movs	r3, #133	; 0x85
  s_command.DummyCycles       = 0;
 8009bbe:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009bc0:	f241 3288 	movw	r2, #5000	; 0x1388
 8009bc4:	a902      	add	r1, sp, #8
 8009bc6:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8009bc8:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8009bca:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8009bcc:	970b      	str	r7, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009bce:	f002 fa62 	bl	800c096 <HAL_QSPI_Command>
 8009bd2:	2800      	cmp	r0, #0
 8009bd4:	d1da      	bne.n	8009b8c <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009bd6:	f241 3288 	movw	r2, #5000	; 0x1388
 8009bda:	f10d 0107 	add.w	r1, sp, #7
 8009bde:	4620      	mov	r0, r4
 8009be0:	f002 fbcc 	bl	800c37c <HAL_QSPI_Receive>
 8009be4:	2800      	cmp	r0, #0
 8009be6:	d1d1      	bne.n	8009b8c <BSP_QSPI_Init+0x78>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 8009be8:	f7ff fed4 	bl	8009994 <QSPI_WriteEnable.constprop.0>
 8009bec:	2800      	cmp	r0, #0
 8009bee:	d1cd      	bne.n	8009b8c <BSP_QSPI_Init+0x78>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 8009bf0:	2381      	movs	r3, #129	; 0x81
 8009bf2:	9302      	str	r3, [sp, #8]
 8009bf4:	22f0      	movs	r2, #240	; 0xf0
 8009bf6:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8009bfa:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8009bfe:	210a      	movs	r1, #10
 8009c00:	fab2 f282 	clz	r2, r2
 8009c04:	fa01 f202 	lsl.w	r2, r1, r2
 8009c08:	f003 030f 	and.w	r3, r3, #15
 8009c0c:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009c0e:	a902      	add	r1, sp, #8
 8009c10:	f241 3288 	movw	r2, #5000	; 0x1388
 8009c14:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8009c16:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009c1a:	f002 fa3c 	bl	800c096 <HAL_QSPI_Command>
 8009c1e:	2800      	cmp	r0, #0
 8009c20:	d1b4      	bne.n	8009b8c <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009c22:	f241 3288 	movw	r2, #5000	; 0x1388
 8009c26:	f10d 0107 	add.w	r1, sp, #7
 8009c2a:	4620      	mov	r0, r4
 8009c2c:	f002 fb4a 	bl	800c2c4 <HAL_QSPI_Transmit>
 8009c30:	2800      	cmp	r0, #0
 8009c32:	f43f af7a 	beq.w	8009b2a <BSP_QSPI_Init+0x16>
 8009c36:	e7a9      	b.n	8009b8c <BSP_QSPI_Init+0x78>
 8009c38:	20020f94 	.word	0x20020f94
 8009c3c:	a0001000 	.word	0xa0001000

08009c40 <BSP_QSPI_MspDeInit>:
{
 8009c40:	b508      	push	{r3, lr}
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 8009c42:	205b      	movs	r0, #91	; 0x5b
 8009c44:	f000 fb22 	bl	800a28c <HAL_NVIC_DisableIRQ>
  HAL_GPIO_DeInit(QSPI_CS_GPIO_PORT, QSPI_CS_PIN);
 8009c48:	4814      	ldr	r0, [pc, #80]	; (8009c9c <BSP_QSPI_MspDeInit+0x5c>)
 8009c4a:	2140      	movs	r1, #64	; 0x40
 8009c4c:	f001 f9f8 	bl	800b040 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 8009c50:	4813      	ldr	r0, [pc, #76]	; (8009ca0 <BSP_QSPI_MspDeInit+0x60>)
 8009c52:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8009c56:	f001 f9f3 	bl	800b040 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D0_PIN);
 8009c5a:	4811      	ldr	r0, [pc, #68]	; (8009ca0 <BSP_QSPI_MspDeInit+0x60>)
 8009c5c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8009c60:	f001 f9ee 	bl	800b040 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D1_PIN);
 8009c64:	480e      	ldr	r0, [pc, #56]	; (8009ca0 <BSP_QSPI_MspDeInit+0x60>)
 8009c66:	f44f 7100 	mov.w	r1, #512	; 0x200
 8009c6a:	f001 f9e9 	bl	800b040 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D2_PIN);
 8009c6e:	480c      	ldr	r0, [pc, #48]	; (8009ca0 <BSP_QSPI_MspDeInit+0x60>)
 8009c70:	2180      	movs	r1, #128	; 0x80
 8009c72:	f001 f9e5 	bl	800b040 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D3_PIN);
 8009c76:	480a      	ldr	r0, [pc, #40]	; (8009ca0 <BSP_QSPI_MspDeInit+0x60>)
 8009c78:	2140      	movs	r1, #64	; 0x40
 8009c7a:	f001 f9e1 	bl	800b040 <HAL_GPIO_DeInit>
  QSPI_FORCE_RESET();
 8009c7e:	4b09      	ldr	r3, [pc, #36]	; (8009ca4 <BSP_QSPI_MspDeInit+0x64>)
 8009c80:	699a      	ldr	r2, [r3, #24]
 8009c82:	f042 0202 	orr.w	r2, r2, #2
 8009c86:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8009c88:	699a      	ldr	r2, [r3, #24]
 8009c8a:	f022 0202 	bic.w	r2, r2, #2
 8009c8e:	619a      	str	r2, [r3, #24]
  QSPI_CLK_DISABLE();
 8009c90:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8009c92:	f022 0202 	bic.w	r2, r2, #2
 8009c96:	639a      	str	r2, [r3, #56]	; 0x38
}
 8009c98:	bd08      	pop	{r3, pc}
 8009c9a:	bf00      	nop
 8009c9c:	40020400 	.word	0x40020400
 8009ca0:	40021400 	.word	0x40021400
 8009ca4:	40023800 	.word	0x40023800

08009ca8 <BSP_QSPI_DeInit>:
{
 8009ca8:	b538      	push	{r3, r4, r5, lr}
  QSPIHandle.Instance = QUADSPI;
 8009caa:	4d08      	ldr	r5, [pc, #32]	; (8009ccc <BSP_QSPI_DeInit+0x24>)
 8009cac:	4b08      	ldr	r3, [pc, #32]	; (8009cd0 <BSP_QSPI_DeInit+0x28>)
 8009cae:	602b      	str	r3, [r5, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8009cb0:	4628      	mov	r0, r5
 8009cb2:	f002 f9dd 	bl	800c070 <HAL_QSPI_DeInit>
 8009cb6:	4604      	mov	r4, r0
 8009cb8:	b928      	cbnz	r0, 8009cc6 <BSP_QSPI_DeInit+0x1e>
  BSP_QSPI_MspDeInit(&QSPIHandle, NULL);
 8009cba:	4601      	mov	r1, r0
 8009cbc:	4628      	mov	r0, r5
 8009cbe:	f7ff ffbf 	bl	8009c40 <BSP_QSPI_MspDeInit>
}
 8009cc2:	4620      	mov	r0, r4
 8009cc4:	bd38      	pop	{r3, r4, r5, pc}
    return QSPI_ERROR;
 8009cc6:	2401      	movs	r4, #1
 8009cc8:	e7fb      	b.n	8009cc2 <BSP_QSPI_DeInit+0x1a>
 8009cca:	bf00      	nop
 8009ccc:	20020f94 	.word	0x20020f94
 8009cd0:	a0001000 	.word	0xa0001000

08009cd4 <BSP_SDRAM_Initialization_sequence>:
/**
  * @brief  Programs the SDRAM device.
  * @param  RefreshCount: SDRAM refresh counter value
  */
void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount)
{
 8009cd4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t tmpmrd = 0;

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 8009cd8:	4c21      	ldr	r4, [pc, #132]	; (8009d60 <BSP_SDRAM_Initialization_sequence+0x8c>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009cda:	4d22      	ldr	r5, [pc, #136]	; (8009d64 <BSP_SDRAM_Initialization_sequence+0x90>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8009cdc:	2601      	movs	r6, #1
  __IO uint32_t tmpmrd = 0;
 8009cde:	f04f 0800 	mov.w	r8, #0
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8009ce2:	2710      	movs	r7, #16
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009ce4:	4621      	mov	r1, r4
{
 8009ce6:	4681      	mov	r9, r0
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009ce8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009cec:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8009cee:	e9c4 6700 	strd	r6, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 8009cf2:	e9c4 6802 	strd	r6, r8, [r4, #8]
  __IO uint32_t tmpmrd = 0;
 8009cf6:	f8cd 8004 	str.w	r8, [sp, #4]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009cfa:	f002 ffdf 	bl	800ccbc <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(1);
 8009cfe:	4630      	mov	r0, r6
 8009d00:	f000 fa5e 	bl	800a1c0 <HAL_Delay>

  /* Step 3: Configure a PALL (precharge all) command */
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 8009d04:	2302      	movs	r3, #2
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009d06:	4621      	mov	r1, r4
 8009d08:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009d0c:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8009d0e:	e9c4 3700 	strd	r3, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 8009d12:	e9c4 6802 	strd	r6, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009d16:	f002 ffd1 	bl	800ccbc <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 8009d1a:	2303      	movs	r3, #3
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8009d1c:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009d20:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 8;
 8009d22:	2308      	movs	r3, #8
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009d24:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009d28:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = 0;
 8009d2a:	e9c4 3802 	strd	r3, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009d2e:	f002 ffc5 	bl	800ccbc <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 8009d32:	f44f 730c 	mov.w	r3, #560	; 0x230
 8009d36:	9301      	str	r3, [sp, #4]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 8009d38:	2304      	movs	r3, #4
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8009d3a:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009d3e:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = tmpmrd;
 8009d40:	9b01      	ldr	r3, [sp, #4]
  Command.AutoRefreshNumber      = 1;
 8009d42:	60a6      	str	r6, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009d44:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009d48:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = tmpmrd;
 8009d4a:	60e3      	str	r3, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009d4c:	f002 ffb6 	bl	800ccbc <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 8009d50:	4649      	mov	r1, r9
 8009d52:	4628      	mov	r0, r5
}
 8009d54:	b003      	add	sp, #12
 8009d56:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 8009d5a:	f002 bfc6 	b.w	800ccea <HAL_SDRAM_ProgramRefreshRate>
 8009d5e:	bf00      	nop
 8009d60:	2000fb74 	.word	0x2000fb74
 8009d64:	2000fc60 	.word	0x2000fc60

08009d68 <BSP_SDRAM_MspInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8009d68:	b570      	push	{r4, r5, r6, lr}
  static DMA_HandleTypeDef dma_handle;
  GPIO_InitTypeDef gpio_init_structure;

  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8009d6a:	4606      	mov	r6, r0
{
 8009d6c:	b08e      	sub	sp, #56	; 0x38
  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8009d6e:	2800      	cmp	r0, #0
 8009d70:	f000 80bd 	beq.w	8009eee <BSP_SDRAM_MspInit+0x186>
  {
    /* Enable FMC clock */
    __HAL_RCC_FMC_CLK_ENABLE();
 8009d74:	4b5f      	ldr	r3, [pc, #380]	; (8009ef4 <BSP_SDRAM_MspInit+0x18c>)
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
    gpio_init_structure.Alternate = GPIO_AF12_FMC;

    /* GPIOC configuration : PC0 is SDNWE */
    gpio_init_structure.Pin   = GPIO_PIN_0;
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8009d76:	4860      	ldr	r0, [pc, #384]	; (8009ef8 <BSP_SDRAM_MspInit+0x190>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
                                GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_9 | GPIO_PIN_10;
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);

    /* Configure common DMA parameters */
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8009d78:	4c60      	ldr	r4, [pc, #384]	; (8009efc <BSP_SDRAM_MspInit+0x194>)
    __HAL_RCC_FMC_CLK_ENABLE();
 8009d7a:	2500      	movs	r5, #0
 8009d7c:	9500      	str	r5, [sp, #0]
 8009d7e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8009d80:	f042 0201 	orr.w	r2, r2, #1
 8009d84:	639a      	str	r2, [r3, #56]	; 0x38
 8009d86:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8009d88:	f002 0201 	and.w	r2, r2, #1
 8009d8c:	9200      	str	r2, [sp, #0]
 8009d8e:	9a00      	ldr	r2, [sp, #0]
    __DMAx_CLK_ENABLE();
 8009d90:	9501      	str	r5, [sp, #4]
 8009d92:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009d94:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8009d98:	631a      	str	r2, [r3, #48]	; 0x30
 8009d9a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009d9c:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8009da0:	9201      	str	r2, [sp, #4]
 8009da2:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8009da4:	9502      	str	r5, [sp, #8]
 8009da6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009da8:	f042 0204 	orr.w	r2, r2, #4
 8009dac:	631a      	str	r2, [r3, #48]	; 0x30
 8009dae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009db0:	f002 0204 	and.w	r2, r2, #4
 8009db4:	9202      	str	r2, [sp, #8]
 8009db6:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8009db8:	9503      	str	r5, [sp, #12]
 8009dba:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009dbc:	f042 0208 	orr.w	r2, r2, #8
 8009dc0:	631a      	str	r2, [r3, #48]	; 0x30
 8009dc2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009dc4:	f002 0208 	and.w	r2, r2, #8
 8009dc8:	9203      	str	r2, [sp, #12]
 8009dca:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8009dcc:	9504      	str	r5, [sp, #16]
 8009dce:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009dd0:	f042 0210 	orr.w	r2, r2, #16
 8009dd4:	631a      	str	r2, [r3, #48]	; 0x30
 8009dd6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009dd8:	f002 0210 	and.w	r2, r2, #16
 8009ddc:	9204      	str	r2, [sp, #16]
 8009dde:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8009de0:	9505      	str	r5, [sp, #20]
 8009de2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009de4:	f042 0220 	orr.w	r2, r2, #32
 8009de8:	631a      	str	r2, [r3, #48]	; 0x30
 8009dea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009dec:	f002 0220 	and.w	r2, r2, #32
 8009df0:	9205      	str	r2, [sp, #20]
 8009df2:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8009df4:	9506      	str	r5, [sp, #24]
 8009df6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009df8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8009dfc:	631a      	str	r2, [r3, #48]	; 0x30
 8009dfe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009e00:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8009e04:	9206      	str	r2, [sp, #24]
 8009e06:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8009e08:	9507      	str	r5, [sp, #28]
 8009e0a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009e0c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8009e10:	631a      	str	r2, [r3, #48]	; 0x30
 8009e12:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009e14:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8009e18:	9207      	str	r2, [sp, #28]
 8009e1a:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8009e1c:	9508      	str	r5, [sp, #32]
 8009e1e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009e20:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009e24:	631a      	str	r2, [r3, #48]	; 0x30
 8009e26:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009e28:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009e2c:	9308      	str	r3, [sp, #32]
    gpio_init_structure.Pull      = GPIO_PULLUP;
 8009e2e:	2202      	movs	r2, #2
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8009e30:	9b08      	ldr	r3, [sp, #32]
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
 8009e32:	920c      	str	r2, [sp, #48]	; 0x30
    gpio_init_structure.Pull      = GPIO_PULLUP;
 8009e34:	2301      	movs	r3, #1
 8009e36:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8009e3a:	a909      	add	r1, sp, #36	; 0x24
    gpio_init_structure.Alternate = GPIO_AF12_FMC;
 8009e3c:	220c      	movs	r2, #12
 8009e3e:	920d      	str	r2, [sp, #52]	; 0x34
    gpio_init_structure.Pin   = GPIO_PIN_0;
 8009e40:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8009e42:	f001 f817 	bl	800ae74 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8009e46:	f24c 7303 	movw	r3, #50947	; 0xc703
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8009e4a:	482d      	ldr	r0, [pc, #180]	; (8009f00 <BSP_SDRAM_MspInit+0x198>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8009e4c:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8009e4e:	a909      	add	r1, sp, #36	; 0x24
 8009e50:	f001 f810 	bl	800ae74 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8009e54:	f64f 7383 	movw	r3, #65411	; 0xff83
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8009e58:	482a      	ldr	r0, [pc, #168]	; (8009f04 <BSP_SDRAM_MspInit+0x19c>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8009e5a:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8009e5c:	a909      	add	r1, sp, #36	; 0x24
 8009e5e:	f001 f809 	bl	800ae74 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8009e62:	f64f 033f 	movw	r3, #63551	; 0xf83f
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8009e66:	4828      	ldr	r0, [pc, #160]	; (8009f08 <BSP_SDRAM_MspInit+0x1a0>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8009e68:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8009e6a:	a909      	add	r1, sp, #36	; 0x24
 8009e6c:	f001 f802 	bl	800ae74 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 8009e70:	f248 1333 	movw	r3, #33075	; 0x8133
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8009e74:	4825      	ldr	r0, [pc, #148]	; (8009f0c <BSP_SDRAM_MspInit+0x1a4>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 8009e76:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8009e78:	a909      	add	r1, sp, #36	; 0x24
 8009e7a:	f000 fffb 	bl	800ae74 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8009e7e:	f64f 730c 	movw	r3, #65292	; 0xff0c
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8009e82:	4823      	ldr	r0, [pc, #140]	; (8009f10 <BSP_SDRAM_MspInit+0x1a8>)
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8009e84:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8009e86:	a909      	add	r1, sp, #36	; 0x24
 8009e88:	f000 fff4 	bl	800ae74 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 8009e8c:	f240 63ff 	movw	r3, #1791	; 0x6ff
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8009e90:	4820      	ldr	r0, [pc, #128]	; (8009f14 <BSP_SDRAM_MspInit+0x1ac>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 8009e92:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8009e94:	a909      	add	r1, sp, #36	; 0x24
 8009e96:	f000 ffed 	bl	800ae74 <HAL_GPIO_Init>
    dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
    dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
 8009e9a:	2280      	movs	r2, #128	; 0x80
 8009e9c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009ea0:	e9c4 2302 	strd	r2, r3, [r4, #8]
    dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
    dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 8009ea4:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8009ea8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8009eac:	e9c4 1304 	strd	r1, r3, [r4, #16]
    dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 8009eb0:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    dma_handle.Init.Mode                = DMA_NORMAL;
 8009eb4:	e9c4 3506 	strd	r3, r5, [r4, #24]
    dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
 8009eb8:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 8009ebc:	e9c4 3508 	strd	r3, r5, [r4, #32]
    dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 8009ec0:	2303      	movs	r3, #3
    dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 8009ec2:	e9c4 350a 	strd	r3, r5, [r4, #40]	; 0x28
    dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;
 8009ec6:	6325      	str	r5, [r4, #48]	; 0x30

    dma_handle.Instance = SDRAM_DMAx_STREAM;
 8009ec8:	4b13      	ldr	r3, [pc, #76]	; (8009f18 <BSP_SDRAM_MspInit+0x1b0>)

    /* Associate the DMA handle */
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 8009eca:	6334      	str	r4, [r6, #48]	; 0x30

    /* Deinitialize the stream for new transfer */
    HAL_DMA_DeInit(&dma_handle);
 8009ecc:	4620      	mov	r0, r4
    dma_handle.Instance = SDRAM_DMAx_STREAM;
 8009ece:	6023      	str	r3, [r4, #0]
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8009ed0:	6065      	str	r5, [r4, #4]
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 8009ed2:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_DMA_DeInit(&dma_handle);
 8009ed4:	f000 fa94 	bl	800a400 <HAL_DMA_DeInit>

    /* Configure the DMA stream */
    HAL_DMA_Init(&dma_handle);
 8009ed8:	4620      	mov	r0, r4
 8009eda:	f000 fa11 	bl	800a300 <HAL_DMA_Init>

    /* NVIC configuration for DMA transfer complete interrupt */
    HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 5, 0);
 8009ede:	2038      	movs	r0, #56	; 0x38
 8009ee0:	462a      	mov	r2, r5
 8009ee2:	2105      	movs	r1, #5
 8009ee4:	f000 f992 	bl	800a20c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
 8009ee8:	2038      	movs	r0, #56	; 0x38
 8009eea:	f000 f9c1 	bl	800a270 <HAL_NVIC_EnableIRQ>

  } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 8009eee:	b00e      	add	sp, #56	; 0x38
 8009ef0:	bd70      	pop	{r4, r5, r6, pc}
 8009ef2:	bf00      	nop
 8009ef4:	40023800 	.word	0x40023800
 8009ef8:	40020800 	.word	0x40020800
 8009efc:	2000fba0 	.word	0x2000fba0
 8009f00:	40020c00 	.word	0x40020c00
 8009f04:	40021000 	.word	0x40021000
 8009f08:	40021400 	.word	0x40021400
 8009f0c:	40021800 	.word	0x40021800
 8009f10:	40021c00 	.word	0x40021c00
 8009f14:	40022000 	.word	0x40022000
 8009f18:	40026410 	.word	0x40026410

08009f1c <BSP_SDRAM_Init>:
{
 8009f1c:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8009f1e:	4c19      	ldr	r4, [pc, #100]	; (8009f84 <BSP_SDRAM_Init+0x68>)
  Timing.LoadToActiveDelay    = 2;
 8009f20:	4d19      	ldr	r5, [pc, #100]	; (8009f88 <BSP_SDRAM_Init+0x6c>)
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8009f22:	4b1a      	ldr	r3, [pc, #104]	; (8009f8c <BSP_SDRAM_Init+0x70>)
 8009f24:	6023      	str	r3, [r4, #0]
  Timing.ExitSelfRefreshDelay = 7;
 8009f26:	2107      	movs	r1, #7
 8009f28:	2302      	movs	r3, #2
  Timing.SelfRefreshTime      = 4;
 8009f2a:	2204      	movs	r2, #4
  Timing.ExitSelfRefreshDelay = 7;
 8009f2c:	e9c5 3100 	strd	r3, r1, [r5]
  Timing.RowCycleDelay        = 7;
 8009f30:	e9c5 2102 	strd	r2, r1, [r5, #8]
  Timing.RPDelay              = 2;
 8009f34:	e9c5 3304 	strd	r3, r3, [r5, #16]
  Timing.RCDDelay             = 2;
 8009f38:	61ab      	str	r3, [r5, #24]
  sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
 8009f3a:	60e2      	str	r2, [r4, #12]
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8009f3c:	2340      	movs	r3, #64	; 0x40
 8009f3e:	2220      	movs	r2, #32
 8009f40:	e9c4 2304 	strd	r2, r3, [r4, #16]
  sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
 8009f44:	2100      	movs	r1, #0
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 8009f46:	f44f 73c0 	mov.w	r3, #384	; 0x180
  sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8009f4a:	e9c4 3106 	strd	r3, r1, [r4, #24]
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 8009f4e:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8009f52:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8009f56:	e9c4 0308 	strd	r0, r3, [r4, #32]
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 8009f5a:	4620      	mov	r0, r4
  sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8009f5c:	e9c4 1101 	strd	r1, r1, [r4, #4]
  sdramHandle.Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 8009f60:	62a1      	str	r1, [r4, #40]	; 0x28
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 8009f62:	f7ff ff01 	bl	8009d68 <BSP_SDRAM_MspInit>
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 8009f66:	4629      	mov	r1, r5
 8009f68:	4620      	mov	r0, r4
 8009f6a:	f002 fe79 	bl	800cc60 <HAL_SDRAM_Init>
 8009f6e:	4c08      	ldr	r4, [pc, #32]	; (8009f90 <BSP_SDRAM_Init+0x74>)
 8009f70:	3800      	subs	r0, #0
 8009f72:	bf18      	it	ne
 8009f74:	2001      	movne	r0, #1
 8009f76:	7020      	strb	r0, [r4, #0]
  BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
 8009f78:	f240 5069 	movw	r0, #1385	; 0x569
 8009f7c:	f7ff feaa 	bl	8009cd4 <BSP_SDRAM_Initialization_sequence>
}
 8009f80:	7820      	ldrb	r0, [r4, #0]
 8009f82:	bd38      	pop	{r3, r4, r5, pc}
 8009f84:	2000fc60 	.word	0x2000fc60
 8009f88:	2000fb84 	.word	0x2000fb84
 8009f8c:	a0000140 	.word	0xa0000140
 8009f90:	20000050 	.word	0x20000050

08009f94 <BSP_SDRAM_MspDeInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspDeInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8009f94:	b508      	push	{r3, lr}
    static DMA_HandleTypeDef dma_handle;

    if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8009f96:	b148      	cbz	r0, 8009fac <BSP_SDRAM_MspDeInit+0x18>
    {
      /* Disable NVIC configuration for DMA interrupt */
      HAL_NVIC_DisableIRQ(SDRAM_DMAx_IRQn);
 8009f98:	2038      	movs	r0, #56	; 0x38
 8009f9a:	f000 f977 	bl	800a28c <HAL_NVIC_DisableIRQ>

      /* Deinitialize the stream for new transfer */
      dma_handle.Instance = SDRAM_DMAx_STREAM;
 8009f9e:	4804      	ldr	r0, [pc, #16]	; (8009fb0 <BSP_SDRAM_MspDeInit+0x1c>)
 8009fa0:	4b04      	ldr	r3, [pc, #16]	; (8009fb4 <BSP_SDRAM_MspDeInit+0x20>)
 8009fa2:	6003      	str	r3, [r0, #0]

      /* GPIO pins clock, FMC clock and DMA clock can be shut down in the application
       by surcharging this __weak function */

    } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 8009fa4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      HAL_DMA_DeInit(&dma_handle);
 8009fa8:	f000 ba2a 	b.w	800a400 <HAL_DMA_DeInit>
}
 8009fac:	bd08      	pop	{r3, pc}
 8009fae:	bf00      	nop
 8009fb0:	2000fc00 	.word	0x2000fc00
 8009fb4:	40026410 	.word	0x40026410

08009fb8 <BSP_SDRAM_DeInit>:
{
 8009fb8:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8009fba:	4c07      	ldr	r4, [pc, #28]	; (8009fd8 <BSP_SDRAM_DeInit+0x20>)
 8009fbc:	4b07      	ldr	r3, [pc, #28]	; (8009fdc <BSP_SDRAM_DeInit+0x24>)
 8009fbe:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_DeInit(&sdramHandle) == HAL_OK)
 8009fc0:	4620      	mov	r0, r4
 8009fc2:	f002 fe6d 	bl	800cca0 <HAL_SDRAM_DeInit>
 8009fc6:	4d06      	ldr	r5, [pc, #24]	; (8009fe0 <BSP_SDRAM_DeInit+0x28>)
 8009fc8:	4601      	mov	r1, r0
 8009fca:	b918      	cbnz	r0, 8009fd4 <BSP_SDRAM_DeInit+0x1c>
    sdramstatus = SDRAM_OK;
 8009fcc:	7028      	strb	r0, [r5, #0]
   BSP_SDRAM_MspDeInit(&sdramHandle, (void *)NULL);
 8009fce:	4620      	mov	r0, r4
 8009fd0:	f7ff ffe0 	bl	8009f94 <BSP_SDRAM_MspDeInit>
}
 8009fd4:	7828      	ldrb	r0, [r5, #0]
 8009fd6:	bd38      	pop	{r3, r4, r5, pc}
 8009fd8:	2000fc60 	.word	0x2000fc60
 8009fdc:	a0000140 	.word	0xa0000140
 8009fe0:	20000051 	.word	0x20000051

08009fe4 <BSP_TS_Init>:
  * @param  ts_SizeX : Maximum X size of the TS area on LCD
  * @param  ts_SizeY : Maximum Y size of the TS area on LCD
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
{
 8009fe4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  /* Note : I2C_Address is un-initialized here, but is not used at all in init function */
  /* but the prototype of Init() is like that in template and should be respected       */

  /* Initialize the communication channel to sensor (I2C) if necessary */
  /* that is initialization is done only once after a power up         */
  ft6x06_ts_drv.Init(I2C_Address);
 8009fe8:	4d19      	ldr	r5, [pc, #100]	; (800a050 <BSP_TS_Init+0x6c>)
 8009fea:	f8df 8070 	ldr.w	r8, [pc, #112]	; 800a05c <BSP_TS_Init+0x78>
 8009fee:	682b      	ldr	r3, [r5, #0]
{
 8009ff0:	4604      	mov	r4, r0
  ft6x06_ts_drv.Init(I2C_Address);
 8009ff2:	f898 0000 	ldrb.w	r0, [r8]
{
 8009ff6:	460f      	mov	r7, r1
  ft6x06_ts_drv.Init(I2C_Address);
 8009ff8:	4798      	blx	r3

  ts_id1 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS);
 8009ffa:	686b      	ldr	r3, [r5, #4]
 8009ffc:	2054      	movs	r0, #84	; 0x54
 8009ffe:	4798      	blx	r3
  if(ts_id1 != FT6206_ID_VALUE)
 800a000:	b2c0      	uxtb	r0, r0
 800a002:	2811      	cmp	r0, #17
 800a004:	4646      	mov	r6, r8
 800a006:	46a9      	mov	r9, r5
 800a008:	d00b      	beq.n	800a022 <BSP_TS_Init+0x3e>
  {
    ts_id2 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS_A02);
 800a00a:	686b      	ldr	r3, [r5, #4]
 800a00c:	2070      	movs	r0, #112	; 0x70
 800a00e:	4798      	blx	r3
    I2C_Address    = TS_I2C_ADDRESS;    
  }
  
  /* Scan FT6xx6 TouchScreen IC controller ID register by I2C Read       */
  /* Verify this is a FT6206 or FT6336G, otherwise this is an error case */
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 800a010:	b2c0      	uxtb	r0, r0
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 800a012:	2370      	movs	r3, #112	; 0x70
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 800a014:	2811      	cmp	r0, #17
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 800a016:	f888 3000 	strb.w	r3, [r8]
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 800a01a:	d005      	beq.n	800a028 <BSP_TS_Init+0x44>

    } /* of if(ts_status == TS_OK) */
  }
  else
  {
    ts_status = TS_DEVICE_NOT_FOUND;
 800a01c:	2003      	movs	r0, #3
  }

  return (ts_status);
}
 800a01e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    I2C_Address    = TS_I2C_ADDRESS;    
 800a022:	2354      	movs	r3, #84	; 0x54
 800a024:	f888 3000 	strb.w	r3, [r8]
    ts_driver = &ft6x06_ts_drv;
 800a028:	4b0a      	ldr	r3, [pc, #40]	; (800a054 <BSP_TS_Init+0x70>)
 800a02a:	4d0b      	ldr	r5, [pc, #44]	; (800a058 <BSP_TS_Init+0x74>)
      ts_driver->Reset(I2C_Address);
 800a02c:	7830      	ldrb	r0, [r6, #0]
    ts_driver = &ft6x06_ts_drv;
 800a02e:	f8c5 9000 	str.w	r9, [r5]
      ts_orientation = TS_SWAP_XY | TS_SWAP_Y;                 
 800a032:	42bc      	cmp	r4, r7
 800a034:	bf34      	ite	cc
 800a036:	2101      	movcc	r1, #1
 800a038:	210c      	movcs	r1, #12
 800a03a:	7019      	strb	r1, [r3, #0]
      ts_driver->Reset(I2C_Address);
 800a03c:	f8d9 3008 	ldr.w	r3, [r9, #8]
 800a040:	4798      	blx	r3
      ts_driver->Start(I2C_Address);
 800a042:	682b      	ldr	r3, [r5, #0]
 800a044:	7830      	ldrb	r0, [r6, #0]
 800a046:	68db      	ldr	r3, [r3, #12]
 800a048:	4798      	blx	r3
  uint8_t ts_status = TS_OK;
 800a04a:	2000      	movs	r0, #0
 800a04c:	e7e7      	b.n	800a01e <BSP_TS_Init+0x3a>
 800a04e:	bf00      	nop
 800a050:	20000024 	.word	0x20000024
 800a054:	2000fcac 	.word	0x2000fcac
 800a058:	2000fca8 	.word	0x2000fca8
 800a05c:	2000fc94 	.word	0x2000fc94

0800a060 <BSP_TS_GetState>:
  * @brief  Returns status and positions of the touch screen.
  * @param  TS_State: Pointer to touch screen current state structure
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_GetState(TS_StateTypeDef *TS_State)
{
 800a060:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t area = 0;
  uint32_t event = 0;
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  /* Check and update the number of touches active detected */
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 800a064:	4c34      	ldr	r4, [pc, #208]	; (800a138 <BSP_TS_GetState+0xd8>)
 800a066:	4d35      	ldr	r5, [pc, #212]	; (800a13c <BSP_TS_GetState+0xdc>)
 800a068:	6823      	ldr	r3, [r4, #0]
{
 800a06a:	b085      	sub	sp, #20
 800a06c:	4606      	mov	r6, r0
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 800a06e:	691b      	ldr	r3, [r3, #16]
 800a070:	7828      	ldrb	r0, [r5, #0]
 800a072:	4798      	blx	r3
 800a074:	46a1      	mov	r9, r4
 800a076:	7030      	strb	r0, [r6, #0]
  if(TS_State->touchDetected)
 800a078:	9501      	str	r5, [sp, #4]
 800a07a:	b158      	cbz	r0, 800a094 <BSP_TS_GetState+0x34>
 800a07c:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800a148 <BSP_TS_GetState+0xe8>
 800a080:	4f2f      	ldr	r7, [pc, #188]	; (800a140 <BSP_TS_GetState+0xe0>)
 800a082:	f106 0b02 	add.w	fp, r6, #2
 800a086:	ad03      	add	r5, sp, #12
 800a088:	a902      	add	r1, sp, #8
  {
    for(index=0; index < TS_State->touchDetected; index++)
 800a08a:	f04f 0a00 	mov.w	sl, #0
 800a08e:	7833      	ldrb	r3, [r6, #0]
 800a090:	4553      	cmp	r3, sl
 800a092:	d803      	bhi.n	800a09c <BSP_TS_GetState+0x3c>
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  } /* end of if(TS_State->touchDetected != 0) */

  return (ts_status);
}
 800a094:	2000      	movs	r0, #0
 800a096:	b005      	add	sp, #20
 800a098:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      ts_driver->GetXY(I2C_Address, &(Raw_x[index]), &(Raw_y[index]));
 800a09c:	f8d9 3000 	ldr.w	r3, [r9]
 800a0a0:	9801      	ldr	r0, [sp, #4]
 800a0a2:	695b      	ldr	r3, [r3, #20]
 800a0a4:	7800      	ldrb	r0, [r0, #0]
 800a0a6:	9100      	str	r1, [sp, #0]
 800a0a8:	462a      	mov	r2, r5
 800a0aa:	4798      	blx	r3
      if(ts_orientation & TS_SWAP_XY)
 800a0ac:	4b25      	ldr	r3, [pc, #148]	; (800a144 <BSP_TS_GetState+0xe4>)
 800a0ae:	9900      	ldr	r1, [sp, #0]
 800a0b0:	781b      	ldrb	r3, [r3, #0]
 800a0b2:	f013 0f08 	tst.w	r3, #8
        tmp = Raw_x[index];
 800a0b6:	bf1f      	itttt	ne
 800a0b8:	880a      	ldrhne	r2, [r1, #0]
        Raw_x[index] = Raw_y[index]; 
 800a0ba:	8828      	ldrhne	r0, [r5, #0]
 800a0bc:	8008      	strhne	r0, [r1, #0]
        Raw_y[index] = tmp;
 800a0be:	802a      	strhne	r2, [r5, #0]
      if(ts_orientation & TS_SWAP_X)
 800a0c0:	079a      	lsls	r2, r3, #30
        Raw_x[index] = FT_6206_MAX_WIDTH - 1 - Raw_x[index];
 800a0c2:	bf41      	itttt	mi
 800a0c4:	880a      	ldrhmi	r2, [r1, #0]
 800a0c6:	f5c2 7247 	rsbmi	r2, r2, #796	; 0x31c
 800a0ca:	3203      	addmi	r2, #3
 800a0cc:	800a      	strhmi	r2, [r1, #0]
      if(ts_orientation & TS_SWAP_Y)
 800a0ce:	075b      	lsls	r3, r3, #29
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 800a0d0:	bf48      	it	mi
 800a0d2:	882b      	ldrhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 800a0d4:	f8d8 2000 	ldr.w	r2, [r8]
 800a0d8:	f831 0b02 	ldrh.w	r0, [r1], #2
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 800a0dc:	bf42      	ittt	mi
 800a0de:	f5c3 73ef 	rsbmi	r3, r3, #478	; 0x1de
 800a0e2:	3301      	addmi	r3, #1
 800a0e4:	802b      	strhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 800a0e6:	b293      	uxth	r3, r2
 800a0e8:	4290      	cmp	r0, r2
 800a0ea:	bf8c      	ite	hi
 800a0ec:	1ac3      	subhi	r3, r0, r3
 800a0ee:	1a1b      	subls	r3, r3, r0
 800a0f0:	b29b      	uxth	r3, r3
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 800a0f2:	f835 2b02 	ldrh.w	r2, [r5], #2
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 800a0f6:	9300      	str	r3, [sp, #0]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 800a0f8:	683b      	ldr	r3, [r7, #0]
 800a0fa:	b29c      	uxth	r4, r3
 800a0fc:	429a      	cmp	r2, r3
 800a0fe:	bf88      	it	hi
 800a100:	1b14      	subhi	r4, r2, r4
      if ((xDiff + yDiff) > 5)
 800a102:	9b00      	ldr	r3, [sp, #0]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 800a104:	bf98      	it	ls
 800a106:	1aa4      	subls	r4, r4, r2
 800a108:	b2a4      	uxth	r4, r4
      if ((xDiff + yDiff) > 5)
 800a10a:	441c      	add	r4, r3
 800a10c:	46c4      	mov	ip, r8
 800a10e:	2c05      	cmp	r4, #5
        _x[index] = Raw_x[index];
 800a110:	bfc8      	it	gt
 800a112:	f8c8 0000 	strgt.w	r0, [r8]
      TS_State->touchX[index] = _x[index];
 800a116:	f8dc 3000 	ldr.w	r3, [ip]
        _y[index] = Raw_y[index];
 800a11a:	bfc8      	it	gt
 800a11c:	603a      	strgt	r2, [r7, #0]
      TS_State->touchX[index] = _x[index];
 800a11e:	46be      	mov	lr, r7
 800a120:	f82b 3b02 	strh.w	r3, [fp], #2
      TS_State->touchY[index] = _y[index];
 800a124:	f8de 3000 	ldr.w	r3, [lr]
 800a128:	f8ab 3002 	strh.w	r3, [fp, #2]
    for(index=0; index < TS_State->touchDetected; index++)
 800a12c:	f108 0804 	add.w	r8, r8, #4
 800a130:	3704      	adds	r7, #4
 800a132:	f10a 0a01 	add.w	sl, sl, #1
 800a136:	e7aa      	b.n	800a08e <BSP_TS_GetState+0x2e>
 800a138:	2000fca8 	.word	0x2000fca8
 800a13c:	2000fc94 	.word	0x2000fc94
 800a140:	2000fca0 	.word	0x2000fca0
 800a144:	2000fcac 	.word	0x2000fcac
 800a148:	2000fc98 	.word	0x2000fc98

0800a14c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800a14c:	4b05      	ldr	r3, [pc, #20]	; (800a164 <SystemInit+0x18>)
 800a14e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 800a152:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800a156:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800a15a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800a15e:	609a      	str	r2, [r3, #8]
#endif
}
 800a160:	4770      	bx	lr
 800a162:	bf00      	nop
 800a164:	e000ed00 	.word	0xe000ed00

0800a168 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800a168:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800a16a:	4b0b      	ldr	r3, [pc, #44]	; (800a198 <HAL_Init+0x30>)
 800a16c:	681a      	ldr	r2, [r3, #0]
 800a16e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a172:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800a174:	681a      	ldr	r2, [r3, #0]
 800a176:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a17a:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800a17c:	681a      	ldr	r2, [r3, #0]
 800a17e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a182:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800a184:	2003      	movs	r0, #3
 800a186:	f000 f82f 	bl	800a1e8 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800a18a:	2000      	movs	r0, #0
 800a18c:	f7f7 fe68 	bl	8001e60 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800a190:	f7f7 fc08 	bl	80019a4 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800a194:	2000      	movs	r0, #0
 800a196:	bd08      	pop	{r3, pc}
 800a198:	40023c00 	.word	0x40023c00

0800a19c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800a19c:	4a03      	ldr	r2, [pc, #12]	; (800a1ac <HAL_IncTick+0x10>)
 800a19e:	4b04      	ldr	r3, [pc, #16]	; (800a1b0 <HAL_IncTick+0x14>)
 800a1a0:	6811      	ldr	r1, [r2, #0]
 800a1a2:	781b      	ldrb	r3, [r3, #0]
 800a1a4:	440b      	add	r3, r1
 800a1a6:	6013      	str	r3, [r2, #0]
}
 800a1a8:	4770      	bx	lr
 800a1aa:	bf00      	nop
 800a1ac:	20020fe0 	.word	0x20020fe0
 800a1b0:	20000058 	.word	0x20000058

0800a1b4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800a1b4:	4b01      	ldr	r3, [pc, #4]	; (800a1bc <HAL_GetTick+0x8>)
 800a1b6:	6818      	ldr	r0, [r3, #0]
}
 800a1b8:	4770      	bx	lr
 800a1ba:	bf00      	nop
 800a1bc:	20020fe0 	.word	0x20020fe0

0800a1c0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800a1c0:	b538      	push	{r3, r4, r5, lr}
 800a1c2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800a1c4:	f7ff fff6 	bl	800a1b4 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800a1c8:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 800a1ca:	bf1c      	itt	ne
 800a1cc:	4b05      	ldrne	r3, [pc, #20]	; (800a1e4 <HAL_Delay+0x24>)
 800a1ce:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 800a1d0:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 800a1d2:	bf18      	it	ne
 800a1d4:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800a1d6:	f7ff ffed 	bl	800a1b4 <HAL_GetTick>
 800a1da:	1b43      	subs	r3, r0, r5
 800a1dc:	42a3      	cmp	r3, r4
 800a1de:	d3fa      	bcc.n	800a1d6 <HAL_Delay+0x16>
  {
  }
}
 800a1e0:	bd38      	pop	{r3, r4, r5, pc}
 800a1e2:	bf00      	nop
 800a1e4:	20000058 	.word	0x20000058

0800a1e8 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800a1e8:	4907      	ldr	r1, [pc, #28]	; (800a208 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800a1ea:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800a1ec:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800a1f0:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800a1f2:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800a1f4:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800a1f8:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800a1fa:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800a1fc:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800a200:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 800a204:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800a206:	4770      	bx	lr
 800a208:	e000ed00 	.word	0xe000ed00

0800a20c <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800a20c:	4b16      	ldr	r3, [pc, #88]	; (800a268 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800a20e:	b530      	push	{r4, r5, lr}
 800a210:	68dc      	ldr	r4, [r3, #12]
 800a212:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800a216:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800a21a:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800a21c:	2d04      	cmp	r5, #4
 800a21e:	bf28      	it	cs
 800a220:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800a222:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800a224:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800a228:	bf8c      	ite	hi
 800a22a:	3c03      	subhi	r4, #3
 800a22c:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800a22e:	fa03 f505 	lsl.w	r5, r3, r5
 800a232:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800a236:	40a3      	lsls	r3, r4
 800a238:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800a23c:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 800a23e:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800a240:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a244:	bfac      	ite	ge
 800a246:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a24a:	4a08      	ldrlt	r2, [pc, #32]	; (800a26c <HAL_NVIC_SetPriority+0x60>)
 800a24c:	ea4f 1303 	mov.w	r3, r3, lsl #4
 800a250:	bfb8      	it	lt
 800a252:	f000 000f 	andlt.w	r0, r0, #15
 800a256:	b2db      	uxtb	r3, r3
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a258:	bfaa      	itet	ge
 800a25a:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a25e:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a260:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800a264:	bd30      	pop	{r4, r5, pc}
 800a266:	bf00      	nop
 800a268:	e000ed00 	.word	0xe000ed00
 800a26c:	e000ed14 	.word	0xe000ed14

0800a270 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800a270:	2800      	cmp	r0, #0
 800a272:	db08      	blt.n	800a286 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800a274:	0942      	lsrs	r2, r0, #5
 800a276:	2301      	movs	r3, #1
 800a278:	f000 001f 	and.w	r0, r0, #31
 800a27c:	fa03 f000 	lsl.w	r0, r3, r0
 800a280:	4b01      	ldr	r3, [pc, #4]	; (800a288 <HAL_NVIC_EnableIRQ+0x18>)
 800a282:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800a286:	4770      	bx	lr
 800a288:	e000e100 	.word	0xe000e100

0800a28c <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800a28c:	2800      	cmp	r0, #0
 800a28e:	db0d      	blt.n	800a2ac <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800a290:	0943      	lsrs	r3, r0, #5
 800a292:	2201      	movs	r2, #1
 800a294:	f000 001f 	and.w	r0, r0, #31
 800a298:	fa02 f000 	lsl.w	r0, r2, r0
 800a29c:	3320      	adds	r3, #32
 800a29e:	4a04      	ldr	r2, [pc, #16]	; (800a2b0 <HAL_NVIC_DisableIRQ+0x24>)
 800a2a0:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 800a2a4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800a2a8:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 800a2ac:	4770      	bx	lr
 800a2ae:	bf00      	nop
 800a2b0:	e000e100 	.word	0xe000e100

0800a2b4 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 800a2b4:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800a2b6:	4604      	mov	r4, r0
 800a2b8:	b150      	cbz	r0, 800a2d0 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800a2ba:	7943      	ldrb	r3, [r0, #5]
 800a2bc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a2c0:	b913      	cbnz	r3, 800a2c8 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800a2c2:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 800a2c4:	f7f7 fb8e 	bl	80019e4 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800a2c8:	2301      	movs	r3, #1
 800a2ca:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800a2cc:	2000      	movs	r0, #0
}
 800a2ce:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800a2d0:	2001      	movs	r0, #1
 800a2d2:	e7fc      	b.n	800a2ce <HAL_CRC_Init+0x1a>

0800a2d4 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 800a2d4:	6803      	ldr	r3, [r0, #0]
{
 800a2d6:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 800a2d8:	4c08      	ldr	r4, [pc, #32]	; (800a2fc <DMA_CalcBaseAndBitshift+0x28>)
{
 800a2da:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 800a2dc:	b2d9      	uxtb	r1, r3
 800a2de:	3910      	subs	r1, #16
 800a2e0:	2018      	movs	r0, #24
 800a2e2:	fbb1 f0f0 	udiv	r0, r1, r0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 800a2e6:	5c20      	ldrb	r0, [r4, r0]
 800a2e8:	65d0      	str	r0, [r2, #92]	; 0x5c
  
  if (stream_number > 3U)
 800a2ea:	f423 707f 	bic.w	r0, r3, #1020	; 0x3fc
 800a2ee:	f020 0003 	bic.w	r0, r0, #3
 800a2f2:	295f      	cmp	r1, #95	; 0x5f
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 800a2f4:	bf88      	it	hi
 800a2f6:	3004      	addhi	r0, #4
 800a2f8:	6590      	str	r0, [r2, #88]	; 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
 800a2fa:	bd10      	pop	{r4, pc}
 800a2fc:	08028ad9 	.word	0x08028ad9

0800a300 <HAL_DMA_Init>:
{
 800a300:	b570      	push	{r4, r5, r6, lr}
 800a302:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800a304:	f7ff ff56 	bl	800a1b4 <HAL_GetTick>
 800a308:	4605      	mov	r5, r0
  if(hdma == NULL)
 800a30a:	2c00      	cmp	r4, #0
 800a30c:	d073      	beq.n	800a3f6 <HAL_DMA_Init+0xf6>
  hdma->State = HAL_DMA_STATE_BUSY;
 800a30e:	2302      	movs	r3, #2
 800a310:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 800a314:	6822      	ldr	r2, [r4, #0]
  __HAL_UNLOCK(hdma);
 800a316:	2300      	movs	r3, #0
 800a318:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 800a31c:	6813      	ldr	r3, [r2, #0]
 800a31e:	f023 0301 	bic.w	r3, r3, #1
 800a322:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 800a324:	6821      	ldr	r1, [r4, #0]
 800a326:	680b      	ldr	r3, [r1, #0]
 800a328:	07d8      	lsls	r0, r3, #31
 800a32a:	d42f      	bmi.n	800a38c <HAL_DMA_Init+0x8c>
  tmp = hdma->Instance->CR;
 800a32c:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 800a32e:	4d33      	ldr	r5, [pc, #204]	; (800a3fc <HAL_DMA_Init+0xfc>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800a330:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 800a332:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 800a334:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 800a338:	4313      	orrs	r3, r2
 800a33a:	68e2      	ldr	r2, [r4, #12]
 800a33c:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800a33e:	6922      	ldr	r2, [r4, #16]
 800a340:	4313      	orrs	r3, r2
 800a342:	6962      	ldr	r2, [r4, #20]
 800a344:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800a346:	69e2      	ldr	r2, [r4, #28]
 800a348:	4303      	orrs	r3, r0
 800a34a:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 800a34c:	6a22      	ldr	r2, [r4, #32]
 800a34e:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800a350:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a352:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 800a354:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 800a358:	bf02      	ittt	eq
 800a35a:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 800a35e:	4335      	orreq	r5, r6
 800a360:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 800a362:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 800a364:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800a366:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 800a368:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 800a36c:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800a370:	d133      	bne.n	800a3da <HAL_DMA_Init+0xda>
    tmp |= hdma->Init.FIFOThreshold;
 800a372:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 800a374:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 800a376:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 800a378:	b37d      	cbz	r5, 800a3da <HAL_DMA_Init+0xda>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 800a37a:	b990      	cbnz	r0, 800a3a2 <HAL_DMA_Init+0xa2>
  {
    switch (tmp)
 800a37c:	2a01      	cmp	r2, #1
 800a37e:	d021      	beq.n	800a3c4 <HAL_DMA_Init+0xc4>
 800a380:	f032 0202 	bics.w	r2, r2, #2
 800a384:	d129      	bne.n	800a3da <HAL_DMA_Init+0xda>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 800a386:	01ea      	lsls	r2, r5, #7
 800a388:	d527      	bpl.n	800a3da <HAL_DMA_Init+0xda>
 800a38a:	e01e      	b.n	800a3ca <HAL_DMA_Init+0xca>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800a38c:	f7ff ff12 	bl	800a1b4 <HAL_GetTick>
 800a390:	1b40      	subs	r0, r0, r5
 800a392:	2805      	cmp	r0, #5
 800a394:	d9c6      	bls.n	800a324 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800a396:	2320      	movs	r3, #32
 800a398:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 800a39a:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 800a39c:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 800a3a0:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 800a3a2:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 800a3a6:	d114      	bne.n	800a3d2 <HAL_DMA_Init+0xd2>
    switch (tmp)
 800a3a8:	2a03      	cmp	r2, #3
 800a3aa:	d816      	bhi.n	800a3da <HAL_DMA_Init+0xda>
 800a3ac:	a001      	add	r0, pc, #4	; (adr r0, 800a3b4 <HAL_DMA_Init+0xb4>)
 800a3ae:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 800a3b2:	bf00      	nop
 800a3b4:	0800a3cb 	.word	0x0800a3cb
 800a3b8:	0800a387 	.word	0x0800a387
 800a3bc:	0800a3cb 	.word	0x0800a3cb
 800a3c0:	0800a3c5 	.word	0x0800a3c5
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 800a3c4:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 800a3c8:	d107      	bne.n	800a3da <HAL_DMA_Init+0xda>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 800a3ca:	2340      	movs	r3, #64	; 0x40
 800a3cc:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 800a3ce:	2001      	movs	r0, #1
 800a3d0:	e7e4      	b.n	800a39c <HAL_DMA_Init+0x9c>
    switch (tmp)
 800a3d2:	2a02      	cmp	r2, #2
 800a3d4:	d9f9      	bls.n	800a3ca <HAL_DMA_Init+0xca>
 800a3d6:	2a03      	cmp	r2, #3
 800a3d8:	d0d5      	beq.n	800a386 <HAL_DMA_Init+0x86>
  hdma->Instance->FCR = tmp;
 800a3da:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 800a3dc:	4620      	mov	r0, r4
 800a3de:	f7ff ff79 	bl	800a2d4 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800a3e2:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 800a3e4:	233f      	movs	r3, #63	; 0x3f
 800a3e6:	4093      	lsls	r3, r2
 800a3e8:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800a3ea:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 800a3ec:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800a3ee:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 800a3f0:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 800a3f4:	e7d4      	b.n	800a3a0 <HAL_DMA_Init+0xa0>
    return HAL_ERROR;
 800a3f6:	2001      	movs	r0, #1
 800a3f8:	e7d2      	b.n	800a3a0 <HAL_DMA_Init+0xa0>
 800a3fa:	bf00      	nop
 800a3fc:	f010803f 	.word	0xf010803f

0800a400 <HAL_DMA_DeInit>:
{
 800a400:	b538      	push	{r3, r4, r5, lr}
  if(hdma == NULL)
 800a402:	4605      	mov	r5, r0
 800a404:	b320      	cbz	r0, 800a450 <HAL_DMA_DeInit+0x50>
  if(hdma->State == HAL_DMA_STATE_BUSY)
 800a406:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800a40a:	2b02      	cmp	r3, #2
 800a40c:	b2dc      	uxtb	r4, r3
 800a40e:	d01d      	beq.n	800a44c <HAL_DMA_DeInit+0x4c>
  __HAL_DMA_DISABLE(hdma);
 800a410:	6803      	ldr	r3, [r0, #0]
 800a412:	681a      	ldr	r2, [r3, #0]
 800a414:	f022 0201 	bic.w	r2, r2, #1
  hdma->Instance->CR   = 0U;
 800a418:	2400      	movs	r4, #0
  __HAL_DMA_DISABLE(hdma);
 800a41a:	601a      	str	r2, [r3, #0]
  hdma->Instance->FCR  = 0x00000021U;
 800a41c:	2221      	movs	r2, #33	; 0x21
  hdma->Instance->CR   = 0U;
 800a41e:	601c      	str	r4, [r3, #0]
  hdma->Instance->NDTR = 0U;
 800a420:	605c      	str	r4, [r3, #4]
  hdma->Instance->PAR  = 0U;
 800a422:	609c      	str	r4, [r3, #8]
  hdma->Instance->M0AR = 0U;
 800a424:	60dc      	str	r4, [r3, #12]
  hdma->Instance->M1AR = 0U;
 800a426:	611c      	str	r4, [r3, #16]
  hdma->Instance->FCR  = 0x00000021U;
 800a428:	615a      	str	r2, [r3, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 800a42a:	f7ff ff53 	bl	800a2d4 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800a42e:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 800a430:	233f      	movs	r3, #63	; 0x3f
 800a432:	4093      	lsls	r3, r2
  hdma->XferHalfCpltCallback = NULL;
 800a434:	e9c5 440f 	strd	r4, r4, [r5, #60]	; 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
 800a438:	e9c5 4411 	strd	r4, r4, [r5, #68]	; 0x44
  hdma->XferAbortCallback = NULL;
 800a43c:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800a440:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800a442:	656c      	str	r4, [r5, #84]	; 0x54
  __HAL_UNLOCK(hdma);
 800a444:	f885 4034 	strb.w	r4, [r5, #52]	; 0x34
  hdma->State = HAL_DMA_STATE_RESET;
 800a448:	f885 4035 	strb.w	r4, [r5, #53]	; 0x35
}
 800a44c:	4620      	mov	r0, r4
 800a44e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800a450:	2401      	movs	r4, #1
 800a452:	e7fb      	b.n	800a44c <HAL_DMA_DeInit+0x4c>

0800a454 <HAL_DMA_Abort>:
{
 800a454:	b570      	push	{r4, r5, r6, lr}
 800a456:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 800a458:	6d86      	ldr	r6, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 800a45a:	f7ff feab 	bl	800a1b4 <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800a45e:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 800a462:	2b02      	cmp	r3, #2
  uint32_t tickstart = HAL_GetTick();
 800a464:	4605      	mov	r5, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800a466:	d006      	beq.n	800a476 <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800a468:	2380      	movs	r3, #128	; 0x80
 800a46a:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 800a46c:	2300      	movs	r3, #0
 800a46e:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    return HAL_ERROR;
 800a472:	2001      	movs	r0, #1
}
 800a474:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 800a476:	6823      	ldr	r3, [r4, #0]
 800a478:	681a      	ldr	r2, [r3, #0]
 800a47a:	f022 0216 	bic.w	r2, r2, #22
 800a47e:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 800a480:	695a      	ldr	r2, [r3, #20]
 800a482:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800a486:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 800a488:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a48a:	b90a      	cbnz	r2, 800a490 <HAL_DMA_Abort+0x3c>
 800a48c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800a48e:	b11a      	cbz	r2, 800a498 <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 800a490:	681a      	ldr	r2, [r3, #0]
 800a492:	f022 0208 	bic.w	r2, r2, #8
 800a496:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 800a498:	681a      	ldr	r2, [r3, #0]
 800a49a:	f022 0201 	bic.w	r2, r2, #1
 800a49e:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 800a4a0:	6823      	ldr	r3, [r4, #0]
 800a4a2:	681b      	ldr	r3, [r3, #0]
 800a4a4:	f013 0301 	ands.w	r3, r3, #1
 800a4a8:	d10a      	bne.n	800a4c0 <HAL_DMA_Abort+0x6c>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 800a4aa:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 800a4ac:	223f      	movs	r2, #63	; 0x3f
 800a4ae:	408a      	lsls	r2, r1
 800a4b0:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 800a4b2:	2201      	movs	r2, #1
 800a4b4:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 800a4b8:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  return HAL_OK;
 800a4bc:	4618      	mov	r0, r3
 800a4be:	e7d9      	b.n	800a474 <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800a4c0:	f7ff fe78 	bl	800a1b4 <HAL_GetTick>
 800a4c4:	1b40      	subs	r0, r0, r5
 800a4c6:	2805      	cmp	r0, #5
 800a4c8:	d9ea      	bls.n	800a4a0 <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800a4ca:	2320      	movs	r3, #32
 800a4cc:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800a4ce:	2003      	movs	r0, #3
        __HAL_UNLOCK(hdma);
 800a4d0:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800a4d2:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 800a4d6:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 800a4da:	e7cb      	b.n	800a474 <HAL_DMA_Abort+0x20>

0800a4dc <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800a4dc:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 800a4de:	4604      	mov	r4, r0
 800a4e0:	b330      	cbz	r0, 800a530 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 800a4e2:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800a4e6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a4ea:	b91b      	cbnz	r3, 800a4f4 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800a4ec:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 800a4f0:	f7f7 fa90 	bl	8001a14 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800a4f4:	6822      	ldr	r2, [r4, #0]
 800a4f6:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800a4f8:	2302      	movs	r3, #2
 800a4fa:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800a4fe:	6813      	ldr	r3, [r2, #0]
 800a500:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800a504:	430b      	orrs	r3, r1
 800a506:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800a508:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800a50a:	68a1      	ldr	r1, [r4, #8]
 800a50c:	f023 0307 	bic.w	r3, r3, #7
 800a510:	430b      	orrs	r3, r1
 800a512:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800a514:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800a516:	68e1      	ldr	r1, [r4, #12]
 800a518:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800a51c:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800a520:	430b      	orrs	r3, r1
 800a522:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800a524:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800a526:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800a528:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800a52a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 800a52e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800a530:	2001      	movs	r0, #1
 800a532:	e7fc      	b.n	800a52e <HAL_DMA2D_Init+0x52>

0800a534 <HAL_DMA2D_LineEventCallback>:
 800a534:	4770      	bx	lr

0800a536 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 800a536:	4770      	bx	lr

0800a538 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800a538:	6803      	ldr	r3, [r0, #0]
{
 800a53a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800a53c:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800a53e:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800a540:	07f2      	lsls	r2, r6, #31
{
 800a542:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800a544:	d514      	bpl.n	800a570 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 800a546:	05e9      	lsls	r1, r5, #23
 800a548:	d512      	bpl.n	800a570 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 800a54a:	681a      	ldr	r2, [r3, #0]
 800a54c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800a550:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 800a552:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 800a554:	f042 0201 	orr.w	r2, r2, #1
 800a558:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800a55a:	2201      	movs	r2, #1
 800a55c:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800a55e:	2304      	movs	r3, #4
 800a560:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800a564:	2300      	movs	r3, #0
 800a566:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800a56a:	6943      	ldr	r3, [r0, #20]
 800a56c:	b103      	cbz	r3, 800a570 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800a56e:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 800a570:	06b2      	lsls	r2, r6, #26
 800a572:	d516      	bpl.n	800a5a2 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 800a574:	04ab      	lsls	r3, r5, #18
 800a576:	d514      	bpl.n	800a5a2 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 800a578:	6823      	ldr	r3, [r4, #0]
 800a57a:	681a      	ldr	r2, [r3, #0]
 800a57c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800a580:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 800a582:	2220      	movs	r2, #32
 800a584:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 800a586:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a588:	f043 0302 	orr.w	r3, r3, #2
 800a58c:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800a58e:	2304      	movs	r3, #4
 800a590:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800a594:	2300      	movs	r3, #0
 800a596:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800a59a:	6963      	ldr	r3, [r4, #20]
 800a59c:	b10b      	cbz	r3, 800a5a2 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800a59e:	4620      	mov	r0, r4
 800a5a0:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 800a5a2:	0730      	lsls	r0, r6, #28
 800a5a4:	d516      	bpl.n	800a5d4 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 800a5a6:	0529      	lsls	r1, r5, #20
 800a5a8:	d514      	bpl.n	800a5d4 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800a5aa:	6823      	ldr	r3, [r4, #0]
 800a5ac:	681a      	ldr	r2, [r3, #0]
 800a5ae:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a5b2:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 800a5b4:	2208      	movs	r2, #8
 800a5b6:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800a5b8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a5ba:	f043 0304 	orr.w	r3, r3, #4
 800a5be:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800a5c0:	2304      	movs	r3, #4
 800a5c2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800a5c6:	2300      	movs	r3, #0
 800a5c8:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800a5cc:	6963      	ldr	r3, [r4, #20]
 800a5ce:	b10b      	cbz	r3, 800a5d4 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800a5d0:	4620      	mov	r0, r4
 800a5d2:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 800a5d4:	0772      	lsls	r2, r6, #29
 800a5d6:	d50b      	bpl.n	800a5f0 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 800a5d8:	056b      	lsls	r3, r5, #21
 800a5da:	d509      	bpl.n	800a5f0 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800a5dc:	6823      	ldr	r3, [r4, #0]
 800a5de:	681a      	ldr	r2, [r3, #0]
 800a5e0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a5e4:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800a5e6:	2204      	movs	r2, #4
 800a5e8:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 800a5ea:	4620      	mov	r0, r4
 800a5ec:	f7ff ffa2 	bl	800a534 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 800a5f0:	07b0      	lsls	r0, r6, #30
 800a5f2:	d514      	bpl.n	800a61e <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 800a5f4:	05a9      	lsls	r1, r5, #22
 800a5f6:	d512      	bpl.n	800a61e <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800a5f8:	6823      	ldr	r3, [r4, #0]
 800a5fa:	681a      	ldr	r2, [r3, #0]
 800a5fc:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800a600:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 800a602:	2202      	movs	r2, #2
 800a604:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800a606:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a608:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800a60a:	2301      	movs	r3, #1
 800a60c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800a610:	2300      	movs	r3, #0
 800a612:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 800a616:	6923      	ldr	r3, [r4, #16]
 800a618:	b10b      	cbz	r3, 800a61e <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 800a61a:	4620      	mov	r0, r4
 800a61c:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 800a61e:	06f2      	lsls	r2, r6, #27
 800a620:	d513      	bpl.n	800a64a <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 800a622:	04eb      	lsls	r3, r5, #19
 800a624:	d511      	bpl.n	800a64a <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800a626:	6823      	ldr	r3, [r4, #0]
 800a628:	681a      	ldr	r2, [r3, #0]
 800a62a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800a62e:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 800a630:	2210      	movs	r2, #16
 800a632:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800a634:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a636:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800a638:	2301      	movs	r3, #1
 800a63a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800a63e:	2300      	movs	r3, #0
 800a640:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 800a644:	4620      	mov	r0, r4
 800a646:	f7ff ff76 	bl	800a536 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 800a64a:	bd70      	pop	{r4, r5, r6, pc}

0800a64c <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 800a64c:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800a64e:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800a652:	2b01      	cmp	r3, #1
 800a654:	f04f 0302 	mov.w	r3, #2
 800a658:	d02b      	beq.n	800a6b2 <HAL_DMA2D_ConfigLayer+0x66>
 800a65a:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800a65c:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 800a660:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800a664:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 800a668:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 800a66c:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 800a66e:	4f18      	ldr	r7, [pc, #96]	; (800a6d0 <HAL_DMA2D_ConfigLayer+0x84>)
 800a670:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800a674:	3c09      	subs	r4, #9
 800a676:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800a678:	bf9c      	itt	ls
 800a67a:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 800a67e:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800a680:	ea4f 1601 	mov.w	r6, r1, lsl #4
 800a684:	6803      	ldr	r3, [r0, #0]
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 800a686:	bf88      	it	hi
 800a688:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 800a68c:	b999      	cbnz	r1, 800a6b6 <HAL_DMA2D_ConfigLayer+0x6a>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800a68e:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800a690:	4039      	ands	r1, r7
 800a692:	430a      	orrs	r2, r1
 800a694:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800a696:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800a698:	6982      	ldr	r2, [r0, #24]
 800a69a:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800a69c:	d803      	bhi.n	800a6a6 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800a69e:	6a42      	ldr	r2, [r0, #36]	; 0x24
 800a6a0:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 800a6a4:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800a6a6:	2301      	movs	r3, #1
 800a6a8:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800a6ac:	2300      	movs	r3, #0
 800a6ae:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 800a6b2:	4618      	mov	r0, r3

  return HAL_OK;
}
 800a6b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800a6b6:	69d9      	ldr	r1, [r3, #28]
 800a6b8:	4039      	ands	r1, r7
 800a6ba:	430a      	orrs	r2, r1
 800a6bc:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800a6be:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800a6c0:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800a6c2:	6992      	ldr	r2, [r2, #24]
 800a6c4:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 800a6c6:	bf9c      	itt	ls
 800a6c8:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 800a6cc:	621d      	strls	r5, [r3, #32]
 800a6ce:	e7ea      	b.n	800a6a6 <HAL_DMA2D_ConfigLayer+0x5a>
 800a6d0:	00fcfff0 	.word	0x00fcfff0

0800a6d4 <DSI_ShortWrite>:
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                        uint32_t ChannelID,
                                        uint32_t Mode,
                                        uint32_t Param1,
                                        uint32_t Param2)
{
 800a6d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a6d8:	4607      	mov	r7, r0
 800a6da:	460d      	mov	r5, r1
 800a6dc:	4614      	mov	r4, r2
 800a6de:	461e      	mov	r6, r3
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 800a6e0:	f7ff fd68 	bl	800a1b4 <HAL_GetTick>
 800a6e4:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800a6e6:	683a      	ldr	r2, [r7, #0]
 800a6e8:	6f53      	ldr	r3, [r2, #116]	; 0x74
 800a6ea:	07db      	lsls	r3, r3, #31
 800a6ec:	d50a      	bpl.n	800a704 <DSI_ShortWrite+0x30>
    }
  }

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 800a6ee:	ea44 2306 	orr.w	r3, r4, r6, lsl #8
 800a6f2:	9c06      	ldr	r4, [sp, #24]
 800a6f4:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 800a6f8:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 800a6fc:	66d4      	str	r4, [r2, #108]	; 0x6c

  return HAL_OK;
 800a6fe:	2000      	movs	r0, #0
}
 800a700:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((HAL_GetTick() - tickstart ) > DSI_TIMEOUT_VALUE)
 800a704:	f7ff fd56 	bl	800a1b4 <HAL_GetTick>
 800a708:	eba0 0008 	sub.w	r0, r0, r8
 800a70c:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800a710:	d9e9      	bls.n	800a6e6 <DSI_ShortWrite+0x12>
      return HAL_TIMEOUT;
 800a712:	2003      	movs	r0, #3
 800a714:	e7f4      	b.n	800a700 <DSI_ShortWrite+0x2c>

0800a716 <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a716:	7c03      	ldrb	r3, [r0, #16]
 800a718:	2b01      	cmp	r3, #1
 800a71a:	d05d      	beq.n	800a7d8 <HAL_DSI_ConfigErrorMonitor+0xc2>

  hdsi->Instance->IER[0U] = 0U;
 800a71c:	6803      	ldr	r3, [r0, #0]
 800a71e:	2200      	movs	r2, #0
 800a720:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 800a724:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 800a728:	07ca      	lsls	r2, r1, #31
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 800a72a:	bf48      	it	mi
 800a72c:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
  hdsi->ErrorMsk = ActiveErrors;
 800a730:	6181      	str	r1, [r0, #24]
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 800a732:	bf42      	ittt	mi
 800a734:	ea6f 4212 	mvnmi.w	r2, r2, lsr #16
 800a738:	ea6f 4202 	mvnmi.w	r2, r2, lsl #16
 800a73c:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 800a740:	078a      	lsls	r2, r1, #30
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 800a742:	bf42      	ittt	mi
 800a744:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
 800a748:	f442 12f8 	orrmi.w	r2, r2, #2031616	; 0x1f0000
 800a74c:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 800a750:	074a      	lsls	r2, r1, #29
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 800a752:	bf42      	ittt	mi
 800a754:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a758:	f042 0201 	orrmi.w	r2, r2, #1
 800a75c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 800a760:	070a      	lsls	r2, r1, #28
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 800a762:	bf42      	ittt	mi
 800a764:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a768:	f042 0202 	orrmi.w	r2, r2, #2
 800a76c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 800a770:	06ca      	lsls	r2, r1, #27
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 800a772:	bf42      	ittt	mi
 800a774:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a778:	f042 020c 	orrmi.w	r2, r2, #12
 800a77c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 800a780:	068a      	lsls	r2, r1, #26
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 800a782:	bf42      	ittt	mi
 800a784:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a788:	f042 0210 	orrmi.w	r2, r2, #16
 800a78c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 800a790:	064a      	lsls	r2, r1, #25
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 800a792:	bf42      	ittt	mi
 800a794:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a798:	f042 0220 	orrmi.w	r2, r2, #32
 800a79c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 800a7a0:	060a      	lsls	r2, r1, #24
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 800a7a2:	bf42      	ittt	mi
 800a7a4:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a7a8:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 800a7ac:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 800a7b0:	05ca      	lsls	r2, r1, #23
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 800a7b2:	bf42      	ittt	mi
 800a7b4:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a7b8:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 800a7bc:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 800a7c0:	058a      	lsls	r2, r1, #22
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 800a7c2:	bf42      	ittt	mi
 800a7c4:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a7c8:	f442 52f8 	orrmi.w	r2, r2, #7936	; 0x1f00
 800a7cc:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 800a7d0:	2300      	movs	r3, #0
 800a7d2:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a7d4:	4618      	mov	r0, r3
 800a7d6:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800a7d8:	2002      	movs	r0, #2
}
 800a7da:	4770      	bx	lr

0800a7dc <HAL_DSI_Init>:
{
 800a7dc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a7de:	460d      	mov	r5, r1
  if (hdsi == NULL)
 800a7e0:	4604      	mov	r4, r0
 800a7e2:	2800      	cmp	r0, #0
 800a7e4:	f000 80a7 	beq.w	800a936 <HAL_DSI_Init+0x15a>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 800a7e8:	7c43      	ldrb	r3, [r0, #17]
 800a7ea:	b90b      	cbnz	r3, 800a7f0 <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 800a7ec:	f7f7 f934 	bl	8001a58 <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 800a7f0:	2303      	movs	r3, #3
 800a7f2:	7463      	strb	r3, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 800a7f4:	2300      	movs	r3, #0
 800a7f6:	9300      	str	r3, [sp, #0]
 800a7f8:	6823      	ldr	r3, [r4, #0]
 800a7fa:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 800a7fe:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800a802:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 800a806:	f8d3 3430 	ldr.w	r3, [r3, #1072]	; 0x430
 800a80a:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800a80e:	9300      	str	r3, [sp, #0]
 800a810:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 800a812:	f7ff fccf 	bl	800a1b4 <HAL_GetTick>
 800a816:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 800a818:	6822      	ldr	r2, [r4, #0]
 800a81a:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 800a81e:	04d9      	lsls	r1, r3, #19
 800a820:	d578      	bpl.n	800a914 <HAL_DSI_Init+0x138>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 800a822:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800a826:	f423 335e 	bic.w	r3, r3, #227328	; 0x37800
 800a82a:	f423 73fe 	bic.w	r3, r3, #508	; 0x1fc
 800a82e:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << 2U) | ((PLLInit->PLLIDF) << 11U) | ((PLLInit->PLLODF) << 16U));
 800a832:	e9d5 0300 	ldrd	r0, r3, [r5]
 800a836:	02db      	lsls	r3, r3, #11
 800a838:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
 800a83c:	68a8      	ldr	r0, [r5, #8]
 800a83e:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
 800a842:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800a846:	430b      	orrs	r3, r1
 800a848:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 800a84c:	2300      	movs	r3, #0
 800a84e:	9301      	str	r3, [sp, #4]
 800a850:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800a854:	f043 0301 	orr.w	r3, r3, #1
 800a858:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
 800a85c:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800a860:	f003 0301 	and.w	r3, r3, #1
 800a864:	9301      	str	r3, [sp, #4]
 800a866:	9b01      	ldr	r3, [sp, #4]
  tickstart = HAL_GetTick();
 800a868:	f7ff fca4 	bl	800a1b4 <HAL_GetTick>
 800a86c:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 800a86e:	6823      	ldr	r3, [r4, #0]
 800a870:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800a874:	05d2      	lsls	r2, r2, #23
 800a876:	d557      	bpl.n	800a928 <HAL_DSI_Init+0x14c>
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 800a878:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 800a87c:	6861      	ldr	r1, [r4, #4]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 800a87e:	6828      	ldr	r0, [r5, #0]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 800a880:	f042 0206 	orr.w	r2, r2, #6
 800a884:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 800a888:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 800a88c:	f022 0203 	bic.w	r2, r2, #3
 800a890:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 800a894:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 800a898:	430a      	orrs	r2, r1
 800a89a:	f042 0201 	orr.w	r2, r2, #1
 800a89e:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 800a8a2:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 800a8a6:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 800a8a8:	f022 0203 	bic.w	r2, r2, #3
 800a8ac:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 800a8b0:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800a8b4:	430a      	orrs	r2, r1
 800a8b6:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 800a8ba:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 800a8bc:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 800a8be:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800a8c2:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 800a8c4:	689a      	ldr	r2, [r3, #8]
 800a8c6:	430a      	orrs	r2, r1
 800a8c8:	609a      	str	r2, [r3, #8]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 800a8ca:	686a      	ldr	r2, [r5, #4]
 800a8cc:	2a01      	cmp	r2, #1
 800a8ce:	bf38      	it	cc
 800a8d0:	2201      	movcc	r2, #1
 800a8d2:	4611      	mov	r1, r2
 800a8d4:	4a19      	ldr	r2, [pc, #100]	; (800a93c <HAL_DSI_Init+0x160>)
 800a8d6:	434a      	muls	r2, r1
 800a8d8:	68a9      	ldr	r1, [r5, #8]
 800a8da:	f001 0103 	and.w	r1, r1, #3
 800a8de:	408a      	lsls	r2, r1
 800a8e0:	f44f 51fa 	mov.w	r1, #8000	; 0x1f40
 800a8e4:	4341      	muls	r1, r0
 800a8e6:	fbb2 f2f1 	udiv	r2, r2, r1
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 800a8ea:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 800a8ee:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a8f2:	f8c3 1418 	str.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 800a8f6:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 800a8fa:	2000      	movs	r0, #0
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 800a8fc:	430a      	orrs	r2, r1
 800a8fe:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 800a902:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 800a906:	f8c3 00c8 	str.w	r0, [r3, #200]	; 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 800a90a:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 800a90c:	6160      	str	r0, [r4, #20]
  hdsi->ErrorMsk = 0U;
 800a90e:	61a0      	str	r0, [r4, #24]
  hdsi->State = HAL_DSI_STATE_READY;
 800a910:	7463      	strb	r3, [r4, #17]
  return HAL_OK;
 800a912:	e007      	b.n	800a924 <HAL_DSI_Init+0x148>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800a914:	f7ff fc4e 	bl	800a1b4 <HAL_GetTick>
 800a918:	1b80      	subs	r0, r0, r6
 800a91a:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800a91e:	f67f af7b 	bls.w	800a818 <HAL_DSI_Init+0x3c>
      return HAL_TIMEOUT;
 800a922:	2003      	movs	r0, #3
}
 800a924:	b002      	add	sp, #8
 800a926:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800a928:	f7ff fc44 	bl	800a1b4 <HAL_GetTick>
 800a92c:	1b80      	subs	r0, r0, r6
 800a92e:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800a932:	d99c      	bls.n	800a86e <HAL_DSI_Init+0x92>
 800a934:	e7f5      	b.n	800a922 <HAL_DSI_Init+0x146>
    return HAL_ERROR;
 800a936:	2001      	movs	r0, #1
 800a938:	e7f4      	b.n	800a924 <HAL_DSI_Init+0x148>
 800a93a:	bf00      	nop
 800a93c:	003d0900 	.word	0x003d0900

0800a940 <HAL_DSI_ErrorCallback>:
 800a940:	4770      	bx	lr

0800a942 <HAL_DSI_IRQHandler>:
void HAL_DSI_IRQHandler(DSI_HandleTypeDef *hdsi)
{
  uint32_t ErrorStatus0, ErrorStatus1;

  /* Tearing Effect Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800a942:	6803      	ldr	r3, [r0, #0]
 800a944:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800a948:	07d1      	lsls	r1, r2, #31
{
 800a94a:	b510      	push	{r4, lr}
 800a94c:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800a94e:	d508      	bpl.n	800a962 <HAL_DSI_IRQHandler+0x20>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 800a950:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800a954:	07d2      	lsls	r2, r2, #31
 800a956:	d504      	bpl.n	800a962 <HAL_DSI_IRQHandler+0x20>
    {
      /* Clear the Tearing Effect Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 800a958:	2201      	movs	r2, #1
 800a95a:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Tearing Effect callback */
      hdsi->TearingEffectCallback(hdsi);
#else
      /*Call legacy Tearing Effect callback*/
      HAL_DSI_TearingEffectCallback(hdsi);
 800a95e:	f7f6 f8d7 	bl	8000b10 <HAL_DSI_TearingEffectCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* End of Refresh Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 800a962:	6823      	ldr	r3, [r4, #0]
 800a964:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800a968:	0791      	lsls	r1, r2, #30
 800a96a:	d509      	bpl.n	800a980 <HAL_DSI_IRQHandler+0x3e>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 800a96c:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800a970:	0792      	lsls	r2, r2, #30
 800a972:	d505      	bpl.n	800a980 <HAL_DSI_IRQHandler+0x3e>
    {
      /* Clear the End of Refresh Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 800a974:	2202      	movs	r2, #2
 800a976:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered End of refresh callback */
      hdsi->EndOfRefreshCallback(hdsi);
#else
      /*Call Legacy End of refresh callback */
      HAL_DSI_EndOfRefreshCallback(hdsi);
 800a97a:	4620      	mov	r0, r4
 800a97c:	f7f6 f8fc 	bl	8000b78 <HAL_DSI_EndOfRefreshCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* Error Interrupts management ***********************************************/
  if (hdsi->ErrorMsk != 0U)
 800a980:	69a3      	ldr	r3, [r4, #24]
 800a982:	2b00      	cmp	r3, #0
 800a984:	d04e      	beq.n	800aa24 <HAL_DSI_IRQHandler+0xe2>
  {
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 800a986:	6821      	ldr	r1, [r4, #0]
 800a988:	f8d1 20bc 	ldr.w	r2, [r1, #188]	; 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 800a98c:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 800a990:	f8d1 00c0 	ldr.w	r0, [r1, #192]	; 0xc0
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 800a994:	401a      	ands	r2, r3
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 800a996:	f8d1 30c8 	ldr.w	r3, [r1, #200]	; 0xc8

    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 800a99a:	b291      	uxth	r1, r2
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 800a99c:	4003      	ands	r3, r0
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 800a99e:	b119      	cbz	r1, 800a9a8 <HAL_DSI_IRQHandler+0x66>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 800a9a0:	6961      	ldr	r1, [r4, #20]
 800a9a2:	f041 0101 	orr.w	r1, r1, #1
 800a9a6:	6161      	str	r1, [r4, #20]
    }

    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 800a9a8:	f412 1ff8 	tst.w	r2, #2031616	; 0x1f0000
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 800a9ac:	bf1e      	ittt	ne
 800a9ae:	6962      	ldrne	r2, [r4, #20]
 800a9b0:	f042 0202 	orrne.w	r2, r2, #2
 800a9b4:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 800a9b6:	07d8      	lsls	r0, r3, #31
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 800a9b8:	bf42      	ittt	mi
 800a9ba:	6962      	ldrmi	r2, [r4, #20]
 800a9bc:	f042 0204 	orrmi.w	r2, r2, #4
 800a9c0:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 800a9c2:	0799      	lsls	r1, r3, #30
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 800a9c4:	bf42      	ittt	mi
 800a9c6:	6962      	ldrmi	r2, [r4, #20]
 800a9c8:	f042 0208 	orrmi.w	r2, r2, #8
 800a9cc:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 800a9ce:	f013 0f0c 	tst.w	r3, #12
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 800a9d2:	bf1e      	ittt	ne
 800a9d4:	6962      	ldrne	r2, [r4, #20]
 800a9d6:	f042 0210 	orrne.w	r2, r2, #16
 800a9da:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 800a9dc:	06da      	lsls	r2, r3, #27
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 800a9de:	bf42      	ittt	mi
 800a9e0:	6962      	ldrmi	r2, [r4, #20]
 800a9e2:	f042 0220 	orrmi.w	r2, r2, #32
 800a9e6:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 800a9e8:	0698      	lsls	r0, r3, #26
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 800a9ea:	bf42      	ittt	mi
 800a9ec:	6962      	ldrmi	r2, [r4, #20]
 800a9ee:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 800a9f2:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 800a9f4:	0659      	lsls	r1, r3, #25
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 800a9f6:	bf42      	ittt	mi
 800a9f8:	6962      	ldrmi	r2, [r4, #20]
 800a9fa:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 800a9fe:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 800aa00:	061a      	lsls	r2, r3, #24
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 800aa02:	bf42      	ittt	mi
 800aa04:	6962      	ldrmi	r2, [r4, #20]
 800aa06:	f442 7280 	orrmi.w	r2, r2, #256	; 0x100
 800aa0a:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 800aa0c:	f413 5ff8 	tst.w	r3, #7936	; 0x1f00
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 800aa10:	bf1e      	ittt	ne
 800aa12:	6963      	ldrne	r3, [r4, #20]
 800aa14:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 800aa18:	6163      	strne	r3, [r4, #20]
    }

    /* Check only selected errors */
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 800aa1a:	6963      	ldr	r3, [r4, #20]
 800aa1c:	b113      	cbz	r3, 800aa24 <HAL_DSI_IRQHandler+0xe2>
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Error callback */
      hdsi->ErrorCallback(hdsi);
#else
      /*Call Legacy Error callback */
      HAL_DSI_ErrorCallback(hdsi);
 800aa1e:	4620      	mov	r0, r4
 800aa20:	f7ff ff8e 	bl	800a940 <HAL_DSI_ErrorCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }
}
 800aa24:	bd10      	pop	{r4, pc}

0800aa26 <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800aa26:	7c03      	ldrb	r3, [r0, #16]
 800aa28:	2b01      	cmp	r3, #1
 800aa2a:	d00b      	beq.n	800aa44 <HAL_DSI_SetGenericVCID+0x1e>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 800aa2c:	6803      	ldr	r3, [r0, #0]
 800aa2e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800aa30:	f022 0203 	bic.w	r2, r2, #3
 800aa34:	631a      	str	r2, [r3, #48]	; 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 800aa36:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800aa38:	4311      	orrs	r1, r2
 800aa3a:	6319      	str	r1, [r3, #48]	; 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800aa3c:	2300      	movs	r3, #0
 800aa3e:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800aa40:	4618      	mov	r0, r3
 800aa42:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800aa44:	2002      	movs	r0, #2
}
 800aa46:	4770      	bx	lr

0800aa48 <HAL_DSI_ConfigAdaptedCommandMode>:
  * @param  CmdCfg  pointer to a DSI_CmdCfgTypeDef structure that contains
  *                 the DSI command mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
 800aa48:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800aa4a:	7c03      	ldrb	r3, [r0, #16]
 800aa4c:	2b01      	cmp	r3, #1
 800aa4e:	d06a      	beq.n	800ab26 <HAL_DSI_ConfigAdaptedCommandMode+0xde>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 800aa50:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 800aa52:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 800aa54:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800aa56:	f042 0201 	orr.w	r2, r2, #1
 800aa5a:	635a      	str	r2, [r3, #52]	; 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 800aa5c:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800aa60:	f022 0201 	bic.w	r2, r2, #1
 800aa64:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 800aa68:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800aa6c:	f042 0201 	orr.w	r2, r2, #1
 800aa70:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 800aa74:	68da      	ldr	r2, [r3, #12]
 800aa76:	f022 0203 	bic.w	r2, r2, #3
 800aa7a:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 800aa7c:	68da      	ldr	r2, [r3, #12]
 800aa7e:	4322      	orrs	r2, r4
 800aa80:	60da      	str	r2, [r3, #12]

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 800aa82:	695a      	ldr	r2, [r3, #20]
 800aa84:	f022 0207 	bic.w	r2, r2, #7
 800aa88:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 800aa8a:	e9d1 5206 	ldrd	r5, r2, [r1, #24]
 800aa8e:	432a      	orrs	r2, r5
 800aa90:	694d      	ldr	r5, [r1, #20]
 800aa92:	695c      	ldr	r4, [r3, #20]
 800aa94:	432a      	orrs	r2, r5
 800aa96:	4322      	orrs	r2, r4
 800aa98:	615a      	str	r2, [r3, #20]

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 800aa9a:	691a      	ldr	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 800aa9c:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 800aa9e:	f022 020f 	bic.w	r2, r2, #15
 800aaa2:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 800aaa4:	691c      	ldr	r4, [r3, #16]
 800aaa6:	432c      	orrs	r4, r5
 800aaa8:	611c      	str	r4, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 800aaaa:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 800aaae:	f024 040e 	bic.w	r4, r4, #14
 800aab2:	f8c3 4400 	str.w	r4, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 800aab6:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 800aaba:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 800aabc:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 800aac0:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 800aac4:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800aac6:	0c12      	lsrs	r2, r2, #16
 800aac8:	0412      	lsls	r2, r2, #16
 800aaca:	665a      	str	r2, [r3, #100]	; 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 800aacc:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800aace:	4322      	orrs	r2, r4
 800aad0:	665a      	str	r2, [r3, #100]	; 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 800aad2:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800aad6:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800aada:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 800aade:	e9d1 2503 	ldrd	r2, r5, [r1, #12]
 800aae2:	432a      	orrs	r2, r5
 800aae4:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 800aae6:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 800aaea:	432a      	orrs	r2, r5
 800aaec:	6a0d      	ldr	r5, [r1, #32]
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 800aaee:	6a89      	ldr	r1, [r1, #40]	; 0x28
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 800aaf0:	432a      	orrs	r2, r5
 800aaf2:	4322      	orrs	r2, r4
 800aaf4:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 800aaf8:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800aafa:	f022 0201 	bic.w	r2, r2, #1
 800aafe:	669a      	str	r2, [r3, #104]	; 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 800ab00:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800ab02:	430a      	orrs	r2, r1
 800ab04:	669a      	str	r2, [r3, #104]	; 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 800ab06:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800ab0a:	f042 0201 	orr.w	r2, r2, #1
 800ab0e:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 800ab12:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800ab16:	f042 0202 	orr.w	r2, r2, #2
 800ab1a:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800ab1e:	2300      	movs	r3, #0
 800ab20:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800ab22:	4618      	mov	r0, r3
}
 800ab24:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800ab26:	2002      	movs	r0, #2
 800ab28:	e7fc      	b.n	800ab24 <HAL_DSI_ConfigAdaptedCommandMode+0xdc>
	...

0800ab2c <HAL_DSI_ConfigCommand>:
  * @param  LPCmd  pointer to a DSI_LPCmdTypeDef structure that contains
  *                the DSI command transmission mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
 800ab2c:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800ab2e:	7c03      	ldrb	r3, [r0, #16]
 800ab30:	2b01      	cmp	r3, #1
 800ab32:	d02a      	beq.n	800ab8a <HAL_DSI_ConfigCommand+0x5e>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 800ab34:	6802      	ldr	r2, [r0, #0]
 800ab36:	4b16      	ldr	r3, [pc, #88]	; (800ab90 <HAL_DSI_ConfigCommand+0x64>)
 800ab38:	6e94      	ldr	r4, [r2, #104]	; 0x68
 800ab3a:	4023      	ands	r3, r4
 800ab3c:	6693      	str	r3, [r2, #104]	; 0x68
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800ab3e:	e9d1 3500 	ldrd	r3, r5, [r1]
 800ab42:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 800ab44:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800ab46:	6e94      	ldr	r4, [r2, #104]	; 0x68
                           LPCmd->LPGenShortWriteOneP | \
 800ab48:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 800ab4a:	68cd      	ldr	r5, [r1, #12]
 800ab4c:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 800ab4e:	690d      	ldr	r5, [r1, #16]
 800ab50:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 800ab52:	694d      	ldr	r5, [r1, #20]
 800ab54:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 800ab56:	698d      	ldr	r5, [r1, #24]
 800ab58:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 800ab5a:	69cd      	ldr	r5, [r1, #28]
 800ab5c:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 800ab5e:	6a0d      	ldr	r5, [r1, #32]
 800ab60:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 800ab62:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 800ab64:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 800ab66:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800ab68:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 800ab6a:	6acd      	ldr	r5, [r1, #44]	; 0x2c
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 800ab6c:	6b09      	ldr	r1, [r1, #48]	; 0x30
                           LPCmd->LPDcsLongWrite      | \
 800ab6e:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800ab70:	4323      	orrs	r3, r4
 800ab72:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 800ab74:	6e93      	ldr	r3, [r2, #104]	; 0x68
 800ab76:	f023 0302 	bic.w	r3, r3, #2
 800ab7a:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 800ab7c:	6e93      	ldr	r3, [r2, #104]	; 0x68
 800ab7e:	430b      	orrs	r3, r1
 800ab80:	6693      	str	r3, [r2, #104]	; 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800ab82:	2300      	movs	r3, #0
 800ab84:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800ab86:	4618      	mov	r0, r3
}
 800ab88:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800ab8a:	2002      	movs	r0, #2
 800ab8c:	e7fc      	b.n	800ab88 <HAL_DSI_ConfigCommand+0x5c>
 800ab8e:	bf00      	nop
 800ab90:	fef080ff 	.word	0xfef080ff

0800ab94 <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800ab94:	7c03      	ldrb	r3, [r0, #16]
 800ab96:	2b01      	cmp	r3, #1
 800ab98:	d00b      	beq.n	800abb2 <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 800ab9a:	6803      	ldr	r3, [r0, #0]
 800ab9c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ab9e:	f022 021f 	bic.w	r2, r2, #31
 800aba2:	62da      	str	r2, [r3, #44]	; 0x2c
  hdsi->Instance->PCR |= FlowControl;
 800aba4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800aba6:	4311      	orrs	r1, r2
 800aba8:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800abaa:	2300      	movs	r3, #0
 800abac:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800abae:	4618      	mov	r0, r3
 800abb0:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800abb2:	2002      	movs	r0, #2
}
 800abb4:	4770      	bx	lr

0800abb6 <HAL_DSI_ConfigPhyTimer>:
  * @param  PhyTimers  DSI_PHY_TimerTypeDef structure that contains
  *                    the DSI PHY timing parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
 800abb6:	b530      	push	{r4, r5, lr}
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 800abb8:	7c03      	ldrb	r3, [r0, #16]
 800abba:	2b01      	cmp	r3, #1
 800abbc:	d035      	beq.n	800ac2a <HAL_DSI_ConfigPhyTimer+0x74>

  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 800abbe:	e9d1 2400 	ldrd	r2, r4, [r1]
     This timings are configured by the HS2LP_TIME and LP2HS_TIME in the DSI Host Clock Lane Timer Configuration Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 800abc2:	6803      	ldr	r3, [r0, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 800abc4:	4294      	cmp	r4, r2
 800abc6:	bf38      	it	cc
 800abc8:	4614      	movcc	r4, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 800abca:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 800abce:	f002 22fc 	and.w	r2, r2, #4227922944	; 0xfc00fc00
 800abd2:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 800abd6:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 800abda:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800abde:	4322      	orrs	r2, r4
 800abe0:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 800abe4:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 800abe8:	f402 4200 	and.w	r2, r2, #32768	; 0x8000
 800abec:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 800abf0:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 800abf4:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800abf6:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 800abfa:	690d      	ldr	r5, [r1, #16]
 800abfc:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 800ac00:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800ac02:	432a      	orrs	r2, r5
 800ac04:	4322      	orrs	r2, r4
 800ac06:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 800ac0a:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800ac0e:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800ac12:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 800ac16:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800ac1a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800ac1e:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800ac22:	2300      	movs	r3, #0
 800ac24:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800ac26:	4618      	mov	r0, r3
}
 800ac28:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800ac2a:	2002      	movs	r0, #2
 800ac2c:	e7fc      	b.n	800ac28 <HAL_DSI_ConfigPhyTimer+0x72>
	...

0800ac30 <HAL_DSI_ConfigHostTimeouts>:
  * @param  HostTimeouts  DSI_HOST_TimeoutTypeDef structure that contains
  *                       the DSI host timeout parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
 800ac30:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800ac32:	7c03      	ldrb	r3, [r0, #16]
 800ac34:	2b01      	cmp	r3, #1
 800ac36:	d05c      	beq.n	800acf2 <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800ac38:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800ac3a:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800ac3c:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800ac3e:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800ac40:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800ac44:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800ac46:	689a      	ldr	r2, [r3, #8]
 800ac48:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 800ac4c:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 800ac4e:	6f9a      	ldr	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 800ac50:	684c      	ldr	r4, [r1, #4]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 800ac52:	b292      	uxth	r2, r2
 800ac54:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 800ac56:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 800ac58:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800ac5c:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 800ac5e:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 800ac60:	4a25      	ldr	r2, [pc, #148]	; (800acf8 <HAL_DSI_ConfigHostTimeouts+0xc8>)
 800ac62:	4014      	ands	r4, r2
 800ac64:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800ac66:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 800ac68:	432c      	orrs	r4, r5
 800ac6a:	679c      	str	r4, [r3, #120]	; 0x78

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 800ac6c:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800ac6e:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 800ac70:	4014      	ands	r4, r2
 800ac72:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800ac74:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 800ac76:	432c      	orrs	r4, r5
 800ac78:	67dc      	str	r4, [r3, #124]	; 0x7c

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 800ac7a:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800ac7e:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 800ac80:	4014      	ands	r4, r2
 800ac82:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800ac86:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 800ac8a:	432c      	orrs	r4, r5
 800ac8c:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 800ac90:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 800ac94:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 800ac96:	4014      	ands	r4, r2
 800ac98:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 800ac9c:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800aca0:	432c      	orrs	r4, r5
 800aca2:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 800aca6:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800acaa:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 800acae:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 800acb2:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800acb6:	698d      	ldr	r5, [r1, #24]
 800acb8:	432c      	orrs	r4, r5
 800acba:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 800acbe:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 800acc2:	69cd      	ldr	r5, [r1, #28]

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 800acc4:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 800acc6:	4014      	ands	r4, r2
 800acc8:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 800accc:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 800acd0:	432c      	orrs	r4, r5
 800acd2:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 800acd6:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 800acda:	4022      	ands	r2, r4
 800acdc:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 800ace0:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 800ace4:	430a      	orrs	r2, r1
 800ace6:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800acea:	2300      	movs	r3, #0
 800acec:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800acee:	4618      	mov	r0, r3
}
 800acf0:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800acf2:	2002      	movs	r0, #2
 800acf4:	e7fc      	b.n	800acf0 <HAL_DSI_ConfigHostTimeouts+0xc0>
 800acf6:	bf00      	nop
 800acf8:	ffff0000 	.word	0xffff0000

0800acfc <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800acfc:	7c03      	ldrb	r3, [r0, #16]
 800acfe:	2b01      	cmp	r3, #1
{
 800ad00:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 800ad02:	d01c      	beq.n	800ad3e <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 800ad04:	6802      	ldr	r2, [r0, #0]
 800ad06:	2300      	movs	r3, #0
 800ad08:	9300      	str	r3, [sp, #0]
 800ad0a:	6851      	ldr	r1, [r2, #4]
 800ad0c:	f041 0101 	orr.w	r1, r1, #1
 800ad10:	6051      	str	r1, [r2, #4]
 800ad12:	6851      	ldr	r1, [r2, #4]
 800ad14:	f001 0101 	and.w	r1, r1, #1
 800ad18:	9100      	str	r1, [sp, #0]
 800ad1a:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 800ad1c:	9301      	str	r3, [sp, #4]
 800ad1e:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
 800ad22:	f041 0108 	orr.w	r1, r1, #8
 800ad26:	f8c2 1404 	str.w	r1, [r2, #1028]	; 0x404
 800ad2a:	f8d2 2404 	ldr.w	r2, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800ad2e:	7403      	strb	r3, [r0, #16]
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 800ad30:	f002 0208 	and.w	r2, r2, #8
 800ad34:	9201      	str	r2, [sp, #4]
 800ad36:	9a01      	ldr	r2, [sp, #4]

  return HAL_OK;
 800ad38:	4618      	mov	r0, r3
}
 800ad3a:	b002      	add	sp, #8
 800ad3c:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800ad3e:	2002      	movs	r0, #2
 800ad40:	e7fb      	b.n	800ad3a <HAL_DSI_Start+0x3e>

0800ad42 <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800ad42:	7c03      	ldrb	r3, [r0, #16]
 800ad44:	2b01      	cmp	r3, #1

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 800ad46:	bf1f      	itttt	ne
 800ad48:	6802      	ldrne	r2, [r0, #0]
 800ad4a:	f8d2 3404 	ldrne.w	r3, [r2, #1028]	; 0x404
 800ad4e:	f043 0304 	orrne.w	r3, r3, #4
 800ad52:	f8c2 3404 	strne.w	r3, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800ad56:	bf1d      	ittte	ne
 800ad58:	2300      	movne	r3, #0
 800ad5a:	7403      	strbne	r3, [r0, #16]

  return HAL_OK;
 800ad5c:	4618      	movne	r0, r3
  __HAL_LOCK(hdsi);
 800ad5e:	2002      	moveq	r0, #2
}
 800ad60:	4770      	bx	lr

0800ad62 <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 800ad62:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 800ad64:	7c05      	ldrb	r5, [r0, #16]
 800ad66:	2d01      	cmp	r5, #1
{
 800ad68:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 800ad6a:	d009      	beq.n	800ad80 <HAL_DSI_ShortWrite+0x1e>
 800ad6c:	2501      	movs	r5, #1
 800ad6e:	7405      	strb	r5, [r0, #16]

   status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 800ad70:	9d06      	ldr	r5, [sp, #24]
 800ad72:	9500      	str	r5, [sp, #0]
 800ad74:	f7ff fcae 	bl	800a6d4 <DSI_ShortWrite>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800ad78:	2300      	movs	r3, #0
 800ad7a:	7423      	strb	r3, [r4, #16]

  return status;
}
 800ad7c:	b003      	add	sp, #12
 800ad7e:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800ad80:	2002      	movs	r0, #2
 800ad82:	e7fb      	b.n	800ad7c <HAL_DSI_ShortWrite+0x1a>

0800ad84 <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 800ad84:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ad88:	461c      	mov	r4, r3
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 800ad8a:	7c03      	ldrb	r3, [r0, #16]
 800ad8c:	2b01      	cmp	r3, #1
{
 800ad8e:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	; 0x28
 800ad92:	4606      	mov	r6, r0
 800ad94:	460f      	mov	r7, r1
 800ad96:	4615      	mov	r5, r2
  __HAL_LOCK(hdsi);
 800ad98:	d053      	beq.n	800ae42 <HAL_DSI_LongWrite+0xbe>
 800ad9a:	2301      	movs	r3, #1
 800ad9c:	7403      	strb	r3, [r0, #16]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 800ad9e:	f7ff fa09 	bl	800a1b4 <HAL_GetTick>
 800ada2:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800ada4:	6832      	ldr	r2, [r6, #0]
 800ada6:	6f53      	ldr	r3, [r2, #116]	; 0x74
 800ada8:	f013 0a01 	ands.w	sl, r3, #1
 800adac:	d01a      	beq.n	800ade4 <HAL_DSI_LongWrite+0x60>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 800adae:	2c03      	cmp	r4, #3
 800adb0:	4621      	mov	r1, r4

  for (count = 0U; count < nbBytes; count++)
 800adb2:	f04f 0000 	mov.w	r0, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 800adb6:	bf28      	it	cs
 800adb8:	2103      	movcs	r1, #3
  for (count = 0U; count < nbBytes; count++)
 800adba:	4288      	cmp	r0, r1
 800adbc:	d11e      	bne.n	800adfc <HAL_DSI_LongWrite+0x78>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 800adbe:	1a23      	subs	r3, r4, r0
  hdsi->Instance->GPDR = fifoword;
 800adc0:	f8c2 9070 	str.w	r9, [r2, #112]	; 0x70
  pparams += nbBytes;
 800adc4:	4440      	add	r0, r8
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 800adc6:	bb1b      	cbnz	r3, 800ae10 <HAL_DSI_LongWrite+0x8c>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 800adc8:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 800adca:	ea45 1187 	orr.w	r1, r5, r7, lsl #6
 800adce:	0225      	lsls	r5, r4, #8
 800add0:	b2ad      	uxth	r5, r5
 800add2:	0224      	lsls	r4, r4, #8
 800add4:	430d      	orrs	r5, r1
 800add6:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 800adda:	432c      	orrs	r4, r5
 800addc:	66d4      	str	r4, [r2, #108]	; 0x6c
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
 800adde:	4618      	mov	r0, r3
  __HAL_UNLOCK(hdsi);
 800ade0:	7433      	strb	r3, [r6, #16]
  return HAL_OK;
 800ade2:	e009      	b.n	800adf8 <HAL_DSI_LongWrite+0x74>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800ade4:	f7ff f9e6 	bl	800a1b4 <HAL_GetTick>
 800ade8:	eba0 000b 	sub.w	r0, r0, fp
 800adec:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800adf0:	d9d8      	bls.n	800ada4 <HAL_DSI_LongWrite+0x20>
      __HAL_UNLOCK(hdsi);
 800adf2:	f886 a010 	strb.w	sl, [r6, #16]
      return HAL_TIMEOUT;
 800adf6:	2003      	movs	r0, #3
}
 800adf8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 800adfc:	f818 3000 	ldrb.w	r3, [r8, r0]
 800ae00:	3001      	adds	r0, #1
 800ae02:	ea4f 0cc0 	mov.w	ip, r0, lsl #3
 800ae06:	fa03 f30c 	lsl.w	r3, r3, ip
 800ae0a:	ea49 0903 	orr.w	r9, r9, r3
  for (count = 0U; count < nbBytes; count++)
 800ae0e:	e7d4      	b.n	800adba <HAL_DSI_LongWrite+0x36>
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800ae10:	2b04      	cmp	r3, #4
    fifoword = 0U;
 800ae12:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800ae16:	469e      	mov	lr, r3
    for (count = 0U; count < nbBytes; count++)
 800ae18:	4661      	mov	r1, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800ae1a:	bf28      	it	cs
 800ae1c:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800ae20:	f810 8001 	ldrb.w	r8, [r0, r1]
 800ae24:	ea4f 09c1 	mov.w	r9, r1, lsl #3
    for (count = 0U; count < nbBytes; count++)
 800ae28:	3101      	adds	r1, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800ae2a:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 800ae2e:	458e      	cmp	lr, r1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800ae30:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 800ae34:	d1f4      	bne.n	800ae20 <HAL_DSI_LongWrite+0x9c>
    hdsi->Instance->GPDR = fifoword;
 800ae36:	f8c2 c070 	str.w	ip, [r2, #112]	; 0x70
    uicounter -= nbBytes;
 800ae3a:	eba3 030e 	sub.w	r3, r3, lr
    pparams += nbBytes;
 800ae3e:	4470      	add	r0, lr
 800ae40:	e7c1      	b.n	800adc6 <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 800ae42:	2002      	movs	r0, #2
 800ae44:	e7d8      	b.n	800adf8 <HAL_DSI_LongWrite+0x74>

0800ae46 <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800ae46:	7c03      	ldrb	r3, [r0, #16]
 800ae48:	2b01      	cmp	r3, #1
 800ae4a:	d010      	beq.n	800ae6e <HAL_DSI_SetLowPowerRXFilter+0x28>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 800ae4c:	6803      	ldr	r3, [r0, #0]
 800ae4e:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 800ae52:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 800ae56:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 800ae5a:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 800ae5e:	ea42 6141 	orr.w	r1, r2, r1, lsl #25
 800ae62:	f8c3 141c 	str.w	r1, [r3, #1052]	; 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800ae66:	2300      	movs	r3, #0
 800ae68:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800ae6a:	4618      	mov	r0, r3
 800ae6c:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800ae6e:	2002      	movs	r0, #2
}
 800ae70:	4770      	bx	lr
	...

0800ae74 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800ae74:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800ae78:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 800b03c <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800ae7c:	4a6d      	ldr	r2, [pc, #436]	; (800b034 <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 800ae7e:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800ae80:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 800ae82:	2401      	movs	r4, #1
 800ae84:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800ae86:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 800ae8a:	43ac      	bics	r4, r5
 800ae8c:	f040 80b9 	bne.w	800b002 <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800ae90:	684d      	ldr	r5, [r1, #4]
 800ae92:	f005 0403 	and.w	r4, r5, #3
 800ae96:	ea4f 0843 	mov.w	r8, r3, lsl #1
 800ae9a:	2603      	movs	r6, #3
 800ae9c:	1e67      	subs	r7, r4, #1
 800ae9e:	fa06 f608 	lsl.w	r6, r6, r8
 800aea2:	2f01      	cmp	r7, #1
 800aea4:	ea6f 0606 	mvn.w	r6, r6
 800aea8:	d834      	bhi.n	800af14 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 800aeaa:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800aeac:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 800aeb0:	68cf      	ldr	r7, [r1, #12]
 800aeb2:	fa07 f708 	lsl.w	r7, r7, r8
 800aeb6:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800aeba:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800aebc:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800aebe:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800aec2:	f3c5 1700 	ubfx	r7, r5, #4, #1
 800aec6:	409f      	lsls	r7, r3
 800aec8:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 800aecc:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800aece:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800aed0:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800aed4:	688f      	ldr	r7, [r1, #8]
 800aed6:	fa07 f708 	lsl.w	r7, r7, r8
 800aeda:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800aede:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 800aee0:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800aee2:	d119      	bne.n	800af18 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 800aee4:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 800aee8:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800aeec:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800aef0:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800aef4:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 800aef8:	f04f 0e0f 	mov.w	lr, #15
 800aefc:	fa0e fe0b 	lsl.w	lr, lr, fp
 800af00:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800af04:	690f      	ldr	r7, [r1, #16]
 800af06:	fa07 f70b 	lsl.w	r7, r7, fp
 800af0a:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 800af0e:	f8ca 7020 	str.w	r7, [sl, #32]
 800af12:	e001      	b.n	800af18 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800af14:	2c03      	cmp	r4, #3
 800af16:	d1da      	bne.n	800aece <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 800af18:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800af1a:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800af1e:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800af20:	4326      	orrs	r6, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800af22:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 800af26:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800af28:	d06b      	beq.n	800b002 <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800af2a:	f04f 0a00 	mov.w	sl, #0
 800af2e:	f8cd a004 	str.w	sl, [sp, #4]
 800af32:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800af36:	4c40      	ldr	r4, [pc, #256]	; (800b038 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800af38:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 800af3c:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 800af40:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 800af44:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 800af48:	9601      	str	r6, [sp, #4]
 800af4a:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 800af4c:	f023 0603 	bic.w	r6, r3, #3
 800af50:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 800af54:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800af58:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800af5c:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800af60:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800af64:	270f      	movs	r7, #15
 800af66:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800af6a:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800af6c:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800af70:	d04e      	beq.n	800b010 <HAL_GPIO_Init+0x19c>
 800af72:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800af76:	42a0      	cmp	r0, r4
 800af78:	d04c      	beq.n	800b014 <HAL_GPIO_Init+0x1a0>
 800af7a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800af7e:	42a0      	cmp	r0, r4
 800af80:	d04a      	beq.n	800b018 <HAL_GPIO_Init+0x1a4>
 800af82:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800af86:	42a0      	cmp	r0, r4
 800af88:	d048      	beq.n	800b01c <HAL_GPIO_Init+0x1a8>
 800af8a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800af8e:	42a0      	cmp	r0, r4
 800af90:	d046      	beq.n	800b020 <HAL_GPIO_Init+0x1ac>
 800af92:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800af96:	42a0      	cmp	r0, r4
 800af98:	d044      	beq.n	800b024 <HAL_GPIO_Init+0x1b0>
 800af9a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800af9e:	42a0      	cmp	r0, r4
 800afa0:	d042      	beq.n	800b028 <HAL_GPIO_Init+0x1b4>
 800afa2:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800afa6:	42a0      	cmp	r0, r4
 800afa8:	d040      	beq.n	800b02c <HAL_GPIO_Init+0x1b8>
 800afaa:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800afae:	42a0      	cmp	r0, r4
 800afb0:	d03e      	beq.n	800b030 <HAL_GPIO_Init+0x1bc>
 800afb2:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800afb6:	42a0      	cmp	r0, r4
 800afb8:	bf0c      	ite	eq
 800afba:	2409      	moveq	r4, #9
 800afbc:	240a      	movne	r4, #10
 800afbe:	fa04 f40e 	lsl.w	r4, r4, lr
 800afc2:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800afc4:	60b4      	str	r4, [r6, #8]
        temp = EXTI->IMR;
 800afc6:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 800afc8:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800afcc:	03ef      	lsls	r7, r5, #15
        temp &= ~((uint32_t)iocurrent);
 800afce:	bf54      	ite	pl
 800afd0:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800afd2:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 800afd6:	6014      	str	r4, [r2, #0]

        temp = EXTI->EMR;
 800afd8:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800afda:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 800afdc:	bf54      	ite	pl
 800afde:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800afe0:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 800afe4:	6054      	str	r4, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800afe6:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800afe8:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 800afea:	bf54      	ite	pl
 800afec:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800afee:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 800aff2:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 800aff4:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800aff6:	02ad      	lsls	r5, r5, #10
        temp &= ~((uint32_t)iocurrent);
 800aff8:	bf54      	ite	pl
 800affa:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800affc:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 800b000:	60d4      	str	r4, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800b002:	3301      	adds	r3, #1
 800b004:	2b10      	cmp	r3, #16
 800b006:	f47f af3b 	bne.w	800ae80 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 800b00a:	b003      	add	sp, #12
 800b00c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800b010:	4654      	mov	r4, sl
 800b012:	e7d4      	b.n	800afbe <HAL_GPIO_Init+0x14a>
 800b014:	2401      	movs	r4, #1
 800b016:	e7d2      	b.n	800afbe <HAL_GPIO_Init+0x14a>
 800b018:	2402      	movs	r4, #2
 800b01a:	e7d0      	b.n	800afbe <HAL_GPIO_Init+0x14a>
 800b01c:	2403      	movs	r4, #3
 800b01e:	e7ce      	b.n	800afbe <HAL_GPIO_Init+0x14a>
 800b020:	2404      	movs	r4, #4
 800b022:	e7cc      	b.n	800afbe <HAL_GPIO_Init+0x14a>
 800b024:	2405      	movs	r4, #5
 800b026:	e7ca      	b.n	800afbe <HAL_GPIO_Init+0x14a>
 800b028:	2406      	movs	r4, #6
 800b02a:	e7c8      	b.n	800afbe <HAL_GPIO_Init+0x14a>
 800b02c:	2407      	movs	r4, #7
 800b02e:	e7c6      	b.n	800afbe <HAL_GPIO_Init+0x14a>
 800b030:	2408      	movs	r4, #8
 800b032:	e7c4      	b.n	800afbe <HAL_GPIO_Init+0x14a>
 800b034:	40013c00 	.word	0x40013c00
 800b038:	40020000 	.word	0x40020000
 800b03c:	40023800 	.word	0x40023800

0800b040 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 800b040:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 800b044:	4c4a      	ldr	r4, [pc, #296]	; (800b170 <HAL_GPIO_DeInit+0x130>)
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800b046:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800b178 <HAL_GPIO_DeInit+0x138>
 800b04a:	f8df a130 	ldr.w	sl, [pc, #304]	; 800b17c <HAL_GPIO_DeInit+0x13c>
 800b04e:	f8df b130 	ldr.w	fp, [pc, #304]	; 800b180 <HAL_GPIO_DeInit+0x140>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800b052:	2200      	movs	r2, #0
    ioposition = 0x01U << position;
 800b054:	2301      	movs	r3, #1
 800b056:	fa03 fe02 	lsl.w	lr, r3, r2
    if(iocurrent == ioposition)
 800b05a:	ea3e 0301 	bics.w	r3, lr, r1
    iocurrent = (GPIO_Pin) & ioposition;
 800b05e:	ea0e 0701 	and.w	r7, lr, r1
    if(iocurrent == ioposition)
 800b062:	d16e      	bne.n	800b142 <HAL_GPIO_DeInit+0x102>
      tmp = SYSCFG->EXTICR[position >> 2U];
 800b064:	f022 0503 	bic.w	r5, r2, #3
 800b068:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 800b06c:	f505 359c 	add.w	r5, r5, #79872	; 0x13800
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800b070:	4b40      	ldr	r3, [pc, #256]	; (800b174 <HAL_GPIO_DeInit+0x134>)
      tmp = SYSCFG->EXTICR[position >> 2U];
 800b072:	f8d5 8008 	ldr.w	r8, [r5, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 800b076:	f002 0c03 	and.w	ip, r2, #3
 800b07a:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800b07e:	260f      	movs	r6, #15
 800b080:	fa06 f60c 	lsl.w	r6, r6, ip
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800b084:	4298      	cmp	r0, r3
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 800b086:	ea06 0808 	and.w	r8, r6, r8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800b08a:	d05f      	beq.n	800b14c <HAL_GPIO_DeInit+0x10c>
 800b08c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800b090:	4298      	cmp	r0, r3
 800b092:	d05d      	beq.n	800b150 <HAL_GPIO_DeInit+0x110>
 800b094:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800b098:	4298      	cmp	r0, r3
 800b09a:	d05b      	beq.n	800b154 <HAL_GPIO_DeInit+0x114>
 800b09c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800b0a0:	4298      	cmp	r0, r3
 800b0a2:	d059      	beq.n	800b158 <HAL_GPIO_DeInit+0x118>
 800b0a4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800b0a8:	4298      	cmp	r0, r3
 800b0aa:	d057      	beq.n	800b15c <HAL_GPIO_DeInit+0x11c>
 800b0ac:	4548      	cmp	r0, r9
 800b0ae:	d057      	beq.n	800b160 <HAL_GPIO_DeInit+0x120>
 800b0b0:	4550      	cmp	r0, sl
 800b0b2:	d057      	beq.n	800b164 <HAL_GPIO_DeInit+0x124>
 800b0b4:	4558      	cmp	r0, fp
 800b0b6:	d057      	beq.n	800b168 <HAL_GPIO_DeInit+0x128>
 800b0b8:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800b0bc:	4298      	cmp	r0, r3
 800b0be:	d055      	beq.n	800b16c <HAL_GPIO_DeInit+0x12c>
 800b0c0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800b0c4:	4298      	cmp	r0, r3
 800b0c6:	bf0c      	ite	eq
 800b0c8:	2309      	moveq	r3, #9
 800b0ca:	230a      	movne	r3, #10
 800b0cc:	fa03 f30c 	lsl.w	r3, r3, ip
 800b0d0:	4543      	cmp	r3, r8
 800b0d2:	d113      	bne.n	800b0fc <HAL_GPIO_DeInit+0xbc>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 800b0d4:	6823      	ldr	r3, [r4, #0]
 800b0d6:	ea23 0307 	bic.w	r3, r3, r7
 800b0da:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 800b0dc:	6863      	ldr	r3, [r4, #4]
 800b0de:	ea23 0307 	bic.w	r3, r3, r7
 800b0e2:	6063      	str	r3, [r4, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 800b0e4:	68a3      	ldr	r3, [r4, #8]
 800b0e6:	ea23 0307 	bic.w	r3, r3, r7
 800b0ea:	60a3      	str	r3, [r4, #8]
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 800b0ec:	68e3      	ldr	r3, [r4, #12]
 800b0ee:	ea23 0707 	bic.w	r7, r3, r7
 800b0f2:	60e7      	str	r7, [r4, #12]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 800b0f4:	68ab      	ldr	r3, [r5, #8]
 800b0f6:	ea23 0606 	bic.w	r6, r3, r6
 800b0fa:	60ae      	str	r6, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800b0fc:	6805      	ldr	r5, [r0, #0]
 800b0fe:	2603      	movs	r6, #3
 800b100:	0053      	lsls	r3, r2, #1
 800b102:	fa06 f303 	lsl.w	r3, r6, r3
 800b106:	ea25 0503 	bic.w	r5, r5, r3
 800b10a:	6005      	str	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800b10c:	fa22 f506 	lsr.w	r5, r2, r6
 800b110:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 800b114:	f002 0c07 	and.w	ip, r2, #7
 800b118:	6a2e      	ldr	r6, [r5, #32]
 800b11a:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800b11e:	270f      	movs	r7, #15
 800b120:	fa07 f70c 	lsl.w	r7, r7, ip
 800b124:	ea26 0707 	bic.w	r7, r6, r7
 800b128:	622f      	str	r7, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800b12a:	68c5      	ldr	r5, [r0, #12]
 800b12c:	ea25 0503 	bic.w	r5, r5, r3
 800b130:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 800b132:	6845      	ldr	r5, [r0, #4]
 800b134:	ea25 050e 	bic.w	r5, r5, lr
 800b138:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800b13a:	6885      	ldr	r5, [r0, #8]
 800b13c:	ea25 0303 	bic.w	r3, r5, r3
 800b140:	6083      	str	r3, [r0, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800b142:	3201      	adds	r2, #1
 800b144:	2a10      	cmp	r2, #16
 800b146:	d185      	bne.n	800b054 <HAL_GPIO_DeInit+0x14>
    }
  }
}
 800b148:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800b14c:	2300      	movs	r3, #0
 800b14e:	e7bd      	b.n	800b0cc <HAL_GPIO_DeInit+0x8c>
 800b150:	2301      	movs	r3, #1
 800b152:	e7bb      	b.n	800b0cc <HAL_GPIO_DeInit+0x8c>
 800b154:	2302      	movs	r3, #2
 800b156:	e7b9      	b.n	800b0cc <HAL_GPIO_DeInit+0x8c>
 800b158:	2303      	movs	r3, #3
 800b15a:	e7b7      	b.n	800b0cc <HAL_GPIO_DeInit+0x8c>
 800b15c:	2304      	movs	r3, #4
 800b15e:	e7b5      	b.n	800b0cc <HAL_GPIO_DeInit+0x8c>
 800b160:	2305      	movs	r3, #5
 800b162:	e7b3      	b.n	800b0cc <HAL_GPIO_DeInit+0x8c>
 800b164:	2306      	movs	r3, #6
 800b166:	e7b1      	b.n	800b0cc <HAL_GPIO_DeInit+0x8c>
 800b168:	2307      	movs	r3, #7
 800b16a:	e7af      	b.n	800b0cc <HAL_GPIO_DeInit+0x8c>
 800b16c:	2308      	movs	r3, #8
 800b16e:	e7ad      	b.n	800b0cc <HAL_GPIO_DeInit+0x8c>
 800b170:	40013c00 	.word	0x40013c00
 800b174:	40020000 	.word	0x40020000
 800b178:	40021400 	.word	0x40021400
 800b17c:	40021800 	.word	0x40021800
 800b180:	40021c00 	.word	0x40021c00

0800b184 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800b184:	6903      	ldr	r3, [r0, #16]
 800b186:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800b188:	bf14      	ite	ne
 800b18a:	2001      	movne	r0, #1
 800b18c:	2000      	moveq	r0, #0
 800b18e:	4770      	bx	lr

0800b190 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800b190:	b10a      	cbz	r2, 800b196 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800b192:	6181      	str	r1, [r0, #24]
  }
}
 800b194:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800b196:	0409      	lsls	r1, r1, #16
 800b198:	e7fb      	b.n	800b192 <HAL_GPIO_WritePin+0x2>

0800b19a <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Ouput Data Register value */
  odr = GPIOx->ODR;
 800b19a:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800b19c:	ea01 0203 	and.w	r2, r1, r3
 800b1a0:	ea21 0103 	bic.w	r1, r1, r3
 800b1a4:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800b1a8:	6181      	str	r1, [r0, #24]
}
 800b1aa:	4770      	bx	lr

0800b1ac <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800b1ac:	6801      	ldr	r1, [r0, #0]
 800b1ae:	694b      	ldr	r3, [r1, #20]
 800b1b0:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 800b1b4:	f04f 0200 	mov.w	r2, #0
 800b1b8:	d010      	beq.n	800b1dc <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800b1ba:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800b1be:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 800b1c0:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 800b1c2:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800b1c4:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800b1c8:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800b1cc:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800b1ce:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800b1d2:	f043 0304 	orr.w	r3, r3, #4
 800b1d6:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 800b1d8:	2001      	movs	r0, #1
 800b1da:	4770      	bx	lr
  }
  return HAL_OK;
 800b1dc:	4618      	mov	r0, r3
}
 800b1de:	4770      	bx	lr

0800b1e0 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 800b1e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b1e4:	4604      	mov	r4, r0
 800b1e6:	460f      	mov	r7, r1
 800b1e8:	4616      	mov	r6, r2
 800b1ea:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800b1ec:	6825      	ldr	r5, [r4, #0]
 800b1ee:	6968      	ldr	r0, [r5, #20]
 800b1f0:	ea27 0000 	bic.w	r0, r7, r0
 800b1f4:	b280      	uxth	r0, r0
 800b1f6:	b1b8      	cbz	r0, 800b228 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800b1f8:	696b      	ldr	r3, [r5, #20]
 800b1fa:	055a      	lsls	r2, r3, #21
 800b1fc:	d516      	bpl.n	800b22c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b1fe:	682b      	ldr	r3, [r5, #0]
 800b200:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800b204:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800b206:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800b20a:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800b20c:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800b20e:	2300      	movs	r3, #0
 800b210:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800b212:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800b216:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800b21a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b21c:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b220:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800b222:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 800b226:	2001      	movs	r0, #1
}
 800b228:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 800b22c:	1c73      	adds	r3, r6, #1
 800b22e:	d0de      	beq.n	800b1ee <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b230:	f7fe ffc0 	bl	800a1b4 <HAL_GetTick>
 800b234:	eba0 0008 	sub.w	r0, r0, r8
 800b238:	42b0      	cmp	r0, r6
 800b23a:	d801      	bhi.n	800b240 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 800b23c:	2e00      	cmp	r6, #0
 800b23e:	d1d5      	bne.n	800b1ec <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800b240:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800b242:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800b244:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800b246:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800b24a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b24e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b250:	f042 0220 	orr.w	r2, r2, #32
 800b254:	e7e4      	b.n	800b220 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

0800b256 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 800b256:	b570      	push	{r4, r5, r6, lr}
 800b258:	4604      	mov	r4, r0
 800b25a:	460d      	mov	r5, r1
 800b25c:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800b25e:	6823      	ldr	r3, [r4, #0]
 800b260:	695b      	ldr	r3, [r3, #20]
 800b262:	075b      	lsls	r3, r3, #29
 800b264:	d501      	bpl.n	800b26a <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 800b266:	2000      	movs	r0, #0
}
 800b268:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800b26a:	4620      	mov	r0, r4
 800b26c:	f7ff ff9e 	bl	800b1ac <I2C_IsAcknowledgeFailed>
 800b270:	b9a8      	cbnz	r0, 800b29e <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800b272:	1c6a      	adds	r2, r5, #1
 800b274:	d0f3      	beq.n	800b25e <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b276:	f7fe ff9d 	bl	800a1b4 <HAL_GetTick>
 800b27a:	1b80      	subs	r0, r0, r6
 800b27c:	42a8      	cmp	r0, r5
 800b27e:	d801      	bhi.n	800b284 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 800b280:	2d00      	cmp	r5, #0
 800b282:	d1ec      	bne.n	800b25e <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800b284:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800b286:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800b288:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800b28a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800b28e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800b292:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800b294:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800b298:	f042 0220 	orr.w	r2, r2, #32
 800b29c:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800b29e:	2001      	movs	r0, #1
 800b2a0:	e7e2      	b.n	800b268 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

0800b2a2 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 800b2a2:	b570      	push	{r4, r5, r6, lr}
 800b2a4:	4604      	mov	r4, r0
 800b2a6:	460d      	mov	r5, r1
 800b2a8:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800b2aa:	6821      	ldr	r1, [r4, #0]
 800b2ac:	694b      	ldr	r3, [r1, #20]
 800b2ae:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 800b2b2:	d001      	beq.n	800b2b8 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 800b2b4:	2000      	movs	r0, #0
 800b2b6:	e010      	b.n	800b2da <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800b2b8:	694a      	ldr	r2, [r1, #20]
 800b2ba:	06d2      	lsls	r2, r2, #27
 800b2bc:	d50e      	bpl.n	800b2dc <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800b2be:	f06f 0210 	mvn.w	r2, #16
 800b2c2:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800b2c4:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800b2c6:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800b2c8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800b2cc:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800b2d0:	6c22      	ldr	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800b2d2:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800b2d4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 800b2d8:	2001      	movs	r0, #1
}
 800b2da:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b2dc:	f7fe ff6a 	bl	800a1b4 <HAL_GetTick>
 800b2e0:	1b80      	subs	r0, r0, r6
 800b2e2:	42a8      	cmp	r0, r5
 800b2e4:	d801      	bhi.n	800b2ea <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 800b2e6:	2d00      	cmp	r5, #0
 800b2e8:	d1df      	bne.n	800b2aa <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800b2ea:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800b2ec:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800b2ee:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800b2f0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800b2f4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800b2f8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b2fa:	f042 0220 	orr.w	r2, r2, #32
 800b2fe:	e7e8      	b.n	800b2d2 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

0800b300 <I2C_WaitOnFlagUntilTimeout>:
{
 800b300:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 800b304:	4606      	mov	r6, r0
 800b306:	460f      	mov	r7, r1
 800b308:	4691      	mov	r9, r2
 800b30a:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800b30c:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800b310:	6833      	ldr	r3, [r6, #0]
 800b312:	f1ba 0f01 	cmp.w	sl, #1
 800b316:	bf0c      	ite	eq
 800b318:	695c      	ldreq	r4, [r3, #20]
 800b31a:	699c      	ldrne	r4, [r3, #24]
 800b31c:	ea27 0404 	bic.w	r4, r7, r4
 800b320:	b2a4      	uxth	r4, r4
 800b322:	fab4 f484 	clz	r4, r4
 800b326:	0964      	lsrs	r4, r4, #5
 800b328:	45a1      	cmp	r9, r4
 800b32a:	d001      	beq.n	800b330 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 800b32c:	2000      	movs	r0, #0
 800b32e:	e017      	b.n	800b360 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 800b330:	1c6a      	adds	r2, r5, #1
 800b332:	d0ee      	beq.n	800b312 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b334:	f7fe ff3e 	bl	800a1b4 <HAL_GetTick>
 800b338:	9b08      	ldr	r3, [sp, #32]
 800b33a:	1ac0      	subs	r0, r0, r3
 800b33c:	42a8      	cmp	r0, r5
 800b33e:	d801      	bhi.n	800b344 <I2C_WaitOnFlagUntilTimeout+0x44>
 800b340:	2d00      	cmp	r5, #0
 800b342:	d1e5      	bne.n	800b310 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800b344:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800b346:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800b348:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800b34a:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800b34e:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800b352:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800b354:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800b358:	f042 0220 	orr.w	r2, r2, #32
 800b35c:	6432      	str	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800b35e:	2001      	movs	r0, #1
}
 800b360:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

0800b364 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 800b364:	b570      	push	{r4, r5, r6, lr}
 800b366:	4604      	mov	r4, r0
 800b368:	460d      	mov	r5, r1
 800b36a:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800b36c:	6823      	ldr	r3, [r4, #0]
 800b36e:	695b      	ldr	r3, [r3, #20]
 800b370:	061b      	lsls	r3, r3, #24
 800b372:	d501      	bpl.n	800b378 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 800b374:	2000      	movs	r0, #0
}
 800b376:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800b378:	4620      	mov	r0, r4
 800b37a:	f7ff ff17 	bl	800b1ac <I2C_IsAcknowledgeFailed>
 800b37e:	b9a8      	cbnz	r0, 800b3ac <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800b380:	1c6a      	adds	r2, r5, #1
 800b382:	d0f3      	beq.n	800b36c <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b384:	f7fe ff16 	bl	800a1b4 <HAL_GetTick>
 800b388:	1b80      	subs	r0, r0, r6
 800b38a:	42a8      	cmp	r0, r5
 800b38c:	d801      	bhi.n	800b392 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 800b38e:	2d00      	cmp	r5, #0
 800b390:	d1ec      	bne.n	800b36c <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800b392:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800b394:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800b396:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800b398:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800b39c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800b3a0:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800b3a2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800b3a6:	f042 0220 	orr.w	r2, r2, #32
 800b3aa:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800b3ac:	2001      	movs	r0, #1
 800b3ae:	e7e2      	b.n	800b376 <I2C_WaitOnTXEFlagUntilTimeout+0x12>

0800b3b0 <I2C_RequestMemoryWrite>:
{
 800b3b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b3b4:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b3b6:	6802      	ldr	r2, [r0, #0]
{
 800b3b8:	b085      	sub	sp, #20
 800b3ba:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 800b3be:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b3c0:	6813      	ldr	r3, [r2, #0]
 800b3c2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b3c6:	6013      	str	r3, [r2, #0]
{
 800b3c8:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800b3ca:	463b      	mov	r3, r7
 800b3cc:	f8cd 8000 	str.w	r8, [sp]
 800b3d0:	2200      	movs	r2, #0
 800b3d2:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800b3d6:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800b3d8:	f7ff ff92 	bl	800b300 <I2C_WaitOnFlagUntilTimeout>
 800b3dc:	6823      	ldr	r3, [r4, #0]
 800b3de:	b138      	cbz	r0, 800b3f0 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800b3e0:	681b      	ldr	r3, [r3, #0]
 800b3e2:	05db      	lsls	r3, r3, #23
 800b3e4:	d502      	bpl.n	800b3ec <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800b3e6:	f44f 7300 	mov.w	r3, #512	; 0x200
 800b3ea:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800b3ec:	2003      	movs	r0, #3
 800b3ee:	e00a      	b.n	800b406 <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800b3f0:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800b3f4:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800b3f6:	4919      	ldr	r1, [pc, #100]	; (800b45c <I2C_RequestMemoryWrite+0xac>)
 800b3f8:	4643      	mov	r3, r8
 800b3fa:	463a      	mov	r2, r7
 800b3fc:	4620      	mov	r0, r4
 800b3fe:	f7ff feef 	bl	800b1e0 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800b402:	b118      	cbz	r0, 800b40c <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 800b404:	2001      	movs	r0, #1
}
 800b406:	b005      	add	sp, #20
 800b408:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b40c:	6823      	ldr	r3, [r4, #0]
 800b40e:	9003      	str	r0, [sp, #12]
 800b410:	695a      	ldr	r2, [r3, #20]
 800b412:	9203      	str	r2, [sp, #12]
 800b414:	699b      	ldr	r3, [r3, #24]
 800b416:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800b418:	4642      	mov	r2, r8
 800b41a:	4639      	mov	r1, r7
 800b41c:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b41e:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800b420:	f7ff ffa0 	bl	800b364 <I2C_WaitOnTXEFlagUntilTimeout>
 800b424:	b140      	cbz	r0, 800b438 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800b426:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b428:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b42a:	bf01      	itttt	eq
 800b42c:	6822      	ldreq	r2, [r4, #0]
 800b42e:	6813      	ldreq	r3, [r2, #0]
 800b430:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800b434:	6013      	streq	r3, [r2, #0]
 800b436:	e7e5      	b.n	800b404 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800b438:	f1b9 0f01 	cmp.w	r9, #1
 800b43c:	6823      	ldr	r3, [r4, #0]
 800b43e:	d102      	bne.n	800b446 <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800b440:	b2ed      	uxtb	r5, r5
 800b442:	611d      	str	r5, [r3, #16]
 800b444:	e7df      	b.n	800b406 <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800b446:	0a2a      	lsrs	r2, r5, #8
 800b448:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800b44a:	4639      	mov	r1, r7
 800b44c:	4642      	mov	r2, r8
 800b44e:	4620      	mov	r0, r4
 800b450:	f7ff ff88 	bl	800b364 <I2C_WaitOnTXEFlagUntilTimeout>
 800b454:	2800      	cmp	r0, #0
 800b456:	d1e6      	bne.n	800b426 <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800b458:	6823      	ldr	r3, [r4, #0]
 800b45a:	e7f1      	b.n	800b440 <I2C_RequestMemoryWrite+0x90>
 800b45c:	00010002 	.word	0x00010002

0800b460 <I2C_RequestMemoryRead>:
{
 800b460:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800b464:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b466:	6803      	ldr	r3, [r0, #0]
{
 800b468:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b46a:	681a      	ldr	r2, [r3, #0]
 800b46c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b470:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b472:	681a      	ldr	r2, [r3, #0]
{
 800b474:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b478:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b47c:	601a      	str	r2, [r3, #0]
{
 800b47e:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800b480:	463b      	mov	r3, r7
 800b482:	f8cd 8000 	str.w	r8, [sp]
 800b486:	2200      	movs	r2, #0
 800b488:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800b48c:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800b48e:	f7ff ff37 	bl	800b300 <I2C_WaitOnFlagUntilTimeout>
 800b492:	6823      	ldr	r3, [r4, #0]
 800b494:	b148      	cbz	r0, 800b4aa <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800b496:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800b498:	05db      	lsls	r3, r3, #23
 800b49a:	d502      	bpl.n	800b4a2 <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800b49c:	f44f 7300 	mov.w	r3, #512	; 0x200
 800b4a0:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800b4a2:	2003      	movs	r0, #3
}
 800b4a4:	b004      	add	sp, #16
 800b4a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800b4aa:	fa5f f986 	uxtb.w	r9, r6
 800b4ae:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800b4b2:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800b4b4:	492a      	ldr	r1, [pc, #168]	; (800b560 <I2C_RequestMemoryRead+0x100>)
 800b4b6:	4643      	mov	r3, r8
 800b4b8:	463a      	mov	r2, r7
 800b4ba:	4620      	mov	r0, r4
 800b4bc:	f7ff fe90 	bl	800b1e0 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800b4c0:	b108      	cbz	r0, 800b4c6 <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 800b4c2:	2001      	movs	r0, #1
 800b4c4:	e7ee      	b.n	800b4a4 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b4c6:	6823      	ldr	r3, [r4, #0]
 800b4c8:	9003      	str	r0, [sp, #12]
 800b4ca:	695a      	ldr	r2, [r3, #20]
 800b4cc:	9203      	str	r2, [sp, #12]
 800b4ce:	699b      	ldr	r3, [r3, #24]
 800b4d0:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800b4d2:	4642      	mov	r2, r8
 800b4d4:	4639      	mov	r1, r7
 800b4d6:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b4d8:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800b4da:	f7ff ff43 	bl	800b364 <I2C_WaitOnTXEFlagUntilTimeout>
 800b4de:	b140      	cbz	r0, 800b4f2 <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800b4e0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b4e2:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b4e4:	bf01      	itttt	eq
 800b4e6:	6822      	ldreq	r2, [r4, #0]
 800b4e8:	6813      	ldreq	r3, [r2, #0]
 800b4ea:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800b4ee:	6013      	streq	r3, [r2, #0]
 800b4f0:	e7e7      	b.n	800b4c2 <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800b4f2:	f1ba 0f01 	cmp.w	sl, #1
 800b4f6:	6823      	ldr	r3, [r4, #0]
 800b4f8:	d11a      	bne.n	800b530 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800b4fa:	b2ed      	uxtb	r5, r5
 800b4fc:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800b4fe:	4642      	mov	r2, r8
 800b500:	4639      	mov	r1, r7
 800b502:	4620      	mov	r0, r4
 800b504:	f7ff ff2e 	bl	800b364 <I2C_WaitOnTXEFlagUntilTimeout>
 800b508:	2800      	cmp	r0, #0
 800b50a:	d1e9      	bne.n	800b4e0 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b50c:	6822      	ldr	r2, [r4, #0]
 800b50e:	6813      	ldr	r3, [r2, #0]
 800b510:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b514:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800b516:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800b51a:	4602      	mov	r2, r0
 800b51c:	f8cd 8000 	str.w	r8, [sp]
 800b520:	463b      	mov	r3, r7
 800b522:	4620      	mov	r0, r4
 800b524:	f7ff feec 	bl	800b300 <I2C_WaitOnFlagUntilTimeout>
 800b528:	6822      	ldr	r2, [r4, #0]
 800b52a:	b160      	cbz	r0, 800b546 <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800b52c:	6813      	ldr	r3, [r2, #0]
 800b52e:	e7b3      	b.n	800b498 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800b530:	0a2a      	lsrs	r2, r5, #8
 800b532:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800b534:	4639      	mov	r1, r7
 800b536:	4642      	mov	r2, r8
 800b538:	4620      	mov	r0, r4
 800b53a:	f7ff ff13 	bl	800b364 <I2C_WaitOnTXEFlagUntilTimeout>
 800b53e:	2800      	cmp	r0, #0
 800b540:	d1ce      	bne.n	800b4e0 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800b542:	6823      	ldr	r3, [r4, #0]
 800b544:	e7d9      	b.n	800b4fa <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800b546:	f049 0301 	orr.w	r3, r9, #1
 800b54a:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800b54c:	4904      	ldr	r1, [pc, #16]	; (800b560 <I2C_RequestMemoryRead+0x100>)
 800b54e:	4643      	mov	r3, r8
 800b550:	463a      	mov	r2, r7
 800b552:	4620      	mov	r0, r4
 800b554:	f7ff fe44 	bl	800b1e0 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 800b558:	3800      	subs	r0, #0
 800b55a:	bf18      	it	ne
 800b55c:	2001      	movne	r0, #1
 800b55e:	e7a1      	b.n	800b4a4 <I2C_RequestMemoryRead+0x44>
 800b560:	00010002 	.word	0x00010002

0800b564 <HAL_I2C_Init>:
{
 800b564:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 800b566:	4604      	mov	r4, r0
 800b568:	b908      	cbnz	r0, 800b56e <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 800b56a:	2001      	movs	r0, #1
}
 800b56c:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800b56e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800b572:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b576:	b91b      	cbnz	r3, 800b580 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 800b578:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800b57c:	f7f6 faaa 	bl	8001ad4 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 800b580:	2324      	movs	r3, #36	; 0x24
 800b582:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800b586:	6823      	ldr	r3, [r4, #0]
 800b588:	681a      	ldr	r2, [r3, #0]
 800b58a:	f022 0201 	bic.w	r2, r2, #1
 800b58e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800b590:	681a      	ldr	r2, [r3, #0]
 800b592:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800b596:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800b598:	681a      	ldr	r2, [r3, #0]
 800b59a:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800b59e:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800b5a0:	f001 f818 	bl	800c5d4 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800b5a4:	4a3f      	ldr	r2, [pc, #252]	; (800b6a4 <HAL_I2C_Init+0x140>)
 800b5a6:	6863      	ldr	r3, [r4, #4]
 800b5a8:	4293      	cmp	r3, r2
 800b5aa:	bf94      	ite	ls
 800b5ac:	4a3e      	ldrls	r2, [pc, #248]	; (800b6a8 <HAL_I2C_Init+0x144>)
 800b5ae:	4a3f      	ldrhi	r2, [pc, #252]	; (800b6ac <HAL_I2C_Init+0x148>)
 800b5b0:	4290      	cmp	r0, r2
 800b5b2:	bf8c      	ite	hi
 800b5b4:	2200      	movhi	r2, #0
 800b5b6:	2201      	movls	r2, #1
 800b5b8:	2a00      	cmp	r2, #0
 800b5ba:	d1d6      	bne.n	800b56a <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800b5bc:	6821      	ldr	r1, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800b5be:	4e3c      	ldr	r6, [pc, #240]	; (800b6b0 <HAL_I2C_Init+0x14c>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800b5c0:	684a      	ldr	r2, [r1, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800b5c2:	fbb0 f6f6 	udiv	r6, r0, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800b5c6:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
 800b5ca:	4332      	orrs	r2, r6
 800b5cc:	604a      	str	r2, [r1, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800b5ce:	4a35      	ldr	r2, [pc, #212]	; (800b6a4 <HAL_I2C_Init+0x140>)
 800b5d0:	6a0d      	ldr	r5, [r1, #32]
 800b5d2:	4293      	cmp	r3, r2
 800b5d4:	bf84      	itt	hi
 800b5d6:	f44f 7296 	movhi.w	r2, #300	; 0x12c
 800b5da:	4372      	mulhi	r2, r6
 800b5dc:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 800b5e0:	bf91      	iteee	ls
 800b5e2:	1c72      	addls	r2, r6, #1
 800b5e4:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 800b5e8:	fbb2 f2f6 	udivhi	r2, r2, r6
 800b5ec:	3201      	addhi	r2, #1
 800b5ee:	432a      	orrs	r2, r5
 800b5f0:	620a      	str	r2, [r1, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800b5f2:	69cd      	ldr	r5, [r1, #28]
 800b5f4:	1e42      	subs	r2, r0, #1
 800b5f6:	482b      	ldr	r0, [pc, #172]	; (800b6a4 <HAL_I2C_Init+0x140>)
 800b5f8:	f425 454f 	bic.w	r5, r5, #52992	; 0xcf00
 800b5fc:	4283      	cmp	r3, r0
 800b5fe:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 800b602:	d832      	bhi.n	800b66a <HAL_I2C_Init+0x106>
 800b604:	005b      	lsls	r3, r3, #1
 800b606:	fbb2 f3f3 	udiv	r3, r2, r3
 800b60a:	f640 72fc 	movw	r2, #4092	; 0xffc
 800b60e:	3301      	adds	r3, #1
 800b610:	4213      	tst	r3, r2
 800b612:	d042      	beq.n	800b69a <HAL_I2C_Init+0x136>
 800b614:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800b618:	432b      	orrs	r3, r5
 800b61a:	61cb      	str	r3, [r1, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800b61c:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800b620:	680a      	ldr	r2, [r1, #0]
 800b622:	4303      	orrs	r3, r0
 800b624:	f022 02c0 	bic.w	r2, r2, #192	; 0xc0
 800b628:	4313      	orrs	r3, r2
 800b62a:	600b      	str	r3, [r1, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800b62c:	688a      	ldr	r2, [r1, #8]
 800b62e:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800b632:	f422 4203 	bic.w	r2, r2, #33536	; 0x8300
 800b636:	4303      	orrs	r3, r0
 800b638:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800b63c:	4313      	orrs	r3, r2
 800b63e:	608b      	str	r3, [r1, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800b640:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800b644:	68ca      	ldr	r2, [r1, #12]
 800b646:	4303      	orrs	r3, r0
 800b648:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800b64c:	4313      	orrs	r3, r2
 800b64e:	60cb      	str	r3, [r1, #12]
  __HAL_I2C_ENABLE(hi2c);
 800b650:	680b      	ldr	r3, [r1, #0]
 800b652:	f043 0301 	orr.w	r3, r3, #1
 800b656:	600b      	str	r3, [r1, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b658:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 800b65a:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b65c:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800b65e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800b662:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800b664:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 800b668:	e780      	b.n	800b56c <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800b66a:	68a0      	ldr	r0, [r4, #8]
 800b66c:	b950      	cbnz	r0, 800b684 <HAL_I2C_Init+0x120>
 800b66e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800b672:	fbb2 f3f3 	udiv	r3, r2, r3
 800b676:	3301      	adds	r3, #1
 800b678:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800b67c:	b17b      	cbz	r3, 800b69e <HAL_I2C_Init+0x13a>
 800b67e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800b682:	e7c9      	b.n	800b618 <HAL_I2C_Init+0xb4>
 800b684:	2019      	movs	r0, #25
 800b686:	4343      	muls	r3, r0
 800b688:	fbb2 f3f3 	udiv	r3, r2, r3
 800b68c:	3301      	adds	r3, #1
 800b68e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800b692:	b123      	cbz	r3, 800b69e <HAL_I2C_Init+0x13a>
 800b694:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800b698:	e7be      	b.n	800b618 <HAL_I2C_Init+0xb4>
 800b69a:	2304      	movs	r3, #4
 800b69c:	e7bc      	b.n	800b618 <HAL_I2C_Init+0xb4>
 800b69e:	2301      	movs	r3, #1
 800b6a0:	e7ba      	b.n	800b618 <HAL_I2C_Init+0xb4>
 800b6a2:	bf00      	nop
 800b6a4:	000186a0 	.word	0x000186a0
 800b6a8:	001e847f 	.word	0x001e847f
 800b6ac:	003d08ff 	.word	0x003d08ff
 800b6b0:	000f4240 	.word	0x000f4240

0800b6b4 <HAL_I2C_DeInit>:
{
 800b6b4:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 800b6b6:	4604      	mov	r4, r0
 800b6b8:	b198      	cbz	r0, 800b6e2 <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 800b6ba:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800b6bc:	2324      	movs	r3, #36	; 0x24
 800b6be:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800b6c2:	6813      	ldr	r3, [r2, #0]
 800b6c4:	f023 0301 	bic.w	r3, r3, #1
 800b6c8:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 800b6ca:	f7f6 fa47 	bl	8001b5c <HAL_I2C_MspDeInit>
  hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800b6ce:	2000      	movs	r0, #0
 800b6d0:	6420      	str	r0, [r4, #64]	; 0x40
  __HAL_UNLOCK(hi2c);
 800b6d2:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
  hi2c->State         = HAL_I2C_STATE_RESET;
 800b6d6:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800b6da:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode          = HAL_I2C_MODE_NONE;
 800b6dc:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
}
 800b6e0:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800b6e2:	2001      	movs	r0, #1
 800b6e4:	e7fc      	b.n	800b6e0 <HAL_I2C_DeInit+0x2c>
	...

0800b6e8 <HAL_I2C_Mem_Write>:
{
 800b6e8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b6ec:	4604      	mov	r4, r0
 800b6ee:	4699      	mov	r9, r3
 800b6f0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800b6f2:	460f      	mov	r7, r1
 800b6f4:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800b6f6:	f7fe fd5d 	bl	800a1b4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b6fa:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800b6fe:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800b700:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b702:	d003      	beq.n	800b70c <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 800b704:	2002      	movs	r0, #2
}
 800b706:	b003      	add	sp, #12
 800b708:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800b70c:	9000      	str	r0, [sp, #0]
 800b70e:	493c      	ldr	r1, [pc, #240]	; (800b800 <HAL_I2C_Mem_Write+0x118>)
 800b710:	2319      	movs	r3, #25
 800b712:	2201      	movs	r2, #1
 800b714:	4620      	mov	r0, r4
 800b716:	f7ff fdf3 	bl	800b300 <I2C_WaitOnFlagUntilTimeout>
 800b71a:	2800      	cmp	r0, #0
 800b71c:	d1f2      	bne.n	800b704 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 800b71e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800b722:	2b01      	cmp	r3, #1
 800b724:	d0ee      	beq.n	800b704 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800b726:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800b728:	2301      	movs	r3, #1
 800b72a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800b72e:	6803      	ldr	r3, [r0, #0]
 800b730:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800b732:	bf5e      	ittt	pl
 800b734:	6803      	ldrpl	r3, [r0, #0]
 800b736:	f043 0301 	orrpl.w	r3, r3, #1
 800b73a:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b73c:	6803      	ldr	r3, [r0, #0]
 800b73e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b742:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800b744:	2321      	movs	r3, #33	; 0x21
 800b746:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800b74a:	2340      	movs	r3, #64	; 0x40
 800b74c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b750:	2300      	movs	r3, #0
 800b752:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 800b754:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b756:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 800b758:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800b75c:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800b75e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b760:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800b762:	4b28      	ldr	r3, [pc, #160]	; (800b804 <HAL_I2C_Mem_Write+0x11c>)
 800b764:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800b766:	e9cd 6500 	strd	r6, r5, [sp]
 800b76a:	464b      	mov	r3, r9
 800b76c:	4642      	mov	r2, r8
 800b76e:	4639      	mov	r1, r7
 800b770:	4620      	mov	r0, r4
 800b772:	f7ff fe1d 	bl	800b3b0 <I2C_RequestMemoryWrite>
 800b776:	2800      	cmp	r0, #0
 800b778:	d02a      	beq.n	800b7d0 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 800b77a:	2001      	movs	r0, #1
 800b77c:	e7c3      	b.n	800b706 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b77e:	f7ff fdf1 	bl	800b364 <I2C_WaitOnTXEFlagUntilTimeout>
 800b782:	b140      	cbz	r0, 800b796 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800b784:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b786:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b788:	bf01      	itttt	eq
 800b78a:	6822      	ldreq	r2, [r4, #0]
 800b78c:	6813      	ldreq	r3, [r2, #0]
 800b78e:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800b792:	6013      	streq	r3, [r2, #0]
 800b794:	e7f1      	b.n	800b77a <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b796:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b798:	6827      	ldr	r7, [r4, #0]
 800b79a:	461a      	mov	r2, r3
 800b79c:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b7a0:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 800b7a2:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b7a4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800b7a6:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 800b7a8:	3a01      	subs	r2, #1
 800b7aa:	b292      	uxth	r2, r2
 800b7ac:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800b7ae:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 800b7b0:	1e48      	subs	r0, r1, #1
 800b7b2:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800b7b4:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 800b7b6:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800b7b8:	d50a      	bpl.n	800b7d0 <HAL_I2C_Mem_Write+0xe8>
 800b7ba:	b148      	cbz	r0, 800b7d0 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b7bc:	785a      	ldrb	r2, [r3, #1]
 800b7be:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 800b7c0:	3302      	adds	r3, #2
 800b7c2:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800b7c4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b7c6:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 800b7c8:	3902      	subs	r1, #2
        hi2c->XferCount--;
 800b7ca:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 800b7cc:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800b7ce:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800b7d0:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b7d2:	462a      	mov	r2, r5
 800b7d4:	4631      	mov	r1, r6
 800b7d6:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 800b7d8:	2b00      	cmp	r3, #0
 800b7da:	d1d0      	bne.n	800b77e <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b7dc:	f7ff fd3b 	bl	800b256 <I2C_WaitOnBTFFlagUntilTimeout>
 800b7e0:	2800      	cmp	r0, #0
 800b7e2:	d1cf      	bne.n	800b784 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b7e4:	6822      	ldr	r2, [r4, #0]
 800b7e6:	6813      	ldr	r3, [r2, #0]
 800b7e8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800b7ec:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800b7ee:	2320      	movs	r3, #32
 800b7f0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800b7f4:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800b7f8:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 800b7fc:	e783      	b.n	800b706 <HAL_I2C_Mem_Write+0x1e>
 800b7fe:	bf00      	nop
 800b800:	00100002 	.word	0x00100002
 800b804:	ffff0000 	.word	0xffff0000

0800b808 <HAL_I2C_Mem_Read>:
{
 800b808:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b80c:	4604      	mov	r4, r0
 800b80e:	b087      	sub	sp, #28
 800b810:	4699      	mov	r9, r3
 800b812:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800b814:	460d      	mov	r5, r1
 800b816:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800b818:	f7fe fccc 	bl	800a1b4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b81c:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800b820:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800b822:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b824:	d004      	beq.n	800b830 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 800b826:	2502      	movs	r5, #2
}
 800b828:	4628      	mov	r0, r5
 800b82a:	b007      	add	sp, #28
 800b82c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800b830:	9000      	str	r0, [sp, #0]
 800b832:	4976      	ldr	r1, [pc, #472]	; (800ba0c <HAL_I2C_Mem_Read+0x204>)
 800b834:	2319      	movs	r3, #25
 800b836:	2201      	movs	r2, #1
 800b838:	4620      	mov	r0, r4
 800b83a:	f7ff fd61 	bl	800b300 <I2C_WaitOnFlagUntilTimeout>
 800b83e:	2800      	cmp	r0, #0
 800b840:	d1f1      	bne.n	800b826 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 800b842:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800b846:	2b01      	cmp	r3, #1
 800b848:	d0ed      	beq.n	800b826 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800b84a:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800b84c:	2301      	movs	r3, #1
 800b84e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800b852:	6803      	ldr	r3, [r0, #0]
 800b854:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800b856:	bf5e      	ittt	pl
 800b858:	6803      	ldrpl	r3, [r0, #0]
 800b85a:	f043 0301 	orrpl.w	r3, r3, #1
 800b85e:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b860:	6803      	ldr	r3, [r0, #0]
 800b862:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b866:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800b868:	2322      	movs	r3, #34	; 0x22
 800b86a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800b86e:	2340      	movs	r3, #64	; 0x40
 800b870:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b874:	2300      	movs	r3, #0
 800b876:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 800b878:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b87a:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 800b87c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800b880:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800b882:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b884:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800b886:	4b62      	ldr	r3, [pc, #392]	; (800ba10 <HAL_I2C_Mem_Read+0x208>)
 800b888:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800b88a:	4629      	mov	r1, r5
 800b88c:	e9cd 7600 	strd	r7, r6, [sp]
 800b890:	464b      	mov	r3, r9
 800b892:	4642      	mov	r2, r8
 800b894:	4620      	mov	r0, r4
 800b896:	f7ff fde3 	bl	800b460 <I2C_RequestMemoryRead>
 800b89a:	4605      	mov	r5, r0
 800b89c:	b108      	cbz	r0, 800b8a2 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 800b89e:	2501      	movs	r5, #1
 800b8a0:	e7c2      	b.n	800b828 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 800b8a2:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800b8a4:	6823      	ldr	r3, [r4, #0]
 800b8a6:	b9b2      	cbnz	r2, 800b8d6 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b8a8:	9002      	str	r0, [sp, #8]
 800b8aa:	695a      	ldr	r2, [r3, #20]
 800b8ac:	9202      	str	r2, [sp, #8]
 800b8ae:	699a      	ldr	r2, [r3, #24]
 800b8b0:	9202      	str	r2, [sp, #8]
 800b8b2:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b8b4:	681a      	ldr	r2, [r3, #0]
 800b8b6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b8ba:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b8bc:	f8df 8154 	ldr.w	r8, [pc, #340]	; 800ba14 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 800b8c0:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800b8c2:	2b00      	cmp	r3, #0
 800b8c4:	d12c      	bne.n	800b920 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 800b8c6:	2220      	movs	r2, #32
 800b8c8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800b8cc:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800b8d0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800b8d4:	e7a8      	b.n	800b828 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 800b8d6:	2a01      	cmp	r2, #1
 800b8d8:	d10a      	bne.n	800b8f0 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b8da:	681a      	ldr	r2, [r3, #0]
 800b8dc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b8e0:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b8e2:	9003      	str	r0, [sp, #12]
 800b8e4:	695a      	ldr	r2, [r3, #20]
 800b8e6:	9203      	str	r2, [sp, #12]
 800b8e8:	699a      	ldr	r2, [r3, #24]
 800b8ea:	9203      	str	r2, [sp, #12]
 800b8ec:	9a03      	ldr	r2, [sp, #12]
 800b8ee:	e7e1      	b.n	800b8b4 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 800b8f0:	2a02      	cmp	r2, #2
 800b8f2:	d10e      	bne.n	800b912 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b8f4:	681a      	ldr	r2, [r3, #0]
 800b8f6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b8fa:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b8fc:	681a      	ldr	r2, [r3, #0]
 800b8fe:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b902:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b904:	9004      	str	r0, [sp, #16]
 800b906:	695a      	ldr	r2, [r3, #20]
 800b908:	9204      	str	r2, [sp, #16]
 800b90a:	699b      	ldr	r3, [r3, #24]
 800b90c:	9304      	str	r3, [sp, #16]
 800b90e:	9b04      	ldr	r3, [sp, #16]
 800b910:	e7d4      	b.n	800b8bc <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b912:	9005      	str	r0, [sp, #20]
 800b914:	695a      	ldr	r2, [r3, #20]
 800b916:	9205      	str	r2, [sp, #20]
 800b918:	699b      	ldr	r3, [r3, #24]
 800b91a:	9305      	str	r3, [sp, #20]
 800b91c:	9b05      	ldr	r3, [sp, #20]
 800b91e:	e7cd      	b.n	800b8bc <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 800b920:	2b03      	cmp	r3, #3
 800b922:	d856      	bhi.n	800b9d2 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 800b924:	2b01      	cmp	r3, #1
 800b926:	d115      	bne.n	800b954 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b928:	4632      	mov	r2, r6
 800b92a:	4639      	mov	r1, r7
 800b92c:	4620      	mov	r0, r4
 800b92e:	f7ff fcb8 	bl	800b2a2 <I2C_WaitOnRXNEFlagUntilTimeout>
 800b932:	2800      	cmp	r0, #0
 800b934:	d1b3      	bne.n	800b89e <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b936:	6823      	ldr	r3, [r4, #0]
 800b938:	691a      	ldr	r2, [r3, #16]
 800b93a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b93c:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800b93e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b940:	3301      	adds	r3, #1
 800b942:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800b944:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800b946:	3b01      	subs	r3, #1
 800b948:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800b94a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b94c:	3b01      	subs	r3, #1
 800b94e:	b29b      	uxth	r3, r3
 800b950:	8563      	strh	r3, [r4, #42]	; 0x2a
 800b952:	e7b5      	b.n	800b8c0 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 800b954:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b956:	9600      	str	r6, [sp, #0]
 800b958:	463b      	mov	r3, r7
 800b95a:	f04f 0200 	mov.w	r2, #0
 800b95e:	4641      	mov	r1, r8
 800b960:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 800b962:	d119      	bne.n	800b998 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b964:	f7ff fccc 	bl	800b300 <I2C_WaitOnFlagUntilTimeout>
 800b968:	2800      	cmp	r0, #0
 800b96a:	d198      	bne.n	800b89e <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b96c:	6823      	ldr	r3, [r4, #0]
 800b96e:	681a      	ldr	r2, [r3, #0]
 800b970:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b974:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b976:	691a      	ldr	r2, [r3, #16]
 800b978:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b97a:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800b97c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b97e:	1c53      	adds	r3, r2, #1
 800b980:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800b982:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800b984:	3b01      	subs	r3, #1
 800b986:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800b988:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b98a:	3b01      	subs	r3, #1
 800b98c:	b29b      	uxth	r3, r3
 800b98e:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b990:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b992:	691b      	ldr	r3, [r3, #16]
 800b994:	7053      	strb	r3, [r2, #1]
 800b996:	e7d2      	b.n	800b93e <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b998:	f7ff fcb2 	bl	800b300 <I2C_WaitOnFlagUntilTimeout>
 800b99c:	2800      	cmp	r0, #0
 800b99e:	f47f af7e 	bne.w	800b89e <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b9a2:	6823      	ldr	r3, [r4, #0]
 800b9a4:	681a      	ldr	r2, [r3, #0]
 800b9a6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b9aa:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b9ac:	691a      	ldr	r2, [r3, #16]
 800b9ae:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b9b0:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800b9b2:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b9b4:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 800b9b6:	3301      	adds	r3, #1
 800b9b8:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800b9ba:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800b9bc:	3b01      	subs	r3, #1
 800b9be:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800b9c0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b9c2:	3b01      	subs	r3, #1
 800b9c4:	b29b      	uxth	r3, r3
 800b9c6:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b9c8:	4602      	mov	r2, r0
 800b9ca:	463b      	mov	r3, r7
 800b9cc:	4641      	mov	r1, r8
 800b9ce:	4620      	mov	r0, r4
 800b9d0:	e7c8      	b.n	800b964 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b9d2:	4632      	mov	r2, r6
 800b9d4:	4639      	mov	r1, r7
 800b9d6:	4620      	mov	r0, r4
 800b9d8:	f7ff fc63 	bl	800b2a2 <I2C_WaitOnRXNEFlagUntilTimeout>
 800b9dc:	2800      	cmp	r0, #0
 800b9de:	f47f af5e 	bne.w	800b89e <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b9e2:	6823      	ldr	r3, [r4, #0]
 800b9e4:	691a      	ldr	r2, [r3, #16]
 800b9e6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b9e8:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 800b9ea:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b9ec:	1c53      	adds	r3, r2, #1
 800b9ee:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 800b9f0:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800b9f2:	3b01      	subs	r3, #1
 800b9f4:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800b9f6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b9f8:	3b01      	subs	r3, #1
 800b9fa:	b29b      	uxth	r3, r3
 800b9fc:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800b9fe:	6823      	ldr	r3, [r4, #0]
 800ba00:	6959      	ldr	r1, [r3, #20]
 800ba02:	0749      	lsls	r1, r1, #29
 800ba04:	f57f af5c 	bpl.w	800b8c0 <HAL_I2C_Mem_Read+0xb8>
 800ba08:	e7c3      	b.n	800b992 <HAL_I2C_Mem_Read+0x18a>
 800ba0a:	bf00      	nop
 800ba0c:	00100002 	.word	0x00100002
 800ba10:	ffff0000 	.word	0xffff0000
 800ba14:	00010004 	.word	0x00010004

0800ba18 <HAL_I2C_GetState>:
  return hi2c->State;
 800ba18:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
}
 800ba1c:	4770      	bx	lr

0800ba1e <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 800ba1e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800ba22:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800ba24:	6804      	ldr	r4, [r0, #0]
 800ba26:	684f      	ldr	r7, [r1, #4]
 800ba28:	68e5      	ldr	r5, [r4, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800ba2a:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800ba2e:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800ba32:	3284      	adds	r2, #132	; 0x84
 800ba34:	18a3      	adds	r3, r4, r2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800ba36:	f10c 0601 	add.w	r6, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800ba3a:	6858      	ldr	r0, [r3, #4]
 800ba3c:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 800ba40:	6058      	str	r0, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800ba42:	68e0      	ldr	r0, [r4, #12]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800ba44:	f3c5 450b 	ubfx	r5, r5, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800ba48:	f3c0 400b 	ubfx	r0, r0, #16, #12
 800ba4c:	4430      	add	r0, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800ba4e:	443d      	add	r5, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800ba50:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800ba54:	6058      	str	r0, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800ba56:	68e0      	ldr	r0, [r4, #12]
 800ba58:	68cd      	ldr	r5, [r1, #12]
 800ba5a:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800ba5e:	4405      	add	r5, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800ba60:	6898      	ldr	r0, [r3, #8]
 800ba62:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 800ba66:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800ba68:	68e6      	ldr	r6, [r4, #12]
 800ba6a:	6888      	ldr	r0, [r1, #8]
 800ba6c:	f3c6 060a 	ubfx	r6, r6, #0, #11
 800ba70:	3001      	adds	r0, #1
 800ba72:	4430      	add	r0, r6
 800ba74:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800ba78:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800ba7a:	6918      	ldr	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800ba7c:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800ba7e:	f020 0007 	bic.w	r0, r0, #7
 800ba82:	6118      	str	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800ba84:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800ba88:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800ba8a:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800ba8c:	f891 0032 	ldrb.w	r0, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800ba90:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800ba94:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800ba98:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 800ba9c:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 800baa0:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 800baa4:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 800baa8:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800baaa:	6958      	ldr	r0, [r3, #20]
 800baac:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 800bab0:	6158      	str	r0, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800bab2:	6948      	ldr	r0, [r1, #20]
 800bab4:	6158      	str	r0, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800bab6:	69d8      	ldr	r0, [r3, #28]
 800bab8:	f420 60e0 	bic.w	r0, r0, #1792	; 0x700
 800babc:	f020 0007 	bic.w	r0, r0, #7
 800bac0:	61d8      	str	r0, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800bac2:	e9d1 5007 	ldrd	r5, r0, [r1, #28]
 800bac6:	4305      	orrs	r5, r0
 800bac8:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800baca:	6a98      	ldr	r0, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800bacc:	6a48      	ldr	r0, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800bace:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800bad2:	6298      	str	r0, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800bad4:	b31e      	cbz	r6, 800bb1e <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800bad6:	2e01      	cmp	r6, #1
 800bad8:	d023      	beq.n	800bb22 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800bada:	1eb0      	subs	r0, r6, #2
 800badc:	2802      	cmp	r0, #2
 800bade:	d922      	bls.n	800bb26 <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 800bae0:	2e07      	cmp	r6, #7
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 800bae2:	bf0c      	ite	eq
 800bae4:	2002      	moveq	r0, #2
 800bae6:	2001      	movne	r0, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800bae8:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800baea:	f005 25e0 	and.w	r5, r5, #3758153728	; 0xe000e000
 800baee:	62dd      	str	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800baf0:	6a8d      	ldr	r5, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800baf2:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800baf4:	eba7 070c 	sub.w	r7, r7, ip
 800baf8:	4345      	muls	r5, r0
 800bafa:	4378      	muls	r0, r7
 800bafc:	3003      	adds	r0, #3
 800bafe:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800bb02:	62d8      	str	r0, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800bb04:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800bb06:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 800bb0a:	f020 0007 	bic.w	r0, r0, #7
 800bb0e:	6318      	str	r0, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800bb10:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800bb12:	58a3      	ldr	r3, [r4, r2]
 800bb14:	f043 0301 	orr.w	r3, r3, #1
 800bb18:	50a3      	str	r3, [r4, r2]
}
 800bb1a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 800bb1e:	2004      	movs	r0, #4
 800bb20:	e7e2      	b.n	800bae8 <LTDC_SetConfig+0xca>
    tmp = 3U;
 800bb22:	2003      	movs	r0, #3
 800bb24:	e7e0      	b.n	800bae8 <LTDC_SetConfig+0xca>
    tmp = 2U;
 800bb26:	2002      	movs	r0, #2
 800bb28:	e7de      	b.n	800bae8 <LTDC_SetConfig+0xca>
	...

0800bb2c <HAL_LTDC_Init>:
{
 800bb2c:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800bb2e:	4604      	mov	r4, r0
 800bb30:	2800      	cmp	r0, #0
 800bb32:	d063      	beq.n	800bbfc <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800bb34:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800bb38:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800bb3c:	b91b      	cbnz	r3, 800bb46 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800bb3e:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800bb42:	f7f6 f829 	bl	8001b98 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bb46:	2302      	movs	r3, #2
 800bb48:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800bb4c:	6823      	ldr	r3, [r4, #0]
 800bb4e:	699a      	ldr	r2, [r3, #24]
 800bb50:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 800bb54:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800bb56:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800bb5a:	4302      	orrs	r2, r0
 800bb5c:	68e0      	ldr	r0, [r4, #12]
 800bb5e:	6999      	ldr	r1, [r3, #24]
 800bb60:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800bb62:	6920      	ldr	r0, [r4, #16]
 800bb64:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800bb66:	430a      	orrs	r2, r1
 800bb68:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800bb6a:	689a      	ldr	r2, [r3, #8]
 800bb6c:	4924      	ldr	r1, [pc, #144]	; (800bc00 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800bb6e:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800bb70:	400a      	ands	r2, r1
 800bb72:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800bb74:	689a      	ldr	r2, [r3, #8]
 800bb76:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800bb7a:	69a0      	ldr	r0, [r4, #24]
 800bb7c:	4302      	orrs	r2, r0
 800bb7e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800bb80:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800bb82:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800bb84:	400a      	ands	r2, r1
 800bb86:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800bb88:	68da      	ldr	r2, [r3, #12]
 800bb8a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800bb8e:	6a20      	ldr	r0, [r4, #32]
 800bb90:	4302      	orrs	r2, r0
 800bb92:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800bb94:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800bb96:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800bb98:	400a      	ands	r2, r1
 800bb9a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800bb9c:	691a      	ldr	r2, [r3, #16]
 800bb9e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800bba2:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800bba4:	4302      	orrs	r2, r0
 800bba6:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800bba8:	695a      	ldr	r2, [r3, #20]
 800bbaa:	4011      	ands	r1, r2
 800bbac:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800bbae:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800bbb0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800bbb2:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800bbb6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800bbb8:	430a      	orrs	r2, r1
 800bbba:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800bbbc:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800bbbe:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800bbc2:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800bbc6:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 800bbca:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800bbcc:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800bbce:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800bbd2:	430a      	orrs	r2, r1
 800bbd4:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800bbd8:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800bbdc:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800bbde:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bbe0:	f042 0206 	orr.w	r2, r2, #6
 800bbe4:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800bbe6:	699a      	ldr	r2, [r3, #24]
 800bbe8:	f042 0201 	orr.w	r2, r2, #1
 800bbec:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800bbee:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800bbf0:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800bbf2:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800bbf6:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 800bbfa:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800bbfc:	2001      	movs	r0, #1
 800bbfe:	e7fc      	b.n	800bbfa <HAL_LTDC_Init+0xce>
 800bc00:	f000f800 	.word	0xf000f800

0800bc04 <HAL_LTDC_ErrorCallback>:
 800bc04:	4770      	bx	lr

0800bc06 <HAL_LTDC_LineEventCallback>:
 800bc06:	4770      	bx	lr

0800bc08 <HAL_LTDC_ReloadEventCallback>:
 800bc08:	4770      	bx	lr

0800bc0a <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800bc0a:	6803      	ldr	r3, [r0, #0]
{
 800bc0c:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800bc0e:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800bc10:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800bc12:	0772      	lsls	r2, r6, #29
{
 800bc14:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800bc16:	d514      	bpl.n	800bc42 <HAL_LTDC_IRQHandler+0x38>
 800bc18:	0769      	lsls	r1, r5, #29
 800bc1a:	d512      	bpl.n	800bc42 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800bc1c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bc1e:	f022 0204 	bic.w	r2, r2, #4
 800bc22:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800bc24:	2204      	movs	r2, #4
 800bc26:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800bc28:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800bc2c:	f043 0301 	orr.w	r3, r3, #1
 800bc30:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800bc34:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bc36:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bc3a:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800bc3e:	f7ff ffe1 	bl	800bc04 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800bc42:	07b2      	lsls	r2, r6, #30
 800bc44:	d516      	bpl.n	800bc74 <HAL_LTDC_IRQHandler+0x6a>
 800bc46:	07ab      	lsls	r3, r5, #30
 800bc48:	d514      	bpl.n	800bc74 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800bc4a:	6823      	ldr	r3, [r4, #0]
 800bc4c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bc4e:	f022 0202 	bic.w	r2, r2, #2
 800bc52:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800bc54:	2202      	movs	r2, #2
 800bc56:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800bc58:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800bc5c:	4313      	orrs	r3, r2
 800bc5e:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bc62:	2304      	movs	r3, #4
 800bc64:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bc68:	2300      	movs	r3, #0
 800bc6a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800bc6e:	4620      	mov	r0, r4
 800bc70:	f7ff ffc8 	bl	800bc04 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800bc74:	07f0      	lsls	r0, r6, #31
 800bc76:	d510      	bpl.n	800bc9a <HAL_LTDC_IRQHandler+0x90>
 800bc78:	07e9      	lsls	r1, r5, #31
 800bc7a:	d50e      	bpl.n	800bc9a <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bc7c:	6823      	ldr	r3, [r4, #0]
 800bc7e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bc80:	f022 0201 	bic.w	r2, r2, #1
 800bc84:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800bc86:	2201      	movs	r2, #1
 800bc88:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800bc8a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800bc8c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bc90:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800bc94:	4620      	mov	r0, r4
 800bc96:	f7ff ffb6 	bl	800bc06 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800bc9a:	0732      	lsls	r2, r6, #28
 800bc9c:	d511      	bpl.n	800bcc2 <HAL_LTDC_IRQHandler+0xb8>
 800bc9e:	072b      	lsls	r3, r5, #28
 800bca0:	d50f      	bpl.n	800bcc2 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800bca2:	6823      	ldr	r3, [r4, #0]
 800bca4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bca6:	f022 0208 	bic.w	r2, r2, #8
 800bcaa:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800bcac:	2208      	movs	r2, #8
 800bcae:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 800bcb0:	2301      	movs	r3, #1
 800bcb2:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bcb6:	2300      	movs	r3, #0
 800bcb8:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800bcbc:	4620      	mov	r0, r4
 800bcbe:	f7ff ffa3 	bl	800bc08 <HAL_LTDC_ReloadEventCallback>
}
 800bcc2:	bd70      	pop	{r4, r5, r6, pc}

0800bcc4 <HAL_LTDC_ConfigLayer>:
{
 800bcc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800bcc8:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800bccc:	2b01      	cmp	r3, #1
{
 800bcce:	4606      	mov	r6, r0
 800bcd0:	460f      	mov	r7, r1
 800bcd2:	4694      	mov	ip, r2
 800bcd4:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800bcd8:	d01f      	beq.n	800bd1a <HAL_LTDC_ConfigLayer+0x56>
 800bcda:	f04f 0801 	mov.w	r8, #1
 800bcde:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bce2:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bce6:	2434      	movs	r4, #52	; 0x34
 800bce8:	460d      	mov	r5, r1
 800bcea:	fb04 6402 	mla	r4, r4, r2, r6
 800bcee:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800bcf0:	3438      	adds	r4, #56	; 0x38
 800bcf2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800bcf4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800bcf6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800bcf8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800bcfa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800bcfc:	682b      	ldr	r3, [r5, #0]
 800bcfe:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800bd00:	4630      	mov	r0, r6
 800bd02:	4662      	mov	r2, ip
 800bd04:	4639      	mov	r1, r7
 800bd06:	f7ff fe8a 	bl	800ba1e <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800bd0a:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 800bd0c:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800bd0e:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800bd12:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800bd16:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 800bd1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800bd20 <HAL_LTDC_SetPitch>:
{
 800bd20:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hltdc);
 800bd22:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800bd26:	2b01      	cmp	r3, #1
 800bd28:	f04f 0302 	mov.w	r3, #2
 800bd2c:	d02c      	beq.n	800bd88 <HAL_LTDC_SetPitch+0x68>
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 800bd2e:	2434      	movs	r4, #52	; 0x34
 800bd30:	fb04 0402 	mla	r4, r4, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bd34:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 800bd38:	6ca4      	ldr	r4, [r4, #72]	; 0x48
  if (pixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800bd3a:	b33c      	cbz	r4, 800bd8c <HAL_LTDC_SetPitch+0x6c>
  else if (pixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800bd3c:	2c01      	cmp	r4, #1
 800bd3e:	d027      	beq.n	800bd90 <HAL_LTDC_SetPitch+0x70>
  else if ((pixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800bd40:	1ea5      	subs	r5, r4, #2
 800bd42:	429d      	cmp	r5, r3
 800bd44:	d902      	bls.n	800bd4c <HAL_LTDC_SetPitch+0x2c>
    tmp = 1U;
 800bd46:	2c07      	cmp	r4, #7
 800bd48:	bf18      	it	ne
 800bd4a:	2301      	movne	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 800bd4c:	6804      	ldr	r4, [r0, #0]
 800bd4e:	01d2      	lsls	r2, r2, #7
 800bd50:	3284      	adds	r2, #132	; 0x84
 800bd52:	4422      	add	r2, r4
  pitchUpdate = ((LinePitchInPixels * tmp) << 16U);
 800bd54:	434b      	muls	r3, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 800bd56:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
 800bd58:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 800bd5c:	f424 14f8 	bic.w	r4, r4, #2031616	; 0x1f0000
 800bd60:	62d4      	str	r4, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 800bd62:	4c0c      	ldr	r4, [pc, #48]	; (800bd94 <HAL_LTDC_SetPitch+0x74>)
 800bd64:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800bd66:	f045 0501 	orr.w	r5, r5, #1
 800bd6a:	6265      	str	r5, [r4, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR |= pitchUpdate;
 800bd6c:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
 800bd6e:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 800bd72:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 800bd74:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800bd76:	f043 0301 	orr.w	r3, r3, #1
 800bd7a:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 800bd7c:	2301      	movs	r3, #1
 800bd7e:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800bd82:	2300      	movs	r3, #0
 800bd84:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800bd88:	4618      	mov	r0, r3
 800bd8a:	bd30      	pop	{r4, r5, pc}
    tmp = 4U;
 800bd8c:	2304      	movs	r3, #4
 800bd8e:	e7dd      	b.n	800bd4c <HAL_LTDC_SetPitch+0x2c>
    tmp = 3U;
 800bd90:	2303      	movs	r3, #3
 800bd92:	e7db      	b.n	800bd4c <HAL_LTDC_SetPitch+0x2c>
 800bd94:	40016800 	.word	0x40016800

0800bd98 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 800bd98:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 800bd9a:	2300      	movs	r3, #0
 800bd9c:	9301      	str	r3, [sp, #4]
 800bd9e:	4b18      	ldr	r3, [pc, #96]	; (800be00 <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800bda0:	4d18      	ldr	r5, [pc, #96]	; (800be04 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 800bda2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800bda4:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800bda8:	641a      	str	r2, [r3, #64]	; 0x40
 800bdaa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800bdac:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800bdb0:	9301      	str	r3, [sp, #4]
 800bdb2:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 800bdb4:	4b14      	ldr	r3, [pc, #80]	; (800be08 <HAL_PWREx_EnableOverDrive+0x70>)
 800bdb6:	2201      	movs	r2, #1
 800bdb8:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 800bdba:	f7fe f9fb 	bl	800a1b4 <HAL_GetTick>
 800bdbe:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800bdc0:	686b      	ldr	r3, [r5, #4]
 800bdc2:	03da      	lsls	r2, r3, #15
 800bdc4:	d50b      	bpl.n	800bdde <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800bdc6:	4b11      	ldr	r3, [pc, #68]	; (800be0c <HAL_PWREx_EnableOverDrive+0x74>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800bdc8:	4d0e      	ldr	r5, [pc, #56]	; (800be04 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800bdca:	2201      	movs	r2, #1
 800bdcc:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 800bdce:	f7fe f9f1 	bl	800a1b4 <HAL_GetTick>
 800bdd2:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800bdd4:	686b      	ldr	r3, [r5, #4]
 800bdd6:	039b      	lsls	r3, r3, #14
 800bdd8:	d50a      	bpl.n	800bdf0 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 800bdda:	2000      	movs	r0, #0
 800bddc:	e006      	b.n	800bdec <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800bdde:	f7fe f9e9 	bl	800a1b4 <HAL_GetTick>
 800bde2:	1b00      	subs	r0, r0, r4
 800bde4:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800bde8:	d9ea      	bls.n	800bdc0 <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 800bdea:	2003      	movs	r0, #3
}
 800bdec:	b003      	add	sp, #12
 800bdee:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800bdf0:	f7fe f9e0 	bl	800a1b4 <HAL_GetTick>
 800bdf4:	1b00      	subs	r0, r0, r4
 800bdf6:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800bdfa:	d9eb      	bls.n	800bdd4 <HAL_PWREx_EnableOverDrive+0x3c>
 800bdfc:	e7f5      	b.n	800bdea <HAL_PWREx_EnableOverDrive+0x52>
 800bdfe:	bf00      	nop
 800be00:	40023800 	.word	0x40023800
 800be04:	40007000 	.word	0x40007000
 800be08:	420e0040 	.word	0x420e0040
 800be0c:	420e0044 	.word	0x420e0044

0800be10 <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 800be10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 800be14:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 800be16:	b13e      	cbz	r6, 800be28 <QSPI_Config+0x18>
 800be18:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 800be1c:	bf1f      	itttt	ne
 800be1e:	6a8b      	ldrne	r3, [r1, #40]	; 0x28
 800be20:	6804      	ldrne	r4, [r0, #0]
 800be22:	f103 33ff 	addne.w	r3, r3, #4294967295
 800be26:	6123      	strne	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 800be28:	f8d1 a018 	ldr.w	sl, [r1, #24]
 800be2c:	e9d1 7c07 	ldrd	r7, ip, [r1, #28]
 800be30:	f1ba 0f00 	cmp.w	sl, #0
 800be34:	d04e      	beq.n	800bed4 <QSPI_Config+0xc4>
  {
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 800be36:	694b      	ldr	r3, [r1, #20]
 800be38:	6805      	ldr	r5, [r0, #0]
 800be3a:	f8d1 8000 	ldr.w	r8, [r1]
 800be3e:	6b48      	ldr	r0, [r1, #52]	; 0x34
 800be40:	ea46 0a0a 	orr.w	sl, r6, sl
 800be44:	e9d1 490b 	ldrd	r4, r9, [r1, #44]	; 0x2c
 800be48:	ea4f 4e83 	mov.w	lr, r3, lsl #18
 800be4c:	ea4a 0a02 	orr.w	sl, sl, r2
 800be50:	f1bc 0f00 	cmp.w	ip, #0
 800be54:	d026      	beq.n	800bea4 <QSPI_Config+0x94>
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800be56:	688b      	ldr	r3, [r1, #8]
 800be58:	690e      	ldr	r6, [r1, #16]
 800be5a:	61eb      	str	r3, [r5, #28]

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800be5c:	ea4c 0c0a 	orr.w	ip, ip, sl
 800be60:	b1a7      	cbz	r7, 800be8c <QSPI_Config+0x7c>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800be62:	ea48 0307 	orr.w	r3, r8, r7
 800be66:	4323      	orrs	r3, r4
 800be68:	ea43 0309 	orr.w	r3, r3, r9
 800be6c:	4303      	orrs	r3, r0
 800be6e:	68c8      	ldr	r0, [r1, #12]
 800be70:	4333      	orrs	r3, r6
 800be72:	4303      	orrs	r3, r0
 800be74:	ea43 030e 	orr.w	r3, r3, lr
 800be78:	ea43 030c 	orr.w	r3, r3, ip
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize | cmd->AddressMode |
                                         cmd->InstructionMode | cmd->Instruction | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800be7c:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800be80:	616b      	str	r3, [r5, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800be82:	d001      	beq.n	800be88 <QSPI_Config+0x78>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 800be84:	684b      	ldr	r3, [r1, #4]
 800be86:	61ab      	str	r3, [r5, #24]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 800be88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800be8c:	ea48 0304 	orr.w	r3, r8, r4
 800be90:	ea43 0309 	orr.w	r3, r3, r9
 800be94:	4303      	orrs	r3, r0
 800be96:	4333      	orrs	r3, r6
 800be98:	ea43 030e 	orr.w	r3, r3, lr
 800be9c:	ea43 030c 	orr.w	r3, r3, ip
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bea0:	616b      	str	r3, [r5, #20]
 800bea2:	e7f1      	b.n	800be88 <QSPI_Config+0x78>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800bea4:	b167      	cbz	r7, 800bec0 <QSPI_Config+0xb0>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bea6:	ea48 0307 	orr.w	r3, r8, r7
 800beaa:	4323      	orrs	r3, r4
 800beac:	ea43 0309 	orr.w	r3, r3, r9
 800beb0:	4303      	orrs	r3, r0
 800beb2:	68c8      	ldr	r0, [r1, #12]
 800beb4:	4303      	orrs	r3, r0
 800beb6:	ea43 030e 	orr.w	r3, r3, lr
 800beba:	ea43 030a 	orr.w	r3, r3, sl
 800bebe:	e7dd      	b.n	800be7c <QSPI_Config+0x6c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bec0:	ea48 0304 	orr.w	r3, r8, r4
 800bec4:	ea43 0309 	orr.w	r3, r3, r9
 800bec8:	4303      	orrs	r3, r0
 800beca:	ea43 030e 	orr.w	r3, r3, lr
 800bece:	ea43 030a 	orr.w	r3, r3, sl
 800bed2:	e7e5      	b.n	800bea0 <QSPI_Config+0x90>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 800bed4:	f1bc 0f00 	cmp.w	ip, #0
 800bed8:	d028      	beq.n	800bf2c <QSPI_Config+0x11c>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800beda:	6804      	ldr	r4, [r0, #0]
 800bedc:	688b      	ldr	r3, [r1, #8]
 800bede:	61e3      	str	r3, [r4, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800bee0:	ea46 030c 	orr.w	r3, r6, ip
 800bee4:	694e      	ldr	r6, [r1, #20]
 800bee6:	6908      	ldr	r0, [r1, #16]
 800bee8:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 800beec:	ea43 0502 	orr.w	r5, r3, r2
 800bef0:	04b6      	lsls	r6, r6, #18
 800bef2:	e9d1 830b 	ldrd	r8, r3, [r1, #44]	; 0x2c
 800bef6:	b187      	cbz	r7, 800bf1a <QSPI_Config+0x10a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bef8:	4338      	orrs	r0, r7
 800befa:	ea40 0008 	orr.w	r0, r0, r8
 800befe:	4303      	orrs	r3, r0
 800bf00:	68c8      	ldr	r0, [r1, #12]
 800bf02:	ea43 030c 	orr.w	r3, r3, ip
 800bf06:	4303      	orrs	r3, r0
 800bf08:	4333      	orrs	r3, r6
 800bf0a:	432b      	orrs	r3, r5
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800bf0c:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bf10:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800bf12:	d0b9      	beq.n	800be88 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 800bf14:	684b      	ldr	r3, [r1, #4]
 800bf16:	61a3      	str	r3, [r4, #24]
 800bf18:	e7b6      	b.n	800be88 <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bf1a:	ea40 0008 	orr.w	r0, r0, r8
 800bf1e:	4303      	orrs	r3, r0
 800bf20:	ea43 030c 	orr.w	r3, r3, ip
 800bf24:	4333      	orrs	r3, r6
 800bf26:	432b      	orrs	r3, r5
 800bf28:	6163      	str	r3, [r4, #20]
 800bf2a:	e7ad      	b.n	800be88 <QSPI_Config+0x78>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800bf2c:	b1af      	cbz	r7, 800bf5a <QSPI_Config+0x14a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bf2e:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 800bf30:	6800      	ldr	r0, [r0, #0]
 800bf32:	ea46 0307 	orr.w	r3, r6, r7
 800bf36:	4313      	orrs	r3, r2
 800bf38:	4323      	orrs	r3, r4
 800bf3a:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 800bf3c:	4323      	orrs	r3, r4
 800bf3e:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 800bf40:	4323      	orrs	r3, r4
 800bf42:	68cc      	ldr	r4, [r1, #12]
 800bf44:	4323      	orrs	r3, r4
 800bf46:	694c      	ldr	r4, [r1, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800bf48:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bf4c:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 800bf50:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800bf52:	d099      	beq.n	800be88 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 800bf54:	684b      	ldr	r3, [r1, #4]
 800bf56:	6183      	str	r3, [r0, #24]
 800bf58:	e796      	b.n	800be88 <QSPI_Config+0x78>
        if (cmd->DataMode != QSPI_DATA_NONE)
 800bf5a:	2e00      	cmp	r6, #0
 800bf5c:	d094      	beq.n	800be88 <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bf5e:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 800bf60:	6800      	ldr	r0, [r0, #0]
 800bf62:	4333      	orrs	r3, r6
 800bf64:	6b0e      	ldr	r6, [r1, #48]	; 0x30
 800bf66:	431a      	orrs	r2, r3
 800bf68:	4332      	orrs	r2, r6
 800bf6a:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 800bf6c:	694b      	ldr	r3, [r1, #20]
 800bf6e:	4332      	orrs	r2, r6
 800bf70:	ea42 4283 	orr.w	r2, r2, r3, lsl #18
 800bf74:	6142      	str	r2, [r0, #20]
}
 800bf76:	e787      	b.n	800be88 <QSPI_Config+0x78>

0800bf78 <QSPI_WaitFlagStateUntilTimeout>:
{
 800bf78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bf7c:	f8dd 8018 	ldr.w	r8, [sp, #24]
 800bf80:	4604      	mov	r4, r0
 800bf82:	460e      	mov	r6, r1
 800bf84:	4615      	mov	r5, r2
 800bf86:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800bf88:	6822      	ldr	r2, [r4, #0]
 800bf8a:	6893      	ldr	r3, [r2, #8]
 800bf8c:	4233      	tst	r3, r6
 800bf8e:	bf14      	ite	ne
 800bf90:	2301      	movne	r3, #1
 800bf92:	2300      	moveq	r3, #0
 800bf94:	42ab      	cmp	r3, r5
 800bf96:	d101      	bne.n	800bf9c <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 800bf98:	2000      	movs	r0, #0
 800bf9a:	e012      	b.n	800bfc2 <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 800bf9c:	f1b8 3fff 	cmp.w	r8, #4294967295
 800bfa0:	d0f3      	beq.n	800bf8a <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bfa2:	f7fe f907 	bl	800a1b4 <HAL_GetTick>
 800bfa6:	1bc0      	subs	r0, r0, r7
 800bfa8:	4540      	cmp	r0, r8
 800bfaa:	d802      	bhi.n	800bfb2 <QSPI_WaitFlagStateUntilTimeout+0x3a>
 800bfac:	f1b8 0f00 	cmp.w	r8, #0
 800bfb0:	d1ea      	bne.n	800bf88 <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 800bfb2:	2304      	movs	r3, #4
 800bfb4:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 800bfb8:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800bfba:	f043 0301 	orr.w	r3, r3, #1
 800bfbe:	6463      	str	r3, [r4, #68]	; 0x44
 800bfc0:	2001      	movs	r0, #1
}
 800bfc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800bfc8 <HAL_QSPI_Init>:
{
 800bfc8:	b530      	push	{r4, r5, lr}
 800bfca:	b085      	sub	sp, #20
 800bfcc:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800bfce:	f7fe f8f1 	bl	800a1b4 <HAL_GetTick>
 800bfd2:	4603      	mov	r3, r0
  if(hqspi == NULL)
 800bfd4:	2c00      	cmp	r4, #0
 800bfd6:	d047      	beq.n	800c068 <HAL_QSPI_Init+0xa0>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 800bfd8:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800bfdc:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 800bfe0:	b94a      	cbnz	r2, 800bff6 <HAL_QSPI_Init+0x2e>
 800bfe2:	9003      	str	r0, [sp, #12]
    hqspi->Lock = HAL_UNLOCKED;
 800bfe4:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    HAL_QSPI_MspInit(hqspi);
 800bfe8:	4620      	mov	r0, r4
 800bfea:	f7f5 fe09 	bl	8001c00 <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 800bfee:	f241 3288 	movw	r2, #5000	; 0x1388
 800bff2:	9b03      	ldr	r3, [sp, #12]
 800bff4:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 800bff6:	6820      	ldr	r0, [r4, #0]
 800bff8:	68a1      	ldr	r1, [r4, #8]
 800bffa:	6802      	ldr	r2, [r0, #0]
 800bffc:	3901      	subs	r1, #1
 800bffe:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 800c002:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800c006:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800c008:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800c00a:	9200      	str	r2, [sp, #0]
 800c00c:	2120      	movs	r1, #32
 800c00e:	2200      	movs	r2, #0
 800c010:	4620      	mov	r0, r4
 800c012:	f7ff ffb1 	bl	800bf78 <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 800c016:	bb10      	cbnz	r0, 800c05e <HAL_QSPI_Init+0x96>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 800c018:	69e5      	ldr	r5, [r4, #28]
 800c01a:	68e3      	ldr	r3, [r4, #12]
 800c01c:	6822      	ldr	r2, [r4, #0]
 800c01e:	432b      	orrs	r3, r5
 800c020:	6a25      	ldr	r5, [r4, #32]
 800c022:	6811      	ldr	r1, [r2, #0]
 800c024:	432b      	orrs	r3, r5
 800c026:	6865      	ldr	r5, [r4, #4]
 800c028:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 800c02c:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 800c030:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 800c034:	430b      	orrs	r3, r1
 800c036:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 800c038:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 800c03c:	430b      	orrs	r3, r1
 800c03e:	6921      	ldr	r1, [r4, #16]
 800c040:	6855      	ldr	r5, [r2, #4]
 800c042:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800c046:	4909      	ldr	r1, [pc, #36]	; (800c06c <HAL_QSPI_Init+0xa4>)
 800c048:	4029      	ands	r1, r5
 800c04a:	430b      	orrs	r3, r1
 800c04c:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 800c04e:	6813      	ldr	r3, [r2, #0]
 800c050:	f043 0301 	orr.w	r3, r3, #1
 800c054:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 800c056:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800c058:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 800c05a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800c05e:	2300      	movs	r3, #0
 800c060:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800c064:	b005      	add	sp, #20
 800c066:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 800c068:	2001      	movs	r0, #1
 800c06a:	e7fb      	b.n	800c064 <HAL_QSPI_Init+0x9c>
 800c06c:	ffe0f8fe 	.word	0xffe0f8fe

0800c070 <HAL_QSPI_DeInit>:
{
 800c070:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 800c072:	4604      	mov	r4, r0
 800c074:	b168      	cbz	r0, 800c092 <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 800c076:	6802      	ldr	r2, [r0, #0]
 800c078:	6813      	ldr	r3, [r2, #0]
 800c07a:	f023 0301 	bic.w	r3, r3, #1
 800c07e:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 800c080:	f7f5 fe18 	bl	8001cb4 <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800c084:	2000      	movs	r0, #0
 800c086:	6460      	str	r0, [r4, #68]	; 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 800c088:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800c08c:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
}
 800c090:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800c092:	2001      	movs	r0, #1
 800c094:	e7fc      	b.n	800c090 <HAL_QSPI_DeInit+0x20>

0800c096 <HAL_QSPI_Command>:
{
 800c096:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c09a:	4604      	mov	r4, r0
 800c09c:	b085      	sub	sp, #20
 800c09e:	4617      	mov	r7, r2
 800c0a0:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 800c0a2:	f7fe f887 	bl	800a1b4 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800c0a6:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800c0aa:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800c0ac:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800c0ae:	d034      	beq.n	800c11a <HAL_QSPI_Command+0x84>
 800c0b0:	2201      	movs	r2, #1
 800c0b2:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800c0b6:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800c0ba:	2a01      	cmp	r2, #1
 800c0bc:	fa5f f882 	uxtb.w	r8, r2
 800c0c0:	f04f 0602 	mov.w	r6, #2
 800c0c4:	d127      	bne.n	800c116 <HAL_QSPI_Command+0x80>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800c0c6:	2200      	movs	r2, #0
 800c0c8:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800c0ca:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 800c0cc:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800c0d0:	9700      	str	r7, [sp, #0]
 800c0d2:	2120      	movs	r1, #32
 800c0d4:	4620      	mov	r0, r4
 800c0d6:	f7ff ff4f 	bl	800bf78 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800c0da:	4605      	mov	r5, r0
 800c0dc:	b9a0      	cbnz	r0, 800c108 <HAL_QSPI_Command+0x72>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800c0de:	4602      	mov	r2, r0
 800c0e0:	4649      	mov	r1, r9
 800c0e2:	4620      	mov	r0, r4
 800c0e4:	f7ff fe94 	bl	800be10 <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 800c0e8:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 800c0ec:	9b03      	ldr	r3, [sp, #12]
 800c0ee:	b94a      	cbnz	r2, 800c104 <HAL_QSPI_Command+0x6e>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800c0f0:	9700      	str	r7, [sp, #0]
 800c0f2:	4642      	mov	r2, r8
 800c0f4:	4631      	mov	r1, r6
 800c0f6:	4620      	mov	r0, r4
 800c0f8:	f7ff ff3e 	bl	800bf78 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 800c0fc:	4605      	mov	r5, r0
 800c0fe:	b918      	cbnz	r0, 800c108 <HAL_QSPI_Command+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800c100:	6823      	ldr	r3, [r4, #0]
 800c102:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 800c104:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800c108:	2300      	movs	r3, #0
 800c10a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800c10e:	4628      	mov	r0, r5
 800c110:	b005      	add	sp, #20
 800c112:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 800c116:	4635      	mov	r5, r6
 800c118:	e7f6      	b.n	800c108 <HAL_QSPI_Command+0x72>
  __HAL_LOCK(hqspi);
 800c11a:	2502      	movs	r5, #2
 800c11c:	e7f7      	b.n	800c10e <HAL_QSPI_Command+0x78>

0800c11e <HAL_QSPI_AutoPolling>:
{
 800c11e:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800c122:	4604      	mov	r4, r0
 800c124:	4615      	mov	r5, r2
 800c126:	461e      	mov	r6, r3
 800c128:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 800c12a:	f7fe f843 	bl	800a1b4 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800c12e:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800c132:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800c134:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800c136:	d040      	beq.n	800c1ba <HAL_QSPI_AutoPolling+0x9c>
 800c138:	2201      	movs	r2, #1
 800c13a:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800c13e:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800c142:	2a01      	cmp	r2, #1
 800c144:	b2d7      	uxtb	r7, r2
 800c146:	d136      	bne.n	800c1b6 <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 800c148:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800c14a:	2200      	movs	r2, #0
 800c14c:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800c14e:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 800c150:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800c154:	9600      	str	r6, [sp, #0]
 800c156:	2120      	movs	r1, #32
 800c158:	4620      	mov	r0, r4
 800c15a:	f7ff ff0d 	bl	800bf78 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800c15e:	bb20      	cbnz	r0, 800c1aa <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 800c160:	6821      	ldr	r1, [r4, #0]
 800c162:	682a      	ldr	r2, [r5, #0]
 800c164:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 800c166:	686a      	ldr	r2, [r5, #4]
 800c168:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 800c16a:	68aa      	ldr	r2, [r5, #8]
 800c16c:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 800c16e:	680a      	ldr	r2, [r1, #0]
 800c170:	6928      	ldr	r0, [r5, #16]
 800c172:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 800c176:	4302      	orrs	r2, r0
 800c178:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 800c17c:	600a      	str	r2, [r1, #0]
      cmd->NbData = cfg->StatusBytesSize;
 800c17e:	68ea      	ldr	r2, [r5, #12]
 800c180:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 800c184:	4641      	mov	r1, r8
 800c186:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800c18a:	4620      	mov	r0, r4
 800c18c:	f7ff fe40 	bl	800be10 <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 800c190:	9b03      	ldr	r3, [sp, #12]
 800c192:	9600      	str	r6, [sp, #0]
 800c194:	463a      	mov	r2, r7
 800c196:	2108      	movs	r1, #8
 800c198:	4620      	mov	r0, r4
 800c19a:	f7ff feed 	bl	800bf78 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800c19e:	b920      	cbnz	r0, 800c1aa <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 800c1a0:	6823      	ldr	r3, [r4, #0]
 800c1a2:	2208      	movs	r2, #8
 800c1a4:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 800c1a6:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800c1aa:	2300      	movs	r3, #0
 800c1ac:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800c1b0:	b004      	add	sp, #16
 800c1b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 800c1b6:	2002      	movs	r0, #2
 800c1b8:	e7f7      	b.n	800c1aa <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 800c1ba:	2002      	movs	r0, #2
 800c1bc:	e7f8      	b.n	800c1b0 <HAL_QSPI_AutoPolling+0x92>

0800c1be <HAL_QSPI_MemoryMapped>:
{
 800c1be:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c1c0:	4604      	mov	r4, r0
 800c1c2:	4616      	mov	r6, r2
 800c1c4:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800c1c6:	f7fd fff5 	bl	800a1b4 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800c1ca:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800c1ce:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800c1d0:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800c1d2:	d032      	beq.n	800c23a <HAL_QSPI_MemoryMapped+0x7c>
 800c1d4:	2201      	movs	r2, #1
 800c1d6:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800c1da:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800c1de:	2a01      	cmp	r2, #1
 800c1e0:	d129      	bne.n	800c236 <HAL_QSPI_MemoryMapped+0x78>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800c1e2:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 800c1e4:	2182      	movs	r1, #130	; 0x82
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800c1e6:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 800c1e8:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800c1ec:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 800c1ee:	9100      	str	r1, [sp, #0]
 800c1f0:	4620      	mov	r0, r4
 800c1f2:	2120      	movs	r1, #32
 800c1f4:	f7ff fec0 	bl	800bf78 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800c1f8:	4605      	mov	r5, r0
 800c1fa:	b9b0      	cbnz	r0, 800c22a <HAL_QSPI_MemoryMapped+0x6c>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 800c1fc:	6823      	ldr	r3, [r4, #0]
 800c1fe:	6872      	ldr	r2, [r6, #4]
 800c200:	6818      	ldr	r0, [r3, #0]
 800c202:	f020 0008 	bic.w	r0, r0, #8
 800c206:	4310      	orrs	r0, r2
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 800c208:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 800c20a:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 800c20c:	d107      	bne.n	800c21e <HAL_QSPI_MemoryMapped+0x60>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 800c20e:	6832      	ldr	r2, [r6, #0]
 800c210:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 800c212:	2210      	movs	r2, #16
 800c214:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 800c216:	681a      	ldr	r2, [r3, #0]
 800c218:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 800c21c:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 800c21e:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 800c222:	4639      	mov	r1, r7
 800c224:	4620      	mov	r0, r4
 800c226:	f7ff fdf3 	bl	800be10 <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 800c22a:	2300      	movs	r3, #0
 800c22c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800c230:	4628      	mov	r0, r5
 800c232:	b003      	add	sp, #12
 800c234:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 800c236:	2502      	movs	r5, #2
 800c238:	e7f7      	b.n	800c22a <HAL_QSPI_MemoryMapped+0x6c>
  __HAL_LOCK(hqspi);
 800c23a:	2502      	movs	r5, #2
 800c23c:	e7f8      	b.n	800c230 <HAL_QSPI_MemoryMapped+0x72>

0800c23e <HAL_QSPI_Abort>:
{
 800c23e:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c240:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800c242:	f7fd ffb7 	bl	800a1b4 <HAL_GetTick>
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 800c246:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
  uint32_t tickstart = HAL_GetTick();
 800c24a:	4603      	mov	r3, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 800c24c:	f012 0002 	ands.w	r0, r2, #2
 800c250:	d036      	beq.n	800c2c0 <HAL_QSPI_Abort+0x82>
    __HAL_UNLOCK(hqspi);
 800c252:	2200      	movs	r2, #0
 800c254:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 800c258:	6822      	ldr	r2, [r4, #0]
 800c25a:	6811      	ldr	r1, [r2, #0]
 800c25c:	0749      	lsls	r1, r1, #29
 800c25e:	d50d      	bpl.n	800c27c <HAL_QSPI_Abort+0x3e>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 800c260:	6811      	ldr	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 800c262:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800c264:	9303      	str	r3, [sp, #12]
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 800c266:	f021 0104 	bic.w	r1, r1, #4
 800c26a:	6011      	str	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 800c26c:	f7fe f8f2 	bl	800a454 <HAL_DMA_Abort>
      if(status != HAL_OK)
 800c270:	9b03      	ldr	r3, [sp, #12]
 800c272:	b118      	cbz	r0, 800c27c <HAL_QSPI_Abort+0x3e>
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 800c274:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800c276:	f042 0204 	orr.w	r2, r2, #4
 800c27a:	6462      	str	r2, [r4, #68]	; 0x44
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 800c27c:	6821      	ldr	r1, [r4, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 800c27e:	9303      	str	r3, [sp, #12]
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 800c280:	680a      	ldr	r2, [r1, #0]
 800c282:	f042 0202 	orr.w	r2, r2, #2
 800c286:	600a      	str	r2, [r1, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 800c288:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800c28a:	9200      	str	r2, [sp, #0]
 800c28c:	2102      	movs	r1, #2
 800c28e:	2201      	movs	r2, #1
 800c290:	4620      	mov	r0, r4
 800c292:	f7ff fe71 	bl	800bf78 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800c296:	9b03      	ldr	r3, [sp, #12]
 800c298:	b990      	cbnz	r0, 800c2c0 <HAL_QSPI_Abort+0x82>
      __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800c29a:	6822      	ldr	r2, [r4, #0]
 800c29c:	2102      	movs	r1, #2
 800c29e:	60d1      	str	r1, [r2, #12]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800c2a0:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800c2a2:	9200      	str	r2, [sp, #0]
 800c2a4:	2120      	movs	r1, #32
 800c2a6:	4602      	mov	r2, r0
 800c2a8:	4620      	mov	r0, r4
 800c2aa:	f7ff fe65 	bl	800bf78 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800c2ae:	b938      	cbnz	r0, 800c2c0 <HAL_QSPI_Abort+0x82>
      CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 800c2b0:	6822      	ldr	r2, [r4, #0]
 800c2b2:	6953      	ldr	r3, [r2, #20]
 800c2b4:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 800c2b8:	6153      	str	r3, [r2, #20]
      hqspi->State = HAL_QSPI_STATE_READY;
 800c2ba:	2301      	movs	r3, #1
 800c2bc:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 800c2c0:	b004      	add	sp, #16
 800c2c2:	bd10      	pop	{r4, pc}

0800c2c4 <HAL_QSPI_Transmit>:
{
 800c2c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c2c6:	4604      	mov	r4, r0
 800c2c8:	b085      	sub	sp, #20
 800c2ca:	4616      	mov	r6, r2
 800c2cc:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800c2ce:	f7fd ff71 	bl	800a1b4 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800c2d2:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 800c2d6:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 800c2d8:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800c2da:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800c2dc:	d04c      	beq.n	800c378 <HAL_QSPI_Transmit+0xb4>
 800c2de:	2201      	movs	r2, #1
 800c2e0:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800c2e4:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800c2e8:	2a01      	cmp	r2, #1
 800c2ea:	b2d0      	uxtb	r0, r2
 800c2ec:	d142      	bne.n	800c374 <HAL_QSPI_Transmit+0xb0>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800c2ee:	2200      	movs	r2, #0
 800c2f0:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 800c2f2:	2f00      	cmp	r7, #0
 800c2f4:	d039      	beq.n	800c36a <HAL_QSPI_Transmit+0xa6>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 800c2f6:	2212      	movs	r2, #18
 800c2f8:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 800c2fc:	692a      	ldr	r2, [r5, #16]
 800c2fe:	3201      	adds	r2, #1
 800c300:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800c302:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 800c304:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800c306:	3201      	adds	r2, #1
 800c308:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800c30a:	696a      	ldr	r2, [r5, #20]
 800c30c:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 800c310:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 800c312:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c314:	b9a2      	cbnz	r2, 800c340 <HAL_QSPI_Transmit+0x7c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800c316:	9600      	str	r6, [sp, #0]
 800c318:	2201      	movs	r2, #1
 800c31a:	2102      	movs	r1, #2
 800c31c:	4620      	mov	r0, r4
 800c31e:	f7ff fe2b 	bl	800bf78 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 800c322:	b928      	cbnz	r0, 800c330 <HAL_QSPI_Transmit+0x6c>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800c324:	6823      	ldr	r3, [r4, #0]
 800c326:	2202      	movs	r2, #2
 800c328:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 800c32a:	4620      	mov	r0, r4
 800c32c:	f7ff ff87 	bl	800c23e <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 800c330:	2301      	movs	r3, #1
 800c332:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800c336:	2300      	movs	r3, #0
 800c338:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800c33c:	b005      	add	sp, #20
 800c33e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 800c340:	9600      	str	r6, [sp, #0]
 800c342:	2201      	movs	r2, #1
 800c344:	2104      	movs	r1, #4
 800c346:	4620      	mov	r0, r4
 800c348:	9303      	str	r3, [sp, #12]
 800c34a:	f7ff fe15 	bl	800bf78 <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 800c34e:	2800      	cmp	r0, #0
 800c350:	d1ee      	bne.n	800c330 <HAL_QSPI_Transmit+0x6c>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 800c352:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 800c354:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 800c356:	7812      	ldrb	r2, [r2, #0]
 800c358:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 800c35c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c35e:	3201      	adds	r2, #1
 800c360:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 800c362:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c364:	3a01      	subs	r2, #1
 800c366:	62e2      	str	r2, [r4, #44]	; 0x2c
 800c368:	e7d3      	b.n	800c312 <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 800c36a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800c36c:	f043 0308 	orr.w	r3, r3, #8
 800c370:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 800c372:	e7e0      	b.n	800c336 <HAL_QSPI_Transmit+0x72>
    status = HAL_BUSY;
 800c374:	2002      	movs	r0, #2
 800c376:	e7de      	b.n	800c336 <HAL_QSPI_Transmit+0x72>
  __HAL_LOCK(hqspi);
 800c378:	2002      	movs	r0, #2
 800c37a:	e7df      	b.n	800c33c <HAL_QSPI_Transmit+0x78>

0800c37c <HAL_QSPI_Receive>:
{
 800c37c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c37e:	4604      	mov	r4, r0
 800c380:	b085      	sub	sp, #20
 800c382:	4616      	mov	r6, r2
 800c384:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800c386:	f7fd ff15 	bl	800a1b4 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 800c38a:	6825      	ldr	r5, [r4, #0]
 800c38c:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 800c390:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800c394:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800c396:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800c398:	d050      	beq.n	800c43c <HAL_QSPI_Receive+0xc0>
 800c39a:	2201      	movs	r2, #1
 800c39c:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800c3a0:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800c3a4:	2a01      	cmp	r2, #1
 800c3a6:	b2d0      	uxtb	r0, r2
 800c3a8:	d146      	bne.n	800c438 <HAL_QSPI_Receive+0xbc>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800c3aa:	2200      	movs	r2, #0
 800c3ac:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 800c3ae:	2f00      	cmp	r7, #0
 800c3b0:	d03d      	beq.n	800c42e <HAL_QSPI_Receive+0xb2>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 800c3b2:	2222      	movs	r2, #34	; 0x22
 800c3b4:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 800c3b8:	692a      	ldr	r2, [r5, #16]
 800c3ba:	3201      	adds	r2, #1
 800c3bc:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800c3be:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 800c3c0:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800c3c2:	3201      	adds	r2, #1
 800c3c4:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 800c3c6:	6969      	ldr	r1, [r5, #20]
 800c3c8:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 800c3cc:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 800c3d0:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 800c3d2:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 800c3d6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c3d8:	b9a2      	cbnz	r2, 800c404 <HAL_QSPI_Receive+0x88>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800c3da:	9600      	str	r6, [sp, #0]
 800c3dc:	2201      	movs	r2, #1
 800c3de:	2102      	movs	r1, #2
 800c3e0:	4620      	mov	r0, r4
 800c3e2:	f7ff fdc9 	bl	800bf78 <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 800c3e6:	b928      	cbnz	r0, 800c3f4 <HAL_QSPI_Receive+0x78>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800c3e8:	6823      	ldr	r3, [r4, #0]
 800c3ea:	2202      	movs	r2, #2
 800c3ec:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 800c3ee:	4620      	mov	r0, r4
 800c3f0:	f7ff ff25 	bl	800c23e <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 800c3f4:	2301      	movs	r3, #1
 800c3f6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800c3fa:	2300      	movs	r3, #0
 800c3fc:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800c400:	b005      	add	sp, #20
 800c402:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 800c404:	9600      	str	r6, [sp, #0]
 800c406:	2201      	movs	r2, #1
 800c408:	2106      	movs	r1, #6
 800c40a:	4620      	mov	r0, r4
 800c40c:	9303      	str	r3, [sp, #12]
 800c40e:	f7ff fdb3 	bl	800bf78 <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 800c412:	2800      	cmp	r0, #0
 800c414:	d1ee      	bne.n	800c3f4 <HAL_QSPI_Receive+0x78>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 800c416:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c418:	f895 1020 	ldrb.w	r1, [r5, #32]
 800c41c:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 800c41e:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 800c420:	9b03      	ldr	r3, [sp, #12]
        hqspi->pRxBuffPtr++;
 800c422:	3201      	adds	r2, #1
 800c424:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 800c426:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c428:	3a01      	subs	r2, #1
 800c42a:	63a2      	str	r2, [r4, #56]	; 0x38
 800c42c:	e7d3      	b.n	800c3d6 <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 800c42e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800c430:	f043 0308 	orr.w	r3, r3, #8
 800c434:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 800c436:	e7e0      	b.n	800c3fa <HAL_QSPI_Receive+0x7e>
    status = HAL_BUSY;
 800c438:	2002      	movs	r0, #2
 800c43a:	e7de      	b.n	800c3fa <HAL_QSPI_Receive+0x7e>
  __HAL_LOCK(hqspi);
 800c43c:	2002      	movs	r0, #2
 800c43e:	e7df      	b.n	800c400 <HAL_QSPI_Receive+0x84>

0800c440 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c440:	4913      	ldr	r1, [pc, #76]	; (800c490 <HAL_RCC_GetSysClockFreq+0x50>)
{
 800c442:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c444:	688b      	ldr	r3, [r1, #8]
 800c446:	f003 030c 	and.w	r3, r3, #12
 800c44a:	2b04      	cmp	r3, #4
 800c44c:	d01c      	beq.n	800c488 <HAL_RCC_GetSysClockFreq+0x48>
 800c44e:	2b08      	cmp	r3, #8
 800c450:	d11c      	bne.n	800c48c <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c452:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c454:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c456:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c458:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c45c:	bf14      	ite	ne
 800c45e:	480d      	ldrne	r0, [pc, #52]	; (800c494 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c460:	480d      	ldreq	r0, [pc, #52]	; (800c498 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c462:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800c466:	bf18      	it	ne
 800c468:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c46a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c46e:	fba1 0100 	umull	r0, r1, r1, r0
 800c472:	f7f3 ff27 	bl	80002c4 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800c476:	4b06      	ldr	r3, [pc, #24]	; (800c490 <HAL_RCC_GetSysClockFreq+0x50>)
 800c478:	685b      	ldr	r3, [r3, #4]
 800c47a:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800c47e:	3301      	adds	r3, #1
 800c480:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800c482:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800c486:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c488:	4802      	ldr	r0, [pc, #8]	; (800c494 <HAL_RCC_GetSysClockFreq+0x54>)
 800c48a:	e7fc      	b.n	800c486 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 800c48c:	4802      	ldr	r0, [pc, #8]	; (800c498 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 800c48e:	e7fa      	b.n	800c486 <HAL_RCC_GetSysClockFreq+0x46>
 800c490:	40023800 	.word	0x40023800
 800c494:	007a1200 	.word	0x007a1200
 800c498:	00f42400 	.word	0x00f42400

0800c49c <HAL_RCC_ClockConfig>:
{
 800c49c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c4a0:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 800c4a2:	4604      	mov	r4, r0
 800c4a4:	b910      	cbnz	r0, 800c4ac <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 800c4a6:	2001      	movs	r0, #1
}
 800c4a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800c4ac:	4b44      	ldr	r3, [pc, #272]	; (800c5c0 <HAL_RCC_ClockConfig+0x124>)
 800c4ae:	681a      	ldr	r2, [r3, #0]
 800c4b0:	f002 020f 	and.w	r2, r2, #15
 800c4b4:	428a      	cmp	r2, r1
 800c4b6:	d328      	bcc.n	800c50a <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800c4b8:	6822      	ldr	r2, [r4, #0]
 800c4ba:	0797      	lsls	r7, r2, #30
 800c4bc:	d42d      	bmi.n	800c51a <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800c4be:	07d0      	lsls	r0, r2, #31
 800c4c0:	d441      	bmi.n	800c546 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800c4c2:	4b3f      	ldr	r3, [pc, #252]	; (800c5c0 <HAL_RCC_ClockConfig+0x124>)
 800c4c4:	681a      	ldr	r2, [r3, #0]
 800c4c6:	f002 020f 	and.w	r2, r2, #15
 800c4ca:	42aa      	cmp	r2, r5
 800c4cc:	d866      	bhi.n	800c59c <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c4ce:	6822      	ldr	r2, [r4, #0]
 800c4d0:	0751      	lsls	r1, r2, #29
 800c4d2:	d46c      	bmi.n	800c5ae <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c4d4:	0713      	lsls	r3, r2, #28
 800c4d6:	d507      	bpl.n	800c4e8 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800c4d8:	4a3a      	ldr	r2, [pc, #232]	; (800c5c4 <HAL_RCC_ClockConfig+0x128>)
 800c4da:	6921      	ldr	r1, [r4, #16]
 800c4dc:	6893      	ldr	r3, [r2, #8]
 800c4de:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800c4e2:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800c4e6:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c4e8:	f7ff ffaa 	bl	800c440 <HAL_RCC_GetSysClockFreq>
 800c4ec:	4b35      	ldr	r3, [pc, #212]	; (800c5c4 <HAL_RCC_ClockConfig+0x128>)
 800c4ee:	4a36      	ldr	r2, [pc, #216]	; (800c5c8 <HAL_RCC_ClockConfig+0x12c>)
 800c4f0:	689b      	ldr	r3, [r3, #8]
 800c4f2:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800c4f6:	5cd3      	ldrb	r3, [r2, r3]
 800c4f8:	40d8      	lsrs	r0, r3
 800c4fa:	4b34      	ldr	r3, [pc, #208]	; (800c5cc <HAL_RCC_ClockConfig+0x130>)
 800c4fc:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 800c4fe:	4b34      	ldr	r3, [pc, #208]	; (800c5d0 <HAL_RCC_ClockConfig+0x134>)
 800c500:	6818      	ldr	r0, [r3, #0]
 800c502:	f7f5 fcad 	bl	8001e60 <HAL_InitTick>
  return HAL_OK;
 800c506:	2000      	movs	r0, #0
 800c508:	e7ce      	b.n	800c4a8 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c50a:	b2ca      	uxtb	r2, r1
 800c50c:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c50e:	681b      	ldr	r3, [r3, #0]
 800c510:	f003 030f 	and.w	r3, r3, #15
 800c514:	428b      	cmp	r3, r1
 800c516:	d1c6      	bne.n	800c4a6 <HAL_RCC_ClockConfig+0xa>
 800c518:	e7ce      	b.n	800c4b8 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c51a:	4b2a      	ldr	r3, [pc, #168]	; (800c5c4 <HAL_RCC_ClockConfig+0x128>)
 800c51c:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800c520:	bf1e      	ittt	ne
 800c522:	6899      	ldrne	r1, [r3, #8]
 800c524:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 800c528:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c52a:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800c52c:	bf42      	ittt	mi
 800c52e:	6899      	ldrmi	r1, [r3, #8]
 800c530:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 800c534:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800c536:	4923      	ldr	r1, [pc, #140]	; (800c5c4 <HAL_RCC_ClockConfig+0x128>)
 800c538:	68a0      	ldr	r0, [r4, #8]
 800c53a:	688b      	ldr	r3, [r1, #8]
 800c53c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800c540:	4303      	orrs	r3, r0
 800c542:	608b      	str	r3, [r1, #8]
 800c544:	e7bb      	b.n	800c4be <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800c546:	6862      	ldr	r2, [r4, #4]
 800c548:	4b1e      	ldr	r3, [pc, #120]	; (800c5c4 <HAL_RCC_ClockConfig+0x128>)
 800c54a:	2a01      	cmp	r2, #1
 800c54c:	d11c      	bne.n	800c588 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c54e:	681b      	ldr	r3, [r3, #0]
 800c550:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c554:	d0a7      	beq.n	800c4a6 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800c556:	4e1b      	ldr	r6, [pc, #108]	; (800c5c4 <HAL_RCC_ClockConfig+0x128>)
 800c558:	68b3      	ldr	r3, [r6, #8]
 800c55a:	f023 0303 	bic.w	r3, r3, #3
 800c55e:	4313      	orrs	r3, r2
 800c560:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800c562:	f7fd fe27 	bl	800a1b4 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c566:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800c56a:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800c56c:	68b3      	ldr	r3, [r6, #8]
 800c56e:	6862      	ldr	r2, [r4, #4]
 800c570:	f003 030c 	and.w	r3, r3, #12
 800c574:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800c578:	d0a3      	beq.n	800c4c2 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c57a:	f7fd fe1b 	bl	800a1b4 <HAL_GetTick>
 800c57e:	1bc0      	subs	r0, r0, r7
 800c580:	4540      	cmp	r0, r8
 800c582:	d9f3      	bls.n	800c56c <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 800c584:	2003      	movs	r0, #3
 800c586:	e78f      	b.n	800c4a8 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c588:	1e91      	subs	r1, r2, #2
 800c58a:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c58c:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c58e:	d802      	bhi.n	800c596 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c590:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 800c594:	e7de      	b.n	800c554 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c596:	f013 0f02 	tst.w	r3, #2
 800c59a:	e7db      	b.n	800c554 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c59c:	b2ea      	uxtb	r2, r5
 800c59e:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c5a0:	681b      	ldr	r3, [r3, #0]
 800c5a2:	f003 030f 	and.w	r3, r3, #15
 800c5a6:	42ab      	cmp	r3, r5
 800c5a8:	f47f af7d 	bne.w	800c4a6 <HAL_RCC_ClockConfig+0xa>
 800c5ac:	e78f      	b.n	800c4ce <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800c5ae:	4905      	ldr	r1, [pc, #20]	; (800c5c4 <HAL_RCC_ClockConfig+0x128>)
 800c5b0:	68e0      	ldr	r0, [r4, #12]
 800c5b2:	688b      	ldr	r3, [r1, #8]
 800c5b4:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 800c5b8:	4303      	orrs	r3, r0
 800c5ba:	608b      	str	r3, [r1, #8]
 800c5bc:	e78a      	b.n	800c4d4 <HAL_RCC_ClockConfig+0x38>
 800c5be:	bf00      	nop
 800c5c0:	40023c00 	.word	0x40023c00
 800c5c4:	40023800 	.word	0x40023800
 800c5c8:	08028ac1 	.word	0x08028ac1
 800c5cc:	20000054 	.word	0x20000054
 800c5d0:	2000005c 	.word	0x2000005c

0800c5d4 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c5d4:	4b04      	ldr	r3, [pc, #16]	; (800c5e8 <HAL_RCC_GetPCLK1Freq+0x14>)
 800c5d6:	4a05      	ldr	r2, [pc, #20]	; (800c5ec <HAL_RCC_GetPCLK1Freq+0x18>)
 800c5d8:	689b      	ldr	r3, [r3, #8]
 800c5da:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800c5de:	5cd3      	ldrb	r3, [r2, r3]
 800c5e0:	4a03      	ldr	r2, [pc, #12]	; (800c5f0 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800c5e2:	6810      	ldr	r0, [r2, #0]
}
 800c5e4:	40d8      	lsrs	r0, r3
 800c5e6:	4770      	bx	lr
 800c5e8:	40023800 	.word	0x40023800
 800c5ec:	08028ad1 	.word	0x08028ad1
 800c5f0:	20000054 	.word	0x20000054

0800c5f4 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800c5f4:	230f      	movs	r3, #15
 800c5f6:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c5f8:	4b0b      	ldr	r3, [pc, #44]	; (800c628 <HAL_RCC_GetClockConfig+0x34>)
 800c5fa:	689a      	ldr	r2, [r3, #8]
 800c5fc:	f002 0203 	and.w	r2, r2, #3
 800c600:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800c602:	689a      	ldr	r2, [r3, #8]
 800c604:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800c608:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800c60a:	689a      	ldr	r2, [r3, #8]
 800c60c:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800c610:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c612:	689b      	ldr	r3, [r3, #8]
 800c614:	08db      	lsrs	r3, r3, #3
 800c616:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800c61a:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c61c:	4b03      	ldr	r3, [pc, #12]	; (800c62c <HAL_RCC_GetClockConfig+0x38>)
 800c61e:	681b      	ldr	r3, [r3, #0]
 800c620:	f003 030f 	and.w	r3, r3, #15
 800c624:	600b      	str	r3, [r1, #0]
}
 800c626:	4770      	bx	lr
 800c628:	40023800 	.word	0x40023800
 800c62c:	40023c00 	.word	0x40023c00

0800c630 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800c630:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*--------------------------- CLK48 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 800c632:	6802      	ldr	r2, [r0, #0]
{
 800c634:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 800c636:	0610      	lsls	r0, r2, #24
 800c638:	d508      	bpl.n	800c64c <HAL_RCCEx_PeriphCLKConfig+0x1c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 clock source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 800c63a:	49a8      	ldr	r1, [pc, #672]	; (800c8dc <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800c63c:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800c63e:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 800c642:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 800c646:	4303      	orrs	r3, r0
 800c648:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }
  /*--------------------------------------------------------------------------*/

  /*------------------------------ SDIO Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
 800c64c:	05d1      	lsls	r1, r2, #23
 800c64e:	d508      	bpl.n	800c662 <HAL_RCCEx_PeriphCLKConfig+0x32>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));

    /* Configure the SDIO clock source */
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
 800c650:	49a2      	ldr	r1, [pc, #648]	; (800c8dc <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800c652:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800c654:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 800c658:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800c65c:	4303      	orrs	r3, r0
 800c65e:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*------------------- Common configuration SAI/I2S -------------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c662:	f012 0f43 	tst.w	r2, #67	; 0x43
 800c666:	d172      	bne.n	800c74e <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI, LTDC or CLK48 Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for these peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c668:	6823      	ldr	r3, [r4, #0]
 800c66a:	f013 0f0c 	tst.w	r3, #12
 800c66e:	f000 80bf 	beq.w	800c7f0 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800c672:	4d9b      	ldr	r5, [pc, #620]	; (800c8e0 <HAL_RCCEx_PeriphCLKConfig+0x2b0>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c674:	4e99      	ldr	r6, [pc, #612]	; (800c8dc <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    __HAL_RCC_PLLSAI_DISABLE();
 800c676:	2300      	movs	r3, #0
 800c678:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800c67a:	f7fd fd9b 	bl	800a1b4 <HAL_GetTick>
 800c67e:	4607      	mov	r7, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c680:	6833      	ldr	r3, [r6, #0]
 800c682:	009a      	lsls	r2, r3, #2
 800c684:	f100 80f9 	bmi.w	800c87a <HAL_RCCEx_PeriphCLKConfig+0x24a>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800c688:	6822      	ldr	r2, [r4, #0]
 800c68a:	0753      	lsls	r3, r2, #29
 800c68c:	d51a      	bpl.n	800c6c4 <HAL_RCCEx_PeriphCLKConfig+0x94>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 800c68e:	f8d6 3088 	ldr.w	r3, [r6, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800c692:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, PeriphClkInit->PLLSAI.PLLSAIQ, pllsair);
 800c696:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800c69a:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800c69e:	430b      	orrs	r3, r1
 800c6a0:	6921      	ldr	r1, [r4, #16]
 800c6a2:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 800c6a6:	69a1      	ldr	r1, [r4, #24]
 800c6a8:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800c6ac:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800c6b0:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800c6b4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c6b6:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800c6ba:	3901      	subs	r1, #1
 800c6bc:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800c6c0:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800c6c4:	0717      	lsls	r7, r2, #28
 800c6c6:	d519      	bpl.n	800c6fc <HAL_RCCEx_PeriphCLKConfig+0xcc>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 800c6c8:	4984      	ldr	r1, [pc, #528]	; (800c8dc <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800c6ca:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c6ce:	f8d1 0088 	ldr.w	r0, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, pllsaiq, PeriphClkInit->PLLSAI.PLLSAIR);
 800c6d2:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800c6d6:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 800c6da:	4303      	orrs	r3, r0
 800c6dc:	6920      	ldr	r0, [r4, #16]
 800c6de:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c6e2:	69e0      	ldr	r0, [r4, #28]
 800c6e4:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 800c6e8:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800c6ec:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 800c6f0:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c6f2:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800c6f6:	4303      	orrs	r3, r0
 800c6f8:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*---------------------------- CLK48 configuration ------------------------*/
    /* Configure the PLLSAI when it is used as clock source for CLK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == (RCC_PERIPHCLK_CLK48)) &&
 800c6fc:	0616      	lsls	r6, r2, #24
 800c6fe:	d517      	bpl.n	800c730 <HAL_RCCEx_PeriphCLKConfig+0x100>
 800c700:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c702:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800c706:	d113      	bne.n	800c730 <HAL_RCCEx_PeriphCLKConfig+0x100>
       (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLSAIP))
    {
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));

      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c708:	4974      	ldr	r1, [pc, #464]	; (800c8dc <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800c70a:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800c70e:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* CLK48_CLK(first level) = PLLSAI_VCO Output/PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIP, pllsaiq, pllsair);
 800c712:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 800c716:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 800c71a:	4313      	orrs	r3, r2
 800c71c:	6922      	ldr	r2, [r4, #16]
 800c71e:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c722:	6962      	ldr	r2, [r4, #20]
 800c724:	0852      	lsrs	r2, r2, #1
 800c726:	3a01      	subs	r2, #1
 800c728:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800c72c:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 800c730:	2301      	movs	r3, #1
 800c732:	602b      	str	r3, [r5, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 800c734:	f7fd fd3e 	bl	800a1b4 <HAL_GetTick>
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c738:	4e68      	ldr	r6, [pc, #416]	; (800c8dc <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    tickstart = HAL_GetTick();
 800c73a:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c73c:	6833      	ldr	r3, [r6, #0]
 800c73e:	0098      	lsls	r0, r3, #2
 800c740:	d458      	bmi.n	800c7f4 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c742:	f7fd fd37 	bl	800a1b4 <HAL_GetTick>
 800c746:	1b40      	subs	r0, r0, r5
 800c748:	2802      	cmp	r0, #2
 800c74a:	d9f7      	bls.n	800c73c <HAL_RCCEx_PeriphCLKConfig+0x10c>
 800c74c:	e04d      	b.n	800c7ea <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    __HAL_RCC_PLLI2S_DISABLE();
 800c74e:	4d65      	ldr	r5, [pc, #404]	; (800c8e4 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c750:	4f62      	ldr	r7, [pc, #392]	; (800c8dc <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    __HAL_RCC_PLLI2S_DISABLE();
 800c752:	2300      	movs	r3, #0
 800c754:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800c756:	f7fd fd2d 	bl	800a1b4 <HAL_GetTick>
 800c75a:	4606      	mov	r6, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c75c:	683b      	ldr	r3, [r7, #0]
 800c75e:	011b      	lsls	r3, r3, #4
 800c760:	d43e      	bmi.n	800c7e0 <HAL_RCCEx_PeriphCLKConfig+0x1b0>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800c762:	6821      	ldr	r1, [r4, #0]
 800c764:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800c766:	bf41      	itttt	mi
 800c768:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 800c76c:	071b      	lslmi	r3, r3, #28
 800c76e:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 800c772:	f8c7 3084 	strmi.w	r3, [r7, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800c776:	078a      	lsls	r2, r1, #30
 800c778:	d515      	bpl.n	800c7a6 <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c77a:	4a58      	ldr	r2, [pc, #352]	; (800c8dc <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c77c:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c77e:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c782:	6866      	ldr	r6, [r4, #4]
 800c784:	061b      	lsls	r3, r3, #24
 800c786:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800c78a:	ea43 1386 	orr.w	r3, r3, r6, lsl #6
 800c78e:	4303      	orrs	r3, r0
 800c790:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800c794:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 800c798:	6a23      	ldr	r3, [r4, #32]
 800c79a:	f020 001f 	bic.w	r0, r0, #31
 800c79e:	3b01      	subs	r3, #1
 800c7a0:	4303      	orrs	r3, r0
 800c7a2:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800c7a6:	064b      	lsls	r3, r1, #25
 800c7a8:	d50a      	bpl.n	800c7c0 <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800c7aa:	68e3      	ldr	r3, [r4, #12]
 800c7ac:	6862      	ldr	r2, [r4, #4]
 800c7ae:	061b      	lsls	r3, r3, #24
 800c7b0:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c7b4:	68a2      	ldr	r2, [r4, #8]
 800c7b6:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800c7ba:	4a48      	ldr	r2, [pc, #288]	; (800c8dc <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800c7bc:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800c7c0:	2301      	movs	r3, #1
 800c7c2:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800c7c4:	f7fd fcf6 	bl	800a1b4 <HAL_GetTick>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c7c8:	4e44      	ldr	r6, [pc, #272]	; (800c8dc <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    tickstart = HAL_GetTick();
 800c7ca:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c7cc:	6833      	ldr	r3, [r6, #0]
 800c7ce:	011f      	lsls	r7, r3, #4
 800c7d0:	f53f af4a 	bmi.w	800c668 <HAL_RCCEx_PeriphCLKConfig+0x38>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c7d4:	f7fd fcee 	bl	800a1b4 <HAL_GetTick>
 800c7d8:	1b40      	subs	r0, r0, r5
 800c7da:	2802      	cmp	r0, #2
 800c7dc:	d9f6      	bls.n	800c7cc <HAL_RCCEx_PeriphCLKConfig+0x19c>
 800c7de:	e004      	b.n	800c7ea <HAL_RCCEx_PeriphCLKConfig+0x1ba>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c7e0:	f7fd fce8 	bl	800a1b4 <HAL_GetTick>
 800c7e4:	1b80      	subs	r0, r0, r6
 800c7e6:	2802      	cmp	r0, #2
 800c7e8:	d9b8      	bls.n	800c75c <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 800c7ea:	2003      	movs	r0, #3
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
}
 800c7ec:	b003      	add	sp, #12
 800c7ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)             ||
 800c7f0:	0618      	lsls	r0, r3, #24
 800c7f2:	d43d      	bmi.n	800c870 <HAL_RCCEx_PeriphCLKConfig+0x240>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c7f4:	6823      	ldr	r3, [r4, #0]
 800c7f6:	0699      	lsls	r1, r3, #26
 800c7f8:	d530      	bpl.n	800c85c <HAL_RCCEx_PeriphCLKConfig+0x22c>
    __HAL_RCC_PWR_CLK_ENABLE();
 800c7fa:	2300      	movs	r3, #0
 800c7fc:	9301      	str	r3, [sp, #4]
 800c7fe:	4b37      	ldr	r3, [pc, #220]	; (800c8dc <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    PWR->CR |= PWR_CR_DBP;
 800c800:	4d39      	ldr	r5, [pc, #228]	; (800c8e8 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800c802:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800c804:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800c808:	641a      	str	r2, [r3, #64]	; 0x40
 800c80a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c80c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c810:	9301      	str	r3, [sp, #4]
 800c812:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800c814:	682b      	ldr	r3, [r5, #0]
 800c816:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c81a:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800c81c:	f7fd fcca 	bl	800a1b4 <HAL_GetTick>
 800c820:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c822:	682b      	ldr	r3, [r5, #0]
 800c824:	05d9      	lsls	r1, r3, #23
 800c826:	d52f      	bpl.n	800c888 <HAL_RCCEx_PeriphCLKConfig+0x258>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c828:	4d2c      	ldr	r5, [pc, #176]	; (800c8dc <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800c82a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c82c:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 800c830:	d130      	bne.n	800c894 <HAL_RCCEx_PeriphCLKConfig+0x264>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c832:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c834:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800c838:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800c83c:	4a27      	ldr	r2, [pc, #156]	; (800c8dc <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 800c83e:	d148      	bne.n	800c8d2 <HAL_RCCEx_PeriphCLKConfig+0x2a2>
 800c840:	6891      	ldr	r1, [r2, #8]
 800c842:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 800c846:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800c84a:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 800c84e:	4301      	orrs	r1, r0
 800c850:	6091      	str	r1, [r2, #8]
 800c852:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800c854:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c858:	430b      	orrs	r3, r1
 800c85a:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c85c:	6820      	ldr	r0, [r4, #0]
 800c85e:	f010 0010 	ands.w	r0, r0, #16
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800c862:	bf1f      	itttt	ne
 800c864:	4b21      	ldrne	r3, [pc, #132]	; (800c8ec <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 800c866:	f894 2030 	ldrbne.w	r2, [r4, #48]	; 0x30
 800c86a:	601a      	strne	r2, [r3, #0]
  return HAL_OK;
 800c86c:	2000      	movne	r0, #0
 800c86e:	e7bd      	b.n	800c7ec <HAL_RCCEx_PeriphCLKConfig+0x1bc>
     ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)          &&
 800c870:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c872:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800c876:	d1bd      	bne.n	800c7f4 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
 800c878:	e6fb      	b.n	800c672 <HAL_RCCEx_PeriphCLKConfig+0x42>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c87a:	f7fd fc9b 	bl	800a1b4 <HAL_GetTick>
 800c87e:	1bc0      	subs	r0, r0, r7
 800c880:	2802      	cmp	r0, #2
 800c882:	f67f aefd 	bls.w	800c680 <HAL_RCCEx_PeriphCLKConfig+0x50>
 800c886:	e7b0      	b.n	800c7ea <HAL_RCCEx_PeriphCLKConfig+0x1ba>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800c888:	f7fd fc94 	bl	800a1b4 <HAL_GetTick>
 800c88c:	1b80      	subs	r0, r0, r6
 800c88e:	2802      	cmp	r0, #2
 800c890:	d9c7      	bls.n	800c822 <HAL_RCCEx_PeriphCLKConfig+0x1f2>
 800c892:	e7aa      	b.n	800c7ea <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c894:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c896:	f402 7240 	and.w	r2, r2, #768	; 0x300
 800c89a:	4293      	cmp	r3, r2
 800c89c:	d0c9      	beq.n	800c832 <HAL_RCCEx_PeriphCLKConfig+0x202>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c89e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800c8a0:	4a13      	ldr	r2, [pc, #76]	; (800c8f0 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 800c8a2:	2101      	movs	r1, #1
 800c8a4:	6011      	str	r1, [r2, #0]
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c8a6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800c8aa:	2100      	movs	r1, #0
 800c8ac:	6011      	str	r1, [r2, #0]
      RCC->BDCR = tmpreg1;
 800c8ae:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800c8b0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c8b2:	07da      	lsls	r2, r3, #31
 800c8b4:	d5bd      	bpl.n	800c832 <HAL_RCCEx_PeriphCLKConfig+0x202>
        tickstart = HAL_GetTick();
 800c8b6:	f7fd fc7d 	bl	800a1b4 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c8ba:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800c8be:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c8c0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c8c2:	079b      	lsls	r3, r3, #30
 800c8c4:	d4b5      	bmi.n	800c832 <HAL_RCCEx_PeriphCLKConfig+0x202>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c8c6:	f7fd fc75 	bl	800a1b4 <HAL_GetTick>
 800c8ca:	1b80      	subs	r0, r0, r6
 800c8cc:	42b8      	cmp	r0, r7
 800c8ce:	d9f7      	bls.n	800c8c0 <HAL_RCCEx_PeriphCLKConfig+0x290>
 800c8d0:	e78b      	b.n	800c7ea <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c8d2:	6891      	ldr	r1, [r2, #8]
 800c8d4:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800c8d8:	e7ba      	b.n	800c850 <HAL_RCCEx_PeriphCLKConfig+0x220>
 800c8da:	bf00      	nop
 800c8dc:	40023800 	.word	0x40023800
 800c8e0:	42470070 	.word	0x42470070
 800c8e4:	42470068 	.word	0x42470068
 800c8e8:	40007000 	.word	0x40007000
 800c8ec:	424711e0 	.word	0x424711e0
 800c8f0:	42470e40 	.word	0x42470e40

0800c8f4 <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800c8f4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800c8f8:	4604      	mov	r4, r0
 800c8fa:	b340      	cbz	r0, 800c94e <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800c8fc:	6803      	ldr	r3, [r0, #0]
 800c8fe:	07dd      	lsls	r5, r3, #31
 800c900:	d410      	bmi.n	800c924 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800c902:	6823      	ldr	r3, [r4, #0]
 800c904:	0798      	lsls	r0, r3, #30
 800c906:	d45e      	bmi.n	800c9c6 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c908:	6823      	ldr	r3, [r4, #0]
 800c90a:	071a      	lsls	r2, r3, #28
 800c90c:	f100 80a0 	bmi.w	800ca50 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800c910:	6823      	ldr	r3, [r4, #0]
 800c912:	075b      	lsls	r3, r3, #29
 800c914:	f100 80be 	bmi.w	800ca94 <HAL_RCC_OscConfig+0x1a0>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800c918:	69a0      	ldr	r0, [r4, #24]
 800c91a:	2800      	cmp	r0, #0
 800c91c:	f040 811f 	bne.w	800cb5e <HAL_RCC_OscConfig+0x26a>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800c920:	2000      	movs	r0, #0
 800c922:	e02b      	b.n	800c97c <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 800c924:	4ba7      	ldr	r3, [pc, #668]	; (800cbc4 <HAL_RCC_OscConfig+0x2d0>)
 800c926:	689a      	ldr	r2, [r3, #8]
 800c928:	f002 020c 	and.w	r2, r2, #12
 800c92c:	2a04      	cmp	r2, #4
 800c92e:	d007      	beq.n	800c940 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800c930:	689a      	ldr	r2, [r3, #8]
 800c932:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 800c936:	2a08      	cmp	r2, #8
 800c938:	d10b      	bne.n	800c952 <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800c93a:	685a      	ldr	r2, [r3, #4]
 800c93c:	0251      	lsls	r1, r2, #9
 800c93e:	d508      	bpl.n	800c952 <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800c940:	4ba0      	ldr	r3, [pc, #640]	; (800cbc4 <HAL_RCC_OscConfig+0x2d0>)
 800c942:	681b      	ldr	r3, [r3, #0]
 800c944:	039a      	lsls	r2, r3, #14
 800c946:	d5dc      	bpl.n	800c902 <HAL_RCC_OscConfig+0xe>
 800c948:	6863      	ldr	r3, [r4, #4]
 800c94a:	2b00      	cmp	r3, #0
 800c94c:	d1d9      	bne.n	800c902 <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 800c94e:	2001      	movs	r0, #1
 800c950:	e014      	b.n	800c97c <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c952:	6862      	ldr	r2, [r4, #4]
 800c954:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 800c958:	d113      	bne.n	800c982 <HAL_RCC_OscConfig+0x8e>
 800c95a:	681a      	ldr	r2, [r3, #0]
 800c95c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800c960:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800c962:	f7fd fc27 	bl	800a1b4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c966:	4e97      	ldr	r6, [pc, #604]	; (800cbc4 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 800c968:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c96a:	6833      	ldr	r3, [r6, #0]
 800c96c:	039b      	lsls	r3, r3, #14
 800c96e:	d4c8      	bmi.n	800c902 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800c970:	f7fd fc20 	bl	800a1b4 <HAL_GetTick>
 800c974:	1b40      	subs	r0, r0, r5
 800c976:	2864      	cmp	r0, #100	; 0x64
 800c978:	d9f7      	bls.n	800c96a <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 800c97a:	2003      	movs	r0, #3
}
 800c97c:	b002      	add	sp, #8
 800c97e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c982:	4d90      	ldr	r5, [pc, #576]	; (800cbc4 <HAL_RCC_OscConfig+0x2d0>)
 800c984:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 800c988:	682b      	ldr	r3, [r5, #0]
 800c98a:	d107      	bne.n	800c99c <HAL_RCC_OscConfig+0xa8>
 800c98c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800c990:	602b      	str	r3, [r5, #0]
 800c992:	682b      	ldr	r3, [r5, #0]
 800c994:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800c998:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800c99a:	e7e2      	b.n	800c962 <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c99c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800c9a0:	602b      	str	r3, [r5, #0]
 800c9a2:	682b      	ldr	r3, [r5, #0]
 800c9a4:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800c9a8:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800c9aa:	2a00      	cmp	r2, #0
 800c9ac:	d1d9      	bne.n	800c962 <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 800c9ae:	f7fd fc01 	bl	800a1b4 <HAL_GetTick>
 800c9b2:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800c9b4:	682b      	ldr	r3, [r5, #0]
 800c9b6:	039f      	lsls	r7, r3, #14
 800c9b8:	d5a3      	bpl.n	800c902 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800c9ba:	f7fd fbfb 	bl	800a1b4 <HAL_GetTick>
 800c9be:	1b80      	subs	r0, r0, r6
 800c9c0:	2864      	cmp	r0, #100	; 0x64
 800c9c2:	d9f7      	bls.n	800c9b4 <HAL_RCC_OscConfig+0xc0>
 800c9c4:	e7d9      	b.n	800c97a <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 800c9c6:	4b7f      	ldr	r3, [pc, #508]	; (800cbc4 <HAL_RCC_OscConfig+0x2d0>)
 800c9c8:	689a      	ldr	r2, [r3, #8]
 800c9ca:	f012 0f0c 	tst.w	r2, #12
 800c9ce:	d007      	beq.n	800c9e0 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800c9d0:	689a      	ldr	r2, [r3, #8]
 800c9d2:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 800c9d6:	2a08      	cmp	r2, #8
 800c9d8:	d111      	bne.n	800c9fe <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800c9da:	685b      	ldr	r3, [r3, #4]
 800c9dc:	025e      	lsls	r6, r3, #9
 800c9de:	d40e      	bmi.n	800c9fe <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800c9e0:	4b78      	ldr	r3, [pc, #480]	; (800cbc4 <HAL_RCC_OscConfig+0x2d0>)
 800c9e2:	681a      	ldr	r2, [r3, #0]
 800c9e4:	0795      	lsls	r5, r2, #30
 800c9e6:	d502      	bpl.n	800c9ee <HAL_RCC_OscConfig+0xfa>
 800c9e8:	68e2      	ldr	r2, [r4, #12]
 800c9ea:	2a01      	cmp	r2, #1
 800c9ec:	d1af      	bne.n	800c94e <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800c9ee:	681a      	ldr	r2, [r3, #0]
 800c9f0:	6921      	ldr	r1, [r4, #16]
 800c9f2:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800c9f6:	ea42 02c1 	orr.w	r2, r2, r1, lsl #3
 800c9fa:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800c9fc:	e784      	b.n	800c908 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800c9fe:	68e2      	ldr	r2, [r4, #12]
 800ca00:	4b71      	ldr	r3, [pc, #452]	; (800cbc8 <HAL_RCC_OscConfig+0x2d4>)
 800ca02:	b1b2      	cbz	r2, 800ca32 <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 800ca04:	2201      	movs	r2, #1
 800ca06:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800ca08:	f7fd fbd4 	bl	800a1b4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800ca0c:	4d6d      	ldr	r5, [pc, #436]	; (800cbc4 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 800ca0e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800ca10:	682b      	ldr	r3, [r5, #0]
 800ca12:	0798      	lsls	r0, r3, #30
 800ca14:	d507      	bpl.n	800ca26 <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800ca16:	682b      	ldr	r3, [r5, #0]
 800ca18:	6922      	ldr	r2, [r4, #16]
 800ca1a:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800ca1e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800ca22:	602b      	str	r3, [r5, #0]
 800ca24:	e770      	b.n	800c908 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800ca26:	f7fd fbc5 	bl	800a1b4 <HAL_GetTick>
 800ca2a:	1b80      	subs	r0, r0, r6
 800ca2c:	2802      	cmp	r0, #2
 800ca2e:	d9ef      	bls.n	800ca10 <HAL_RCC_OscConfig+0x11c>
 800ca30:	e7a3      	b.n	800c97a <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 800ca32:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800ca34:	f7fd fbbe 	bl	800a1b4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800ca38:	4e62      	ldr	r6, [pc, #392]	; (800cbc4 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 800ca3a:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800ca3c:	6833      	ldr	r3, [r6, #0]
 800ca3e:	0799      	lsls	r1, r3, #30
 800ca40:	f57f af62 	bpl.w	800c908 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800ca44:	f7fd fbb6 	bl	800a1b4 <HAL_GetTick>
 800ca48:	1b40      	subs	r0, r0, r5
 800ca4a:	2802      	cmp	r0, #2
 800ca4c:	d9f6      	bls.n	800ca3c <HAL_RCC_OscConfig+0x148>
 800ca4e:	e794      	b.n	800c97a <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800ca50:	6962      	ldr	r2, [r4, #20]
 800ca52:	4b5e      	ldr	r3, [pc, #376]	; (800cbcc <HAL_RCC_OscConfig+0x2d8>)
 800ca54:	b17a      	cbz	r2, 800ca76 <HAL_RCC_OscConfig+0x182>
      __HAL_RCC_LSI_ENABLE();
 800ca56:	2201      	movs	r2, #1
 800ca58:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 800ca5a:	f7fd fbab 	bl	800a1b4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800ca5e:	4e59      	ldr	r6, [pc, #356]	; (800cbc4 <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 800ca60:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800ca62:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800ca64:	079f      	lsls	r7, r3, #30
 800ca66:	f53f af53 	bmi.w	800c910 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800ca6a:	f7fd fba3 	bl	800a1b4 <HAL_GetTick>
 800ca6e:	1b40      	subs	r0, r0, r5
 800ca70:	2802      	cmp	r0, #2
 800ca72:	d9f6      	bls.n	800ca62 <HAL_RCC_OscConfig+0x16e>
 800ca74:	e781      	b.n	800c97a <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 800ca76:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 800ca78:	f7fd fb9c 	bl	800a1b4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800ca7c:	4e51      	ldr	r6, [pc, #324]	; (800cbc4 <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 800ca7e:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800ca80:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800ca82:	0798      	lsls	r0, r3, #30
 800ca84:	f57f af44 	bpl.w	800c910 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800ca88:	f7fd fb94 	bl	800a1b4 <HAL_GetTick>
 800ca8c:	1b40      	subs	r0, r0, r5
 800ca8e:	2802      	cmp	r0, #2
 800ca90:	d9f6      	bls.n	800ca80 <HAL_RCC_OscConfig+0x18c>
 800ca92:	e772      	b.n	800c97a <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800ca94:	4b4b      	ldr	r3, [pc, #300]	; (800cbc4 <HAL_RCC_OscConfig+0x2d0>)
 800ca96:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800ca98:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 800ca9c:	d128      	bne.n	800caf0 <HAL_RCC_OscConfig+0x1fc>
      __HAL_RCC_PWR_CLK_ENABLE();
 800ca9e:	9201      	str	r2, [sp, #4]
 800caa0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800caa2:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800caa6:	641a      	str	r2, [r3, #64]	; 0x40
 800caa8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800caaa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800caae:	9301      	str	r3, [sp, #4]
 800cab0:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800cab2:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800cab4:	4d46      	ldr	r5, [pc, #280]	; (800cbd0 <HAL_RCC_OscConfig+0x2dc>)
 800cab6:	682b      	ldr	r3, [r5, #0]
 800cab8:	05d9      	lsls	r1, r3, #23
 800caba:	d51b      	bpl.n	800caf4 <HAL_RCC_OscConfig+0x200>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800cabc:	68a3      	ldr	r3, [r4, #8]
 800cabe:	4d41      	ldr	r5, [pc, #260]	; (800cbc4 <HAL_RCC_OscConfig+0x2d0>)
 800cac0:	2b01      	cmp	r3, #1
 800cac2:	d127      	bne.n	800cb14 <HAL_RCC_OscConfig+0x220>
 800cac4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800cac6:	f043 0301 	orr.w	r3, r3, #1
 800caca:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 800cacc:	f7fd fb72 	bl	800a1b4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800cad0:	4e3c      	ldr	r6, [pc, #240]	; (800cbc4 <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 800cad2:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800cad4:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800cad8:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800cada:	079b      	lsls	r3, r3, #30
 800cadc:	d539      	bpl.n	800cb52 <HAL_RCC_OscConfig+0x25e>
    if(pwrclkchanged == SET)
 800cade:	2f00      	cmp	r7, #0
 800cae0:	f43f af1a 	beq.w	800c918 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 800cae4:	4a37      	ldr	r2, [pc, #220]	; (800cbc4 <HAL_RCC_OscConfig+0x2d0>)
 800cae6:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800cae8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800caec:	6413      	str	r3, [r2, #64]	; 0x40
 800caee:	e713      	b.n	800c918 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 800caf0:	2700      	movs	r7, #0
 800caf2:	e7df      	b.n	800cab4 <HAL_RCC_OscConfig+0x1c0>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800caf4:	682b      	ldr	r3, [r5, #0]
 800caf6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800cafa:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800cafc:	f7fd fb5a 	bl	800a1b4 <HAL_GetTick>
 800cb00:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800cb02:	682b      	ldr	r3, [r5, #0]
 800cb04:	05da      	lsls	r2, r3, #23
 800cb06:	d4d9      	bmi.n	800cabc <HAL_RCC_OscConfig+0x1c8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800cb08:	f7fd fb54 	bl	800a1b4 <HAL_GetTick>
 800cb0c:	1b80      	subs	r0, r0, r6
 800cb0e:	2802      	cmp	r0, #2
 800cb10:	d9f7      	bls.n	800cb02 <HAL_RCC_OscConfig+0x20e>
 800cb12:	e732      	b.n	800c97a <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800cb14:	2b05      	cmp	r3, #5
 800cb16:	d104      	bne.n	800cb22 <HAL_RCC_OscConfig+0x22e>
 800cb18:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800cb1a:	f043 0304 	orr.w	r3, r3, #4
 800cb1e:	672b      	str	r3, [r5, #112]	; 0x70
 800cb20:	e7d0      	b.n	800cac4 <HAL_RCC_OscConfig+0x1d0>
 800cb22:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800cb24:	f022 0201 	bic.w	r2, r2, #1
 800cb28:	672a      	str	r2, [r5, #112]	; 0x70
 800cb2a:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800cb2c:	f022 0204 	bic.w	r2, r2, #4
 800cb30:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800cb32:	2b00      	cmp	r3, #0
 800cb34:	d1ca      	bne.n	800cacc <HAL_RCC_OscConfig+0x1d8>
      tickstart = HAL_GetTick();
 800cb36:	f7fd fb3d 	bl	800a1b4 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800cb3a:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800cb3e:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800cb40:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800cb42:	0798      	lsls	r0, r3, #30
 800cb44:	d5cb      	bpl.n	800cade <HAL_RCC_OscConfig+0x1ea>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800cb46:	f7fd fb35 	bl	800a1b4 <HAL_GetTick>
 800cb4a:	1b80      	subs	r0, r0, r6
 800cb4c:	4540      	cmp	r0, r8
 800cb4e:	d9f7      	bls.n	800cb40 <HAL_RCC_OscConfig+0x24c>
 800cb50:	e713      	b.n	800c97a <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800cb52:	f7fd fb2f 	bl	800a1b4 <HAL_GetTick>
 800cb56:	1b40      	subs	r0, r0, r5
 800cb58:	4540      	cmp	r0, r8
 800cb5a:	d9bd      	bls.n	800cad8 <HAL_RCC_OscConfig+0x1e4>
 800cb5c:	e70d      	b.n	800c97a <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800cb5e:	4d19      	ldr	r5, [pc, #100]	; (800cbc4 <HAL_RCC_OscConfig+0x2d0>)
 800cb60:	68ab      	ldr	r3, [r5, #8]
 800cb62:	f003 030c 	and.w	r3, r3, #12
 800cb66:	2b08      	cmp	r3, #8
 800cb68:	d049      	beq.n	800cbfe <HAL_RCC_OscConfig+0x30a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800cb6a:	4e1a      	ldr	r6, [pc, #104]	; (800cbd4 <HAL_RCC_OscConfig+0x2e0>)
 800cb6c:	2300      	movs	r3, #0
 800cb6e:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800cb70:	6033      	str	r3, [r6, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800cb72:	d137      	bne.n	800cbe4 <HAL_RCC_OscConfig+0x2f0>
        tickstart = HAL_GetTick();
 800cb74:	f7fd fb1e 	bl	800a1b4 <HAL_GetTick>
 800cb78:	4607      	mov	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800cb7a:	682b      	ldr	r3, [r5, #0]
 800cb7c:	0199      	lsls	r1, r3, #6
 800cb7e:	d42b      	bmi.n	800cbd8 <HAL_RCC_OscConfig+0x2e4>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800cb80:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 800cb84:	4313      	orrs	r3, r2
 800cb86:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cb88:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800cb8c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800cb8e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800cb92:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800cb94:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800cb98:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800cb9a:	0852      	lsrs	r2, r2, #1
 800cb9c:	3a01      	subs	r2, #1
 800cb9e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800cba2:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800cba4:	2301      	movs	r3, #1
 800cba6:	6033      	str	r3, [r6, #0]
        tickstart = HAL_GetTick();
 800cba8:	f7fd fb04 	bl	800a1b4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800cbac:	4d05      	ldr	r5, [pc, #20]	; (800cbc4 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 800cbae:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800cbb0:	682b      	ldr	r3, [r5, #0]
 800cbb2:	019a      	lsls	r2, r3, #6
 800cbb4:	f53f aeb4 	bmi.w	800c920 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800cbb8:	f7fd fafc 	bl	800a1b4 <HAL_GetTick>
 800cbbc:	1b00      	subs	r0, r0, r4
 800cbbe:	2802      	cmp	r0, #2
 800cbc0:	d9f6      	bls.n	800cbb0 <HAL_RCC_OscConfig+0x2bc>
 800cbc2:	e6da      	b.n	800c97a <HAL_RCC_OscConfig+0x86>
 800cbc4:	40023800 	.word	0x40023800
 800cbc8:	42470000 	.word	0x42470000
 800cbcc:	42470e80 	.word	0x42470e80
 800cbd0:	40007000 	.word	0x40007000
 800cbd4:	42470060 	.word	0x42470060
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800cbd8:	f7fd faec 	bl	800a1b4 <HAL_GetTick>
 800cbdc:	1bc0      	subs	r0, r0, r7
 800cbde:	2802      	cmp	r0, #2
 800cbe0:	d9cb      	bls.n	800cb7a <HAL_RCC_OscConfig+0x286>
 800cbe2:	e6ca      	b.n	800c97a <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 800cbe4:	f7fd fae6 	bl	800a1b4 <HAL_GetTick>
 800cbe8:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800cbea:	682b      	ldr	r3, [r5, #0]
 800cbec:	019b      	lsls	r3, r3, #6
 800cbee:	f57f ae97 	bpl.w	800c920 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800cbf2:	f7fd fadf 	bl	800a1b4 <HAL_GetTick>
 800cbf6:	1b00      	subs	r0, r0, r4
 800cbf8:	2802      	cmp	r0, #2
 800cbfa:	d9f6      	bls.n	800cbea <HAL_RCC_OscConfig+0x2f6>
 800cbfc:	e6bd      	b.n	800c97a <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800cbfe:	2801      	cmp	r0, #1
 800cc00:	f43f aebc 	beq.w	800c97c <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 800cc04:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800cc06:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800cc08:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800cc0c:	4291      	cmp	r1, r2
 800cc0e:	f47f ae9e 	bne.w	800c94e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800cc12:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800cc14:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800cc18:	428a      	cmp	r2, r1
 800cc1a:	f47f ae98 	bne.w	800c94e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800cc1e:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800cc20:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800cc24:	401a      	ands	r2, r3
 800cc26:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800cc2a:	f47f ae90 	bne.w	800c94e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800cc2e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800cc30:	0852      	lsrs	r2, r2, #1
 800cc32:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800cc36:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800cc38:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800cc3c:	f47f ae87 	bne.w	800c94e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 800cc40:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800cc42:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800cc46:	ebb2 6f01 	cmp.w	r2, r1, lsl #24
 800cc4a:	f47f ae80 	bne.w	800c94e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 800cc4e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800cc50:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 800cc54:	ebb3 7f02 	cmp.w	r3, r2, lsl #28
 800cc58:	f43f ae62 	beq.w	800c920 <HAL_RCC_OscConfig+0x2c>
 800cc5c:	e677      	b.n	800c94e <HAL_RCC_OscConfig+0x5a>
 800cc5e:	bf00      	nop

0800cc60 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 800cc60:	b538      	push	{r3, r4, r5, lr}
 800cc62:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 800cc64:	4604      	mov	r4, r0
 800cc66:	b1c8      	cbz	r0, 800cc9c <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 800cc68:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800cc6c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800cc70:	b91b      	cbnz	r3, 800cc7a <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800cc72:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800cc76:	f7f5 f83b 	bl	8001cf0 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800cc7a:	2302      	movs	r3, #2
 800cc7c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800cc80:	1d21      	adds	r1, r4, #4
 800cc82:	6820      	ldr	r0, [r4, #0]
 800cc84:	f000 f9b8 	bl	800cff8 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 800cc88:	6862      	ldr	r2, [r4, #4]
 800cc8a:	6820      	ldr	r0, [r4, #0]
 800cc8c:	4629      	mov	r1, r5
 800cc8e:	f000 f9e9 	bl	800d064 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800cc92:	2301      	movs	r3, #1
 800cc94:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 800cc98:	2000      	movs	r0, #0
}
 800cc9a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800cc9c:	2001      	movs	r0, #1
 800cc9e:	e7fc      	b.n	800cc9a <HAL_SDRAM_Init+0x3a>

0800cca0 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 800cca0:	b510      	push	{r4, lr}
 800cca2:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 800cca4:	f7f5 f89a 	bl	8001ddc <HAL_SDRAM_MspDeInit>
#endif

  /* Configure the SDRAM registers with their reset values */
  FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 800cca8:	e9d4 0100 	ldrd	r0, r1, [r4]
 800ccac:	f000 fa16 	bl	800d0dc <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 800ccb0:	2000      	movs	r0, #0
 800ccb2:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 800ccb6:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 800ccba:	bd10      	pop	{r4, pc}

0800ccbc <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800ccbc:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800ccbe:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800ccc2:	2b02      	cmp	r3, #2
{
 800ccc4:	4604      	mov	r4, r0
 800ccc6:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800ccc8:	b2d8      	uxtb	r0, r3
 800ccca:	d00d      	beq.n	800cce8 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800cccc:	2302      	movs	r3, #2
 800ccce:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800ccd2:	6820      	ldr	r0, [r4, #0]
 800ccd4:	f000 fa11 	bl	800d0fa <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800ccd8:	682b      	ldr	r3, [r5, #0]
 800ccda:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800ccdc:	bf0c      	ite	eq
 800ccde:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 800cce0:	2301      	movne	r3, #1
 800cce2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 800cce6:	2000      	movs	r0, #0
}
 800cce8:	bd38      	pop	{r3, r4, r5, pc}

0800ccea <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800ccea:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800ccec:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800ccf0:	2b02      	cmp	r3, #2
{
 800ccf2:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800ccf4:	b2d8      	uxtb	r0, r3
 800ccf6:	d009      	beq.n	800cd0c <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800ccf8:	2302      	movs	r3, #2
 800ccfa:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 800ccfe:	6820      	ldr	r0, [r4, #0]
 800cd00:	f000 fa22 	bl	800d148 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800cd04:	2301      	movs	r3, #1
 800cd06:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 800cd0a:	2000      	movs	r0, #0
}
 800cd0c:	bd10      	pop	{r4, pc}

0800cd0e <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 800cd0e:	4770      	bx	lr

0800cd10 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 800cd10:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800cd14:	2b01      	cmp	r3, #1
 800cd16:	d130      	bne.n	800cd7a <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800cd18:	2302      	movs	r3, #2
 800cd1a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800cd1e:	6803      	ldr	r3, [r0, #0]
 800cd20:	68da      	ldr	r2, [r3, #12]
 800cd22:	f042 0201 	orr.w	r2, r2, #1
 800cd26:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800cd28:	4a15      	ldr	r2, [pc, #84]	; (800cd80 <HAL_TIM_Base_Start_IT+0x70>)
 800cd2a:	4293      	cmp	r3, r2
 800cd2c:	d01a      	beq.n	800cd64 <HAL_TIM_Base_Start_IT+0x54>
 800cd2e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800cd32:	d017      	beq.n	800cd64 <HAL_TIM_Base_Start_IT+0x54>
 800cd34:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800cd38:	4293      	cmp	r3, r2
 800cd3a:	d013      	beq.n	800cd64 <HAL_TIM_Base_Start_IT+0x54>
 800cd3c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800cd40:	4293      	cmp	r3, r2
 800cd42:	d00f      	beq.n	800cd64 <HAL_TIM_Base_Start_IT+0x54>
 800cd44:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800cd48:	4293      	cmp	r3, r2
 800cd4a:	d00b      	beq.n	800cd64 <HAL_TIM_Base_Start_IT+0x54>
 800cd4c:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800cd50:	4293      	cmp	r3, r2
 800cd52:	d007      	beq.n	800cd64 <HAL_TIM_Base_Start_IT+0x54>
 800cd54:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800cd58:	4293      	cmp	r3, r2
 800cd5a:	d003      	beq.n	800cd64 <HAL_TIM_Base_Start_IT+0x54>
 800cd5c:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800cd60:	4293      	cmp	r3, r2
 800cd62:	d104      	bne.n	800cd6e <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800cd64:	689a      	ldr	r2, [r3, #8]
 800cd66:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800cd6a:	2a06      	cmp	r2, #6
 800cd6c:	d003      	beq.n	800cd76 <HAL_TIM_Base_Start_IT+0x66>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 800cd6e:	681a      	ldr	r2, [r3, #0]
 800cd70:	f042 0201 	orr.w	r2, r2, #1
 800cd74:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 800cd76:	2000      	movs	r0, #0
}
 800cd78:	4770      	bx	lr
    return HAL_ERROR;
 800cd7a:	2001      	movs	r0, #1
 800cd7c:	4770      	bx	lr
 800cd7e:	bf00      	nop
 800cd80:	40010000 	.word	0x40010000

0800cd84 <HAL_TIM_OC_DelayElapsedCallback>:
 800cd84:	4770      	bx	lr

0800cd86 <HAL_TIM_IC_CaptureCallback>:
 800cd86:	4770      	bx	lr

0800cd88 <HAL_TIM_PWM_PulseFinishedCallback>:
 800cd88:	4770      	bx	lr

0800cd8a <HAL_TIM_TriggerCallback>:
 800cd8a:	4770      	bx	lr

0800cd8c <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800cd8c:	6803      	ldr	r3, [r0, #0]
 800cd8e:	691a      	ldr	r2, [r3, #16]
 800cd90:	0791      	lsls	r1, r2, #30
{
 800cd92:	b510      	push	{r4, lr}
 800cd94:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800cd96:	d50e      	bpl.n	800cdb6 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800cd98:	68da      	ldr	r2, [r3, #12]
 800cd9a:	0792      	lsls	r2, r2, #30
 800cd9c:	d50b      	bpl.n	800cdb6 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800cd9e:	f06f 0202 	mvn.w	r2, #2
 800cda2:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800cda4:	2201      	movs	r2, #1
 800cda6:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800cda8:	699b      	ldr	r3, [r3, #24]
 800cdaa:	079b      	lsls	r3, r3, #30
 800cdac:	d077      	beq.n	800ce9e <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 800cdae:	f7ff ffea 	bl	800cd86 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cdb2:	2300      	movs	r3, #0
 800cdb4:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800cdb6:	6823      	ldr	r3, [r4, #0]
 800cdb8:	691a      	ldr	r2, [r3, #16]
 800cdba:	0750      	lsls	r0, r2, #29
 800cdbc:	d510      	bpl.n	800cde0 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800cdbe:	68da      	ldr	r2, [r3, #12]
 800cdc0:	0751      	lsls	r1, r2, #29
 800cdc2:	d50d      	bpl.n	800cde0 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800cdc4:	f06f 0204 	mvn.w	r2, #4
 800cdc8:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800cdca:	2202      	movs	r2, #2
 800cdcc:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800cdce:	699b      	ldr	r3, [r3, #24]
 800cdd0:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800cdd4:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800cdd6:	d068      	beq.n	800ceaa <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 800cdd8:	f7ff ffd5 	bl	800cd86 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cddc:	2300      	movs	r3, #0
 800cdde:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800cde0:	6823      	ldr	r3, [r4, #0]
 800cde2:	691a      	ldr	r2, [r3, #16]
 800cde4:	0712      	lsls	r2, r2, #28
 800cde6:	d50f      	bpl.n	800ce08 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800cde8:	68da      	ldr	r2, [r3, #12]
 800cdea:	0710      	lsls	r0, r2, #28
 800cdec:	d50c      	bpl.n	800ce08 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800cdee:	f06f 0208 	mvn.w	r2, #8
 800cdf2:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800cdf4:	2204      	movs	r2, #4
 800cdf6:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800cdf8:	69db      	ldr	r3, [r3, #28]
 800cdfa:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800cdfc:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800cdfe:	d05a      	beq.n	800ceb6 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 800ce00:	f7ff ffc1 	bl	800cd86 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800ce04:	2300      	movs	r3, #0
 800ce06:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800ce08:	6823      	ldr	r3, [r4, #0]
 800ce0a:	691a      	ldr	r2, [r3, #16]
 800ce0c:	06d2      	lsls	r2, r2, #27
 800ce0e:	d510      	bpl.n	800ce32 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800ce10:	68da      	ldr	r2, [r3, #12]
 800ce12:	06d0      	lsls	r0, r2, #27
 800ce14:	d50d      	bpl.n	800ce32 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800ce16:	f06f 0210 	mvn.w	r2, #16
 800ce1a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800ce1c:	2208      	movs	r2, #8
 800ce1e:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800ce20:	69db      	ldr	r3, [r3, #28]
 800ce22:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800ce26:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800ce28:	d04b      	beq.n	800cec2 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 800ce2a:	f7ff ffac 	bl	800cd86 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800ce2e:	2300      	movs	r3, #0
 800ce30:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800ce32:	6823      	ldr	r3, [r4, #0]
 800ce34:	691a      	ldr	r2, [r3, #16]
 800ce36:	07d1      	lsls	r1, r2, #31
 800ce38:	d508      	bpl.n	800ce4c <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800ce3a:	68da      	ldr	r2, [r3, #12]
 800ce3c:	07d2      	lsls	r2, r2, #31
 800ce3e:	d505      	bpl.n	800ce4c <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800ce40:	f06f 0201 	mvn.w	r2, #1
 800ce44:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 800ce46:	4620      	mov	r0, r4
 800ce48:	f7f4 fd9a 	bl	8001980 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800ce4c:	6823      	ldr	r3, [r4, #0]
 800ce4e:	691a      	ldr	r2, [r3, #16]
 800ce50:	0610      	lsls	r0, r2, #24
 800ce52:	d508      	bpl.n	800ce66 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800ce54:	68da      	ldr	r2, [r3, #12]
 800ce56:	0611      	lsls	r1, r2, #24
 800ce58:	d505      	bpl.n	800ce66 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800ce5a:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800ce5e:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 800ce60:	4620      	mov	r0, r4
 800ce62:	f000 f8c8 	bl	800cff6 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800ce66:	6823      	ldr	r3, [r4, #0]
 800ce68:	691a      	ldr	r2, [r3, #16]
 800ce6a:	0652      	lsls	r2, r2, #25
 800ce6c:	d508      	bpl.n	800ce80 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800ce6e:	68da      	ldr	r2, [r3, #12]
 800ce70:	0650      	lsls	r0, r2, #25
 800ce72:	d505      	bpl.n	800ce80 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800ce74:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800ce78:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 800ce7a:	4620      	mov	r0, r4
 800ce7c:	f7ff ff85 	bl	800cd8a <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800ce80:	6823      	ldr	r3, [r4, #0]
 800ce82:	691a      	ldr	r2, [r3, #16]
 800ce84:	0691      	lsls	r1, r2, #26
 800ce86:	d522      	bpl.n	800cece <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800ce88:	68da      	ldr	r2, [r3, #12]
 800ce8a:	0692      	lsls	r2, r2, #26
 800ce8c:	d51f      	bpl.n	800cece <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800ce8e:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 800ce92:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800ce94:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 800ce96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800ce9a:	f000 b8ab 	b.w	800cff4 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800ce9e:	f7ff ff71 	bl	800cd84 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800cea2:	4620      	mov	r0, r4
 800cea4:	f7ff ff70 	bl	800cd88 <HAL_TIM_PWM_PulseFinishedCallback>
 800cea8:	e783      	b.n	800cdb2 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800ceaa:	f7ff ff6b 	bl	800cd84 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800ceae:	4620      	mov	r0, r4
 800ceb0:	f7ff ff6a 	bl	800cd88 <HAL_TIM_PWM_PulseFinishedCallback>
 800ceb4:	e792      	b.n	800cddc <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800ceb6:	f7ff ff65 	bl	800cd84 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800ceba:	4620      	mov	r0, r4
 800cebc:	f7ff ff64 	bl	800cd88 <HAL_TIM_PWM_PulseFinishedCallback>
 800cec0:	e7a0      	b.n	800ce04 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800cec2:	f7ff ff5f 	bl	800cd84 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800cec6:	4620      	mov	r0, r4
 800cec8:	f7ff ff5e 	bl	800cd88 <HAL_TIM_PWM_PulseFinishedCallback>
 800cecc:	e7af      	b.n	800ce2e <HAL_TIM_IRQHandler+0xa2>
}
 800cece:	bd10      	pop	{r4, pc}

0800ced0 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ced0:	4a30      	ldr	r2, [pc, #192]	; (800cf94 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 800ced2:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ced4:	4290      	cmp	r0, r2
 800ced6:	d012      	beq.n	800cefe <TIM_Base_SetConfig+0x2e>
 800ced8:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800cedc:	d00f      	beq.n	800cefe <TIM_Base_SetConfig+0x2e>
 800cede:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800cee2:	4290      	cmp	r0, r2
 800cee4:	d00b      	beq.n	800cefe <TIM_Base_SetConfig+0x2e>
 800cee6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ceea:	4290      	cmp	r0, r2
 800ceec:	d007      	beq.n	800cefe <TIM_Base_SetConfig+0x2e>
 800ceee:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800cef2:	4290      	cmp	r0, r2
 800cef4:	d003      	beq.n	800cefe <TIM_Base_SetConfig+0x2e>
 800cef6:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800cefa:	4290      	cmp	r0, r2
 800cefc:	d119      	bne.n	800cf32 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 800cefe:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800cf00:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800cf04:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800cf06:	4a23      	ldr	r2, [pc, #140]	; (800cf94 <TIM_Base_SetConfig+0xc4>)
 800cf08:	4290      	cmp	r0, r2
 800cf0a:	d029      	beq.n	800cf60 <TIM_Base_SetConfig+0x90>
 800cf0c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800cf10:	d026      	beq.n	800cf60 <TIM_Base_SetConfig+0x90>
 800cf12:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800cf16:	4290      	cmp	r0, r2
 800cf18:	d022      	beq.n	800cf60 <TIM_Base_SetConfig+0x90>
 800cf1a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800cf1e:	4290      	cmp	r0, r2
 800cf20:	d01e      	beq.n	800cf60 <TIM_Base_SetConfig+0x90>
 800cf22:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800cf26:	4290      	cmp	r0, r2
 800cf28:	d01a      	beq.n	800cf60 <TIM_Base_SetConfig+0x90>
 800cf2a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800cf2e:	4290      	cmp	r0, r2
 800cf30:	d016      	beq.n	800cf60 <TIM_Base_SetConfig+0x90>
 800cf32:	4a19      	ldr	r2, [pc, #100]	; (800cf98 <TIM_Base_SetConfig+0xc8>)
 800cf34:	4290      	cmp	r0, r2
 800cf36:	d013      	beq.n	800cf60 <TIM_Base_SetConfig+0x90>
 800cf38:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800cf3c:	4290      	cmp	r0, r2
 800cf3e:	d00f      	beq.n	800cf60 <TIM_Base_SetConfig+0x90>
 800cf40:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800cf44:	4290      	cmp	r0, r2
 800cf46:	d00b      	beq.n	800cf60 <TIM_Base_SetConfig+0x90>
 800cf48:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 800cf4c:	4290      	cmp	r0, r2
 800cf4e:	d007      	beq.n	800cf60 <TIM_Base_SetConfig+0x90>
 800cf50:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800cf54:	4290      	cmp	r0, r2
 800cf56:	d003      	beq.n	800cf60 <TIM_Base_SetConfig+0x90>
 800cf58:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800cf5c:	4290      	cmp	r0, r2
 800cf5e:	d103      	bne.n	800cf68 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800cf60:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 800cf62:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800cf66:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800cf68:	694a      	ldr	r2, [r1, #20]
 800cf6a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800cf6e:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 800cf70:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800cf72:	688b      	ldr	r3, [r1, #8]
 800cf74:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800cf76:	680b      	ldr	r3, [r1, #0]
 800cf78:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800cf7a:	4b06      	ldr	r3, [pc, #24]	; (800cf94 <TIM_Base_SetConfig+0xc4>)
 800cf7c:	4298      	cmp	r0, r3
 800cf7e:	d003      	beq.n	800cf88 <TIM_Base_SetConfig+0xb8>
 800cf80:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800cf84:	4298      	cmp	r0, r3
 800cf86:	d101      	bne.n	800cf8c <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800cf88:	690b      	ldr	r3, [r1, #16]
 800cf8a:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800cf8c:	2301      	movs	r3, #1
 800cf8e:	6143      	str	r3, [r0, #20]
}
 800cf90:	4770      	bx	lr
 800cf92:	bf00      	nop
 800cf94:	40010000 	.word	0x40010000
 800cf98:	40014000 	.word	0x40014000

0800cf9c <HAL_TIM_Base_Init>:
{
 800cf9c:	b510      	push	{r4, lr}
  if (htim == NULL)
 800cf9e:	4604      	mov	r4, r0
 800cfa0:	b330      	cbz	r0, 800cff0 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 800cfa2:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800cfa6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800cfaa:	b91b      	cbnz	r3, 800cfb4 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800cfac:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800cfb0:	f7ff fead 	bl	800cd0e <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800cfb4:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800cfb6:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800cfb8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800cfbc:	1d21      	adds	r1, r4, #4
 800cfbe:	f7ff ff87 	bl	800ced0 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800cfc2:	2301      	movs	r3, #1
 800cfc4:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 800cfc8:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800cfca:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800cfce:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800cfd2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800cfd6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800cfda:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800cfde:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800cfe2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800cfe6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800cfea:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 800cfee:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800cff0:	2001      	movs	r0, #1
 800cff2:	e7fc      	b.n	800cfee <HAL_TIM_Base_Init+0x52>

0800cff4 <HAL_TIMEx_CommutCallback>:
 800cff4:	4770      	bx	lr

0800cff6 <HAL_TIMEx_BreakCallback>:
 800cff6:	4770      	bx	lr

0800cff8 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800cff8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cffc:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800cffe:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
 800d002:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 800d006:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 800d00a:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 800d00e:	6809      	ldr	r1, [r1, #0]
 800d010:	2901      	cmp	r1, #1
 800d012:	ea43 0304 	orr.w	r3, r3, r4
 800d016:	4912      	ldr	r1, [pc, #72]	; (800d060 <FMC_SDRAM_Init+0x68>)
  {    
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 800d018:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 800d01a:	d00f      	beq.n	800d03c <FMC_SDRAM_Init+0x44>
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
                         FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                         FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
  
  
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800d01c:	431a      	orrs	r2, r3
 800d01e:	432a      	orrs	r2, r5
 800d020:	ea42 0308 	orr.w	r3, r2, r8
 800d024:	ea43 030e 	orr.w	r3, r3, lr
 800d028:	ea43 030c 	orr.w	r3, r3, ip
 800d02c:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800d02e:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800d030:	4333      	orrs	r3, r6
 800d032:	430b      	orrs	r3, r1
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 800d034:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 800d036:	2000      	movs	r0, #0
 800d038:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 800d03c:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 800d03e:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800d040:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800d042:	ea45 0208 	orr.w	r2, r5, r8
 800d046:	ea42 020e 	orr.w	r2, r2, lr
 800d04a:	ea42 020c 	orr.w	r2, r2, ip
 800d04e:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 800d050:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800d054:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 800d056:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800d058:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 800d05a:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 800d05c:	6042      	str	r2, [r0, #4]
 800d05e:	e7ea      	b.n	800d036 <FMC_SDRAM_Init+0x3e>
 800d060:	ffff8000 	.word	0xffff8000

0800d064 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 800d064:	68cb      	ldr	r3, [r1, #12]
{
 800d066:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d068:	680c      	ldr	r4, [r1, #0]
 800d06a:	688e      	ldr	r6, [r1, #8]
 800d06c:	690d      	ldr	r5, [r1, #16]
 800d06e:	1e5f      	subs	r7, r3, #1
 800d070:	694b      	ldr	r3, [r1, #20]
 800d072:	f104 3cff 	add.w	ip, r4, #4294967295
 800d076:	684c      	ldr	r4, [r1, #4]
 800d078:	6989      	ldr	r1, [r1, #24]
 800d07a:	3b01      	subs	r3, #1
 800d07c:	051b      	lsls	r3, r3, #20
 800d07e:	3c01      	subs	r4, #1
 800d080:	3e01      	subs	r6, #1
 800d082:	3d01      	subs	r5, #1
 800d084:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 800d086:	2a01      	cmp	r2, #1
 800d088:	ea4f 1404 	mov.w	r4, r4, lsl #4
 800d08c:	ea4f 2606 	mov.w	r6, r6, lsl #8
 800d090:	ea4f 4505 	mov.w	r5, r5, lsl #16
 800d094:	ea4f 6101 	mov.w	r1, r1, lsl #24
 800d098:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
 800d09c:	d00c      	beq.n	800d0b8 <FMC_SDRAM_Timing_Init+0x54>
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800d09e:	ea43 030c 	orr.w	r3, r3, ip
 800d0a2:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 800d0a4:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800d0a6:	4333      	orrs	r3, r6
 800d0a8:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 800d0aa:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800d0ae:	430b      	orrs	r3, r1
 800d0b0:	4313      	orrs	r3, r2
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
                       (((Timing->RPDelay)-1U) << 20U)             |\
                       (((Timing->RCDDelay)-1U) << 24U));
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 800d0b2:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 800d0b4:	2000      	movs	r0, #0
 800d0b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 800d0b8:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 800d0ba:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 800d0be:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800d0c2:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 800d0c4:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800d0c6:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 800d0ca:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 800d0cc:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800d0ce:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 800d0d0:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800d0d4:	430a      	orrs	r2, r1
 800d0d6:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 800d0d8:	60c2      	str	r2, [r0, #12]
 800d0da:	e7eb      	b.n	800d0b4 <FMC_SDRAM_Timing_Init+0x50>

0800d0dc <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 800d0dc:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 800d0e0:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 800d0e4:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;    
 800d0e8:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 800d0ec:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 800d0ee:	2300      	movs	r3, #0
 800d0f0:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 800d0f2:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 800d0f4:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 800d0f6:	4618      	mov	r0, r3
 800d0f8:	4770      	bx	lr

0800d0fa <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800d0fa:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 800d0fc:	2300      	movs	r3, #0
 800d0fe:	9301      	str	r3, [sp, #4]
{
 800d100:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800d102:	e9d1 3200 	ldrd	r3, r2, [r1]
 800d106:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 800d108:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800d10a:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 800d10e:	688a      	ldr	r2, [r1, #8]
 800d110:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800d112:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800d116:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 800d118:	9b01      	ldr	r3, [sp, #4]
 800d11a:	6103      	str	r3, [r0, #16]
{
 800d11c:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 800d11e:	f7fd f849 	bl	800a1b4 <HAL_GetTick>
 800d122:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800d124:	69a3      	ldr	r3, [r4, #24]
 800d126:	f013 0320 	ands.w	r3, r3, #32
 800d12a:	d101      	bne.n	800d130 <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 800d12c:	4618      	mov	r0, r3
 800d12e:	e003      	b.n	800d138 <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 800d130:	1c6b      	adds	r3, r5, #1
 800d132:	d0f7      	beq.n	800d124 <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800d134:	b915      	cbnz	r5, 800d13c <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 800d136:	2003      	movs	r0, #3
}
 800d138:	b002      	add	sp, #8
 800d13a:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800d13c:	f7fd f83a 	bl	800a1b4 <HAL_GetTick>
 800d140:	1b80      	subs	r0, r0, r6
 800d142:	42a8      	cmp	r0, r5
 800d144:	d9ee      	bls.n	800d124 <FMC_SDRAM_SendCommand+0x2a>
 800d146:	e7f6      	b.n	800d136 <FMC_SDRAM_SendCommand+0x3c>

0800d148 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 800d148:	6943      	ldr	r3, [r0, #20]
 800d14a:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 800d14e:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 800d150:	2000      	movs	r0, #0
 800d152:	4770      	bx	lr

0800d154 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800d154:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800d156:	4b05      	ldr	r3, [pc, #20]	; (800d16c <SysTick_Handler+0x18>)
 800d158:	681b      	ldr	r3, [r3, #0]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800d15a:	f001 fe6b 	bl	800ee34 <xTaskGetSchedulerState>
 800d15e:	2801      	cmp	r0, #1
 800d160:	d003      	beq.n	800d16a <SysTick_Handler+0x16>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800d162:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800d166:	f000 bbdd 	b.w	800d924 <xPortSysTickHandler>
}
 800d16a:	bd08      	pop	{r3, pc}
 800d16c:	e000e010 	.word	0xe000e010

0800d170 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800d170:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800d174:	b92b      	cbnz	r3, 800d182 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800d176:	4b06      	ldr	r3, [pc, #24]	; (800d190 <osKernelInitialize+0x20>)
 800d178:	6818      	ldr	r0, [r3, #0]
 800d17a:	b928      	cbnz	r0, 800d188 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800d17c:	2201      	movs	r2, #1
 800d17e:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800d180:	4770      	bx	lr
    stat = osErrorISR;
 800d182:	f06f 0005 	mvn.w	r0, #5
 800d186:	4770      	bx	lr
    } else {
      stat = osError;
 800d188:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800d18c:	4770      	bx	lr
 800d18e:	bf00      	nop
 800d190:	2000ff70 	.word	0x2000ff70

0800d194 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800d194:	b510      	push	{r4, lr}
 800d196:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800d19a:	b95c      	cbnz	r4, 800d1b4 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800d19c:	4b08      	ldr	r3, [pc, #32]	; (800d1c0 <osKernelStart+0x2c>)
 800d19e:	681a      	ldr	r2, [r3, #0]
 800d1a0:	2a01      	cmp	r2, #1
 800d1a2:	d10a      	bne.n	800d1ba <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800d1a4:	4a07      	ldr	r2, [pc, #28]	; (800d1c4 <osKernelStart+0x30>)
 800d1a6:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800d1a8:	2202      	movs	r2, #2
 800d1aa:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800d1ac:	f001 fcde 	bl	800eb6c <vTaskStartScheduler>
      stat = osOK;
 800d1b0:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800d1b2:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800d1b4:	f06f 0005 	mvn.w	r0, #5
 800d1b8:	e7fb      	b.n	800d1b2 <osKernelStart+0x1e>
      stat = osError;
 800d1ba:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800d1be:	e7f8      	b.n	800d1b2 <osKernelStart+0x1e>
 800d1c0:	2000ff70 	.word	0x2000ff70
 800d1c4:	e000ed00 	.word	0xe000ed00

0800d1c8 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800d1c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d1ca:	b087      	sub	sp, #28
 800d1cc:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800d1ce:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800d1d0:	460b      	mov	r3, r1
  hTask = NULL;
 800d1d2:	9205      	str	r2, [sp, #20]
 800d1d4:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800d1d8:	b9d2      	cbnz	r2, 800d210 <osThreadNew+0x48>
 800d1da:	b1c8      	cbz	r0, 800d210 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800d1dc:	2c00      	cmp	r4, #0
 800d1de:	d02f      	beq.n	800d240 <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800d1e0:	69a5      	ldr	r5, [r4, #24]
 800d1e2:	2d00      	cmp	r5, #0
 800d1e4:	bf08      	it	eq
 800d1e6:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800d1e8:	1e69      	subs	r1, r5, #1
 800d1ea:	2937      	cmp	r1, #55	; 0x37
 800d1ec:	46ac      	mov	ip, r5
 800d1ee:	d82b      	bhi.n	800d248 <osThreadNew+0x80>
 800d1f0:	6861      	ldr	r1, [r4, #4]
 800d1f2:	07c9      	lsls	r1, r1, #31
 800d1f4:	d428      	bmi.n	800d248 <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800d1f6:	6966      	ldr	r6, [r4, #20]
 800d1f8:	b16e      	cbz	r6, 800d216 <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800d1fa:	08b2      	lsrs	r2, r6, #2
 800d1fc:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 800d200:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d202:	b157      	cbz	r7, 800d21a <osThreadNew+0x52>
 800d204:	f1be 0fbf 	cmp.w	lr, #191	; 0xbf
 800d208:	d902      	bls.n	800d210 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800d20a:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d20c:	b104      	cbz	r4, 800d210 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800d20e:	b9ee      	cbnz	r6, 800d24c <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 800d210:	9805      	ldr	r0, [sp, #20]
}
 800d212:	b007      	add	sp, #28
 800d214:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800d216:	2280      	movs	r2, #128	; 0x80
 800d218:	e7f0      	b.n	800d1fc <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800d21a:	f1be 0f00 	cmp.w	lr, #0
 800d21e:	d1f7      	bne.n	800d210 <osThreadNew+0x48>
      if (mem == 0) {
 800d220:	6924      	ldr	r4, [r4, #16]
 800d222:	2c00      	cmp	r4, #0
 800d224:	d1f4      	bne.n	800d210 <osThreadNew+0x48>
 800d226:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800d228:	a905      	add	r1, sp, #20
 800d22a:	e9cd c100 	strd	ip, r1, [sp]
 800d22e:	b292      	uxth	r2, r2
 800d230:	4621      	mov	r1, r4
 800d232:	f001 fb15 	bl	800e860 <xTaskCreate>
 800d236:	2801      	cmp	r0, #1
            hTask = NULL;
 800d238:	bf1c      	itt	ne
 800d23a:	2300      	movne	r3, #0
 800d23c:	9305      	strne	r3, [sp, #20]
 800d23e:	e7e7      	b.n	800d210 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 800d240:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 800d244:	2280      	movs	r2, #128	; 0x80
 800d246:	e7ef      	b.n	800d228 <osThreadNew+0x60>
        return (NULL);
 800d248:	4610      	mov	r0, r2
 800d24a:	e7e2      	b.n	800d212 <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800d24c:	e9cd 4701 	strd	r4, r7, [sp, #4]
 800d250:	9500      	str	r5, [sp, #0]
 800d252:	f001 facd 	bl	800e7f0 <xTaskCreateStatic>
 800d256:	9005      	str	r0, [sp, #20]
 800d258:	e7da      	b.n	800d210 <osThreadNew+0x48>

0800d25a <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800d25a:	b510      	push	{r4, lr}
 800d25c:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800d260:	b924      	cbnz	r4, 800d26c <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800d262:	b110      	cbz	r0, 800d26a <osDelay+0x10>
      vTaskDelay(ticks);
 800d264:	f001 fc42 	bl	800eaec <vTaskDelay>
    stat = osOK;
 800d268:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 800d26a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800d26c:	f06f 0005 	mvn.w	r0, #5
 800d270:	e7fb      	b.n	800d26a <osDelay+0x10>

0800d272 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800d272:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d274:	4604      	mov	r4, r0
 800d276:	460e      	mov	r6, r1
 800d278:	4615      	mov	r5, r2
 800d27a:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800d27e:	b11a      	cbz	r2, 800d288 <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 800d280:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800d282:	4620      	mov	r0, r4
 800d284:	b003      	add	sp, #12
 800d286:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800d288:	2800      	cmp	r0, #0
 800d28a:	d0f9      	beq.n	800d280 <osSemaphoreNew+0xe>
 800d28c:	4288      	cmp	r0, r1
 800d28e:	d3f7      	bcc.n	800d280 <osSemaphoreNew+0xe>
    if (attr != NULL) {
 800d290:	b1e5      	cbz	r5, 800d2cc <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800d292:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 800d296:	b1bb      	cbz	r3, 800d2c8 <osSemaphoreNew+0x56>
 800d298:	2f4f      	cmp	r7, #79	; 0x4f
 800d29a:	d9f1      	bls.n	800d280 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 800d29c:	2801      	cmp	r0, #1
 800d29e:	d12a      	bne.n	800d2f6 <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800d2a0:	2103      	movs	r1, #3
 800d2a2:	9100      	str	r1, [sp, #0]
 800d2a4:	4611      	mov	r1, r2
 800d2a6:	f000 fced 	bl	800dc84 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 800d2aa:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800d2ac:	2800      	cmp	r0, #0
 800d2ae:	d0e7      	beq.n	800d280 <osSemaphoreNew+0xe>
 800d2b0:	b1de      	cbz	r6, 800d2ea <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d2b2:	2300      	movs	r3, #0
 800d2b4:	461a      	mov	r2, r3
 800d2b6:	4619      	mov	r1, r3
 800d2b8:	f000 fd9a 	bl	800ddf0 <xQueueGenericSend>
 800d2bc:	2801      	cmp	r0, #1
 800d2be:	d014      	beq.n	800d2ea <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800d2c0:	4620      	mov	r0, r4
 800d2c2:	f001 f8db 	bl	800e47c <vQueueDelete>
 800d2c6:	e7db      	b.n	800d280 <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800d2c8:	2f00      	cmp	r7, #0
 800d2ca:	d1d9      	bne.n	800d280 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 800d2cc:	2c01      	cmp	r4, #1
 800d2ce:	d105      	bne.n	800d2dc <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 800d2d0:	2203      	movs	r2, #3
 800d2d2:	2100      	movs	r1, #0
 800d2d4:	4620      	mov	r0, r4
 800d2d6:	f000 fd23 	bl	800dd20 <xQueueGenericCreate>
 800d2da:	e7e6      	b.n	800d2aa <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800d2dc:	4620      	mov	r0, r4
 800d2de:	4631      	mov	r1, r6
 800d2e0:	f000 fd67 	bl	800ddb2 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800d2e4:	4604      	mov	r4, r0
 800d2e6:	2800      	cmp	r0, #0
 800d2e8:	d0ca      	beq.n	800d280 <osSemaphoreNew+0xe>
        if (attr != NULL) {
 800d2ea:	b955      	cbnz	r5, 800d302 <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 800d2ec:	4629      	mov	r1, r5
 800d2ee:	4620      	mov	r0, r4
 800d2f0:	f001 f89a 	bl	800e428 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 800d2f4:	e7c5      	b.n	800d282 <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800d2f6:	461a      	mov	r2, r3
 800d2f8:	f000 fd39 	bl	800dd6e <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 800d2fc:	4604      	mov	r4, r0
 800d2fe:	2800      	cmp	r0, #0
 800d300:	d0be      	beq.n	800d280 <osSemaphoreNew+0xe>
          name = attr->name;
 800d302:	682d      	ldr	r5, [r5, #0]
 800d304:	e7f2      	b.n	800d2ec <osSemaphoreNew+0x7a>
	...

0800d308 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800d308:	b513      	push	{r0, r1, r4, lr}
 800d30a:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d30c:	b1f8      	cbz	r0, 800d34e <osSemaphoreAcquire+0x46>
 800d30e:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d312:	b1a3      	cbz	r3, 800d33e <osSemaphoreAcquire+0x36>
    if (timeout != 0U) {
 800d314:	b9d9      	cbnz	r1, 800d34e <osSemaphoreAcquire+0x46>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d316:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d318:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d31a:	f001 f835 	bl	800e388 <xQueueReceiveFromISR>
 800d31e:	2801      	cmp	r0, #1
 800d320:	d112      	bne.n	800d348 <osSemaphoreAcquire+0x40>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d322:	9b01      	ldr	r3, [sp, #4]
 800d324:	b913      	cbnz	r3, 800d32c <osSemaphoreAcquire+0x24>
  stat = osOK;
 800d326:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800d328:	b002      	add	sp, #8
 800d32a:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800d32c:	4b0b      	ldr	r3, [pc, #44]	; (800d35c <osSemaphoreAcquire+0x54>)
 800d32e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d332:	601a      	str	r2, [r3, #0]
 800d334:	f3bf 8f4f 	dsb	sy
 800d338:	f3bf 8f6f 	isb	sy
 800d33c:	e7f3      	b.n	800d326 <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800d33e:	f000 ff5f 	bl	800e200 <xQueueSemaphoreTake>
 800d342:	2801      	cmp	r0, #1
 800d344:	d0ef      	beq.n	800d326 <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 800d346:	b92c      	cbnz	r4, 800d354 <osSemaphoreAcquire+0x4c>
        stat = osErrorResource;
 800d348:	f06f 0002 	mvn.w	r0, #2
 800d34c:	e7ec      	b.n	800d328 <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 800d34e:	f06f 0003 	mvn.w	r0, #3
 800d352:	e7e9      	b.n	800d328 <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 800d354:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800d358:	e7e6      	b.n	800d328 <osSemaphoreAcquire+0x20>
 800d35a:	bf00      	nop
 800d35c:	e000ed04 	.word	0xe000ed04

0800d360 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800d360:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d362:	b300      	cbz	r0, 800d3a6 <osSemaphoreRelease+0x46>
 800d364:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d368:	b1a3      	cbz	r3, 800d394 <osSemaphoreRelease+0x34>
    yield = pdFALSE;
 800d36a:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d36c:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800d36e:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d370:	f000 fe52 	bl	800e018 <xQueueGiveFromISR>
 800d374:	2801      	cmp	r0, #1
 800d376:	d113      	bne.n	800d3a0 <osSemaphoreRelease+0x40>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800d378:	9b01      	ldr	r3, [sp, #4]
 800d37a:	b913      	cbnz	r3, 800d382 <osSemaphoreRelease+0x22>
  stat = osOK;
 800d37c:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800d37e:	b002      	add	sp, #8
 800d380:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 800d382:	4b0a      	ldr	r3, [pc, #40]	; (800d3ac <osSemaphoreRelease+0x4c>)
 800d384:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d388:	601a      	str	r2, [r3, #0]
 800d38a:	f3bf 8f4f 	dsb	sy
 800d38e:	f3bf 8f6f 	isb	sy
 800d392:	e7f3      	b.n	800d37c <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d394:	461a      	mov	r2, r3
 800d396:	4619      	mov	r1, r3
 800d398:	f000 fd2a 	bl	800ddf0 <xQueueGenericSend>
 800d39c:	2801      	cmp	r0, #1
 800d39e:	d0ed      	beq.n	800d37c <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 800d3a0:	f06f 0002 	mvn.w	r0, #2
 800d3a4:	e7eb      	b.n	800d37e <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 800d3a6:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800d3aa:	e7e8      	b.n	800d37e <osSemaphoreRelease+0x1e>
 800d3ac:	e000ed04 	.word	0xe000ed04

0800d3b0 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800d3b0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d3b2:	4606      	mov	r6, r0
 800d3b4:	460d      	mov	r5, r1
 800d3b6:	4614      	mov	r4, r2
 800d3b8:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800d3bc:	b11f      	cbz	r7, 800d3c6 <osMessageQueueNew+0x16>
  hQueue = NULL;
 800d3be:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800d3c0:	4628      	mov	r0, r5
 800d3c2:	b003      	add	sp, #12
 800d3c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800d3c6:	2800      	cmp	r0, #0
 800d3c8:	d0f9      	beq.n	800d3be <osMessageQueueNew+0xe>
 800d3ca:	2900      	cmp	r1, #0
 800d3cc:	d0f7      	beq.n	800d3be <osMessageQueueNew+0xe>
    if (attr != NULL) {
 800d3ce:	b1da      	cbz	r2, 800d408 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d3d0:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 800d3d4:	b183      	cbz	r3, 800d3f8 <osMessageQueueNew+0x48>
 800d3d6:	2a4f      	cmp	r2, #79	; 0x4f
 800d3d8:	d9f1      	bls.n	800d3be <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d3da:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d3dc:	2a00      	cmp	r2, #0
 800d3de:	d0ee      	beq.n	800d3be <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d3e0:	6966      	ldr	r6, [r4, #20]
 800d3e2:	4345      	muls	r5, r0
 800d3e4:	42ae      	cmp	r6, r5
 800d3e6:	d3ea      	bcc.n	800d3be <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800d3e8:	9700      	str	r7, [sp, #0]
 800d3ea:	f000 fc4b 	bl	800dc84 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800d3ee:	4605      	mov	r5, r0
 800d3f0:	2800      	cmp	r0, #0
 800d3f2:	d0e4      	beq.n	800d3be <osMessageQueueNew+0xe>
        name = attr->name;
 800d3f4:	6824      	ldr	r4, [r4, #0]
 800d3f6:	e011      	b.n	800d41c <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800d3f8:	2a00      	cmp	r2, #0
 800d3fa:	d1e0      	bne.n	800d3be <osMessageQueueNew+0xe>
 800d3fc:	6923      	ldr	r3, [r4, #16]
 800d3fe:	2b00      	cmp	r3, #0
 800d400:	d1dd      	bne.n	800d3be <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800d402:	6963      	ldr	r3, [r4, #20]
 800d404:	2b00      	cmp	r3, #0
 800d406:	d1da      	bne.n	800d3be <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 800d408:	4629      	mov	r1, r5
 800d40a:	2200      	movs	r2, #0
 800d40c:	4630      	mov	r0, r6
 800d40e:	f000 fc87 	bl	800dd20 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800d412:	4605      	mov	r5, r0
 800d414:	2800      	cmp	r0, #0
 800d416:	d0d2      	beq.n	800d3be <osMessageQueueNew+0xe>
      if (attr != NULL) {
 800d418:	2c00      	cmp	r4, #0
 800d41a:	d1eb      	bne.n	800d3f4 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 800d41c:	4621      	mov	r1, r4
 800d41e:	4628      	mov	r0, r5
 800d420:	f001 f802 	bl	800e428 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800d424:	e7cc      	b.n	800d3c0 <osMessageQueueNew+0x10>
	...

0800d428 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800d428:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d42a:	461c      	mov	r4, r3
 800d42c:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d430:	b1b6      	cbz	r6, 800d460 <osMessageQueuePut+0x38>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d432:	b308      	cbz	r0, 800d478 <osMessageQueuePut+0x50>
 800d434:	b301      	cbz	r1, 800d478 <osMessageQueuePut+0x50>
 800d436:	b9fb      	cbnz	r3, 800d478 <osMessageQueuePut+0x50>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d438:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d43a:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d43c:	f000 fd8a 	bl	800df54 <xQueueGenericSendFromISR>
 800d440:	2801      	cmp	r0, #1
 800d442:	d116      	bne.n	800d472 <osMessageQueuePut+0x4a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d444:	9b01      	ldr	r3, [sp, #4]
 800d446:	b913      	cbnz	r3, 800d44e <osMessageQueuePut+0x26>
  stat = osOK;
 800d448:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800d44a:	b002      	add	sp, #8
 800d44c:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 800d44e:	4b0d      	ldr	r3, [pc, #52]	; (800d484 <osMessageQueuePut+0x5c>)
 800d450:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d454:	601a      	str	r2, [r3, #0]
 800d456:	f3bf 8f4f 	dsb	sy
 800d45a:	f3bf 8f6f 	isb	sy
 800d45e:	e7f3      	b.n	800d448 <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800d460:	b150      	cbz	r0, 800d478 <osMessageQueuePut+0x50>
 800d462:	b149      	cbz	r1, 800d478 <osMessageQueuePut+0x50>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800d464:	4633      	mov	r3, r6
 800d466:	4622      	mov	r2, r4
 800d468:	f000 fcc2 	bl	800ddf0 <xQueueGenericSend>
 800d46c:	2801      	cmp	r0, #1
 800d46e:	d0eb      	beq.n	800d448 <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 800d470:	b92c      	cbnz	r4, 800d47e <osMessageQueuePut+0x56>
          stat = osErrorResource;
 800d472:	f06f 0002 	mvn.w	r0, #2
 800d476:	e7e8      	b.n	800d44a <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 800d478:	f06f 0003 	mvn.w	r0, #3
 800d47c:	e7e5      	b.n	800d44a <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 800d47e:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800d482:	e7e2      	b.n	800d44a <osMessageQueuePut+0x22>
 800d484:	e000ed04 	.word	0xe000ed04

0800d488 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800d488:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d48a:	461c      	mov	r4, r3
 800d48c:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d490:	b1b3      	cbz	r3, 800d4c0 <osMessageQueueGet+0x38>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d492:	b300      	cbz	r0, 800d4d6 <osMessageQueueGet+0x4e>
 800d494:	b1f9      	cbz	r1, 800d4d6 <osMessageQueueGet+0x4e>
 800d496:	b9f4      	cbnz	r4, 800d4d6 <osMessageQueueGet+0x4e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d498:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d49a:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d49c:	f000 ff74 	bl	800e388 <xQueueReceiveFromISR>
 800d4a0:	2801      	cmp	r0, #1
 800d4a2:	d115      	bne.n	800d4d0 <osMessageQueueGet+0x48>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d4a4:	9b01      	ldr	r3, [sp, #4]
 800d4a6:	b913      	cbnz	r3, 800d4ae <osMessageQueueGet+0x26>
  stat = osOK;
 800d4a8:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800d4aa:	b003      	add	sp, #12
 800d4ac:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 800d4ae:	4b0d      	ldr	r3, [pc, #52]	; (800d4e4 <osMessageQueueGet+0x5c>)
 800d4b0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d4b4:	601a      	str	r2, [r3, #0]
 800d4b6:	f3bf 8f4f 	dsb	sy
 800d4ba:	f3bf 8f6f 	isb	sy
 800d4be:	e7f3      	b.n	800d4a8 <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800d4c0:	b148      	cbz	r0, 800d4d6 <osMessageQueueGet+0x4e>
 800d4c2:	b141      	cbz	r1, 800d4d6 <osMessageQueueGet+0x4e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800d4c4:	4622      	mov	r2, r4
 800d4c6:	f000 fdfb 	bl	800e0c0 <xQueueReceive>
 800d4ca:	2801      	cmp	r0, #1
 800d4cc:	d0ec      	beq.n	800d4a8 <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 800d4ce:	b92c      	cbnz	r4, 800d4dc <osMessageQueueGet+0x54>
          stat = osErrorResource;
 800d4d0:	f06f 0002 	mvn.w	r0, #2
 800d4d4:	e7e9      	b.n	800d4aa <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 800d4d6:	f06f 0003 	mvn.w	r0, #3
 800d4da:	e7e6      	b.n	800d4aa <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 800d4dc:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800d4e0:	e7e3      	b.n	800d4aa <osMessageQueueGet+0x22>
 800d4e2:	bf00      	nop
 800d4e4:	e000ed04 	.word	0xe000ed04

0800d4e8 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800d4e8:	4b03      	ldr	r3, [pc, #12]	; (800d4f8 <vApplicationGetIdleTaskMemory+0x10>)
 800d4ea:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800d4ec:	4b03      	ldr	r3, [pc, #12]	; (800d4fc <vApplicationGetIdleTaskMemory+0x14>)
 800d4ee:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800d4f0:	2380      	movs	r3, #128	; 0x80
 800d4f2:	6013      	str	r3, [r2, #0]
}
 800d4f4:	4770      	bx	lr
 800d4f6:	bf00      	nop
 800d4f8:	2000feb0 	.word	0x2000feb0
 800d4fc:	2000fcb0 	.word	0x2000fcb0

0800d500 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800d500:	4b03      	ldr	r3, [pc, #12]	; (800d510 <vApplicationGetTimerTaskMemory+0x10>)
 800d502:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800d504:	4b03      	ldr	r3, [pc, #12]	; (800d514 <vApplicationGetTimerTaskMemory+0x14>)
 800d506:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800d508:	f44f 7380 	mov.w	r3, #256	; 0x100
 800d50c:	6013      	str	r3, [r2, #0]
}
 800d50e:	4770      	bx	lr
 800d510:	20010374 	.word	0x20010374
 800d514:	2000ff74 	.word	0x2000ff74

0800d518 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 800d518:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d51a:	4b0f      	ldr	r3, [pc, #60]	; (800d558 <prvInsertBlockIntoFreeList+0x40>)
 800d51c:	461a      	mov	r2, r3
 800d51e:	681b      	ldr	r3, [r3, #0]
 800d520:	4283      	cmp	r3, r0
 800d522:	d3fb      	bcc.n	800d51c <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800d524:	6854      	ldr	r4, [r2, #4]
 800d526:	1911      	adds	r1, r2, r4
 800d528:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d52a:	bf01      	itttt	eq
 800d52c:	6841      	ldreq	r1, [r0, #4]
 800d52e:	4610      	moveq	r0, r2
 800d530:	1909      	addeq	r1, r1, r4
 800d532:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d534:	6844      	ldr	r4, [r0, #4]
 800d536:	1901      	adds	r1, r0, r4
 800d538:	428b      	cmp	r3, r1
 800d53a:	d107      	bne.n	800d54c <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800d53c:	4907      	ldr	r1, [pc, #28]	; (800d55c <prvInsertBlockIntoFreeList+0x44>)
 800d53e:	6809      	ldr	r1, [r1, #0]
 800d540:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d542:	bf1f      	itttt	ne
 800d544:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d546:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d548:	1909      	addne	r1, r1, r4
 800d54a:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800d54c:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 800d54e:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800d550:	bf18      	it	ne
 800d552:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800d554:	bd10      	pop	{r4, pc}
 800d556:	bf00      	nop
 800d558:	2002044c 	.word	0x2002044c
 800d55c:	20010434 	.word	0x20010434

0800d560 <pvPortMalloc>:
{
 800d560:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d564:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800d566:	f001 f9a9 	bl	800e8bc <vTaskSuspendAll>
		if( pxEnd == NULL )
 800d56a:	4b3e      	ldr	r3, [pc, #248]	; (800d664 <pvPortMalloc+0x104>)
 800d56c:	483e      	ldr	r0, [pc, #248]	; (800d668 <pvPortMalloc+0x108>)
 800d56e:	681a      	ldr	r2, [r3, #0]
 800d570:	469c      	mov	ip, r3
 800d572:	b9d2      	cbnz	r2, 800d5aa <pvPortMalloc+0x4a>
	uxAddress = ( size_t ) ucHeap;
 800d574:	4a3d      	ldr	r2, [pc, #244]	; (800d66c <pvPortMalloc+0x10c>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d576:	4b3e      	ldr	r3, [pc, #248]	; (800d670 <pvPortMalloc+0x110>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800d578:	0755      	lsls	r5, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800d57a:	bf1c      	itt	ne
 800d57c:	3207      	addne	r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d57e:	f022 0207 	bicne.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 800d582:	2100      	movs	r1, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d584:	601a      	str	r2, [r3, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800d586:	6059      	str	r1, [r3, #4]
	uxAddress -= xHeapStructSize;
 800d588:	4b3a      	ldr	r3, [pc, #232]	; (800d674 <pvPortMalloc+0x114>)
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d58a:	f023 0307 	bic.w	r3, r3, #7
	pxEnd->pxNextFreeBlock = NULL;
 800d58e:	e9c3 1100 	strd	r1, r1, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800d592:	1a99      	subs	r1, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800d594:	e9c2 3100 	strd	r3, r1, [r2]
	pxEnd = ( void * ) uxAddress;
 800d598:	f8cc 3000 	str.w	r3, [ip]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d59c:	4b36      	ldr	r3, [pc, #216]	; (800d678 <pvPortMalloc+0x118>)
 800d59e:	6019      	str	r1, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d5a0:	4b36      	ldr	r3, [pc, #216]	; (800d67c <pvPortMalloc+0x11c>)
 800d5a2:	6019      	str	r1, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d5a4:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 800d5a8:	6003      	str	r3, [r0, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800d5aa:	6807      	ldr	r7, [r0, #0]
 800d5ac:	4227      	tst	r7, r4
 800d5ae:	d153      	bne.n	800d658 <pvPortMalloc+0xf8>
			if( xWantedSize > 0 )
 800d5b0:	2c00      	cmp	r4, #0
 800d5b2:	d044      	beq.n	800d63e <pvPortMalloc+0xde>
				xWantedSize += xHeapStructSize;
 800d5b4:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800d5b8:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800d5ba:	bf1c      	itt	ne
 800d5bc:	f023 0307 	bicne.w	r3, r3, #7
 800d5c0:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800d5c2:	2b00      	cmp	r3, #0
 800d5c4:	d048      	beq.n	800d658 <pvPortMalloc+0xf8>
 800d5c6:	4a2d      	ldr	r2, [pc, #180]	; (800d67c <pvPortMalloc+0x11c>)
 800d5c8:	6816      	ldr	r6, [r2, #0]
 800d5ca:	429e      	cmp	r6, r3
 800d5cc:	4690      	mov	r8, r2
 800d5ce:	d343      	bcc.n	800d658 <pvPortMalloc+0xf8>
				pxBlock = xStart.pxNextFreeBlock;
 800d5d0:	4a27      	ldr	r2, [pc, #156]	; (800d670 <pvPortMalloc+0x110>)
 800d5d2:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800d5d4:	6869      	ldr	r1, [r5, #4]
 800d5d6:	4299      	cmp	r1, r3
 800d5d8:	d201      	bcs.n	800d5de <pvPortMalloc+0x7e>
 800d5da:	6828      	ldr	r0, [r5, #0]
 800d5dc:	b9a8      	cbnz	r0, 800d60a <pvPortMalloc+0xaa>
				if( pxBlock != pxEnd )
 800d5de:	f8dc 0000 	ldr.w	r0, [ip]
 800d5e2:	42a8      	cmp	r0, r5
 800d5e4:	d038      	beq.n	800d658 <pvPortMalloc+0xf8>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d5e6:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800d5e8:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800d5ea:	6814      	ldr	r4, [r2, #0]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800d5ec:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d5ee:	2910      	cmp	r1, #16
 800d5f0:	d912      	bls.n	800d618 <pvPortMalloc+0xb8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800d5f2:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800d5f4:	0742      	lsls	r2, r0, #29
 800d5f6:	d00b      	beq.n	800d610 <pvPortMalloc+0xb0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800d5f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d5fc:	f383 8811 	msr	BASEPRI, r3
 800d600:	f3bf 8f6f 	isb	sy
 800d604:	f3bf 8f4f 	dsb	sy
 800d608:	e7fe      	b.n	800d608 <pvPortMalloc+0xa8>
 800d60a:	462a      	mov	r2, r5
 800d60c:	4605      	mov	r5, r0
 800d60e:	e7e1      	b.n	800d5d4 <pvPortMalloc+0x74>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800d610:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800d612:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 800d614:	f7ff ff80 	bl	800d518 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d618:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d61a:	4917      	ldr	r1, [pc, #92]	; (800d678 <pvPortMalloc+0x118>)
					xNumberOfSuccessfulAllocations++;
 800d61c:	4a18      	ldr	r2, [pc, #96]	; (800d680 <pvPortMalloc+0x120>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d61e:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d620:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800d622:	431f      	orrs	r7, r3
					pxBlock->pxNextFreeBlock = NULL;
 800d624:	2300      	movs	r3, #0
 800d626:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 800d628:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d62a:	f8c8 6000 	str.w	r6, [r8]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d62e:	4286      	cmp	r6, r0
					xNumberOfSuccessfulAllocations++;
 800d630:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800d634:	bf38      	it	cc
 800d636:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800d638:	3408      	adds	r4, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800d63a:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 800d63c:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800d63e:	f001 f9e1 	bl	800ea04 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800d642:	0763      	lsls	r3, r4, #29
 800d644:	d00a      	beq.n	800d65c <pvPortMalloc+0xfc>
 800d646:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d64a:	f383 8811 	msr	BASEPRI, r3
 800d64e:	f3bf 8f6f 	isb	sy
 800d652:	f3bf 8f4f 	dsb	sy
 800d656:	e7fe      	b.n	800d656 <pvPortMalloc+0xf6>
void *pvReturn = NULL;
 800d658:	2400      	movs	r4, #0
 800d65a:	e7f0      	b.n	800d63e <pvPortMalloc+0xde>
}
 800d65c:	4620      	mov	r0, r4
 800d65e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d662:	bf00      	nop
 800d664:	20010434 	.word	0x20010434
 800d668:	20020438 	.word	0x20020438
 800d66c:	20010438 	.word	0x20010438
 800d670:	2002044c 	.word	0x2002044c
 800d674:	2002042f 	.word	0x2002042f
 800d678:	20020440 	.word	0x20020440
 800d67c:	2002043c 	.word	0x2002043c
 800d680:	20020444 	.word	0x20020444

0800d684 <vPortFree>:
{
 800d684:	b510      	push	{r4, lr}
	if( pv != NULL )
 800d686:	4604      	mov	r4, r0
 800d688:	b390      	cbz	r0, 800d6f0 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d68a:	4a1a      	ldr	r2, [pc, #104]	; (800d6f4 <vPortFree+0x70>)
 800d68c:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800d690:	6812      	ldr	r2, [r2, #0]
 800d692:	4213      	tst	r3, r2
 800d694:	d108      	bne.n	800d6a8 <vPortFree+0x24>
 800d696:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d69a:	f383 8811 	msr	BASEPRI, r3
 800d69e:	f3bf 8f6f 	isb	sy
 800d6a2:	f3bf 8f4f 	dsb	sy
 800d6a6:	e7fe      	b.n	800d6a6 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800d6a8:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800d6ac:	b141      	cbz	r1, 800d6c0 <vPortFree+0x3c>
 800d6ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6b2:	f383 8811 	msr	BASEPRI, r3
 800d6b6:	f3bf 8f6f 	isb	sy
 800d6ba:	f3bf 8f4f 	dsb	sy
 800d6be:	e7fe      	b.n	800d6be <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d6c0:	ea23 0302 	bic.w	r3, r3, r2
 800d6c4:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 800d6c8:	f001 f8f8 	bl	800e8bc <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d6cc:	4a0a      	ldr	r2, [pc, #40]	; (800d6f8 <vPortFree+0x74>)
 800d6ce:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800d6d2:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800d6d4:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d6d8:	440b      	add	r3, r1
 800d6da:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800d6dc:	f7ff ff1c 	bl	800d518 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 800d6e0:	4a06      	ldr	r2, [pc, #24]	; (800d6fc <vPortFree+0x78>)
 800d6e2:	6813      	ldr	r3, [r2, #0]
}
 800d6e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 800d6e8:	3301      	adds	r3, #1
 800d6ea:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 800d6ec:	f001 b98a 	b.w	800ea04 <xTaskResumeAll>
}
 800d6f0:	bd10      	pop	{r4, pc}
 800d6f2:	bf00      	nop
 800d6f4:	20020438 	.word	0x20020438
 800d6f8:	2002043c 	.word	0x2002043c
 800d6fc:	20020448 	.word	0x20020448

0800d700 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d700:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d704:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d708:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d70c:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d70e:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d710:	2300      	movs	r3, #0
 800d712:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800d714:	4770      	bx	lr

0800d716 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800d716:	2300      	movs	r3, #0
 800d718:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800d71a:	4770      	bx	lr

0800d71c <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800d71c:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800d71e:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800d720:	689a      	ldr	r2, [r3, #8]
 800d722:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d724:	689a      	ldr	r2, [r3, #8]
 800d726:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800d728:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d72a:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800d72c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800d72e:	3301      	adds	r3, #1
 800d730:	6003      	str	r3, [r0, #0]
}
 800d732:	4770      	bx	lr

0800d734 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800d734:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800d736:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800d738:	1c63      	adds	r3, r4, #1
 800d73a:	d10a      	bne.n	800d752 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800d73c:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800d73e:	685a      	ldr	r2, [r3, #4]
 800d740:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800d742:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800d744:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800d746:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d748:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800d74a:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800d74c:	3301      	adds	r3, #1
 800d74e:	6003      	str	r3, [r0, #0]
}
 800d750:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800d752:	f100 0208 	add.w	r2, r0, #8
 800d756:	4613      	mov	r3, r2
 800d758:	6852      	ldr	r2, [r2, #4]
 800d75a:	6815      	ldr	r5, [r2, #0]
 800d75c:	42a5      	cmp	r5, r4
 800d75e:	d9fa      	bls.n	800d756 <vListInsert+0x22>
 800d760:	e7ed      	b.n	800d73e <vListInsert+0xa>

0800d762 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d762:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800d766:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d768:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800d76a:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800d76c:	6859      	ldr	r1, [r3, #4]
 800d76e:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800d770:	bf08      	it	eq
 800d772:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800d774:	2200      	movs	r2, #0
 800d776:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800d778:	681a      	ldr	r2, [r3, #0]
 800d77a:	3a01      	subs	r2, #1
 800d77c:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800d77e:	6818      	ldr	r0, [r3, #0]
}
 800d780:	4770      	bx	lr
	...

0800d784 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800d784:	4808      	ldr	r0, [pc, #32]	; (800d7a8 <prvPortStartFirstTask+0x24>)
 800d786:	6800      	ldr	r0, [r0, #0]
 800d788:	6800      	ldr	r0, [r0, #0]
 800d78a:	f380 8808 	msr	MSP, r0
 800d78e:	f04f 0000 	mov.w	r0, #0
 800d792:	f380 8814 	msr	CONTROL, r0
 800d796:	b662      	cpsie	i
 800d798:	b661      	cpsie	f
 800d79a:	f3bf 8f4f 	dsb	sy
 800d79e:	f3bf 8f6f 	isb	sy
 800d7a2:	df00      	svc	0
 800d7a4:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800d7a6:	0000      	.short	0x0000
 800d7a8:	e000ed08 	.word	0xe000ed08

0800d7ac <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800d7ac:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800d7bc <vPortEnableVFP+0x10>
 800d7b0:	6801      	ldr	r1, [r0, #0]
 800d7b2:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800d7b6:	6001      	str	r1, [r0, #0]
 800d7b8:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800d7ba:	0000      	.short	0x0000
 800d7bc:	e000ed88 	.word	0xe000ed88

0800d7c0 <prvTaskExitError>:
{
 800d7c0:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800d7c2:	2300      	movs	r3, #0
 800d7c4:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800d7c6:	4b0d      	ldr	r3, [pc, #52]	; (800d7fc <prvTaskExitError+0x3c>)
 800d7c8:	681b      	ldr	r3, [r3, #0]
 800d7ca:	3301      	adds	r3, #1
 800d7cc:	d008      	beq.n	800d7e0 <prvTaskExitError+0x20>
 800d7ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d7d2:	f383 8811 	msr	BASEPRI, r3
 800d7d6:	f3bf 8f6f 	isb	sy
 800d7da:	f3bf 8f4f 	dsb	sy
 800d7de:	e7fe      	b.n	800d7de <prvTaskExitError+0x1e>
 800d7e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d7e4:	f383 8811 	msr	BASEPRI, r3
 800d7e8:	f3bf 8f6f 	isb	sy
 800d7ec:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d7f0:	9b01      	ldr	r3, [sp, #4]
 800d7f2:	2b00      	cmp	r3, #0
 800d7f4:	d0fc      	beq.n	800d7f0 <prvTaskExitError+0x30>
}
 800d7f6:	b002      	add	sp, #8
 800d7f8:	4770      	bx	lr
 800d7fa:	bf00      	nop
 800d7fc:	20000060 	.word	0x20000060

0800d800 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d800:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800d804:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d808:	4b07      	ldr	r3, [pc, #28]	; (800d828 <pxPortInitialiseStack+0x28>)
 800d80a:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800d80e:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d812:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800d816:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800d81a:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d81e:	f840 3c24 	str.w	r3, [r0, #-36]
}
 800d822:	3844      	subs	r0, #68	; 0x44
 800d824:	4770      	bx	lr
 800d826:	bf00      	nop
 800d828:	0800d7c1 	.word	0x0800d7c1
 800d82c:	00000000 	.word	0x00000000

0800d830 <SVC_Handler>:
	__asm volatile (
 800d830:	4b07      	ldr	r3, [pc, #28]	; (800d850 <pxCurrentTCBConst2>)
 800d832:	6819      	ldr	r1, [r3, #0]
 800d834:	6808      	ldr	r0, [r1, #0]
 800d836:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d83a:	f380 8809 	msr	PSP, r0
 800d83e:	f3bf 8f6f 	isb	sy
 800d842:	f04f 0000 	mov.w	r0, #0
 800d846:	f380 8811 	msr	BASEPRI, r0
 800d84a:	4770      	bx	lr
 800d84c:	f3af 8000 	nop.w

0800d850 <pxCurrentTCBConst2>:
 800d850:	2002045c 	.word	0x2002045c

0800d854 <vPortEnterCritical>:
 800d854:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d858:	f383 8811 	msr	BASEPRI, r3
 800d85c:	f3bf 8f6f 	isb	sy
 800d860:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800d864:	4a0a      	ldr	r2, [pc, #40]	; (800d890 <vPortEnterCritical+0x3c>)
 800d866:	6813      	ldr	r3, [r2, #0]
 800d868:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800d86a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800d86c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800d86e:	d10d      	bne.n	800d88c <vPortEnterCritical+0x38>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800d870:	4b08      	ldr	r3, [pc, #32]	; (800d894 <vPortEnterCritical+0x40>)
 800d872:	681b      	ldr	r3, [r3, #0]
 800d874:	f013 0fff 	tst.w	r3, #255	; 0xff
 800d878:	d008      	beq.n	800d88c <vPortEnterCritical+0x38>
 800d87a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d87e:	f383 8811 	msr	BASEPRI, r3
 800d882:	f3bf 8f6f 	isb	sy
 800d886:	f3bf 8f4f 	dsb	sy
 800d88a:	e7fe      	b.n	800d88a <vPortEnterCritical+0x36>
}
 800d88c:	4770      	bx	lr
 800d88e:	bf00      	nop
 800d890:	20000060 	.word	0x20000060
 800d894:	e000ed04 	.word	0xe000ed04

0800d898 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800d898:	4a08      	ldr	r2, [pc, #32]	; (800d8bc <vPortExitCritical+0x24>)
 800d89a:	6813      	ldr	r3, [r2, #0]
 800d89c:	b943      	cbnz	r3, 800d8b0 <vPortExitCritical+0x18>
 800d89e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8a2:	f383 8811 	msr	BASEPRI, r3
 800d8a6:	f3bf 8f6f 	isb	sy
 800d8aa:	f3bf 8f4f 	dsb	sy
 800d8ae:	e7fe      	b.n	800d8ae <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800d8b0:	3b01      	subs	r3, #1
 800d8b2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800d8b4:	b90b      	cbnz	r3, 800d8ba <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800d8b6:	f383 8811 	msr	BASEPRI, r3
}
 800d8ba:	4770      	bx	lr
 800d8bc:	20000060 	.word	0x20000060

0800d8c0 <PendSV_Handler>:
	__asm volatile
 800d8c0:	f3ef 8009 	mrs	r0, PSP
 800d8c4:	f3bf 8f6f 	isb	sy
 800d8c8:	4b15      	ldr	r3, [pc, #84]	; (800d920 <pxCurrentTCBConst>)
 800d8ca:	681a      	ldr	r2, [r3, #0]
 800d8cc:	f01e 0f10 	tst.w	lr, #16
 800d8d0:	bf08      	it	eq
 800d8d2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800d8d6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d8da:	6010      	str	r0, [r2, #0]
 800d8dc:	e92d 0009 	stmdb	sp!, {r0, r3}
 800d8e0:	f04f 0050 	mov.w	r0, #80	; 0x50
 800d8e4:	f380 8811 	msr	BASEPRI, r0
 800d8e8:	f3bf 8f4f 	dsb	sy
 800d8ec:	f3bf 8f6f 	isb	sy
 800d8f0:	f001 f98c 	bl	800ec0c <vTaskSwitchContext>
 800d8f4:	f04f 0000 	mov.w	r0, #0
 800d8f8:	f380 8811 	msr	BASEPRI, r0
 800d8fc:	bc09      	pop	{r0, r3}
 800d8fe:	6819      	ldr	r1, [r3, #0]
 800d900:	6808      	ldr	r0, [r1, #0]
 800d902:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d906:	f01e 0f10 	tst.w	lr, #16
 800d90a:	bf08      	it	eq
 800d90c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800d910:	f380 8809 	msr	PSP, r0
 800d914:	f3bf 8f6f 	isb	sy
 800d918:	4770      	bx	lr
 800d91a:	bf00      	nop
 800d91c:	f3af 8000 	nop.w

0800d920 <pxCurrentTCBConst>:
 800d920:	2002045c 	.word	0x2002045c

0800d924 <xPortSysTickHandler>:
{
 800d924:	b508      	push	{r3, lr}
	__asm volatile
 800d926:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d92a:	f383 8811 	msr	BASEPRI, r3
 800d92e:	f3bf 8f6f 	isb	sy
 800d932:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800d936:	f000 ffcf 	bl	800e8d8 <xTaskIncrementTick>
 800d93a:	b118      	cbz	r0, 800d944 <xPortSysTickHandler+0x20>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800d93c:	4b03      	ldr	r3, [pc, #12]	; (800d94c <xPortSysTickHandler+0x28>)
 800d93e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d942:	601a      	str	r2, [r3, #0]
	__asm volatile
 800d944:	2300      	movs	r3, #0
 800d946:	f383 8811 	msr	BASEPRI, r3
}
 800d94a:	bd08      	pop	{r3, pc}
 800d94c:	e000ed04 	.word	0xe000ed04

0800d950 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d950:	4a08      	ldr	r2, [pc, #32]	; (800d974 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800d952:	4909      	ldr	r1, [pc, #36]	; (800d978 <vPortSetupTimerInterrupt+0x28>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d954:	2300      	movs	r3, #0
 800d956:	6013      	str	r3, [r2, #0]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800d958:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d95a:	4b08      	ldr	r3, [pc, #32]	; (800d97c <vPortSetupTimerInterrupt+0x2c>)
 800d95c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800d960:	681b      	ldr	r3, [r3, #0]
 800d962:	fbb3 f3f1 	udiv	r3, r3, r1
 800d966:	4906      	ldr	r1, [pc, #24]	; (800d980 <vPortSetupTimerInterrupt+0x30>)
 800d968:	3b01      	subs	r3, #1
 800d96a:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d96c:	2307      	movs	r3, #7
 800d96e:	6013      	str	r3, [r2, #0]
}
 800d970:	4770      	bx	lr
 800d972:	bf00      	nop
 800d974:	e000e010 	.word	0xe000e010
 800d978:	e000e018 	.word	0xe000e018
 800d97c:	20000054 	.word	0x20000054
 800d980:	e000e014 	.word	0xe000e014

0800d984 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d984:	4b38      	ldr	r3, [pc, #224]	; (800da68 <xPortStartScheduler+0xe4>)
 800d986:	4a39      	ldr	r2, [pc, #228]	; (800da6c <xPortStartScheduler+0xe8>)
{
 800d988:	b513      	push	{r0, r1, r4, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d98a:	6819      	ldr	r1, [r3, #0]
 800d98c:	4291      	cmp	r1, r2
 800d98e:	d108      	bne.n	800d9a2 <xPortStartScheduler+0x1e>
	__asm volatile
 800d990:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d994:	f383 8811 	msr	BASEPRI, r3
 800d998:	f3bf 8f6f 	isb	sy
 800d99c:	f3bf 8f4f 	dsb	sy
 800d9a0:	e7fe      	b.n	800d9a0 <xPortStartScheduler+0x1c>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d9a2:	681a      	ldr	r2, [r3, #0]
 800d9a4:	4b32      	ldr	r3, [pc, #200]	; (800da70 <xPortStartScheduler+0xec>)
 800d9a6:	429a      	cmp	r2, r3
 800d9a8:	d108      	bne.n	800d9bc <xPortStartScheduler+0x38>
 800d9aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d9ae:	f383 8811 	msr	BASEPRI, r3
 800d9b2:	f3bf 8f6f 	isb	sy
 800d9b6:	f3bf 8f4f 	dsb	sy
 800d9ba:	e7fe      	b.n	800d9ba <xPortStartScheduler+0x36>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d9bc:	4b2d      	ldr	r3, [pc, #180]	; (800da74 <xPortStartScheduler+0xf0>)
 800d9be:	781a      	ldrb	r2, [r3, #0]
 800d9c0:	b2d2      	uxtb	r2, r2
 800d9c2:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d9c4:	22ff      	movs	r2, #255	; 0xff
 800d9c6:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800d9c8:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d9ca:	4a2b      	ldr	r2, [pc, #172]	; (800da78 <xPortStartScheduler+0xf4>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800d9cc:	b2db      	uxtb	r3, r3
 800d9ce:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d9d2:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800d9d6:	f003 0350 	and.w	r3, r3, #80	; 0x50
 800d9da:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d9dc:	4a27      	ldr	r2, [pc, #156]	; (800da7c <xPortStartScheduler+0xf8>)
 800d9de:	2307      	movs	r3, #7
 800d9e0:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d9e2:	2100      	movs	r1, #0
 800d9e4:	f89d 0003 	ldrb.w	r0, [sp, #3]
 800d9e8:	0600      	lsls	r0, r0, #24
 800d9ea:	f103 34ff 	add.w	r4, r3, #4294967295
 800d9ee:	d40c      	bmi.n	800da0a <xPortStartScheduler+0x86>
 800d9f0:	b111      	cbz	r1, 800d9f8 <xPortStartScheduler+0x74>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800d9f2:	2b03      	cmp	r3, #3
 800d9f4:	6013      	str	r3, [r2, #0]
 800d9f6:	d011      	beq.n	800da1c <xPortStartScheduler+0x98>
 800d9f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d9fc:	f383 8811 	msr	BASEPRI, r3
 800da00:	f3bf 8f6f 	isb	sy
 800da04:	f3bf 8f4f 	dsb	sy
 800da08:	e7fe      	b.n	800da08 <xPortStartScheduler+0x84>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800da0a:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800da0e:	005b      	lsls	r3, r3, #1
 800da10:	b2db      	uxtb	r3, r3
 800da12:	f88d 3003 	strb.w	r3, [sp, #3]
 800da16:	2101      	movs	r1, #1
 800da18:	4623      	mov	r3, r4
 800da1a:	e7e3      	b.n	800d9e4 <xPortStartScheduler+0x60>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800da1c:	f44f 7340 	mov.w	r3, #768	; 0x300
 800da20:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800da22:	9b01      	ldr	r3, [sp, #4]
 800da24:	4a13      	ldr	r2, [pc, #76]	; (800da74 <xPortStartScheduler+0xf0>)
 800da26:	b2db      	uxtb	r3, r3
 800da28:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800da2a:	4b15      	ldr	r3, [pc, #84]	; (800da80 <xPortStartScheduler+0xfc>)
 800da2c:	681a      	ldr	r2, [r3, #0]
 800da2e:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800da32:	601a      	str	r2, [r3, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800da34:	681a      	ldr	r2, [r3, #0]
 800da36:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
 800da3a:	601a      	str	r2, [r3, #0]
	vPortSetupTimerInterrupt();
 800da3c:	f7ff ff88 	bl	800d950 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800da40:	4b10      	ldr	r3, [pc, #64]	; (800da84 <xPortStartScheduler+0x100>)
 800da42:	2400      	movs	r4, #0
 800da44:	601c      	str	r4, [r3, #0]
	vPortEnableVFP();
 800da46:	f7ff feb1 	bl	800d7ac <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800da4a:	4a0f      	ldr	r2, [pc, #60]	; (800da88 <xPortStartScheduler+0x104>)
 800da4c:	6813      	ldr	r3, [r2, #0]
 800da4e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800da52:	6013      	str	r3, [r2, #0]
	prvPortStartFirstTask();
 800da54:	f7ff fe96 	bl	800d784 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800da58:	f001 f8d8 	bl	800ec0c <vTaskSwitchContext>
	prvTaskExitError();
 800da5c:	f7ff feb0 	bl	800d7c0 <prvTaskExitError>
}
 800da60:	4620      	mov	r0, r4
 800da62:	b002      	add	sp, #8
 800da64:	bd10      	pop	{r4, pc}
 800da66:	bf00      	nop
 800da68:	e000ed00 	.word	0xe000ed00
 800da6c:	410fc271 	.word	0x410fc271
 800da70:	410fc270 	.word	0x410fc270
 800da74:	e000e400 	.word	0xe000e400
 800da78:	20020454 	.word	0x20020454
 800da7c:	20020458 	.word	0x20020458
 800da80:	e000ed20 	.word	0xe000ed20
 800da84:	20000060 	.word	0x20000060
 800da88:	e000ef34 	.word	0xe000ef34

0800da8c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800da8c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800da90:	2b0f      	cmp	r3, #15
 800da92:	d90e      	bls.n	800dab2 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800da94:	4a10      	ldr	r2, [pc, #64]	; (800dad8 <vPortValidateInterruptPriority+0x4c>)
 800da96:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800da98:	4a10      	ldr	r2, [pc, #64]	; (800dadc <vPortValidateInterruptPriority+0x50>)
 800da9a:	7812      	ldrb	r2, [r2, #0]
 800da9c:	429a      	cmp	r2, r3
 800da9e:	d908      	bls.n	800dab2 <vPortValidateInterruptPriority+0x26>
 800daa0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800daa4:	f383 8811 	msr	BASEPRI, r3
 800daa8:	f3bf 8f6f 	isb	sy
 800daac:	f3bf 8f4f 	dsb	sy
 800dab0:	e7fe      	b.n	800dab0 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800dab2:	4b0b      	ldr	r3, [pc, #44]	; (800dae0 <vPortValidateInterruptPriority+0x54>)
 800dab4:	4a0b      	ldr	r2, [pc, #44]	; (800dae4 <vPortValidateInterruptPriority+0x58>)
 800dab6:	681b      	ldr	r3, [r3, #0]
 800dab8:	6812      	ldr	r2, [r2, #0]
 800daba:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800dabe:	4293      	cmp	r3, r2
 800dac0:	d908      	bls.n	800dad4 <vPortValidateInterruptPriority+0x48>
 800dac2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dac6:	f383 8811 	msr	BASEPRI, r3
 800daca:	f3bf 8f6f 	isb	sy
 800dace:	f3bf 8f4f 	dsb	sy
 800dad2:	e7fe      	b.n	800dad2 <vPortValidateInterruptPriority+0x46>
	}
 800dad4:	4770      	bx	lr
 800dad6:	bf00      	nop
 800dad8:	e000e3f0 	.word	0xe000e3f0
 800dadc:	20020454 	.word	0x20020454
 800dae0:	e000ed0c 	.word	0xe000ed0c
 800dae4:	20020458 	.word	0x20020458

0800dae8 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800dae8:	b510      	push	{r4, lr}
 800daea:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800daec:	f7ff feb2 	bl	800d854 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800daf0:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800daf2:	f7ff fed1 	bl	800d898 <vPortExitCritical>

	return xReturn;
}
 800daf6:	fab4 f084 	clz	r0, r4
 800dafa:	0940      	lsrs	r0, r0, #5
 800dafc:	bd10      	pop	{r4, pc}

0800dafe <prvCopyDataToQueue>:
{
 800dafe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800db00:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800db02:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800db04:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 800db06:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800db08:	b952      	cbnz	r2, 800db20 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800db0a:	6807      	ldr	r7, [r0, #0]
 800db0c:	bb47      	cbnz	r7, 800db60 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800db0e:	6880      	ldr	r0, [r0, #8]
 800db10:	f001 f9e2 	bl	800eed8 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800db14:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800db16:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800db18:	3601      	adds	r6, #1
 800db1a:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800db1c:	4628      	mov	r0, r5
 800db1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800db20:	b965      	cbnz	r5, 800db3c <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800db22:	6840      	ldr	r0, [r0, #4]
 800db24:	f016 ff20 	bl	8024968 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800db28:	6863      	ldr	r3, [r4, #4]
 800db2a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800db2c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800db2e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800db30:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800db32:	4293      	cmp	r3, r2
 800db34:	d3f0      	bcc.n	800db18 <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800db36:	6823      	ldr	r3, [r4, #0]
 800db38:	6063      	str	r3, [r4, #4]
 800db3a:	e7ed      	b.n	800db18 <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800db3c:	68c0      	ldr	r0, [r0, #12]
 800db3e:	f016 ff13 	bl	8024968 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800db42:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800db44:	68e3      	ldr	r3, [r4, #12]
 800db46:	4251      	negs	r1, r2
 800db48:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800db4a:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800db4c:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800db4e:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800db50:	bf3e      	ittt	cc
 800db52:	68a3      	ldrcc	r3, [r4, #8]
 800db54:	185b      	addcc	r3, r3, r1
 800db56:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800db58:	2d02      	cmp	r5, #2
 800db5a:	d101      	bne.n	800db60 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800db5c:	b116      	cbz	r6, 800db64 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 800db5e:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 800db60:	2500      	movs	r5, #0
 800db62:	e7d9      	b.n	800db18 <prvCopyDataToQueue+0x1a>
 800db64:	4635      	mov	r5, r6
 800db66:	e7d7      	b.n	800db18 <prvCopyDataToQueue+0x1a>

0800db68 <prvCopyDataFromQueue>:
{
 800db68:	4603      	mov	r3, r0
 800db6a:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800db6c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 800db6e:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800db70:	b16a      	cbz	r2, 800db8e <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800db72:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800db74:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800db76:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800db78:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800db7a:	bf28      	it	cs
 800db7c:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800db7e:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800db80:	bf28      	it	cs
 800db82:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800db84:	68d9      	ldr	r1, [r3, #12]
}
 800db86:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800db8a:	f016 beed 	b.w	8024968 <memcpy>
}
 800db8e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800db92:	4770      	bx	lr

0800db94 <prvUnlockQueue>:
{
 800db94:	b570      	push	{r4, r5, r6, lr}
 800db96:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800db98:	f7ff fe5c 	bl	800d854 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800db9c:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dba0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 800dba4:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dba6:	2d00      	cmp	r5, #0
 800dba8:	dc14      	bgt.n	800dbd4 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800dbaa:	23ff      	movs	r3, #255	; 0xff
 800dbac:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dbb0:	f7ff fe72 	bl	800d898 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dbb4:	f7ff fe4e 	bl	800d854 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dbb8:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dbbc:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 800dbc0:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dbc2:	2d00      	cmp	r5, #0
 800dbc4:	dc12      	bgt.n	800dbec <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 800dbc6:	23ff      	movs	r3, #255	; 0xff
 800dbc8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 800dbcc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800dbd0:	f7ff be62 	b.w	800d898 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dbd4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800dbd6:	2b00      	cmp	r3, #0
 800dbd8:	d0e7      	beq.n	800dbaa <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dbda:	4630      	mov	r0, r6
 800dbdc:	f001 f898 	bl	800ed10 <xTaskRemoveFromEventList>
 800dbe0:	b108      	cbz	r0, 800dbe6 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 800dbe2:	f001 f921 	bl	800ee28 <vTaskMissedYield>
			--cTxLock;
 800dbe6:	3d01      	subs	r5, #1
 800dbe8:	b26d      	sxtb	r5, r5
 800dbea:	e7dc      	b.n	800dba6 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dbec:	6923      	ldr	r3, [r4, #16]
 800dbee:	2b00      	cmp	r3, #0
 800dbf0:	d0e9      	beq.n	800dbc6 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dbf2:	4630      	mov	r0, r6
 800dbf4:	f001 f88c 	bl	800ed10 <xTaskRemoveFromEventList>
 800dbf8:	b108      	cbz	r0, 800dbfe <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800dbfa:	f001 f915 	bl	800ee28 <vTaskMissedYield>
				--cRxLock;
 800dbfe:	3d01      	subs	r5, #1
 800dc00:	b26d      	sxtb	r5, r5
 800dc02:	e7de      	b.n	800dbc2 <prvUnlockQueue+0x2e>

0800dc04 <xQueueGenericReset>:
{
 800dc04:	b538      	push	{r3, r4, r5, lr}
 800dc06:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800dc08:	4604      	mov	r4, r0
 800dc0a:	b940      	cbnz	r0, 800dc1e <xQueueGenericReset+0x1a>
 800dc0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc10:	f383 8811 	msr	BASEPRI, r3
 800dc14:	f3bf 8f6f 	isb	sy
 800dc18:	f3bf 8f4f 	dsb	sy
 800dc1c:	e7fe      	b.n	800dc1c <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800dc1e:	f7ff fe19 	bl	800d854 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dc22:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800dc26:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800dc28:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dc2a:	434b      	muls	r3, r1
 800dc2c:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dc2e:	1a5b      	subs	r3, r3, r1
 800dc30:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dc32:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dc34:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800dc36:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800dc38:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800dc3a:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800dc3c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 800dc40:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 800dc44:	b995      	cbnz	r5, 800dc6c <xQueueGenericReset+0x68>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dc46:	6923      	ldr	r3, [r4, #16]
 800dc48:	b163      	cbz	r3, 800dc64 <xQueueGenericReset+0x60>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dc4a:	f104 0010 	add.w	r0, r4, #16
 800dc4e:	f001 f85f 	bl	800ed10 <xTaskRemoveFromEventList>
 800dc52:	b138      	cbz	r0, 800dc64 <xQueueGenericReset+0x60>
					queueYIELD_IF_USING_PREEMPTION();
 800dc54:	4b0a      	ldr	r3, [pc, #40]	; (800dc80 <xQueueGenericReset+0x7c>)
 800dc56:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dc5a:	601a      	str	r2, [r3, #0]
 800dc5c:	f3bf 8f4f 	dsb	sy
 800dc60:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800dc64:	f7ff fe18 	bl	800d898 <vPortExitCritical>
}
 800dc68:	2001      	movs	r0, #1
 800dc6a:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800dc6c:	f104 0010 	add.w	r0, r4, #16
 800dc70:	f7ff fd46 	bl	800d700 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800dc74:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800dc78:	f7ff fd42 	bl	800d700 <vListInitialise>
 800dc7c:	e7f2      	b.n	800dc64 <xQueueGenericReset+0x60>
 800dc7e:	bf00      	nop
 800dc80:	e000ed04 	.word	0xe000ed04

0800dc84 <xQueueGenericCreateStatic>:
	{
 800dc84:	b513      	push	{r0, r1, r4, lr}
 800dc86:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800dc88:	b940      	cbnz	r0, 800dc9c <xQueueGenericCreateStatic+0x18>
 800dc8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc8e:	f383 8811 	msr	BASEPRI, r3
 800dc92:	f3bf 8f6f 	isb	sy
 800dc96:	f3bf 8f4f 	dsb	sy
 800dc9a:	e7fe      	b.n	800dc9a <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800dc9c:	b943      	cbnz	r3, 800dcb0 <xQueueGenericCreateStatic+0x2c>
 800dc9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dca2:	f383 8811 	msr	BASEPRI, r3
 800dca6:	f3bf 8f6f 	isb	sy
 800dcaa:	f3bf 8f4f 	dsb	sy
 800dcae:	e7fe      	b.n	800dcae <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800dcb0:	b14a      	cbz	r2, 800dcc6 <xQueueGenericCreateStatic+0x42>
 800dcb2:	b991      	cbnz	r1, 800dcda <xQueueGenericCreateStatic+0x56>
 800dcb4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dcb8:	f383 8811 	msr	BASEPRI, r3
 800dcbc:	f3bf 8f6f 	isb	sy
 800dcc0:	f3bf 8f4f 	dsb	sy
 800dcc4:	e7fe      	b.n	800dcc4 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800dcc6:	b141      	cbz	r1, 800dcda <xQueueGenericCreateStatic+0x56>
 800dcc8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dccc:	f383 8811 	msr	BASEPRI, r3
 800dcd0:	f3bf 8f6f 	isb	sy
 800dcd4:	f3bf 8f4f 	dsb	sy
 800dcd8:	e7fe      	b.n	800dcd8 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800dcda:	2350      	movs	r3, #80	; 0x50
 800dcdc:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800dcde:	9b01      	ldr	r3, [sp, #4]
 800dce0:	2b50      	cmp	r3, #80	; 0x50
 800dce2:	d008      	beq.n	800dcf6 <xQueueGenericCreateStatic+0x72>
 800dce4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dce8:	f383 8811 	msr	BASEPRI, r3
 800dcec:	f3bf 8f6f 	isb	sy
 800dcf0:	f3bf 8f4f 	dsb	sy
 800dcf4:	e7fe      	b.n	800dcf4 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 800dcf6:	2900      	cmp	r1, #0
 800dcf8:	bf08      	it	eq
 800dcfa:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800dcfc:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800dcfe:	6022      	str	r2, [r4, #0]
 800dd00:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800dd02:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800dd06:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800dd0a:	4619      	mov	r1, r3
 800dd0c:	4620      	mov	r0, r4
 800dd0e:	f7ff ff79 	bl	800dc04 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800dd12:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800dd16:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800dd1a:	4620      	mov	r0, r4
 800dd1c:	b002      	add	sp, #8
 800dd1e:	bd10      	pop	{r4, pc}

0800dd20 <xQueueGenericCreate>:
	{
 800dd20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dd22:	460d      	mov	r5, r1
 800dd24:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800dd26:	4606      	mov	r6, r0
 800dd28:	b940      	cbnz	r0, 800dd3c <xQueueGenericCreate+0x1c>
 800dd2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd2e:	f383 8811 	msr	BASEPRI, r3
 800dd32:	f3bf 8f6f 	isb	sy
 800dd36:	f3bf 8f4f 	dsb	sy
 800dd3a:	e7fe      	b.n	800dd3a <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800dd3c:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800dd3e:	3050      	adds	r0, #80	; 0x50
 800dd40:	f7ff fc0e 	bl	800d560 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800dd44:	4604      	mov	r4, r0
 800dd46:	b170      	cbz	r0, 800dd66 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800dd48:	2300      	movs	r3, #0
 800dd4a:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800dd4e:	b165      	cbz	r5, 800dd6a <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dd50:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 800dd54:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800dd58:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800dd5a:	2101      	movs	r1, #1
 800dd5c:	4620      	mov	r0, r4
 800dd5e:	f7ff ff51 	bl	800dc04 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800dd62:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800dd66:	4620      	mov	r0, r4
 800dd68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800dd6a:	4603      	mov	r3, r0
 800dd6c:	e7f2      	b.n	800dd54 <xQueueGenericCreate+0x34>

0800dd6e <xQueueCreateCountingSemaphoreStatic>:
	{
 800dd6e:	b513      	push	{r0, r1, r4, lr}
 800dd70:	4613      	mov	r3, r2
 800dd72:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800dd74:	b940      	cbnz	r0, 800dd88 <xQueueCreateCountingSemaphoreStatic+0x1a>
 800dd76:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd7a:	f383 8811 	msr	BASEPRI, r3
 800dd7e:	f3bf 8f6f 	isb	sy
 800dd82:	f3bf 8f4f 	dsb	sy
 800dd86:	e7fe      	b.n	800dd86 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800dd88:	4288      	cmp	r0, r1
 800dd8a:	d208      	bcs.n	800dd9e <xQueueCreateCountingSemaphoreStatic+0x30>
 800dd8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd90:	f383 8811 	msr	BASEPRI, r3
 800dd94:	f3bf 8f6f 	isb	sy
 800dd98:	f3bf 8f4f 	dsb	sy
 800dd9c:	e7fe      	b.n	800dd9c <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800dd9e:	2202      	movs	r2, #2
 800dda0:	9200      	str	r2, [sp, #0]
 800dda2:	2200      	movs	r2, #0
 800dda4:	4611      	mov	r1, r2
 800dda6:	f7ff ff6d 	bl	800dc84 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800ddaa:	b100      	cbz	r0, 800ddae <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800ddac:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800ddae:	b002      	add	sp, #8
 800ddb0:	bd10      	pop	{r4, pc}

0800ddb2 <xQueueCreateCountingSemaphore>:
	{
 800ddb2:	b510      	push	{r4, lr}
 800ddb4:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800ddb6:	b940      	cbnz	r0, 800ddca <xQueueCreateCountingSemaphore+0x18>
 800ddb8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ddbc:	f383 8811 	msr	BASEPRI, r3
 800ddc0:	f3bf 8f6f 	isb	sy
 800ddc4:	f3bf 8f4f 	dsb	sy
 800ddc8:	e7fe      	b.n	800ddc8 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800ddca:	4288      	cmp	r0, r1
 800ddcc:	d208      	bcs.n	800dde0 <xQueueCreateCountingSemaphore+0x2e>
 800ddce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ddd2:	f383 8811 	msr	BASEPRI, r3
 800ddd6:	f3bf 8f6f 	isb	sy
 800ddda:	f3bf 8f4f 	dsb	sy
 800ddde:	e7fe      	b.n	800ddde <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800dde0:	2202      	movs	r2, #2
 800dde2:	2100      	movs	r1, #0
 800dde4:	f7ff ff9c 	bl	800dd20 <xQueueGenericCreate>
		if( xHandle != NULL )
 800dde8:	b100      	cbz	r0, 800ddec <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800ddea:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800ddec:	bd10      	pop	{r4, pc}
	...

0800ddf0 <xQueueGenericSend>:
{
 800ddf0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800ddf4:	4688      	mov	r8, r1
 800ddf6:	9201      	str	r2, [sp, #4]
 800ddf8:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800ddfa:	4604      	mov	r4, r0
 800ddfc:	b940      	cbnz	r0, 800de10 <xQueueGenericSend+0x20>
 800ddfe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de02:	f383 8811 	msr	BASEPRI, r3
 800de06:	f3bf 8f6f 	isb	sy
 800de0a:	f3bf 8f4f 	dsb	sy
 800de0e:	e7fe      	b.n	800de0e <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800de10:	b951      	cbnz	r1, 800de28 <xQueueGenericSend+0x38>
 800de12:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800de14:	b143      	cbz	r3, 800de28 <xQueueGenericSend+0x38>
 800de16:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de1a:	f383 8811 	msr	BASEPRI, r3
 800de1e:	f3bf 8f6f 	isb	sy
 800de22:	f3bf 8f4f 	dsb	sy
 800de26:	e7fe      	b.n	800de26 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800de28:	2f02      	cmp	r7, #2
 800de2a:	d10b      	bne.n	800de44 <xQueueGenericSend+0x54>
 800de2c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800de2e:	2b01      	cmp	r3, #1
 800de30:	d008      	beq.n	800de44 <xQueueGenericSend+0x54>
 800de32:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de36:	f383 8811 	msr	BASEPRI, r3
 800de3a:	f3bf 8f6f 	isb	sy
 800de3e:	f3bf 8f4f 	dsb	sy
 800de42:	e7fe      	b.n	800de42 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800de44:	f000 fff6 	bl	800ee34 <xTaskGetSchedulerState>
 800de48:	4606      	mov	r6, r0
 800de4a:	b950      	cbnz	r0, 800de62 <xQueueGenericSend+0x72>
 800de4c:	9b01      	ldr	r3, [sp, #4]
 800de4e:	b14b      	cbz	r3, 800de64 <xQueueGenericSend+0x74>
 800de50:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de54:	f383 8811 	msr	BASEPRI, r3
 800de58:	f3bf 8f6f 	isb	sy
 800de5c:	f3bf 8f4f 	dsb	sy
 800de60:	e7fe      	b.n	800de60 <xQueueGenericSend+0x70>
 800de62:	2600      	movs	r6, #0
					portYIELD_WITHIN_API();
 800de64:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 800df50 <xQueueGenericSend+0x160>
		prvLockQueue( pxQueue );
 800de68:	f04f 0900 	mov.w	r9, #0
 800de6c:	e037      	b.n	800dede <xQueueGenericSend+0xee>
				if( xTicksToWait == ( TickType_t ) 0 )
 800de6e:	9d01      	ldr	r5, [sp, #4]
 800de70:	b91d      	cbnz	r5, 800de7a <xQueueGenericSend+0x8a>
					taskEXIT_CRITICAL();
 800de72:	f7ff fd11 	bl	800d898 <vPortExitCritical>
			return errQUEUE_FULL;
 800de76:	2000      	movs	r0, #0
 800de78:	e050      	b.n	800df1c <xQueueGenericSend+0x12c>
				else if( xEntryTimeSet == pdFALSE )
 800de7a:	b916      	cbnz	r6, 800de82 <xQueueGenericSend+0x92>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800de7c:	a802      	add	r0, sp, #8
 800de7e:	f000 ff8b 	bl	800ed98 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800de82:	f7ff fd09 	bl	800d898 <vPortExitCritical>
		vTaskSuspendAll();
 800de86:	f000 fd19 	bl	800e8bc <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800de8a:	f7ff fce3 	bl	800d854 <vPortEnterCritical>
 800de8e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800de92:	2bff      	cmp	r3, #255	; 0xff
 800de94:	bf08      	it	eq
 800de96:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 800de9a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800de9e:	2bff      	cmp	r3, #255	; 0xff
 800dea0:	bf08      	it	eq
 800dea2:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 800dea6:	f7ff fcf7 	bl	800d898 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800deaa:	a901      	add	r1, sp, #4
 800deac:	a802      	add	r0, sp, #8
 800deae:	f000 ff7f 	bl	800edb0 <xTaskCheckForTimeOut>
 800deb2:	2800      	cmp	r0, #0
 800deb4:	d146      	bne.n	800df44 <xQueueGenericSend+0x154>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800deb6:	f7ff fccd 	bl	800d854 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800deba:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800debc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800debe:	429a      	cmp	r2, r3
 800dec0:	d12f      	bne.n	800df22 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800dec2:	f7ff fce9 	bl	800d898 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800dec6:	9901      	ldr	r1, [sp, #4]
 800dec8:	f104 0010 	add.w	r0, r4, #16
 800decc:	f000 fee8 	bl	800eca0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800ded0:	4620      	mov	r0, r4
 800ded2:	f7ff fe5f 	bl	800db94 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800ded6:	f000 fd95 	bl	800ea04 <xTaskResumeAll>
 800deda:	b350      	cbz	r0, 800df32 <xQueueGenericSend+0x142>
 800dedc:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800dede:	f7ff fcb9 	bl	800d854 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800dee2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800dee4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dee6:	429a      	cmp	r2, r3
 800dee8:	d301      	bcc.n	800deee <xQueueGenericSend+0xfe>
 800deea:	2f02      	cmp	r7, #2
 800deec:	d1bf      	bne.n	800de6e <xQueueGenericSend+0x7e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800deee:	463a      	mov	r2, r7
 800def0:	4641      	mov	r1, r8
 800def2:	4620      	mov	r0, r4
 800def4:	f7ff fe03 	bl	800dafe <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800def8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800defa:	b11b      	cbz	r3, 800df04 <xQueueGenericSend+0x114>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800defc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800df00:	f000 ff06 	bl	800ed10 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 800df04:	b138      	cbz	r0, 800df16 <xQueueGenericSend+0x126>
						queueYIELD_IF_USING_PREEMPTION();
 800df06:	4b12      	ldr	r3, [pc, #72]	; (800df50 <xQueueGenericSend+0x160>)
 800df08:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800df0c:	601a      	str	r2, [r3, #0]
 800df0e:	f3bf 8f4f 	dsb	sy
 800df12:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800df16:	f7ff fcbf 	bl	800d898 <vPortExitCritical>
				return pdPASS;
 800df1a:	2001      	movs	r0, #1
}
 800df1c:	b004      	add	sp, #16
 800df1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	taskEXIT_CRITICAL();
 800df22:	f7ff fcb9 	bl	800d898 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 800df26:	4620      	mov	r0, r4
 800df28:	f7ff fe34 	bl	800db94 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800df2c:	f000 fd6a 	bl	800ea04 <xTaskResumeAll>
 800df30:	e7d4      	b.n	800dedc <xQueueGenericSend+0xec>
					portYIELD_WITHIN_API();
 800df32:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800df36:	f8ca 3000 	str.w	r3, [sl]
 800df3a:	f3bf 8f4f 	dsb	sy
 800df3e:	f3bf 8f6f 	isb	sy
 800df42:	e7cb      	b.n	800dedc <xQueueGenericSend+0xec>
			prvUnlockQueue( pxQueue );
 800df44:	4620      	mov	r0, r4
 800df46:	f7ff fe25 	bl	800db94 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800df4a:	f000 fd5b 	bl	800ea04 <xTaskResumeAll>
 800df4e:	e792      	b.n	800de76 <xQueueGenericSend+0x86>
 800df50:	e000ed04 	.word	0xe000ed04

0800df54 <xQueueGenericSendFromISR>:
{
 800df54:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800df58:	4689      	mov	r9, r1
 800df5a:	4690      	mov	r8, r2
 800df5c:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800df5e:	4604      	mov	r4, r0
 800df60:	b940      	cbnz	r0, 800df74 <xQueueGenericSendFromISR+0x20>
 800df62:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df66:	f383 8811 	msr	BASEPRI, r3
 800df6a:	f3bf 8f6f 	isb	sy
 800df6e:	f3bf 8f4f 	dsb	sy
 800df72:	e7fe      	b.n	800df72 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800df74:	b951      	cbnz	r1, 800df8c <xQueueGenericSendFromISR+0x38>
 800df76:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800df78:	b143      	cbz	r3, 800df8c <xQueueGenericSendFromISR+0x38>
 800df7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df7e:	f383 8811 	msr	BASEPRI, r3
 800df82:	f3bf 8f6f 	isb	sy
 800df86:	f3bf 8f4f 	dsb	sy
 800df8a:	e7fe      	b.n	800df8a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800df8c:	2f02      	cmp	r7, #2
 800df8e:	d10b      	bne.n	800dfa8 <xQueueGenericSendFromISR+0x54>
 800df90:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800df92:	2b01      	cmp	r3, #1
 800df94:	d008      	beq.n	800dfa8 <xQueueGenericSendFromISR+0x54>
 800df96:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df9a:	f383 8811 	msr	BASEPRI, r3
 800df9e:	f3bf 8f6f 	isb	sy
 800dfa2:	f3bf 8f4f 	dsb	sy
 800dfa6:	e7fe      	b.n	800dfa6 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800dfa8:	f7ff fd70 	bl	800da8c <vPortValidateInterruptPriority>
	__asm volatile
 800dfac:	f3ef 8611 	mrs	r6, BASEPRI
 800dfb0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfb4:	f383 8811 	msr	BASEPRI, r3
 800dfb8:	f3bf 8f6f 	isb	sy
 800dfbc:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800dfc0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800dfc2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dfc4:	429a      	cmp	r2, r3
 800dfc6:	d301      	bcc.n	800dfcc <xQueueGenericSendFromISR+0x78>
 800dfc8:	2f02      	cmp	r7, #2
 800dfca:	d123      	bne.n	800e014 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 800dfcc:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dfd0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800dfd2:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800dfd4:	463a      	mov	r2, r7
 800dfd6:	4649      	mov	r1, r9
 800dfd8:	4620      	mov	r0, r4
 800dfda:	f7ff fd90 	bl	800dafe <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800dfde:	1c6b      	adds	r3, r5, #1
 800dfe0:	d113      	bne.n	800e00a <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dfe2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800dfe4:	b90b      	cbnz	r3, 800dfea <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 800dfe6:	2001      	movs	r0, #1
 800dfe8:	e00b      	b.n	800e002 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dfea:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800dfee:	f000 fe8f 	bl	800ed10 <xTaskRemoveFromEventList>
 800dff2:	2800      	cmp	r0, #0
 800dff4:	d0f7      	beq.n	800dfe6 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800dff6:	f1b8 0f00 	cmp.w	r8, #0
 800dffa:	d0f4      	beq.n	800dfe6 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800dffc:	2001      	movs	r0, #1
 800dffe:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800e002:	f386 8811 	msr	BASEPRI, r6
}
 800e006:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800e00a:	3501      	adds	r5, #1
 800e00c:	b26d      	sxtb	r5, r5
 800e00e:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 800e012:	e7e8      	b.n	800dfe6 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 800e014:	2000      	movs	r0, #0
 800e016:	e7f4      	b.n	800e002 <xQueueGenericSendFromISR+0xae>

0800e018 <xQueueGiveFromISR>:
{
 800e018:	b570      	push	{r4, r5, r6, lr}
 800e01a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800e01c:	4604      	mov	r4, r0
 800e01e:	b940      	cbnz	r0, 800e032 <xQueueGiveFromISR+0x1a>
	__asm volatile
 800e020:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e024:	f383 8811 	msr	BASEPRI, r3
 800e028:	f3bf 8f6f 	isb	sy
 800e02c:	f3bf 8f4f 	dsb	sy
 800e030:	e7fe      	b.n	800e030 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 800e032:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e034:	b143      	cbz	r3, 800e048 <xQueueGiveFromISR+0x30>
 800e036:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e03a:	f383 8811 	msr	BASEPRI, r3
 800e03e:	f3bf 8f6f 	isb	sy
 800e042:	f3bf 8f4f 	dsb	sy
 800e046:	e7fe      	b.n	800e046 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800e048:	6803      	ldr	r3, [r0, #0]
 800e04a:	b953      	cbnz	r3, 800e062 <xQueueGiveFromISR+0x4a>
 800e04c:	6883      	ldr	r3, [r0, #8]
 800e04e:	b143      	cbz	r3, 800e062 <xQueueGiveFromISR+0x4a>
 800e050:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e054:	f383 8811 	msr	BASEPRI, r3
 800e058:	f3bf 8f6f 	isb	sy
 800e05c:	f3bf 8f4f 	dsb	sy
 800e060:	e7fe      	b.n	800e060 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e062:	f7ff fd13 	bl	800da8c <vPortValidateInterruptPriority>
	__asm volatile
 800e066:	f3ef 8611 	mrs	r6, BASEPRI
 800e06a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e06e:	f383 8811 	msr	BASEPRI, r3
 800e072:	f3bf 8f6f 	isb	sy
 800e076:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e07a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800e07c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e07e:	4293      	cmp	r3, r2
 800e080:	d91c      	bls.n	800e0bc <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 800e082:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e086:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800e088:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800e08a:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e08c:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800e08e:	d110      	bne.n	800e0b2 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e090:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e092:	b90b      	cbnz	r3, 800e098 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 800e094:	2001      	movs	r0, #1
 800e096:	e009      	b.n	800e0ac <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e098:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e09c:	f000 fe38 	bl	800ed10 <xTaskRemoveFromEventList>
 800e0a0:	2800      	cmp	r0, #0
 800e0a2:	d0f7      	beq.n	800e094 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 800e0a4:	2d00      	cmp	r5, #0
 800e0a6:	d0f5      	beq.n	800e094 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800e0a8:	2001      	movs	r0, #1
 800e0aa:	6028      	str	r0, [r5, #0]
	__asm volatile
 800e0ac:	f386 8811 	msr	BASEPRI, r6
}
 800e0b0:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800e0b2:	3301      	adds	r3, #1
 800e0b4:	b25b      	sxtb	r3, r3
 800e0b6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800e0ba:	e7eb      	b.n	800e094 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800e0bc:	2000      	movs	r0, #0
 800e0be:	e7f5      	b.n	800e0ac <xQueueGiveFromISR+0x94>

0800e0c0 <xQueueReceive>:
{
 800e0c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e0c4:	b085      	sub	sp, #20
 800e0c6:	460f      	mov	r7, r1
 800e0c8:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800e0ca:	4604      	mov	r4, r0
 800e0cc:	b940      	cbnz	r0, 800e0e0 <xQueueReceive+0x20>
	__asm volatile
 800e0ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0d2:	f383 8811 	msr	BASEPRI, r3
 800e0d6:	f3bf 8f6f 	isb	sy
 800e0da:	f3bf 8f4f 	dsb	sy
 800e0de:	e7fe      	b.n	800e0de <xQueueReceive+0x1e>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e0e0:	b951      	cbnz	r1, 800e0f8 <xQueueReceive+0x38>
 800e0e2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e0e4:	b143      	cbz	r3, 800e0f8 <xQueueReceive+0x38>
 800e0e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0ea:	f383 8811 	msr	BASEPRI, r3
 800e0ee:	f3bf 8f6f 	isb	sy
 800e0f2:	f3bf 8f4f 	dsb	sy
 800e0f6:	e7fe      	b.n	800e0f6 <xQueueReceive+0x36>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e0f8:	f000 fe9c 	bl	800ee34 <xTaskGetSchedulerState>
 800e0fc:	4606      	mov	r6, r0
 800e0fe:	b950      	cbnz	r0, 800e116 <xQueueReceive+0x56>
 800e100:	9b01      	ldr	r3, [sp, #4]
 800e102:	b14b      	cbz	r3, 800e118 <xQueueReceive+0x58>
 800e104:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e108:	f383 8811 	msr	BASEPRI, r3
 800e10c:	f3bf 8f6f 	isb	sy
 800e110:	f3bf 8f4f 	dsb	sy
 800e114:	e7fe      	b.n	800e114 <xQueueReceive+0x54>
 800e116:	2600      	movs	r6, #0
					portYIELD_WITHIN_API();
 800e118:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 800e1fc <xQueueReceive+0x13c>
		prvLockQueue( pxQueue );
 800e11c:	f04f 0800 	mov.w	r8, #0
 800e120:	e03b      	b.n	800e19a <xQueueReceive+0xda>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e122:	9d01      	ldr	r5, [sp, #4]
 800e124:	b91d      	cbnz	r5, 800e12e <xQueueReceive+0x6e>
					taskEXIT_CRITICAL();
 800e126:	f7ff fbb7 	bl	800d898 <vPortExitCritical>
				return errQUEUE_EMPTY;
 800e12a:	2000      	movs	r0, #0
 800e12c:	e052      	b.n	800e1d4 <xQueueReceive+0x114>
				else if( xEntryTimeSet == pdFALSE )
 800e12e:	b916      	cbnz	r6, 800e136 <xQueueReceive+0x76>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e130:	a802      	add	r0, sp, #8
 800e132:	f000 fe31 	bl	800ed98 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800e136:	f7ff fbaf 	bl	800d898 <vPortExitCritical>
		vTaskSuspendAll();
 800e13a:	f000 fbbf 	bl	800e8bc <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e13e:	f7ff fb89 	bl	800d854 <vPortEnterCritical>
 800e142:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e146:	2bff      	cmp	r3, #255	; 0xff
 800e148:	bf08      	it	eq
 800e14a:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800e14e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e152:	2bff      	cmp	r3, #255	; 0xff
 800e154:	bf08      	it	eq
 800e156:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800e15a:	f7ff fb9d 	bl	800d898 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e15e:	a901      	add	r1, sp, #4
 800e160:	a802      	add	r0, sp, #8
 800e162:	f000 fe25 	bl	800edb0 <xTaskCheckForTimeOut>
 800e166:	2800      	cmp	r0, #0
 800e168:	d13d      	bne.n	800e1e6 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800e16a:	4620      	mov	r0, r4
 800e16c:	f7ff fcbc 	bl	800dae8 <prvIsQueueEmpty>
 800e170:	b398      	cbz	r0, 800e1da <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800e172:	9901      	ldr	r1, [sp, #4]
 800e174:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e178:	f000 fd92 	bl	800eca0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800e17c:	4620      	mov	r0, r4
 800e17e:	f7ff fd09 	bl	800db94 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800e182:	f000 fc3f 	bl	800ea04 <xTaskResumeAll>
 800e186:	b938      	cbnz	r0, 800e198 <xQueueReceive+0xd8>
					portYIELD_WITHIN_API();
 800e188:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800e18c:	f8c9 3000 	str.w	r3, [r9]
 800e190:	f3bf 8f4f 	dsb	sy
 800e194:	f3bf 8f6f 	isb	sy
 800e198:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800e19a:	f7ff fb5b 	bl	800d854 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e19e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e1a0:	2d00      	cmp	r5, #0
 800e1a2:	d0be      	beq.n	800e122 <xQueueReceive+0x62>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800e1a4:	4639      	mov	r1, r7
 800e1a6:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e1a8:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800e1aa:	f7ff fcdd 	bl	800db68 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e1ae:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e1b0:	6923      	ldr	r3, [r4, #16]
 800e1b2:	b163      	cbz	r3, 800e1ce <xQueueReceive+0x10e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e1b4:	f104 0010 	add.w	r0, r4, #16
 800e1b8:	f000 fdaa 	bl	800ed10 <xTaskRemoveFromEventList>
 800e1bc:	b138      	cbz	r0, 800e1ce <xQueueReceive+0x10e>
						queueYIELD_IF_USING_PREEMPTION();
 800e1be:	4b0f      	ldr	r3, [pc, #60]	; (800e1fc <xQueueReceive+0x13c>)
 800e1c0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e1c4:	601a      	str	r2, [r3, #0]
 800e1c6:	f3bf 8f4f 	dsb	sy
 800e1ca:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800e1ce:	f7ff fb63 	bl	800d898 <vPortExitCritical>
				return pdPASS;
 800e1d2:	2001      	movs	r0, #1
}
 800e1d4:	b005      	add	sp, #20
 800e1d6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				prvUnlockQueue( pxQueue );
 800e1da:	4620      	mov	r0, r4
 800e1dc:	f7ff fcda 	bl	800db94 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800e1e0:	f000 fc10 	bl	800ea04 <xTaskResumeAll>
 800e1e4:	e7d8      	b.n	800e198 <xQueueReceive+0xd8>
			prvUnlockQueue( pxQueue );
 800e1e6:	4620      	mov	r0, r4
 800e1e8:	f7ff fcd4 	bl	800db94 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800e1ec:	f000 fc0a 	bl	800ea04 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800e1f0:	4620      	mov	r0, r4
 800e1f2:	f7ff fc79 	bl	800dae8 <prvIsQueueEmpty>
 800e1f6:	2800      	cmp	r0, #0
 800e1f8:	d0ce      	beq.n	800e198 <xQueueReceive+0xd8>
 800e1fa:	e796      	b.n	800e12a <xQueueReceive+0x6a>
 800e1fc:	e000ed04 	.word	0xe000ed04

0800e200 <xQueueSemaphoreTake>:
{
 800e200:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
	configASSERT( ( pxQueue ) );
 800e204:	4604      	mov	r4, r0
{
 800e206:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800e208:	b940      	cbnz	r0, 800e21c <xQueueSemaphoreTake+0x1c>
 800e20a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e20e:	f383 8811 	msr	BASEPRI, r3
 800e212:	f3bf 8f6f 	isb	sy
 800e216:	f3bf 8f4f 	dsb	sy
 800e21a:	e7fe      	b.n	800e21a <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800e21c:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800e21e:	b145      	cbz	r5, 800e232 <xQueueSemaphoreTake+0x32>
 800e220:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e224:	f383 8811 	msr	BASEPRI, r3
 800e228:	f3bf 8f6f 	isb	sy
 800e22c:	f3bf 8f4f 	dsb	sy
 800e230:	e7fe      	b.n	800e230 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e232:	f000 fdff 	bl	800ee34 <xTaskGetSchedulerState>
 800e236:	4606      	mov	r6, r0
 800e238:	b950      	cbnz	r0, 800e250 <xQueueSemaphoreTake+0x50>
 800e23a:	9b01      	ldr	r3, [sp, #4]
 800e23c:	b16b      	cbz	r3, 800e25a <xQueueSemaphoreTake+0x5a>
 800e23e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e242:	f383 8811 	msr	BASEPRI, r3
 800e246:	f3bf 8f6f 	isb	sy
 800e24a:	f3bf 8f4f 	dsb	sy
 800e24e:	e7fe      	b.n	800e24e <xQueueSemaphoreTake+0x4e>
 800e250:	462e      	mov	r6, r5
					portYIELD_WITHIN_API();
 800e252:	f8df 8130 	ldr.w	r8, [pc, #304]	; 800e384 <xQueueSemaphoreTake+0x184>
		prvLockQueue( pxQueue );
 800e256:	2700      	movs	r7, #0
 800e258:	e051      	b.n	800e2fe <xQueueSemaphoreTake+0xfe>
 800e25a:	4605      	mov	r5, r0
 800e25c:	e7f9      	b.n	800e252 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e25e:	9b01      	ldr	r3, [sp, #4]
 800e260:	b963      	cbnz	r3, 800e27c <xQueueSemaphoreTake+0x7c>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800e262:	b145      	cbz	r5, 800e276 <xQueueSemaphoreTake+0x76>
 800e264:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e268:	f383 8811 	msr	BASEPRI, r3
 800e26c:	f3bf 8f6f 	isb	sy
 800e270:	f3bf 8f4f 	dsb	sy
 800e274:	e7fe      	b.n	800e274 <xQueueSemaphoreTake+0x74>
					taskEXIT_CRITICAL();
 800e276:	f7ff fb0f 	bl	800d898 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800e27a:	e05e      	b.n	800e33a <xQueueSemaphoreTake+0x13a>
				else if( xEntryTimeSet == pdFALSE )
 800e27c:	b916      	cbnz	r6, 800e284 <xQueueSemaphoreTake+0x84>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e27e:	a802      	add	r0, sp, #8
 800e280:	f000 fd8a 	bl	800ed98 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800e284:	f7ff fb08 	bl	800d898 <vPortExitCritical>
		vTaskSuspendAll();
 800e288:	f000 fb18 	bl	800e8bc <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e28c:	f7ff fae2 	bl	800d854 <vPortEnterCritical>
 800e290:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e294:	2bff      	cmp	r3, #255	; 0xff
 800e296:	bf08      	it	eq
 800e298:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 800e29c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e2a0:	2bff      	cmp	r3, #255	; 0xff
 800e2a2:	bf08      	it	eq
 800e2a4:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 800e2a8:	f7ff faf6 	bl	800d898 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e2ac:	a901      	add	r1, sp, #4
 800e2ae:	a802      	add	r0, sp, #8
 800e2b0:	f000 fd7e 	bl	800edb0 <xTaskCheckForTimeOut>
 800e2b4:	2800      	cmp	r0, #0
 800e2b6:	d14a      	bne.n	800e34e <xQueueSemaphoreTake+0x14e>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800e2b8:	4620      	mov	r0, r4
 800e2ba:	f7ff fc15 	bl	800dae8 <prvIsQueueEmpty>
 800e2be:	2800      	cmp	r0, #0
 800e2c0:	d03f      	beq.n	800e342 <xQueueSemaphoreTake+0x142>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e2c2:	6823      	ldr	r3, [r4, #0]
 800e2c4:	b93b      	cbnz	r3, 800e2d6 <xQueueSemaphoreTake+0xd6>
						taskENTER_CRITICAL();
 800e2c6:	f7ff fac5 	bl	800d854 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e2ca:	68a0      	ldr	r0, [r4, #8]
 800e2cc:	f000 fdc2 	bl	800ee54 <xTaskPriorityInherit>
 800e2d0:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800e2d2:	f7ff fae1 	bl	800d898 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800e2d6:	9901      	ldr	r1, [sp, #4]
 800e2d8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e2dc:	f000 fce0 	bl	800eca0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800e2e0:	4620      	mov	r0, r4
 800e2e2:	f7ff fc57 	bl	800db94 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800e2e6:	f000 fb8d 	bl	800ea04 <xTaskResumeAll>
 800e2ea:	b938      	cbnz	r0, 800e2fc <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 800e2ec:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800e2f0:	f8c8 3000 	str.w	r3, [r8]
 800e2f4:	f3bf 8f4f 	dsb	sy
 800e2f8:	f3bf 8f6f 	isb	sy
 800e2fc:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800e2fe:	f7ff faa9 	bl	800d854 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800e302:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800e304:	2b00      	cmp	r3, #0
 800e306:	d0aa      	beq.n	800e25e <xQueueSemaphoreTake+0x5e>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800e308:	3b01      	subs	r3, #1
 800e30a:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e30c:	6823      	ldr	r3, [r4, #0]
 800e30e:	b913      	cbnz	r3, 800e316 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800e310:	f000 fe78 	bl	800f004 <pvTaskIncrementMutexHeldCount>
 800e314:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e316:	6923      	ldr	r3, [r4, #16]
 800e318:	b163      	cbz	r3, 800e334 <xQueueSemaphoreTake+0x134>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e31a:	f104 0010 	add.w	r0, r4, #16
 800e31e:	f000 fcf7 	bl	800ed10 <xTaskRemoveFromEventList>
 800e322:	b138      	cbz	r0, 800e334 <xQueueSemaphoreTake+0x134>
						queueYIELD_IF_USING_PREEMPTION();
 800e324:	4b17      	ldr	r3, [pc, #92]	; (800e384 <xQueueSemaphoreTake+0x184>)
 800e326:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e32a:	601a      	str	r2, [r3, #0]
 800e32c:	f3bf 8f4f 	dsb	sy
 800e330:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800e334:	f7ff fab0 	bl	800d898 <vPortExitCritical>
				return pdPASS;
 800e338:	2501      	movs	r5, #1
}
 800e33a:	4628      	mov	r0, r5
 800e33c:	b004      	add	sp, #16
 800e33e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 800e342:	4620      	mov	r0, r4
 800e344:	f7ff fc26 	bl	800db94 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800e348:	f000 fb5c 	bl	800ea04 <xTaskResumeAll>
 800e34c:	e7d6      	b.n	800e2fc <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800e34e:	4620      	mov	r0, r4
 800e350:	f7ff fc20 	bl	800db94 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800e354:	f000 fb56 	bl	800ea04 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800e358:	4620      	mov	r0, r4
 800e35a:	f7ff fbc5 	bl	800dae8 <prvIsQueueEmpty>
 800e35e:	2800      	cmp	r0, #0
 800e360:	d0cc      	beq.n	800e2fc <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 800e362:	2d00      	cmp	r5, #0
 800e364:	d0e9      	beq.n	800e33a <xQueueSemaphoreTake+0x13a>
						taskENTER_CRITICAL();
 800e366:	f7ff fa75 	bl	800d854 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800e36a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800e36c:	b119      	cbz	r1, 800e376 <xQueueSemaphoreTake+0x176>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800e36e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e370:	6819      	ldr	r1, [r3, #0]
 800e372:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800e376:	68a0      	ldr	r0, [r4, #8]
 800e378:	f000 fdf2 	bl	800ef60 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800e37c:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 800e37e:	f7ff fa8b 	bl	800d898 <vPortExitCritical>
 800e382:	e7da      	b.n	800e33a <xQueueSemaphoreTake+0x13a>
 800e384:	e000ed04 	.word	0xe000ed04

0800e388 <xQueueReceiveFromISR>:
{
 800e388:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e38c:	4689      	mov	r9, r1
 800e38e:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800e390:	4605      	mov	r5, r0
 800e392:	b940      	cbnz	r0, 800e3a6 <xQueueReceiveFromISR+0x1e>
 800e394:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e398:	f383 8811 	msr	BASEPRI, r3
 800e39c:	f3bf 8f6f 	isb	sy
 800e3a0:	f3bf 8f4f 	dsb	sy
 800e3a4:	e7fe      	b.n	800e3a4 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e3a6:	b951      	cbnz	r1, 800e3be <xQueueReceiveFromISR+0x36>
 800e3a8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e3aa:	b143      	cbz	r3, 800e3be <xQueueReceiveFromISR+0x36>
 800e3ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3b0:	f383 8811 	msr	BASEPRI, r3
 800e3b4:	f3bf 8f6f 	isb	sy
 800e3b8:	f3bf 8f4f 	dsb	sy
 800e3bc:	e7fe      	b.n	800e3bc <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e3be:	f7ff fb65 	bl	800da8c <vPortValidateInterruptPriority>
	__asm volatile
 800e3c2:	f3ef 8711 	mrs	r7, BASEPRI
 800e3c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3ca:	f383 8811 	msr	BASEPRI, r3
 800e3ce:	f3bf 8f6f 	isb	sy
 800e3d2:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e3d6:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e3d8:	b31c      	cbz	r4, 800e422 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 800e3da:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800e3de:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800e3e0:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800e3e2:	4628      	mov	r0, r5
 800e3e4:	f7ff fbc0 	bl	800db68 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e3e8:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 800e3ea:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e3ec:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800e3ee:	d113      	bne.n	800e418 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e3f0:	692b      	ldr	r3, [r5, #16]
 800e3f2:	b90b      	cbnz	r3, 800e3f8 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 800e3f4:	2001      	movs	r0, #1
 800e3f6:	e00b      	b.n	800e410 <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e3f8:	f105 0010 	add.w	r0, r5, #16
 800e3fc:	f000 fc88 	bl	800ed10 <xTaskRemoveFromEventList>
 800e400:	2800      	cmp	r0, #0
 800e402:	d0f7      	beq.n	800e3f4 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 800e404:	f1b8 0f00 	cmp.w	r8, #0
 800e408:	d0f4      	beq.n	800e3f4 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800e40a:	2001      	movs	r0, #1
 800e40c:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800e410:	f387 8811 	msr	BASEPRI, r7
}
 800e414:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800e418:	3601      	adds	r6, #1
 800e41a:	b276      	sxtb	r6, r6
 800e41c:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800e420:	e7e8      	b.n	800e3f4 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800e422:	4620      	mov	r0, r4
 800e424:	e7f4      	b.n	800e410 <xQueueReceiveFromISR+0x88>
	...

0800e428 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 800e428:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800e42a:	4a07      	ldr	r2, [pc, #28]	; (800e448 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e42c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800e42e:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800e432:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 800e436:	b91d      	cbnz	r5, 800e440 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800e438:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e43c:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800e43e:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e440:	3301      	adds	r3, #1
 800e442:	2b08      	cmp	r3, #8
 800e444:	d1f3      	bne.n	800e42e <vQueueAddToRegistry+0x6>
 800e446:	e7fa      	b.n	800e43e <vQueueAddToRegistry+0x16>
 800e448:	20020fe4 	.word	0x20020fe4

0800e44c <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 800e44c:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e44e:	4909      	ldr	r1, [pc, #36]	; (800e474 <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e450:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e452:	f851 2033 	ldr.w	r2, [r1, r3, lsl #3]
 800e456:	4282      	cmp	r2, r0
 800e458:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 800e45c:	d106      	bne.n	800e46c <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800e45e:	4a06      	ldr	r2, [pc, #24]	; (800e478 <vQueueUnregisterQueue+0x2c>)
 800e460:	2100      	movs	r1, #0
 800e462:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800e466:	4422      	add	r2, r4
 800e468:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800e46a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e46c:	3301      	adds	r3, #1
 800e46e:	2b08      	cmp	r3, #8
 800e470:	d1ef      	bne.n	800e452 <vQueueUnregisterQueue+0x6>
 800e472:	e7fa      	b.n	800e46a <vQueueUnregisterQueue+0x1e>
 800e474:	20020fe8 	.word	0x20020fe8
 800e478:	20020fe4 	.word	0x20020fe4

0800e47c <vQueueDelete>:
{
 800e47c:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800e47e:	b940      	cbnz	r0, 800e492 <vQueueDelete+0x16>
	__asm volatile
 800e480:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e484:	f383 8811 	msr	BASEPRI, r3
 800e488:	f3bf 8f6f 	isb	sy
 800e48c:	f3bf 8f4f 	dsb	sy
 800e490:	e7fe      	b.n	800e490 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 800e492:	f7ff ffdb 	bl	800e44c <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800e496:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800e49a:	b91b      	cbnz	r3, 800e4a4 <vQueueDelete+0x28>
}
 800e49c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 800e4a0:	f7ff b8f0 	b.w	800d684 <vPortFree>
}
 800e4a4:	bd10      	pop	{r4, pc}

0800e4a6 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800e4a6:	b570      	push	{r4, r5, r6, lr}
 800e4a8:	4604      	mov	r4, r0
 800e4aa:	460d      	mov	r5, r1
 800e4ac:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800e4ae:	f7ff f9d1 	bl	800d854 <vPortEnterCritical>
 800e4b2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e4b6:	2bff      	cmp	r3, #255	; 0xff
 800e4b8:	bf04      	itt	eq
 800e4ba:	2300      	moveq	r3, #0
 800e4bc:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800e4c0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e4c4:	2bff      	cmp	r3, #255	; 0xff
 800e4c6:	bf04      	itt	eq
 800e4c8:	2300      	moveq	r3, #0
 800e4ca:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800e4ce:	f7ff f9e3 	bl	800d898 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800e4d2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e4d4:	b92b      	cbnz	r3, 800e4e2 <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800e4d6:	4632      	mov	r2, r6
 800e4d8:	4629      	mov	r1, r5
 800e4da:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e4de:	f000 fbf9 	bl	800ecd4 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800e4e2:	4620      	mov	r0, r4
	}
 800e4e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 800e4e8:	f7ff bb54 	b.w	800db94 <prvUnlockQueue>

0800e4ec <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800e4ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e4f0:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800e4f2:	f7ff f9af 	bl	800d854 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800e4f6:	4b2f      	ldr	r3, [pc, #188]	; (800e5b4 <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 800e4f8:	4d2f      	ldr	r5, [pc, #188]	; (800e5b8 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 800e4fa:	681a      	ldr	r2, [r3, #0]
 800e4fc:	4f2f      	ldr	r7, [pc, #188]	; (800e5bc <prvAddNewTaskToReadyList+0xd0>)
 800e4fe:	3201      	adds	r2, #1
 800e500:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800e502:	682e      	ldr	r6, [r5, #0]
 800e504:	2e00      	cmp	r6, #0
 800e506:	d149      	bne.n	800e59c <prvAddNewTaskToReadyList+0xb0>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 800e508:	602c      	str	r4, [r5, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800e50a:	681b      	ldr	r3, [r3, #0]
 800e50c:	2b01      	cmp	r3, #1
 800e50e:	d11f      	bne.n	800e550 <prvAddNewTaskToReadyList+0x64>
 800e510:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e512:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e514:	3601      	adds	r6, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e516:	f7ff f8f3 	bl	800d700 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e51a:	2e38      	cmp	r6, #56	; 0x38
 800e51c:	f108 0814 	add.w	r8, r8, #20
 800e520:	d1f7      	bne.n	800e512 <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800e522:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800e5e8 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800e526:	4e26      	ldr	r6, [pc, #152]	; (800e5c0 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 800e528:	4640      	mov	r0, r8
 800e52a:	f7ff f8e9 	bl	800d700 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800e52e:	4630      	mov	r0, r6
 800e530:	f7ff f8e6 	bl	800d700 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800e534:	4823      	ldr	r0, [pc, #140]	; (800e5c4 <prvAddNewTaskToReadyList+0xd8>)
 800e536:	f7ff f8e3 	bl	800d700 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800e53a:	4823      	ldr	r0, [pc, #140]	; (800e5c8 <prvAddNewTaskToReadyList+0xdc>)
 800e53c:	f7ff f8e0 	bl	800d700 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800e540:	4822      	ldr	r0, [pc, #136]	; (800e5cc <prvAddNewTaskToReadyList+0xe0>)
 800e542:	f7ff f8dd 	bl	800d700 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800e546:	4b22      	ldr	r3, [pc, #136]	; (800e5d0 <prvAddNewTaskToReadyList+0xe4>)
 800e548:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800e54c:	4b21      	ldr	r3, [pc, #132]	; (800e5d4 <prvAddNewTaskToReadyList+0xe8>)
 800e54e:	601e      	str	r6, [r3, #0]
		uxTaskNumber++;
 800e550:	4a21      	ldr	r2, [pc, #132]	; (800e5d8 <prvAddNewTaskToReadyList+0xec>)
 800e552:	6813      	ldr	r3, [r2, #0]
 800e554:	3301      	adds	r3, #1
 800e556:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 800e558:	4a20      	ldr	r2, [pc, #128]	; (800e5dc <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800e55a:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800e55c:	6811      	ldr	r1, [r2, #0]
 800e55e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e560:	2014      	movs	r0, #20
 800e562:	428b      	cmp	r3, r1
 800e564:	fb00 7003 	mla	r0, r0, r3, r7
 800e568:	f104 0104 	add.w	r1, r4, #4
 800e56c:	bf88      	it	hi
 800e56e:	6013      	strhi	r3, [r2, #0]
 800e570:	f7ff f8d4 	bl	800d71c <vListInsertEnd>
	taskEXIT_CRITICAL();
 800e574:	f7ff f990 	bl	800d898 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 800e578:	4b19      	ldr	r3, [pc, #100]	; (800e5e0 <prvAddNewTaskToReadyList+0xf4>)
 800e57a:	681b      	ldr	r3, [r3, #0]
 800e57c:	b163      	cbz	r3, 800e598 <prvAddNewTaskToReadyList+0xac>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800e57e:	682b      	ldr	r3, [r5, #0]
 800e580:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e582:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e584:	429a      	cmp	r2, r3
 800e586:	d207      	bcs.n	800e598 <prvAddNewTaskToReadyList+0xac>
			taskYIELD_IF_USING_PREEMPTION();
 800e588:	4b16      	ldr	r3, [pc, #88]	; (800e5e4 <prvAddNewTaskToReadyList+0xf8>)
 800e58a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e58e:	601a      	str	r2, [r3, #0]
 800e590:	f3bf 8f4f 	dsb	sy
 800e594:	f3bf 8f6f 	isb	sy
}
 800e598:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800e59c:	4b10      	ldr	r3, [pc, #64]	; (800e5e0 <prvAddNewTaskToReadyList+0xf4>)
 800e59e:	681b      	ldr	r3, [r3, #0]
 800e5a0:	2b00      	cmp	r3, #0
 800e5a2:	d1d5      	bne.n	800e550 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e5a4:	682b      	ldr	r3, [r5, #0]
 800e5a6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e5a8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e5aa:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 800e5ac:	bf98      	it	ls
 800e5ae:	602c      	strls	r4, [r5, #0]
 800e5b0:	e7ce      	b.n	800e550 <prvAddNewTaskToReadyList+0x64>
 800e5b2:	bf00      	nop
 800e5b4:	200208c8 	.word	0x200208c8
 800e5b8:	2002045c 	.word	0x2002045c
 800e5bc:	20020468 	.word	0x20020468
 800e5c0:	200208f0 	.word	0x200208f0
 800e5c4:	20020910 	.word	0x20020910
 800e5c8:	2002093c 	.word	0x2002093c
 800e5cc:	20020928 	.word	0x20020928
 800e5d0:	20020460 	.word	0x20020460
 800e5d4:	20020464 	.word	0x20020464
 800e5d8:	200208d4 	.word	0x200208d4
 800e5dc:	200208d8 	.word	0x200208d8
 800e5e0:	20020924 	.word	0x20020924
 800e5e4:	e000ed04 	.word	0xe000ed04
 800e5e8:	200208dc 	.word	0x200208dc

0800e5ec <prvResetNextTaskUnblockTime>:

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e5ec:	4a06      	ldr	r2, [pc, #24]	; (800e608 <prvResetNextTaskUnblockTime+0x1c>)
 800e5ee:	6813      	ldr	r3, [r2, #0]
 800e5f0:	6819      	ldr	r1, [r3, #0]
 800e5f2:	4b06      	ldr	r3, [pc, #24]	; (800e60c <prvResetNextTaskUnblockTime+0x20>)
 800e5f4:	b919      	cbnz	r1, 800e5fe <prvResetNextTaskUnblockTime+0x12>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800e5f6:	f04f 32ff 	mov.w	r2, #4294967295
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e5fa:	601a      	str	r2, [r3, #0]
	}
}
 800e5fc:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e5fe:	6812      	ldr	r2, [r2, #0]
 800e600:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e602:	68d2      	ldr	r2, [r2, #12]
 800e604:	6852      	ldr	r2, [r2, #4]
 800e606:	e7f8      	b.n	800e5fa <prvResetNextTaskUnblockTime+0xe>
 800e608:	20020460 	.word	0x20020460
 800e60c:	20020904 	.word	0x20020904

0800e610 <prvInitialiseNewTask.isra.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e610:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e614:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e618:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800e61c:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e61e:	4606      	mov	r6, r0
 800e620:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e622:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e624:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e626:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e628:	f016 f9ac 	bl	8024984 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800e62c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e62e:	f1a9 0904 	sub.w	r9, r9, #4
 800e632:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800e634:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 800e638:	2d00      	cmp	r5, #0
 800e63a:	d043      	beq.n	800e6c4 <prvInitialiseNewTask.isra.0+0xb4>
 800e63c:	1e6b      	subs	r3, r5, #1
 800e63e:	f104 0234 	add.w	r2, r4, #52	; 0x34
 800e642:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e644:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800e648:	f802 1b01 	strb.w	r1, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800e64c:	7819      	ldrb	r1, [r3, #0]
 800e64e:	b109      	cbz	r1, 800e654 <prvInitialiseNewTask.isra.0+0x44>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800e650:	42ab      	cmp	r3, r5
 800e652:	d1f7      	bne.n	800e644 <prvInitialiseNewTask.isra.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800e654:	2300      	movs	r3, #0
 800e656:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800e65a:	9d08      	ldr	r5, [sp, #32]
 800e65c:	2d37      	cmp	r5, #55	; 0x37
 800e65e:	bf28      	it	cs
 800e660:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800e662:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800e666:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800e668:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e66a:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800e66c:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e670:	f7ff f851 	bl	800d716 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e674:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800e678:	f104 0018 	add.w	r0, r4, #24
 800e67c:	f7ff f84b 	bl	800d716 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800e680:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e684:	2260      	movs	r2, #96	; 0x60
 800e686:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800e688:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e68a:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800e68c:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800e68e:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800e692:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e696:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800e69a:	f016 f973 	bl	8024984 <memset>
 800e69e:	4b0b      	ldr	r3, [pc, #44]	; (800e6cc <prvInitialiseNewTask.isra.0+0xbc>)
 800e6a0:	65e3      	str	r3, [r4, #92]	; 0x5c
 800e6a2:	4b0b      	ldr	r3, [pc, #44]	; (800e6d0 <prvInitialiseNewTask.isra.0+0xc0>)
 800e6a4:	6623      	str	r3, [r4, #96]	; 0x60
 800e6a6:	4b0b      	ldr	r3, [pc, #44]	; (800e6d4 <prvInitialiseNewTask.isra.0+0xc4>)
 800e6a8:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e6aa:	463a      	mov	r2, r7
 800e6ac:	4631      	mov	r1, r6
 800e6ae:	4648      	mov	r0, r9
 800e6b0:	f7ff f8a6 	bl	800d800 <pxPortInitialiseStack>
 800e6b4:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800e6b6:	f1b8 0f00 	cmp.w	r8, #0
 800e6ba:	d001      	beq.n	800e6c0 <prvInitialiseNewTask.isra.0+0xb0>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800e6bc:	f8c8 4000 	str.w	r4, [r8]
}
 800e6c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800e6c4:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800e6c8:	e7c7      	b.n	800e65a <prvInitialiseNewTask.isra.0+0x4a>
 800e6ca:	bf00      	nop
 800e6cc:	0802b71c 	.word	0x0802b71c
 800e6d0:	0802b73c 	.word	0x0802b73c
 800e6d4:	0802b6fc 	.word	0x0802b6fc

0800e6d8 <prvDeleteTCB>:
	{
 800e6d8:	b510      	push	{r4, lr}
 800e6da:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800e6dc:	3058      	adds	r0, #88	; 0x58
 800e6de:	f016 fcff 	bl	80250e0 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800e6e2:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
 800e6e6:	b93b      	cbnz	r3, 800e6f8 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 800e6e8:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e6ea:	f7fe ffcb 	bl	800d684 <vPortFree>
				vPortFree( pxTCB );
 800e6ee:	4620      	mov	r0, r4
	}
 800e6f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800e6f4:	f7fe bfc6 	b.w	800d684 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800e6f8:	2b01      	cmp	r3, #1
 800e6fa:	d0f8      	beq.n	800e6ee <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800e6fc:	2b02      	cmp	r3, #2
 800e6fe:	d008      	beq.n	800e712 <prvDeleteTCB+0x3a>
 800e700:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e704:	f383 8811 	msr	BASEPRI, r3
 800e708:	f3bf 8f6f 	isb	sy
 800e70c:	f3bf 8f4f 	dsb	sy
 800e710:	e7fe      	b.n	800e710 <prvDeleteTCB+0x38>
	}
 800e712:	bd10      	pop	{r4, pc}

0800e714 <prvIdleTask>:
{
 800e714:	b580      	push	{r7, lr}
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e716:	4e14      	ldr	r6, [pc, #80]	; (800e768 <prvIdleTask+0x54>)
				taskYIELD();
 800e718:	4f14      	ldr	r7, [pc, #80]	; (800e76c <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e71a:	4c15      	ldr	r4, [pc, #84]	; (800e770 <prvIdleTask+0x5c>)
				--uxCurrentNumberOfTasks;
 800e71c:	4d15      	ldr	r5, [pc, #84]	; (800e774 <prvIdleTask+0x60>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e71e:	6823      	ldr	r3, [r4, #0]
 800e720:	b96b      	cbnz	r3, 800e73e <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800e722:	4b15      	ldr	r3, [pc, #84]	; (800e778 <prvIdleTask+0x64>)
 800e724:	681b      	ldr	r3, [r3, #0]
 800e726:	2b01      	cmp	r3, #1
 800e728:	d906      	bls.n	800e738 <prvIdleTask+0x24>
				taskYIELD();
 800e72a:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800e72e:	603b      	str	r3, [r7, #0]
 800e730:	f3bf 8f4f 	dsb	sy
 800e734:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 800e738:	f7f2 fe66 	bl	8001408 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 800e73c:	e7ed      	b.n	800e71a <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800e73e:	f7ff f889 	bl	800d854 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e742:	68f3      	ldr	r3, [r6, #12]
 800e744:	f8d3 800c 	ldr.w	r8, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e748:	f108 0004 	add.w	r0, r8, #4
 800e74c:	f7ff f809 	bl	800d762 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800e750:	682b      	ldr	r3, [r5, #0]
 800e752:	3b01      	subs	r3, #1
 800e754:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800e756:	6823      	ldr	r3, [r4, #0]
 800e758:	3b01      	subs	r3, #1
 800e75a:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 800e75c:	f7ff f89c 	bl	800d898 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800e760:	4640      	mov	r0, r8
 800e762:	f7ff ffb9 	bl	800e6d8 <prvDeleteTCB>
 800e766:	e7da      	b.n	800e71e <prvIdleTask+0xa>
 800e768:	2002093c 	.word	0x2002093c
 800e76c:	e000ed04 	.word	0xe000ed04
 800e770:	200208cc 	.word	0x200208cc
 800e774:	200208c8 	.word	0x200208c8
 800e778:	20020468 	.word	0x20020468

0800e77c <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800e77c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800e77e:	4b16      	ldr	r3, [pc, #88]	; (800e7d8 <prvAddCurrentTaskToDelayedList+0x5c>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e780:	4e16      	ldr	r6, [pc, #88]	; (800e7dc <prvAddCurrentTaskToDelayedList+0x60>)
const TickType_t xConstTickCount = xTickCount;
 800e782:	681d      	ldr	r5, [r3, #0]
{
 800e784:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e786:	6830      	ldr	r0, [r6, #0]
 800e788:	3004      	adds	r0, #4
{
 800e78a:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e78c:	f7fe ffe9 	bl	800d762 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800e790:	1c63      	adds	r3, r4, #1
 800e792:	4633      	mov	r3, r6
 800e794:	d107      	bne.n	800e7a6 <prvAddCurrentTaskToDelayedList+0x2a>
 800e796:	b137      	cbz	r7, 800e7a6 <prvAddCurrentTaskToDelayedList+0x2a>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e798:	6831      	ldr	r1, [r6, #0]
 800e79a:	4811      	ldr	r0, [pc, #68]	; (800e7e0 <prvAddCurrentTaskToDelayedList+0x64>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800e79c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e7a0:	3104      	adds	r1, #4
 800e7a2:	f7fe bfbb 	b.w	800d71c <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800e7a6:	681a      	ldr	r2, [r3, #0]
 800e7a8:	192c      	adds	r4, r5, r4
 800e7aa:	6054      	str	r4, [r2, #4]
			if( xTimeToWake < xConstTickCount )
 800e7ac:	d307      	bcc.n	800e7be <prvAddCurrentTaskToDelayedList+0x42>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e7ae:	4a0d      	ldr	r2, [pc, #52]	; (800e7e4 <prvAddCurrentTaskToDelayedList+0x68>)
 800e7b0:	6810      	ldr	r0, [r2, #0]
 800e7b2:	6819      	ldr	r1, [r3, #0]
}
 800e7b4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e7b8:	3104      	adds	r1, #4
 800e7ba:	f7fe bfbb 	b.w	800d734 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e7be:	4a0a      	ldr	r2, [pc, #40]	; (800e7e8 <prvAddCurrentTaskToDelayedList+0x6c>)
 800e7c0:	6810      	ldr	r0, [r2, #0]
 800e7c2:	6819      	ldr	r1, [r3, #0]
 800e7c4:	3104      	adds	r1, #4
 800e7c6:	f7fe ffb5 	bl	800d734 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800e7ca:	4b08      	ldr	r3, [pc, #32]	; (800e7ec <prvAddCurrentTaskToDelayedList+0x70>)
 800e7cc:	681a      	ldr	r2, [r3, #0]
 800e7ce:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 800e7d0:	bf88      	it	hi
 800e7d2:	601c      	strhi	r4, [r3, #0]
}
 800e7d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e7d6:	bf00      	nop
 800e7d8:	20020950 	.word	0x20020950
 800e7dc:	2002045c 	.word	0x2002045c
 800e7e0:	20020928 	.word	0x20020928
 800e7e4:	20020464 	.word	0x20020464
 800e7e8:	20020460 	.word	0x20020460
 800e7ec:	20020904 	.word	0x20020904

0800e7f0 <xTaskCreateStatic>:
	{
 800e7f0:	b570      	push	{r4, r5, r6, lr}
 800e7f2:	b086      	sub	sp, #24
 800e7f4:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800e7f8:	b945      	cbnz	r5, 800e80c <xTaskCreateStatic+0x1c>
 800e7fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7fe:	f383 8811 	msr	BASEPRI, r3
 800e802:	f3bf 8f6f 	isb	sy
 800e806:	f3bf 8f4f 	dsb	sy
 800e80a:	e7fe      	b.n	800e80a <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800e80c:	b944      	cbnz	r4, 800e820 <xTaskCreateStatic+0x30>
 800e80e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e812:	f383 8811 	msr	BASEPRI, r3
 800e816:	f3bf 8f6f 	isb	sy
 800e81a:	f3bf 8f4f 	dsb	sy
 800e81e:	e7fe      	b.n	800e81e <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800e820:	26c0      	movs	r6, #192	; 0xc0
 800e822:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800e824:	9e05      	ldr	r6, [sp, #20]
 800e826:	2ec0      	cmp	r6, #192	; 0xc0
 800e828:	d008      	beq.n	800e83c <xTaskCreateStatic+0x4c>
 800e82a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e82e:	f383 8811 	msr	BASEPRI, r3
 800e832:	f3bf 8f6f 	isb	sy
 800e836:	f3bf 8f4f 	dsb	sy
 800e83a:	e7fe      	b.n	800e83a <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800e83c:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800e83e:	2502      	movs	r5, #2
 800e840:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e844:	ad04      	add	r5, sp, #16
 800e846:	9501      	str	r5, [sp, #4]
 800e848:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800e84a:	9402      	str	r4, [sp, #8]
 800e84c:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800e84e:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e850:	f7ff fede 	bl	800e610 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800e854:	4620      	mov	r0, r4
 800e856:	f7ff fe49 	bl	800e4ec <prvAddNewTaskToReadyList>
	}
 800e85a:	9804      	ldr	r0, [sp, #16]
 800e85c:	b006      	add	sp, #24
 800e85e:	bd70      	pop	{r4, r5, r6, pc}

0800e860 <xTaskCreate>:
	{
 800e860:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e864:	4607      	mov	r7, r0
 800e866:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800e868:	0090      	lsls	r0, r2, #2
	{
 800e86a:	4688      	mov	r8, r1
 800e86c:	4616      	mov	r6, r2
 800e86e:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800e870:	f7fe fe76 	bl	800d560 <pvPortMalloc>
			if( pxStack != NULL )
 800e874:	4605      	mov	r5, r0
 800e876:	b1e8      	cbz	r0, 800e8b4 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800e878:	20c0      	movs	r0, #192	; 0xc0
 800e87a:	f7fe fe71 	bl	800d560 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800e87e:	4604      	mov	r4, r0
 800e880:	b1a8      	cbz	r0, 800e8ae <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800e882:	2300      	movs	r3, #0
 800e884:	f880 30bd 	strb.w	r3, [r0, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800e888:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 800e88a:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800e88c:	9301      	str	r3, [sp, #4]
 800e88e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e890:	9002      	str	r0, [sp, #8]
 800e892:	9300      	str	r3, [sp, #0]
 800e894:	4632      	mov	r2, r6
 800e896:	464b      	mov	r3, r9
 800e898:	4641      	mov	r1, r8
 800e89a:	4638      	mov	r0, r7
 800e89c:	f7ff feb8 	bl	800e610 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800e8a0:	4620      	mov	r0, r4
 800e8a2:	f7ff fe23 	bl	800e4ec <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800e8a6:	2001      	movs	r0, #1
	}
 800e8a8:	b005      	add	sp, #20
 800e8aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800e8ae:	4628      	mov	r0, r5
 800e8b0:	f7fe fee8 	bl	800d684 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800e8b4:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800e8b8:	e7f6      	b.n	800e8a8 <xTaskCreate+0x48>
	...

0800e8bc <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800e8bc:	4a02      	ldr	r2, [pc, #8]	; (800e8c8 <vTaskSuspendAll+0xc>)
 800e8be:	6813      	ldr	r3, [r2, #0]
 800e8c0:	3301      	adds	r3, #1
 800e8c2:	6013      	str	r3, [r2, #0]
}
 800e8c4:	4770      	bx	lr
 800e8c6:	bf00      	nop
 800e8c8:	200208d0 	.word	0x200208d0

0800e8cc <xTaskGetTickCount>:
		xTicks = xTickCount;
 800e8cc:	4b01      	ldr	r3, [pc, #4]	; (800e8d4 <xTaskGetTickCount+0x8>)
 800e8ce:	6818      	ldr	r0, [r3, #0]
}
 800e8d0:	4770      	bx	lr
 800e8d2:	bf00      	nop
 800e8d4:	20020950 	.word	0x20020950

0800e8d8 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e8d8:	4b3f      	ldr	r3, [pc, #252]	; (800e9d8 <xTaskIncrementTick+0x100>)
 800e8da:	681b      	ldr	r3, [r3, #0]
{
 800e8dc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e8e0:	2b00      	cmp	r3, #0
 800e8e2:	d173      	bne.n	800e9cc <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800e8e4:	4b3d      	ldr	r3, [pc, #244]	; (800e9dc <xTaskIncrementTick+0x104>)
 800e8e6:	681d      	ldr	r5, [r3, #0]
 800e8e8:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 800e8ea:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800e8ec:	b9bd      	cbnz	r5, 800e91e <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800e8ee:	4b3c      	ldr	r3, [pc, #240]	; (800e9e0 <xTaskIncrementTick+0x108>)
 800e8f0:	681a      	ldr	r2, [r3, #0]
 800e8f2:	6812      	ldr	r2, [r2, #0]
 800e8f4:	b142      	cbz	r2, 800e908 <xTaskIncrementTick+0x30>
 800e8f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e8fa:	f383 8811 	msr	BASEPRI, r3
 800e8fe:	f3bf 8f6f 	isb	sy
 800e902:	f3bf 8f4f 	dsb	sy
 800e906:	e7fe      	b.n	800e906 <xTaskIncrementTick+0x2e>
 800e908:	4a36      	ldr	r2, [pc, #216]	; (800e9e4 <xTaskIncrementTick+0x10c>)
 800e90a:	6819      	ldr	r1, [r3, #0]
 800e90c:	6810      	ldr	r0, [r2, #0]
 800e90e:	6018      	str	r0, [r3, #0]
 800e910:	6011      	str	r1, [r2, #0]
 800e912:	4a35      	ldr	r2, [pc, #212]	; (800e9e8 <xTaskIncrementTick+0x110>)
 800e914:	6813      	ldr	r3, [r2, #0]
 800e916:	3301      	adds	r3, #1
 800e918:	6013      	str	r3, [r2, #0]
 800e91a:	f7ff fe67 	bl	800e5ec <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800e91e:	4e33      	ldr	r6, [pc, #204]	; (800e9ec <xTaskIncrementTick+0x114>)
 800e920:	4f33      	ldr	r7, [pc, #204]	; (800e9f0 <xTaskIncrementTick+0x118>)
 800e922:	6833      	ldr	r3, [r6, #0]
 800e924:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800e9fc <xTaskIncrementTick+0x124>
 800e928:	429d      	cmp	r5, r3
BaseType_t xSwitchRequired = pdFALSE;
 800e92a:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 800e92e:	d211      	bcs.n	800e954 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800e930:	f8d8 3000 	ldr.w	r3, [r8]
 800e934:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e936:	2314      	movs	r3, #20
 800e938:	4353      	muls	r3, r2
 800e93a:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 800e93c:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 800e93e:	4b2d      	ldr	r3, [pc, #180]	; (800e9f4 <xTaskIncrementTick+0x11c>)
 800e940:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 800e942:	bf28      	it	cs
 800e944:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 800e946:	2b00      	cmp	r3, #0
 800e948:	bf18      	it	ne
 800e94a:	2401      	movne	r4, #1
}
 800e94c:	4620      	mov	r0, r4
 800e94e:	b003      	add	sp, #12
 800e950:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e954:	f8df 9088 	ldr.w	r9, [pc, #136]	; 800e9e0 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800e958:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 800ea00 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e95c:	f8d9 3000 	ldr.w	r3, [r9]
 800e960:	681b      	ldr	r3, [r3, #0]
 800e962:	b91b      	cbnz	r3, 800e96c <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e964:	f04f 33ff 	mov.w	r3, #4294967295
 800e968:	6033      	str	r3, [r6, #0]
					break;
 800e96a:	e7e1      	b.n	800e930 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e96c:	f8d9 3000 	ldr.w	r3, [r9]
 800e970:	68db      	ldr	r3, [r3, #12]
 800e972:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800e976:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 800e97a:	4295      	cmp	r5, r2
 800e97c:	d201      	bcs.n	800e982 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800e97e:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800e980:	e7d6      	b.n	800e930 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e982:	f10b 0104 	add.w	r1, fp, #4
 800e986:	4608      	mov	r0, r1
 800e988:	9101      	str	r1, [sp, #4]
 800e98a:	f7fe feea 	bl	800d762 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800e98e:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 800e992:	9901      	ldr	r1, [sp, #4]
 800e994:	b122      	cbz	r2, 800e9a0 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e996:	f10b 0018 	add.w	r0, fp, #24
 800e99a:	f7fe fee2 	bl	800d762 <uxListRemove>
 800e99e:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800e9a0:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 800e9a4:	f8da 2000 	ldr.w	r2, [sl]
 800e9a8:	2314      	movs	r3, #20
 800e9aa:	4290      	cmp	r0, r2
 800e9ac:	bf88      	it	hi
 800e9ae:	f8ca 0000 	strhi.w	r0, [sl]
 800e9b2:	fb03 7000 	mla	r0, r3, r0, r7
 800e9b6:	f7fe feb1 	bl	800d71c <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e9ba:	f8d8 1000 	ldr.w	r1, [r8]
 800e9be:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 800e9c2:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 800e9c4:	429a      	cmp	r2, r3
 800e9c6:	bf28      	it	cs
 800e9c8:	2401      	movcs	r4, #1
 800e9ca:	e7c7      	b.n	800e95c <xTaskIncrementTick+0x84>
		++xPendedTicks;
 800e9cc:	4a0a      	ldr	r2, [pc, #40]	; (800e9f8 <xTaskIncrementTick+0x120>)
 800e9ce:	6813      	ldr	r3, [r2, #0]
 800e9d0:	3301      	adds	r3, #1
 800e9d2:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 800e9d4:	2400      	movs	r4, #0
	return xSwitchRequired;
 800e9d6:	e7b9      	b.n	800e94c <xTaskIncrementTick+0x74>
 800e9d8:	200208d0 	.word	0x200208d0
 800e9dc:	20020950 	.word	0x20020950
 800e9e0:	20020460 	.word	0x20020460
 800e9e4:	20020464 	.word	0x20020464
 800e9e8:	20020908 	.word	0x20020908
 800e9ec:	20020904 	.word	0x20020904
 800e9f0:	20020468 	.word	0x20020468
 800e9f4:	20020954 	.word	0x20020954
 800e9f8:	2002090c 	.word	0x2002090c
 800e9fc:	2002045c 	.word	0x2002045c
 800ea00:	200208d8 	.word	0x200208d8

0800ea04 <xTaskResumeAll>:
{
 800ea04:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 800ea06:	4c30      	ldr	r4, [pc, #192]	; (800eac8 <xTaskResumeAll+0xc4>)
 800ea08:	6823      	ldr	r3, [r4, #0]
 800ea0a:	b943      	cbnz	r3, 800ea1e <xTaskResumeAll+0x1a>
 800ea0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea10:	f383 8811 	msr	BASEPRI, r3
 800ea14:	f3bf 8f6f 	isb	sy
 800ea18:	f3bf 8f4f 	dsb	sy
 800ea1c:	e7fe      	b.n	800ea1c <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 800ea1e:	f7fe ff19 	bl	800d854 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800ea22:	6823      	ldr	r3, [r4, #0]
 800ea24:	3b01      	subs	r3, #1
 800ea26:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ea28:	6824      	ldr	r4, [r4, #0]
 800ea2a:	b12c      	cbz	r4, 800ea38 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 800ea2c:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800ea2e:	f7fe ff33 	bl	800d898 <vPortExitCritical>
}
 800ea32:	4620      	mov	r0, r4
 800ea34:	b003      	add	sp, #12
 800ea36:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800ea38:	4b24      	ldr	r3, [pc, #144]	; (800eacc <xTaskResumeAll+0xc8>)
 800ea3a:	681b      	ldr	r3, [r3, #0]
 800ea3c:	2b00      	cmp	r3, #0
 800ea3e:	d0f5      	beq.n	800ea2c <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800ea40:	4d23      	ldr	r5, [pc, #140]	; (800ead0 <xTaskResumeAll+0xcc>)
					prvAddTaskToReadyList( pxTCB );
 800ea42:	4e24      	ldr	r6, [pc, #144]	; (800ead4 <xTaskResumeAll+0xd0>)
 800ea44:	4f24      	ldr	r7, [pc, #144]	; (800ead8 <xTaskResumeAll+0xd4>)
 800ea46:	e01e      	b.n	800ea86 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ea48:	68eb      	ldr	r3, [r5, #12]
 800ea4a:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800ea4c:	f104 0018 	add.w	r0, r4, #24
 800ea50:	f7fe fe87 	bl	800d762 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ea54:	1d21      	adds	r1, r4, #4
 800ea56:	4608      	mov	r0, r1
 800ea58:	9101      	str	r1, [sp, #4]
 800ea5a:	f7fe fe82 	bl	800d762 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800ea5e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ea60:	6832      	ldr	r2, [r6, #0]
 800ea62:	9901      	ldr	r1, [sp, #4]
 800ea64:	2014      	movs	r0, #20
 800ea66:	4293      	cmp	r3, r2
 800ea68:	fb00 7003 	mla	r0, r0, r3, r7
 800ea6c:	bf88      	it	hi
 800ea6e:	6033      	strhi	r3, [r6, #0]
 800ea70:	f7fe fe54 	bl	800d71c <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800ea74:	4b19      	ldr	r3, [pc, #100]	; (800eadc <xTaskResumeAll+0xd8>)
 800ea76:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ea78:	681b      	ldr	r3, [r3, #0]
 800ea7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ea7c:	429a      	cmp	r2, r3
 800ea7e:	d302      	bcc.n	800ea86 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 800ea80:	4b17      	ldr	r3, [pc, #92]	; (800eae0 <xTaskResumeAll+0xdc>)
 800ea82:	2201      	movs	r2, #1
 800ea84:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800ea86:	682b      	ldr	r3, [r5, #0]
 800ea88:	2b00      	cmp	r3, #0
 800ea8a:	d1dd      	bne.n	800ea48 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 800ea8c:	b10c      	cbz	r4, 800ea92 <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 800ea8e:	f7ff fdad 	bl	800e5ec <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800ea92:	4d14      	ldr	r5, [pc, #80]	; (800eae4 <xTaskResumeAll+0xe0>)
 800ea94:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800ea96:	b144      	cbz	r4, 800eaaa <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 800ea98:	4e11      	ldr	r6, [pc, #68]	; (800eae0 <xTaskResumeAll+0xdc>)
 800ea9a:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800ea9c:	f7ff ff1c 	bl	800e8d8 <xTaskIncrementTick>
 800eaa0:	b100      	cbz	r0, 800eaa4 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 800eaa2:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800eaa4:	3c01      	subs	r4, #1
 800eaa6:	d1f9      	bne.n	800ea9c <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 800eaa8:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800eaaa:	4b0d      	ldr	r3, [pc, #52]	; (800eae0 <xTaskResumeAll+0xdc>)
 800eaac:	681b      	ldr	r3, [r3, #0]
 800eaae:	2b00      	cmp	r3, #0
 800eab0:	d0bc      	beq.n	800ea2c <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 800eab2:	4b0d      	ldr	r3, [pc, #52]	; (800eae8 <xTaskResumeAll+0xe4>)
 800eab4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eab8:	601a      	str	r2, [r3, #0]
 800eaba:	f3bf 8f4f 	dsb	sy
 800eabe:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800eac2:	2401      	movs	r4, #1
 800eac4:	e7b3      	b.n	800ea2e <xTaskResumeAll+0x2a>
 800eac6:	bf00      	nop
 800eac8:	200208d0 	.word	0x200208d0
 800eacc:	200208c8 	.word	0x200208c8
 800ead0:	20020910 	.word	0x20020910
 800ead4:	200208d8 	.word	0x200208d8
 800ead8:	20020468 	.word	0x20020468
 800eadc:	2002045c 	.word	0x2002045c
 800eae0:	20020954 	.word	0x20020954
 800eae4:	2002090c 	.word	0x2002090c
 800eae8:	e000ed04 	.word	0xe000ed04

0800eaec <vTaskDelay>:
	{
 800eaec:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800eaee:	b940      	cbnz	r0, 800eb02 <vTaskDelay+0x16>
			portYIELD_WITHIN_API();
 800eaf0:	4b0e      	ldr	r3, [pc, #56]	; (800eb2c <vTaskDelay+0x40>)
 800eaf2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eaf6:	601a      	str	r2, [r3, #0]
 800eaf8:	f3bf 8f4f 	dsb	sy
 800eafc:	f3bf 8f6f 	isb	sy
	}
 800eb00:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800eb02:	4b0b      	ldr	r3, [pc, #44]	; (800eb30 <vTaskDelay+0x44>)
 800eb04:	6819      	ldr	r1, [r3, #0]
 800eb06:	b141      	cbz	r1, 800eb1a <vTaskDelay+0x2e>
 800eb08:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb0c:	f383 8811 	msr	BASEPRI, r3
 800eb10:	f3bf 8f6f 	isb	sy
 800eb14:	f3bf 8f4f 	dsb	sy
 800eb18:	e7fe      	b.n	800eb18 <vTaskDelay+0x2c>
			vTaskSuspendAll();
 800eb1a:	f7ff fecf 	bl	800e8bc <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800eb1e:	f7ff fe2d 	bl	800e77c <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800eb22:	f7ff ff6f 	bl	800ea04 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800eb26:	2800      	cmp	r0, #0
 800eb28:	d0e2      	beq.n	800eaf0 <vTaskDelay+0x4>
 800eb2a:	e7e9      	b.n	800eb00 <vTaskDelay+0x14>
 800eb2c:	e000ed04 	.word	0xe000ed04
 800eb30:	200208d0 	.word	0x200208d0

0800eb34 <vTaskSetApplicationTaskTag>:
	{
 800eb34:	b538      	push	{r3, r4, r5, lr}
 800eb36:	460d      	mov	r5, r1
		if( xTask == NULL )
 800eb38:	4604      	mov	r4, r0
 800eb3a:	b908      	cbnz	r0, 800eb40 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 800eb3c:	4b04      	ldr	r3, [pc, #16]	; (800eb50 <vTaskSetApplicationTaskTag+0x1c>)
 800eb3e:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 800eb40:	f7fe fe88 	bl	800d854 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 800eb44:	6565      	str	r5, [r4, #84]	; 0x54
	}
 800eb46:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 800eb4a:	f7fe bea5 	b.w	800d898 <vPortExitCritical>
 800eb4e:	bf00      	nop
 800eb50:	2002045c 	.word	0x2002045c

0800eb54 <xTaskCallApplicationTaskHook>:
	{
 800eb54:	4603      	mov	r3, r0
 800eb56:	4608      	mov	r0, r1
		if( xTask == NULL )
 800eb58:	b90b      	cbnz	r3, 800eb5e <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 800eb5a:	4b03      	ldr	r3, [pc, #12]	; (800eb68 <xTaskCallApplicationTaskHook+0x14>)
 800eb5c:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 800eb5e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800eb60:	b103      	cbz	r3, 800eb64 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 800eb62:	4718      	bx	r3
	}
 800eb64:	4618      	mov	r0, r3
 800eb66:	4770      	bx	lr
 800eb68:	2002045c 	.word	0x2002045c

0800eb6c <vTaskStartScheduler>:
{
 800eb6c:	b510      	push	{r4, lr}
 800eb6e:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800eb70:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800eb72:	aa07      	add	r2, sp, #28
 800eb74:	a906      	add	r1, sp, #24
 800eb76:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800eb78:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800eb7c:	f7fe fcb4 	bl	800d4e8 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800eb80:	9b05      	ldr	r3, [sp, #20]
 800eb82:	9302      	str	r3, [sp, #8]
 800eb84:	9b06      	ldr	r3, [sp, #24]
 800eb86:	9a07      	ldr	r2, [sp, #28]
 800eb88:	4919      	ldr	r1, [pc, #100]	; (800ebf0 <vTaskStartScheduler+0x84>)
 800eb8a:	481a      	ldr	r0, [pc, #104]	; (800ebf4 <vTaskStartScheduler+0x88>)
 800eb8c:	e9cd 4300 	strd	r4, r3, [sp]
 800eb90:	4623      	mov	r3, r4
 800eb92:	f7ff fe2d 	bl	800e7f0 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800eb96:	b1f0      	cbz	r0, 800ebd6 <vTaskStartScheduler+0x6a>
			xReturn = xTimerCreateTimerTask();
 800eb98:	f000 fa92 	bl	800f0c0 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800eb9c:	2801      	cmp	r0, #1
 800eb9e:	d11c      	bne.n	800ebda <vTaskStartScheduler+0x6e>
 800eba0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eba4:	f383 8811 	msr	BASEPRI, r3
 800eba8:	f3bf 8f6f 	isb	sy
 800ebac:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800ebb0:	4a11      	ldr	r2, [pc, #68]	; (800ebf8 <vTaskStartScheduler+0x8c>)
 800ebb2:	4912      	ldr	r1, [pc, #72]	; (800ebfc <vTaskStartScheduler+0x90>)
 800ebb4:	6813      	ldr	r3, [r2, #0]
 800ebb6:	3358      	adds	r3, #88	; 0x58
 800ebb8:	600b      	str	r3, [r1, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800ebba:	4b11      	ldr	r3, [pc, #68]	; (800ec00 <vTaskStartScheduler+0x94>)
 800ebbc:	f04f 31ff 	mov.w	r1, #4294967295
 800ebc0:	6019      	str	r1, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800ebc2:	4b10      	ldr	r3, [pc, #64]	; (800ec04 <vTaskStartScheduler+0x98>)
 800ebc4:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800ebc6:	4b10      	ldr	r3, [pc, #64]	; (800ec08 <vTaskStartScheduler+0x9c>)
 800ebc8:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 800ebca:	6810      	ldr	r0, [r2, #0]
 800ebcc:	4621      	mov	r1, r4
 800ebce:	f7ff ffc1 	bl	800eb54 <xTaskCallApplicationTaskHook>
		if( xPortStartScheduler() != pdFALSE )
 800ebd2:	f7fe fed7 	bl	800d984 <xPortStartScheduler>
}
 800ebd6:	b008      	add	sp, #32
 800ebd8:	bd10      	pop	{r4, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800ebda:	3001      	adds	r0, #1
 800ebdc:	d1fb      	bne.n	800ebd6 <vTaskStartScheduler+0x6a>
 800ebde:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ebe2:	f383 8811 	msr	BASEPRI, r3
 800ebe6:	f3bf 8f6f 	isb	sy
 800ebea:	f3bf 8f4f 	dsb	sy
 800ebee:	e7fe      	b.n	800ebee <vTaskStartScheduler+0x82>
 800ebf0:	08028ae1 	.word	0x08028ae1
 800ebf4:	0800e715 	.word	0x0800e715
 800ebf8:	2002045c 	.word	0x2002045c
 800ebfc:	200000dc 	.word	0x200000dc
 800ec00:	20020904 	.word	0x20020904
 800ec04:	20020924 	.word	0x20020924
 800ec08:	20020950 	.word	0x20020950

0800ec0c <vTaskSwitchContext>:
{
 800ec0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800ec0e:	4b1e      	ldr	r3, [pc, #120]	; (800ec88 <vTaskSwitchContext+0x7c>)
 800ec10:	681a      	ldr	r2, [r3, #0]
 800ec12:	4b1e      	ldr	r3, [pc, #120]	; (800ec8c <vTaskSwitchContext+0x80>)
 800ec14:	b112      	cbz	r2, 800ec1c <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800ec16:	2201      	movs	r2, #1
 800ec18:	601a      	str	r2, [r3, #0]
}
 800ec1a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 800ec1c:	4c1c      	ldr	r4, [pc, #112]	; (800ec90 <vTaskSwitchContext+0x84>)
		xYieldPending = pdFALSE;
 800ec1e:	601a      	str	r2, [r3, #0]
		traceTASK_SWITCHED_OUT();
 800ec20:	6820      	ldr	r0, [r4, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ec22:	4e1c      	ldr	r6, [pc, #112]	; (800ec94 <vTaskSwitchContext+0x88>)
		traceTASK_SWITCHED_OUT();
 800ec24:	2101      	movs	r1, #1
 800ec26:	f7ff ff95 	bl	800eb54 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ec2a:	4a1b      	ldr	r2, [pc, #108]	; (800ec98 <vTaskSwitchContext+0x8c>)
 800ec2c:	6833      	ldr	r3, [r6, #0]
 800ec2e:	f04f 0c14 	mov.w	ip, #20
 800ec32:	4617      	mov	r7, r2
 800ec34:	fb0c f103 	mul.w	r1, ip, r3
 800ec38:	1850      	adds	r0, r2, r1
 800ec3a:	5855      	ldr	r5, [r2, r1]
 800ec3c:	b1c5      	cbz	r5, 800ec70 <vTaskSwitchContext+0x64>
 800ec3e:	6845      	ldr	r5, [r0, #4]
 800ec40:	3108      	adds	r1, #8
 800ec42:	686d      	ldr	r5, [r5, #4]
 800ec44:	6045      	str	r5, [r0, #4]
 800ec46:	440a      	add	r2, r1
 800ec48:	4295      	cmp	r5, r2
 800ec4a:	bf04      	itt	eq
 800ec4c:	686a      	ldreq	r2, [r5, #4]
 800ec4e:	6042      	streq	r2, [r0, #4]
 800ec50:	2214      	movs	r2, #20
 800ec52:	fb02 7203 	mla	r2, r2, r3, r7
		traceTASK_SWITCHED_IN();
 800ec56:	2100      	movs	r1, #0
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ec58:	6852      	ldr	r2, [r2, #4]
 800ec5a:	68d2      	ldr	r2, [r2, #12]
 800ec5c:	6022      	str	r2, [r4, #0]
 800ec5e:	6033      	str	r3, [r6, #0]
		traceTASK_SWITCHED_IN();
 800ec60:	6820      	ldr	r0, [r4, #0]
 800ec62:	f7ff ff77 	bl	800eb54 <xTaskCallApplicationTaskHook>
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800ec66:	6823      	ldr	r3, [r4, #0]
 800ec68:	4a0c      	ldr	r2, [pc, #48]	; (800ec9c <vTaskSwitchContext+0x90>)
 800ec6a:	3358      	adds	r3, #88	; 0x58
 800ec6c:	6013      	str	r3, [r2, #0]
}
 800ec6e:	e7d4      	b.n	800ec1a <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ec70:	b943      	cbnz	r3, 800ec84 <vTaskSwitchContext+0x78>
 800ec72:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec76:	f383 8811 	msr	BASEPRI, r3
 800ec7a:	f3bf 8f6f 	isb	sy
 800ec7e:	f3bf 8f4f 	dsb	sy
 800ec82:	e7fe      	b.n	800ec82 <vTaskSwitchContext+0x76>
 800ec84:	3b01      	subs	r3, #1
 800ec86:	e7d5      	b.n	800ec34 <vTaskSwitchContext+0x28>
 800ec88:	200208d0 	.word	0x200208d0
 800ec8c:	20020954 	.word	0x20020954
 800ec90:	2002045c 	.word	0x2002045c
 800ec94:	200208d8 	.word	0x200208d8
 800ec98:	20020468 	.word	0x20020468
 800ec9c:	200000dc 	.word	0x200000dc

0800eca0 <vTaskPlaceOnEventList>:
{
 800eca0:	b510      	push	{r4, lr}
 800eca2:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800eca4:	b940      	cbnz	r0, 800ecb8 <vTaskPlaceOnEventList+0x18>
 800eca6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecaa:	f383 8811 	msr	BASEPRI, r3
 800ecae:	f3bf 8f6f 	isb	sy
 800ecb2:	f3bf 8f4f 	dsb	sy
 800ecb6:	e7fe      	b.n	800ecb6 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800ecb8:	4b05      	ldr	r3, [pc, #20]	; (800ecd0 <vTaskPlaceOnEventList+0x30>)
 800ecba:	6819      	ldr	r1, [r3, #0]
 800ecbc:	3118      	adds	r1, #24
 800ecbe:	f7fe fd39 	bl	800d734 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800ecc2:	4620      	mov	r0, r4
 800ecc4:	2101      	movs	r1, #1
}
 800ecc6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800ecca:	f7ff bd57 	b.w	800e77c <prvAddCurrentTaskToDelayedList>
 800ecce:	bf00      	nop
 800ecd0:	2002045c 	.word	0x2002045c

0800ecd4 <vTaskPlaceOnEventListRestricted>:
	{
 800ecd4:	b538      	push	{r3, r4, r5, lr}
 800ecd6:	460d      	mov	r5, r1
 800ecd8:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800ecda:	b940      	cbnz	r0, 800ecee <vTaskPlaceOnEventListRestricted+0x1a>
 800ecdc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ece0:	f383 8811 	msr	BASEPRI, r3
 800ece4:	f3bf 8f6f 	isb	sy
 800ece8:	f3bf 8f4f 	dsb	sy
 800ecec:	e7fe      	b.n	800ecec <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800ecee:	4b07      	ldr	r3, [pc, #28]	; (800ed0c <vTaskPlaceOnEventListRestricted+0x38>)
 800ecf0:	6819      	ldr	r1, [r3, #0]
 800ecf2:	3118      	adds	r1, #24
 800ecf4:	f7fe fd12 	bl	800d71c <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800ecf8:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800ecfa:	4621      	mov	r1, r4
 800ecfc:	bf0c      	ite	eq
 800ecfe:	4628      	moveq	r0, r5
 800ed00:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800ed04:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800ed08:	f7ff bd38 	b.w	800e77c <prvAddCurrentTaskToDelayedList>
 800ed0c:	2002045c 	.word	0x2002045c

0800ed10 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ed10:	68c3      	ldr	r3, [r0, #12]
{
 800ed12:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ed14:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800ed16:	b944      	cbnz	r4, 800ed2a <xTaskRemoveFromEventList+0x1a>
 800ed18:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed1c:	f383 8811 	msr	BASEPRI, r3
 800ed20:	f3bf 8f6f 	isb	sy
 800ed24:	f3bf 8f4f 	dsb	sy
 800ed28:	e7fe      	b.n	800ed28 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800ed2a:	f104 0118 	add.w	r1, r4, #24
 800ed2e:	4608      	mov	r0, r1
 800ed30:	9101      	str	r1, [sp, #4]
 800ed32:	f7fe fd16 	bl	800d762 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ed36:	4b12      	ldr	r3, [pc, #72]	; (800ed80 <xTaskRemoveFromEventList+0x70>)
 800ed38:	9901      	ldr	r1, [sp, #4]
 800ed3a:	681b      	ldr	r3, [r3, #0]
 800ed3c:	b9eb      	cbnz	r3, 800ed7a <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800ed3e:	1d21      	adds	r1, r4, #4
 800ed40:	4608      	mov	r0, r1
 800ed42:	9101      	str	r1, [sp, #4]
 800ed44:	f7fe fd0d 	bl	800d762 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800ed48:	4a0e      	ldr	r2, [pc, #56]	; (800ed84 <xTaskRemoveFromEventList+0x74>)
 800ed4a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ed4c:	6810      	ldr	r0, [r2, #0]
 800ed4e:	9901      	ldr	r1, [sp, #4]
 800ed50:	4283      	cmp	r3, r0
 800ed52:	bf88      	it	hi
 800ed54:	6013      	strhi	r3, [r2, #0]
 800ed56:	4a0c      	ldr	r2, [pc, #48]	; (800ed88 <xTaskRemoveFromEventList+0x78>)
 800ed58:	2014      	movs	r0, #20
 800ed5a:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800ed5e:	f7fe fcdd 	bl	800d71c <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800ed62:	4b0a      	ldr	r3, [pc, #40]	; (800ed8c <xTaskRemoveFromEventList+0x7c>)
 800ed64:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ed66:	681b      	ldr	r3, [r3, #0]
 800ed68:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ed6a:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800ed6c:	bf85      	ittet	hi
 800ed6e:	4b08      	ldrhi	r3, [pc, #32]	; (800ed90 <xTaskRemoveFromEventList+0x80>)
 800ed70:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800ed72:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800ed74:	6018      	strhi	r0, [r3, #0]
}
 800ed76:	b002      	add	sp, #8
 800ed78:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800ed7a:	4806      	ldr	r0, [pc, #24]	; (800ed94 <xTaskRemoveFromEventList+0x84>)
 800ed7c:	e7ef      	b.n	800ed5e <xTaskRemoveFromEventList+0x4e>
 800ed7e:	bf00      	nop
 800ed80:	200208d0 	.word	0x200208d0
 800ed84:	200208d8 	.word	0x200208d8
 800ed88:	20020468 	.word	0x20020468
 800ed8c:	2002045c 	.word	0x2002045c
 800ed90:	20020954 	.word	0x20020954
 800ed94:	20020910 	.word	0x20020910

0800ed98 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800ed98:	4b03      	ldr	r3, [pc, #12]	; (800eda8 <vTaskInternalSetTimeOutState+0x10>)
 800ed9a:	681b      	ldr	r3, [r3, #0]
 800ed9c:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800ed9e:	4b03      	ldr	r3, [pc, #12]	; (800edac <vTaskInternalSetTimeOutState+0x14>)
 800eda0:	681b      	ldr	r3, [r3, #0]
 800eda2:	6043      	str	r3, [r0, #4]
}
 800eda4:	4770      	bx	lr
 800eda6:	bf00      	nop
 800eda8:	20020908 	.word	0x20020908
 800edac:	20020950 	.word	0x20020950

0800edb0 <xTaskCheckForTimeOut>:
{
 800edb0:	b570      	push	{r4, r5, r6, lr}
 800edb2:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800edb4:	4605      	mov	r5, r0
 800edb6:	b940      	cbnz	r0, 800edca <xTaskCheckForTimeOut+0x1a>
 800edb8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800edbc:	f383 8811 	msr	BASEPRI, r3
 800edc0:	f3bf 8f6f 	isb	sy
 800edc4:	f3bf 8f4f 	dsb	sy
 800edc8:	e7fe      	b.n	800edc8 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800edca:	b941      	cbnz	r1, 800edde <xTaskCheckForTimeOut+0x2e>
 800edcc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800edd0:	f383 8811 	msr	BASEPRI, r3
 800edd4:	f3bf 8f6f 	isb	sy
 800edd8:	f3bf 8f4f 	dsb	sy
 800eddc:	e7fe      	b.n	800eddc <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800edde:	f7fe fd39 	bl	800d854 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800ede2:	4b0f      	ldr	r3, [pc, #60]	; (800ee20 <xTaskCheckForTimeOut+0x70>)
 800ede4:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800ede6:	6823      	ldr	r3, [r4, #0]
 800ede8:	1c5a      	adds	r2, r3, #1
 800edea:	d010      	beq.n	800ee0e <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800edec:	480d      	ldr	r0, [pc, #52]	; (800ee24 <xTaskCheckForTimeOut+0x74>)
 800edee:	682e      	ldr	r6, [r5, #0]
 800edf0:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800edf2:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800edf4:	4286      	cmp	r6, r0
 800edf6:	d001      	beq.n	800edfc <xTaskCheckForTimeOut+0x4c>
 800edf8:	428a      	cmp	r2, r1
 800edfa:	d90f      	bls.n	800ee1c <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800edfc:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800edfe:	4283      	cmp	r3, r0
 800ee00:	d90a      	bls.n	800ee18 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800ee02:	1a5b      	subs	r3, r3, r1
 800ee04:	4413      	add	r3, r2
 800ee06:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800ee08:	4628      	mov	r0, r5
 800ee0a:	f7ff ffc5 	bl	800ed98 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800ee0e:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800ee10:	f7fe fd42 	bl	800d898 <vPortExitCritical>
}
 800ee14:	4620      	mov	r0, r4
 800ee16:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800ee18:	2300      	movs	r3, #0
 800ee1a:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800ee1c:	2401      	movs	r4, #1
 800ee1e:	e7f7      	b.n	800ee10 <xTaskCheckForTimeOut+0x60>
 800ee20:	20020950 	.word	0x20020950
 800ee24:	20020908 	.word	0x20020908

0800ee28 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800ee28:	4b01      	ldr	r3, [pc, #4]	; (800ee30 <vTaskMissedYield+0x8>)
 800ee2a:	2201      	movs	r2, #1
 800ee2c:	601a      	str	r2, [r3, #0]
}
 800ee2e:	4770      	bx	lr
 800ee30:	20020954 	.word	0x20020954

0800ee34 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800ee34:	4b05      	ldr	r3, [pc, #20]	; (800ee4c <xTaskGetSchedulerState+0x18>)
 800ee36:	681b      	ldr	r3, [r3, #0]
 800ee38:	b133      	cbz	r3, 800ee48 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ee3a:	4b05      	ldr	r3, [pc, #20]	; (800ee50 <xTaskGetSchedulerState+0x1c>)
 800ee3c:	681b      	ldr	r3, [r3, #0]
 800ee3e:	2b00      	cmp	r3, #0
				xReturn = taskSCHEDULER_SUSPENDED;
 800ee40:	bf0c      	ite	eq
 800ee42:	2002      	moveq	r0, #2
 800ee44:	2000      	movne	r0, #0
 800ee46:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800ee48:	2001      	movs	r0, #1
	}
 800ee4a:	4770      	bx	lr
 800ee4c:	20020924 	.word	0x20020924
 800ee50:	200208d0 	.word	0x200208d0

0800ee54 <xTaskPriorityInherit>:
	{
 800ee54:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800ee56:	4604      	mov	r4, r0
 800ee58:	b350      	cbz	r0, 800eeb0 <xTaskPriorityInherit+0x5c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800ee5a:	4a1c      	ldr	r2, [pc, #112]	; (800eecc <xTaskPriorityInherit+0x78>)
 800ee5c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ee5e:	6811      	ldr	r1, [r2, #0]
 800ee60:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 800ee62:	428b      	cmp	r3, r1
 800ee64:	4616      	mov	r6, r2
 800ee66:	d229      	bcs.n	800eebc <xTaskPriorityInherit+0x68>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800ee68:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800ee6a:	4d19      	ldr	r5, [pc, #100]	; (800eed0 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800ee6c:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ee6e:	bfa1      	itttt	ge
 800ee70:	6832      	ldrge	r2, [r6, #0]
 800ee72:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800ee74:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800ee78:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800ee7a:	2214      	movs	r2, #20
 800ee7c:	fb02 5303 	mla	r3, r2, r3, r5
 800ee80:	6942      	ldr	r2, [r0, #20]
 800ee82:	429a      	cmp	r2, r3
 800ee84:	d116      	bne.n	800eeb4 <xTaskPriorityInherit+0x60>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ee86:	1d01      	adds	r1, r0, #4
 800ee88:	4608      	mov	r0, r1
 800ee8a:	9101      	str	r1, [sp, #4]
 800ee8c:	f7fe fc69 	bl	800d762 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ee90:	6833      	ldr	r3, [r6, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800ee92:	4a10      	ldr	r2, [pc, #64]	; (800eed4 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ee94:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800ee96:	6810      	ldr	r0, [r2, #0]
 800ee98:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ee9a:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800ee9c:	4283      	cmp	r3, r0
 800ee9e:	f04f 0014 	mov.w	r0, #20
 800eea2:	fb00 5003 	mla	r0, r0, r3, r5
 800eea6:	bf88      	it	hi
 800eea8:	6013      	strhi	r3, [r2, #0]
 800eeaa:	f7fe fc37 	bl	800d71c <vListInsertEnd>
				xReturn = pdTRUE;
 800eeae:	2001      	movs	r0, #1
	}
 800eeb0:	b002      	add	sp, #8
 800eeb2:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800eeb4:	6833      	ldr	r3, [r6, #0]
 800eeb6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eeb8:	62c3      	str	r3, [r0, #44]	; 0x2c
 800eeba:	e7f8      	b.n	800eeae <xTaskPriorityInherit+0x5a>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800eebc:	6813      	ldr	r3, [r2, #0]
 800eebe:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800eec0:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800eec2:	42a0      	cmp	r0, r4
 800eec4:	bf2c      	ite	cs
 800eec6:	2000      	movcs	r0, #0
 800eec8:	2001      	movcc	r0, #1
 800eeca:	e7f1      	b.n	800eeb0 <xTaskPriorityInherit+0x5c>
 800eecc:	2002045c 	.word	0x2002045c
 800eed0:	20020468 	.word	0x20020468
 800eed4:	200208d8 	.word	0x200208d8

0800eed8 <xTaskPriorityDisinherit>:
	{
 800eed8:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800eeda:	b910      	cbnz	r0, 800eee2 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800eedc:	2000      	movs	r0, #0
	}
 800eede:	b002      	add	sp, #8
 800eee0:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800eee2:	4b1c      	ldr	r3, [pc, #112]	; (800ef54 <xTaskPriorityDisinherit+0x7c>)
 800eee4:	681c      	ldr	r4, [r3, #0]
 800eee6:	4284      	cmp	r4, r0
 800eee8:	d008      	beq.n	800eefc <xTaskPriorityDisinherit+0x24>
 800eeea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eeee:	f383 8811 	msr	BASEPRI, r3
 800eef2:	f3bf 8f6f 	isb	sy
 800eef6:	f3bf 8f4f 	dsb	sy
 800eefa:	e7fe      	b.n	800eefa <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800eefc:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800eefe:	b943      	cbnz	r3, 800ef12 <xTaskPriorityDisinherit+0x3a>
 800ef00:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef04:	f383 8811 	msr	BASEPRI, r3
 800ef08:	f3bf 8f6f 	isb	sy
 800ef0c:	f3bf 8f4f 	dsb	sy
 800ef10:	e7fe      	b.n	800ef10 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ef12:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ef14:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800ef16:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ef18:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800ef1a:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ef1c:	d0de      	beq.n	800eedc <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800ef1e:	2b00      	cmp	r3, #0
 800ef20:	d1dc      	bne.n	800eedc <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ef22:	1d21      	adds	r1, r4, #4
 800ef24:	4608      	mov	r0, r1
 800ef26:	9101      	str	r1, [sp, #4]
 800ef28:	f7fe fc1b 	bl	800d762 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800ef2c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800ef2e:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800ef30:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ef32:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800ef36:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800ef38:	4a07      	ldr	r2, [pc, #28]	; (800ef58 <xTaskPriorityDisinherit+0x80>)
 800ef3a:	6810      	ldr	r0, [r2, #0]
 800ef3c:	4283      	cmp	r3, r0
 800ef3e:	bf88      	it	hi
 800ef40:	6013      	strhi	r3, [r2, #0]
 800ef42:	4a06      	ldr	r2, [pc, #24]	; (800ef5c <xTaskPriorityDisinherit+0x84>)
 800ef44:	2014      	movs	r0, #20
 800ef46:	fb00 2003 	mla	r0, r0, r3, r2
 800ef4a:	f7fe fbe7 	bl	800d71c <vListInsertEnd>
					xReturn = pdTRUE;
 800ef4e:	2001      	movs	r0, #1
		return xReturn;
 800ef50:	e7c5      	b.n	800eede <xTaskPriorityDisinherit+0x6>
 800ef52:	bf00      	nop
 800ef54:	2002045c 	.word	0x2002045c
 800ef58:	200208d8 	.word	0x200208d8
 800ef5c:	20020468 	.word	0x20020468

0800ef60 <vTaskPriorityDisinheritAfterTimeout>:
	{
 800ef60:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800ef62:	4604      	mov	r4, r0
 800ef64:	2800      	cmp	r0, #0
 800ef66:	d044      	beq.n	800eff2 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800ef68:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800ef6a:	b942      	cbnz	r2, 800ef7e <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800ef6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef70:	f383 8811 	msr	BASEPRI, r3
 800ef74:	f3bf 8f6f 	isb	sy
 800ef78:	f3bf 8f4f 	dsb	sy
 800ef7c:	e7fe      	b.n	800ef7c <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800ef7e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800ef80:	4299      	cmp	r1, r3
 800ef82:	bf38      	it	cc
 800ef84:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800ef86:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ef88:	428b      	cmp	r3, r1
 800ef8a:	d032      	beq.n	800eff2 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800ef8c:	2a01      	cmp	r2, #1
 800ef8e:	d130      	bne.n	800eff2 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800ef90:	4a19      	ldr	r2, [pc, #100]	; (800eff8 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800ef92:	6812      	ldr	r2, [r2, #0]
 800ef94:	4282      	cmp	r2, r0
 800ef96:	d108      	bne.n	800efaa <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800ef98:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef9c:	f383 8811 	msr	BASEPRI, r3
 800efa0:	f3bf 8f6f 	isb	sy
 800efa4:	f3bf 8f4f 	dsb	sy
 800efa8:	e7fe      	b.n	800efa8 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800efaa:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800efac:	4d13      	ldr	r5, [pc, #76]	; (800effc <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800efae:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800efb0:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800efb2:	f04f 0214 	mov.w	r2, #20
 800efb6:	fb02 5303 	mla	r3, r2, r3, r5
 800efba:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800efbc:	bfa4      	itt	ge
 800efbe:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800efc2:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800efc4:	429a      	cmp	r2, r3
 800efc6:	d114      	bne.n	800eff2 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800efc8:	1d01      	adds	r1, r0, #4
 800efca:	4608      	mov	r0, r1
 800efcc:	9101      	str	r1, [sp, #4]
 800efce:	f7fe fbc8 	bl	800d762 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800efd2:	4a0b      	ldr	r2, [pc, #44]	; (800f000 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800efd4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800efd6:	6810      	ldr	r0, [r2, #0]
 800efd8:	9901      	ldr	r1, [sp, #4]
 800efda:	4283      	cmp	r3, r0
 800efdc:	f04f 0014 	mov.w	r0, #20
 800efe0:	fb00 5003 	mla	r0, r0, r3, r5
 800efe4:	bf88      	it	hi
 800efe6:	6013      	strhi	r3, [r2, #0]
	}
 800efe8:	b003      	add	sp, #12
 800efea:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800efee:	f7fe bb95 	b.w	800d71c <vListInsertEnd>
	}
 800eff2:	b003      	add	sp, #12
 800eff4:	bd30      	pop	{r4, r5, pc}
 800eff6:	bf00      	nop
 800eff8:	2002045c 	.word	0x2002045c
 800effc:	20020468 	.word	0x20020468
 800f000:	200208d8 	.word	0x200208d8

0800f004 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800f004:	4b04      	ldr	r3, [pc, #16]	; (800f018 <pvTaskIncrementMutexHeldCount+0x14>)
 800f006:	681a      	ldr	r2, [r3, #0]
 800f008:	b11a      	cbz	r2, 800f012 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800f00a:	6819      	ldr	r1, [r3, #0]
 800f00c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800f00e:	3201      	adds	r2, #1
 800f010:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800f012:	6818      	ldr	r0, [r3, #0]
	}
 800f014:	4770      	bx	lr
 800f016:	bf00      	nop
 800f018:	2002045c 	.word	0x2002045c

0800f01c <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800f01c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800f01e:	4c11      	ldr	r4, [pc, #68]	; (800f064 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800f020:	f7fe fc18 	bl	800d854 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800f024:	6825      	ldr	r5, [r4, #0]
 800f026:	b9bd      	cbnz	r5, 800f058 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800f028:	4f0f      	ldr	r7, [pc, #60]	; (800f068 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800f02a:	4e10      	ldr	r6, [pc, #64]	; (800f06c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800f02c:	4638      	mov	r0, r7
 800f02e:	f7fe fb67 	bl	800d700 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800f032:	4630      	mov	r0, r6
 800f034:	f7fe fb64 	bl	800d700 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800f038:	4b0d      	ldr	r3, [pc, #52]	; (800f070 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f03a:	4a0e      	ldr	r2, [pc, #56]	; (800f074 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800f03c:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800f03e:	4b0e      	ldr	r3, [pc, #56]	; (800f078 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f040:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800f042:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f044:	200a      	movs	r0, #10
 800f046:	4b0d      	ldr	r3, [pc, #52]	; (800f07c <prvCheckForValidListAndQueue+0x60>)
 800f048:	9500      	str	r5, [sp, #0]
 800f04a:	f7fe fe1b 	bl	800dc84 <xQueueGenericCreateStatic>
 800f04e:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800f050:	b110      	cbz	r0, 800f058 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800f052:	490b      	ldr	r1, [pc, #44]	; (800f080 <prvCheckForValidListAndQueue+0x64>)
 800f054:	f7ff f9e8 	bl	800e428 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800f058:	b003      	add	sp, #12
 800f05a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800f05e:	f7fe bc1b 	b.w	800d898 <vPortExitCritical>
 800f062:	bf00      	nop
 800f064:	20020a7c 	.word	0x20020a7c
 800f068:	20020a00 	.word	0x20020a00
 800f06c:	20020a14 	.word	0x20020a14
 800f070:	20020958 	.word	0x20020958
 800f074:	20020960 	.word	0x20020960
 800f078:	2002095c 	.word	0x2002095c
 800f07c:	20020a2c 	.word	0x20020a2c
 800f080:	08028ae6 	.word	0x08028ae6

0800f084 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800f084:	4291      	cmp	r1, r2
{
 800f086:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f088:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f08a:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800f08c:	d80a      	bhi.n	800f0a4 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f08e:	1ad2      	subs	r2, r2, r3
 800f090:	6983      	ldr	r3, [r0, #24]
 800f092:	429a      	cmp	r2, r3
 800f094:	d20d      	bcs.n	800f0b2 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f096:	4b08      	ldr	r3, [pc, #32]	; (800f0b8 <prvInsertTimerInActiveList+0x34>)
 800f098:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f09a:	6818      	ldr	r0, [r3, #0]
 800f09c:	f7fe fb4a 	bl	800d734 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800f0a0:	2000      	movs	r0, #0
}
 800f0a2:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800f0a4:	429a      	cmp	r2, r3
 800f0a6:	d201      	bcs.n	800f0ac <prvInsertTimerInActiveList+0x28>
 800f0a8:	4299      	cmp	r1, r3
 800f0aa:	d202      	bcs.n	800f0b2 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f0ac:	4b03      	ldr	r3, [pc, #12]	; (800f0bc <prvInsertTimerInActiveList+0x38>)
 800f0ae:	1d01      	adds	r1, r0, #4
 800f0b0:	e7f3      	b.n	800f09a <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800f0b2:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800f0b4:	e7f5      	b.n	800f0a2 <prvInsertTimerInActiveList+0x1e>
 800f0b6:	bf00      	nop
 800f0b8:	2002095c 	.word	0x2002095c
 800f0bc:	20020958 	.word	0x20020958

0800f0c0 <xTimerCreateTimerTask>:
{
 800f0c0:	b510      	push	{r4, lr}
 800f0c2:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800f0c4:	f7ff ffaa 	bl	800f01c <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800f0c8:	4b12      	ldr	r3, [pc, #72]	; (800f114 <xTimerCreateTimerTask+0x54>)
 800f0ca:	681b      	ldr	r3, [r3, #0]
 800f0cc:	b1b3      	cbz	r3, 800f0fc <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800f0ce:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f0d0:	aa07      	add	r2, sp, #28
 800f0d2:	a906      	add	r1, sp, #24
 800f0d4:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800f0d6:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f0da:	f7fe fa11 	bl	800d500 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800f0de:	9b05      	ldr	r3, [sp, #20]
 800f0e0:	9302      	str	r3, [sp, #8]
 800f0e2:	9b06      	ldr	r3, [sp, #24]
 800f0e4:	9301      	str	r3, [sp, #4]
 800f0e6:	2302      	movs	r3, #2
 800f0e8:	9300      	str	r3, [sp, #0]
 800f0ea:	9a07      	ldr	r2, [sp, #28]
 800f0ec:	490a      	ldr	r1, [pc, #40]	; (800f118 <xTimerCreateTimerTask+0x58>)
 800f0ee:	480b      	ldr	r0, [pc, #44]	; (800f11c <xTimerCreateTimerTask+0x5c>)
 800f0f0:	4623      	mov	r3, r4
 800f0f2:	f7ff fb7d 	bl	800e7f0 <xTaskCreateStatic>
 800f0f6:	4b0a      	ldr	r3, [pc, #40]	; (800f120 <xTimerCreateTimerTask+0x60>)
 800f0f8:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800f0fa:	b940      	cbnz	r0, 800f10e <xTimerCreateTimerTask+0x4e>
 800f0fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f100:	f383 8811 	msr	BASEPRI, r3
 800f104:	f3bf 8f6f 	isb	sy
 800f108:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800f10c:	e7fe      	b.n	800f10c <xTimerCreateTimerTask+0x4c>
}
 800f10e:	2001      	movs	r0, #1
 800f110:	b008      	add	sp, #32
 800f112:	bd10      	pop	{r4, pc}
 800f114:	20020a7c 	.word	0x20020a7c
 800f118:	08028aeb 	.word	0x08028aeb
 800f11c:	0800f1f9 	.word	0x0800f1f9
 800f120:	20020a80 	.word	0x20020a80

0800f124 <xTimerGenericCommand>:
{
 800f124:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800f126:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800f128:	4604      	mov	r4, r0
{
 800f12a:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800f12c:	b940      	cbnz	r0, 800f140 <xTimerGenericCommand+0x1c>
 800f12e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f132:	f383 8811 	msr	BASEPRI, r3
 800f136:	f3bf 8f6f 	isb	sy
 800f13a:	f3bf 8f4f 	dsb	sy
 800f13e:	e7fe      	b.n	800f13e <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800f140:	4d0d      	ldr	r5, [pc, #52]	; (800f178 <xTimerGenericCommand+0x54>)
 800f142:	6828      	ldr	r0, [r5, #0]
 800f144:	b180      	cbz	r0, 800f168 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800f146:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800f148:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f14c:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800f14e:	dc0d      	bgt.n	800f16c <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f150:	f7ff fe70 	bl	800ee34 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f154:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f156:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f158:	bf08      	it	eq
 800f15a:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800f15c:	6828      	ldr	r0, [r5, #0]
 800f15e:	bf18      	it	ne
 800f160:	461a      	movne	r2, r3
 800f162:	4669      	mov	r1, sp
 800f164:	f7fe fe44 	bl	800ddf0 <xQueueGenericSend>
}
 800f168:	b004      	add	sp, #16
 800f16a:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800f16c:	2300      	movs	r3, #0
 800f16e:	4669      	mov	r1, sp
 800f170:	f7fe fef0 	bl	800df54 <xQueueGenericSendFromISR>
 800f174:	e7f8      	b.n	800f168 <xTimerGenericCommand+0x44>
 800f176:	bf00      	nop
 800f178:	20020a7c 	.word	0x20020a7c

0800f17c <prvSwitchTimerLists>:
{
 800f17c:	b5f0      	push	{r4, r5, r6, r7, lr}
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800f17e:	4d1c      	ldr	r5, [pc, #112]	; (800f1f0 <prvSwitchTimerLists+0x74>)
{
 800f180:	b085      	sub	sp, #20
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800f182:	2700      	movs	r7, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800f184:	682b      	ldr	r3, [r5, #0]
 800f186:	681a      	ldr	r2, [r3, #0]
 800f188:	b92a      	cbnz	r2, 800f196 <prvSwitchTimerLists+0x1a>
	pxCurrentTimerList = pxOverflowTimerList;
 800f18a:	4a1a      	ldr	r2, [pc, #104]	; (800f1f4 <prvSwitchTimerLists+0x78>)
 800f18c:	6811      	ldr	r1, [r2, #0]
 800f18e:	6029      	str	r1, [r5, #0]
	pxOverflowTimerList = pxTemp;
 800f190:	6013      	str	r3, [r2, #0]
}
 800f192:	b005      	add	sp, #20
 800f194:	bdf0      	pop	{r4, r5, r6, r7, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f196:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f198:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f19a:	681e      	ldr	r6, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f19c:	1d21      	adds	r1, r4, #4
 800f19e:	4608      	mov	r0, r1
 800f1a0:	9103      	str	r1, [sp, #12]
 800f1a2:	f7fe fade 	bl	800d762 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f1a6:	6a23      	ldr	r3, [r4, #32]
 800f1a8:	4620      	mov	r0, r4
 800f1aa:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f1ac:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800f1b0:	9903      	ldr	r1, [sp, #12]
 800f1b2:	f013 0f04 	tst.w	r3, #4
 800f1b6:	d0e5      	beq.n	800f184 <prvSwitchTimerLists+0x8>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800f1b8:	69a3      	ldr	r3, [r4, #24]
 800f1ba:	4433      	add	r3, r6
			if( xReloadTime > xNextExpireTime )
 800f1bc:	429e      	cmp	r6, r3
 800f1be:	d205      	bcs.n	800f1cc <prvSwitchTimerLists+0x50>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f1c0:	6828      	ldr	r0, [r5, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800f1c2:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f1c4:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f1c6:	f7fe fab5 	bl	800d734 <vListInsert>
 800f1ca:	e7db      	b.n	800f184 <prvSwitchTimerLists+0x8>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800f1cc:	2300      	movs	r3, #0
 800f1ce:	9700      	str	r7, [sp, #0]
 800f1d0:	4632      	mov	r2, r6
 800f1d2:	4619      	mov	r1, r3
 800f1d4:	4620      	mov	r0, r4
 800f1d6:	f7ff ffa5 	bl	800f124 <xTimerGenericCommand>
				configASSERT( xResult );
 800f1da:	2800      	cmp	r0, #0
 800f1dc:	d1d2      	bne.n	800f184 <prvSwitchTimerLists+0x8>
 800f1de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f1e2:	f383 8811 	msr	BASEPRI, r3
 800f1e6:	f3bf 8f6f 	isb	sy
 800f1ea:	f3bf 8f4f 	dsb	sy
 800f1ee:	e7fe      	b.n	800f1ee <prvSwitchTimerLists+0x72>
 800f1f0:	20020958 	.word	0x20020958
 800f1f4:	2002095c 	.word	0x2002095c

0800f1f8 <prvTimerTask>:
{
 800f1f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800f1fc:	4f77      	ldr	r7, [pc, #476]	; (800f3dc <prvTimerTask+0x1e4>)
					portYIELD_WITHIN_API();
 800f1fe:	f8df a1ec 	ldr.w	sl, [pc, #492]	; 800f3ec <prvTimerTask+0x1f4>
{
 800f202:	b087      	sub	sp, #28
 800f204:	46b9      	mov	r9, r7
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800f206:	683b      	ldr	r3, [r7, #0]
 800f208:	f8d3 b000 	ldr.w	fp, [r3]
 800f20c:	f1bb 0f00 	cmp.w	fp, #0
 800f210:	d028      	beq.n	800f264 <prvTimerTask+0x6c>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f212:	68db      	ldr	r3, [r3, #12]
 800f214:	f8d3 b000 	ldr.w	fp, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800f218:	2400      	movs	r4, #0
	if( xTimeNow < xLastTime )
 800f21a:	4e71      	ldr	r6, [pc, #452]	; (800f3e0 <prvTimerTask+0x1e8>)
	vTaskSuspendAll();
 800f21c:	f7ff fb4e 	bl	800e8bc <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800f220:	f7ff fb54 	bl	800e8cc <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f224:	6833      	ldr	r3, [r6, #0]
 800f226:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800f228:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800f22a:	46b0      	mov	r8, r6
 800f22c:	d31c      	bcc.n	800f268 <prvTimerTask+0x70>
	xLastTime = xTimeNow;
 800f22e:	6030      	str	r0, [r6, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800f230:	b31c      	cbz	r4, 800f27a <prvTimerTask+0x82>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f232:	4b6c      	ldr	r3, [pc, #432]	; (800f3e4 <prvTimerTask+0x1ec>)
 800f234:	681b      	ldr	r3, [r3, #0]
 800f236:	681c      	ldr	r4, [r3, #0]
 800f238:	fab4 f484 	clz	r4, r4
 800f23c:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800f23e:	4b6a      	ldr	r3, [pc, #424]	; (800f3e8 <prvTimerTask+0x1f0>)
 800f240:	4622      	mov	r2, r4
 800f242:	6818      	ldr	r0, [r3, #0]
 800f244:	ebab 0105 	sub.w	r1, fp, r5
 800f248:	f7ff f92d 	bl	800e4a6 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800f24c:	f7ff fbda 	bl	800ea04 <xTaskResumeAll>
 800f250:	b978      	cbnz	r0, 800f272 <prvTimerTask+0x7a>
					portYIELD_WITHIN_API();
 800f252:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800f256:	f8ca 3000 	str.w	r3, [sl]
 800f25a:	f3bf 8f4f 	dsb	sy
 800f25e:	f3bf 8f6f 	isb	sy
 800f262:	e006      	b.n	800f272 <prvTimerTask+0x7a>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800f264:	2401      	movs	r4, #1
 800f266:	e7d8      	b.n	800f21a <prvTimerTask+0x22>
		prvSwitchTimerLists();
 800f268:	f7ff ff88 	bl	800f17c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800f26c:	6035      	str	r5, [r6, #0]
			( void ) xTaskResumeAll();
 800f26e:	f7ff fbc9 	bl	800ea04 <xTaskResumeAll>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800f272:	4e5d      	ldr	r6, [pc, #372]	; (800f3e8 <prvTimerTask+0x1f0>)
 800f274:	f04f 0b00 	mov.w	fp, #0
 800f278:	e035      	b.n	800f2e6 <prvTimerTask+0xee>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800f27a:	4583      	cmp	fp, r0
 800f27c:	d8df      	bhi.n	800f23e <prvTimerTask+0x46>
				( void ) xTaskResumeAll();
 800f27e:	f7ff fbc1 	bl	800ea04 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f282:	f8d9 3000 	ldr.w	r3, [r9]
 800f286:	68db      	ldr	r3, [r3, #12]
 800f288:	68de      	ldr	r6, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f28a:	1d30      	adds	r0, r6, #4
 800f28c:	f7fe fa69 	bl	800d762 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f290:	f896 3028 	ldrb.w	r3, [r6, #40]	; 0x28
 800f294:	0758      	lsls	r0, r3, #29
 800f296:	d518      	bpl.n	800f2ca <prvTimerTask+0xd2>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f298:	69b1      	ldr	r1, [r6, #24]
 800f29a:	465b      	mov	r3, fp
 800f29c:	462a      	mov	r2, r5
 800f29e:	4459      	add	r1, fp
 800f2a0:	4630      	mov	r0, r6
 800f2a2:	f7ff feef 	bl	800f084 <prvInsertTimerInActiveList>
 800f2a6:	b1a0      	cbz	r0, 800f2d2 <prvTimerTask+0xda>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800f2a8:	9400      	str	r4, [sp, #0]
 800f2aa:	4623      	mov	r3, r4
 800f2ac:	465a      	mov	r2, fp
 800f2ae:	4621      	mov	r1, r4
 800f2b0:	4630      	mov	r0, r6
 800f2b2:	f7ff ff37 	bl	800f124 <xTimerGenericCommand>
			configASSERT( xResult );
 800f2b6:	b960      	cbnz	r0, 800f2d2 <prvTimerTask+0xda>
 800f2b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f2bc:	f383 8811 	msr	BASEPRI, r3
 800f2c0:	f3bf 8f6f 	isb	sy
 800f2c4:	f3bf 8f4f 	dsb	sy
 800f2c8:	e7fe      	b.n	800f2c8 <prvTimerTask+0xd0>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f2ca:	f023 0301 	bic.w	r3, r3, #1
 800f2ce:	f886 3028 	strb.w	r3, [r6, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f2d2:	6a33      	ldr	r3, [r6, #32]
 800f2d4:	4630      	mov	r0, r6
 800f2d6:	4798      	blx	r3
}
 800f2d8:	e7cb      	b.n	800f272 <prvTimerTask+0x7a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800f2da:	9b03      	ldr	r3, [sp, #12]
 800f2dc:	9905      	ldr	r1, [sp, #20]
 800f2de:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800f2e0:	9b02      	ldr	r3, [sp, #8]
 800f2e2:	2b00      	cmp	r3, #0
 800f2e4:	da0a      	bge.n	800f2fc <prvTimerTask+0x104>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800f2e6:	6830      	ldr	r0, [r6, #0]
 800f2e8:	2200      	movs	r2, #0
 800f2ea:	a902      	add	r1, sp, #8
 800f2ec:	f7fe fee8 	bl	800e0c0 <xQueueReceive>
 800f2f0:	2800      	cmp	r0, #0
 800f2f2:	d088      	beq.n	800f206 <prvTimerTask+0xe>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800f2f4:	9b02      	ldr	r3, [sp, #8]
 800f2f6:	9804      	ldr	r0, [sp, #16]
 800f2f8:	2b00      	cmp	r3, #0
 800f2fa:	dbee      	blt.n	800f2da <prvTimerTask+0xe2>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800f2fc:	9c04      	ldr	r4, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800f2fe:	6963      	ldr	r3, [r4, #20]
 800f300:	b9a3      	cbnz	r3, 800f32c <prvTimerTask+0x134>
	xTimeNow = xTaskGetTickCount();
 800f302:	f7ff fae3 	bl	800e8cc <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f306:	f8d8 3000 	ldr.w	r3, [r8]
 800f30a:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800f30c:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800f30e:	d201      	bcs.n	800f314 <prvTimerTask+0x11c>
		prvSwitchTimerLists();
 800f310:	f7ff ff34 	bl	800f17c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800f314:	9b02      	ldr	r3, [sp, #8]
 800f316:	f8c8 5000 	str.w	r5, [r8]
			switch( xMessage.xMessageID )
 800f31a:	2b09      	cmp	r3, #9
 800f31c:	d8e3      	bhi.n	800f2e6 <prvTimerTask+0xee>
 800f31e:	e8df f003 	tbb	[pc, r3]
 800f322:	0909      	.short	0x0909
 800f324:	543b3409 	.word	0x543b3409
 800f328:	3b340909 	.word	0x3b340909
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f32c:	1d20      	adds	r0, r4, #4
 800f32e:	f7fe fa18 	bl	800d762 <uxListRemove>
 800f332:	e7e6      	b.n	800f302 <prvTimerTask+0x10a>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f334:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f338:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f33a:	f043 0301 	orr.w	r3, r3, #1
 800f33e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f342:	9b03      	ldr	r3, [sp, #12]
 800f344:	462a      	mov	r2, r5
 800f346:	4419      	add	r1, r3
 800f348:	4620      	mov	r0, r4
 800f34a:	f7ff fe9b 	bl	800f084 <prvInsertTimerInActiveList>
 800f34e:	2800      	cmp	r0, #0
 800f350:	d0c9      	beq.n	800f2e6 <prvTimerTask+0xee>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f352:	6a23      	ldr	r3, [r4, #32]
 800f354:	4620      	mov	r0, r4
 800f356:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f358:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800f35c:	0759      	lsls	r1, r3, #29
 800f35e:	d5c2      	bpl.n	800f2e6 <prvTimerTask+0xee>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f360:	69a2      	ldr	r2, [r4, #24]
 800f362:	9903      	ldr	r1, [sp, #12]
 800f364:	f8cd b000 	str.w	fp, [sp]
 800f368:	2300      	movs	r3, #0
 800f36a:	440a      	add	r2, r1
 800f36c:	4620      	mov	r0, r4
 800f36e:	4619      	mov	r1, r3
 800f370:	f7ff fed8 	bl	800f124 <xTimerGenericCommand>
							configASSERT( xResult );
 800f374:	2800      	cmp	r0, #0
 800f376:	d1b6      	bne.n	800f2e6 <prvTimerTask+0xee>
 800f378:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f37c:	f383 8811 	msr	BASEPRI, r3
 800f380:	f3bf 8f6f 	isb	sy
 800f384:	f3bf 8f4f 	dsb	sy
 800f388:	e7fe      	b.n	800f388 <prvTimerTask+0x190>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f38a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f38e:	f023 0301 	bic.w	r3, r3, #1
 800f392:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800f396:	e7a6      	b.n	800f2e6 <prvTimerTask+0xee>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f398:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800f39c:	9903      	ldr	r1, [sp, #12]
 800f39e:	61a1      	str	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f3a0:	f043 0301 	orr.w	r3, r3, #1
 800f3a4:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f3a8:	b941      	cbnz	r1, 800f3bc <prvTimerTask+0x1c4>
 800f3aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f3ae:	f383 8811 	msr	BASEPRI, r3
 800f3b2:	f3bf 8f6f 	isb	sy
 800f3b6:	f3bf 8f4f 	dsb	sy
 800f3ba:	e7fe      	b.n	800f3ba <prvTimerTask+0x1c2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800f3bc:	462b      	mov	r3, r5
 800f3be:	462a      	mov	r2, r5
 800f3c0:	4429      	add	r1, r5
 800f3c2:	4620      	mov	r0, r4
 800f3c4:	f7ff fe5e 	bl	800f084 <prvInsertTimerInActiveList>
					break;
 800f3c8:	e78d      	b.n	800f2e6 <prvTimerTask+0xee>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800f3ca:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800f3ce:	079a      	lsls	r2, r3, #30
 800f3d0:	d4dd      	bmi.n	800f38e <prvTimerTask+0x196>
							vPortFree( pxTimer );
 800f3d2:	4620      	mov	r0, r4
 800f3d4:	f7fe f956 	bl	800d684 <vPortFree>
 800f3d8:	e785      	b.n	800f2e6 <prvTimerTask+0xee>
 800f3da:	bf00      	nop
 800f3dc:	20020958 	.word	0x20020958
 800f3e0:	20020a28 	.word	0x20020a28
 800f3e4:	2002095c 	.word	0x2002095c
 800f3e8:	20020a7c 	.word	0x20020a7c
 800f3ec:	e000ed04 	.word	0xe000ed04

0800f3f0 <is_leap_year>:
is_leap_year(uint16_t year)
{
    div_t           d;

    /* year must be divisible by 4 to be a leap year */
    if (year & 3)
 800f3f0:	0783      	lsls	r3, r0, #30
{
 800f3f2:	b507      	push	{r0, r1, r2, lr}
 800f3f4:	4601      	mov	r1, r0
    if (year & 3)
 800f3f6:	d10e      	bne.n	800f416 <is_leap_year+0x26>
        return 0;

    /* If there is a remainder after division by 100, year is not divisible by 100 or 400 */
    d = div(year, 100);
 800f3f8:	2264      	movs	r2, #100	; 0x64
 800f3fa:	4668      	mov	r0, sp
 800f3fc:	f015 f84e 	bl	802449c <div>
    if (d.rem)
 800f400:	9b01      	ldr	r3, [sp, #4]
 800f402:	b953      	cbnz	r3, 800f41a <is_leap_year+0x2a>
        return 1;

    /* If the quotient is divisible by 4, then year is divisible by 400 */
    if ((d.quot & 3) == 0)
 800f404:	9b00      	ldr	r3, [sp, #0]
 800f406:	f013 0f03 	tst.w	r3, #3
        return 0;
 800f40a:	bf0c      	ite	eq
 800f40c:	2001      	moveq	r0, #1
 800f40e:	2000      	movne	r0, #0
        return 1;

    return 0;
}
 800f410:	b003      	add	sp, #12
 800f412:	f85d fb04 	ldr.w	pc, [sp], #4
        return 0;
 800f416:	2000      	movs	r0, #0
 800f418:	e7fa      	b.n	800f410 <is_leap_year+0x20>
        return 1;
 800f41a:	2001      	movs	r0, #1
 800f41c:	e7f8      	b.n	800f410 <is_leap_year+0x20>

0800f41e <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800f41e:	8880      	ldrh	r0, [r0, #4]
 800f420:	4770      	bx	lr

0800f422 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800f422:	2300      	movs	r3, #0
 800f424:	8083      	strh	r3, [r0, #4]
 800f426:	4770      	bx	lr

0800f428 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800f428:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f42a:	6803      	ldr	r3, [r0, #0]
 800f42c:	4605      	mov	r5, r0
 800f42e:	460e      	mov	r6, r1
 800f430:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f432:	2100      	movs	r1, #0
 800f434:	4798      	blx	r3
 800f436:	682b      	ldr	r3, [r5, #0]
 800f438:	4604      	mov	r4, r0
 800f43a:	6a1b      	ldr	r3, [r3, #32]
 800f43c:	4628      	mov	r0, r5
 800f43e:	4798      	blx	r3
 800f440:	88ab      	ldrh	r3, [r5, #4]
 800f442:	1b34      	subs	r4, r6, r4
 800f444:	b2a4      	uxth	r4, r4
 800f446:	fbb4 f4f0 	udiv	r4, r4, r0
 800f44a:	42a3      	cmp	r3, r4
 800f44c:	d805      	bhi.n	800f45a <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 800f44e:	4b0e      	ldr	r3, [pc, #56]	; (800f488 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 800f450:	4a0e      	ldr	r2, [pc, #56]	; (800f48c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800f452:	211e      	movs	r1, #30
 800f454:	480e      	ldr	r0, [pc, #56]	; (800f490 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 800f456:	f014 ffef 	bl	8024438 <__assert_func>
 800f45a:	682b      	ldr	r3, [r5, #0]
 800f45c:	2100      	movs	r1, #0
 800f45e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f460:	4628      	mov	r0, r5
 800f462:	4798      	blx	r3
 800f464:	682b      	ldr	r3, [r5, #0]
 800f466:	4607      	mov	r7, r0
 800f468:	6a1b      	ldr	r3, [r3, #32]
 800f46a:	4628      	mov	r0, r5
 800f46c:	4798      	blx	r3
 800f46e:	1bf3      	subs	r3, r6, r7
 800f470:	b29b      	uxth	r3, r3
 800f472:	fbb3 f2f0 	udiv	r2, r3, r0
 800f476:	fb02 3010 	mls	r0, r2, r0, r3
 800f47a:	b118      	cbz	r0, 800f484 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 800f47c:	4b05      	ldr	r3, [pc, #20]	; (800f494 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 800f47e:	4a03      	ldr	r2, [pc, #12]	; (800f48c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800f480:	211f      	movs	r1, #31
 800f482:	e7e7      	b.n	800f454 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 800f484:	4620      	mov	r0, r4
 800f486:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f488:	08028af3 	.word	0x08028af3
 800f48c:	08028c5e 	.word	0x08028c5e
 800f490:	08028b08 	.word	0x08028b08
 800f494:	08028b36 	.word	0x08028b36

0800f498 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800f498:	b538      	push	{r3, r4, r5, lr}
 800f49a:	6803      	ldr	r3, [r0, #0]
 800f49c:	6a1b      	ldr	r3, [r3, #32]
 800f49e:	460d      	mov	r5, r1
 800f4a0:	4604      	mov	r4, r0
 800f4a2:	4798      	blx	r3
 800f4a4:	4285      	cmp	r5, r0
 800f4a6:	d905      	bls.n	800f4b4 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 800f4a8:	4b0c      	ldr	r3, [pc, #48]	; (800f4dc <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 800f4aa:	4a0d      	ldr	r2, [pc, #52]	; (800f4e0 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800f4ac:	2130      	movs	r1, #48	; 0x30
 800f4ae:	480d      	ldr	r0, [pc, #52]	; (800f4e4 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 800f4b0:	f014 ffc2 	bl	8024438 <__assert_func>
 800f4b4:	6823      	ldr	r3, [r4, #0]
 800f4b6:	88a5      	ldrh	r5, [r4, #4]
 800f4b8:	69db      	ldr	r3, [r3, #28]
 800f4ba:	4620      	mov	r0, r4
 800f4bc:	4798      	blx	r3
 800f4be:	4285      	cmp	r5, r0
 800f4c0:	d303      	bcc.n	800f4ca <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 800f4c2:	4b09      	ldr	r3, [pc, #36]	; (800f4e8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 800f4c4:	4a06      	ldr	r2, [pc, #24]	; (800f4e0 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800f4c6:	2131      	movs	r1, #49	; 0x31
 800f4c8:	e7f1      	b.n	800f4ae <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 800f4ca:	6823      	ldr	r3, [r4, #0]
 800f4cc:	88a1      	ldrh	r1, [r4, #4]
 800f4ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f4d0:	4620      	mov	r0, r4
 800f4d2:	4798      	blx	r3
 800f4d4:	88a3      	ldrh	r3, [r4, #4]
 800f4d6:	3301      	adds	r3, #1
 800f4d8:	80a3      	strh	r3, [r4, #4]
 800f4da:	bd38      	pop	{r3, r4, r5, pc}
 800f4dc:	08028bb0 	.word	0x08028bb0
 800f4e0:	08028ca1 	.word	0x08028ca1
 800f4e4:	08028b08 	.word	0x08028b08
 800f4e8:	08028bc7 	.word	0x08028bc7

0800f4ec <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800f4ec:	b570      	push	{r4, r5, r6, lr}
 800f4ee:	6803      	ldr	r3, [r0, #0]
 800f4f0:	6a1b      	ldr	r3, [r3, #32]
 800f4f2:	4616      	mov	r6, r2
 800f4f4:	4604      	mov	r4, r0
 800f4f6:	460d      	mov	r5, r1
 800f4f8:	4798      	blx	r3
 800f4fa:	4286      	cmp	r6, r0
 800f4fc:	d905      	bls.n	800f50a <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 800f4fe:	4b06      	ldr	r3, [pc, #24]	; (800f518 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 800f500:	4a06      	ldr	r2, [pc, #24]	; (800f51c <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 800f502:	4807      	ldr	r0, [pc, #28]	; (800f520 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 800f504:	213a      	movs	r1, #58	; 0x3a
 800f506:	f014 ff97 	bl	8024438 <__assert_func>
 800f50a:	6823      	ldr	r3, [r4, #0]
 800f50c:	4629      	mov	r1, r5
 800f50e:	4620      	mov	r0, r4
 800f510:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f512:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f516:	4718      	bx	r3
 800f518:	08028bb0 	.word	0x08028bb0
 800f51c:	08028c14 	.word	0x08028c14
 800f520:	08028b08 	.word	0x08028b08

0800f524 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800f524:	4770      	bx	lr
	...

0800f528 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800f528:	4a02      	ldr	r2, [pc, #8]	; (800f534 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800f52a:	6002      	str	r2, [r0, #0]
 800f52c:	2200      	movs	r2, #0
 800f52e:	8082      	strh	r2, [r0, #4]
 800f530:	4770      	bx	lr
 800f532:	bf00      	nop
 800f534:	08028be8 	.word	0x08028be8

0800f538 <_ZNK8touchgfx12DrawableList13getHorizontalEv>:
 800f538:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800f53c:	4770      	bx	lr

0800f53e <_ZNK8touchgfx12DrawableList11getCircularEv>:
 800f53e:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 800f542:	4770      	bx	lr

0800f544 <_ZNK8touchgfx12DrawableList11getItemSizeEv>:
 800f544:	f9b0 0034 	ldrsh.w	r0, [r0, #52]	; 0x34
 800f548:	4770      	bx	lr

0800f54a <_ZNK8touchgfx12DrawableList15getDrawableSizeEv>:
 800f54a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800f54c:	8e80      	ldrh	r0, [r0, #52]	; 0x34
 800f54e:	eba0 0043 	sub.w	r0, r0, r3, lsl #1
 800f552:	b200      	sxth	r0, r0
 800f554:	4770      	bx	lr

0800f556 <_ZNK8touchgfx12DrawableList17getDrawableMarginEv>:
 800f556:	f9b0 0036 	ldrsh.w	r0, [r0, #54]	; 0x36
 800f55a:	4770      	bx	lr

0800f55c <_ZN8touchgfx12DrawableListD1Ev>:
 800f55c:	4770      	bx	lr

0800f55e <_ZN8touchgfx12DrawableListD0Ev>:
 800f55e:	b510      	push	{r4, lr}
 800f560:	214c      	movs	r1, #76	; 0x4c
 800f562:	4604      	mov	r4, r0
 800f564:	f014 ff39 	bl	80243da <_ZdlPvj>
 800f568:	4620      	mov	r0, r4
 800f56a:	bd10      	pop	{r4, pc}

0800f56c <_ZN8touchgfx12DrawableListC1Ev>:
 800f56c:	2101      	movs	r1, #1
 800f56e:	2200      	movs	r2, #0
 800f570:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800f574:	4910      	ldr	r1, [pc, #64]	; (800f5b8 <_ZN8touchgfx12DrawableListC1Ev+0x4c>)
 800f576:	8082      	strh	r2, [r0, #4]
 800f578:	80c2      	strh	r2, [r0, #6]
 800f57a:	8102      	strh	r2, [r0, #8]
 800f57c:	8142      	strh	r2, [r0, #10]
 800f57e:	8182      	strh	r2, [r0, #12]
 800f580:	81c2      	strh	r2, [r0, #14]
 800f582:	8202      	strh	r2, [r0, #16]
 800f584:	8242      	strh	r2, [r0, #18]
 800f586:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800f58a:	61c2      	str	r2, [r0, #28]
 800f58c:	8402      	strh	r2, [r0, #32]
 800f58e:	8442      	strh	r2, [r0, #34]	; 0x22
 800f590:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800f594:	6282      	str	r2, [r0, #40]	; 0x28
 800f596:	6001      	str	r1, [r0, #0]
 800f598:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800f59c:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
 800f5a0:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 800f5a4:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 800f5a8:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
 800f5ac:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 800f5b0:	e9c0 2211 	strd	r2, r2, [r0, #68]	; 0x44
 800f5b4:	4770      	bx	lr
 800f5b6:	bf00      	nop
 800f5b8:	08028ce8 	.word	0x08028ce8

0800f5bc <_ZN8touchgfx12DrawableList15setDrawableSizeEss>:
 800f5bc:	eb01 0142 	add.w	r1, r1, r2, lsl #1
 800f5c0:	8681      	strh	r1, [r0, #52]	; 0x34
 800f5c2:	86c2      	strh	r2, [r0, #54]	; 0x36
 800f5c4:	4770      	bx	lr

0800f5c6 <_ZNK8touchgfx12DrawableList16getNumberOfItemsEv>:
 800f5c6:	f9b0 0038 	ldrsh.w	r0, [r0, #56]	; 0x38
 800f5ca:	4770      	bx	lr

0800f5cc <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv>:
 800f5cc:	b538      	push	{r3, r4, r5, lr}
 800f5ce:	4605      	mov	r5, r0
 800f5d0:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800f5d2:	b308      	cbz	r0, 800f618 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x4c>
 800f5d4:	f9b5 2034 	ldrsh.w	r2, [r5, #52]	; 0x34
 800f5d8:	2a00      	cmp	r2, #0
 800f5da:	dd21      	ble.n	800f620 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x54>
 800f5dc:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800f5e0:	b1db      	cbz	r3, 800f61a <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x4e>
 800f5e2:	f9b5 4008 	ldrsh.w	r4, [r5, #8]
 800f5e6:	1e63      	subs	r3, r4, #1
 800f5e8:	1e54      	subs	r4, r2, #1
 800f5ea:	441c      	add	r4, r3
 800f5ec:	f895 302d 	ldrb.w	r3, [r5, #45]	; 0x2d
 800f5f0:	fb94 f4f2 	sdiv	r4, r4, r2
 800f5f4:	3401      	adds	r4, #1
 800f5f6:	b224      	sxth	r4, r4
 800f5f8:	b923      	cbnz	r3, 800f604 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x38>
 800f5fa:	f9b5 3038 	ldrsh.w	r3, [r5, #56]	; 0x38
 800f5fe:	429c      	cmp	r4, r3
 800f600:	bfa8      	it	ge
 800f602:	461c      	movge	r4, r3
 800f604:	6803      	ldr	r3, [r0, #0]
 800f606:	68db      	ldr	r3, [r3, #12]
 800f608:	4798      	blx	r3
 800f60a:	f9b5 3042 	ldrsh.w	r3, [r5, #66]	; 0x42
 800f60e:	1ac0      	subs	r0, r0, r3
 800f610:	42a0      	cmp	r0, r4
 800f612:	bfa8      	it	ge
 800f614:	4620      	movge	r0, r4
 800f616:	b200      	sxth	r0, r0
 800f618:	bd38      	pop	{r3, r4, r5, pc}
 800f61a:	f9b5 400a 	ldrsh.w	r4, [r5, #10]
 800f61e:	e7e2      	b.n	800f5e6 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x1a>
 800f620:	2000      	movs	r0, #0
 800f622:	e7f9      	b.n	800f618 <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv+0x4c>

0800f624 <_ZN8touchgfx12DrawableList9setOffsetEl>:
 800f624:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f628:	4604      	mov	r4, r0
 800f62a:	460d      	mov	r5, r1
 800f62c:	6321      	str	r1, [r4, #48]	; 0x30
 800f62e:	f9b0 303a 	ldrsh.w	r3, [r0, #58]	; 0x3a
 800f632:	2b00      	cmp	r3, #0
 800f634:	f000 80eb 	beq.w	800f80e <_ZN8touchgfx12DrawableList9setOffsetEl+0x1ea>
 800f638:	f9b0 3038 	ldrsh.w	r3, [r0, #56]	; 0x38
 800f63c:	2b00      	cmp	r3, #0
 800f63e:	f000 80e6 	beq.w	800f80e <_ZN8touchgfx12DrawableList9setOffsetEl+0x1ea>
 800f642:	f9b0 3034 	ldrsh.w	r3, [r0, #52]	; 0x34
 800f646:	2b00      	cmp	r3, #0
 800f648:	f000 80e1 	beq.w	800f80e <_ZN8touchgfx12DrawableList9setOffsetEl+0x1ea>
 800f64c:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800f64e:	2800      	cmp	r0, #0
 800f650:	f000 80dd 	beq.w	800f80e <_ZN8touchgfx12DrawableList9setOffsetEl+0x1ea>
 800f654:	6803      	ldr	r3, [r0, #0]
 800f656:	68db      	ldr	r3, [r3, #12]
 800f658:	4798      	blx	r3
 800f65a:	2800      	cmp	r0, #0
 800f65c:	f000 80d7 	beq.w	800f80e <_ZN8touchgfx12DrawableList9setOffsetEl+0x1ea>
 800f660:	2d00      	cmp	r5, #0
 800f662:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800f666:	bfc1      	itttt	gt
 800f668:	fb95 f2f1 	sdivgt	r2, r5, r1
 800f66c:	3201      	addgt	r2, #1
 800f66e:	4253      	neggt	r3, r2
 800f670:	fb01 5512 	mlsgt	r5, r1, r2, r5
 800f674:	f1c1 0200 	rsb	r2, r1, #0
 800f678:	bfcc      	ite	gt
 800f67a:	b21b      	sxthgt	r3, r3
 800f67c:	2300      	movle	r3, #0
 800f67e:	f894 702d 	ldrb.w	r7, [r4, #45]	; 0x2d
 800f682:	f9b4 003a 	ldrsh.w	r0, [r4, #58]	; 0x3a
 800f686:	42aa      	cmp	r2, r5
 800f688:	bfa1      	itttt	ge
 800f68a:	fb95 f2f1 	sdivge	r2, r5, r1
 800f68e:	1a9b      	subge	r3, r3, r2
 800f690:	b21b      	sxthge	r3, r3
 800f692:	fb01 5512 	mlsge	r5, r1, r2, r5
 800f696:	b167      	cbz	r7, 800f6b2 <_ZN8touchgfx12DrawableList9setOffsetEl+0x8e>
 800f698:	f9b4 1038 	ldrsh.w	r1, [r4, #56]	; 0x38
 800f69c:	fb93 f2f1 	sdiv	r2, r3, r1
 800f6a0:	fb01 3312 	mls	r3, r1, r2, r3
 800f6a4:	440b      	add	r3, r1
 800f6a6:	fb93 f2f1 	sdiv	r2, r3, r1
 800f6aa:	fb01 3312 	mls	r3, r1, r2, r3
 800f6ae:	b21b      	sxth	r3, r3
 800f6b0:	e004      	b.n	800f6bc <_ZN8touchgfx12DrawableList9setOffsetEl+0x98>
 800f6b2:	2b00      	cmp	r3, #0
 800f6b4:	da64      	bge.n	800f780 <_ZN8touchgfx12DrawableList9setOffsetEl+0x15c>
 800f6b6:	fb01 5513 	mls	r5, r1, r3, r5
 800f6ba:	463b      	mov	r3, r7
 800f6bc:	f894 6040 	ldrb.w	r6, [r4, #64]	; 0x40
 800f6c0:	b1be      	cbz	r6, 800f6f2 <_ZN8touchgfx12DrawableList9setOffsetEl+0xce>
 800f6c2:	f9b4 e03c 	ldrsh.w	lr, [r4, #60]	; 0x3c
 800f6c6:	459e      	cmp	lr, r3
 800f6c8:	d068      	beq.n	800f79c <_ZN8touchgfx12DrawableList9setOffsetEl+0x178>
 800f6ca:	2601      	movs	r6, #1
 800f6cc:	4286      	cmp	r6, r0
 800f6ce:	da67      	bge.n	800f7a0 <_ZN8touchgfx12DrawableList9setOffsetEl+0x17c>
 800f6d0:	eb0e 0106 	add.w	r1, lr, r6
 800f6d4:	199a      	adds	r2, r3, r6
 800f6d6:	b14f      	cbz	r7, 800f6ec <_ZN8touchgfx12DrawableList9setOffsetEl+0xc8>
 800f6d8:	f9b4 c038 	ldrsh.w	ip, [r4, #56]	; 0x38
 800f6dc:	fb91 f8fc 	sdiv	r8, r1, ip
 800f6e0:	fb0c 1118 	mls	r1, ip, r8, r1
 800f6e4:	fb92 f8fc 	sdiv	r8, r2, ip
 800f6e8:	fb0c 2218 	mls	r2, ip, r8, r2
 800f6ec:	428b      	cmp	r3, r1
 800f6ee:	d151      	bne.n	800f794 <_ZN8touchgfx12DrawableList9setOffsetEl+0x170>
 800f6f0:	4276      	negs	r6, r6
 800f6f2:	f9b4 203e 	ldrsh.w	r2, [r4, #62]	; 0x3e
 800f6f6:	87a3      	strh	r3, [r4, #60]	; 0x3c
 800f6f8:	1b92      	subs	r2, r2, r6
 800f6fa:	4402      	add	r2, r0
 800f6fc:	2700      	movs	r7, #0
 800f6fe:	fb92 f1f0 	sdiv	r1, r2, r0
 800f702:	fb00 2011 	mls	r0, r0, r1, r2
 800f706:	87e0      	strh	r0, [r4, #62]	; 0x3e
 800f708:	b2ad      	uxth	r5, r5
 800f70a:	46ba      	mov	sl, r7
 800f70c:	f04f 0b01 	mov.w	fp, #1
 800f710:	f9b4 203a 	ldrsh.w	r2, [r4, #58]	; 0x3a
 800f714:	42ba      	cmp	r2, r7
 800f716:	dd77      	ble.n	800f808 <_ZN8touchgfx12DrawableList9setOffsetEl+0x1e4>
 800f718:	f9b4 303e 	ldrsh.w	r3, [r4, #62]	; 0x3e
 800f71c:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800f71e:	f8b4 1042 	ldrh.w	r1, [r4, #66]	; 0x42
 800f722:	443b      	add	r3, r7
 800f724:	fb93 f8f2 	sdiv	r8, r3, r2
 800f728:	fb02 3818 	mls	r8, r2, r8, r3
 800f72c:	fa1f f888 	uxth.w	r8, r8
 800f730:	6803      	ldr	r3, [r0, #0]
 800f732:	4441      	add	r1, r8
 800f734:	689b      	ldr	r3, [r3, #8]
 800f736:	b209      	sxth	r1, r1
 800f738:	4798      	blx	r3
 800f73a:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 800f73e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800f740:	f8b4 c034 	ldrh.w	ip, [r4, #52]	; 0x34
 800f744:	6802      	ldr	r2, [r0, #0]
 800f746:	4681      	mov	r9, r0
 800f748:	fa1f fe87 	uxth.w	lr, r7
 800f74c:	b351      	cbz	r1, 800f7a4 <_ZN8touchgfx12DrawableList9setOffsetEl+0x180>
 800f74e:	18e9      	adds	r1, r5, r3
 800f750:	fb1c 110e 	smlabb	r1, ip, lr, r1
 800f754:	6d53      	ldr	r3, [r2, #84]	; 0x54
 800f756:	b209      	sxth	r1, r1
 800f758:	2200      	movs	r2, #0
 800f75a:	4798      	blx	r3
 800f75c:	f9b4 303c 	ldrsh.w	r3, [r4, #60]	; 0x3c
 800f760:	f894 202d 	ldrb.w	r2, [r4, #45]	; 0x2d
 800f764:	443b      	add	r3, r7
 800f766:	b322      	cbz	r2, 800f7b2 <_ZN8touchgfx12DrawableList9setOffsetEl+0x18e>
 800f768:	f9b4 2038 	ldrsh.w	r2, [r4, #56]	; 0x38
 800f76c:	fb93 f1f2 	sdiv	r1, r3, r2
 800f770:	fb02 3311 	mls	r3, r2, r1, r3
 800f774:	2b00      	cmp	r3, #0
 800f776:	da22      	bge.n	800f7be <_ZN8touchgfx12DrawableList9setOffsetEl+0x19a>
 800f778:	f889 a025 	strb.w	sl, [r9, #37]	; 0x25
 800f77c:	3701      	adds	r7, #1
 800f77e:	e7c7      	b.n	800f710 <_ZN8touchgfx12DrawableList9setOffsetEl+0xec>
 800f780:	f9b4 2038 	ldrsh.w	r2, [r4, #56]	; 0x38
 800f784:	18c6      	adds	r6, r0, r3
 800f786:	4296      	cmp	r6, r2
 800f788:	dd98      	ble.n	800f6bc <_ZN8touchgfx12DrawableList9setOffsetEl+0x98>
 800f78a:	1b92      	subs	r2, r2, r6
 800f78c:	fb01 5502 	mla	r5, r1, r2, r5
 800f790:	4413      	add	r3, r2
 800f792:	e78c      	b.n	800f6ae <_ZN8touchgfx12DrawableList9setOffsetEl+0x8a>
 800f794:	4596      	cmp	lr, r2
 800f796:	d0ac      	beq.n	800f6f2 <_ZN8touchgfx12DrawableList9setOffsetEl+0xce>
 800f798:	3601      	adds	r6, #1
 800f79a:	e797      	b.n	800f6cc <_ZN8touchgfx12DrawableList9setOffsetEl+0xa8>
 800f79c:	2600      	movs	r6, #0
 800f79e:	e7a8      	b.n	800f6f2 <_ZN8touchgfx12DrawableList9setOffsetEl+0xce>
 800f7a0:	4606      	mov	r6, r0
 800f7a2:	e7a6      	b.n	800f6f2 <_ZN8touchgfx12DrawableList9setOffsetEl+0xce>
 800f7a4:	442b      	add	r3, r5
 800f7a6:	fb1c 3c0e 	smlabb	ip, ip, lr, r3
 800f7aa:	6d53      	ldr	r3, [r2, #84]	; 0x54
 800f7ac:	fa0f f28c 	sxth.w	r2, ip
 800f7b0:	e7d3      	b.n	800f75a <_ZN8touchgfx12DrawableList9setOffsetEl+0x136>
 800f7b2:	2b00      	cmp	r3, #0
 800f7b4:	dbe0      	blt.n	800f778 <_ZN8touchgfx12DrawableList9setOffsetEl+0x154>
 800f7b6:	f9b4 2038 	ldrsh.w	r2, [r4, #56]	; 0x38
 800f7ba:	4293      	cmp	r3, r2
 800f7bc:	dadc      	bge.n	800f778 <_ZN8touchgfx12DrawableList9setOffsetEl+0x154>
 800f7be:	f889 b025 	strb.w	fp, [r9, #37]	; 0x25
 800f7c2:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800f7c6:	b132      	cbz	r2, 800f7d6 <_ZN8touchgfx12DrawableList9setOffsetEl+0x1b2>
 800f7c8:	42be      	cmp	r6, r7
 800f7ca:	dc04      	bgt.n	800f7d6 <_ZN8touchgfx12DrawableList9setOffsetEl+0x1b2>
 800f7cc:	f9b4 203a 	ldrsh.w	r2, [r4, #58]	; 0x3a
 800f7d0:	4432      	add	r2, r6
 800f7d2:	4297      	cmp	r7, r2
 800f7d4:	dbd2      	blt.n	800f77c <_ZN8touchgfx12DrawableList9setOffsetEl+0x158>
 800f7d6:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800f7d8:	9301      	str	r3, [sp, #4]
 800f7da:	6802      	ldr	r2, [r0, #0]
 800f7dc:	68d2      	ldr	r2, [r2, #12]
 800f7de:	4790      	blx	r2
 800f7e0:	2800      	cmp	r0, #0
 800f7e2:	d0cb      	beq.n	800f77c <_ZN8touchgfx12DrawableList9setOffsetEl+0x158>
 800f7e4:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800f7e6:	f8b4 2042 	ldrh.w	r2, [r4, #66]	; 0x42
 800f7ea:	6801      	ldr	r1, [r0, #0]
 800f7ec:	9b01      	ldr	r3, [sp, #4]
 800f7ee:	4442      	add	r2, r8
 800f7f0:	b21b      	sxth	r3, r3
 800f7f2:	f8d1 8008 	ldr.w	r8, [r1, #8]
 800f7f6:	6c61      	ldr	r1, [r4, #68]	; 0x44
 800f7f8:	b212      	sxth	r2, r2
 800f7fa:	47c0      	blx	r8
 800f7fc:	f8d9 3000 	ldr.w	r3, [r9]
 800f800:	4648      	mov	r0, r9
 800f802:	695b      	ldr	r3, [r3, #20]
 800f804:	4798      	blx	r3
 800f806:	e7b9      	b.n	800f77c <_ZN8touchgfx12DrawableList9setOffsetEl+0x158>
 800f808:	2301      	movs	r3, #1
 800f80a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800f80e:	b003      	add	sp, #12
 800f810:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f814 <_ZNK8touchgfx12DrawableList9getOffsetEv>:
 800f814:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800f816:	4770      	bx	lr

0800f818 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss>:
 800f818:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f81a:	1c54      	adds	r4, r2, #1
 800f81c:	db2f      	blt.n	800f87e <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 800f81e:	f9b0 403a 	ldrsh.w	r4, [r0, #58]	; 0x3a
 800f822:	4294      	cmp	r4, r2
 800f824:	dd2b      	ble.n	800f87e <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 800f826:	b354      	cbz	r4, 800f87e <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 800f828:	f9b0 6038 	ldrsh.w	r6, [r0, #56]	; 0x38
 800f82c:	b33e      	cbz	r6, 800f87e <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 800f82e:	1c53      	adds	r3, r2, #1
 800f830:	d008      	beq.n	800f844 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x2c>
 800f832:	f9b0 303e 	ldrsh.w	r3, [r0, #62]	; 0x3e
 800f836:	1ad2      	subs	r2, r2, r3
 800f838:	4422      	add	r2, r4
 800f83a:	fb92 f3f4 	sdiv	r3, r2, r4
 800f83e:	fb04 2213 	mls	r2, r4, r3, r2
 800f842:	b212      	sxth	r2, r2
 800f844:	3201      	adds	r2, #1
 800f846:	b212      	sxth	r2, r2
 800f848:	4294      	cmp	r4, r2
 800f84a:	dd18      	ble.n	800f87e <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x66>
 800f84c:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800f84e:	f890 702d 	ldrb.w	r7, [r0, #45]	; 0x2d
 800f852:	b295      	uxth	r5, r2
 800f854:	442b      	add	r3, r5
 800f856:	b21b      	sxth	r3, r3
 800f858:	b127      	cbz	r7, 800f864 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x4c>
 800f85a:	fb93 f7f6 	sdiv	r7, r3, r6
 800f85e:	fb06 3317 	mls	r3, r6, r7, r3
 800f862:	b21b      	sxth	r3, r3
 800f864:	428b      	cmp	r3, r1
 800f866:	d108      	bne.n	800f87a <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x62>
 800f868:	f9b0 003e 	ldrsh.w	r0, [r0, #62]	; 0x3e
 800f86c:	4402      	add	r2, r0
 800f86e:	fb92 f0f4 	sdiv	r0, r2, r4
 800f872:	fb04 2010 	mls	r0, r4, r0, r2
 800f876:	b200      	sxth	r0, r0
 800f878:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f87a:	1c6a      	adds	r2, r5, #1
 800f87c:	e7e3      	b.n	800f846 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x2e>
 800f87e:	f04f 30ff 	mov.w	r0, #4294967295
 800f882:	e7f9      	b.n	800f878 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss+0x60>

0800f884 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>:
 800f884:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f888:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800f88a:	4604      	mov	r4, r0
 800f88c:	b913      	cbnz	r3, 800f894 <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x10>
 800f88e:	8743      	strh	r3, [r0, #58]	; 0x3a
 800f890:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f894:	f7ff fe9a 	bl	800f5cc <_ZNK8touchgfx12DrawableList28getRequiredNumberOfDrawablesEv>
 800f898:	8760      	strh	r0, [r4, #58]	; 0x3a
 800f89a:	4620      	mov	r0, r4
 800f89c:	f000 fdb6 	bl	801040c <_ZN8touchgfx9Container9removeAllEv>
 800f8a0:	2700      	movs	r7, #0
 800f8a2:	f9b4 303a 	ldrsh.w	r3, [r4, #58]	; 0x3a
 800f8a6:	42bb      	cmp	r3, r7
 800f8a8:	dd32      	ble.n	800f910 <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x8c>
 800f8aa:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800f8ac:	f8b4 1042 	ldrh.w	r1, [r4, #66]	; 0x42
 800f8b0:	6803      	ldr	r3, [r0, #0]
 800f8b2:	4439      	add	r1, r7
 800f8b4:	689b      	ldr	r3, [r3, #8]
 800f8b6:	b209      	sxth	r1, r1
 800f8b8:	4798      	blx	r3
 800f8ba:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800f8be:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800f8c0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800f8c2:	4606      	mov	r6, r0
 800f8c4:	b1ca      	cbz	r2, 800f8fa <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x76>
 800f8c6:	2200      	movs	r2, #0
 800f8c8:	eba3 0345 	sub.w	r3, r3, r5, lsl #1
 800f8cc:	f9b4 800a 	ldrsh.w	r8, [r4, #10]
 800f8d0:	4611      	mov	r1, r2
 800f8d2:	b21d      	sxth	r5, r3
 800f8d4:	f7f2 fcde 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800f8d8:	4642      	mov	r2, r8
 800f8da:	4629      	mov	r1, r5
 800f8dc:	4630      	mov	r0, r6
 800f8de:	f7f2 fbde 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f8e2:	6970      	ldr	r0, [r6, #20]
 800f8e4:	b118      	cbz	r0, 800f8ee <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x6a>
 800f8e6:	6803      	ldr	r3, [r0, #0]
 800f8e8:	4631      	mov	r1, r6
 800f8ea:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800f8ec:	4798      	blx	r3
 800f8ee:	4631      	mov	r1, r6
 800f8f0:	4620      	mov	r0, r4
 800f8f2:	f000 fdf1 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f8f6:	3701      	adds	r7, #1
 800f8f8:	e7d3      	b.n	800f8a2 <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x1e>
 800f8fa:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 800f8fe:	eba3 0345 	sub.w	r3, r3, r5, lsl #1
 800f902:	4611      	mov	r1, r2
 800f904:	b21d      	sxth	r5, r3
 800f906:	f7f2 fcc5 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 800f90a:	462a      	mov	r2, r5
 800f90c:	4641      	mov	r1, r8
 800f90e:	e7e5      	b.n	800f8dc <_ZN8touchgfx12DrawableList16refreshDrawablesEv+0x58>
 800f910:	2300      	movs	r3, #0
 800f912:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800f916:	63e3      	str	r3, [r4, #60]	; 0x3c
 800f918:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800f91a:	4620      	mov	r0, r4
 800f91c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f920:	f7ff be80 	b.w	800f624 <_ZN8touchgfx12DrawableList9setOffsetEl>

0800f924 <_ZN8touchgfx12DrawableList8setWidthEs>:
 800f924:	8101      	strh	r1, [r0, #8]
 800f926:	f7ff bfad 	b.w	800f884 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

0800f92a <_ZN8touchgfx12DrawableList9setHeightEs>:
 800f92a:	8141      	strh	r1, [r0, #10]
 800f92c:	f7ff bfaa 	b.w	800f884 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

0800f930 <_ZN8touchgfx12DrawableList13setHorizontalEb>:
 800f930:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800f934:	b121      	cbz	r1, 800f940 <_ZN8touchgfx12DrawableList13setHorizontalEb+0x10>
 800f936:	b92b      	cbnz	r3, 800f944 <_ZN8touchgfx12DrawableList13setHorizontalEb+0x14>
 800f938:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 800f93c:	f7ff bfa2 	b.w	800f884 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>
 800f940:	2b00      	cmp	r3, #0
 800f942:	d1f9      	bne.n	800f938 <_ZN8touchgfx12DrawableList13setHorizontalEb+0x8>
 800f944:	4770      	bx	lr

0800f946 <_ZN8touchgfx12DrawableList11setCircularEb>:
 800f946:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 800f94a:	b121      	cbz	r1, 800f956 <_ZN8touchgfx12DrawableList11setCircularEb+0x10>
 800f94c:	b92b      	cbnz	r3, 800f95a <_ZN8touchgfx12DrawableList11setCircularEb+0x14>
 800f94e:	f880 102d 	strb.w	r1, [r0, #45]	; 0x2d
 800f952:	f7ff bf97 	b.w	800f884 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>
 800f956:	2b00      	cmp	r3, #0
 800f958:	d1f9      	bne.n	800f94e <_ZN8touchgfx12DrawableList11setCircularEb+0x8>
 800f95a:	4770      	bx	lr

0800f95c <_ZN8touchgfx12DrawableList12setDrawablesERNS_26DrawableListItemsInterfaceEsRNS_15GenericCallbackIPS1_ssEE>:
 800f95c:	b410      	push	{r4}
 800f95e:	6441      	str	r1, [r0, #68]	; 0x44
 800f960:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 800f964:	6483      	str	r3, [r0, #72]	; 0x48
 800f966:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f96a:	f7ff bf8b 	b.w	800f884 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

0800f96e <_ZN8touchgfx12DrawableList16setNumberOfItemsEs>:
 800f96e:	8701      	strh	r1, [r0, #56]	; 0x38
 800f970:	f7ff bf88 	b.w	800f884 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

0800f974 <_ZN8touchgfx12DrawableList11itemChangedEs>:
 800f974:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f976:	4604      	mov	r4, r0
 800f978:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800f97a:	460e      	mov	r6, r1
 800f97c:	b1c0      	cbz	r0, 800f9b0 <_ZN8touchgfx12DrawableList11itemChangedEs+0x3c>
 800f97e:	6803      	ldr	r3, [r0, #0]
 800f980:	68db      	ldr	r3, [r3, #12]
 800f982:	4798      	blx	r3
 800f984:	b1a0      	cbz	r0, 800f9b0 <_ZN8touchgfx12DrawableList11itemChangedEs+0x3c>
 800f986:	f04f 35ff 	mov.w	r5, #4294967295
 800f98a:	462a      	mov	r2, r5
 800f98c:	4631      	mov	r1, r6
 800f98e:	4620      	mov	r0, r4
 800f990:	f7ff ff42 	bl	800f818 <_ZNK8touchgfx12DrawableList16getDrawableIndexEss>
 800f994:	1c43      	adds	r3, r0, #1
 800f996:	4605      	mov	r5, r0
 800f998:	d00a      	beq.n	800f9b0 <_ZN8touchgfx12DrawableList11itemChangedEs+0x3c>
 800f99a:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800f99c:	f8b4 2042 	ldrh.w	r2, [r4, #66]	; 0x42
 800f9a0:	6803      	ldr	r3, [r0, #0]
 800f9a2:	6c61      	ldr	r1, [r4, #68]	; 0x44
 800f9a4:	689f      	ldr	r7, [r3, #8]
 800f9a6:	442a      	add	r2, r5
 800f9a8:	4633      	mov	r3, r6
 800f9aa:	b212      	sxth	r2, r2
 800f9ac:	47b8      	blx	r7
 800f9ae:	e7ec      	b.n	800f98a <_ZN8touchgfx12DrawableList11itemChangedEs+0x16>
 800f9b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f9b2 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE>:
 800f9b2:	b570      	push	{r4, r5, r6, lr}
 800f9b4:	790b      	ldrb	r3, [r1, #4]
 800f9b6:	4604      	mov	r4, r0
 800f9b8:	2b00      	cmp	r3, #0
 800f9ba:	d158      	bne.n	800fa6e <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0xbc>
 800f9bc:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800f9c0:	f8a0 30b0 	strh.w	r3, [r0, #176]	; 0xb0
 800f9c4:	f9b1 3008 	ldrsh.w	r3, [r1, #8]
 800f9c8:	f8a0 30b2 	strh.w	r3, [r0, #178]	; 0xb2
 800f9cc:	6803      	ldr	r3, [r0, #0]
 800f9ce:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800f9d2:	4798      	blx	r3
 800f9d4:	6823      	ldr	r3, [r4, #0]
 800f9d6:	f8c4 00b4 	str.w	r0, [r4, #180]	; 0xb4
 800f9da:	4601      	mov	r1, r0
 800f9dc:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 800f9e0:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800f9e4:	4620      	mov	r0, r4
 800f9e6:	4798      	blx	r3
 800f9e8:	4601      	mov	r1, r0
 800f9ea:	4620      	mov	r0, r4
 800f9ec:	47a8      	blx	r5
 800f9ee:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
 800f9f2:	2800      	cmp	r0, #0
 800f9f4:	f000 809f 	beq.w	800fb36 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 800f9f8:	6803      	ldr	r3, [r0, #0]
 800f9fa:	68db      	ldr	r3, [r3, #12]
 800f9fc:	4798      	blx	r3
 800f9fe:	2800      	cmp	r0, #0
 800fa00:	f000 8099 	beq.w	800fb36 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 800fa04:	6823      	ldr	r3, [r4, #0]
 800fa06:	4620      	mov	r0, r4
 800fa08:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800fa0c:	4798      	blx	r3
 800fa0e:	b358      	cbz	r0, 800fa68 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0xb6>
 800fa10:	f9b4 50b0 	ldrsh.w	r5, [r4, #176]	; 0xb0
 800fa14:	6823      	ldr	r3, [r4, #0]
 800fa16:	4620      	mov	r0, r4
 800fa18:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800fa1c:	4798      	blx	r3
 800fa1e:	6823      	ldr	r3, [r4, #0]
 800fa20:	1a2d      	subs	r5, r5, r0
 800fa22:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800fa26:	4620      	mov	r0, r4
 800fa28:	4798      	blx	r3
 800fa2a:	f8b4 607c 	ldrh.w	r6, [r4, #124]	; 0x7c
 800fa2e:	6823      	ldr	r3, [r4, #0]
 800fa30:	fb16 f600 	smulbb	r6, r6, r0
 800fa34:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800fa38:	4620      	mov	r0, r4
 800fa3a:	4798      	blx	r3
 800fa3c:	b120      	cbz	r0, 800fa48 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x96>
 800fa3e:	4435      	add	r5, r6
 800fa40:	fb95 f1f6 	sdiv	r1, r5, r6
 800fa44:	fb06 5511 	mls	r5, r6, r1, r5
 800fa48:	2d00      	cmp	r5, #0
 800fa4a:	db74      	blt.n	800fb36 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 800fa4c:	42b5      	cmp	r5, r6
 800fa4e:	da72      	bge.n	800fb36 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 800fa50:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
 800fa54:	f9b4 107c 	ldrsh.w	r1, [r4, #124]	; 0x7c
 800fa58:	fb95 f1f1 	sdiv	r1, r5, r1
 800fa5c:	6803      	ldr	r3, [r0, #0]
 800fa5e:	b209      	sxth	r1, r1
 800fa60:	689b      	ldr	r3, [r3, #8]
 800fa62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fa66:	4718      	bx	r3
 800fa68:	f9b4 50b2 	ldrsh.w	r5, [r4, #178]	; 0xb2
 800fa6c:	e7d2      	b.n	800fa14 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x62>
 800fa6e:	2b01      	cmp	r3, #1
 800fa70:	d161      	bne.n	800fb36 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 800fa72:	f890 309c 	ldrb.w	r3, [r0, #156]	; 0x9c
 800fa76:	2b00      	cmp	r3, #0
 800fa78:	d14a      	bne.n	800fb10 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x15e>
 800fa7a:	6803      	ldr	r3, [r0, #0]
 800fa7c:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 800fa80:	f8d3 60c0 	ldr.w	r6, [r3, #192]	; 0xc0
 800fa84:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800fa88:	4798      	blx	r3
 800fa8a:	4601      	mov	r1, r0
 800fa8c:	4620      	mov	r0, r4
 800fa8e:	47b0      	blx	r6
 800fa90:	4601      	mov	r1, r0
 800fa92:	4620      	mov	r0, r4
 800fa94:	47a8      	blx	r5
 800fa96:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
 800fa9a:	2800      	cmp	r0, #0
 800fa9c:	d04b      	beq.n	800fb36 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 800fa9e:	6803      	ldr	r3, [r0, #0]
 800faa0:	68db      	ldr	r3, [r3, #12]
 800faa2:	4798      	blx	r3
 800faa4:	2800      	cmp	r0, #0
 800faa6:	d046      	beq.n	800fb36 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 800faa8:	6823      	ldr	r3, [r4, #0]
 800faaa:	4620      	mov	r0, r4
 800faac:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800fab0:	4798      	blx	r3
 800fab2:	b330      	cbz	r0, 800fb02 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x150>
 800fab4:	f9b4 50b0 	ldrsh.w	r5, [r4, #176]	; 0xb0
 800fab8:	6823      	ldr	r3, [r4, #0]
 800faba:	4620      	mov	r0, r4
 800fabc:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800fac0:	4798      	blx	r3
 800fac2:	6823      	ldr	r3, [r4, #0]
 800fac4:	1a2d      	subs	r5, r5, r0
 800fac6:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800faca:	4620      	mov	r0, r4
 800facc:	4798      	blx	r3
 800face:	f8b4 607c 	ldrh.w	r6, [r4, #124]	; 0x7c
 800fad2:	6823      	ldr	r3, [r4, #0]
 800fad4:	fb16 f600 	smulbb	r6, r6, r0
 800fad8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800fadc:	4620      	mov	r0, r4
 800fade:	4798      	blx	r3
 800fae0:	b190      	cbz	r0, 800fb08 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x156>
 800fae2:	19a9      	adds	r1, r5, r6
 800fae4:	fb91 f3f6 	sdiv	r3, r1, r6
 800fae8:	fb06 1113 	mls	r1, r6, r3, r1
 800faec:	2900      	cmp	r1, #0
 800faee:	db22      	blt.n	800fb36 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 800faf0:	42b1      	cmp	r1, r6
 800faf2:	da20      	bge.n	800fb36 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 800faf4:	f9b4 307c 	ldrsh.w	r3, [r4, #124]	; 0x7c
 800faf8:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
 800fafc:	fb91 f1f3 	sdiv	r1, r1, r3
 800fb00:	e7ac      	b.n	800fa5c <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0xaa>
 800fb02:	f9b4 50b2 	ldrsh.w	r5, [r4, #178]	; 0xb2
 800fb06:	e7d7      	b.n	800fab8 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x106>
 800fb08:	f9b4 107a 	ldrsh.w	r1, [r4, #122]	; 0x7a
 800fb0c:	1a69      	subs	r1, r5, r1
 800fb0e:	e7ed      	b.n	800faec <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x13a>
 800fb10:	2b02      	cmp	r3, #2
 800fb12:	d110      	bne.n	800fb36 <_ZN8touchgfx10ScrollList16handleClickEventERKNS_10ClickEventE+0x184>
 800fb14:	6803      	ldr	r3, [r0, #0]
 800fb16:	e9d3 6530 	ldrd	r6, r5, [r3, #192]	; 0xc0
 800fb1a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800fb1e:	4798      	blx	r3
 800fb20:	4601      	mov	r1, r0
 800fb22:	4620      	mov	r0, r4
 800fb24:	47b0      	blx	r6
 800fb26:	462b      	mov	r3, r5
 800fb28:	4601      	mov	r1, r0
 800fb2a:	f04f 32ff 	mov.w	r2, #4294967295
 800fb2e:	4620      	mov	r0, r4
 800fb30:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fb34:	4718      	bx	r3
 800fb36:	bd70      	pop	{r4, r5, r6, pc}

0800fb38 <_ZNK8touchgfx10ScrollList22keepOffsetInsideLimitsEls>:
 800fb38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fb3c:	6803      	ldr	r3, [r0, #0]
 800fb3e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800fb42:	4605      	mov	r5, r0
 800fb44:	460e      	mov	r6, r1
 800fb46:	4617      	mov	r7, r2
 800fb48:	4798      	blx	r3
 800fb4a:	4604      	mov	r4, r0
 800fb4c:	b9d8      	cbnz	r0, 800fb86 <_ZNK8touchgfx10ScrollList22keepOffsetInsideLimitsEls+0x4e>
 800fb4e:	682b      	ldr	r3, [r5, #0]
 800fb50:	f8d5 80c0 	ldr.w	r8, [r5, #192]	; 0xc0
 800fb54:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800fb58:	42be      	cmp	r6, r7
 800fb5a:	4628      	mov	r0, r5
 800fb5c:	bfa8      	it	ge
 800fb5e:	463e      	movge	r6, r7
 800fb60:	4798      	blx	r3
 800fb62:	4580      	cmp	r8, r0
 800fb64:	da07      	bge.n	800fb76 <_ZNK8touchgfx10ScrollList22keepOffsetInsideLimitsEls+0x3e>
 800fb66:	682b      	ldr	r3, [r5, #0]
 800fb68:	4628      	mov	r0, r5
 800fb6a:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800fb6e:	4798      	blx	r3
 800fb70:	f8d5 40c0 	ldr.w	r4, [r5, #192]	; 0xc0
 800fb74:	1b04      	subs	r4, r0, r4
 800fb76:	f9b5 107c 	ldrsh.w	r1, [r5, #124]	; 0x7c
 800fb7a:	434c      	muls	r4, r1
 800fb7c:	4264      	negs	r4, r4
 800fb7e:	1be1      	subs	r1, r4, r7
 800fb80:	428e      	cmp	r6, r1
 800fb82:	bfb8      	it	lt
 800fb84:	460e      	movlt	r6, r1
 800fb86:	4630      	mov	r0, r6
 800fb88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fb8c <_ZN8touchgfx10ScrollListD1Ev>:
 800fb8c:	4770      	bx	lr

0800fb8e <_ZN8touchgfx10ScrollList12setDrawablesERNS_26DrawableListItemsInterfaceERNS_15GenericCallbackIPS1_ssEE>:
 800fb8e:	b570      	push	{r4, r5, r6, lr}
 800fb90:	460d      	mov	r5, r1
 800fb92:	4604      	mov	r4, r0
 800fb94:	4616      	mov	r6, r2
 800fb96:	f000 fa1f 	bl	800ffd8 <_ZN8touchgfx10ScrollBase13stopAnimationEv>
 800fb9a:	682b      	ldr	r3, [r5, #0]
 800fb9c:	4628      	mov	r0, r5
 800fb9e:	68db      	ldr	r3, [r3, #12]
 800fba0:	4798      	blx	r3
 800fba2:	4633      	mov	r3, r6
 800fba4:	f8a4 0078 	strh.w	r0, [r4, #120]	; 0x78
 800fba8:	4629      	mov	r1, r5
 800fbaa:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 800fbae:	2200      	movs	r2, #0
 800fbb0:	f7ff fed4 	bl	800f95c <_ZN8touchgfx12DrawableList12setDrawablesERNS_26DrawableListItemsInterfaceEsRNS_15GenericCallbackIPS1_ssEE>
 800fbb4:	6823      	ldr	r3, [r4, #0]
 800fbb6:	4620      	mov	r0, r4
 800fbb8:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800fbbc:	2100      	movs	r1, #0
 800fbbe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fbc2:	4718      	bx	r3

0800fbc4 <_ZN8touchgfx10ScrollBase10initializeEv>:
 800fbc4:	302c      	adds	r0, #44	; 0x2c
 800fbc6:	f7ff be5d 	b.w	800f884 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

0800fbca <_ZN8touchgfx10ScrollList18getPositionForItemEs>:
 800fbca:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fbce:	6803      	ldr	r3, [r0, #0]
 800fbd0:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800fbd4:	460f      	mov	r7, r1
 800fbd6:	4604      	mov	r4, r0
 800fbd8:	4798      	blx	r3
 800fbda:	4601      	mov	r1, r0
 800fbdc:	4620      	mov	r0, r4
 800fbde:	f000 fa48 	bl	8010072 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>
 800fbe2:	2f00      	cmp	r7, #0
 800fbe4:	4606      	mov	r6, r0
 800fbe6:	db6b      	blt.n	800fcc0 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xf6>
 800fbe8:	f104 092c 	add.w	r9, r4, #44	; 0x2c
 800fbec:	4648      	mov	r0, r9
 800fbee:	f7ff fcea 	bl	800f5c6 <_ZNK8touchgfx12DrawableList16getNumberOfItemsEv>
 800fbf2:	42b8      	cmp	r0, r7
 800fbf4:	dd64      	ble.n	800fcc0 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xf6>
 800fbf6:	f9b4 507c 	ldrsh.w	r5, [r4, #124]	; 0x7c
 800fbfa:	2d00      	cmp	r5, #0
 800fbfc:	d060      	beq.n	800fcc0 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xf6>
 800fbfe:	6823      	ldr	r3, [r4, #0]
 800fc00:	4278      	negs	r0, r7
 800fc02:	4345      	muls	r5, r0
 800fc04:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800fc08:	4620      	mov	r0, r4
 800fc0a:	4798      	blx	r3
 800fc0c:	2800      	cmp	r0, #0
 800fc0e:	d05a      	beq.n	800fcc6 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xfc>
 800fc10:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 800fc14:	f8b4 107a 	ldrh.w	r1, [r4, #122]	; 0x7a
 800fc18:	f8b4 30ba 	ldrh.w	r3, [r4, #186]	; 0xba
 800fc1c:	4419      	add	r1, r3
 800fc1e:	eba8 0801 	sub.w	r8, r8, r1
 800fc22:	4648      	mov	r0, r9
 800fc24:	fa0f f888 	sxth.w	r8, r8
 800fc28:	f7ff fc89 	bl	800f53e <_ZNK8touchgfx12DrawableList11getCircularEv>
 800fc2c:	2800      	cmp	r0, #0
 800fc2e:	d051      	beq.n	800fcd4 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x10a>
 800fc30:	46b2      	mov	sl, r6
 800fc32:	4651      	mov	r1, sl
 800fc34:	4620      	mov	r0, r4
 800fc36:	f000 fa1c 	bl	8010072 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>
 800fc3a:	f9b4 307c 	ldrsh.w	r3, [r4, #124]	; 0x7c
 800fc3e:	4240      	negs	r0, r0
 800fc40:	fb90 f0f3 	sdiv	r0, r0, r3
 800fc44:	b200      	sxth	r0, r0
 800fc46:	4287      	cmp	r7, r0
 800fc48:	d03a      	beq.n	800fcc0 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xf6>
 800fc4a:	ebaa 0a03 	sub.w	sl, sl, r3
 800fc4e:	eba8 0303 	sub.w	r3, r8, r3
 800fc52:	1af3      	subs	r3, r6, r3
 800fc54:	4553      	cmp	r3, sl
 800fc56:	ddec      	ble.n	800fc32 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x68>
 800fc58:	4648      	mov	r0, r9
 800fc5a:	f7ff fcb4 	bl	800f5c6 <_ZNK8touchgfx12DrawableList16getNumberOfItemsEv>
 800fc5e:	f9b4 107c 	ldrsh.w	r1, [r4, #124]	; 0x7c
 800fc62:	fb00 f701 	mul.w	r7, r0, r1
 800fc66:	eba8 0101 	sub.w	r1, r8, r1
 800fc6a:	1a71      	subs	r1, r6, r1
 800fc6c:	4620      	mov	r0, r4
 800fc6e:	f000 fa00 	bl	8010072 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>
 800fc72:	eb05 0a07 	add.w	sl, r5, r7
 800fc76:	eba5 0906 	sub.w	r9, r5, r6
 800fc7a:	ebaa 0a06 	sub.w	sl, sl, r6
 800fc7e:	1beb      	subs	r3, r5, r7
 800fc80:	ea89 72e9 	eor.w	r2, r9, r9, asr #31
 800fc84:	ea8a 71ea 	eor.w	r1, sl, sl, asr #31
 800fc88:	1ac3      	subs	r3, r0, r3
 800fc8a:	eba2 72e9 	sub.w	r2, r2, r9, asr #31
 800fc8e:	eba1 71ea 	sub.w	r1, r1, sl, asr #31
 800fc92:	4291      	cmp	r1, r2
 800fc94:	bfb8      	it	lt
 800fc96:	46d1      	movlt	r9, sl
 800fc98:	ea83 72e3 	eor.w	r2, r3, r3, asr #31
 800fc9c:	1b45      	subs	r5, r0, r5
 800fc9e:	eba2 72e3 	sub.w	r2, r2, r3, asr #31
 800fca2:	d52f      	bpl.n	800fd04 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x13a>
 800fca4:	4269      	negs	r1, r5
 800fca6:	4291      	cmp	r1, r2
 800fca8:	dd10      	ble.n	800fccc <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x102>
 800fcaa:	2b00      	cmp	r3, #0
 800fcac:	da10      	bge.n	800fcd0 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x106>
 800fcae:	425d      	negs	r5, r3
 800fcb0:	ea89 72e9 	eor.w	r2, r9, r9, asr #31
 800fcb4:	eba2 72e9 	sub.w	r2, r2, r9, asr #31
 800fcb8:	4295      	cmp	r5, r2
 800fcba:	bfb4      	ite	lt
 800fcbc:	1af6      	sublt	r6, r6, r3
 800fcbe:	444e      	addge	r6, r9
 800fcc0:	4630      	mov	r0, r6
 800fcc2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800fcc6:	f9b4 800a 	ldrsh.w	r8, [r4, #10]
 800fcca:	e7a3      	b.n	800fc14 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x4a>
 800fccc:	462b      	mov	r3, r5
 800fcce:	e7ee      	b.n	800fcae <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xe4>
 800fcd0:	461d      	mov	r5, r3
 800fcd2:	e7ed      	b.n	800fcb0 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xe6>
 800fcd4:	42ae      	cmp	r6, r5
 800fcd6:	db13      	blt.n	800fd00 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x136>
 800fcd8:	f9b4 207c 	ldrsh.w	r2, [r4, #124]	; 0x7c
 800fcdc:	fb98 f3f2 	sdiv	r3, r8, r2
 800fce0:	b21b      	sxth	r3, r3
 800fce2:	2b00      	cmp	r3, #0
 800fce4:	dd05      	ble.n	800fcf2 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x128>
 800fce6:	f894 10bc 	ldrb.w	r1, [r4, #188]	; 0xbc
 800fcea:	b131      	cbz	r1, 800fcfa <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x130>
 800fcec:	3b01      	subs	r3, #1
 800fcee:	fb02 5503 	mla	r5, r2, r3, r5
 800fcf2:	42ae      	cmp	r6, r5
 800fcf4:	bfa8      	it	ge
 800fcf6:	462e      	movge	r6, r5
 800fcf8:	e7e2      	b.n	800fcc0 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xf6>
 800fcfa:	4445      	add	r5, r8
 800fcfc:	1aad      	subs	r5, r5, r2
 800fcfe:	e7f8      	b.n	800fcf2 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0x128>
 800fd00:	462e      	mov	r6, r5
 800fd02:	e7dd      	b.n	800fcc0 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xf6>
 800fd04:	4295      	cmp	r5, r2
 800fd06:	dcd0      	bgt.n	800fcaa <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xe0>
 800fd08:	462b      	mov	r3, r5
 800fd0a:	e7d1      	b.n	800fcb0 <_ZN8touchgfx10ScrollList18getPositionForItemEs+0xe6>

0800fd0c <_ZN8touchgfx10ScrollListD0Ev>:
 800fd0c:	b510      	push	{r4, lr}
 800fd0e:	21c4      	movs	r1, #196	; 0xc4
 800fd10:	4604      	mov	r4, r0
 800fd12:	f014 fb62 	bl	80243da <_ZdlPvj>
 800fd16:	4620      	mov	r0, r4
 800fd18:	bd10      	pop	{r4, pc}

0800fd1a <_ZNK8touchgfx10ScrollList23getNearestAlignedOffsetEl>:
 800fd1a:	f890 20bc 	ldrb.w	r2, [r0, #188]	; 0xbc
 800fd1e:	b10a      	cbz	r2, 800fd24 <_ZNK8touchgfx10ScrollList23getNearestAlignedOffsetEl+0xa>
 800fd20:	f000 b8a2 	b.w	800fe68 <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl>
 800fd24:	6803      	ldr	r3, [r0, #0]
 800fd26:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800fd2a:	4718      	bx	r3

0800fd2c <_ZN8touchgfx10ScrollListC1Ev>:
 800fd2c:	b510      	push	{r4, lr}
 800fd2e:	4604      	mov	r4, r0
 800fd30:	f000 fa0e 	bl	8010150 <_ZN8touchgfx10ScrollBaseC1Ev>
 800fd34:	4b05      	ldr	r3, [pc, #20]	; (800fd4c <_ZN8touchgfx10ScrollListC1Ev+0x20>)
 800fd36:	6023      	str	r3, [r4, #0]
 800fd38:	2300      	movs	r3, #0
 800fd3a:	f8a4 30ba 	strh.w	r3, [r4, #186]	; 0xba
 800fd3e:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 800fd42:	2301      	movs	r3, #1
 800fd44:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800fd48:	4620      	mov	r0, r4
 800fd4a:	bd10      	pop	{r4, pc}
 800fd4c:	08028d94 	.word	0x08028d94

0800fd50 <_ZN8touchgfx10ScrollList10setPaddingEss>:
 800fd50:	b570      	push	{r4, r5, r6, lr}
 800fd52:	6803      	ldr	r3, [r0, #0]
 800fd54:	4604      	mov	r4, r0
 800fd56:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800fd5a:	460e      	mov	r6, r1
 800fd5c:	4615      	mov	r5, r2
 800fd5e:	4798      	blx	r3
 800fd60:	6823      	ldr	r3, [r4, #0]
 800fd62:	f8a4 607a 	strh.w	r6, [r4, #122]	; 0x7a
 800fd66:	f8a4 50ba 	strh.w	r5, [r4, #186]	; 0xba
 800fd6a:	4601      	mov	r1, r0
 800fd6c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800fd70:	4620      	mov	r0, r4
 800fd72:	4798      	blx	r3
 800fd74:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 800fd78:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fd7c:	f7ff bd82 	b.w	800f884 <_ZN8touchgfx12DrawableList16refreshDrawablesEv>

0800fd80 <_ZN8touchgfx10ScrollList11setSnappingEb>:
 800fd80:	b570      	push	{r4, r5, r6, lr}
 800fd82:	4604      	mov	r4, r0
 800fd84:	f880 10bc 	strb.w	r1, [r0, #188]	; 0xbc
 800fd88:	b181      	cbz	r1, 800fdac <_ZN8touchgfx10ScrollList11setSnappingEb+0x2c>
 800fd8a:	6803      	ldr	r3, [r0, #0]
 800fd8c:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 800fd90:	f8d3 60c0 	ldr.w	r6, [r3, #192]	; 0xc0
 800fd94:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800fd98:	4798      	blx	r3
 800fd9a:	4601      	mov	r1, r0
 800fd9c:	4620      	mov	r0, r4
 800fd9e:	47b0      	blx	r6
 800fda0:	462b      	mov	r3, r5
 800fda2:	4601      	mov	r1, r0
 800fda4:	4620      	mov	r0, r4
 800fda6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fdaa:	4718      	bx	r3
 800fdac:	bd70      	pop	{r4, r5, r6, pc}

0800fdae <_ZN8touchgfx10ScrollBase13animateToItemEss>:
 800fdae:	b570      	push	{r4, r5, r6, lr}
 800fdb0:	6803      	ldr	r3, [r0, #0]
 800fdb2:	4604      	mov	r4, r0
 800fdb4:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 800fdb8:	4615      	mov	r5, r2
 800fdba:	4798      	blx	r3
 800fdbc:	6823      	ldr	r3, [r4, #0]
 800fdbe:	462a      	mov	r2, r5
 800fdc0:	4601      	mov	r1, r0
 800fdc2:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800fdc6:	4620      	mov	r0, r4
 800fdc8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fdcc:	4718      	bx	r3

0800fdce <_ZNK8touchgfx10ScrollBase16getNumberOfItemsEv>:
 800fdce:	302c      	adds	r0, #44	; 0x2c
 800fdd0:	f7ff bbf9 	b.w	800f5c6 <_ZNK8touchgfx12DrawableList16getNumberOfItemsEv>

0800fdd4 <_ZN8touchgfx10ScrollBase11itemChangedEi>:
 800fdd4:	b209      	sxth	r1, r1
 800fdd6:	302c      	adds	r0, #44	; 0x2c
 800fdd8:	f7ff bdcc 	b.w	800f974 <_ZN8touchgfx12DrawableList11itemChangedEs>

0800fddc <_ZN8touchgfx10ScrollBase9setOffsetEl>:
 800fddc:	f9b0 307a 	ldrsh.w	r3, [r0, #122]	; 0x7a
 800fde0:	302c      	adds	r0, #44	; 0x2c
 800fde2:	4419      	add	r1, r3
 800fde4:	f7ff bc1e 	b.w	800f624 <_ZN8touchgfx12DrawableList9setOffsetEl>

0800fde8 <_ZNK8touchgfx10ScrollBase9getOffsetEv>:
 800fde8:	b510      	push	{r4, lr}
 800fdea:	4604      	mov	r4, r0
 800fdec:	302c      	adds	r0, #44	; 0x2c
 800fdee:	f7ff fd11 	bl	800f814 <_ZNK8touchgfx12DrawableList9getOffsetEv>
 800fdf2:	f9b4 307a 	ldrsh.w	r3, [r4, #122]	; 0x7a
 800fdf6:	1ac0      	subs	r0, r0, r3
 800fdf8:	bd10      	pop	{r4, pc}

0800fdfa <_ZN8touchgfx10ScrollBase17animateToPositionEls>:
 800fdfa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fdfc:	6803      	ldr	r3, [r0, #0]
 800fdfe:	4604      	mov	r4, r0
 800fe00:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800fe04:	4615      	mov	r5, r2
 800fe06:	460f      	mov	r7, r1
 800fe08:	4798      	blx	r3
 800fe0a:	6823      	ldr	r3, [r4, #0]
 800fe0c:	4606      	mov	r6, r0
 800fe0e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800fe12:	4639      	mov	r1, r7
 800fe14:	4620      	mov	r0, r4
 800fe16:	4798      	blx	r3
 800fe18:	2d00      	cmp	r5, #0
 800fe1a:	eba0 0306 	sub.w	r3, r0, r6
 800fe1e:	bfb8      	it	lt
 800fe20:	f9b4 5088 	ldrshlt.w	r5, [r4, #136]	; 0x88
 800fe24:	2b00      	cmp	r3, #0
 800fe26:	bfb8      	it	lt
 800fe28:	425b      	neglt	r3, r3
 800fe2a:	429d      	cmp	r5, r3
 800fe2c:	bfa8      	it	ge
 800fe2e:	b21d      	sxthge	r5, r3
 800fe30:	2d00      	cmp	r5, #0
 800fe32:	4601      	mov	r1, r0
 800fe34:	dc08      	bgt.n	800fe48 <_ZN8touchgfx10ScrollBase17animateToPositionEls+0x4e>
 800fe36:	6823      	ldr	r3, [r4, #0]
 800fe38:	4620      	mov	r0, r4
 800fe3a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800fe3e:	4798      	blx	r3
 800fe40:	2300      	movs	r3, #0
 800fe42:	f884 309c 	strb.w	r3, [r4, #156]	; 0x9c
 800fe46:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fe48:	2300      	movs	r3, #0
 800fe4a:	e9c4 3528 	strd	r3, r5, [r4, #160]	; 0xa0
 800fe4e:	f894 309c 	ldrb.w	r3, [r4, #156]	; 0x9c
 800fe52:	2b01      	cmp	r3, #1
 800fe54:	e9c4 602a 	strd	r6, r0, [r4, #168]	; 0xa8
 800fe58:	d0f5      	beq.n	800fe46 <_ZN8touchgfx10ScrollBase17animateToPositionEls+0x4c>
 800fe5a:	f004 fcf9 	bl	8014850 <_ZN8touchgfx11Application11getInstanceEv>
 800fe5e:	4621      	mov	r1, r4
 800fe60:	f004 fcfc 	bl	801485c <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
 800fe64:	2301      	movs	r3, #1
 800fe66:	e7ec      	b.n	800fe42 <_ZN8touchgfx10ScrollBase17animateToPositionEls+0x48>

0800fe68 <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl>:
 800fe68:	b538      	push	{r3, r4, r5, lr}
 800fe6a:	f9b0 307c 	ldrsh.w	r3, [r0, #124]	; 0x7c
 800fe6e:	4605      	mov	r5, r0
 800fe70:	460c      	mov	r4, r1
 800fe72:	b193      	cbz	r3, 800fe9a <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl+0x32>
 800fe74:	6803      	ldr	r3, [r0, #0]
 800fe76:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800fe7a:	4798      	blx	r3
 800fe7c:	4602      	mov	r2, r0
 800fe7e:	b170      	cbz	r0, 800fe9e <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl+0x36>
 800fe80:	f9b5 307c 	ldrsh.w	r3, [r5, #124]	; 0x7c
 800fe84:	2c00      	cmp	r4, #0
 800fe86:	f04f 0102 	mov.w	r1, #2
 800fe8a:	fb93 f1f1 	sdiv	r1, r3, r1
 800fe8e:	bfb4      	ite	lt
 800fe90:	1a64      	sublt	r4, r4, r1
 800fe92:	1864      	addge	r4, r4, r1
 800fe94:	fb94 f4f3 	sdiv	r4, r4, r3
 800fe98:	435c      	muls	r4, r3
 800fe9a:	4620      	mov	r0, r4
 800fe9c:	bd38      	pop	{r3, r4, r5, pc}
 800fe9e:	682b      	ldr	r3, [r5, #0]
 800fea0:	4621      	mov	r1, r4
 800fea2:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800fea6:	4628      	mov	r0, r5
 800fea8:	4798      	blx	r3
 800feaa:	f9b5 407c 	ldrsh.w	r4, [r5, #124]	; 0x7c
 800feae:	2302      	movs	r3, #2
 800feb0:	fb94 f3f3 	sdiv	r3, r4, r3
 800feb4:	1ac0      	subs	r0, r0, r3
 800feb6:	fb90 f0f4 	sdiv	r0, r0, r4
 800feba:	4344      	muls	r4, r0
 800febc:	e7ed      	b.n	800fe9a <_ZNK8touchgfx10ScrollBase23getNearestAlignedOffsetEl+0x32>

0800febe <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs>:
 800febe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fec2:	6803      	ldr	r3, [r0, #0]
 800fec4:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800fec8:	460d      	mov	r5, r1
 800feca:	4604      	mov	r4, r0
 800fecc:	4798      	blx	r3
 800fece:	42a8      	cmp	r0, r5
 800fed0:	d020      	beq.n	800ff14 <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs+0x56>
 800fed2:	4629      	mov	r1, r5
 800fed4:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 800fed8:	f7ff fd49 	bl	800f96e <_ZN8touchgfx12DrawableList16setNumberOfItemsEs>
 800fedc:	6823      	ldr	r3, [r4, #0]
 800fede:	4620      	mov	r0, r4
 800fee0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800fee4:	4798      	blx	r3
 800fee6:	4605      	mov	r5, r0
 800fee8:	b9a0      	cbnz	r0, 800ff14 <_ZN8touchgfx10ScrollBase16setNumberOfItemsEs+0x56>
 800feea:	6823      	ldr	r3, [r4, #0]
 800feec:	4620      	mov	r0, r4
 800feee:	f8d3 60c4 	ldr.w	r6, [r3, #196]	; 0xc4
 800fef2:	f8d3 70bc 	ldr.w	r7, [r3, #188]	; 0xbc
 800fef6:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800fefa:	4798      	blx	r3
 800fefc:	462a      	mov	r2, r5
 800fefe:	4601      	mov	r1, r0
 800ff00:	4620      	mov	r0, r4
 800ff02:	47b8      	blx	r7
 800ff04:	4633      	mov	r3, r6
 800ff06:	4601      	mov	r1, r0
 800ff08:	f04f 32ff 	mov.w	r2, #4294967295
 800ff0c:	4620      	mov	r0, r4
 800ff0e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ff12:	4718      	bx	r3
 800ff14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ff18 <_ZN8touchgfx10ScrollBase18handleGestureEventERKNS_12GestureEventE>:
 800ff18:	b570      	push	{r4, r5, r6, lr}
 800ff1a:	6803      	ldr	r3, [r0, #0]
 800ff1c:	790e      	ldrb	r6, [r1, #4]
 800ff1e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800ff22:	4605      	mov	r5, r0
 800ff24:	460c      	mov	r4, r1
 800ff26:	4798      	blx	r3
 800ff28:	f080 0001 	eor.w	r0, r0, #1
 800ff2c:	b2c0      	uxtb	r0, r0
 800ff2e:	42b0      	cmp	r0, r6
 800ff30:	d141      	bne.n	800ffb6 <_ZN8touchgfx10ScrollBase18handleGestureEventERKNS_12GestureEventE+0x9e>
 800ff32:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800ff36:	2b00      	cmp	r3, #0
 800ff38:	bfbd      	ittte	lt
 800ff3a:	425b      	neglt	r3, r3
 800ff3c:	b21b      	sxthlt	r3, r3
 800ff3e:	f04f 36ff 	movlt.w	r6, #4294967295
 800ff42:	2601      	movge	r6, #1
 800ff44:	2b04      	cmp	r3, #4
 800ff46:	bfc2      	ittt	gt
 800ff48:	3b04      	subgt	r3, #4
 800ff4a:	ebc3 03c3 	rsbgt	r3, r3, r3, lsl #3
 800ff4e:	b21c      	sxthgt	r4, r3
 800ff50:	682b      	ldr	r3, [r5, #0]
 800ff52:	4628      	mov	r0, r5
 800ff54:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800ff58:	bfd8      	it	le
 800ff5a:	2407      	movle	r4, #7
 800ff5c:	4798      	blx	r3
 800ff5e:	f8b5 107e 	ldrh.w	r1, [r5, #126]	; 0x7e
 800ff62:	4366      	muls	r6, r4
 800ff64:	230a      	movs	r3, #10
 800ff66:	4371      	muls	r1, r6
 800ff68:	fb91 f1f3 	sdiv	r1, r1, r3
 800ff6c:	f8b5 3082 	ldrh.w	r3, [r5, #130]	; 0x82
 800ff70:	4401      	add	r1, r0
 800ff72:	b163      	cbz	r3, 800ff8e <_ZN8touchgfx10ScrollBase18handleGestureEventERKNS_12GestureEventE+0x76>
 800ff74:	f9b5 007c 	ldrsh.w	r0, [r5, #124]	; 0x7c
 800ff78:	f8d5 20b4 	ldr.w	r2, [r5, #180]	; 0xb4
 800ff7c:	4343      	muls	r3, r0
 800ff7e:	1898      	adds	r0, r3, r2
 800ff80:	4281      	cmp	r1, r0
 800ff82:	bfa8      	it	ge
 800ff84:	4601      	movge	r1, r0
 800ff86:	1ad0      	subs	r0, r2, r3
 800ff88:	4281      	cmp	r1, r0
 800ff8a:	bfb8      	it	lt
 800ff8c:	4601      	movlt	r1, r0
 800ff8e:	682b      	ldr	r3, [r5, #0]
 800ff90:	2200      	movs	r2, #0
 800ff92:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800ff96:	4628      	mov	r0, r5
 800ff98:	4798      	blx	r3
 800ff9a:	f8b5 2088 	ldrh.w	r2, [r5, #136]	; 0x88
 800ff9e:	682b      	ldr	r3, [r5, #0]
 800ffa0:	42a2      	cmp	r2, r4
 800ffa2:	bfa8      	it	ge
 800ffa4:	4622      	movge	r2, r4
 800ffa6:	4601      	mov	r1, r0
 800ffa8:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800ffac:	4628      	mov	r0, r5
 800ffae:	b212      	sxth	r2, r2
 800ffb0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ffb4:	4718      	bx	r3
 800ffb6:	bd70      	pop	{r4, r5, r6, pc}

0800ffb8 <_ZN8touchgfx10ScrollBase15setDrawableSizeEss>:
 800ffb8:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800ffbc:	f8a0 307c 	strh.w	r3, [r0, #124]	; 0x7c
 800ffc0:	302c      	adds	r0, #44	; 0x2c
 800ffc2:	f7ff bafb 	b.w	800f5bc <_ZN8touchgfx12DrawableList15setDrawableSizeEss>

0800ffc6 <_ZN8touchgfx10ScrollBase17setEasingEquationEPFstsstE>:
 800ffc6:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
 800ffca:	4770      	bx	lr

0800ffcc <_ZN8touchgfx10ScrollBase20setSwipeAccelerationEt>:
 800ffcc:	f8a0 107e 	strh.w	r1, [r0, #126]	; 0x7e
 800ffd0:	4770      	bx	lr

0800ffd2 <_ZN8touchgfx10ScrollBase19setDragAccelerationEt>:
 800ffd2:	f8a0 1080 	strh.w	r1, [r0, #128]	; 0x80
 800ffd6:	4770      	bx	lr

0800ffd8 <_ZN8touchgfx10ScrollBase13stopAnimationEv>:
 800ffd8:	b510      	push	{r4, lr}
 800ffda:	f890 309c 	ldrb.w	r3, [r0, #156]	; 0x9c
 800ffde:	2b01      	cmp	r3, #1
 800ffe0:	4604      	mov	r4, r0
 800ffe2:	d10b      	bne.n	800fffc <_ZN8touchgfx10ScrollBase13stopAnimationEv+0x24>
 800ffe4:	f004 fc34 	bl	8014850 <_ZN8touchgfx11Application11getInstanceEv>
 800ffe8:	4621      	mov	r1, r4
 800ffea:	f004 fc69 	bl	80148c0 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 800ffee:	6823      	ldr	r3, [r4, #0]
 800fff0:	f8d4 10ac 	ldr.w	r1, [r4, #172]	; 0xac
 800fff4:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800fff8:	4620      	mov	r0, r4
 800fffa:	4798      	blx	r3
 800fffc:	2300      	movs	r3, #0
 800fffe:	f884 309c 	strb.w	r3, [r4, #156]	; 0x9c
 8010002:	bd10      	pop	{r4, pc}

08010004 <_ZN8touchgfx10ScrollBase15handleDragEventERKNS_9DragEventE>:
 8010004:	b570      	push	{r4, r5, r6, lr}
 8010006:	4604      	mov	r4, r0
 8010008:	460e      	mov	r6, r1
 801000a:	f7ff ffe5 	bl	800ffd8 <_ZN8touchgfx10ScrollBase13stopAnimationEv>
 801000e:	2302      	movs	r3, #2
 8010010:	f884 309c 	strb.w	r3, [r4, #156]	; 0x9c
 8010014:	6823      	ldr	r3, [r4, #0]
 8010016:	4620      	mov	r0, r4
 8010018:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 801001c:	4798      	blx	r3
 801001e:	6823      	ldr	r3, [r4, #0]
 8010020:	4605      	mov	r5, r0
 8010022:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8010026:	4620      	mov	r0, r4
 8010028:	4798      	blx	r3
 801002a:	b1f8      	cbz	r0, 801006c <_ZN8touchgfx10ScrollBase15handleDragEventERKNS_9DragEventE+0x68>
 801002c:	8973      	ldrh	r3, [r6, #10]
 801002e:	88f1      	ldrh	r1, [r6, #6]
 8010030:	f9b4 207c 	ldrsh.w	r2, [r4, #124]	; 0x7c
 8010034:	1a5b      	subs	r3, r3, r1
 8010036:	f8b4 1080 	ldrh.w	r1, [r4, #128]	; 0x80
 801003a:	b21b      	sxth	r3, r3
 801003c:	434b      	muls	r3, r1
 801003e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8010042:	210a      	movs	r1, #10
 8010044:	fb93 f3f1 	sdiv	r3, r3, r1
 8010048:	2104      	movs	r1, #4
 801004a:	fb92 f2f1 	sdiv	r2, r2, r1
 801004e:	6821      	ldr	r1, [r4, #0]
 8010050:	4620      	mov	r0, r4
 8010052:	f8d1 60bc 	ldr.w	r6, [r1, #188]	; 0xbc
 8010056:	b212      	sxth	r2, r2
 8010058:	1959      	adds	r1, r3, r5
 801005a:	47b0      	blx	r6
 801005c:	6823      	ldr	r3, [r4, #0]
 801005e:	4601      	mov	r1, r0
 8010060:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8010064:	4620      	mov	r0, r4
 8010066:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801006a:	4718      	bx	r3
 801006c:	89b3      	ldrh	r3, [r6, #12]
 801006e:	8931      	ldrh	r1, [r6, #8]
 8010070:	e7de      	b.n	8010030 <_ZN8touchgfx10ScrollBase15handleDragEventERKNS_9DragEventE+0x2c>

08010072 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>:
 8010072:	b538      	push	{r3, r4, r5, lr}
 8010074:	6803      	ldr	r3, [r0, #0]
 8010076:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 801007a:	4605      	mov	r5, r0
 801007c:	460c      	mov	r4, r1
 801007e:	4798      	blx	r3
 8010080:	b150      	cbz	r0, 8010098 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi+0x26>
 8010082:	f9b5 307c 	ldrsh.w	r3, [r5, #124]	; 0x7c
 8010086:	b13b      	cbz	r3, 8010098 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi+0x26>
 8010088:	4358      	muls	r0, r3
 801008a:	fb94 f3f0 	sdiv	r3, r4, r0
 801008e:	fb00 4413 	mls	r4, r0, r3, r4
 8010092:	2c00      	cmp	r4, #0
 8010094:	bfc8      	it	gt
 8010096:	1a24      	subgt	r4, r4, r0
 8010098:	4620      	mov	r0, r4
 801009a:	bd38      	pop	{r3, r4, r5, pc}

0801009c <_ZN8touchgfx10ScrollBase15handleTickEventEv>:
 801009c:	b570      	push	{r4, r5, r6, lr}
 801009e:	f890 309c 	ldrb.w	r3, [r0, #156]	; 0x9c
 80100a2:	2b01      	cmp	r3, #1
 80100a4:	4604      	mov	r4, r0
 80100a6:	d149      	bne.n	801013c <_ZN8touchgfx10ScrollBase15handleTickEventEv+0xa0>
 80100a8:	e9d4 622a 	ldrd	r6, r2, [r4, #168]	; 0xa8
 80100ac:	f8d0 00a0 	ldr.w	r0, [r0, #160]	; 0xa0
 80100b0:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80100b4:	f8d4 5084 	ldr.w	r5, [r4, #132]	; 0x84
 80100b8:	3001      	adds	r0, #1
 80100ba:	1b92      	subs	r2, r2, r6
 80100bc:	b212      	sxth	r2, r2
 80100be:	f8c4 00a0 	str.w	r0, [r4, #160]	; 0xa0
 80100c2:	2100      	movs	r1, #0
 80100c4:	b280      	uxth	r0, r0
 80100c6:	47a8      	blx	r5
 80100c8:	6823      	ldr	r3, [r4, #0]
 80100ca:	1981      	adds	r1, r0, r6
 80100cc:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80100d0:	4620      	mov	r0, r4
 80100d2:	4798      	blx	r3
 80100d4:	e9d4 2328 	ldrd	r2, r3, [r4, #160]	; 0xa0
 80100d8:	429a      	cmp	r2, r3
 80100da:	dd2f      	ble.n	801013c <_ZN8touchgfx10ScrollBase15handleTickEventEv+0xa0>
 80100dc:	2300      	movs	r3, #0
 80100de:	f884 309c 	strb.w	r3, [r4, #156]	; 0x9c
 80100e2:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
 80100e6:	f004 fbb3 	bl	8014850 <_ZN8touchgfx11Application11getInstanceEv>
 80100ea:	4621      	mov	r1, r4
 80100ec:	f004 fbe8 	bl	80148c0 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 80100f0:	6823      	ldr	r3, [r4, #0]
 80100f2:	f8d4 10ac 	ldr.w	r1, [r4, #172]	; 0xac
 80100f6:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 80100fa:	4620      	mov	r0, r4
 80100fc:	f7ff ffb9 	bl	8010072 <_ZNK8touchgfx10ScrollBase19getNormalizedOffsetEi>
 8010100:	4601      	mov	r1, r0
 8010102:	4620      	mov	r0, r4
 8010104:	47a8      	blx	r5
 8010106:	6823      	ldr	r3, [r4, #0]
 8010108:	4620      	mov	r0, r4
 801010a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 801010e:	4798      	blx	r3
 8010110:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 8010114:	1ac0      	subs	r0, r0, r3
 8010116:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 801011a:	4403      	add	r3, r0
 801011c:	f8d4 0094 	ldr.w	r0, [r4, #148]	; 0x94
 8010120:	f8c4 30b4 	str.w	r3, [r4, #180]	; 0xb4
 8010124:	b150      	cbz	r0, 801013c <_ZN8touchgfx10ScrollBase15handleTickEventEv+0xa0>
 8010126:	6803      	ldr	r3, [r0, #0]
 8010128:	68db      	ldr	r3, [r3, #12]
 801012a:	4798      	blx	r3
 801012c:	b130      	cbz	r0, 801013c <_ZN8touchgfx10ScrollBase15handleTickEventEv+0xa0>
 801012e:	f8d4 0094 	ldr.w	r0, [r4, #148]	; 0x94
 8010132:	6803      	ldr	r3, [r0, #0]
 8010134:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010138:	689b      	ldr	r3, [r3, #8]
 801013a:	4718      	bx	r3
 801013c:	bd70      	pop	{r4, r5, r6, pc}

0801013e <_ZN8touchgfx10ScrollBase13setHorizontalEb>:
 801013e:	f081 0301 	eor.w	r3, r1, #1
 8010142:	f880 10b9 	strb.w	r1, [r0, #185]	; 0xb9
 8010146:	f880 30b8 	strb.w	r3, [r0, #184]	; 0xb8
 801014a:	302c      	adds	r0, #44	; 0x2c
 801014c:	f7ff bbf0 	b.w	800f930 <_ZN8touchgfx12DrawableList13setHorizontalEb>

08010150 <_ZN8touchgfx10ScrollBaseC1Ev>:
 8010150:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010152:	4606      	mov	r6, r0
 8010154:	2500      	movs	r5, #0
 8010156:	2701      	movs	r7, #1
 8010158:	4b22      	ldr	r3, [pc, #136]	; (80101e4 <_ZN8touchgfx10ScrollBaseC1Ev+0x94>)
 801015a:	8085      	strh	r5, [r0, #4]
 801015c:	80c5      	strh	r5, [r0, #6]
 801015e:	8105      	strh	r5, [r0, #8]
 8010160:	8145      	strh	r5, [r0, #10]
 8010162:	8185      	strh	r5, [r0, #12]
 8010164:	81c5      	strh	r5, [r0, #14]
 8010166:	8205      	strh	r5, [r0, #16]
 8010168:	8245      	strh	r5, [r0, #18]
 801016a:	e9c0 5505 	strd	r5, r5, [r0, #20]
 801016e:	61c5      	str	r5, [r0, #28]
 8010170:	8405      	strh	r5, [r0, #32]
 8010172:	8445      	strh	r5, [r0, #34]	; 0x22
 8010174:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8010178:	f880 7025 	strb.w	r7, [r0, #37]	; 0x25
 801017c:	6285      	str	r5, [r0, #40]	; 0x28
 801017e:	f846 3b2c 	str.w	r3, [r6], #44
 8010182:	4604      	mov	r4, r0
 8010184:	4630      	mov	r0, r6
 8010186:	f7ff f9f1 	bl	800f56c <_ZN8touchgfx12DrawableListC1Ev>
 801018a:	f44f 2220 	mov.w	r2, #655360	; 0xa0000
 801018e:	230a      	movs	r3, #10
 8010190:	e9c4 231f 	strd	r2, r3, [r4, #124]	; 0x7c
 8010194:	4b14      	ldr	r3, [pc, #80]	; (80101e8 <_ZN8touchgfx10ScrollBaseC1Ev+0x98>)
 8010196:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 801019a:	231e      	movs	r3, #30
 801019c:	f8a4 3088 	strh.w	r3, [r4, #136]	; 0x88
 80101a0:	4631      	mov	r1, r6
 80101a2:	4620      	mov	r0, r4
 80101a4:	67a5      	str	r5, [r4, #120]	; 0x78
 80101a6:	e9c4 5523 	strd	r5, r5, [r4, #140]	; 0x8c
 80101aa:	e9c4 5525 	strd	r5, r5, [r4, #148]	; 0x94
 80101ae:	f884 509c 	strb.w	r5, [r4, #156]	; 0x9c
 80101b2:	e9c4 5528 	strd	r5, r5, [r4, #160]	; 0xa0
 80101b6:	e9c4 552a 	strd	r5, r5, [r4, #168]	; 0xa8
 80101ba:	e9c4 552c 	strd	r5, r5, [r4, #176]	; 0xb0
 80101be:	f884 50b8 	strb.w	r5, [r4, #184]	; 0xb8
 80101c2:	f884 50b9 	strb.w	r5, [r4, #185]	; 0xb9
 80101c6:	f000 f987 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80101ca:	4629      	mov	r1, r5
 80101cc:	4630      	mov	r0, r6
 80101ce:	6325      	str	r5, [r4, #48]	; 0x30
 80101d0:	f7ff fbae 	bl	800f930 <_ZN8touchgfx12DrawableList13setHorizontalEb>
 80101d4:	4630      	mov	r0, r6
 80101d6:	4629      	mov	r1, r5
 80101d8:	f7ff fbb5 	bl	800f946 <_ZN8touchgfx12DrawableList11setCircularEb>
 80101dc:	f884 7024 	strb.w	r7, [r4, #36]	; 0x24
 80101e0:	4620      	mov	r0, r4
 80101e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80101e4:	08028e68 	.word	0x08028e68
 80101e8:	08016041 	.word	0x08016041

080101ec <_ZN8touchgfx10ScrollBase11setCircularEb>:
 80101ec:	302c      	adds	r0, #44	; 0x2c
 80101ee:	f7ff bbaa 	b.w	800f946 <_ZN8touchgfx12DrawableList11setCircularEb>

080101f2 <_ZN8touchgfx10ScrollBase8setWidthEs>:
 80101f2:	8101      	strh	r1, [r0, #8]
 80101f4:	302c      	adds	r0, #44	; 0x2c
 80101f6:	f7ff bb95 	b.w	800f924 <_ZN8touchgfx12DrawableList8setWidthEs>

080101fa <_ZN8touchgfx10ScrollBase9setHeightEs>:
 80101fa:	8141      	strh	r1, [r0, #10]
 80101fc:	302c      	adds	r0, #44	; 0x2c
 80101fe:	f7ff bb94 	b.w	800f92a <_ZN8touchgfx12DrawableList9setHeightEs>

08010202 <_ZNK8touchgfx10ScrollBase13getHorizontalEv>:
 8010202:	302c      	adds	r0, #44	; 0x2c
 8010204:	f7ff b998 	b.w	800f538 <_ZNK8touchgfx12DrawableList13getHorizontalEv>

08010208 <_ZNK8touchgfx10ScrollBase11getCircularEv>:
 8010208:	302c      	adds	r0, #44	; 0x2c
 801020a:	f7ff b998 	b.w	800f53e <_ZNK8touchgfx12DrawableList11getCircularEv>

0801020e <_ZNK8touchgfx10ScrollBase15getDrawableSizeEv>:
 801020e:	302c      	adds	r0, #44	; 0x2c
 8010210:	f7ff b99b 	b.w	800f54a <_ZNK8touchgfx12DrawableList15getDrawableSizeEv>

08010214 <_ZNK8touchgfx10ScrollBase17getDrawableMarginEv>:
 8010214:	302c      	adds	r0, #44	; 0x2c
 8010216:	f7ff b99e 	b.w	800f556 <_ZNK8touchgfx12DrawableList17getDrawableMarginEv>

0801021a <_ZNK8touchgfx11ModalWindow18getBackgroundWidthEv>:
 801021a:	f8b0 008c 	ldrh.w	r0, [r0, #140]	; 0x8c
 801021e:	4770      	bx	lr

08010220 <_ZNK8touchgfx11ModalWindow19getBackgroundHeightEv>:
 8010220:	f8b0 008e 	ldrh.w	r0, [r0, #142]	; 0x8e
 8010224:	4770      	bx	lr

08010226 <_ZNK8touchgfx11ModalWindow13getShadeAlphaEv>:
 8010226:	f890 0052 	ldrb.w	r0, [r0, #82]	; 0x52
 801022a:	4770      	bx	lr

0801022c <_ZNK8touchgfx11ModalWindow13getShadeColorEv>:
 801022c:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801022e:	4770      	bx	lr

08010230 <_ZN8touchgfx11ModalWindow4showEv>:
 8010230:	2201      	movs	r2, #1
 8010232:	6803      	ldr	r3, [r0, #0]
 8010234:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 8010238:	695b      	ldr	r3, [r3, #20]
 801023a:	4718      	bx	r3

0801023c <_ZN8touchgfx11ModalWindow4hideEv>:
 801023c:	2200      	movs	r2, #0
 801023e:	6803      	ldr	r3, [r0, #0]
 8010240:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 8010244:	695b      	ldr	r3, [r3, #20]
 8010246:	4718      	bx	r3

08010248 <_ZN8touchgfx11ModalWindowD1Ev>:
 8010248:	4770      	bx	lr

0801024a <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>:
 801024a:	3058      	adds	r0, #88	; 0x58
 801024c:	f000 b944 	b.w	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>

08010250 <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>:
 8010250:	6541      	str	r1, [r0, #84]	; 0x54
 8010252:	302c      	adds	r0, #44	; 0x2c
 8010254:	f005 baa4 	b.w	80157a0 <_ZNK8touchgfx8Drawable10invalidateEv>

08010258 <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>:
 8010258:	f880 1052 	strb.w	r1, [r0, #82]	; 0x52
 801025c:	302c      	adds	r0, #44	; 0x2c
 801025e:	f005 ba9f 	b.w	80157a0 <_ZNK8touchgfx8Drawable10invalidateEv>

08010262 <_ZN8touchgfx11ModalWindow6removeERNS_8DrawableE>:
 8010262:	3058      	adds	r0, #88	; 0x58
 8010264:	f000 b906 	b.w	8010474 <_ZN8touchgfx9Container6removeERNS_8DrawableE>

08010268 <_ZN8touchgfx11ModalWindowD0Ev>:
 8010268:	b510      	push	{r4, lr}
 801026a:	21b0      	movs	r1, #176	; 0xb0
 801026c:	4604      	mov	r4, r0
 801026e:	f014 f8b4 	bl	80243da <_ZdlPvj>
 8010272:	4620      	mov	r0, r4
 8010274:	bd10      	pop	{r4, pc}

08010276 <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>:
 8010276:	b570      	push	{r4, r5, r6, lr}
 8010278:	4604      	mov	r4, r0
 801027a:	461e      	mov	r6, r3
 801027c:	f854 3b58 	ldr.w	r3, [r4], #88
 8010280:	4615      	mov	r5, r2
 8010282:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8010286:	4798      	blx	r3
 8010288:	4632      	mov	r2, r6
 801028a:	4629      	mov	r1, r5
 801028c:	4620      	mov	r0, r4
 801028e:	f7f2 f801 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8010292:	bd70      	pop	{r4, r5, r6, pc}

08010294 <_ZN8touchgfx11ModalWindow13setBackgroundERKt>:
 8010294:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010296:	880b      	ldrh	r3, [r1, #0]
 8010298:	a902      	add	r1, sp, #8
 801029a:	f100 0584 	add.w	r5, r0, #132	; 0x84
 801029e:	4604      	mov	r4, r0
 80102a0:	f821 3d04 	strh.w	r3, [r1, #-4]!
 80102a4:	4628      	mov	r0, r5
 80102a6:	f002 fa17 	bl	80126d8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80102aa:	2200      	movs	r2, #0
 80102ac:	4611      	mov	r1, r2
 80102ae:	4628      	mov	r0, r5
 80102b0:	f7f1 fff0 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80102b4:	f9b4 608c 	ldrsh.w	r6, [r4, #140]	; 0x8c
 80102b8:	f9b4 708e 	ldrsh.w	r7, [r4, #142]	; 0x8e
 80102bc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80102c0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80102c4:	f104 0558 	add.w	r5, r4, #88	; 0x58
 80102c8:	2302      	movs	r3, #2
 80102ca:	4628      	mov	r0, r5
 80102cc:	1bd2      	subs	r2, r2, r7
 80102ce:	1b89      	subs	r1, r1, r6
 80102d0:	fb92 f2f3 	sdiv	r2, r2, r3
 80102d4:	fb91 f1f3 	sdiv	r1, r1, r3
 80102d8:	b212      	sxth	r2, r2
 80102da:	b209      	sxth	r1, r1
 80102dc:	f7f1 ffda 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80102e0:	463a      	mov	r2, r7
 80102e2:	4631      	mov	r1, r6
 80102e4:	4628      	mov	r0, r5
 80102e6:	f7f1 feda 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80102ea:	6823      	ldr	r3, [r4, #0]
 80102ec:	4620      	mov	r0, r4
 80102ee:	695b      	ldr	r3, [r3, #20]
 80102f0:	4798      	blx	r3
 80102f2:	b003      	add	sp, #12
 80102f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080102f8 <_ZN8touchgfx11ModalWindowC1Ev>:
 80102f8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80102fc:	4604      	mov	r4, r0
 80102fe:	4625      	mov	r5, r4
 8010300:	f7f1 ffb6 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 8010304:	2600      	movs	r6, #0
 8010306:	4b36      	ldr	r3, [pc, #216]	; (80103e0 <_ZN8touchgfx11ModalWindowC1Ev+0xe8>)
 8010308:	62a6      	str	r6, [r4, #40]	; 0x28
 801030a:	f845 3b2c 	str.w	r3, [r5], #44
 801030e:	f04f 0a26 	mov.w	sl, #38	; 0x26
 8010312:	4652      	mov	r2, sl
 8010314:	4631      	mov	r1, r6
 8010316:	4628      	mov	r0, r5
 8010318:	f014 fb34 	bl	8024984 <memset>
 801031c:	4628      	mov	r0, r5
 801031e:	f7f1 ffa7 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 8010322:	f104 0858 	add.w	r8, r4, #88	; 0x58
 8010326:	4b2f      	ldr	r3, [pc, #188]	; (80103e4 <_ZN8touchgfx11ModalWindowC1Ev+0xec>)
 8010328:	62e3      	str	r3, [r4, #44]	; 0x2c
 801032a:	f04f 09ff 	mov.w	r9, #255	; 0xff
 801032e:	f884 9052 	strb.w	r9, [r4, #82]	; 0x52
 8010332:	6566      	str	r6, [r4, #84]	; 0x54
 8010334:	4640      	mov	r0, r8
 8010336:	f7f1 ff9b 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 801033a:	f104 0784 	add.w	r7, r4, #132	; 0x84
 801033e:	4b2a      	ldr	r3, [pc, #168]	; (80103e8 <_ZN8touchgfx11ModalWindowC1Ev+0xf0>)
 8010340:	65a3      	str	r3, [r4, #88]	; 0x58
 8010342:	4652      	mov	r2, sl
 8010344:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8010348:	4631      	mov	r1, r6
 801034a:	f8c4 6080 	str.w	r6, [r4, #128]	; 0x80
 801034e:	4638      	mov	r0, r7
 8010350:	f8ad 3004 	strh.w	r3, [sp, #4]
 8010354:	f014 fb16 	bl	8024984 <memset>
 8010358:	4638      	mov	r0, r7
 801035a:	f7f1 ff89 	bl	8002270 <_ZN8touchgfx8DrawableC1Ev>
 801035e:	a902      	add	r1, sp, #8
 8010360:	4b22      	ldr	r3, [pc, #136]	; (80103ec <_ZN8touchgfx11ModalWindowC1Ev+0xf4>)
 8010362:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8010366:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 801036a:	f8a4 30aa 	strh.w	r3, [r4, #170]	; 0xaa
 801036e:	f884 90ac 	strb.w	r9, [r4, #172]	; 0xac
 8010372:	4638      	mov	r0, r7
 8010374:	f002 f9b0 	bl	80126d8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010378:	4b1d      	ldr	r3, [pc, #116]	; (80103f0 <_ZN8touchgfx11ModalWindowC1Ev+0xf8>)
 801037a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801037e:	4b1d      	ldr	r3, [pc, #116]	; (80103f4 <_ZN8touchgfx11ModalWindowC1Ev+0xfc>)
 8010380:	4620      	mov	r0, r4
 8010382:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010386:	f7f1 fe8a 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801038a:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 801038e:	f9b4 a00a 	ldrsh.w	sl, [r4, #10]
 8010392:	4632      	mov	r2, r6
 8010394:	4631      	mov	r1, r6
 8010396:	4628      	mov	r0, r5
 8010398:	f7f1 ff7c 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 801039c:	4652      	mov	r2, sl
 801039e:	4649      	mov	r1, r9
 80103a0:	4628      	mov	r0, r5
 80103a2:	f7f1 fe7c 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80103a6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80103aa:	6563      	str	r3, [r4, #84]	; 0x54
 80103ac:	2301      	movs	r3, #1
 80103ae:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 80103b2:	2360      	movs	r3, #96	; 0x60
 80103b4:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 80103b8:	4628      	mov	r0, r5
 80103ba:	f005 f9f1 	bl	80157a0 <_ZNK8touchgfx8Drawable10invalidateEv>
 80103be:	4629      	mov	r1, r5
 80103c0:	4620      	mov	r0, r4
 80103c2:	f000 f889 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80103c6:	4641      	mov	r1, r8
 80103c8:	4620      	mov	r0, r4
 80103ca:	f000 f885 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80103ce:	4640      	mov	r0, r8
 80103d0:	4639      	mov	r1, r7
 80103d2:	f000 f881 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80103d6:	4620      	mov	r0, r4
 80103d8:	b002      	add	sp, #8
 80103da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80103de:	bf00      	nop
 80103e0:	08028f38 	.word	0x08028f38
 80103e4:	08029c38 	.word	0x08029c38
 80103e8:	080290b4 	.word	0x080290b4
 80103ec:	08029f28 	.word	0x08029f28
 80103f0:	20020a86 	.word	0x20020a86
 80103f4:	20020a84 	.word	0x20020a84

080103f8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 80103f8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80103fa:	2000      	movs	r0, #0
 80103fc:	b12b      	cbz	r3, 801040a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80103fe:	b920      	cbnz	r0, 801040a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010400:	1a5a      	subs	r2, r3, r1
 8010402:	4250      	negs	r0, r2
 8010404:	4150      	adcs	r0, r2
 8010406:	699b      	ldr	r3, [r3, #24]
 8010408:	e7f8      	b.n	80103fc <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 801040a:	4770      	bx	lr

0801040c <_ZN8touchgfx9Container9removeAllEv>:
 801040c:	2200      	movs	r2, #0
 801040e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010410:	b123      	cbz	r3, 801041c <_ZN8touchgfx9Container9removeAllEv+0x10>
 8010412:	6999      	ldr	r1, [r3, #24]
 8010414:	6281      	str	r1, [r0, #40]	; 0x28
 8010416:	e9c3 2205 	strd	r2, r2, [r3, #20]
 801041a:	e7f8      	b.n	801040e <_ZN8touchgfx9Container9removeAllEv+0x2>
 801041c:	4770      	bx	lr

0801041e <_ZN8touchgfx9Container6unlinkEv>:
 801041e:	2300      	movs	r3, #0
 8010420:	6283      	str	r3, [r0, #40]	; 0x28
 8010422:	4770      	bx	lr

08010424 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8010424:	2200      	movs	r2, #0
 8010426:	8002      	strh	r2, [r0, #0]
 8010428:	8042      	strh	r2, [r0, #2]
 801042a:	8082      	strh	r2, [r0, #4]
 801042c:	80c2      	strh	r2, [r0, #6]
 801042e:	4770      	bx	lr

08010430 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8010430:	b570      	push	{r4, r5, r6, lr}
 8010432:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010434:	460d      	mov	r5, r1
 8010436:	4616      	mov	r6, r2
 8010438:	b13c      	cbz	r4, 801044a <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 801043a:	6823      	ldr	r3, [r4, #0]
 801043c:	4620      	mov	r0, r4
 801043e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010440:	4632      	mov	r2, r6
 8010442:	4629      	mov	r1, r5
 8010444:	4798      	blx	r3
 8010446:	69a4      	ldr	r4, [r4, #24]
 8010448:	e7f6      	b.n	8010438 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 801044a:	bd70      	pop	{r4, r5, r6, pc}

0801044c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 801044c:	b538      	push	{r3, r4, r5, lr}
 801044e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010450:	460d      	mov	r5, r1
 8010452:	b134      	cbz	r4, 8010462 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8010454:	682b      	ldr	r3, [r5, #0]
 8010456:	4621      	mov	r1, r4
 8010458:	689b      	ldr	r3, [r3, #8]
 801045a:	4628      	mov	r0, r5
 801045c:	4798      	blx	r3
 801045e:	69a4      	ldr	r4, [r4, #24]
 8010460:	e7f7      	b.n	8010452 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8010462:	bd38      	pop	{r3, r4, r5, pc}

08010464 <_ZN8touchgfx9ContainerD1Ev>:
 8010464:	4770      	bx	lr

08010466 <_ZN8touchgfx9ContainerD0Ev>:
 8010466:	b510      	push	{r4, lr}
 8010468:	212c      	movs	r1, #44	; 0x2c
 801046a:	4604      	mov	r4, r0
 801046c:	f013 ffb5 	bl	80243da <_ZdlPvj>
 8010470:	4620      	mov	r0, r4
 8010472:	bd10      	pop	{r4, pc}

08010474 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8010474:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010476:	b19b      	cbz	r3, 80104a0 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8010478:	428b      	cmp	r3, r1
 801047a:	d109      	bne.n	8010490 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 801047c:	699a      	ldr	r2, [r3, #24]
 801047e:	2100      	movs	r1, #0
 8010480:	6159      	str	r1, [r3, #20]
 8010482:	6282      	str	r2, [r0, #40]	; 0x28
 8010484:	b902      	cbnz	r2, 8010488 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8010486:	4770      	bx	lr
 8010488:	6199      	str	r1, [r3, #24]
 801048a:	4770      	bx	lr
 801048c:	4613      	mov	r3, r2
 801048e:	b13a      	cbz	r2, 80104a0 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8010490:	699a      	ldr	r2, [r3, #24]
 8010492:	428a      	cmp	r2, r1
 8010494:	d1fa      	bne.n	801048c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8010496:	698a      	ldr	r2, [r1, #24]
 8010498:	619a      	str	r2, [r3, #24]
 801049a:	2300      	movs	r3, #0
 801049c:	e9c1 3305 	strd	r3, r3, [r1, #20]
 80104a0:	4770      	bx	lr

080104a2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 80104a2:	b410      	push	{r4}
 80104a4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80104a6:	4604      	mov	r4, r0
 80104a8:	b92b      	cbnz	r3, 80104b6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 80104aa:	6803      	ldr	r3, [r0, #0]
 80104ac:	f85d 4b04 	ldr.w	r4, [sp], #4
 80104b0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80104b2:	4611      	mov	r1, r2
 80104b4:	4718      	bx	r3
 80104b6:	b941      	cbnz	r1, 80104ca <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 80104b8:	6193      	str	r3, [r2, #24]
 80104ba:	6282      	str	r2, [r0, #40]	; 0x28
 80104bc:	6154      	str	r4, [r2, #20]
 80104be:	f85d 4b04 	ldr.w	r4, [sp], #4
 80104c2:	4770      	bx	lr
 80104c4:	4603      	mov	r3, r0
 80104c6:	2800      	cmp	r0, #0
 80104c8:	d0f9      	beq.n	80104be <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 80104ca:	4299      	cmp	r1, r3
 80104cc:	6998      	ldr	r0, [r3, #24]
 80104ce:	d1f9      	bne.n	80104c4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 80104d0:	6190      	str	r0, [r2, #24]
 80104d2:	618a      	str	r2, [r1, #24]
 80104d4:	e7f2      	b.n	80104bc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

080104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 80104d8:	4288      	cmp	r0, r1
 80104da:	b508      	push	{r3, lr}
 80104dc:	d105      	bne.n	80104ea <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 80104de:	4b11      	ldr	r3, [pc, #68]	; (8010524 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 80104e0:	4a11      	ldr	r2, [pc, #68]	; (8010528 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 80104e2:	2123      	movs	r1, #35	; 0x23
 80104e4:	4811      	ldr	r0, [pc, #68]	; (801052c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 80104e6:	f013 ffa7 	bl	8024438 <__assert_func>
 80104ea:	694b      	ldr	r3, [r1, #20]
 80104ec:	b11b      	cbz	r3, 80104f6 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 80104ee:	4b10      	ldr	r3, [pc, #64]	; (8010530 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 80104f0:	4a0d      	ldr	r2, [pc, #52]	; (8010528 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 80104f2:	2124      	movs	r1, #36	; 0x24
 80104f4:	e7f6      	b.n	80104e4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 80104f6:	e9c1 0305 	strd	r0, r3, [r1, #20]
 80104fa:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80104fc:	b913      	cbnz	r3, 8010504 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 80104fe:	6281      	str	r1, [r0, #40]	; 0x28
 8010500:	bd08      	pop	{r3, pc}
 8010502:	4613      	mov	r3, r2
 8010504:	699a      	ldr	r2, [r3, #24]
 8010506:	b12a      	cbz	r2, 8010514 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 8010508:	428b      	cmp	r3, r1
 801050a:	d1fa      	bne.n	8010502 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 801050c:	4b09      	ldr	r3, [pc, #36]	; (8010534 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 801050e:	4a06      	ldr	r2, [pc, #24]	; (8010528 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8010510:	2135      	movs	r1, #53	; 0x35
 8010512:	e7e7      	b.n	80104e4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8010514:	428b      	cmp	r3, r1
 8010516:	d103      	bne.n	8010520 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 8010518:	4b06      	ldr	r3, [pc, #24]	; (8010534 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 801051a:	4a03      	ldr	r2, [pc, #12]	; (8010528 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 801051c:	2138      	movs	r1, #56	; 0x38
 801051e:	e7e1      	b.n	80104e4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8010520:	6199      	str	r1, [r3, #24]
 8010522:	e7ed      	b.n	8010500 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 8010524:	08028fe4 	.word	0x08028fe4
 8010528:	08029138 	.word	0x08029138
 801052c:	08029010 	.word	0x08029010
 8010530:	08029043 	.word	0x08029043
 8010534:	08029079 	.word	0x08029079

08010538 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8010538:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801053c:	461f      	mov	r7, r3
 801053e:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8010542:	460d      	mov	r5, r1
 8010544:	4616      	mov	r6, r2
 8010546:	b103      	cbz	r3, 801054a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8010548:	6038      	str	r0, [r7, #0]
 801054a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801054c:	b314      	cbz	r4, 8010594 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 801054e:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010552:	b1eb      	cbz	r3, 8010590 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010554:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8010558:	428d      	cmp	r5, r1
 801055a:	db19      	blt.n	8010590 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 801055c:	8923      	ldrh	r3, [r4, #8]
 801055e:	b289      	uxth	r1, r1
 8010560:	440b      	add	r3, r1
 8010562:	b21b      	sxth	r3, r3
 8010564:	429d      	cmp	r5, r3
 8010566:	da13      	bge.n	8010590 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010568:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801056c:	4296      	cmp	r6, r2
 801056e:	db0f      	blt.n	8010590 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010570:	8963      	ldrh	r3, [r4, #10]
 8010572:	b292      	uxth	r2, r2
 8010574:	4413      	add	r3, r2
 8010576:	b21b      	sxth	r3, r3
 8010578:	429e      	cmp	r6, r3
 801057a:	da09      	bge.n	8010590 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 801057c:	6823      	ldr	r3, [r4, #0]
 801057e:	1ab2      	subs	r2, r6, r2
 8010580:	1a69      	subs	r1, r5, r1
 8010582:	f8d3 8020 	ldr.w	r8, [r3, #32]
 8010586:	b212      	sxth	r2, r2
 8010588:	463b      	mov	r3, r7
 801058a:	b209      	sxth	r1, r1
 801058c:	4620      	mov	r0, r4
 801058e:	47c0      	blx	r8
 8010590:	69a4      	ldr	r4, [r4, #24]
 8010592:	e7db      	b.n	801054c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8010594:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010598 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8010598:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801059c:	4c6e      	ldr	r4, [pc, #440]	; (8010758 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 801059e:	b0a1      	sub	sp, #132	; 0x84
 80105a0:	6824      	ldr	r4, [r4, #0]
 80105a2:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80105a4:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 80105a8:	9303      	str	r3, [sp, #12]
 80105aa:	2400      	movs	r4, #0
 80105ac:	802c      	strh	r4, [r5, #0]
 80105ae:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 80105b0:	802c      	strh	r4, [r5, #0]
 80105b2:	601c      	str	r4, [r3, #0]
 80105b4:	4606      	mov	r6, r0
 80105b6:	e9cd 1201 	strd	r1, r2, [sp, #4]
 80105ba:	f7ff ffbd 	bl	8010538 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80105be:	f1b9 0f03 	cmp.w	r9, #3
 80105c2:	f340 80c2 	ble.w	801074a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 80105c6:	4631      	mov	r1, r6
 80105c8:	a80c      	add	r0, sp, #48	; 0x30
 80105ca:	f005 f981 	bl	80158d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80105ce:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80105d2:	9306      	str	r3, [sp, #24]
 80105d4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80105d8:	9307      	str	r3, [sp, #28]
 80105da:	9b03      	ldr	r3, [sp, #12]
 80105dc:	f8d3 a000 	ldr.w	sl, [r3]
 80105e0:	f1ba 0f00 	cmp.w	sl, #0
 80105e4:	f000 80b4 	beq.w	8010750 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 80105e8:	4651      	mov	r1, sl
 80105ea:	a810      	add	r0, sp, #64	; 0x40
 80105ec:	f005 f970 	bl	80158d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80105f0:	9b01      	ldr	r3, [sp, #4]
 80105f2:	9a06      	ldr	r2, [sp, #24]
 80105f4:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 80105f8:	189d      	adds	r5, r3, r2
 80105fa:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 80105fe:	9a07      	ldr	r2, [sp, #28]
 8010600:	2002      	movs	r0, #2
 8010602:	fb91 f1f0 	sdiv	r1, r1, r0
 8010606:	4419      	add	r1, r3
 8010608:	1a6d      	subs	r5, r5, r1
 801060a:	9b02      	ldr	r3, [sp, #8]
 801060c:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8010610:	4413      	add	r3, r2
 8010612:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8010616:	fb92 f2f0 	sdiv	r2, r2, r0
 801061a:	440a      	add	r2, r1
 801061c:	1a9b      	subs	r3, r3, r2
 801061e:	435b      	muls	r3, r3
 8010620:	fb05 3505 	mla	r5, r5, r5, r3
 8010624:	4f4d      	ldr	r7, [pc, #308]	; (801075c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8010626:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010628:	ac10      	add	r4, sp, #64	; 0x40
 801062a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 801062c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 801062e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010630:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010632:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010634:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8010638:	f1b9 0f0c 	cmp.w	r9, #12
 801063c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8010640:	f04f 0303 	mov.w	r3, #3
 8010644:	bfc8      	it	gt
 8010646:	4698      	movgt	r8, r3
 8010648:	f8cd 9000 	str.w	r9, [sp]
 801064c:	f04f 0400 	mov.w	r4, #0
 8010650:	bfdc      	itt	le
 8010652:	f109 32ff 	addle.w	r2, r9, #4294967295
 8010656:	fb92 f8f3 	sdivle	r8, r2, r3
 801065a:	1c63      	adds	r3, r4, #1
 801065c:	aa10      	add	r2, sp, #64	; 0x40
 801065e:	f004 0401 	and.w	r4, r4, #1
 8010662:	9308      	str	r3, [sp, #32]
 8010664:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8010668:	9b00      	ldr	r3, [sp, #0]
 801066a:	fb93 f3f8 	sdiv	r3, r3, r8
 801066e:	b29b      	uxth	r3, r3
 8010670:	3404      	adds	r4, #4
 8010672:	f04f 0b00 	mov.w	fp, #0
 8010676:	9304      	str	r3, [sp, #16]
 8010678:	9a04      	ldr	r2, [sp, #16]
 801067a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 801067e:	fb13 f302 	smulbb	r3, r3, r2
 8010682:	9a01      	ldr	r2, [sp, #4]
 8010684:	b29b      	uxth	r3, r3
 8010686:	1899      	adds	r1, r3, r2
 8010688:	9305      	str	r3, [sp, #20]
 801068a:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 801068e:	b209      	sxth	r1, r1
 8010690:	4299      	cmp	r1, r3
 8010692:	db4d      	blt.n	8010730 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010694:	8932      	ldrh	r2, [r6, #8]
 8010696:	4413      	add	r3, r2
 8010698:	b21b      	sxth	r3, r3
 801069a:	4299      	cmp	r1, r3
 801069c:	da48      	bge.n	8010730 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801069e:	9b04      	ldr	r3, [sp, #16]
 80106a0:	6827      	ldr	r7, [r4, #0]
 80106a2:	fb17 f703 	smulbb	r7, r7, r3
 80106a6:	9b02      	ldr	r3, [sp, #8]
 80106a8:	b2bf      	uxth	r7, r7
 80106aa:	18fa      	adds	r2, r7, r3
 80106ac:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80106b0:	b212      	sxth	r2, r2
 80106b2:	429a      	cmp	r2, r3
 80106b4:	db3c      	blt.n	8010730 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80106b6:	8970      	ldrh	r0, [r6, #10]
 80106b8:	4403      	add	r3, r0
 80106ba:	b21b      	sxth	r3, r3
 80106bc:	429a      	cmp	r2, r3
 80106be:	da37      	bge.n	8010730 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80106c0:	2300      	movs	r3, #0
 80106c2:	930b      	str	r3, [sp, #44]	; 0x2c
 80106c4:	4630      	mov	r0, r6
 80106c6:	ab0b      	add	r3, sp, #44	; 0x2c
 80106c8:	f7ff ff36 	bl	8010538 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80106cc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80106ce:	b37a      	cbz	r2, 8010730 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80106d0:	4552      	cmp	r2, sl
 80106d2:	d02d      	beq.n	8010730 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80106d4:	4611      	mov	r1, r2
 80106d6:	a80e      	add	r0, sp, #56	; 0x38
 80106d8:	9209      	str	r2, [sp, #36]	; 0x24
 80106da:	f005 f8f9 	bl	80158d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80106de:	9a06      	ldr	r2, [sp, #24]
 80106e0:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 80106e4:	9b01      	ldr	r3, [sp, #4]
 80106e6:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 80106ea:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 80106ee:	4413      	add	r3, r2
 80106f0:	f04f 0e02 	mov.w	lr, #2
 80106f4:	fb91 f1fe 	sdiv	r1, r1, lr
 80106f8:	4401      	add	r1, r0
 80106fa:	1a58      	subs	r0, r3, r1
 80106fc:	9a07      	ldr	r2, [sp, #28]
 80106fe:	9b02      	ldr	r3, [sp, #8]
 8010700:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8010704:	fb9c fcfe 	sdiv	ip, ip, lr
 8010708:	4413      	add	r3, r2
 801070a:	448c      	add	ip, r1
 801070c:	eba3 030c 	sub.w	r3, r3, ip
 8010710:	435b      	muls	r3, r3
 8010712:	fb00 3300 	mla	r3, r0, r0, r3
 8010716:	42ab      	cmp	r3, r5
 8010718:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801071a:	d208      	bcs.n	801072e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 801071c:	9803      	ldr	r0, [sp, #12]
 801071e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8010720:	6001      	str	r1, [r0, #0]
 8010722:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8010724:	9805      	ldr	r0, [sp, #20]
 8010726:	8008      	strh	r0, [r1, #0]
 8010728:	992b      	ldr	r1, [sp, #172]	; 0xac
 801072a:	461d      	mov	r5, r3
 801072c:	800f      	strh	r7, [r1, #0]
 801072e:	4692      	mov	sl, r2
 8010730:	f10b 0b01 	add.w	fp, fp, #1
 8010734:	f1bb 0f04 	cmp.w	fp, #4
 8010738:	f104 0408 	add.w	r4, r4, #8
 801073c:	d19c      	bne.n	8010678 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 801073e:	9b00      	ldr	r3, [sp, #0]
 8010740:	9c08      	ldr	r4, [sp, #32]
 8010742:	444b      	add	r3, r9
 8010744:	4544      	cmp	r4, r8
 8010746:	9300      	str	r3, [sp, #0]
 8010748:	d187      	bne.n	801065a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 801074a:	b021      	add	sp, #132	; 0x84
 801074c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010750:	f04f 35ff 	mov.w	r5, #4294967295
 8010754:	e766      	b.n	8010624 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8010756:	bf00      	nop
 8010758:	20020a90 	.word	0x20020a90
 801075c:	080267a0 	.word	0x080267a0

08010760 <_ZN8touchgfx4RectaNERKS0_>:
 8010760:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010764:	f9b1 7000 	ldrsh.w	r7, [r1]
 8010768:	888c      	ldrh	r4, [r1, #4]
 801076a:	f9b0 9000 	ldrsh.w	r9, [r0]
 801076e:	443c      	add	r4, r7
 8010770:	b2a4      	uxth	r4, r4
 8010772:	fa0f f884 	sxth.w	r8, r4
 8010776:	45c1      	cmp	r9, r8
 8010778:	da2f      	bge.n	80107da <_ZN8touchgfx4RectaNERKS0_+0x7a>
 801077a:	8882      	ldrh	r2, [r0, #4]
 801077c:	444a      	add	r2, r9
 801077e:	b292      	uxth	r2, r2
 8010780:	fa0f fe82 	sxth.w	lr, r2
 8010784:	4577      	cmp	r7, lr
 8010786:	da28      	bge.n	80107da <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010788:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 801078c:	88cb      	ldrh	r3, [r1, #6]
 801078e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8010792:	442b      	add	r3, r5
 8010794:	b21b      	sxth	r3, r3
 8010796:	429e      	cmp	r6, r3
 8010798:	da1f      	bge.n	80107da <_ZN8touchgfx4RectaNERKS0_+0x7a>
 801079a:	88c3      	ldrh	r3, [r0, #6]
 801079c:	4433      	add	r3, r6
 801079e:	b29b      	uxth	r3, r3
 80107a0:	fa0f fc83 	sxth.w	ip, r3
 80107a4:	4565      	cmp	r5, ip
 80107a6:	da18      	bge.n	80107da <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80107a8:	454f      	cmp	r7, r9
 80107aa:	bfb8      	it	lt
 80107ac:	464f      	movlt	r7, r9
 80107ae:	42b5      	cmp	r5, r6
 80107b0:	bfb8      	it	lt
 80107b2:	4635      	movlt	r5, r6
 80107b4:	45f0      	cmp	r8, lr
 80107b6:	bfd8      	it	le
 80107b8:	4622      	movle	r2, r4
 80107ba:	1bd2      	subs	r2, r2, r7
 80107bc:	8082      	strh	r2, [r0, #4]
 80107be:	884a      	ldrh	r2, [r1, #2]
 80107c0:	88c9      	ldrh	r1, [r1, #6]
 80107c2:	8007      	strh	r7, [r0, #0]
 80107c4:	440a      	add	r2, r1
 80107c6:	b292      	uxth	r2, r2
 80107c8:	b211      	sxth	r1, r2
 80107ca:	458c      	cmp	ip, r1
 80107cc:	bfa8      	it	ge
 80107ce:	4613      	movge	r3, r2
 80107d0:	1b5b      	subs	r3, r3, r5
 80107d2:	80c3      	strh	r3, [r0, #6]
 80107d4:	8045      	strh	r5, [r0, #2]
 80107d6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80107da:	2300      	movs	r3, #0
 80107dc:	8003      	strh	r3, [r0, #0]
 80107de:	8043      	strh	r3, [r0, #2]
 80107e0:	8083      	strh	r3, [r0, #4]
 80107e2:	80c3      	strh	r3, [r0, #6]
 80107e4:	e7f7      	b.n	80107d6 <_ZN8touchgfx4RectaNERKS0_+0x76>

080107e6 <_ZNK8touchgfx4Rect7isEmptyEv>:
 80107e6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80107ea:	2b00      	cmp	r3, #0
 80107ec:	dd06      	ble.n	80107fc <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 80107ee:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 80107f2:	2800      	cmp	r0, #0
 80107f4:	bfcc      	ite	gt
 80107f6:	2000      	movgt	r0, #0
 80107f8:	2001      	movle	r0, #1
 80107fa:	4770      	bx	lr
 80107fc:	2001      	movs	r0, #1
 80107fe:	4770      	bx	lr

08010800 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8010800:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010804:	2300      	movs	r3, #0
 8010806:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8010808:	8003      	strh	r3, [r0, #0]
 801080a:	4604      	mov	r4, r0
 801080c:	8043      	strh	r3, [r0, #2]
 801080e:	8083      	strh	r3, [r0, #4]
 8010810:	80c3      	strh	r3, [r0, #6]
 8010812:	2d00      	cmp	r5, #0
 8010814:	d040      	beq.n	8010898 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8010816:	1d28      	adds	r0, r5, #4
 8010818:	f7ff ffe5 	bl	80107e6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801081c:	b988      	cbnz	r0, 8010842 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 801081e:	4620      	mov	r0, r4
 8010820:	f7ff ffe1 	bl	80107e6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010824:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8010828:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 801082c:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8010830:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8010834:	b138      	cbz	r0, 8010846 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8010836:	8022      	strh	r2, [r4, #0]
 8010838:	8063      	strh	r3, [r4, #2]
 801083a:	f8a4 e004 	strh.w	lr, [r4, #4]
 801083e:	f8a4 c006 	strh.w	ip, [r4, #6]
 8010842:	69ad      	ldr	r5, [r5, #24]
 8010844:	e7e5      	b.n	8010812 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8010846:	f9b4 0000 	ldrsh.w	r0, [r4]
 801084a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801084e:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8010852:	4290      	cmp	r0, r2
 8010854:	4607      	mov	r7, r0
 8010856:	bfa8      	it	ge
 8010858:	4617      	movge	r7, r2
 801085a:	4472      	add	r2, lr
 801085c:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8010860:	8027      	strh	r7, [r4, #0]
 8010862:	4299      	cmp	r1, r3
 8010864:	460e      	mov	r6, r1
 8010866:	4440      	add	r0, r8
 8010868:	bfa8      	it	ge
 801086a:	461e      	movge	r6, r3
 801086c:	4471      	add	r1, lr
 801086e:	4463      	add	r3, ip
 8010870:	b200      	sxth	r0, r0
 8010872:	b212      	sxth	r2, r2
 8010874:	b209      	sxth	r1, r1
 8010876:	b21b      	sxth	r3, r3
 8010878:	4290      	cmp	r0, r2
 801087a:	bfac      	ite	ge
 801087c:	ebc7 0200 	rsbge	r2, r7, r0
 8010880:	ebc7 0202 	rsblt	r2, r7, r2
 8010884:	4299      	cmp	r1, r3
 8010886:	bfac      	ite	ge
 8010888:	ebc6 0301 	rsbge	r3, r6, r1
 801088c:	ebc6 0303 	rsblt	r3, r6, r3
 8010890:	8066      	strh	r6, [r4, #2]
 8010892:	80a2      	strh	r2, [r4, #4]
 8010894:	80e3      	strh	r3, [r4, #6]
 8010896:	e7d4      	b.n	8010842 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010898:	4620      	mov	r0, r4
 801089a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801089e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 801089e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80108a2:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80108a6:	b383      	cbz	r3, 801090a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80108a8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80108aa:	b374      	cbz	r4, 801090a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80108ac:	f9b1 5000 	ldrsh.w	r5, [r1]
 80108b0:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 80108b4:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 80108b8:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 80108bc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80108c0:	b303      	cbz	r3, 8010904 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 80108c2:	4668      	mov	r0, sp
 80108c4:	1d21      	adds	r1, r4, #4
 80108c6:	f8ad 5000 	strh.w	r5, [sp]
 80108ca:	f8ad 6002 	strh.w	r6, [sp, #2]
 80108ce:	f8ad 7004 	strh.w	r7, [sp, #4]
 80108d2:	f8ad 8006 	strh.w	r8, [sp, #6]
 80108d6:	f7ff ff43 	bl	8010760 <_ZN8touchgfx4RectaNERKS0_>
 80108da:	4668      	mov	r0, sp
 80108dc:	f7ff ff83 	bl	80107e6 <_ZNK8touchgfx4Rect7isEmptyEv>
 80108e0:	b980      	cbnz	r0, 8010904 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 80108e2:	f8bd 3000 	ldrh.w	r3, [sp]
 80108e6:	88a2      	ldrh	r2, [r4, #4]
 80108e8:	1a9b      	subs	r3, r3, r2
 80108ea:	f8ad 3000 	strh.w	r3, [sp]
 80108ee:	88e2      	ldrh	r2, [r4, #6]
 80108f0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80108f4:	1a9b      	subs	r3, r3, r2
 80108f6:	f8ad 3002 	strh.w	r3, [sp, #2]
 80108fa:	6823      	ldr	r3, [r4, #0]
 80108fc:	4669      	mov	r1, sp
 80108fe:	689b      	ldr	r3, [r3, #8]
 8010900:	4620      	mov	r0, r4
 8010902:	4798      	blx	r3
 8010904:	69a4      	ldr	r4, [r4, #24]
 8010906:	2c00      	cmp	r4, #0
 8010908:	d1d8      	bne.n	80108bc <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 801090a:	b002      	add	sp, #8
 801090c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010910 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8010910:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010912:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010916:	460d      	mov	r5, r1
 8010918:	4616      	mov	r6, r2
 801091a:	b323      	cbz	r3, 8010966 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 801091c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801091e:	b314      	cbz	r4, 8010966 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010920:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010924:	b1eb      	cbz	r3, 8010962 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010926:	6828      	ldr	r0, [r5, #0]
 8010928:	6869      	ldr	r1, [r5, #4]
 801092a:	466b      	mov	r3, sp
 801092c:	c303      	stmia	r3!, {r0, r1}
 801092e:	4668      	mov	r0, sp
 8010930:	1d21      	adds	r1, r4, #4
 8010932:	f7ff ff15 	bl	8010760 <_ZN8touchgfx4RectaNERKS0_>
 8010936:	4668      	mov	r0, sp
 8010938:	f7ff ff55 	bl	80107e6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801093c:	b988      	cbnz	r0, 8010962 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 801093e:	f8bd 3000 	ldrh.w	r3, [sp]
 8010942:	88a2      	ldrh	r2, [r4, #4]
 8010944:	1a9b      	subs	r3, r3, r2
 8010946:	f8ad 3000 	strh.w	r3, [sp]
 801094a:	88e2      	ldrh	r2, [r4, #6]
 801094c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010950:	1a9b      	subs	r3, r3, r2
 8010952:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010956:	6823      	ldr	r3, [r4, #0]
 8010958:	4632      	mov	r2, r6
 801095a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 801095c:	4669      	mov	r1, sp
 801095e:	4620      	mov	r0, r4
 8010960:	4798      	blx	r3
 8010962:	69a4      	ldr	r4, [r4, #24]
 8010964:	e7db      	b.n	801091e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8010966:	b002      	add	sp, #8
 8010968:	bd70      	pop	{r4, r5, r6, pc}

0801096a <_ZNK8touchgfx10ListLayout12getDirectionEv>:
 801096a:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 801096e:	4770      	bx	lr

08010970 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE>:
 8010970:	b538      	push	{r3, r4, r5, lr}
 8010972:	7882      	ldrb	r2, [r0, #2]
 8010974:	6843      	ldr	r3, [r0, #4]
 8010976:	4604      	mov	r4, r0
 8010978:	460d      	mov	r5, r1
 801097a:	b98a      	cbnz	r2, 80109a0 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x30>
 801097c:	4299      	cmp	r1, r3
 801097e:	d101      	bne.n	8010984 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8010980:	2301      	movs	r3, #1
 8010982:	7083      	strb	r3, [r0, #2]
 8010984:	6863      	ldr	r3, [r4, #4]
 8010986:	42ab      	cmp	r3, r5
 8010988:	d009      	beq.n	801099e <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 801098a:	7a23      	ldrb	r3, [r4, #8]
 801098c:	2b01      	cmp	r3, #1
 801098e:	d11b      	bne.n	80109c8 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x58>
 8010990:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8010994:	f9b4 2000 	ldrsh.w	r2, [r4]
 8010998:	429a      	cmp	r2, r3
 801099a:	bfb8      	it	lt
 801099c:	8023      	strhlt	r3, [r4, #0]
 801099e:	bd38      	pop	{r3, r4, r5, pc}
 80109a0:	7a02      	ldrb	r2, [r0, #8]
 80109a2:	2a01      	cmp	r2, #1
 80109a4:	d108      	bne.n	80109b8 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x48>
 80109a6:	895b      	ldrh	r3, [r3, #10]
 80109a8:	88c9      	ldrh	r1, [r1, #6]
 80109aa:	1ac9      	subs	r1, r1, r3
 80109ac:	682b      	ldr	r3, [r5, #0]
 80109ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80109b0:	b209      	sxth	r1, r1
 80109b2:	4628      	mov	r0, r5
 80109b4:	4798      	blx	r3
 80109b6:	e7e5      	b.n	8010984 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 80109b8:	2a02      	cmp	r2, #2
 80109ba:	d1e3      	bne.n	8010984 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 80109bc:	891b      	ldrh	r3, [r3, #8]
 80109be:	8889      	ldrh	r1, [r1, #4]
 80109c0:	1ac9      	subs	r1, r1, r3
 80109c2:	682b      	ldr	r3, [r5, #0]
 80109c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80109c6:	e7f3      	b.n	80109b0 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x40>
 80109c8:	2b02      	cmp	r3, #2
 80109ca:	d1e8      	bne.n	801099e <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 80109cc:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 80109d0:	e7e0      	b.n	8010994 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x24>

080109d2 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED1Ev>:
 80109d2:	4770      	bx	lr

080109d4 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED1Ev>:
 80109d4:	4770      	bx	lr

080109d6 <_ZN8touchgfx10ListLayoutD1Ev>:
 80109d6:	4770      	bx	lr

080109d8 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7executeES3_>:
 80109d8:	b430      	push	{r4, r5}
 80109da:	68c5      	ldr	r5, [r0, #12]
 80109dc:	6844      	ldr	r4, [r0, #4]
 80109de:	106a      	asrs	r2, r5, #1
 80109e0:	4603      	mov	r3, r0
 80109e2:	07ed      	lsls	r5, r5, #31
 80109e4:	eb04 0002 	add.w	r0, r4, r2
 80109e8:	689b      	ldr	r3, [r3, #8]
 80109ea:	bf48      	it	mi
 80109ec:	58a2      	ldrmi	r2, [r4, r2]
 80109ee:	bc30      	pop	{r4, r5}
 80109f0:	bf48      	it	mi
 80109f2:	58d3      	ldrmi	r3, [r2, r3]
 80109f4:	4718      	bx	r3

080109f6 <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv>:
 80109f6:	6843      	ldr	r3, [r0, #4]
 80109f8:	b12b      	cbz	r3, 8010a06 <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x10>
 80109fa:	6883      	ldr	r3, [r0, #8]
 80109fc:	b92b      	cbnz	r3, 8010a0a <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x14>
 80109fe:	68c0      	ldr	r0, [r0, #12]
 8010a00:	f000 0001 	and.w	r0, r0, #1
 8010a04:	4770      	bx	lr
 8010a06:	4618      	mov	r0, r3
 8010a08:	4770      	bx	lr
 8010a0a:	2001      	movs	r0, #1
 8010a0c:	4770      	bx	lr

08010a0e <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7executeES3_>:
 8010a0e:	b430      	push	{r4, r5}
 8010a10:	68c5      	ldr	r5, [r0, #12]
 8010a12:	6844      	ldr	r4, [r0, #4]
 8010a14:	106a      	asrs	r2, r5, #1
 8010a16:	4603      	mov	r3, r0
 8010a18:	07ed      	lsls	r5, r5, #31
 8010a1a:	eb04 0002 	add.w	r0, r4, r2
 8010a1e:	689b      	ldr	r3, [r3, #8]
 8010a20:	bf48      	it	mi
 8010a22:	58a2      	ldrmi	r2, [r4, r2]
 8010a24:	bc30      	pop	{r4, r5}
 8010a26:	bf48      	it	mi
 8010a28:	58d3      	ldrmi	r3, [r2, r3]
 8010a2a:	4718      	bx	r3

08010a2c <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv>:
 8010a2c:	6843      	ldr	r3, [r0, #4]
 8010a2e:	b12b      	cbz	r3, 8010a3c <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x10>
 8010a30:	6883      	ldr	r3, [r0, #8]
 8010a32:	b92b      	cbnz	r3, 8010a40 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x14>
 8010a34:	68c0      	ldr	r0, [r0, #12]
 8010a36:	f000 0001 	and.w	r0, r0, #1
 8010a3a:	4770      	bx	lr
 8010a3c:	4618      	mov	r0, r3
 8010a3e:	4770      	bx	lr
 8010a40:	2001      	movs	r0, #1
 8010a42:	4770      	bx	lr

08010a44 <_ZN8touchgfx10ListLayoutD0Ev>:
 8010a44:	b510      	push	{r4, lr}
 8010a46:	2130      	movs	r1, #48	; 0x30
 8010a48:	4604      	mov	r4, r0
 8010a4a:	f013 fcc6 	bl	80243da <_ZdlPvj>
 8010a4e:	4620      	mov	r0, r4
 8010a50:	bd10      	pop	{r4, pc}

08010a52 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED0Ev>:
 8010a52:	b510      	push	{r4, lr}
 8010a54:	2110      	movs	r1, #16
 8010a56:	4604      	mov	r4, r0
 8010a58:	f013 fcbf 	bl	80243da <_ZdlPvj>
 8010a5c:	4620      	mov	r0, r4
 8010a5e:	bd10      	pop	{r4, pc}

08010a60 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED0Ev>:
 8010a60:	b510      	push	{r4, lr}
 8010a62:	2110      	movs	r1, #16
 8010a64:	4604      	mov	r4, r0
 8010a66:	f013 fcb8 	bl	80243da <_ZdlPvj>
 8010a6a:	4620      	mov	r0, r4
 8010a6c:	bd10      	pop	{r4, pc}

08010a6e <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE>:
 8010a6e:	4603      	mov	r3, r0
 8010a70:	4608      	mov	r0, r1
 8010a72:	789a      	ldrb	r2, [r3, #2]
 8010a74:	b992      	cbnz	r2, 8010a9c <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x2e>
 8010a76:	685a      	ldr	r2, [r3, #4]
 8010a78:	428a      	cmp	r2, r1
 8010a7a:	d102      	bne.n	8010a82 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x14>
 8010a7c:	2201      	movs	r2, #1
 8010a7e:	709a      	strb	r2, [r3, #2]
 8010a80:	4770      	bx	lr
 8010a82:	7a1a      	ldrb	r2, [r3, #8]
 8010a84:	2a01      	cmp	r2, #1
 8010a86:	d104      	bne.n	8010a92 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x24>
 8010a88:	88ca      	ldrh	r2, [r1, #6]
 8010a8a:	8949      	ldrh	r1, [r1, #10]
 8010a8c:	440a      	add	r2, r1
 8010a8e:	801a      	strh	r2, [r3, #0]
 8010a90:	4770      	bx	lr
 8010a92:	2a02      	cmp	r2, #2
 8010a94:	d116      	bne.n	8010ac4 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 8010a96:	888a      	ldrh	r2, [r1, #4]
 8010a98:	8909      	ldrh	r1, [r1, #8]
 8010a9a:	e7f7      	b.n	8010a8c <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x1e>
 8010a9c:	7a1a      	ldrb	r2, [r3, #8]
 8010a9e:	2a01      	cmp	r2, #1
 8010aa0:	d107      	bne.n	8010ab2 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x44>
 8010aa2:	685b      	ldr	r3, [r3, #4]
 8010aa4:	8959      	ldrh	r1, [r3, #10]
 8010aa6:	88c3      	ldrh	r3, [r0, #6]
 8010aa8:	4419      	add	r1, r3
 8010aaa:	6803      	ldr	r3, [r0, #0]
 8010aac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010aae:	b209      	sxth	r1, r1
 8010ab0:	4718      	bx	r3
 8010ab2:	2a02      	cmp	r2, #2
 8010ab4:	d106      	bne.n	8010ac4 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 8010ab6:	685b      	ldr	r3, [r3, #4]
 8010ab8:	8919      	ldrh	r1, [r3, #8]
 8010aba:	8883      	ldrh	r3, [r0, #4]
 8010abc:	4419      	add	r1, r3
 8010abe:	6803      	ldr	r3, [r0, #0]
 8010ac0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010ac2:	e7f4      	b.n	8010aae <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x40>
 8010ac4:	4770      	bx	lr

08010ac6 <_ZN8touchgfx10ListLayout9removeAllEv>:
 8010ac6:	2200      	movs	r2, #0
 8010ac8:	b510      	push	{r4, lr}
 8010aca:	4611      	mov	r1, r2
 8010acc:	4604      	mov	r4, r0
 8010ace:	85c2      	strh	r2, [r0, #46]	; 0x2e
 8010ad0:	f7f1 fae5 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010ad4:	4620      	mov	r0, r4
 8010ad6:	f7ff fc99 	bl	801040c <_ZN8touchgfx9Container9removeAllEv>
 8010ada:	6960      	ldr	r0, [r4, #20]
 8010adc:	b120      	cbz	r0, 8010ae8 <_ZN8touchgfx10ListLayout9removeAllEv+0x22>
 8010ade:	6803      	ldr	r3, [r0, #0]
 8010ae0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010ae4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010ae6:	4718      	bx	r3
 8010ae8:	bd10      	pop	{r4, pc}
	...

08010aec <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>:
 8010aec:	b530      	push	{r4, r5, lr}
 8010aee:	1e4b      	subs	r3, r1, #1
 8010af0:	2b01      	cmp	r3, #1
 8010af2:	b085      	sub	sp, #20
 8010af4:	4604      	mov	r4, r0
 8010af6:	d905      	bls.n	8010b04 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x18>
 8010af8:	4b11      	ldr	r3, [pc, #68]	; (8010b40 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x54>)
 8010afa:	4a12      	ldr	r2, [pc, #72]	; (8010b44 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x58>)
 8010afc:	4812      	ldr	r0, [pc, #72]	; (8010b48 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x5c>)
 8010afe:	21b3      	movs	r1, #179	; 0xb3
 8010b00:	f013 fc9a 	bl	8024438 <__assert_func>
 8010b04:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010b08:	428b      	cmp	r3, r1
 8010b0a:	d017      	beq.n	8010b3c <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x50>
 8010b0c:	2500      	movs	r5, #0
 8010b0e:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 8010b12:	85c5      	strh	r5, [r0, #46]	; 0x2e
 8010b14:	462a      	mov	r2, r5
 8010b16:	4629      	mov	r1, r5
 8010b18:	f7f1 fac1 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010b1c:	4b0b      	ldr	r3, [pc, #44]	; (8010b4c <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x60>)
 8010b1e:	e9cd 3400 	strd	r3, r4, [sp]
 8010b22:	4b0b      	ldr	r3, [pc, #44]	; (8010b50 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x64>)
 8010b24:	e9cd 3502 	strd	r3, r5, [sp, #8]
 8010b28:	6823      	ldr	r3, [r4, #0]
 8010b2a:	4620      	mov	r0, r4
 8010b2c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8010b2e:	4669      	mov	r1, sp
 8010b30:	4798      	blx	r3
 8010b32:	6960      	ldr	r0, [r4, #20]
 8010b34:	b110      	cbz	r0, 8010b3c <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x50>
 8010b36:	6803      	ldr	r3, [r0, #0]
 8010b38:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010b3a:	4798      	blx	r3
 8010b3c:	b005      	add	sp, #20
 8010b3e:	bd30      	pop	{r4, r5, pc}
 8010b40:	080291a4 	.word	0x080291a4
 8010b44:	080292ac 	.word	0x080292ac
 8010b48:	080291e2 	.word	0x080291e2
 8010b4c:	0802917c 	.word	0x0802917c
 8010b50:	08010bb9 	.word	0x08010bb9

08010b54 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>:
 8010b54:	b538      	push	{r3, r4, r5, lr}
 8010b56:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010b5a:	2b01      	cmp	r3, #1
 8010b5c:	460d      	mov	r5, r1
 8010b5e:	4604      	mov	r4, r0
 8010b60:	4611      	mov	r1, r2
 8010b62:	d002      	beq.n	8010b6a <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x16>
 8010b64:	2b02      	cmp	r3, #2
 8010b66:	d015      	beq.n	8010b94 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x40>
 8010b68:	bd38      	pop	{r3, r4, r5, pc}
 8010b6a:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8010b6e:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 8010b72:	429a      	cmp	r2, r3
 8010b74:	bfb8      	it	lt
 8010b76:	8103      	strhlt	r3, [r0, #8]
 8010b78:	896a      	ldrh	r2, [r5, #10]
 8010b7a:	8943      	ldrh	r3, [r0, #10]
 8010b7c:	4413      	add	r3, r2
 8010b7e:	8143      	strh	r3, [r0, #10]
 8010b80:	460a      	mov	r2, r1
 8010b82:	4628      	mov	r0, r5
 8010b84:	2100      	movs	r1, #0
 8010b86:	f7f1 fb85 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8010b8a:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8010b8c:	896a      	ldrh	r2, [r5, #10]
 8010b8e:	4413      	add	r3, r2
 8010b90:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8010b92:	e7e9      	b.n	8010b68 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x14>
 8010b94:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8010b98:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010b9c:	429a      	cmp	r2, r3
 8010b9e:	bfb8      	it	lt
 8010ba0:	8143      	strhlt	r3, [r0, #10]
 8010ba2:	892a      	ldrh	r2, [r5, #8]
 8010ba4:	8903      	ldrh	r3, [r0, #8]
 8010ba6:	4413      	add	r3, r2
 8010ba8:	8103      	strh	r3, [r0, #8]
 8010baa:	2200      	movs	r2, #0
 8010bac:	4628      	mov	r0, r5
 8010bae:	f7f1 fb71 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8010bb2:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8010bb4:	892a      	ldrh	r2, [r5, #8]
 8010bb6:	e7ea      	b.n	8010b8e <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x3a>

08010bb8 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>:
 8010bb8:	f9b0 202e 	ldrsh.w	r2, [r0, #46]	; 0x2e
 8010bbc:	f7ff bfca 	b.w	8010b54 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>

08010bc0 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>:
 8010bc0:	b570      	push	{r4, r5, r6, lr}
 8010bc2:	4604      	mov	r4, r0
 8010bc4:	460d      	mov	r5, r1
 8010bc6:	f7ff fff7 	bl	8010bb8 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>
 8010bca:	4620      	mov	r0, r4
 8010bcc:	4629      	mov	r1, r5
 8010bce:	f7ff fc83 	bl	80104d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010bd2:	6960      	ldr	r0, [r4, #20]
 8010bd4:	b120      	cbz	r0, 8010be0 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE+0x20>
 8010bd6:	6803      	ldr	r3, [r0, #0]
 8010bd8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010bdc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010bde:	4718      	bx	r3
 8010be0:	bd70      	pop	{r4, r5, r6, pc}
	...

08010be4 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_>:
 8010be4:	b530      	push	{r4, r5, lr}
 8010be6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010be8:	b089      	sub	sp, #36	; 0x24
 8010bea:	4604      	mov	r4, r0
 8010bec:	4615      	mov	r5, r2
 8010bee:	b92b      	cbnz	r3, 8010bfc <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x18>
 8010bf0:	6803      	ldr	r3, [r0, #0]
 8010bf2:	4611      	mov	r1, r2
 8010bf4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010bf6:	4798      	blx	r3
 8010bf8:	b009      	add	sp, #36	; 0x24
 8010bfa:	bd30      	pop	{r4, r5, pc}
 8010bfc:	f7ff fc51 	bl	80104a2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>
 8010c00:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 8010c04:	f88d 200c 	strb.w	r2, [sp, #12]
 8010c08:	4a0f      	ldr	r2, [pc, #60]	; (8010c48 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x64>)
 8010c0a:	9204      	str	r2, [sp, #16]
 8010c0c:	aa01      	add	r2, sp, #4
 8010c0e:	9205      	str	r2, [sp, #20]
 8010c10:	4a0e      	ldr	r2, [pc, #56]	; (8010c4c <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x68>)
 8010c12:	9502      	str	r5, [sp, #8]
 8010c14:	2300      	movs	r3, #0
 8010c16:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8010c1a:	f8ad 3004 	strh.w	r3, [sp, #4]
 8010c1e:	f88d 3006 	strb.w	r3, [sp, #6]
 8010c22:	6823      	ldr	r3, [r4, #0]
 8010c24:	a904      	add	r1, sp, #16
 8010c26:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8010c28:	4620      	mov	r0, r4
 8010c2a:	4798      	blx	r3
 8010c2c:	4620      	mov	r0, r4
 8010c2e:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8010c32:	4629      	mov	r1, r5
 8010c34:	f7ff ff8e 	bl	8010b54 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>
 8010c38:	6960      	ldr	r0, [r4, #20]
 8010c3a:	2800      	cmp	r0, #0
 8010c3c:	d0dc      	beq.n	8010bf8 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 8010c3e:	6803      	ldr	r3, [r0, #0]
 8010c40:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010c42:	4798      	blx	r3
 8010c44:	e7d8      	b.n	8010bf8 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 8010c46:	bf00      	nop
 8010c48:	08029194 	.word	0x08029194
 8010c4c:	08010a6f 	.word	0x08010a6f

08010c50 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>:
 8010c50:	b538      	push	{r3, r4, r5, lr}
 8010c52:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010c56:	2b01      	cmp	r3, #1
 8010c58:	4604      	mov	r4, r0
 8010c5a:	460d      	mov	r5, r1
 8010c5c:	d002      	beq.n	8010c64 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x14>
 8010c5e:	2b02      	cmp	r3, #2
 8010c60:	d018      	beq.n	8010c94 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x44>
 8010c62:	bd38      	pop	{r3, r4, r5, pc}
 8010c64:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8010c68:	4293      	cmp	r3, r2
 8010c6a:	bfc8      	it	gt
 8010c6c:	8102      	strhgt	r2, [r0, #8]
 8010c6e:	894a      	ldrh	r2, [r1, #10]
 8010c70:	8943      	ldrh	r3, [r0, #10]
 8010c72:	1a9b      	subs	r3, r3, r2
 8010c74:	8143      	strh	r3, [r0, #10]
 8010c76:	680b      	ldr	r3, [r1, #0]
 8010c78:	4628      	mov	r0, r5
 8010c7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010c7c:	2100      	movs	r1, #0
 8010c7e:	4798      	blx	r3
 8010c80:	682b      	ldr	r3, [r5, #0]
 8010c82:	2100      	movs	r1, #0
 8010c84:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010c86:	4628      	mov	r0, r5
 8010c88:	4798      	blx	r3
 8010c8a:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8010c8c:	896a      	ldrh	r2, [r5, #10]
 8010c8e:	1a9b      	subs	r3, r3, r2
 8010c90:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8010c92:	e7e6      	b.n	8010c62 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x12>
 8010c94:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8010c98:	4293      	cmp	r3, r2
 8010c9a:	bfc8      	it	gt
 8010c9c:	8142      	strhgt	r2, [r0, #10]
 8010c9e:	890a      	ldrh	r2, [r1, #8]
 8010ca0:	8903      	ldrh	r3, [r0, #8]
 8010ca2:	1a9b      	subs	r3, r3, r2
 8010ca4:	8103      	strh	r3, [r0, #8]
 8010ca6:	680b      	ldr	r3, [r1, #0]
 8010ca8:	4628      	mov	r0, r5
 8010caa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010cac:	2100      	movs	r1, #0
 8010cae:	4798      	blx	r3
 8010cb0:	682b      	ldr	r3, [r5, #0]
 8010cb2:	2100      	movs	r1, #0
 8010cb4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010cb6:	4628      	mov	r0, r5
 8010cb8:	4798      	blx	r3
 8010cba:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8010cbc:	892a      	ldrh	r2, [r5, #8]
 8010cbe:	e7e6      	b.n	8010c8e <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x3e>

08010cc0 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>:
 8010cc0:	b530      	push	{r4, r5, lr}
 8010cc2:	b089      	sub	sp, #36	; 0x24
 8010cc4:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 8010cc8:	f88d 200c 	strb.w	r2, [sp, #12]
 8010ccc:	4a13      	ldr	r2, [pc, #76]	; (8010d1c <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x5c>)
 8010cce:	9204      	str	r2, [sp, #16]
 8010cd0:	aa01      	add	r2, sp, #4
 8010cd2:	9205      	str	r2, [sp, #20]
 8010cd4:	4a12      	ldr	r2, [pc, #72]	; (8010d20 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x60>)
 8010cd6:	9102      	str	r1, [sp, #8]
 8010cd8:	2300      	movs	r3, #0
 8010cda:	f8ad 3004 	strh.w	r3, [sp, #4]
 8010cde:	f88d 3006 	strb.w	r3, [sp, #6]
 8010ce2:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8010ce6:	6803      	ldr	r3, [r0, #0]
 8010ce8:	460d      	mov	r5, r1
 8010cea:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8010cec:	a904      	add	r1, sp, #16
 8010cee:	4604      	mov	r4, r0
 8010cf0:	4798      	blx	r3
 8010cf2:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8010cf6:	b14b      	cbz	r3, 8010d0c <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x4c>
 8010cf8:	4629      	mov	r1, r5
 8010cfa:	4620      	mov	r0, r4
 8010cfc:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8010d00:	f7ff ffa6 	bl	8010c50 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>
 8010d04:	4629      	mov	r1, r5
 8010d06:	4620      	mov	r0, r4
 8010d08:	f7ff fbb4 	bl	8010474 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8010d0c:	6960      	ldr	r0, [r4, #20]
 8010d0e:	b110      	cbz	r0, 8010d16 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x56>
 8010d10:	6803      	ldr	r3, [r0, #0]
 8010d12:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010d14:	4798      	blx	r3
 8010d16:	b009      	add	sp, #36	; 0x24
 8010d18:	bd30      	pop	{r4, r5, pc}
 8010d1a:	bf00      	nop
 8010d1c:	08029194 	.word	0x08029194
 8010d20:	08010971 	.word	0x08010971

08010d24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8010d24:	b513      	push	{r0, r1, r4, lr}
 8010d26:	6803      	ldr	r3, [r0, #0]
 8010d28:	f8d3 40a0 	ldr.w	r4, [r3, #160]	; 0xa0
 8010d2c:	2300      	movs	r3, #0
 8010d2e:	e9cd 3300 	strd	r3, r3, [sp]
 8010d32:	466b      	mov	r3, sp
 8010d34:	47a0      	blx	r4
 8010d36:	b002      	add	sp, #8
 8010d38:	bd10      	pop	{r4, pc}

08010d3a <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8010d3a:	2301      	movs	r3, #1
 8010d3c:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8010d40:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8010d44:	4770      	bx	lr

08010d46 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8010d46:	2301      	movs	r3, #1
 8010d48:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8010d4c:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8010d50:	4770      	bx	lr

08010d52 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8010d52:	6843      	ldr	r3, [r0, #4]
 8010d54:	2201      	movs	r2, #1
 8010d56:	725a      	strb	r2, [r3, #9]
 8010d58:	6840      	ldr	r0, [r0, #4]
 8010d5a:	6803      	ldr	r3, [r0, #0]
 8010d5c:	691b      	ldr	r3, [r3, #16]
 8010d5e:	4718      	bx	r3

08010d60 <_ZN8touchgfx3HAL8flushDMAEv>:
 8010d60:	6840      	ldr	r0, [r0, #4]
 8010d62:	6803      	ldr	r3, [r0, #0]
 8010d64:	689b      	ldr	r3, [r3, #8]
 8010d66:	4718      	bx	r3

08010d68 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8010d68:	b530      	push	{r4, r5, lr}
 8010d6a:	b08b      	sub	sp, #44	; 0x2c
 8010d6c:	6804      	ldr	r4, [r0, #0]
 8010d6e:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8010d72:	9509      	str	r5, [sp, #36]	; 0x24
 8010d74:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8010d78:	9508      	str	r5, [sp, #32]
 8010d7a:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8010d7e:	9507      	str	r5, [sp, #28]
 8010d80:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8010d84:	9506      	str	r5, [sp, #24]
 8010d86:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8010d8a:	9505      	str	r5, [sp, #20]
 8010d8c:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8010d90:	9504      	str	r5, [sp, #16]
 8010d92:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8010d96:	9503      	str	r5, [sp, #12]
 8010d98:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8010d9c:	9502      	str	r5, [sp, #8]
 8010d9e:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8010da2:	e9cd 3500 	strd	r3, r5, [sp]
 8010da6:	4613      	mov	r3, r2
 8010da8:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8010daa:	2200      	movs	r2, #0
 8010dac:	47a0      	blx	r4
 8010dae:	b00b      	add	sp, #44	; 0x2c
 8010db0:	bd30      	pop	{r4, r5, pc}
	...

08010db4 <_ZN8touchgfx3HAL10beginFrameEv>:
 8010db4:	4b04      	ldr	r3, [pc, #16]	; (8010dc8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8010db6:	781b      	ldrb	r3, [r3, #0]
 8010db8:	b123      	cbz	r3, 8010dc4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8010dba:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 8010dbe:	f080 0001 	eor.w	r0, r0, #1
 8010dc2:	4770      	bx	lr
 8010dc4:	2001      	movs	r0, #1
 8010dc6:	4770      	bx	lr
 8010dc8:	20020a8e 	.word	0x20020a8e

08010dcc <_ZN8touchgfx3HAL8endFrameEv>:
 8010dcc:	b510      	push	{r4, lr}
 8010dce:	4604      	mov	r4, r0
 8010dd0:	6840      	ldr	r0, [r0, #4]
 8010dd2:	6803      	ldr	r3, [r0, #0]
 8010dd4:	689b      	ldr	r3, [r3, #8]
 8010dd6:	4798      	blx	r3
 8010dd8:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 8010ddc:	b113      	cbz	r3, 8010de4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8010dde:	2301      	movs	r3, #1
 8010de0:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8010de4:	bd10      	pop	{r4, pc}

08010de6 <_ZN8touchgfx3HAL10initializeEv>:
 8010de6:	b510      	push	{r4, lr}
 8010de8:	4604      	mov	r4, r0
 8010dea:	f7ef ff5d 	bl	8000ca8 <_ZN8touchgfx10OSWrappers10initializeEv>
 8010dee:	6860      	ldr	r0, [r4, #4]
 8010df0:	6803      	ldr	r3, [r0, #0]
 8010df2:	68db      	ldr	r3, [r3, #12]
 8010df4:	4798      	blx	r3
 8010df6:	68e0      	ldr	r0, [r4, #12]
 8010df8:	6803      	ldr	r3, [r0, #0]
 8010dfa:	689b      	ldr	r3, [r3, #8]
 8010dfc:	4798      	blx	r3
 8010dfe:	6823      	ldr	r3, [r4, #0]
 8010e00:	4620      	mov	r0, r4
 8010e02:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8010e04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010e08:	4718      	bx	r3
	...

08010e0c <_ZN8touchgfx3HAL4tickEv>:
 8010e0c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010e0e:	6803      	ldr	r3, [r0, #0]
 8010e10:	4d5c      	ldr	r5, [pc, #368]	; (8010f84 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8010e12:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8010e16:	4604      	mov	r4, r0
 8010e18:	4798      	blx	r3
 8010e1a:	2800      	cmp	r0, #0
 8010e1c:	f000 8097 	beq.w	8010f4e <_ZN8touchgfx3HAL4tickEv+0x142>
 8010e20:	2001      	movs	r0, #1
 8010e22:	f7ef fca9 	bl	8000778 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8010e26:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 8010e2a:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8010e2e:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 8010e32:	2600      	movs	r6, #0
 8010e34:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8010e38:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8010e3c:	b133      	cbz	r3, 8010e4c <_ZN8touchgfx3HAL4tickEv+0x40>
 8010e3e:	6823      	ldr	r3, [r4, #0]
 8010e40:	4620      	mov	r0, r4
 8010e42:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010e46:	4798      	blx	r3
 8010e48:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 8010e4c:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8010e50:	6862      	ldr	r2, [r4, #4]
 8010e52:	f083 0301 	eor.w	r3, r3, #1
 8010e56:	7253      	strb	r3, [r2, #9]
 8010e58:	2601      	movs	r6, #1
 8010e5a:	702e      	strb	r6, [r5, #0]
 8010e5c:	f003 fcf8 	bl	8014850 <_ZN8touchgfx11Application11getInstanceEv>
 8010e60:	6803      	ldr	r3, [r0, #0]
 8010e62:	4631      	mov	r1, r6
 8010e64:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010e66:	4798      	blx	r3
 8010e68:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8010e6c:	b90b      	cbnz	r3, 8010e72 <_ZN8touchgfx3HAL4tickEv+0x66>
 8010e6e:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 8010e72:	f003 fced 	bl	8014850 <_ZN8touchgfx11Application11getInstanceEv>
 8010e76:	6803      	ldr	r3, [r0, #0]
 8010e78:	695b      	ldr	r3, [r3, #20]
 8010e7a:	4798      	blx	r3
 8010e7c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8010e7e:	6803      	ldr	r3, [r0, #0]
 8010e80:	691b      	ldr	r3, [r3, #16]
 8010e82:	4798      	blx	r3
 8010e84:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8010e88:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 8010e8c:	3b01      	subs	r3, #1
 8010e8e:	b2db      	uxtb	r3, r3
 8010e90:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8010e94:	b10a      	cbz	r2, 8010e9a <_ZN8touchgfx3HAL4tickEv+0x8e>
 8010e96:	2b00      	cmp	r3, #0
 8010e98:	d1eb      	bne.n	8010e72 <_ZN8touchgfx3HAL4tickEv+0x66>
 8010e9a:	4a3b      	ldr	r2, [pc, #236]	; (8010f88 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8010e9c:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 8010ea0:	7813      	ldrb	r3, [r2, #0]
 8010ea2:	3301      	adds	r3, #1
 8010ea4:	b25b      	sxtb	r3, r3
 8010ea6:	4299      	cmp	r1, r3
 8010ea8:	7013      	strb	r3, [r2, #0]
 8010eaa:	dc10      	bgt.n	8010ece <_ZN8touchgfx3HAL4tickEv+0xc2>
 8010eac:	68e0      	ldr	r0, [r4, #12]
 8010eae:	2300      	movs	r3, #0
 8010eb0:	7013      	strb	r3, [r2, #0]
 8010eb2:	6803      	ldr	r3, [r0, #0]
 8010eb4:	aa03      	add	r2, sp, #12
 8010eb6:	68db      	ldr	r3, [r3, #12]
 8010eb8:	a902      	add	r1, sp, #8
 8010eba:	4798      	blx	r3
 8010ebc:	6823      	ldr	r3, [r4, #0]
 8010ebe:	2800      	cmp	r0, #0
 8010ec0:	d051      	beq.n	8010f66 <_ZN8touchgfx3HAL4tickEv+0x15a>
 8010ec2:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8010ec6:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8010eca:	4620      	mov	r0, r4
 8010ecc:	4798      	blx	r3
 8010ece:	6960      	ldr	r0, [r4, #20]
 8010ed0:	2300      	movs	r3, #0
 8010ed2:	f88d 3007 	strb.w	r3, [sp, #7]
 8010ed6:	b158      	cbz	r0, 8010ef0 <_ZN8touchgfx3HAL4tickEv+0xe4>
 8010ed8:	6803      	ldr	r3, [r0, #0]
 8010eda:	f10d 0107 	add.w	r1, sp, #7
 8010ede:	68db      	ldr	r3, [r3, #12]
 8010ee0:	4798      	blx	r3
 8010ee2:	b128      	cbz	r0, 8010ef0 <_ZN8touchgfx3HAL4tickEv+0xe4>
 8010ee4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8010ee6:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8010eea:	6803      	ldr	r3, [r0, #0]
 8010eec:	68db      	ldr	r3, [r3, #12]
 8010eee:	4798      	blx	r3
 8010ef0:	f104 001c 	add.w	r0, r4, #28
 8010ef4:	f013 f9b8 	bl	8024268 <_ZN8touchgfx8Gestures4tickEv>
 8010ef8:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 8010efc:	b30b      	cbz	r3, 8010f42 <_ZN8touchgfx3HAL4tickEv+0x136>
 8010efe:	6920      	ldr	r0, [r4, #16]
 8010f00:	6803      	ldr	r3, [r0, #0]
 8010f02:	691b      	ldr	r3, [r3, #16]
 8010f04:	4798      	blx	r3
 8010f06:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8010f08:	4606      	mov	r6, r0
 8010f0a:	b903      	cbnz	r3, 8010f0e <_ZN8touchgfx3HAL4tickEv+0x102>
 8010f0c:	6720      	str	r0, [r4, #112]	; 0x70
 8010f0e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8010f10:	4a1e      	ldr	r2, [pc, #120]	; (8010f8c <_ZN8touchgfx3HAL4tickEv+0x180>)
 8010f12:	1af3      	subs	r3, r6, r3
 8010f14:	4293      	cmp	r3, r2
 8010f16:	d914      	bls.n	8010f42 <_ZN8touchgfx3HAL4tickEv+0x136>
 8010f18:	6920      	ldr	r0, [r4, #16]
 8010f1a:	6803      	ldr	r3, [r0, #0]
 8010f1c:	699b      	ldr	r3, [r3, #24]
 8010f1e:	4798      	blx	r3
 8010f20:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8010f22:	2264      	movs	r2, #100	; 0x64
 8010f24:	1af3      	subs	r3, r6, r3
 8010f26:	fbb3 f3f2 	udiv	r3, r3, r2
 8010f2a:	fbb0 f0f3 	udiv	r0, r0, r3
 8010f2e:	2800      	cmp	r0, #0
 8010f30:	dc1e      	bgt.n	8010f70 <_ZN8touchgfx3HAL4tickEv+0x164>
 8010f32:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 8010f36:	6920      	ldr	r0, [r4, #16]
 8010f38:	6803      	ldr	r3, [r0, #0]
 8010f3a:	2100      	movs	r1, #0
 8010f3c:	69db      	ldr	r3, [r3, #28]
 8010f3e:	4798      	blx	r3
 8010f40:	6726      	str	r6, [r4, #112]	; 0x70
 8010f42:	f003 fc85 	bl	8014850 <_ZN8touchgfx11Application11getInstanceEv>
 8010f46:	6803      	ldr	r3, [r0, #0]
 8010f48:	2100      	movs	r1, #0
 8010f4a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010f4c:	4798      	blx	r3
 8010f4e:	6823      	ldr	r3, [r4, #0]
 8010f50:	4620      	mov	r0, r4
 8010f52:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8010f56:	4798      	blx	r3
 8010f58:	2001      	movs	r0, #1
 8010f5a:	f7ef fc29 	bl	80007b0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8010f5e:	2300      	movs	r3, #0
 8010f60:	702b      	strb	r3, [r5, #0]
 8010f62:	b004      	add	sp, #16
 8010f64:	bd70      	pop	{r4, r5, r6, pc}
 8010f66:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8010f6a:	4620      	mov	r0, r4
 8010f6c:	4798      	blx	r3
 8010f6e:	e7ae      	b.n	8010ece <_ZN8touchgfx3HAL4tickEv+0xc2>
 8010f70:	2863      	cmp	r0, #99	; 0x63
 8010f72:	bfcb      	itete	gt
 8010f74:	2300      	movgt	r3, #0
 8010f76:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8010f7a:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 8010f7e:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 8010f82:	e7d8      	b.n	8010f36 <_ZN8touchgfx3HAL4tickEv+0x12a>
 8010f84:	20020a94 	.word	0x20020a94
 8010f88:	20020a95 	.word	0x20020a95
 8010f8c:	05f5e100 	.word	0x05f5e100

08010f90 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8010f90:	f7ef beba 	b.w	8000d08 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08010f94 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8010f94:	6581      	str	r1, [r0, #88]	; 0x58
 8010f96:	301c      	adds	r0, #28
 8010f98:	f013 b964 	b.w	8024264 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08010f9c <_ZN8touchgfx3HAL5touchEll>:
 8010f9c:	b530      	push	{r4, r5, lr}
 8010f9e:	b087      	sub	sp, #28
 8010fa0:	4604      	mov	r4, r0
 8010fa2:	a804      	add	r0, sp, #16
 8010fa4:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8010fa8:	f003 fa08 	bl	80143bc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8010fac:	9b04      	ldr	r3, [sp, #16]
 8010fae:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010fb2:	a906      	add	r1, sp, #24
 8010fb4:	9b05      	ldr	r3, [sp, #20]
 8010fb6:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8010fba:	a803      	add	r0, sp, #12
 8010fbc:	f003 fa50 	bl	8014460 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8010fc0:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 8010fc4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8010fc8:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8010fcc:	f104 001c 	add.w	r0, r4, #28
 8010fd0:	b189      	cbz	r1, 8010ff6 <_ZN8touchgfx3HAL5touchEll+0x5a>
 8010fd2:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 8010fd6:	9300      	str	r3, [sp, #0]
 8010fd8:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8010fdc:	4613      	mov	r3, r2
 8010fde:	462a      	mov	r2, r5
 8010fe0:	f013 f950 	bl	8024284 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8010fe4:	b128      	cbz	r0, 8010ff2 <_ZN8touchgfx3HAL5touchEll+0x56>
 8010fe6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010fea:	65e3      	str	r3, [r4, #92]	; 0x5c
 8010fec:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8010ff0:	6623      	str	r3, [r4, #96]	; 0x60
 8010ff2:	b007      	add	sp, #28
 8010ff4:	bd30      	pop	{r4, r5, pc}
 8010ff6:	f013 f989 	bl	802430c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010ffa:	2301      	movs	r3, #1
 8010ffc:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8011000:	e7f1      	b.n	8010fe6 <_ZN8touchgfx3HAL5touchEll+0x4a>

08011002 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8011002:	b510      	push	{r4, lr}
 8011004:	2b00      	cmp	r3, #0
 8011006:	d046      	beq.n	8011096 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8011008:	ea81 0002 	eor.w	r0, r1, r2
 801100c:	07c4      	lsls	r4, r0, #31
 801100e:	d508      	bpl.n	8011022 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8011010:	440b      	add	r3, r1
 8011012:	3a01      	subs	r2, #1
 8011014:	428b      	cmp	r3, r1
 8011016:	d93e      	bls.n	8011096 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8011018:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 801101c:	f801 0b01 	strb.w	r0, [r1], #1
 8011020:	e7f8      	b.n	8011014 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8011022:	07d0      	lsls	r0, r2, #31
 8011024:	bf42      	ittt	mi
 8011026:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 801102a:	f801 0b01 	strbmi.w	r0, [r1], #1
 801102e:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8011032:	2b01      	cmp	r3, #1
 8011034:	d911      	bls.n	801105a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8011036:	ea81 0402 	eor.w	r4, r1, r2
 801103a:	07a4      	lsls	r4, r4, #30
 801103c:	4610      	mov	r0, r2
 801103e:	d022      	beq.n	8011086 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8011040:	f023 0401 	bic.w	r4, r3, #1
 8011044:	440c      	add	r4, r1
 8011046:	428c      	cmp	r4, r1
 8011048:	4602      	mov	r2, r0
 801104a:	d904      	bls.n	8011056 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 801104c:	8812      	ldrh	r2, [r2, #0]
 801104e:	f821 2b02 	strh.w	r2, [r1], #2
 8011052:	3002      	adds	r0, #2
 8011054:	e7f7      	b.n	8011046 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8011056:	f003 0301 	and.w	r3, r3, #1
 801105a:	f023 0003 	bic.w	r0, r3, #3
 801105e:	4408      	add	r0, r1
 8011060:	4288      	cmp	r0, r1
 8011062:	4614      	mov	r4, r2
 8011064:	d904      	bls.n	8011070 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8011066:	6824      	ldr	r4, [r4, #0]
 8011068:	f841 4b04 	str.w	r4, [r1], #4
 801106c:	3204      	adds	r2, #4
 801106e:	e7f7      	b.n	8011060 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8011070:	f003 0303 	and.w	r3, r3, #3
 8011074:	440b      	add	r3, r1
 8011076:	3a01      	subs	r2, #1
 8011078:	428b      	cmp	r3, r1
 801107a:	d90c      	bls.n	8011096 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 801107c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8011080:	f801 0b01 	strb.w	r0, [r1], #1
 8011084:	e7f8      	b.n	8011078 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8011086:	0790      	lsls	r0, r2, #30
 8011088:	d0e7      	beq.n	801105a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801108a:	f832 0b02 	ldrh.w	r0, [r2], #2
 801108e:	f821 0b02 	strh.w	r0, [r1], #2
 8011092:	3b02      	subs	r3, #2
 8011094:	e7e1      	b.n	801105a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8011096:	2001      	movs	r0, #1
 8011098:	bd10      	pop	{r4, pc}

0801109a <_ZN8touchgfx3HAL7noTouchEv>:
 801109a:	b510      	push	{r4, lr}
 801109c:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 80110a0:	4604      	mov	r4, r0
 80110a2:	b153      	cbz	r3, 80110ba <_ZN8touchgfx3HAL7noTouchEv+0x20>
 80110a4:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 80110a8:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 80110ac:	2101      	movs	r1, #1
 80110ae:	301c      	adds	r0, #28
 80110b0:	f013 f92c 	bl	802430c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80110b4:	2300      	movs	r3, #0
 80110b6:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80110ba:	bd10      	pop	{r4, pc}

080110bc <_ZN8touchgfx3HAL3lcdEv>:
 80110bc:	4b04      	ldr	r3, [pc, #16]	; (80110d0 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80110be:	681b      	ldr	r3, [r3, #0]
 80110c0:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80110c4:	b10a      	cbz	r2, 80110ca <_ZN8touchgfx3HAL3lcdEv+0xe>
 80110c6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80110c8:	b900      	cbnz	r0, 80110cc <_ZN8touchgfx3HAL3lcdEv+0x10>
 80110ca:	6898      	ldr	r0, [r3, #8]
 80110cc:	4770      	bx	lr
 80110ce:	bf00      	nop
 80110d0:	20020a90 	.word	0x20020a90

080110d4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 80110d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80110d8:	4604      	mov	r4, r0
 80110da:	6980      	ldr	r0, [r0, #24]
 80110dc:	b085      	sub	sp, #20
 80110de:	460f      	mov	r7, r1
 80110e0:	4690      	mov	r8, r2
 80110e2:	4699      	mov	r9, r3
 80110e4:	b930      	cbnz	r0, 80110f4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 80110e6:	4b1c      	ldr	r3, [pc, #112]	; (8011158 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 80110e8:	4a1c      	ldr	r2, [pc, #112]	; (801115c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 80110ea:	f44f 71a5 	mov.w	r1, #330	; 0x14a
 80110ee:	481c      	ldr	r0, [pc, #112]	; (8011160 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 80110f0:	f013 f9a2 	bl	8024438 <__assert_func>
 80110f4:	ad04      	add	r5, sp, #16
 80110f6:	2600      	movs	r6, #0
 80110f8:	f845 6d04 	str.w	r6, [r5, #-4]!
 80110fc:	6806      	ldr	r6, [r0, #0]
 80110fe:	9501      	str	r5, [sp, #4]
 8011100:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8011104:	9500      	str	r5, [sp, #0]
 8011106:	6835      	ldr	r5, [r6, #0]
 8011108:	47a8      	blx	r5
 801110a:	4d16      	ldr	r5, [pc, #88]	; (8011164 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 801110c:	4606      	mov	r6, r0
 801110e:	f8a5 9000 	strh.w	r9, [r5]
 8011112:	f7ff ffd3 	bl	80110bc <_ZN8touchgfx3HAL3lcdEv>
 8011116:	6803      	ldr	r3, [r0, #0]
 8011118:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801111a:	4798      	blx	r3
 801111c:	2801      	cmp	r0, #1
 801111e:	d012      	beq.n	8011146 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 8011120:	d306      	bcc.n	8011130 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 8011122:	280d      	cmp	r0, #13
 8011124:	d80b      	bhi.n	801113e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 8011126:	4b10      	ldr	r3, [pc, #64]	; (8011168 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 8011128:	4a0c      	ldr	r2, [pc, #48]	; (801115c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 801112a:	f240 1167 	movw	r1, #359	; 0x167
 801112e:	e7de      	b.n	80110ee <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 8011130:	882b      	ldrh	r3, [r5, #0]
 8011132:	fb08 7203 	mla	r2, r8, r3, r7
 8011136:	9b03      	ldr	r3, [sp, #12]
 8011138:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 801113c:	63e3      	str	r3, [r4, #60]	; 0x3c
 801113e:	4630      	mov	r0, r6
 8011140:	b005      	add	sp, #20
 8011142:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011146:	882a      	ldrh	r2, [r5, #0]
 8011148:	9b03      	ldr	r3, [sp, #12]
 801114a:	fb08 7202 	mla	r2, r8, r2, r7
 801114e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8011152:	1a9a      	subs	r2, r3, r2
 8011154:	63e2      	str	r2, [r4, #60]	; 0x3c
 8011156:	e7f2      	b.n	801113e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 8011158:	0802945e 	.word	0x0802945e
 801115c:	0802971c 	.word	0x0802971c
 8011160:	080294a3 	.word	0x080294a3
 8011164:	20020a8a 	.word	0x20020a8a
 8011168:	080294c9 	.word	0x080294c9

0801116c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 801116c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801116e:	b08b      	sub	sp, #44	; 0x2c
 8011170:	4617      	mov	r7, r2
 8011172:	4604      	mov	r4, r0
 8011174:	460e      	mov	r6, r1
 8011176:	461d      	mov	r5, r3
 8011178:	f7ff ffa0 	bl	80110bc <_ZN8touchgfx3HAL3lcdEv>
 801117c:	6803      	ldr	r3, [r0, #0]
 801117e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011180:	4798      	blx	r3
 8011182:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8011186:	9007      	str	r0, [sp, #28]
 8011188:	e9cd 0308 	strd	r0, r3, [sp, #32]
 801118c:	4b0d      	ldr	r3, [pc, #52]	; (80111c4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 801118e:	6822      	ldr	r2, [r4, #0]
 8011190:	881b      	ldrh	r3, [r3, #0]
 8011192:	9306      	str	r3, [sp, #24]
 8011194:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8011198:	9305      	str	r3, [sp, #20]
 801119a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 801119e:	9304      	str	r3, [sp, #16]
 80111a0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80111a4:	9303      	str	r3, [sp, #12]
 80111a6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80111aa:	9302      	str	r3, [sp, #8]
 80111ac:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80111b0:	e9cd 5300 	strd	r5, r3, [sp]
 80111b4:	4631      	mov	r1, r6
 80111b6:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 80111b8:	463b      	mov	r3, r7
 80111ba:	2200      	movs	r2, #0
 80111bc:	4620      	mov	r0, r4
 80111be:	47a8      	blx	r5
 80111c0:	b00b      	add	sp, #44	; 0x2c
 80111c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80111c4:	20020a8a 	.word	0x20020a8a

080111c8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 80111c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80111cc:	4698      	mov	r8, r3
 80111ce:	6803      	ldr	r3, [r0, #0]
 80111d0:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 80111d2:	4b15      	ldr	r3, [pc, #84]	; (8011228 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 80111d4:	b08b      	sub	sp, #44	; 0x2c
 80111d6:	4617      	mov	r7, r2
 80111d8:	f8b3 9000 	ldrh.w	r9, [r3]
 80111dc:	460e      	mov	r6, r1
 80111de:	4604      	mov	r4, r0
 80111e0:	f7ff ff6c 	bl	80110bc <_ZN8touchgfx3HAL3lcdEv>
 80111e4:	6803      	ldr	r3, [r0, #0]
 80111e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80111e8:	4798      	blx	r3
 80111ea:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80111ee:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80111f2:	2302      	movs	r3, #2
 80111f4:	e9cd 9306 	strd	r9, r3, [sp, #24]
 80111f8:	2301      	movs	r3, #1
 80111fa:	9305      	str	r3, [sp, #20]
 80111fc:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8011200:	9304      	str	r3, [sp, #16]
 8011202:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8011206:	9303      	str	r3, [sp, #12]
 8011208:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 801120c:	9302      	str	r3, [sp, #8]
 801120e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011212:	2200      	movs	r2, #0
 8011214:	e9cd 8300 	strd	r8, r3, [sp]
 8011218:	4631      	mov	r1, r6
 801121a:	463b      	mov	r3, r7
 801121c:	4620      	mov	r0, r4
 801121e:	47a8      	blx	r5
 8011220:	b00b      	add	sp, #44	; 0x2c
 8011222:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011226:	bf00      	nop
 8011228:	20020a8a 	.word	0x20020a8a

0801122c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 801122c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011230:	4698      	mov	r8, r3
 8011232:	6803      	ldr	r3, [r0, #0]
 8011234:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8011236:	4b11      	ldr	r3, [pc, #68]	; (801127c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8011238:	b087      	sub	sp, #28
 801123a:	f8b3 9000 	ldrh.w	r9, [r3]
 801123e:	460e      	mov	r6, r1
 8011240:	4617      	mov	r7, r2
 8011242:	4604      	mov	r4, r0
 8011244:	f7ff ff3a 	bl	80110bc <_ZN8touchgfx3HAL3lcdEv>
 8011248:	6803      	ldr	r3, [r0, #0]
 801124a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801124c:	4798      	blx	r3
 801124e:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8011252:	f8cd 900c 	str.w	r9, [sp, #12]
 8011256:	e9cd 0304 	strd	r0, r3, [sp, #16]
 801125a:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 801125e:	9302      	str	r3, [sp, #8]
 8011260:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8011264:	9301      	str	r3, [sp, #4]
 8011266:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801126a:	9300      	str	r3, [sp, #0]
 801126c:	463a      	mov	r2, r7
 801126e:	4643      	mov	r3, r8
 8011270:	4631      	mov	r1, r6
 8011272:	4620      	mov	r0, r4
 8011274:	47a8      	blx	r5
 8011276:	b007      	add	sp, #28
 8011278:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801127c:	20020a8a 	.word	0x20020a8a

08011280 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8011280:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011284:	4604      	mov	r4, r0
 8011286:	b08f      	sub	sp, #60	; 0x3c
 8011288:	4610      	mov	r0, r2
 801128a:	460d      	mov	r5, r1
 801128c:	4691      	mov	r9, r2
 801128e:	461e      	mov	r6, r3
 8011290:	f006 ffac 	bl	80181ec <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8011294:	2800      	cmp	r0, #0
 8011296:	f000 809c 	beq.w	80113d2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x152>
 801129a:	6823      	ldr	r3, [r4, #0]
 801129c:	f8df b194 	ldr.w	fp, [pc, #404]	; 8011434 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>
 80112a0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80112a2:	f8df a194 	ldr.w	sl, [pc, #404]	; 8011438 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 80112a6:	4f60      	ldr	r7, [pc, #384]	; (8011428 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 80112a8:	4620      	mov	r0, r4
 80112aa:	4798      	blx	r3
 80112ac:	6823      	ldr	r3, [r4, #0]
 80112ae:	4620      	mov	r0, r4
 80112b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80112b2:	4798      	blx	r3
 80112b4:	f8bb 3000 	ldrh.w	r3, [fp]
 80112b8:	9301      	str	r3, [sp, #4]
 80112ba:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 80112be:	f8ba 3000 	ldrh.w	r3, [sl]
 80112c2:	9302      	str	r3, [sp, #8]
 80112c4:	883b      	ldrh	r3, [r7, #0]
 80112c6:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 80112ca:	9303      	str	r3, [sp, #12]
 80112cc:	4b57      	ldr	r3, [pc, #348]	; (801142c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80112ce:	9305      	str	r3, [sp, #20]
 80112d0:	881a      	ldrh	r2, [r3, #0]
 80112d2:	9204      	str	r2, [sp, #16]
 80112d4:	4640      	mov	r0, r8
 80112d6:	f007 f843 	bl	8018360 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80112da:	8038      	strh	r0, [r7, #0]
 80112dc:	4640      	mov	r0, r8
 80112de:	f007 f879 	bl	80183d4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80112e2:	9b05      	ldr	r3, [sp, #20]
 80112e4:	8018      	strh	r0, [r3, #0]
 80112e6:	4b52      	ldr	r3, [pc, #328]	; (8011430 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80112e8:	781b      	ldrb	r3, [r3, #0]
 80112ea:	2b00      	cmp	r3, #0
 80112ec:	d174      	bne.n	80113d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 80112ee:	883b      	ldrh	r3, [r7, #0]
 80112f0:	f8ab 3000 	strh.w	r3, [fp]
 80112f4:	f8aa 0000 	strh.w	r0, [sl]
 80112f8:	4648      	mov	r0, r9
 80112fa:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 80112fe:	f006 ff75 	bl	80181ec <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8011302:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8011306:	2200      	movs	r2, #0
 8011308:	4611      	mov	r1, r2
 801130a:	4628      	mov	r0, r5
 801130c:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8011310:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8011314:	f7f0 ffbe 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 8011318:	2301      	movs	r3, #1
 801131a:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 801131e:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8011322:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8011326:	2b00      	cmp	r3, #0
 8011328:	dd5c      	ble.n	80113e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 801132a:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 801132e:	2b00      	cmp	r3, #0
 8011330:	dd58      	ble.n	80113e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 8011332:	462a      	mov	r2, r5
 8011334:	ab0a      	add	r3, sp, #40	; 0x28
 8011336:	f852 0f04 	ldr.w	r0, [r2, #4]!
 801133a:	6851      	ldr	r1, [r2, #4]
 801133c:	c303      	stmia	r3!, {r0, r1}
 801133e:	4631      	mov	r1, r6
 8011340:	a80a      	add	r0, sp, #40	; 0x28
 8011342:	f7ff fa0d 	bl	8010760 <_ZN8touchgfx4RectaNERKS0_>
 8011346:	4b38      	ldr	r3, [pc, #224]	; (8011428 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8011348:	f9b3 2000 	ldrsh.w	r2, [r3]
 801134c:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8011350:	2100      	movs	r1, #0
 8011352:	aa0a      	add	r2, sp, #40	; 0x28
 8011354:	4b35      	ldr	r3, [pc, #212]	; (801142c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011356:	910c      	str	r1, [sp, #48]	; 0x30
 8011358:	e892 0003 	ldmia.w	r2, {r0, r1}
 801135c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011360:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011364:	ab08      	add	r3, sp, #32
 8011366:	e883 0003 	stmia.w	r3, {r0, r1}
 801136a:	4618      	mov	r0, r3
 801136c:	a90c      	add	r1, sp, #48	; 0x30
 801136e:	f7ff f9f7 	bl	8010760 <_ZN8touchgfx4RectaNERKS0_>
 8011372:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8011374:	2b00      	cmp	r3, #0
 8011376:	d13c      	bne.n	80113f2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x172>
 8011378:	2000      	movs	r0, #0
 801137a:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 801137e:	2600      	movs	r6, #0
 8011380:	682a      	ldr	r2, [r5, #0]
 8011382:	696b      	ldr	r3, [r5, #20]
 8011384:	616e      	str	r6, [r5, #20]
 8011386:	9305      	str	r3, [sp, #20]
 8011388:	6892      	ldr	r2, [r2, #8]
 801138a:	a908      	add	r1, sp, #32
 801138c:	4628      	mov	r0, r5
 801138e:	4790      	blx	r2
 8011390:	9b05      	ldr	r3, [sp, #20]
 8011392:	616b      	str	r3, [r5, #20]
 8011394:	4652      	mov	r2, sl
 8011396:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 801139a:	4649      	mov	r1, r9
 801139c:	4628      	mov	r0, r5
 801139e:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 80113a2:	f7f0 ff77 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80113a6:	4b23      	ldr	r3, [pc, #140]	; (8011434 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 80113a8:	9a01      	ldr	r2, [sp, #4]
 80113aa:	801a      	strh	r2, [r3, #0]
 80113ac:	4b22      	ldr	r3, [pc, #136]	; (8011438 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 80113ae:	9a02      	ldr	r2, [sp, #8]
 80113b0:	801a      	strh	r2, [r3, #0]
 80113b2:	4b1d      	ldr	r3, [pc, #116]	; (8011428 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 80113b4:	9a03      	ldr	r2, [sp, #12]
 80113b6:	801a      	strh	r2, [r3, #0]
 80113b8:	4b1c      	ldr	r3, [pc, #112]	; (801142c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80113ba:	9a04      	ldr	r2, [sp, #16]
 80113bc:	801a      	strh	r2, [r3, #0]
 80113be:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 80113c2:	6823      	ldr	r3, [r4, #0]
 80113c4:	4620      	mov	r0, r4
 80113c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80113c8:	4798      	blx	r3
 80113ca:	6823      	ldr	r3, [r4, #0]
 80113cc:	4620      	mov	r0, r4
 80113ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80113d0:	4798      	blx	r3
 80113d2:	b00f      	add	sp, #60	; 0x3c
 80113d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80113d8:	883b      	ldrh	r3, [r7, #0]
 80113da:	f8ab 0000 	strh.w	r0, [fp]
 80113de:	f8aa 3000 	strh.w	r3, [sl]
 80113e2:	e789      	b.n	80112f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x78>
 80113e4:	462a      	mov	r2, r5
 80113e6:	ab0a      	add	r3, sp, #40	; 0x28
 80113e8:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80113ec:	6851      	ldr	r1, [r2, #4]
 80113ee:	c303      	stmia	r3!, {r0, r1}
 80113f0:	e7a9      	b.n	8011346 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc6>
 80113f2:	a807      	add	r0, sp, #28
 80113f4:	f007 f946 	bl	8018684 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80113f8:	4606      	mov	r6, r0
 80113fa:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80113fc:	6803      	ldr	r3, [r0, #0]
 80113fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011400:	4798      	blx	r3
 8011402:	4286      	cmp	r6, r0
 8011404:	d1b8      	bne.n	8011378 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xf8>
 8011406:	f7ff fe59 	bl	80110bc <_ZN8touchgfx3HAL3lcdEv>
 801140a:	6803      	ldr	r3, [r0, #0]
 801140c:	4606      	mov	r6, r0
 801140e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011410:	9305      	str	r3, [sp, #20]
 8011412:	a807      	add	r0, sp, #28
 8011414:	f007 f936 	bl	8018684 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011418:	9b05      	ldr	r3, [sp, #20]
 801141a:	4601      	mov	r1, r0
 801141c:	4630      	mov	r0, r6
 801141e:	4798      	blx	r3
 8011420:	f080 0001 	eor.w	r0, r0, #1
 8011424:	b2c0      	uxtb	r0, r0
 8011426:	e7a8      	b.n	801137a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8011428:	20020a84 	.word	0x20020a84
 801142c:	20020a86 	.word	0x20020a86
 8011430:	20020a88 	.word	0x20020a88
 8011434:	20020a8a 	.word	0x20020a8a
 8011438:	20020a8c 	.word	0x20020a8c

0801143c <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 801143c:	b510      	push	{r4, lr}
 801143e:	4b07      	ldr	r3, [pc, #28]	; (801145c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8011440:	781b      	ldrb	r3, [r3, #0]
 8011442:	4604      	mov	r4, r0
 8011444:	b13b      	cbz	r3, 8011456 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8011446:	6803      	ldr	r3, [r0, #0]
 8011448:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801144a:	4798      	blx	r3
 801144c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801144e:	4283      	cmp	r3, r0
 8011450:	d101      	bne.n	8011456 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8011452:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8011454:	bd10      	pop	{r4, pc}
 8011456:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8011458:	e7fc      	b.n	8011454 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 801145a:	bf00      	nop
 801145c:	20020a8e 	.word	0x20020a8e

08011460 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8011460:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011464:	b088      	sub	sp, #32
 8011466:	461d      	mov	r5, r3
 8011468:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801146c:	2400      	movs	r4, #0
 801146e:	f8bd 8040 	ldrh.w	r8, [sp, #64]	; 0x40
 8011472:	f8bd 7044 	ldrh.w	r7, [sp, #68]	; 0x44
 8011476:	f8bd 904c 	ldrh.w	r9, [sp, #76]	; 0x4c
 801147a:	9403      	str	r4, [sp, #12]
 801147c:	e9cd 3100 	strd	r3, r1, [sp]
 8011480:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011484:	f8ad 8014 	strh.w	r8, [sp, #20]
 8011488:	4692      	mov	sl, r2
 801148a:	4606      	mov	r6, r0
 801148c:	f8ad 7016 	strh.w	r7, [sp, #22]
 8011490:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011494:	f88d 401c 	strb.w	r4, [sp, #28]
 8011498:	f7ff ffd0 	bl	801143c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801149c:	fb09 a505 	mla	r5, r9, r5, sl
 80114a0:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80114a4:	9504      	str	r5, [sp, #16]
 80114a6:	f8ad 901a 	strh.w	r9, [sp, #26]
 80114aa:	f88d 401e 	strb.w	r4, [sp, #30]
 80114ae:	f88d 401d 	strb.w	r4, [sp, #29]
 80114b2:	f88d 401f 	strb.w	r4, [sp, #31]
 80114b6:	f1b8 0f00 	cmp.w	r8, #0
 80114ba:	d000      	beq.n	80114be <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x5e>
 80114bc:	b937      	cbnz	r7, 80114cc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x6c>
 80114be:	4b0d      	ldr	r3, [pc, #52]	; (80114f4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x94>)
 80114c0:	4a0d      	ldr	r2, [pc, #52]	; (80114f8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 80114c2:	f240 210b 	movw	r1, #523	; 0x20b
 80114c6:	480d      	ldr	r0, [pc, #52]	; (80114fc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 80114c8:	f012 ffb6 	bl	8024438 <__assert_func>
 80114cc:	6833      	ldr	r3, [r6, #0]
 80114ce:	9c00      	ldr	r4, [sp, #0]
 80114d0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80114d2:	4630      	mov	r0, r6
 80114d4:	4798      	blx	r3
 80114d6:	4220      	tst	r0, r4
 80114d8:	d104      	bne.n	80114e4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x84>
 80114da:	4b09      	ldr	r3, [pc, #36]	; (8011500 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa0>)
 80114dc:	4a06      	ldr	r2, [pc, #24]	; (80114f8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 80114de:	f44f 7103 	mov.w	r1, #524	; 0x20c
 80114e2:	e7f0      	b.n	80114c6 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x66>
 80114e4:	6870      	ldr	r0, [r6, #4]
 80114e6:	6803      	ldr	r3, [r0, #0]
 80114e8:	4669      	mov	r1, sp
 80114ea:	685b      	ldr	r3, [r3, #4]
 80114ec:	4798      	blx	r3
 80114ee:	b008      	add	sp, #32
 80114f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80114f4:	080292f1 	.word	0x080292f1
 80114f8:	08029551 	.word	0x08029551
 80114fc:	080294a3 	.word	0x080294a3
 8011500:	08029329 	.word	0x08029329

08011504 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8011504:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011508:	b089      	sub	sp, #36	; 0x24
 801150a:	2400      	movs	r4, #0
 801150c:	461d      	mov	r5, r3
 801150e:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8011512:	f8bd 9050 	ldrh.w	r9, [sp, #80]	; 0x50
 8011516:	f8bd 8048 	ldrh.w	r8, [sp, #72]	; 0x48
 801151a:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 801151e:	9403      	str	r4, [sp, #12]
 8011520:	468a      	mov	sl, r1
 8011522:	4693      	mov	fp, r2
 8011524:	4606      	mov	r6, r0
 8011526:	e9cd 3400 	strd	r3, r4, [sp]
 801152a:	f7ff ff87 	bl	801143c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801152e:	fb09 b505 	mla	r5, r9, r5, fp
 8011532:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011536:	9504      	str	r5, [sp, #16]
 8011538:	f8ad 8014 	strh.w	r8, [sp, #20]
 801153c:	f8ad 7016 	strh.w	r7, [sp, #22]
 8011540:	f8ad 4018 	strh.w	r4, [sp, #24]
 8011544:	f8ad 901a 	strh.w	r9, [sp, #26]
 8011548:	f8cd a00c 	str.w	sl, [sp, #12]
 801154c:	f8ad 401c 	strh.w	r4, [sp, #28]
 8011550:	f88d 401e 	strb.w	r4, [sp, #30]
 8011554:	f88d 401f 	strb.w	r4, [sp, #31]
 8011558:	f1b8 0f00 	cmp.w	r8, #0
 801155c:	d000      	beq.n	8011560 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x5c>
 801155e:	b937      	cbnz	r7, 801156e <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x6a>
 8011560:	4b0d      	ldr	r3, [pc, #52]	; (8011598 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x94>)
 8011562:	4a0e      	ldr	r2, [pc, #56]	; (801159c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 8011564:	f240 2121 	movw	r1, #545	; 0x221
 8011568:	480d      	ldr	r0, [pc, #52]	; (80115a0 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 801156a:	f012 ff65 	bl	8024438 <__assert_func>
 801156e:	6833      	ldr	r3, [r6, #0]
 8011570:	9c00      	ldr	r4, [sp, #0]
 8011572:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011574:	4630      	mov	r0, r6
 8011576:	4798      	blx	r3
 8011578:	4220      	tst	r0, r4
 801157a:	d104      	bne.n	8011586 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x82>
 801157c:	4b09      	ldr	r3, [pc, #36]	; (80115a4 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa0>)
 801157e:	4a07      	ldr	r2, [pc, #28]	; (801159c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 8011580:	f240 2122 	movw	r1, #546	; 0x222
 8011584:	e7f0      	b.n	8011568 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x64>
 8011586:	6870      	ldr	r0, [r6, #4]
 8011588:	6803      	ldr	r3, [r0, #0]
 801158a:	4669      	mov	r1, sp
 801158c:	685b      	ldr	r3, [r3, #4]
 801158e:	4798      	blx	r3
 8011590:	b009      	add	sp, #36	; 0x24
 8011592:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011596:	bf00      	nop
 8011598:	0802936e 	.word	0x0802936e
 801159c:	080295c7 	.word	0x080295c7
 80115a0:	080294a3 	.word	0x080294a3
 80115a4:	080293a6 	.word	0x080293a6

080115a8 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 80115a8:	b510      	push	{r4, lr}
 80115aa:	4b0b      	ldr	r3, [pc, #44]	; (80115d8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 80115ac:	781b      	ldrb	r3, [r3, #0]
 80115ae:	4604      	mov	r4, r0
 80115b0:	b95b      	cbnz	r3, 80115ca <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80115b2:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 80115b6:	2b02      	cmp	r3, #2
 80115b8:	d007      	beq.n	80115ca <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80115ba:	6840      	ldr	r0, [r0, #4]
 80115bc:	f000 fb7a 	bl	8011cb4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 80115c0:	b118      	cbz	r0, 80115ca <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80115c2:	6862      	ldr	r2, [r4, #4]
 80115c4:	7a53      	ldrb	r3, [r2, #9]
 80115c6:	2b00      	cmp	r3, #0
 80115c8:	d0fc      	beq.n	80115c4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 80115ca:	f7ef fb95 	bl	8000cf8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80115ce:	4620      	mov	r0, r4
 80115d0:	f7ff ff34 	bl	801143c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80115d4:	bd10      	pop	{r4, pc}
 80115d6:	bf00      	nop
 80115d8:	20020a8e 	.word	0x20020a8e

080115dc <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 80115dc:	b508      	push	{r3, lr}
 80115de:	290d      	cmp	r1, #13
 80115e0:	d817      	bhi.n	8011612 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 80115e2:	e8df f001 	tbb	[pc, r1]
 80115e6:	090b      	.short	0x090b
 80115e8:	0d0d0d07 	.word	0x0d0d0d07
 80115ec:	1414140d 	.word	0x1414140d
 80115f0:	0d0d1414 	.word	0x0d0d1414
 80115f4:	2020      	movs	r0, #32
 80115f6:	bd08      	pop	{r3, pc}
 80115f8:	2018      	movs	r0, #24
 80115fa:	e7fc      	b.n	80115f6 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 80115fc:	2010      	movs	r0, #16
 80115fe:	e7fa      	b.n	80115f6 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8011600:	4b05      	ldr	r3, [pc, #20]	; (8011618 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 8011602:	4a06      	ldr	r2, [pc, #24]	; (801161c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 8011604:	4806      	ldr	r0, [pc, #24]	; (8011620 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 8011606:	f240 2182 	movw	r1, #642	; 0x282
 801160a:	f012 ff15 	bl	8024438 <__assert_func>
 801160e:	2008      	movs	r0, #8
 8011610:	e7f1      	b.n	80115f6 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8011612:	2000      	movs	r0, #0
 8011614:	e7ef      	b.n	80115f6 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8011616:	bf00      	nop
 8011618:	0802951f 	.word	0x0802951f
 801161c:	080298f2 	.word	0x080298f2
 8011620:	080294a3 	.word	0x080294a3

08011624 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 8011624:	b570      	push	{r4, r5, r6, lr}
 8011626:	460d      	mov	r5, r1
 8011628:	f89d 1014 	ldrb.w	r1, [sp, #20]
 801162c:	4616      	mov	r6, r2
 801162e:	461c      	mov	r4, r3
 8011630:	f7ff ffd4 	bl	80115dc <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 8011634:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 8011638:	10c0      	asrs	r0, r0, #3
 801163a:	fb06 5101 	mla	r1, r6, r1, r5
 801163e:	fb00 4001 	mla	r0, r0, r1, r4
 8011642:	bd70      	pop	{r4, r5, r6, pc}

08011644 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8011644:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011648:	b08a      	sub	sp, #40	; 0x28
 801164a:	f04f 0c00 	mov.w	ip, #0
 801164e:	f89d 5064 	ldrb.w	r5, [sp, #100]	; 0x64
 8011652:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 8011656:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 801165a:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801165e:	f89d 8068 	ldrb.w	r8, [sp, #104]	; 0x68
 8011662:	f8cd c014 	str.w	ip, [sp, #20]
 8011666:	2d0b      	cmp	r5, #11
 8011668:	4604      	mov	r4, r0
 801166a:	469a      	mov	sl, r3
 801166c:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8011670:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8011674:	d12d      	bne.n	80116d2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x8e>
 8011676:	2080      	movs	r0, #128	; 0x80
 8011678:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801167c:	9204      	str	r2, [sp, #16]
 801167e:	4620      	mov	r0, r4
 8011680:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8011684:	f8ad 2020 	strh.w	r2, [sp, #32]
 8011688:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801168c:	f8ad 701c 	strh.w	r7, [sp, #28]
 8011690:	f8ad 601e 	strh.w	r6, [sp, #30]
 8011694:	f7ff fed2 	bl	801143c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011698:	e9cd 9800 	strd	r9, r8, [sp]
 801169c:	4603      	mov	r3, r0
 801169e:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 80116a2:	4651      	mov	r1, sl
 80116a4:	4620      	mov	r0, r4
 80116a6:	f7ff ffbd 	bl	8011624 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 80116aa:	f89d 306c 	ldrb.w	r3, [sp, #108]	; 0x6c
 80116ae:	9006      	str	r0, [sp, #24]
 80116b0:	f8ad 9022 	strh.w	r9, [sp, #34]	; 0x22
 80116b4:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 80116b8:	f88d 8026 	strb.w	r8, [sp, #38]	; 0x26
 80116bc:	f88d 3027 	strb.w	r3, [sp, #39]	; 0x27
 80116c0:	b107      	cbz	r7, 80116c4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x80>
 80116c2:	b9d6      	cbnz	r6, 80116fa <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb6>
 80116c4:	4b17      	ldr	r3, [pc, #92]	; (8011724 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe0>)
 80116c6:	4a18      	ldr	r2, [pc, #96]	; (8011728 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe4>)
 80116c8:	f44f 71ea 	mov.w	r1, #468	; 0x1d4
 80116cc:	4817      	ldr	r0, [pc, #92]	; (801172c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 80116ce:	f012 feb3 	bl	8024438 <__assert_func>
 80116d2:	2d02      	cmp	r5, #2
 80116d4:	d108      	bne.n	80116e8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xa4>
 80116d6:	2bff      	cmp	r3, #255	; 0xff
 80116d8:	d104      	bne.n	80116e4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xa0>
 80116da:	2800      	cmp	r0, #0
 80116dc:	bf14      	ite	ne
 80116de:	2040      	movne	r0, #64	; 0x40
 80116e0:	2020      	moveq	r0, #32
 80116e2:	e7c9      	b.n	8011678 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 80116e4:	2040      	movs	r0, #64	; 0x40
 80116e6:	e7c7      	b.n	8011678 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 80116e8:	2bff      	cmp	r3, #255	; 0xff
 80116ea:	d104      	bne.n	80116f6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb2>
 80116ec:	2800      	cmp	r0, #0
 80116ee:	bf14      	ite	ne
 80116f0:	2004      	movne	r0, #4
 80116f2:	2001      	moveq	r0, #1
 80116f4:	e7c0      	b.n	8011678 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 80116f6:	2004      	movs	r0, #4
 80116f8:	e7be      	b.n	8011678 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 80116fa:	6823      	ldr	r3, [r4, #0]
 80116fc:	9d02      	ldr	r5, [sp, #8]
 80116fe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011700:	4620      	mov	r0, r4
 8011702:	4798      	blx	r3
 8011704:	4228      	tst	r0, r5
 8011706:	d104      	bne.n	8011712 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xce>
 8011708:	4b09      	ldr	r3, [pc, #36]	; (8011730 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xec>)
 801170a:	4a07      	ldr	r2, [pc, #28]	; (8011728 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe4>)
 801170c:	f240 11d5 	movw	r1, #469	; 0x1d5
 8011710:	e7dc      	b.n	80116cc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x88>
 8011712:	6860      	ldr	r0, [r4, #4]
 8011714:	6803      	ldr	r3, [r0, #0]
 8011716:	a902      	add	r1, sp, #8
 8011718:	685b      	ldr	r3, [r3, #4]
 801171a:	4798      	blx	r3
 801171c:	b00a      	add	sp, #40	; 0x28
 801171e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011722:	bf00      	nop
 8011724:	080292f1 	.word	0x080292f1
 8011728:	08029780 	.word	0x08029780
 801172c:	080294a3 	.word	0x080294a3
 8011730:	08029329 	.word	0x08029329

08011734 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8011734:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011738:	b08b      	sub	sp, #44	; 0x2c
 801173a:	469b      	mov	fp, r3
 801173c:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8011740:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 8011744:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 8011748:	2fff      	cmp	r7, #255	; 0xff
 801174a:	bf14      	ite	ne
 801174c:	2308      	movne	r3, #8
 801174e:	2302      	moveq	r3, #2
 8011750:	2600      	movs	r6, #0
 8011752:	4604      	mov	r4, r0
 8011754:	4689      	mov	r9, r1
 8011756:	4692      	mov	sl, r2
 8011758:	e9cd 3602 	strd	r3, r6, [sp, #8]
 801175c:	9605      	str	r6, [sp, #20]
 801175e:	f7ff fe6d 	bl	801143c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011762:	e9cd 8500 	strd	r8, r5, [sp]
 8011766:	4603      	mov	r3, r0
 8011768:	465a      	mov	r2, fp
 801176a:	4651      	mov	r1, sl
 801176c:	4620      	mov	r0, r4
 801176e:	f7ff ff59 	bl	8011624 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8011772:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8011776:	f8ad 301c 	strh.w	r3, [sp, #28]
 801177a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801177e:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011782:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8011786:	f88d 3027 	strb.w	r3, [sp, #39]	; 0x27
 801178a:	6823      	ldr	r3, [r4, #0]
 801178c:	9006      	str	r0, [sp, #24]
 801178e:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 8011792:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 8011796:	f8ad 6020 	strh.w	r6, [sp, #32]
 801179a:	f8ad 8022 	strh.w	r8, [sp, #34]	; 0x22
 801179e:	f8cd 9014 	str.w	r9, [sp, #20]
 80117a2:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 80117a6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80117a8:	9d02      	ldr	r5, [sp, #8]
 80117aa:	4620      	mov	r0, r4
 80117ac:	4798      	blx	r3
 80117ae:	4228      	tst	r0, r5
 80117b0:	d106      	bne.n	80117c0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>
 80117b2:	4b07      	ldr	r3, [pc, #28]	; (80117d0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x9c>)
 80117b4:	4a07      	ldr	r2, [pc, #28]	; (80117d4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa0>)
 80117b6:	4808      	ldr	r0, [pc, #32]	; (80117d8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa4>)
 80117b8:	f240 2137 	movw	r1, #567	; 0x237
 80117bc:	f012 fe3c 	bl	8024438 <__assert_func>
 80117c0:	6860      	ldr	r0, [r4, #4]
 80117c2:	6803      	ldr	r3, [r0, #0]
 80117c4:	a902      	add	r1, sp, #8
 80117c6:	685b      	ldr	r3, [r3, #4]
 80117c8:	4798      	blx	r3
 80117ca:	b00b      	add	sp, #44	; 0x2c
 80117cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80117d0:	08029329 	.word	0x08029329
 80117d4:	08029857 	.word	0x08029857
 80117d8:	080294a3 	.word	0x080294a3

080117dc <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 80117dc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80117e0:	461f      	mov	r7, r3
 80117e2:	4b0b      	ldr	r3, [pc, #44]	; (8011810 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 80117e4:	460d      	mov	r5, r1
 80117e6:	f8b3 8000 	ldrh.w	r8, [r3]
 80117ea:	4616      	mov	r6, r2
 80117ec:	4604      	mov	r4, r0
 80117ee:	f7ff fc65 	bl	80110bc <_ZN8touchgfx3HAL3lcdEv>
 80117f2:	6803      	ldr	r3, [r0, #0]
 80117f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80117f6:	4798      	blx	r3
 80117f8:	463b      	mov	r3, r7
 80117fa:	e9cd 8000 	strd	r8, r0, [sp]
 80117fe:	4632      	mov	r2, r6
 8011800:	4629      	mov	r1, r5
 8011802:	4620      	mov	r0, r4
 8011804:	f7ff ff0e 	bl	8011624 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8011808:	b002      	add	sp, #8
 801180a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801180e:	bf00      	nop
 8011810:	20020a8a 	.word	0x20020a8a

08011814 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8011814:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011818:	b088      	sub	sp, #32
 801181a:	4698      	mov	r8, r3
 801181c:	2300      	movs	r3, #0
 801181e:	9303      	str	r3, [sp, #12]
 8011820:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8011824:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 8011828:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 801182c:	f8ad 6014 	strh.w	r6, [sp, #20]
 8011830:	e9cd 3100 	strd	r3, r1, [sp]
 8011834:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011838:	f8ad 3018 	strh.w	r3, [sp, #24]
 801183c:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8011840:	f88d 301c 	strb.w	r3, [sp, #28]
 8011844:	4617      	mov	r7, r2
 8011846:	4604      	mov	r4, r0
 8011848:	f8ad 5016 	strh.w	r5, [sp, #22]
 801184c:	f7ff fdf6 	bl	801143c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011850:	4642      	mov	r2, r8
 8011852:	4603      	mov	r3, r0
 8011854:	4639      	mov	r1, r7
 8011856:	4620      	mov	r0, r4
 8011858:	f7ff ffc0 	bl	80117dc <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801185c:	4b18      	ldr	r3, [pc, #96]	; (80118c0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xac>)
 801185e:	9004      	str	r0, [sp, #16]
 8011860:	881b      	ldrh	r3, [r3, #0]
 8011862:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011866:	f7ff fc29 	bl	80110bc <_ZN8touchgfx3HAL3lcdEv>
 801186a:	6803      	ldr	r3, [r0, #0]
 801186c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801186e:	4798      	blx	r3
 8011870:	f88d 001e 	strb.w	r0, [sp, #30]
 8011874:	f88d 001d 	strb.w	r0, [sp, #29]
 8011878:	b106      	cbz	r6, 801187c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x68>
 801187a:	b935      	cbnz	r5, 801188a <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x76>
 801187c:	4b11      	ldr	r3, [pc, #68]	; (80118c4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb0>)
 801187e:	4a12      	ldr	r2, [pc, #72]	; (80118c8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb4>)
 8011880:	f240 11f1 	movw	r1, #497	; 0x1f1
 8011884:	4811      	ldr	r0, [pc, #68]	; (80118cc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 8011886:	f012 fdd7 	bl	8024438 <__assert_func>
 801188a:	6823      	ldr	r3, [r4, #0]
 801188c:	9d00      	ldr	r5, [sp, #0]
 801188e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011890:	4620      	mov	r0, r4
 8011892:	4798      	blx	r3
 8011894:	4228      	tst	r0, r5
 8011896:	d104      	bne.n	80118a2 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x8e>
 8011898:	4b0d      	ldr	r3, [pc, #52]	; (80118d0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xbc>)
 801189a:	4a0b      	ldr	r2, [pc, #44]	; (80118c8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb4>)
 801189c:	f44f 71f9 	mov.w	r1, #498	; 0x1f2
 80118a0:	e7f0      	b.n	8011884 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x70>
 80118a2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80118a4:	9303      	str	r3, [sp, #12]
 80118a6:	6860      	ldr	r0, [r4, #4]
 80118a8:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80118ac:	f88d 301f 	strb.w	r3, [sp, #31]
 80118b0:	6803      	ldr	r3, [r0, #0]
 80118b2:	4669      	mov	r1, sp
 80118b4:	685b      	ldr	r3, [r3, #4]
 80118b6:	4798      	blx	r3
 80118b8:	b008      	add	sp, #32
 80118ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80118be:	bf00      	nop
 80118c0:	20020a8a 	.word	0x20020a8a
 80118c4:	080292f1 	.word	0x080292f1
 80118c8:	0802962c 	.word	0x0802962c
 80118cc:	080294a3 	.word	0x080294a3
 80118d0:	08029329 	.word	0x08029329

080118d4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 80118d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80118d6:	b08b      	sub	sp, #44	; 0x2c
 80118d8:	466b      	mov	r3, sp
 80118da:	e883 0006 	stmia.w	r3, {r1, r2}
 80118de:	4b21      	ldr	r3, [pc, #132]	; (8011964 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 80118e0:	781b      	ldrb	r3, [r3, #0]
 80118e2:	4604      	mov	r4, r0
 80118e4:	b933      	cbnz	r3, 80118f4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 80118e6:	4b20      	ldr	r3, [pc, #128]	; (8011968 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 80118e8:	4a20      	ldr	r2, [pc, #128]	; (801196c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 80118ea:	4821      	ldr	r0, [pc, #132]	; (8011970 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 80118ec:	f44f 7112 	mov.w	r1, #584	; 0x248
 80118f0:	f012 fda2 	bl	8024438 <__assert_func>
 80118f4:	2301      	movs	r3, #1
 80118f6:	9302      	str	r3, [sp, #8]
 80118f8:	6803      	ldr	r3, [r0, #0]
 80118fa:	f8bd 6000 	ldrh.w	r6, [sp]
 80118fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011900:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8011904:	2500      	movs	r5, #0
 8011906:	9505      	str	r5, [sp, #20]
 8011908:	4798      	blx	r3
 801190a:	463a      	mov	r2, r7
 801190c:	4631      	mov	r1, r6
 801190e:	4603      	mov	r3, r0
 8011910:	4620      	mov	r0, r4
 8011912:	f7ff ff63 	bl	80117dc <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011916:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011918:	9306      	str	r3, [sp, #24]
 801191a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801191e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011922:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8011926:	f8ad 301e 	strh.w	r3, [sp, #30]
 801192a:	4b12      	ldr	r3, [pc, #72]	; (8011974 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa0>)
 801192c:	9003      	str	r0, [sp, #12]
 801192e:	881b      	ldrh	r3, [r3, #0]
 8011930:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011934:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011938:	f7ff fbc0 	bl	80110bc <_ZN8touchgfx3HAL3lcdEv>
 801193c:	6803      	ldr	r3, [r0, #0]
 801193e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011940:	4798      	blx	r3
 8011942:	23ff      	movs	r3, #255	; 0xff
 8011944:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 8011948:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 801194c:	6860      	ldr	r0, [r4, #4]
 801194e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8011952:	f88d 5027 	strb.w	r5, [sp, #39]	; 0x27
 8011956:	6803      	ldr	r3, [r0, #0]
 8011958:	a902      	add	r1, sp, #8
 801195a:	685b      	ldr	r3, [r3, #4]
 801195c:	4798      	blx	r3
 801195e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8011960:	b00b      	add	sp, #44	; 0x2c
 8011962:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011964:	20020a8f 	.word	0x20020a8f
 8011968:	080293f0 	.word	0x080293f0
 801196c:	080296d6 	.word	0x080296d6
 8011970:	080294a3 	.word	0x080294a3
 8011974:	20020a8a 	.word	0x20020a8a

08011978 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8011978:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801197c:	b08a      	sub	sp, #40	; 0x28
 801197e:	466d      	mov	r5, sp
 8011980:	e885 0006 	stmia.w	r5, {r1, r2}
 8011984:	461d      	mov	r5, r3
 8011986:	2301      	movs	r3, #1
 8011988:	9302      	str	r3, [sp, #8]
 801198a:	6803      	ldr	r3, [r0, #0]
 801198c:	f8bd 7000 	ldrh.w	r7, [sp]
 8011990:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011992:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8011996:	2600      	movs	r6, #0
 8011998:	9605      	str	r6, [sp, #20]
 801199a:	4604      	mov	r4, r0
 801199c:	4798      	blx	r3
 801199e:	4642      	mov	r2, r8
 80119a0:	4639      	mov	r1, r7
 80119a2:	4603      	mov	r3, r0
 80119a4:	4620      	mov	r0, r4
 80119a6:	f7ff ff19 	bl	80117dc <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80119aa:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80119ae:	f8ad 301c 	strh.w	r3, [sp, #28]
 80119b2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80119b6:	f8ad 301e 	strh.w	r3, [sp, #30]
 80119ba:	4b10      	ldr	r3, [pc, #64]	; (80119fc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x84>)
 80119bc:	9003      	str	r0, [sp, #12]
 80119be:	881b      	ldrh	r3, [r3, #0]
 80119c0:	f8ad 3020 	strh.w	r3, [sp, #32]
 80119c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80119c6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80119ca:	9506      	str	r5, [sp, #24]
 80119cc:	f7ff fb76 	bl	80110bc <_ZN8touchgfx3HAL3lcdEv>
 80119d0:	6803      	ldr	r3, [r0, #0]
 80119d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80119d4:	4798      	blx	r3
 80119d6:	23ff      	movs	r3, #255	; 0xff
 80119d8:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 80119dc:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 80119e0:	6860      	ldr	r0, [r4, #4]
 80119e2:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80119e6:	f88d 6027 	strb.w	r6, [sp, #39]	; 0x27
 80119ea:	6803      	ldr	r3, [r0, #0]
 80119ec:	a902      	add	r1, sp, #8
 80119ee:	685b      	ldr	r3, [r3, #4]
 80119f0:	4798      	blx	r3
 80119f2:	4628      	mov	r0, r5
 80119f4:	b00a      	add	sp, #40	; 0x28
 80119f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80119fa:	bf00      	nop
 80119fc:	20020a8a 	.word	0x20020a8a

08011a00 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8011a00:	b570      	push	{r4, r5, r6, lr}
 8011a02:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 8011a06:	4604      	mov	r4, r0
 8011a08:	b19b      	cbz	r3, 8011a32 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8011a0a:	2002      	movs	r0, #2
 8011a0c:	f7ee feec 	bl	80007e8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8011a10:	2300      	movs	r3, #0
 8011a12:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8011a16:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 8011a1a:	6823      	ldr	r3, [r4, #0]
 8011a1c:	4620      	mov	r0, r4
 8011a1e:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 8011a22:	f7ff fd0b 	bl	801143c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011a26:	462b      	mov	r3, r5
 8011a28:	4601      	mov	r1, r0
 8011a2a:	4620      	mov	r0, r4
 8011a2c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011a30:	4718      	bx	r3
 8011a32:	bd70      	pop	{r4, r5, r6, pc}

08011a34 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 8011a34:	b570      	push	{r4, r5, r6, lr}
 8011a36:	4605      	mov	r5, r0
 8011a38:	460c      	mov	r4, r1
 8011a3a:	2003      	movs	r0, #3
 8011a3c:	b149      	cbz	r1, 8011a52 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 8011a3e:	f7ee fe9b 	bl	8000778 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8011a42:	6928      	ldr	r0, [r5, #16]
 8011a44:	b168      	cbz	r0, 8011a62 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 8011a46:	6803      	ldr	r3, [r0, #0]
 8011a48:	695b      	ldr	r3, [r3, #20]
 8011a4a:	2101      	movs	r1, #1
 8011a4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011a50:	4718      	bx	r3
 8011a52:	f7ee fead 	bl	80007b0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8011a56:	6928      	ldr	r0, [r5, #16]
 8011a58:	b118      	cbz	r0, 8011a62 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 8011a5a:	6803      	ldr	r3, [r0, #0]
 8011a5c:	4621      	mov	r1, r4
 8011a5e:	695b      	ldr	r3, [r3, #20]
 8011a60:	e7f4      	b.n	8011a4c <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 8011a62:	bd70      	pop	{r4, r5, r6, pc}

08011a64 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8011a64:	4770      	bx	lr

08011a66 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8011a66:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8011a6a:	1a13      	subs	r3, r2, r0
 8011a6c:	4258      	negs	r0, r3
 8011a6e:	4158      	adcs	r0, r3
 8011a70:	4770      	bx	lr

08011a72 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8011a72:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8011a76:	1a9b      	subs	r3, r3, r2
 8011a78:	2b00      	cmp	r3, #0
 8011a7a:	bfdc      	itt	le
 8011a7c:	6882      	ldrle	r2, [r0, #8]
 8011a7e:	189b      	addle	r3, r3, r2
 8011a80:	2b01      	cmp	r3, #1
 8011a82:	bfcc      	ite	gt
 8011a84:	2000      	movgt	r0, #0
 8011a86:	2001      	movle	r0, #1
 8011a88:	4770      	bx	lr

08011a8a <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8011a8a:	6902      	ldr	r2, [r0, #16]
 8011a8c:	6840      	ldr	r0, [r0, #4]
 8011a8e:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 8011a92:	4770      	bx	lr

08011a94 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8011a94:	6803      	ldr	r3, [r0, #0]
 8011a96:	691b      	ldr	r3, [r3, #16]
 8011a98:	4718      	bx	r3

08011a9a <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8011a9a:	4770      	bx	lr

08011a9c <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8011a9c:	4770      	bx	lr

08011a9e <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8011a9e:	4770      	bx	lr

08011aa0 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8011aa0:	b570      	push	{r4, r5, r6, lr}
 8011aa2:	2301      	movs	r3, #1
 8011aa4:	7203      	strb	r3, [r0, #8]
 8011aa6:	4604      	mov	r4, r0
 8011aa8:	6840      	ldr	r0, [r0, #4]
 8011aaa:	6803      	ldr	r3, [r0, #0]
 8011aac:	699b      	ldr	r3, [r3, #24]
 8011aae:	4798      	blx	r3
 8011ab0:	6803      	ldr	r3, [r0, #0]
 8011ab2:	2b40      	cmp	r3, #64	; 0x40
 8011ab4:	4605      	mov	r5, r0
 8011ab6:	d039      	beq.n	8011b2c <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8011ab8:	d815      	bhi.n	8011ae6 <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 8011aba:	2b04      	cmp	r3, #4
 8011abc:	d022      	beq.n	8011b04 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8011abe:	d808      	bhi.n	8011ad2 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011ac0:	2b01      	cmp	r3, #1
 8011ac2:	d033      	beq.n	8011b2c <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8011ac4:	2b02      	cmp	r3, #2
 8011ac6:	d108      	bne.n	8011ada <_ZN8touchgfx13DMA_Interface7executeEv+0x3a>
 8011ac8:	6823      	ldr	r3, [r4, #0]
 8011aca:	4620      	mov	r0, r4
 8011acc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011ace:	4798      	blx	r3
 8011ad0:	e025      	b.n	8011b1e <_ZN8touchgfx13DMA_Interface7executeEv+0x7e>
 8011ad2:	2b08      	cmp	r3, #8
 8011ad4:	d01e      	beq.n	8011b14 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>
 8011ad6:	2b20      	cmp	r3, #32
 8011ad8:	d028      	beq.n	8011b2c <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8011ada:	4b17      	ldr	r3, [pc, #92]	; (8011b38 <_ZN8touchgfx13DMA_Interface7executeEv+0x98>)
 8011adc:	4a17      	ldr	r2, [pc, #92]	; (8011b3c <_ZN8touchgfx13DMA_Interface7executeEv+0x9c>)
 8011ade:	4818      	ldr	r0, [pc, #96]	; (8011b40 <_ZN8touchgfx13DMA_Interface7executeEv+0xa0>)
 8011ae0:	218b      	movs	r1, #139	; 0x8b
 8011ae2:	f012 fca9 	bl	8024438 <__assert_func>
 8011ae6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8011aea:	d01f      	beq.n	8011b2c <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8011aec:	d804      	bhi.n	8011af8 <_ZN8touchgfx13DMA_Interface7executeEv+0x58>
 8011aee:	2b80      	cmp	r3, #128	; 0x80
 8011af0:	d01c      	beq.n	8011b2c <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8011af2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8011af6:	e7ef      	b.n	8011ad8 <_ZN8touchgfx13DMA_Interface7executeEv+0x38>
 8011af8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8011afc:	d016      	beq.n	8011b2c <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8011afe:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8011b02:	e7e0      	b.n	8011ac6 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8011b04:	6823      	ldr	r3, [r4, #0]
 8011b06:	7f01      	ldrb	r1, [r0, #28]
 8011b08:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011b0a:	4620      	mov	r0, r4
 8011b0c:	4798      	blx	r3
 8011b0e:	6823      	ldr	r3, [r4, #0]
 8011b10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011b12:	e006      	b.n	8011b22 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8011b14:	6823      	ldr	r3, [r4, #0]
 8011b16:	7f01      	ldrb	r1, [r0, #28]
 8011b18:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011b1a:	4620      	mov	r0, r4
 8011b1c:	4798      	blx	r3
 8011b1e:	6823      	ldr	r3, [r4, #0]
 8011b20:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011b22:	4629      	mov	r1, r5
 8011b24:	4620      	mov	r0, r4
 8011b26:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011b2a:	4718      	bx	r3
 8011b2c:	6823      	ldr	r3, [r4, #0]
 8011b2e:	4620      	mov	r0, r4
 8011b30:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011b32:	4798      	blx	r3
 8011b34:	e7eb      	b.n	8011b0e <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 8011b36:	bf00      	nop
 8011b38:	0802993b 	.word	0x0802993b
 8011b3c:	080299fc 	.word	0x080299fc
 8011b40:	08029960 	.word	0x08029960

08011b44 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8011b44:	b570      	push	{r4, r5, r6, lr}
 8011b46:	4604      	mov	r4, r0
 8011b48:	460e      	mov	r6, r1
 8011b4a:	6860      	ldr	r0, [r4, #4]
 8011b4c:	6803      	ldr	r3, [r0, #0]
 8011b4e:	685b      	ldr	r3, [r3, #4]
 8011b50:	4798      	blx	r3
 8011b52:	2800      	cmp	r0, #0
 8011b54:	d1f9      	bne.n	8011b4a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8011b56:	4d0d      	ldr	r5, [pc, #52]	; (8011b8c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8011b58:	6828      	ldr	r0, [r5, #0]
 8011b5a:	6803      	ldr	r3, [r0, #0]
 8011b5c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8011b5e:	4798      	blx	r3
 8011b60:	f7ef f8d8 	bl	8000d14 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8011b64:	6828      	ldr	r0, [r5, #0]
 8011b66:	2101      	movs	r1, #1
 8011b68:	f7ff ff7c 	bl	8011a64 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011b6c:	6860      	ldr	r0, [r4, #4]
 8011b6e:	6803      	ldr	r3, [r0, #0]
 8011b70:	4631      	mov	r1, r6
 8011b72:	689b      	ldr	r3, [r3, #8]
 8011b74:	4798      	blx	r3
 8011b76:	6823      	ldr	r3, [r4, #0]
 8011b78:	4620      	mov	r0, r4
 8011b7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011b7c:	4798      	blx	r3
 8011b7e:	6828      	ldr	r0, [r5, #0]
 8011b80:	6803      	ldr	r3, [r0, #0]
 8011b82:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011b86:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8011b88:	4718      	bx	r3
 8011b8a:	bf00      	nop
 8011b8c:	20020a90 	.word	0x20020a90

08011b90 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8011b90:	b508      	push	{r3, lr}
 8011b92:	f7ef f8b1 	bl	8000cf8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8011b96:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011b9a:	f7ef b8b5 	b.w	8000d08 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08011b9e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8011b9e:	b510      	push	{r4, lr}
 8011ba0:	2114      	movs	r1, #20
 8011ba2:	4604      	mov	r4, r0
 8011ba4:	f012 fc19 	bl	80243da <_ZdlPvj>
 8011ba8:	4620      	mov	r0, r4
 8011baa:	bd10      	pop	{r4, pc}

08011bac <_ZN8touchgfx13DMA_Interface5startEv>:
 8011bac:	b510      	push	{r4, lr}
 8011bae:	4604      	mov	r4, r0
 8011bb0:	6840      	ldr	r0, [r0, #4]
 8011bb2:	6803      	ldr	r3, [r0, #0]
 8011bb4:	681b      	ldr	r3, [r3, #0]
 8011bb6:	4798      	blx	r3
 8011bb8:	b948      	cbnz	r0, 8011bce <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011bba:	7a63      	ldrb	r3, [r4, #9]
 8011bbc:	b13b      	cbz	r3, 8011bce <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011bbe:	7a23      	ldrb	r3, [r4, #8]
 8011bc0:	b92b      	cbnz	r3, 8011bce <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011bc2:	6823      	ldr	r3, [r4, #0]
 8011bc4:	4620      	mov	r0, r4
 8011bc6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011bc8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011bcc:	4718      	bx	r3
 8011bce:	bd10      	pop	{r4, pc}

08011bd0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8011bd0:	b570      	push	{r4, r5, r6, lr}
 8011bd2:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8011bd6:	1a9b      	subs	r3, r3, r2
 8011bd8:	2b00      	cmp	r3, #0
 8011bda:	4606      	mov	r6, r0
 8011bdc:	bfdc      	itt	le
 8011bde:	6880      	ldrle	r0, [r0, #8]
 8011be0:	181b      	addle	r3, r3, r0
 8011be2:	2b01      	cmp	r3, #1
 8011be4:	dd13      	ble.n	8011c0e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x3e>
 8011be6:	6874      	ldr	r4, [r6, #4]
 8011be8:	460d      	mov	r5, r1
 8011bea:	eb04 1442 	add.w	r4, r4, r2, lsl #5
 8011bee:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8011bf0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8011bf2:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8011bf6:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8011bfa:	68f3      	ldr	r3, [r6, #12]
 8011bfc:	68b2      	ldr	r2, [r6, #8]
 8011bfe:	f3bf 8f5b 	dmb	ish
 8011c02:	3301      	adds	r3, #1
 8011c04:	429a      	cmp	r2, r3
 8011c06:	bfd8      	it	le
 8011c08:	1a9b      	suble	r3, r3, r2
 8011c0a:	60f3      	str	r3, [r6, #12]
 8011c0c:	bd70      	pop	{r4, r5, r6, pc}
 8011c0e:	4b03      	ldr	r3, [pc, #12]	; (8011c1c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x4c>)
 8011c10:	4a03      	ldr	r2, [pc, #12]	; (8011c20 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x50>)
 8011c12:	4804      	ldr	r0, [pc, #16]	; (8011c24 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 8011c14:	2139      	movs	r1, #57	; 0x39
 8011c16:	f012 fc0f 	bl	8024438 <__assert_func>
 8011c1a:	bf00      	nop
 8011c1c:	08029986 	.word	0x08029986
 8011c20:	08029a2c 	.word	0x08029a2c
 8011c24:	08029960 	.word	0x08029960

08011c28 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8011c28:	b510      	push	{r4, lr}
 8011c2a:	6803      	ldr	r3, [r0, #0]
 8011c2c:	681b      	ldr	r3, [r3, #0]
 8011c2e:	4604      	mov	r4, r0
 8011c30:	4798      	blx	r3
 8011c32:	b128      	cbz	r0, 8011c40 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 8011c34:	4b07      	ldr	r3, [pc, #28]	; (8011c54 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 8011c36:	4a08      	ldr	r2, [pc, #32]	; (8011c58 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 8011c38:	4808      	ldr	r0, [pc, #32]	; (8011c5c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 8011c3a:	213f      	movs	r1, #63	; 0x3f
 8011c3c:	f012 fbfc 	bl	8024438 <__assert_func>
 8011c40:	6923      	ldr	r3, [r4, #16]
 8011c42:	68a2      	ldr	r2, [r4, #8]
 8011c44:	f3bf 8f5b 	dmb	ish
 8011c48:	3301      	adds	r3, #1
 8011c4a:	429a      	cmp	r2, r3
 8011c4c:	bfd8      	it	le
 8011c4e:	1a9b      	suble	r3, r3, r2
 8011c50:	6123      	str	r3, [r4, #16]
 8011c52:	bd10      	pop	{r4, pc}
 8011c54:	080299a9 	.word	0x080299a9
 8011c58:	08029a7a 	.word	0x08029a7a
 8011c5c:	08029960 	.word	0x08029960

08011c60 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8011c60:	b570      	push	{r4, r5, r6, lr}
 8011c62:	4604      	mov	r4, r0
 8011c64:	6840      	ldr	r0, [r0, #4]
 8011c66:	6803      	ldr	r3, [r0, #0]
 8011c68:	681b      	ldr	r3, [r3, #0]
 8011c6a:	4798      	blx	r3
 8011c6c:	4605      	mov	r5, r0
 8011c6e:	b930      	cbnz	r0, 8011c7e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011c70:	7a23      	ldrb	r3, [r4, #8]
 8011c72:	b123      	cbz	r3, 8011c7e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011c74:	6860      	ldr	r0, [r4, #4]
 8011c76:	6803      	ldr	r3, [r0, #0]
 8011c78:	695b      	ldr	r3, [r3, #20]
 8011c7a:	4798      	blx	r3
 8011c7c:	7225      	strb	r5, [r4, #8]
 8011c7e:	6860      	ldr	r0, [r4, #4]
 8011c80:	6803      	ldr	r3, [r0, #0]
 8011c82:	681b      	ldr	r3, [r3, #0]
 8011c84:	4798      	blx	r3
 8011c86:	b928      	cbnz	r0, 8011c94 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8011c88:	6823      	ldr	r3, [r4, #0]
 8011c8a:	4620      	mov	r0, r4
 8011c8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011c8e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011c92:	4718      	bx	r3
 8011c94:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011c98:	f7ef b844 	b.w	8000d24 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08011c9c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8011c9c:	b510      	push	{r4, lr}
 8011c9e:	4c04      	ldr	r4, [pc, #16]	; (8011cb0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8011ca0:	6082      	str	r2, [r0, #8]
 8011ca2:	2200      	movs	r2, #0
 8011ca4:	e9c0 4100 	strd	r4, r1, [r0]
 8011ca8:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8011cac:	bd10      	pop	{r4, pc}
 8011cae:	bf00      	nop
 8011cb0:	080299e0 	.word	0x080299e0

08011cb4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8011cb4:	6840      	ldr	r0, [r0, #4]
 8011cb6:	6803      	ldr	r3, [r0, #0]
 8011cb8:	681b      	ldr	r3, [r3, #0]
 8011cba:	4718      	bx	r3

08011cbc <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8011cbc:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8011cc0:	4770      	bx	lr

08011cc2 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8011cc2:	b510      	push	{r4, lr}
 8011cc4:	4604      	mov	r4, r0
 8011cc6:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8011cc8:	b150      	cbz	r0, 8011ce0 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8011cca:	6803      	ldr	r3, [r0, #0]
 8011ccc:	68db      	ldr	r3, [r3, #12]
 8011cce:	4798      	blx	r3
 8011cd0:	b130      	cbz	r0, 8011ce0 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8011cd2:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8011cd4:	6803      	ldr	r3, [r0, #0]
 8011cd6:	4621      	mov	r1, r4
 8011cd8:	689b      	ldr	r3, [r3, #8]
 8011cda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011cde:	4718      	bx	r3
 8011ce0:	bd10      	pop	{r4, pc}

08011ce2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8011ce2:	b570      	push	{r4, r5, r6, lr}
 8011ce4:	790b      	ldrb	r3, [r1, #4]
 8011ce6:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8011cea:	2b00      	cmp	r3, #0
 8011cec:	bf0c      	ite	eq
 8011cee:	2301      	moveq	r3, #1
 8011cf0:	2300      	movne	r3, #0
 8011cf2:	4604      	mov	r4, r0
 8011cf4:	460e      	mov	r6, r1
 8011cf6:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8011cfa:	d109      	bne.n	8011d10 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8011cfc:	b14d      	cbz	r5, 8011d12 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8011cfe:	7933      	ldrb	r3, [r6, #4]
 8011d00:	2b01      	cmp	r3, #1
 8011d02:	d10c      	bne.n	8011d1e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8011d04:	6823      	ldr	r3, [r4, #0]
 8011d06:	4620      	mov	r0, r4
 8011d08:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8011d0a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011d0e:	4718      	bx	r3
 8011d10:	b12d      	cbz	r5, 8011d1e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8011d12:	6823      	ldr	r3, [r4, #0]
 8011d14:	4620      	mov	r0, r4
 8011d16:	695b      	ldr	r3, [r3, #20]
 8011d18:	4798      	blx	r3
 8011d1a:	2d00      	cmp	r5, #0
 8011d1c:	d1ef      	bne.n	8011cfe <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8011d1e:	bd70      	pop	{r4, r5, r6, pc}

08011d20 <_ZN8touchgfx12ToggleButtonD1Ev>:
 8011d20:	4770      	bx	lr

08011d22 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 8011d22:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011d26:	b133      	cbz	r3, 8011d36 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 8011d28:	790b      	ldrb	r3, [r1, #4]
 8011d2a:	2b01      	cmp	r3, #1
 8011d2c:	bf01      	itttt	eq
 8011d2e:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 8011d30:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 8011d32:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 8011d34:	8603      	strheq	r3, [r0, #48]	; 0x30
 8011d36:	f7ff bfd4 	b.w	8011ce2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

08011d3a <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 8011d3a:	8813      	ldrh	r3, [r2, #0]
 8011d3c:	8683      	strh	r3, [r0, #52]	; 0x34
 8011d3e:	f000 b9ec 	b.w	801211a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

08011d42 <_ZN8touchgfx12ToggleButtonD0Ev>:
 8011d42:	b510      	push	{r4, lr}
 8011d44:	2138      	movs	r1, #56	; 0x38
 8011d46:	4604      	mov	r4, r0
 8011d48:	f012 fb47 	bl	80243da <_ZdlPvj>
 8011d4c:	4620      	mov	r0, r4
 8011d4e:	bd10      	pop	{r4, pc}

08011d50 <_ZN8touchgfx8TextAreaD1Ev>:
 8011d50:	4770      	bx	lr
	...

08011d54 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8011d54:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011d56:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011d58:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011d5c:	4299      	cmp	r1, r3
 8011d5e:	d029      	beq.n	8011db4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x60>
 8011d60:	4b15      	ldr	r3, [pc, #84]	; (8011db8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8011d62:	681b      	ldr	r3, [r3, #0]
 8011d64:	b92b      	cbnz	r3, 8011d72 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x1e>
 8011d66:	4b15      	ldr	r3, [pc, #84]	; (8011dbc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8011d68:	4a15      	ldr	r2, [pc, #84]	; (8011dc0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8011d6a:	21ae      	movs	r1, #174	; 0xae
 8011d6c:	4815      	ldr	r0, [pc, #84]	; (8011dc4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8011d6e:	f012 fb63 	bl	8024438 <__assert_func>
 8011d72:	4a15      	ldr	r2, [pc, #84]	; (8011dc8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 8011d74:	8812      	ldrh	r2, [r2, #0]
 8011d76:	428a      	cmp	r2, r1
 8011d78:	d803      	bhi.n	8011d82 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x2e>
 8011d7a:	4b14      	ldr	r3, [pc, #80]	; (8011dcc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 8011d7c:	4a10      	ldr	r2, [pc, #64]	; (8011dc0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8011d7e:	21af      	movs	r1, #175	; 0xaf
 8011d80:	e7f4      	b.n	8011d6c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x18>
 8011d82:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8011d86:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8011d8a:	4b11      	ldr	r3, [pc, #68]	; (8011dd0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 8011d8c:	7854      	ldrb	r4, [r2, #1]
 8011d8e:	681b      	ldr	r3, [r3, #0]
 8011d90:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 8011d94:	682b      	ldr	r3, [r5, #0]
 8011d96:	69de      	ldr	r6, [r3, #28]
 8011d98:	4b0e      	ldr	r3, [pc, #56]	; (8011dd4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 8011d9a:	6818      	ldr	r0, [r3, #0]
 8011d9c:	f7f5 f894 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 8011da0:	f3c4 0481 	ubfx	r4, r4, #2, #2
 8011da4:	2300      	movs	r3, #0
 8011da6:	4602      	mov	r2, r0
 8011da8:	9300      	str	r3, [sp, #0]
 8011daa:	4621      	mov	r1, r4
 8011dac:	4628      	mov	r0, r5
 8011dae:	47b0      	blx	r6
 8011db0:	b002      	add	sp, #8
 8011db2:	bd70      	pop	{r4, r5, r6, pc}
 8011db4:	2000      	movs	r0, #0
 8011db6:	e7fb      	b.n	8011db0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5c>
 8011db8:	20020ae0 	.word	0x20020ae0
 8011dbc:	08027000 	.word	0x08027000
 8011dc0:	08029c00 	.word	0x08029c00
 8011dc4:	0802708e 	.word	0x0802708e
 8011dc8:	20020ae4 	.word	0x20020ae4
 8011dcc:	080270b7 	.word	0x080270b7
 8011dd0:	20020ae8 	.word	0x20020ae8
 8011dd4:	20020aec 	.word	0x20020aec

08011dd8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8011dd8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011ddc:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8011dde:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8011de2:	4293      	cmp	r3, r2
 8011de4:	b08c      	sub	sp, #48	; 0x30
 8011de6:	4604      	mov	r4, r0
 8011de8:	4688      	mov	r8, r1
 8011dea:	d05f      	beq.n	8011eac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 8011dec:	4e31      	ldr	r6, [pc, #196]	; (8011eb4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xdc>)
 8011dee:	6832      	ldr	r2, [r6, #0]
 8011df0:	b92a      	cbnz	r2, 8011dfe <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x26>
 8011df2:	4b31      	ldr	r3, [pc, #196]	; (8011eb8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe0>)
 8011df4:	4a31      	ldr	r2, [pc, #196]	; (8011ebc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 8011df6:	21ae      	movs	r1, #174	; 0xae
 8011df8:	4831      	ldr	r0, [pc, #196]	; (8011ec0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe8>)
 8011dfa:	f012 fb1d 	bl	8024438 <__assert_func>
 8011dfe:	4d31      	ldr	r5, [pc, #196]	; (8011ec4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xec>)
 8011e00:	8829      	ldrh	r1, [r5, #0]
 8011e02:	4299      	cmp	r1, r3
 8011e04:	d803      	bhi.n	8011e0e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x36>
 8011e06:	4b30      	ldr	r3, [pc, #192]	; (8011ec8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf0>)
 8011e08:	4a2c      	ldr	r2, [pc, #176]	; (8011ebc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 8011e0a:	21af      	movs	r1, #175	; 0xaf
 8011e0c:	e7f4      	b.n	8011df8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x20>
 8011e0e:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8011e12:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8011e16:	4b2d      	ldr	r3, [pc, #180]	; (8011ecc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf4>)
 8011e18:	681b      	ldr	r3, [r3, #0]
 8011e1a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8011e1e:	2a00      	cmp	r2, #0
 8011e20:	d044      	beq.n	8011eac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 8011e22:	784b      	ldrb	r3, [r1, #1]
 8011e24:	9207      	str	r2, [sp, #28]
 8011e26:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 8011e2a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011e2e:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8011e32:	4b27      	ldr	r3, [pc, #156]	; (8011ed0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf8>)
 8011e34:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 8011e38:	681b      	ldr	r3, [r3, #0]
 8011e3a:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 8011e3e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8011e42:	f890 9038 	ldrb.w	r9, [r0, #56]	; 0x38
 8011e46:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 8011e4a:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 8011e4e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8011e50:	f88d a020 	strb.w	sl, [sp, #32]
 8011e54:	f88d 9022 	strb.w	r9, [sp, #34]	; 0x22
 8011e58:	9009      	str	r0, [sp, #36]	; 0x24
 8011e5a:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 8011e5e:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 8011e62:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 8011e66:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 8011e6a:	b10a      	cbz	r2, 8011e70 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x98>
 8011e6c:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 8011e6e:	b907      	cbnz	r7, 8011e72 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x9a>
 8011e70:	689f      	ldr	r7, [r3, #8]
 8011e72:	f10d 0914 	add.w	r9, sp, #20
 8011e76:	4621      	mov	r1, r4
 8011e78:	4648      	mov	r0, r9
 8011e7a:	f003 fd29 	bl	80158d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011e7e:	6833      	ldr	r3, [r6, #0]
 8011e80:	2b00      	cmp	r3, #0
 8011e82:	d0b6      	beq.n	8011df2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x1a>
 8011e84:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011e86:	882b      	ldrh	r3, [r5, #0]
 8011e88:	428b      	cmp	r3, r1
 8011e8a:	d9bc      	bls.n	8011e06 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 8011e8c:	4b11      	ldr	r3, [pc, #68]	; (8011ed4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xfc>)
 8011e8e:	6818      	ldr	r0, [r3, #0]
 8011e90:	f7f5 f81a 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 8011e94:	2300      	movs	r3, #0
 8011e96:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8011e9a:	ab07      	add	r3, sp, #28
 8011e9c:	9001      	str	r0, [sp, #4]
 8011e9e:	9300      	str	r3, [sp, #0]
 8011ea0:	e899 0006 	ldmia.w	r9, {r1, r2}
 8011ea4:	4643      	mov	r3, r8
 8011ea6:	4638      	mov	r0, r7
 8011ea8:	f7f4 ffc1 	bl	8006e2e <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8011eac:	b00c      	add	sp, #48	; 0x30
 8011eae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011eb2:	bf00      	nop
 8011eb4:	20020ae0 	.word	0x20020ae0
 8011eb8:	08027000 	.word	0x08027000
 8011ebc:	08029c00 	.word	0x08029c00
 8011ec0:	0802708e 	.word	0x0802708e
 8011ec4:	20020ae4 	.word	0x20020ae4
 8011ec8:	080270b7 	.word	0x080270b7
 8011ecc:	20020ae8 	.word	0x20020ae8
 8011ed0:	20020a90 	.word	0x20020a90
 8011ed4:	20020aec 	.word	0x20020aec

08011ed8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8011ed8:	b40e      	push	{r1, r2, r3}
 8011eda:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011ede:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8011ee0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8011ee4:	4293      	cmp	r3, r2
 8011ee6:	b09c      	sub	sp, #112	; 0x70
 8011ee8:	4604      	mov	r4, r0
 8011eea:	d06b      	beq.n	8011fc4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>
 8011eec:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 8011fd8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x100>
 8011ef0:	aa26      	add	r2, sp, #152	; 0x98
 8011ef2:	9202      	str	r2, [sp, #8]
 8011ef4:	f8da 2000 	ldr.w	r2, [sl]
 8011ef8:	b92a      	cbnz	r2, 8011f06 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2e>
 8011efa:	4b33      	ldr	r3, [pc, #204]	; (8011fc8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>)
 8011efc:	4a33      	ldr	r2, [pc, #204]	; (8011fcc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>)
 8011efe:	21ae      	movs	r1, #174	; 0xae
 8011f00:	4833      	ldr	r0, [pc, #204]	; (8011fd0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf8>)
 8011f02:	f012 fa99 	bl	8024438 <__assert_func>
 8011f06:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8011fdc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x104>
 8011f0a:	f8b8 1000 	ldrh.w	r1, [r8]
 8011f0e:	4299      	cmp	r1, r3
 8011f10:	d803      	bhi.n	8011f1a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x42>
 8011f12:	4b30      	ldr	r3, [pc, #192]	; (8011fd4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xfc>)
 8011f14:	4a2d      	ldr	r2, [pc, #180]	; (8011fcc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>)
 8011f16:	21af      	movs	r1, #175	; 0xaf
 8011f18:	e7f2      	b.n	8011f00 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x28>
 8011f1a:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 8011fe0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x108>
 8011f1e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8011f22:	f8d9 3000 	ldr.w	r3, [r9]
 8011f26:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8011f2a:	682b      	ldr	r3, [r5, #0]
 8011f2c:	4628      	mov	r0, r5
 8011f2e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011f30:	4798      	blx	r3
 8011f32:	4606      	mov	r6, r0
 8011f34:	b207      	sxth	r7, r0
 8011f36:	a803      	add	r0, sp, #12
 8011f38:	f004 f943 	bl	80161c2 <_ZN8touchgfx12TextProviderC1Ev>
 8011f3c:	682b      	ldr	r3, [r5, #0]
 8011f3e:	4628      	mov	r0, r5
 8011f40:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011f42:	4798      	blx	r3
 8011f44:	682b      	ldr	r3, [r5, #0]
 8011f46:	4683      	mov	fp, r0
 8011f48:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011f4a:	4628      	mov	r0, r5
 8011f4c:	4798      	blx	r3
 8011f4e:	465b      	mov	r3, fp
 8011f50:	9000      	str	r0, [sp, #0]
 8011f52:	9925      	ldr	r1, [sp, #148]	; 0x94
 8011f54:	9a02      	ldr	r2, [sp, #8]
 8011f56:	a803      	add	r0, sp, #12
 8011f58:	f004 f99e 	bl	8016298 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011f5c:	f8da 3000 	ldr.w	r3, [sl]
 8011f60:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8011f64:	2b00      	cmp	r3, #0
 8011f66:	d0c8      	beq.n	8011efa <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x22>
 8011f68:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011f6a:	f8b8 0000 	ldrh.w	r0, [r8]
 8011f6e:	4290      	cmp	r0, r2
 8011f70:	d9cf      	bls.n	8011f12 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x3a>
 8011f72:	eb03 0542 	add.w	r5, r3, r2, lsl #1
 8011f76:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8011f7a:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8011f7e:	786a      	ldrb	r2, [r5, #1]
 8011f80:	8925      	ldrh	r5, [r4, #8]
 8011f82:	f8d9 3000 	ldr.w	r3, [r9]
 8011f86:	eba5 050c 	sub.w	r5, r5, ip
 8011f8a:	b22d      	sxth	r5, r5
 8011f8c:	9500      	str	r5, [sp, #0]
 8011f8e:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8011f92:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8011f96:	a803      	add	r0, sp, #12
 8011f98:	f001 ff87 	bl	8013eaa <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8011f9c:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8011fa0:	18b9      	adds	r1, r7, r2
 8011fa2:	2900      	cmp	r1, #0
 8011fa4:	b203      	sxth	r3, r0
 8011fa6:	dd0b      	ble.n	8011fc0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>
 8011fa8:	3b01      	subs	r3, #1
 8011faa:	fb13 f302 	smulbb	r3, r3, r2
 8011fae:	fb16 3300 	smlabb	r3, r6, r0, r3
 8011fb2:	b21f      	sxth	r7, r3
 8011fb4:	4638      	mov	r0, r7
 8011fb6:	b01c      	add	sp, #112	; 0x70
 8011fb8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011fbc:	b003      	add	sp, #12
 8011fbe:	4770      	bx	lr
 8011fc0:	2b00      	cmp	r3, #0
 8011fc2:	dcf7      	bgt.n	8011fb4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xdc>
 8011fc4:	2700      	movs	r7, #0
 8011fc6:	e7f5      	b.n	8011fb4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xdc>
 8011fc8:	08027000 	.word	0x08027000
 8011fcc:	08029c00 	.word	0x08029c00
 8011fd0:	0802708e 	.word	0x0802708e
 8011fd4:	080270b7 	.word	0x080270b7
 8011fd8:	20020ae0 	.word	0x20020ae0
 8011fdc:	20020ae4 	.word	0x20020ae4
 8011fe0:	20020ae8 	.word	0x20020ae8

08011fe4 <_ZN8touchgfx8TextAreaD0Ev>:
 8011fe4:	b510      	push	{r4, lr}
 8011fe6:	213c      	movs	r1, #60	; 0x3c
 8011fe8:	4604      	mov	r4, r0
 8011fea:	f012 f9f6 	bl	80243da <_ZdlPvj>
 8011fee:	4620      	mov	r0, r4
 8011ff0:	bd10      	pop	{r4, pc}
	...

08011ff4 <_ZN8touchgfx8TextArea13getTextHeightEv>:
 8011ff4:	b570      	push	{r4, r5, r6, lr}
 8011ff6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011ff8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011ffc:	4299      	cmp	r1, r3
 8011ffe:	4604      	mov	r4, r0
 8012000:	d01e      	beq.n	8012040 <_ZN8touchgfx8TextArea13getTextHeightEv+0x4c>
 8012002:	6803      	ldr	r3, [r0, #0]
 8012004:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 8012006:	4b0f      	ldr	r3, [pc, #60]	; (8012044 <_ZN8touchgfx8TextArea13getTextHeightEv+0x50>)
 8012008:	681b      	ldr	r3, [r3, #0]
 801200a:	b92b      	cbnz	r3, 8012018 <_ZN8touchgfx8TextArea13getTextHeightEv+0x24>
 801200c:	4b0e      	ldr	r3, [pc, #56]	; (8012048 <_ZN8touchgfx8TextArea13getTextHeightEv+0x54>)
 801200e:	4a0f      	ldr	r2, [pc, #60]	; (801204c <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 8012010:	21ae      	movs	r1, #174	; 0xae
 8012012:	480f      	ldr	r0, [pc, #60]	; (8012050 <_ZN8touchgfx8TextArea13getTextHeightEv+0x5c>)
 8012014:	f012 fa10 	bl	8024438 <__assert_func>
 8012018:	4b0e      	ldr	r3, [pc, #56]	; (8012054 <_ZN8touchgfx8TextArea13getTextHeightEv+0x60>)
 801201a:	881b      	ldrh	r3, [r3, #0]
 801201c:	428b      	cmp	r3, r1
 801201e:	d803      	bhi.n	8012028 <_ZN8touchgfx8TextArea13getTextHeightEv+0x34>
 8012020:	4b0d      	ldr	r3, [pc, #52]	; (8012058 <_ZN8touchgfx8TextArea13getTextHeightEv+0x64>)
 8012022:	4a0a      	ldr	r2, [pc, #40]	; (801204c <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 8012024:	21af      	movs	r1, #175	; 0xaf
 8012026:	e7f4      	b.n	8012012 <_ZN8touchgfx8TextArea13getTextHeightEv+0x1e>
 8012028:	4b0c      	ldr	r3, [pc, #48]	; (801205c <_ZN8touchgfx8TextArea13getTextHeightEv+0x68>)
 801202a:	6818      	ldr	r0, [r3, #0]
 801202c:	f7f4 ff4c 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 8012030:	2300      	movs	r3, #0
 8012032:	4601      	mov	r1, r0
 8012034:	46ac      	mov	ip, r5
 8012036:	4620      	mov	r0, r4
 8012038:	461a      	mov	r2, r3
 801203a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801203e:	4760      	bx	ip
 8012040:	2000      	movs	r0, #0
 8012042:	bd70      	pop	{r4, r5, r6, pc}
 8012044:	20020ae0 	.word	0x20020ae0
 8012048:	08027000 	.word	0x08027000
 801204c:	08029c00 	.word	0x08029c00
 8012050:	0802708e 	.word	0x0802708e
 8012054:	20020ae4 	.word	0x20020ae4
 8012058:	080270b7 	.word	0x080270b7
 801205c:	20020aec 	.word	0x20020aec

08012060 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8012060:	b538      	push	{r3, r4, r5, lr}
 8012062:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012064:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012068:	429a      	cmp	r2, r3
 801206a:	4604      	mov	r4, r0
 801206c:	d014      	beq.n	8012098 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 801206e:	6803      	ldr	r3, [r0, #0]
 8012070:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8012072:	4798      	blx	r3
 8012074:	6823      	ldr	r3, [r4, #0]
 8012076:	4605      	mov	r5, r0
 8012078:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801207a:	4620      	mov	r0, r4
 801207c:	4798      	blx	r3
 801207e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012082:	b22d      	sxth	r5, r5
 8012084:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012088:	4601      	mov	r1, r0
 801208a:	bf06      	itte	eq
 801208c:	4602      	moveq	r2, r0
 801208e:	4629      	moveq	r1, r5
 8012090:	462a      	movne	r2, r5
 8012092:	4620      	mov	r0, r4
 8012094:	f7f0 f803 	bl	800209e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8012098:	bd38      	pop	{r3, r4, r5, pc}

0801209a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 801209a:	888a      	ldrh	r2, [r1, #4]
 801209c:	8582      	strh	r2, [r0, #44]	; 0x2c
 801209e:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 80120a2:	b922      	cbnz	r2, 80120ae <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x14>
 80120a4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80120a8:	b90b      	cbnz	r3, 80120ae <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x14>
 80120aa:	f7ff bfd9 	b.w	8012060 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 80120ae:	4770      	bx	lr

080120b0 <_ZNK8touchgfx3Box12getSolidRectEv>:
 80120b0:	2300      	movs	r3, #0
 80120b2:	8083      	strh	r3, [r0, #4]
 80120b4:	80c3      	strh	r3, [r0, #6]
 80120b6:	8003      	strh	r3, [r0, #0]
 80120b8:	8043      	strh	r3, [r0, #2]
 80120ba:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 80120be:	2bff      	cmp	r3, #255	; 0xff
 80120c0:	bf01      	itttt	eq
 80120c2:	890b      	ldrheq	r3, [r1, #8]
 80120c4:	8083      	strheq	r3, [r0, #4]
 80120c6:	894b      	ldrheq	r3, [r1, #10]
 80120c8:	80c3      	strheq	r3, [r0, #6]
 80120ca:	4770      	bx	lr

080120cc <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 80120cc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80120ce:	4604      	mov	r4, r0
 80120d0:	6808      	ldr	r0, [r1, #0]
 80120d2:	6849      	ldr	r1, [r1, #4]
 80120d4:	466b      	mov	r3, sp
 80120d6:	c303      	stmia	r3!, {r0, r1}
 80120d8:	6823      	ldr	r3, [r4, #0]
 80120da:	4669      	mov	r1, sp
 80120dc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80120de:	4620      	mov	r0, r4
 80120e0:	4798      	blx	r3
 80120e2:	4b08      	ldr	r3, [pc, #32]	; (8012104 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 80120e4:	681b      	ldr	r3, [r3, #0]
 80120e6:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80120ea:	b10a      	cbz	r2, 80120f0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 80120ec:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80120ee:	b900      	cbnz	r0, 80120f2 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 80120f0:	6898      	ldr	r0, [r3, #8]
 80120f2:	6803      	ldr	r3, [r0, #0]
 80120f4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80120f6:	699d      	ldr	r5, [r3, #24]
 80120f8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80120fc:	4669      	mov	r1, sp
 80120fe:	47a8      	blx	r5
 8012100:	b003      	add	sp, #12
 8012102:	bd30      	pop	{r4, r5, pc}
 8012104:	20020a90 	.word	0x20020a90

08012108 <_ZN8touchgfx3BoxD1Ev>:
 8012108:	4770      	bx	lr

0801210a <_ZN8touchgfx3BoxD0Ev>:
 801210a:	b510      	push	{r4, lr}
 801210c:	212c      	movs	r1, #44	; 0x2c
 801210e:	4604      	mov	r4, r0
 8012110:	f012 f963 	bl	80243da <_ZdlPvj>
 8012114:	4620      	mov	r0, r4
 8012116:	bd10      	pop	{r4, pc}

08012118 <_ZN8touchgfx6ButtonD1Ev>:
 8012118:	4770      	bx	lr

0801211a <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 801211a:	b570      	push	{r4, r5, r6, lr}
 801211c:	880b      	ldrh	r3, [r1, #0]
 801211e:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8012120:	4605      	mov	r5, r0
 8012122:	8813      	ldrh	r3, [r2, #0]
 8012124:	f825 3f30 	strh.w	r3, [r5, #48]!
 8012128:	4604      	mov	r4, r0
 801212a:	4628      	mov	r0, r5
 801212c:	f006 f918 	bl	8018360 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012130:	4606      	mov	r6, r0
 8012132:	4628      	mov	r0, r5
 8012134:	f006 f94e 	bl	80183d4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012138:	6823      	ldr	r3, [r4, #0]
 801213a:	4605      	mov	r5, r0
 801213c:	b231      	sxth	r1, r6
 801213e:	4620      	mov	r0, r4
 8012140:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012142:	4798      	blx	r3
 8012144:	6823      	ldr	r3, [r4, #0]
 8012146:	b229      	sxth	r1, r5
 8012148:	4620      	mov	r0, r4
 801214a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801214c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012150:	4718      	bx	r3

08012152 <_ZN8touchgfx6ButtonD0Ev>:
 8012152:	b510      	push	{r4, lr}
 8012154:	2134      	movs	r1, #52	; 0x34
 8012156:	4604      	mov	r4, r0
 8012158:	f012 f93f 	bl	80243da <_ZdlPvj>
 801215c:	4620      	mov	r0, r4
 801215e:	bd10      	pop	{r4, pc}

08012160 <_ZNK8touchgfx6Button12getSolidRectEv>:
 8012160:	b510      	push	{r4, lr}
 8012162:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8012166:	2bff      	cmp	r3, #255	; 0xff
 8012168:	4604      	mov	r4, r0
 801216a:	d006      	beq.n	801217a <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 801216c:	2300      	movs	r3, #0
 801216e:	8003      	strh	r3, [r0, #0]
 8012170:	8043      	strh	r3, [r0, #2]
 8012172:	8083      	strh	r3, [r0, #4]
 8012174:	80c3      	strh	r3, [r0, #6]
 8012176:	4620      	mov	r0, r4
 8012178:	bd10      	pop	{r4, pc}
 801217a:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 801217e:	b11b      	cbz	r3, 8012188 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8012180:	3130      	adds	r1, #48	; 0x30
 8012182:	f006 f961 	bl	8018448 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012186:	e7f6      	b.n	8012176 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8012188:	312e      	adds	r1, #46	; 0x2e
 801218a:	e7fa      	b.n	8012182 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0801218c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 801218c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012190:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012194:	b08a      	sub	sp, #40	; 0x28
 8012196:	4604      	mov	r4, r0
 8012198:	4688      	mov	r8, r1
 801219a:	2b00      	cmp	r3, #0
 801219c:	d044      	beq.n	8012228 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
 801219e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80121a0:	f8ad 3014 	strh.w	r3, [sp, #20]
 80121a4:	a805      	add	r0, sp, #20
 80121a6:	f006 f8db 	bl	8018360 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80121aa:	4605      	mov	r5, r0
 80121ac:	b206      	sxth	r6, r0
 80121ae:	a805      	add	r0, sp, #20
 80121b0:	f006 f910 	bl	80183d4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80121b4:	f9b8 2000 	ldrsh.w	r2, [r8]
 80121b8:	f8b8 7004 	ldrh.w	r7, [r8, #4]
 80121bc:	4417      	add	r7, r2
 80121be:	b2bf      	uxth	r7, r7
 80121c0:	2300      	movs	r3, #0
 80121c2:	fa0f fe87 	sxth.w	lr, r7
 80121c6:	459e      	cmp	lr, r3
 80121c8:	fa0f fc80 	sxth.w	ip, r0
 80121cc:	9306      	str	r3, [sp, #24]
 80121ce:	dd2d      	ble.n	801222c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 80121d0:	4296      	cmp	r6, r2
 80121d2:	dd2b      	ble.n	801222c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 80121d4:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
 80121d8:	f8b8 1006 	ldrh.w	r1, [r8, #6]
 80121dc:	4419      	add	r1, r3
 80121de:	b289      	uxth	r1, r1
 80121e0:	fa0f f881 	sxth.w	r8, r1
 80121e4:	f1b8 0f00 	cmp.w	r8, #0
 80121e8:	dd20      	ble.n	801222c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 80121ea:	459c      	cmp	ip, r3
 80121ec:	dd1e      	ble.n	801222c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 80121ee:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 80121f2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80121f6:	4576      	cmp	r6, lr
 80121f8:	bfa8      	it	ge
 80121fa:	463d      	movge	r5, r7
 80121fc:	45c4      	cmp	ip, r8
 80121fe:	bfa8      	it	ge
 8012200:	4608      	movge	r0, r1
 8012202:	1aad      	subs	r5, r5, r2
 8012204:	1ac0      	subs	r0, r0, r3
 8012206:	f8ad 501c 	strh.w	r5, [sp, #28]
 801220a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801220e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8012212:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012216:	4b1f      	ldr	r3, [pc, #124]	; (8012294 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 8012218:	681b      	ldr	r3, [r3, #0]
 801221a:	b953      	cbnz	r3, 8012232 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
 801221c:	4b1e      	ldr	r3, [pc, #120]	; (8012298 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 801221e:	4a1f      	ldr	r2, [pc, #124]	; (801229c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 8012220:	481f      	ldr	r0, [pc, #124]	; (80122a0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
 8012222:	2187      	movs	r1, #135	; 0x87
 8012224:	f012 f908 	bl	8024438 <__assert_func>
 8012228:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 801222a:	e7b9      	b.n	80121a0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 801222c:	2300      	movs	r3, #0
 801222e:	9307      	str	r3, [sp, #28]
 8012230:	e7f1      	b.n	8012216 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
 8012232:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8012236:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801223a:	429a      	cmp	r2, r3
 801223c:	d026      	beq.n	801228c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 801223e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012242:	2b00      	cmp	r3, #0
 8012244:	dd22      	ble.n	801228c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 8012246:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801224a:	2b00      	cmp	r3, #0
 801224c:	dd1e      	ble.n	801228c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 801224e:	2300      	movs	r3, #0
 8012250:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8012254:	6823      	ldr	r3, [r4, #0]
 8012256:	a908      	add	r1, sp, #32
 8012258:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801225a:	4620      	mov	r0, r4
 801225c:	4798      	blx	r3
 801225e:	4b11      	ldr	r3, [pc, #68]	; (80122a4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
 8012260:	681b      	ldr	r3, [r3, #0]
 8012262:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8012266:	b10a      	cbz	r2, 801226c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8012268:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801226a:	b900      	cbnz	r0, 801226e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
 801226c:	6898      	ldr	r0, [r3, #8]
 801226e:	6801      	ldr	r1, [r0, #0]
 8012270:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8012274:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8012278:	2501      	movs	r5, #1
 801227a:	9502      	str	r5, [sp, #8]
 801227c:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8012280:	9401      	str	r4, [sp, #4]
 8012282:	ac06      	add	r4, sp, #24
 8012284:	9400      	str	r4, [sp, #0]
 8012286:	688c      	ldr	r4, [r1, #8]
 8012288:	a905      	add	r1, sp, #20
 801228a:	47a0      	blx	r4
 801228c:	b00a      	add	sp, #40	; 0x28
 801228e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012292:	bf00      	nop
 8012294:	20020b18 	.word	0x20020b18
 8012298:	08029c94 	.word	0x08029c94
 801229c:	08029d68 	.word	0x08029d68
 80122a0:	08029cd0 	.word	0x08029cd0
 80122a4:	20020a90 	.word	0x20020a90

080122a8 <_ZN8touchgfx24TextAreaWithTwoWildcardsD1Ev>:
 80122a8:	4770      	bx	lr

080122aa <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
 80122aa:	4770      	bx	lr

080122ac <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv>:
 80122ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80122ae:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80122b0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80122b4:	4299      	cmp	r1, r3
 80122b6:	4605      	mov	r5, r0
 80122b8:	d02a      	beq.n	8012310 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x64>
 80122ba:	4b16      	ldr	r3, [pc, #88]	; (8012314 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x68>)
 80122bc:	681b      	ldr	r3, [r3, #0]
 80122be:	b92b      	cbnz	r3, 80122cc <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x20>
 80122c0:	4b15      	ldr	r3, [pc, #84]	; (8012318 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x6c>)
 80122c2:	4a16      	ldr	r2, [pc, #88]	; (801231c <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x70>)
 80122c4:	21ae      	movs	r1, #174	; 0xae
 80122c6:	4816      	ldr	r0, [pc, #88]	; (8012320 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x74>)
 80122c8:	f012 f8b6 	bl	8024438 <__assert_func>
 80122cc:	4a15      	ldr	r2, [pc, #84]	; (8012324 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x78>)
 80122ce:	8812      	ldrh	r2, [r2, #0]
 80122d0:	428a      	cmp	r2, r1
 80122d2:	d803      	bhi.n	80122dc <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x30>
 80122d4:	4b14      	ldr	r3, [pc, #80]	; (8012328 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x7c>)
 80122d6:	4a11      	ldr	r2, [pc, #68]	; (801231c <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x70>)
 80122d8:	21af      	movs	r1, #175	; 0xaf
 80122da:	e7f4      	b.n	80122c6 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x1a>
 80122dc:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 80122e0:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 80122e4:	4b11      	ldr	r3, [pc, #68]	; (801232c <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x80>)
 80122e6:	7854      	ldrb	r4, [r2, #1]
 80122e8:	681b      	ldr	r3, [r3, #0]
 80122ea:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 80122ee:	6833      	ldr	r3, [r6, #0]
 80122f0:	69df      	ldr	r7, [r3, #28]
 80122f2:	4b0f      	ldr	r3, [pc, #60]	; (8012330 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x84>)
 80122f4:	6818      	ldr	r0, [r3, #0]
 80122f6:	f7f4 fde7 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 80122fa:	f3c4 0481 	ubfx	r4, r4, #2, #2
 80122fe:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8012300:	9300      	str	r3, [sp, #0]
 8012302:	4602      	mov	r2, r0
 8012304:	6beb      	ldr	r3, [r5, #60]	; 0x3c
 8012306:	4621      	mov	r1, r4
 8012308:	4630      	mov	r0, r6
 801230a:	47b8      	blx	r7
 801230c:	b003      	add	sp, #12
 801230e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012310:	2000      	movs	r0, #0
 8012312:	e7fb      	b.n	801230c <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x60>
 8012314:	20020ae0 	.word	0x20020ae0
 8012318:	08027000 	.word	0x08027000
 801231c:	08029e8c 	.word	0x08029e8c
 8012320:	0802708e 	.word	0x0802708e
 8012324:	20020ae4 	.word	0x20020ae4
 8012328:	080270b7 	.word	0x080270b7
 801232c:	20020ae8 	.word	0x20020ae8
 8012330:	20020aec 	.word	0x20020aec

08012334 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv>:
 8012334:	b570      	push	{r4, r5, r6, lr}
 8012336:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012338:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801233c:	4299      	cmp	r1, r3
 801233e:	4604      	mov	r4, r0
 8012340:	d01e      	beq.n	8012380 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x4c>
 8012342:	6803      	ldr	r3, [r0, #0]
 8012344:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 8012346:	4b0f      	ldr	r3, [pc, #60]	; (8012384 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x50>)
 8012348:	681b      	ldr	r3, [r3, #0]
 801234a:	b92b      	cbnz	r3, 8012358 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x24>
 801234c:	4b0e      	ldr	r3, [pc, #56]	; (8012388 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x54>)
 801234e:	4a0f      	ldr	r2, [pc, #60]	; (801238c <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x58>)
 8012350:	21ae      	movs	r1, #174	; 0xae
 8012352:	480f      	ldr	r0, [pc, #60]	; (8012390 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x5c>)
 8012354:	f012 f870 	bl	8024438 <__assert_func>
 8012358:	4b0e      	ldr	r3, [pc, #56]	; (8012394 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x60>)
 801235a:	881b      	ldrh	r3, [r3, #0]
 801235c:	428b      	cmp	r3, r1
 801235e:	d803      	bhi.n	8012368 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x34>
 8012360:	4b0d      	ldr	r3, [pc, #52]	; (8012398 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x64>)
 8012362:	4a0a      	ldr	r2, [pc, #40]	; (801238c <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x58>)
 8012364:	21af      	movs	r1, #175	; 0xaf
 8012366:	e7f4      	b.n	8012352 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x1e>
 8012368:	4b0c      	ldr	r3, [pc, #48]	; (801239c <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x68>)
 801236a:	6818      	ldr	r0, [r3, #0]
 801236c:	f7f4 fdac 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 8012370:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 8012374:	4601      	mov	r1, r0
 8012376:	46ac      	mov	ip, r5
 8012378:	4620      	mov	r0, r4
 801237a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801237e:	4760      	bx	ip
 8012380:	2000      	movs	r0, #0
 8012382:	bd70      	pop	{r4, r5, r6, pc}
 8012384:	20020ae0 	.word	0x20020ae0
 8012388:	08027000 	.word	0x08027000
 801238c:	08029e8c 	.word	0x08029e8c
 8012390:	0802708e 	.word	0x0802708e
 8012394:	20020ae4 	.word	0x20020ae4
 8012398:	080270b7 	.word	0x080270b7
 801239c:	20020aec 	.word	0x20020aec

080123a0 <_ZN8touchgfx24TextAreaWithTwoWildcardsD0Ev>:
 80123a0:	b510      	push	{r4, lr}
 80123a2:	2144      	movs	r1, #68	; 0x44
 80123a4:	4604      	mov	r4, r0
 80123a6:	f012 f818 	bl	80243da <_ZdlPvj>
 80123aa:	4620      	mov	r0, r4
 80123ac:	bd10      	pop	{r4, pc}

080123ae <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 80123ae:	b510      	push	{r4, lr}
 80123b0:	2140      	movs	r1, #64	; 0x40
 80123b2:	4604      	mov	r4, r0
 80123b4:	f012 f811 	bl	80243da <_ZdlPvj>
 80123b8:	4620      	mov	r0, r4
 80123ba:	bd10      	pop	{r4, pc}

080123bc <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE>:
 80123bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80123c0:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 80123c2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80123c6:	4293      	cmp	r3, r2
 80123c8:	b08c      	sub	sp, #48	; 0x30
 80123ca:	4604      	mov	r4, r0
 80123cc:	460e      	mov	r6, r1
 80123ce:	d05d      	beq.n	801248c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 80123d0:	f8df 80dc 	ldr.w	r8, [pc, #220]	; 80124b0 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf4>
 80123d4:	f8d8 2000 	ldr.w	r2, [r8]
 80123d8:	b92a      	cbnz	r2, 80123e6 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x2a>
 80123da:	4b2e      	ldr	r3, [pc, #184]	; (8012494 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd8>)
 80123dc:	4a2e      	ldr	r2, [pc, #184]	; (8012498 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 80123de:	21ae      	movs	r1, #174	; 0xae
 80123e0:	482e      	ldr	r0, [pc, #184]	; (801249c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe0>)
 80123e2:	f012 f829 	bl	8024438 <__assert_func>
 80123e6:	4f2e      	ldr	r7, [pc, #184]	; (80124a0 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe4>)
 80123e8:	8839      	ldrh	r1, [r7, #0]
 80123ea:	4299      	cmp	r1, r3
 80123ec:	d803      	bhi.n	80123f6 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x3a>
 80123ee:	4b2d      	ldr	r3, [pc, #180]	; (80124a4 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe8>)
 80123f0:	4a29      	ldr	r2, [pc, #164]	; (8012498 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 80123f2:	21af      	movs	r1, #175	; 0xaf
 80123f4:	e7f4      	b.n	80123e0 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x24>
 80123f6:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 80123fa:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80123fe:	4b2a      	ldr	r3, [pc, #168]	; (80124a8 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xec>)
 8012400:	681b      	ldr	r3, [r3, #0]
 8012402:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8012406:	2a00      	cmp	r2, #0
 8012408:	d040      	beq.n	801248c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 801240a:	784b      	ldrb	r3, [r1, #1]
 801240c:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 8012410:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 8012414:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 8012418:	f890 9038 	ldrb.w	r9, [r0, #56]	; 0x38
 801241c:	f890 5037 	ldrb.w	r5, [r0, #55]	; 0x37
 8012420:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8012422:	9207      	str	r2, [sp, #28]
 8012424:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 8012428:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801242c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8012430:	f88d 9022 	strb.w	r9, [sp, #34]	; 0x22
 8012434:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 8012438:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 801243c:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8012440:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 8012444:	f88d a020 	strb.w	sl, [sp, #32]
 8012448:	9009      	str	r0, [sp, #36]	; 0x24
 801244a:	f7fe fe37 	bl	80110bc <_ZN8touchgfx3HAL3lcdEv>
 801244e:	ad05      	add	r5, sp, #20
 8012450:	4681      	mov	r9, r0
 8012452:	4621      	mov	r1, r4
 8012454:	4628      	mov	r0, r5
 8012456:	f003 fa3b 	bl	80158d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801245a:	f8d8 3000 	ldr.w	r3, [r8]
 801245e:	2b00      	cmp	r3, #0
 8012460:	d0bb      	beq.n	80123da <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x1e>
 8012462:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012464:	883b      	ldrh	r3, [r7, #0]
 8012466:	428b      	cmp	r3, r1
 8012468:	d9c1      	bls.n	80123ee <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x32>
 801246a:	4b10      	ldr	r3, [pc, #64]	; (80124ac <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf0>)
 801246c:	6818      	ldr	r0, [r3, #0]
 801246e:	f7f4 fd2b 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 8012472:	2300      	movs	r3, #0
 8012474:	9303      	str	r3, [sp, #12]
 8012476:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8012478:	e9cd 0301 	strd	r0, r3, [sp, #4]
 801247c:	ab07      	add	r3, sp, #28
 801247e:	9300      	str	r3, [sp, #0]
 8012480:	e895 0006 	ldmia.w	r5, {r1, r2}
 8012484:	4633      	mov	r3, r6
 8012486:	4648      	mov	r0, r9
 8012488:	f7f4 fcd1 	bl	8006e2e <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801248c:	b00c      	add	sp, #48	; 0x30
 801248e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012492:	bf00      	nop
 8012494:	08027000 	.word	0x08027000
 8012498:	08029e8c 	.word	0x08029e8c
 801249c:	0802708e 	.word	0x0802708e
 80124a0:	20020ae4 	.word	0x20020ae4
 80124a4:	080270b7 	.word	0x080270b7
 80124a8:	20020ae8 	.word	0x20020ae8
 80124ac:	20020aec 	.word	0x20020aec
 80124b0:	20020ae0 	.word	0x20020ae0

080124b4 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE>:
 80124b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80124b8:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 80124ba:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80124be:	4293      	cmp	r3, r2
 80124c0:	b08c      	sub	sp, #48	; 0x30
 80124c2:	4604      	mov	r4, r0
 80124c4:	460e      	mov	r6, r1
 80124c6:	d05d      	beq.n	8012584 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xd0>
 80124c8:	f8df 80dc 	ldr.w	r8, [pc, #220]	; 80125a8 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xf4>
 80124cc:	f8d8 2000 	ldr.w	r2, [r8]
 80124d0:	b92a      	cbnz	r2, 80124de <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0x2a>
 80124d2:	4b2e      	ldr	r3, [pc, #184]	; (801258c <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xd8>)
 80124d4:	4a2e      	ldr	r2, [pc, #184]	; (8012590 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xdc>)
 80124d6:	21ae      	movs	r1, #174	; 0xae
 80124d8:	482e      	ldr	r0, [pc, #184]	; (8012594 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xe0>)
 80124da:	f011 ffad 	bl	8024438 <__assert_func>
 80124de:	4f2e      	ldr	r7, [pc, #184]	; (8012598 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xe4>)
 80124e0:	8839      	ldrh	r1, [r7, #0]
 80124e2:	4299      	cmp	r1, r3
 80124e4:	d803      	bhi.n	80124ee <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0x3a>
 80124e6:	4b2d      	ldr	r3, [pc, #180]	; (801259c <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xe8>)
 80124e8:	4a29      	ldr	r2, [pc, #164]	; (8012590 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xdc>)
 80124ea:	21af      	movs	r1, #175	; 0xaf
 80124ec:	e7f4      	b.n	80124d8 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0x24>
 80124ee:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 80124f2:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80124f6:	4b2a      	ldr	r3, [pc, #168]	; (80125a0 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xec>)
 80124f8:	681b      	ldr	r3, [r3, #0]
 80124fa:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80124fe:	2a00      	cmp	r2, #0
 8012500:	d040      	beq.n	8012584 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xd0>
 8012502:	784b      	ldrb	r3, [r1, #1]
 8012504:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 8012508:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 801250c:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 8012510:	f890 9038 	ldrb.w	r9, [r0, #56]	; 0x38
 8012514:	f890 5037 	ldrb.w	r5, [r0, #55]	; 0x37
 8012518:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801251a:	9207      	str	r2, [sp, #28]
 801251c:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 8012520:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012524:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8012528:	f88d 9022 	strb.w	r9, [sp, #34]	; 0x22
 801252c:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 8012530:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 8012534:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8012538:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 801253c:	f88d a020 	strb.w	sl, [sp, #32]
 8012540:	9009      	str	r0, [sp, #36]	; 0x24
 8012542:	f7fe fdbb 	bl	80110bc <_ZN8touchgfx3HAL3lcdEv>
 8012546:	ad05      	add	r5, sp, #20
 8012548:	4681      	mov	r9, r0
 801254a:	4621      	mov	r1, r4
 801254c:	4628      	mov	r0, r5
 801254e:	f003 f9bf 	bl	80158d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012552:	f8d8 3000 	ldr.w	r3, [r8]
 8012556:	2b00      	cmp	r3, #0
 8012558:	d0bb      	beq.n	80124d2 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0x1e>
 801255a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801255c:	883b      	ldrh	r3, [r7, #0]
 801255e:	428b      	cmp	r3, r1
 8012560:	d9c1      	bls.n	80124e6 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0x32>
 8012562:	4b10      	ldr	r3, [pc, #64]	; (80125a4 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xf0>)
 8012564:	6818      	ldr	r0, [r3, #0]
 8012566:	f7f4 fcaf 	bl	8006ec8 <_ZNK8touchgfx5Texts7getTextEt>
 801256a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801256c:	9303      	str	r3, [sp, #12]
 801256e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8012570:	e9cd 0301 	strd	r0, r3, [sp, #4]
 8012574:	ab07      	add	r3, sp, #28
 8012576:	9300      	str	r3, [sp, #0]
 8012578:	e895 0006 	ldmia.w	r5, {r1, r2}
 801257c:	4633      	mov	r3, r6
 801257e:	4648      	mov	r0, r9
 8012580:	f7f4 fc55 	bl	8006e2e <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8012584:	b00c      	add	sp, #48	; 0x30
 8012586:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801258a:	bf00      	nop
 801258c:	08027000 	.word	0x08027000
 8012590:	08029e8c 	.word	0x08029e8c
 8012594:	0802708e 	.word	0x0802708e
 8012598:	20020ae4 	.word	0x20020ae4
 801259c:	080270b7 	.word	0x080270b7
 80125a0:	20020ae8 	.word	0x20020ae8
 80125a4:	20020aec 	.word	0x20020aec
 80125a8:	20020ae0 	.word	0x20020ae0

080125ac <_ZN8touchgfx13BoxWithBorderD1Ev>:
 80125ac:	4770      	bx	lr

080125ae <_ZN8touchgfx13BoxWithBorderD0Ev>:
 80125ae:	b510      	push	{r4, lr}
 80125b0:	2134      	movs	r1, #52	; 0x34
 80125b2:	4604      	mov	r4, r0
 80125b4:	f011 ff11 	bl	80243da <_ZdlPvj>
 80125b8:	4620      	mov	r0, r4
 80125ba:	bd10      	pop	{r4, pc}

080125bc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 80125bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80125c0:	4604      	mov	r4, r0
 80125c2:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80125c4:	8962      	ldrh	r2, [r4, #10]
 80125c6:	b218      	sxth	r0, r3
 80125c8:	460e      	mov	r6, r1
 80125ca:	005b      	lsls	r3, r3, #1
 80125cc:	8921      	ldrh	r1, [r4, #8]
 80125ce:	b29b      	uxth	r3, r3
 80125d0:	1ac9      	subs	r1, r1, r3
 80125d2:	b08e      	sub	sp, #56	; 0x38
 80125d4:	b209      	sxth	r1, r1
 80125d6:	1ad3      	subs	r3, r2, r3
 80125d8:	b21b      	sxth	r3, r3
 80125da:	2900      	cmp	r1, #0
 80125dc:	f8ad 0000 	strh.w	r0, [sp]
 80125e0:	f8ad 0002 	strh.w	r0, [sp, #2]
 80125e4:	f8ad 1004 	strh.w	r1, [sp, #4]
 80125e8:	f8ad 3006 	strh.w	r3, [sp, #6]
 80125ec:	dd5e      	ble.n	80126ac <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 80125ee:	2b00      	cmp	r3, #0
 80125f0:	dd5c      	ble.n	80126ac <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 80125f2:	6830      	ldr	r0, [r6, #0]
 80125f4:	6871      	ldr	r1, [r6, #4]
 80125f6:	ab02      	add	r3, sp, #8
 80125f8:	c303      	stmia	r3!, {r0, r1}
 80125fa:	4669      	mov	r1, sp
 80125fc:	a802      	add	r0, sp, #8
 80125fe:	f7fe f8af 	bl	8010760 <_ZN8touchgfx4RectaNERKS0_>
 8012602:	4620      	mov	r0, r4
 8012604:	a902      	add	r1, sp, #8
 8012606:	f7ff fd61 	bl	80120cc <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 801260a:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 801260c:	2800      	cmp	r0, #0
 801260e:	d05f      	beq.n	80126d0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8012610:	8963      	ldrh	r3, [r4, #10]
 8012612:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8012616:	f8ad 101c 	strh.w	r1, [sp, #28]
 801261a:	1a1f      	subs	r7, r3, r0
 801261c:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 8012620:	b202      	sxth	r2, r0
 8012622:	2500      	movs	r5, #0
 8012624:	b21b      	sxth	r3, r3
 8012626:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 801262a:	1a09      	subs	r1, r1, r0
 801262c:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8012630:	9506      	str	r5, [sp, #24]
 8012632:	f8ad 201e 	strh.w	r2, [sp, #30]
 8012636:	f8ad 5020 	strh.w	r5, [sp, #32]
 801263a:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 801263e:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 8012642:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8012646:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 801264a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801264e:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 8012652:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8012656:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801265a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801265e:	af04      	add	r7, sp, #16
 8012660:	ab06      	add	r3, sp, #24
 8012662:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8012666:	e893 0003 	ldmia.w	r3, {r0, r1}
 801266a:	e887 0003 	stmia.w	r7, {r0, r1}
 801266e:	4631      	mov	r1, r6
 8012670:	4638      	mov	r0, r7
 8012672:	f7fe f875 	bl	8010760 <_ZN8touchgfx4RectaNERKS0_>
 8012676:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801267a:	2b00      	cmp	r3, #0
 801267c:	dd12      	ble.n	80126a4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 801267e:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8012682:	2b00      	cmp	r3, #0
 8012684:	dd0e      	ble.n	80126a4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 8012686:	6823      	ldr	r3, [r4, #0]
 8012688:	4639      	mov	r1, r7
 801268a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801268c:	4620      	mov	r0, r4
 801268e:	4798      	blx	r3
 8012690:	f7fe fd14 	bl	80110bc <_ZN8touchgfx3HAL3lcdEv>
 8012694:	6803      	ldr	r3, [r0, #0]
 8012696:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8012698:	f8d3 8018 	ldr.w	r8, [r3, #24]
 801269c:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80126a0:	4639      	mov	r1, r7
 80126a2:	47c0      	blx	r8
 80126a4:	3501      	adds	r5, #1
 80126a6:	2d04      	cmp	r5, #4
 80126a8:	d1da      	bne.n	8012660 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 80126aa:	e011      	b.n	80126d0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 80126ac:	6830      	ldr	r0, [r6, #0]
 80126ae:	6871      	ldr	r1, [r6, #4]
 80126b0:	ab06      	add	r3, sp, #24
 80126b2:	c303      	stmia	r3!, {r0, r1}
 80126b4:	6823      	ldr	r3, [r4, #0]
 80126b6:	a906      	add	r1, sp, #24
 80126b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80126ba:	4620      	mov	r0, r4
 80126bc:	4798      	blx	r3
 80126be:	f7fe fcfd 	bl	80110bc <_ZN8touchgfx3HAL3lcdEv>
 80126c2:	6803      	ldr	r3, [r0, #0]
 80126c4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80126c6:	699d      	ldr	r5, [r3, #24]
 80126c8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80126cc:	a906      	add	r1, sp, #24
 80126ce:	47a8      	blx	r5
 80126d0:	b00e      	add	sp, #56	; 0x38
 80126d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080126d6 <_ZN8touchgfx5ImageD1Ev>:
 80126d6:	4770      	bx	lr

080126d8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 80126d8:	b570      	push	{r4, r5, r6, lr}
 80126da:	880b      	ldrh	r3, [r1, #0]
 80126dc:	84c3      	strh	r3, [r0, #38]	; 0x26
 80126de:	4604      	mov	r4, r0
 80126e0:	4608      	mov	r0, r1
 80126e2:	460d      	mov	r5, r1
 80126e4:	f005 fe3c 	bl	8018360 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80126e8:	4606      	mov	r6, r0
 80126ea:	4628      	mov	r0, r5
 80126ec:	f005 fe72 	bl	80183d4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80126f0:	6823      	ldr	r3, [r4, #0]
 80126f2:	4605      	mov	r5, r0
 80126f4:	b231      	sxth	r1, r6
 80126f6:	4620      	mov	r0, r4
 80126f8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80126fa:	4798      	blx	r3
 80126fc:	6823      	ldr	r3, [r4, #0]
 80126fe:	b229      	sxth	r1, r5
 8012700:	4620      	mov	r0, r4
 8012702:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012704:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012708:	4718      	bx	r3

0801270a <_ZN8touchgfx5ImageD0Ev>:
 801270a:	b510      	push	{r4, lr}
 801270c:	212c      	movs	r1, #44	; 0x2c
 801270e:	4604      	mov	r4, r0
 8012710:	f011 fe63 	bl	80243da <_ZdlPvj>
 8012714:	4620      	mov	r0, r4
 8012716:	bd10      	pop	{r4, pc}

08012718 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8012718:	b510      	push	{r4, lr}
 801271a:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 801271e:	2bff      	cmp	r3, #255	; 0xff
 8012720:	4604      	mov	r4, r0
 8012722:	d006      	beq.n	8012732 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8012724:	2300      	movs	r3, #0
 8012726:	8003      	strh	r3, [r0, #0]
 8012728:	8043      	strh	r3, [r0, #2]
 801272a:	8083      	strh	r3, [r0, #4]
 801272c:	80c3      	strh	r3, [r0, #6]
 801272e:	4620      	mov	r0, r4
 8012730:	bd10      	pop	{r4, pc}
 8012732:	3126      	adds	r1, #38	; 0x26
 8012734:	f005 fe88 	bl	8018448 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012738:	e7f9      	b.n	801272e <_ZNK8touchgfx5Image12getSolidRectEv+0x16>
	...

0801273c <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 801273c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012740:	4604      	mov	r4, r0
 8012742:	b088      	sub	sp, #32
 8012744:	f854 3b26 	ldr.w	r3, [r4], #38
 8012748:	2500      	movs	r5, #0
 801274a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801274c:	460f      	mov	r7, r1
 801274e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8012752:	a904      	add	r1, sp, #16
 8012754:	4606      	mov	r6, r0
 8012756:	4798      	blx	r3
 8012758:	4620      	mov	r0, r4
 801275a:	f005 fe01 	bl	8018360 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801275e:	4680      	mov	r8, r0
 8012760:	4620      	mov	r0, r4
 8012762:	f005 fe37 	bl	80183d4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012766:	9506      	str	r5, [sp, #24]
 8012768:	ad06      	add	r5, sp, #24
 801276a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801276e:	4639      	mov	r1, r7
 8012770:	4628      	mov	r0, r5
 8012772:	f8ad 801c 	strh.w	r8, [sp, #28]
 8012776:	f7fd fff3 	bl	8010760 <_ZN8touchgfx4RectaNERKS0_>
 801277a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801277e:	2b00      	cmp	r3, #0
 8012780:	dd19      	ble.n	80127b6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8012782:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8012786:	2b00      	cmp	r3, #0
 8012788:	dd15      	ble.n	80127b6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801278a:	4b0c      	ldr	r3, [pc, #48]	; (80127bc <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 801278c:	681b      	ldr	r3, [r3, #0]
 801278e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8012792:	b10a      	cbz	r2, 8012798 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8012794:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012796:	b900      	cbnz	r0, 801279a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8012798:	6898      	ldr	r0, [r3, #8]
 801279a:	6801      	ldr	r1, [r0, #0]
 801279c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80127a0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80127a4:	2701      	movs	r7, #1
 80127a6:	9702      	str	r7, [sp, #8]
 80127a8:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 80127ac:	e9cd 5600 	strd	r5, r6, [sp]
 80127b0:	688d      	ldr	r5, [r1, #8]
 80127b2:	4621      	mov	r1, r4
 80127b4:	47a8      	blx	r5
 80127b6:	b008      	add	sp, #32
 80127b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80127bc:	20020a90 	.word	0x20020a90

080127c0 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80127c0:	b510      	push	{r4, lr}
 80127c2:	6803      	ldr	r3, [r0, #0]
 80127c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80127c6:	460c      	mov	r4, r1
 80127c8:	4798      	blx	r3
 80127ca:	1b03      	subs	r3, r0, r4
 80127cc:	4258      	negs	r0, r3
 80127ce:	4158      	adcs	r0, r3
 80127d0:	bd10      	pop	{r4, pc}
	...

080127d4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 80127d4:	4b01      	ldr	r3, [pc, #4]	; (80127dc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 80127d6:	6019      	str	r1, [r3, #0]
 80127d8:	4770      	bx	lr
 80127da:	bf00      	nop
 80127dc:	20020a98 	.word	0x20020a98

080127e0 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80127e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80127e4:	4696      	mov	lr, r2
 80127e6:	4605      	mov	r5, r0
 80127e8:	4614      	mov	r4, r2
 80127ea:	460e      	mov	r6, r1
 80127ec:	461f      	mov	r7, r3
 80127ee:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80127f2:	b097      	sub	sp, #92	; 0x5c
 80127f4:	f10d 0c1c 	add.w	ip, sp, #28
 80127f8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80127fc:	f8de 3000 	ldr.w	r3, [lr]
 8012800:	f8cc 3000 	str.w	r3, [ip]
 8012804:	f104 0e14 	add.w	lr, r4, #20
 8012808:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801280c:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8012810:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012814:	f8de 3000 	ldr.w	r3, [lr]
 8012818:	f8cc 3000 	str.w	r3, [ip]
 801281c:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8012820:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8012824:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8012828:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801282c:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8012830:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8012834:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8012838:	f8de 3000 	ldr.w	r3, [lr]
 801283c:	f8cc 3000 	str.w	r3, [ip]
 8012840:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8012842:	682b      	ldr	r3, [r5, #0]
 8012844:	9201      	str	r2, [sp, #4]
 8012846:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801284a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801284c:	9200      	str	r2, [sp, #0]
 801284e:	f8cd 8008 	str.w	r8, [sp, #8]
 8012852:	f8d3 b034 	ldr.w	fp, [r3, #52]	; 0x34
 8012856:	aa07      	add	r2, sp, #28
 8012858:	463b      	mov	r3, r7
 801285a:	4631      	mov	r1, r6
 801285c:	4628      	mov	r0, r5
 801285e:	47d8      	blx	fp
 8012860:	46a6      	mov	lr, r4
 8012862:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8012866:	f10d 0c1c 	add.w	ip, sp, #28
 801286a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801286e:	f8de 3000 	ldr.w	r3, [lr]
 8012872:	f8cc 3000 	str.w	r3, [ip]
 8012876:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 801287a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801287e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8012882:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012886:	343c      	adds	r4, #60	; 0x3c
 8012888:	f8de 3000 	ldr.w	r3, [lr]
 801288c:	f8cc 3000 	str.w	r3, [ip]
 8012890:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012892:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8012896:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801289a:	6823      	ldr	r3, [r4, #0]
 801289c:	f8cc 3000 	str.w	r3, [ip]
 80128a0:	682b      	ldr	r3, [r5, #0]
 80128a2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80128a6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80128a8:	9201      	str	r2, [sp, #4]
 80128aa:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80128ac:	9200      	str	r2, [sp, #0]
 80128ae:	f8cd 8008 	str.w	r8, [sp, #8]
 80128b2:	6b5c      	ldr	r4, [r3, #52]	; 0x34
 80128b4:	aa07      	add	r2, sp, #28
 80128b6:	463b      	mov	r3, r7
 80128b8:	4631      	mov	r1, r6
 80128ba:	4628      	mov	r0, r5
 80128bc:	47a0      	blx	r4
 80128be:	b017      	add	sp, #92	; 0x5c
 80128c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080128c4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80128c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80128c8:	b08d      	sub	sp, #52	; 0x34
 80128ca:	4688      	mov	r8, r1
 80128cc:	9916      	ldr	r1, [sp, #88]	; 0x58
 80128ce:	f8d3 c000 	ldr.w	ip, [r3]
 80128d2:	680f      	ldr	r7, [r1, #0]
 80128d4:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 80128d8:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 80128dc:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 80128e0:	edd3 6a07 	vldr	s13, [r3, #28]
 80128e4:	9918      	ldr	r1, [sp, #96]	; 0x60
 80128e6:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 80128ea:	f9b1 9000 	ldrsh.w	r9, [r1]
 80128ee:	f9ba 1000 	ldrsh.w	r1, [sl]
 80128f2:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 80128f6:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 80128fa:	eba7 070c 	sub.w	r7, r7, ip
 80128fe:	42bc      	cmp	r4, r7
 8012900:	bfa8      	it	ge
 8012902:	463c      	movge	r4, r7
 8012904:	ee07 4a90 	vmov	s15, r4
 8012908:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 801290c:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8012910:	ee25 4a04 	vmul.f32	s8, s10, s8
 8012914:	ee65 4a24 	vmul.f32	s9, s10, s9
 8012918:	ee25 5a27 	vmul.f32	s10, s10, s15
 801291c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8012920:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8012924:	eb09 0e0c 	add.w	lr, r9, ip
 8012928:	4571      	cmp	r1, lr
 801292a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 801292e:	ee32 1a05 	vadd.f32	s2, s4, s10
 8012932:	ee36 0a84 	vadd.f32	s0, s13, s8
 8012936:	ee61 1a87 	vmul.f32	s3, s3, s14
 801293a:	ee22 2a07 	vmul.f32	s4, s4, s14
 801293e:	f340 808d 	ble.w	8012a5c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8012942:	eba1 060e 	sub.w	r6, r1, lr
 8012946:	fb96 f5f4 	sdiv	r5, r6, r4
 801294a:	ee07 5a10 	vmov	s14, r5
 801294e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012952:	2d00      	cmp	r5, #0
 8012954:	fb04 6615 	mls	r6, r4, r5, r6
 8012958:	eea7 0a04 	vfma.f32	s0, s14, s8
 801295c:	eee7 0a24 	vfma.f32	s1, s14, s9
 8012960:	eea7 1a05 	vfma.f32	s2, s14, s10
 8012964:	dd13      	ble.n	801298e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8012966:	ee70 6a44 	vsub.f32	s13, s0, s8
 801296a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 801296e:	eef5 6a40 	vcmp.f32	s13, #0.0
 8012972:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012976:	bf18      	it	ne
 8012978:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 801297c:	ee31 2a45 	vsub.f32	s4, s2, s10
 8012980:	bf08      	it	eq
 8012982:	eeb0 7a67 	vmoveq.f32	s14, s15
 8012986:	ee61 1a87 	vmul.f32	s3, s3, s14
 801298a:	ee22 2a07 	vmul.f32	s4, s4, s14
 801298e:	fb05 f204 	mul.w	r2, r5, r4
 8012992:	1abf      	subs	r7, r7, r2
 8012994:	4494      	add	ip, r2
 8012996:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 801299a:	4411      	add	r1, r2
 801299c:	eb09 020c 	add.w	r2, r9, ip
 80129a0:	443a      	add	r2, r7
 80129a2:	b209      	sxth	r1, r1
 80129a4:	428a      	cmp	r2, r1
 80129a6:	bfc4      	itt	gt
 80129a8:	eba1 0209 	subgt.w	r2, r1, r9
 80129ac:	eba2 070c 	subgt.w	r7, r2, ip
 80129b0:	2f00      	cmp	r7, #0
 80129b2:	dd50      	ble.n	8012a56 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 80129b4:	fb97 f1f4 	sdiv	r1, r7, r4
 80129b8:	fb04 7211 	mls	r2, r4, r1, r7
 80129bc:	b90a      	cbnz	r2, 80129c2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80129be:	3901      	subs	r1, #1
 80129c0:	4622      	mov	r2, r4
 80129c2:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80129c6:	6840      	ldr	r0, [r0, #4]
 80129c8:	900b      	str	r0, [sp, #44]	; 0x2c
 80129ca:	f8d0 a000 	ldr.w	sl, [r0]
 80129ce:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80129d0:	9008      	str	r0, [sp, #32]
 80129d2:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 80129d6:	9818      	ldr	r0, [sp, #96]	; 0x60
 80129d8:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 80129dc:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80129e0:	695b      	ldr	r3, [r3, #20]
 80129e2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80129e4:	445b      	add	r3, fp
 80129e6:	eef0 6a42 	vmov.f32	s13, s4
 80129ea:	ee60 2aa3 	vmul.f32	s5, s1, s7
 80129ee:	ee21 3a23 	vmul.f32	s6, s2, s7
 80129f2:	ee72 7ae1 	vsub.f32	s15, s5, s3
 80129f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80129fa:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80129fe:	9307      	str	r3, [sp, #28]
 8012a00:	ee17 7a90 	vmov	r7, s15
 8012a04:	ee73 7a42 	vsub.f32	s15, s6, s4
 8012a08:	eeb0 7a61 	vmov.f32	s14, s3
 8012a0c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8012a10:	ee16 3a90 	vmov	r3, s13
 8012a14:	fb97 f7f4 	sdiv	r7, r7, r4
 8012a18:	ee17 ca90 	vmov	ip, s15
 8012a1c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8012a20:	fb9c fcf4 	sdiv	ip, ip, r4
 8012a24:	fb0c 3306 	mla	r3, ip, r6, r3
 8012a28:	9302      	str	r3, [sp, #8]
 8012a2a:	ee17 3a10 	vmov	r3, s14
 8012a2e:	44b6      	add	lr, r6
 8012a30:	fb04 e505 	mla	r5, r4, r5, lr
 8012a34:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8012a38:	fb07 3706 	mla	r7, r7, r6, r3
 8012a3c:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8012a40:	e9cd 4700 	strd	r4, r7, [sp]
 8012a44:	2900      	cmp	r1, #0
 8012a46:	bfcc      	ite	gt
 8012a48:	46a1      	movgt	r9, r4
 8012a4a:	4691      	movle	r9, r2
 8012a4c:	eba9 0306 	sub.w	r3, r9, r6
 8012a50:	f8da 4008 	ldr.w	r4, [sl, #8]
 8012a54:	47a0      	blx	r4
 8012a56:	b00d      	add	sp, #52	; 0x34
 8012a58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012a5c:	2500      	movs	r5, #0
 8012a5e:	462e      	mov	r6, r5
 8012a60:	e799      	b.n	8012996 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08012a64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8012a64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012a68:	b0db      	sub	sp, #364	; 0x16c
 8012a6a:	461d      	mov	r5, r3
 8012a6c:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8012a70:	930a      	str	r3, [sp, #40]	; 0x28
 8012a72:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8012a76:	930b      	str	r3, [sp, #44]	; 0x2c
 8012a78:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8012a7c:	9310      	str	r3, [sp, #64]	; 0x40
 8012a7e:	6803      	ldr	r3, [r0, #0]
 8012a80:	910f      	str	r1, [sp, #60]	; 0x3c
 8012a82:	6bdf      	ldr	r7, [r3, #60]	; 0x3c
 8012a84:	9009      	str	r0, [sp, #36]	; 0x24
 8012a86:	4614      	mov	r4, r2
 8012a88:	4629      	mov	r1, r5
 8012a8a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8012a8e:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8012a92:	47b8      	blx	r7
 8012a94:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012a96:	6058      	str	r0, [r3, #4]
 8012a98:	2800      	cmp	r0, #0
 8012a9a:	f000 83a1 	beq.w	80131e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012a9e:	682b      	ldr	r3, [r5, #0]
 8012aa0:	9314      	str	r3, [sp, #80]	; 0x50
 8012aa2:	686b      	ldr	r3, [r5, #4]
 8012aa4:	9315      	str	r3, [sp, #84]	; 0x54
 8012aa6:	4bc4      	ldr	r3, [pc, #784]	; (8012db8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8012aa8:	ed94 7a02 	vldr	s14, [r4, #8]
 8012aac:	7819      	ldrb	r1, [r3, #0]
 8012aae:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8012ab2:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8012ab6:	2900      	cmp	r1, #0
 8012ab8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8012abc:	bf16      	itet	ne
 8012abe:	4619      	movne	r1, r3
 8012ac0:	4611      	moveq	r1, r2
 8012ac2:	4613      	movne	r3, r2
 8012ac4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012ac8:	9116      	str	r1, [sp, #88]	; 0x58
 8012aca:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8012ace:	f240 8387 	bls.w	80131e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012ad2:	ed94 7a07 	vldr	s14, [r4, #28]
 8012ad6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8012ada:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012ade:	f240 837f 	bls.w	80131e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012ae2:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8012ae6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8012aea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012aee:	f240 8377 	bls.w	80131e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012af2:	6822      	ldr	r2, [r4, #0]
 8012af4:	4bb1      	ldr	r3, [pc, #708]	; (8012dbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8012af6:	429a      	cmp	r2, r3
 8012af8:	f2c0 8372 	blt.w	80131e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012afc:	49b0      	ldr	r1, [pc, #704]	; (8012dc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8012afe:	6963      	ldr	r3, [r4, #20]
 8012b00:	428a      	cmp	r2, r1
 8012b02:	f300 836d 	bgt.w	80131e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012b06:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8012b0a:	48ae      	ldr	r0, [pc, #696]	; (8012dc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8012b0c:	33ff      	adds	r3, #255	; 0xff
 8012b0e:	4283      	cmp	r3, r0
 8012b10:	f200 8366 	bhi.w	80131e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012b14:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8012b16:	4dac      	ldr	r5, [pc, #688]	; (8012dc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8012b18:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8012b1c:	33ff      	adds	r3, #255	; 0xff
 8012b1e:	42ab      	cmp	r3, r5
 8012b20:	f200 835e 	bhi.w	80131e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012b24:	6862      	ldr	r2, [r4, #4]
 8012b26:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8012b2a:	33ff      	adds	r3, #255	; 0xff
 8012b2c:	4283      	cmp	r3, r0
 8012b2e:	f200 8357 	bhi.w	80131e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012b32:	69a1      	ldr	r1, [r4, #24]
 8012b34:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8012b38:	33ff      	adds	r3, #255	; 0xff
 8012b3a:	4283      	cmp	r3, r0
 8012b3c:	f200 8350 	bhi.w	80131e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012b40:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8012b42:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8012b46:	30ff      	adds	r0, #255	; 0xff
 8012b48:	42a8      	cmp	r0, r5
 8012b4a:	f200 8349 	bhi.w	80131e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012b4e:	428a      	cmp	r2, r1
 8012b50:	f280 8110 	bge.w	8012d74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8012b54:	429a      	cmp	r2, r3
 8012b56:	f300 8119 	bgt.w	8012d8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8012b5a:	4299      	cmp	r1, r3
 8012b5c:	f280 811d 	bge.w	8012d9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8012b60:	2502      	movs	r5, #2
 8012b62:	2701      	movs	r7, #1
 8012b64:	46a9      	mov	r9, r5
 8012b66:	46b8      	mov	r8, r7
 8012b68:	f04f 0a00 	mov.w	sl, #0
 8012b6c:	4621      	mov	r1, r4
 8012b6e:	a849      	add	r0, sp, #292	; 0x124
 8012b70:	f004 fd9e 	bl	80176b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8012b74:	4622      	mov	r2, r4
 8012b76:	4653      	mov	r3, sl
 8012b78:	a949      	add	r1, sp, #292	; 0x124
 8012b7a:	f8cd 9000 	str.w	r9, [sp]
 8012b7e:	a819      	add	r0, sp, #100	; 0x64
 8012b80:	f004 fec6 	bl	8017910 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8012b84:	4622      	mov	r2, r4
 8012b86:	4653      	mov	r3, sl
 8012b88:	a949      	add	r1, sp, #292	; 0x124
 8012b8a:	f8cd 8000 	str.w	r8, [sp]
 8012b8e:	a829      	add	r0, sp, #164	; 0xa4
 8012b90:	f004 febe 	bl	8017910 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8012b94:	4643      	mov	r3, r8
 8012b96:	4622      	mov	r2, r4
 8012b98:	a949      	add	r1, sp, #292	; 0x124
 8012b9a:	f8cd 9000 	str.w	r9, [sp]
 8012b9e:	a839      	add	r0, sp, #228	; 0xe4
 8012ba0:	f004 feb6 	bl	8017910 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8012ba4:	42af      	cmp	r7, r5
 8012ba6:	bfb5      	itete	lt
 8012ba8:	2300      	movlt	r3, #0
 8012baa:	2301      	movge	r3, #1
 8012bac:	930e      	strlt	r3, [sp, #56]	; 0x38
 8012bae:	930e      	strge	r3, [sp, #56]	; 0x38
 8012bb0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012bb2:	e893 0003 	ldmia.w	r3, {r0, r1}
 8012bb6:	af12      	add	r7, sp, #72	; 0x48
 8012bb8:	bfb9      	ittee	lt
 8012bba:	ad29      	addlt	r5, sp, #164	; 0xa4
 8012bbc:	ac19      	addlt	r4, sp, #100	; 0x64
 8012bbe:	ad19      	addge	r5, sp, #100	; 0x64
 8012bc0:	ac29      	addge	r4, sp, #164	; 0xa4
 8012bc2:	e887 0003 	stmia.w	r7, {r0, r1}
 8012bc6:	b928      	cbnz	r0, 8012bd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8012bc8:	4b80      	ldr	r3, [pc, #512]	; (8012dcc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8012bca:	6818      	ldr	r0, [r3, #0]
 8012bcc:	6803      	ldr	r3, [r0, #0]
 8012bce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012bd0:	4798      	blx	r3
 8012bd2:	6038      	str	r0, [r7, #0]
 8012bd4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8012bd6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8012bda:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8012bde:	930c      	str	r3, [sp, #48]	; 0x30
 8012be0:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012be2:	6963      	ldr	r3, [r4, #20]
 8012be4:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8012be6:	440b      	add	r3, r1
 8012be8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8012bec:	4408      	add	r0, r1
 8012bee:	b200      	sxth	r0, r0
 8012bf0:	4283      	cmp	r3, r0
 8012bf2:	900d      	str	r0, [sp, #52]	; 0x34
 8012bf4:	f280 80dd 	bge.w	8012db2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8012bf8:	428b      	cmp	r3, r1
 8012bfa:	da08      	bge.n	8012c0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8012bfc:	2a00      	cmp	r2, #0
 8012bfe:	dd06      	ble.n	8012c0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8012c00:	1acb      	subs	r3, r1, r3
 8012c02:	429a      	cmp	r2, r3
 8012c04:	f2c0 80e4 	blt.w	8012dd0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8012c08:	2b00      	cmp	r3, #0
 8012c0a:	f300 80e2 	bgt.w	8012dd2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8012c0e:	6967      	ldr	r7, [r4, #20]
 8012c10:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012c12:	443b      	add	r3, r7
 8012c14:	461f      	mov	r7, r3
 8012c16:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012c18:	1bdf      	subs	r7, r3, r7
 8012c1a:	4297      	cmp	r7, r2
 8012c1c:	bfa8      	it	ge
 8012c1e:	4617      	movge	r7, r2
 8012c20:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8012c24:	2f00      	cmp	r7, #0
 8012c26:	f340 8166 	ble.w	8012ef6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8012c2a:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8012c2c:	6829      	ldr	r1, [r5, #0]
 8012c2e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012c32:	f9bb 3000 	ldrsh.w	r3, [fp]
 8012c36:	6820      	ldr	r0, [r4, #0]
 8012c38:	4411      	add	r1, r2
 8012c3a:	4299      	cmp	r1, r3
 8012c3c:	dd1a      	ble.n	8012c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8012c3e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8012c42:	440b      	add	r3, r1
 8012c44:	4402      	add	r2, r0
 8012c46:	b21b      	sxth	r3, r3
 8012c48:	429a      	cmp	r2, r3
 8012c4a:	dc13      	bgt.n	8012c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8012c4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012c4e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8012c50:	681b      	ldr	r3, [r3, #0]
 8012c52:	9206      	str	r2, [sp, #24]
 8012c54:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012c56:	9205      	str	r2, [sp, #20]
 8012c58:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8012c5a:	9500      	str	r5, [sp, #0]
 8012c5c:	e9cd b203 	strd	fp, r2, [sp, #12]
 8012c60:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8012c62:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012c64:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8012c68:	a912      	add	r1, sp, #72	; 0x48
 8012c6a:	f8d3 9040 	ldr.w	r9, [r3, #64]	; 0x40
 8012c6e:	aa49      	add	r2, sp, #292	; 0x124
 8012c70:	4623      	mov	r3, r4
 8012c72:	47c8      	blx	r9
 8012c74:	e9d4 2300 	ldrd	r2, r3, [r4]
 8012c78:	441a      	add	r2, r3
 8012c7a:	6963      	ldr	r3, [r4, #20]
 8012c7c:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8012c80:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8012c84:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8012c88:	68a1      	ldr	r1, [r4, #8]
 8012c8a:	ed94 6a08 	vldr	s12, [r4, #32]
 8012c8e:	6022      	str	r2, [r4, #0]
 8012c90:	3301      	adds	r3, #1
 8012c92:	6163      	str	r3, [r4, #20]
 8012c94:	69a3      	ldr	r3, [r4, #24]
 8012c96:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012c9a:	3b01      	subs	r3, #1
 8012c9c:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8012ca0:	61a3      	str	r3, [r4, #24]
 8012ca2:	6923      	ldr	r3, [r4, #16]
 8012ca4:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8012ca8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012cac:	edd4 6a07 	vldr	s13, [r4, #28]
 8012cb0:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8012cb4:	440b      	add	r3, r1
 8012cb6:	68e1      	ldr	r1, [r4, #12]
 8012cb8:	6123      	str	r3, [r4, #16]
 8012cba:	ee76 6a86 	vadd.f32	s13, s13, s12
 8012cbe:	428b      	cmp	r3, r1
 8012cc0:	edc4 6a07 	vstr	s13, [r4, #28]
 8012cc4:	db15      	blt.n	8012cf2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8012cc6:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8012cca:	ee76 6a26 	vadd.f32	s13, s12, s13
 8012cce:	3201      	adds	r2, #1
 8012cd0:	edc4 6a07 	vstr	s13, [r4, #28]
 8012cd4:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8012cd8:	6022      	str	r2, [r4, #0]
 8012cda:	ee36 7a87 	vadd.f32	s14, s13, s14
 8012cde:	1a5b      	subs	r3, r3, r1
 8012ce0:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8012ce4:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8012ce8:	6123      	str	r3, [r4, #16]
 8012cea:	ee77 7a27 	vadd.f32	s15, s14, s15
 8012cee:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8012cf2:	e9d5 2300 	ldrd	r2, r3, [r5]
 8012cf6:	441a      	add	r2, r3
 8012cf8:	696b      	ldr	r3, [r5, #20]
 8012cfa:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8012cfe:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8012d02:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8012d06:	68a9      	ldr	r1, [r5, #8]
 8012d08:	ed95 6a08 	vldr	s12, [r5, #32]
 8012d0c:	602a      	str	r2, [r5, #0]
 8012d0e:	3301      	adds	r3, #1
 8012d10:	616b      	str	r3, [r5, #20]
 8012d12:	69ab      	ldr	r3, [r5, #24]
 8012d14:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012d18:	3b01      	subs	r3, #1
 8012d1a:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8012d1e:	61ab      	str	r3, [r5, #24]
 8012d20:	692b      	ldr	r3, [r5, #16]
 8012d22:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8012d26:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012d2a:	edd5 6a07 	vldr	s13, [r5, #28]
 8012d2e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8012d32:	440b      	add	r3, r1
 8012d34:	68e9      	ldr	r1, [r5, #12]
 8012d36:	612b      	str	r3, [r5, #16]
 8012d38:	ee76 6a86 	vadd.f32	s13, s13, s12
 8012d3c:	428b      	cmp	r3, r1
 8012d3e:	edc5 6a07 	vstr	s13, [r5, #28]
 8012d42:	db15      	blt.n	8012d70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8012d44:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8012d48:	ee76 6a26 	vadd.f32	s13, s12, s13
 8012d4c:	3201      	adds	r2, #1
 8012d4e:	edc5 6a07 	vstr	s13, [r5, #28]
 8012d52:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8012d56:	602a      	str	r2, [r5, #0]
 8012d58:	ee36 7a87 	vadd.f32	s14, s13, s14
 8012d5c:	1a5b      	subs	r3, r3, r1
 8012d5e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8012d62:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8012d66:	612b      	str	r3, [r5, #16]
 8012d68:	ee77 7a27 	vadd.f32	s15, s14, s15
 8012d6c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8012d70:	3f01      	subs	r7, #1
 8012d72:	e757      	b.n	8012c24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8012d74:	4299      	cmp	r1, r3
 8012d76:	dc13      	bgt.n	8012da0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8012d78:	429a      	cmp	r2, r3
 8012d7a:	da14      	bge.n	8012da6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8012d7c:	2502      	movs	r5, #2
 8012d7e:	2703      	movs	r7, #3
 8012d80:	46a9      	mov	r9, r5
 8012d82:	f04f 0800 	mov.w	r8, #0
 8012d86:	f04f 0a01 	mov.w	sl, #1
 8012d8a:	e6ef      	b.n	8012b6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8012d8c:	2501      	movs	r5, #1
 8012d8e:	2700      	movs	r7, #0
 8012d90:	46a9      	mov	r9, r5
 8012d92:	46b8      	mov	r8, r7
 8012d94:	f04f 0a02 	mov.w	sl, #2
 8012d98:	e6e8      	b.n	8012b6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8012d9a:	2501      	movs	r5, #1
 8012d9c:	2702      	movs	r7, #2
 8012d9e:	e6e1      	b.n	8012b64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8012da0:	2500      	movs	r5, #0
 8012da2:	2701      	movs	r7, #1
 8012da4:	e7f4      	b.n	8012d90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8012da6:	2702      	movs	r7, #2
 8012da8:	2503      	movs	r5, #3
 8012daa:	f04f 0900 	mov.w	r9, #0
 8012dae:	46b8      	mov	r8, r7
 8012db0:	e7e9      	b.n	8012d86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8012db2:	4613      	mov	r3, r2
 8012db4:	e728      	b.n	8012c08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8012db6:	bf00      	nop
 8012db8:	20020a88 	.word	0x20020a88
 8012dbc:	fffd8f01 	.word	0xfffd8f01
 8012dc0:	00027100 	.word	0x00027100
 8012dc4:	0004e1ff 	.word	0x0004e1ff
 8012dc8:	0004e1fe 	.word	0x0004e1fe
 8012dcc:	20020a90 	.word	0x20020a90
 8012dd0:	4613      	mov	r3, r2
 8012dd2:	992b      	ldr	r1, [sp, #172]	; 0xac
 8012dd4:	9111      	str	r1, [sp, #68]	; 0x44
 8012dd6:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8012dda:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8012dde:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8012de0:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8012de4:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8012de8:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8012dec:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8012df0:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8012df4:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8012df8:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8012dfc:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8012e00:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8012e04:	469e      	mov	lr, r3
 8012e06:	469c      	mov	ip, r3
 8012e08:	f04f 0900 	mov.w	r9, #0
 8012e0c:	f1bc 0f00 	cmp.w	ip, #0
 8012e10:	d147      	bne.n	8012ea2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8012e12:	eb03 0c07 	add.w	ip, r3, r7
 8012e16:	1ad7      	subs	r7, r2, r3
 8012e18:	f1b9 0f00 	cmp.w	r9, #0
 8012e1c:	d009      	beq.n	8012e32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8012e1e:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 8012e22:	9029      	str	r0, [sp, #164]	; 0xa4
 8012e24:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8012e28:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8012e2c:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8012e30:	912d      	str	r1, [sp, #180]	; 0xb4
 8012e32:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8012e34:	9111      	str	r1, [sp, #68]	; 0x44
 8012e36:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8012e3a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8012e3e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8012e42:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8012e46:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8012e4a:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8012e4e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8012e52:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8012e56:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8012e5a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8012e5e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8012e62:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8012e66:	f04f 0800 	mov.w	r8, #0
 8012e6a:	f1be 0f00 	cmp.w	lr, #0
 8012e6e:	d031      	beq.n	8012ed4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8012e70:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8012e72:	4431      	add	r1, r6
 8012e74:	4549      	cmp	r1, r9
 8012e76:	4450      	add	r0, sl
 8012e78:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8012e7c:	ee37 7a04 	vadd.f32	s14, s14, s8
 8012e80:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8012e84:	db08      	blt.n	8012e98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8012e86:	ee77 7a85 	vadd.f32	s15, s15, s10
 8012e8a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8012e8e:	ee37 7a06 	vadd.f32	s14, s14, s12
 8012e92:	3001      	adds	r0, #1
 8012e94:	eba1 0109 	sub.w	r1, r1, r9
 8012e98:	f10e 3eff 	add.w	lr, lr, #4294967295
 8012e9c:	f04f 0801 	mov.w	r8, #1
 8012ea0:	e7e3      	b.n	8012e6a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8012ea2:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8012ea4:	4431      	add	r1, r6
 8012ea6:	4541      	cmp	r1, r8
 8012ea8:	4450      	add	r0, sl
 8012eaa:	ee37 7a24 	vadd.f32	s14, s14, s9
 8012eae:	ee77 7a84 	vadd.f32	s15, s15, s8
 8012eb2:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8012eb6:	db08      	blt.n	8012eca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8012eb8:	ee76 6a85 	vadd.f32	s13, s13, s10
 8012ebc:	ee37 7a25 	vadd.f32	s14, s14, s11
 8012ec0:	ee77 7a86 	vadd.f32	s15, s15, s12
 8012ec4:	3001      	adds	r0, #1
 8012ec6:	eba1 0108 	sub.w	r1, r1, r8
 8012eca:	f10c 3cff 	add.w	ip, ip, #4294967295
 8012ece:	f04f 0901 	mov.w	r9, #1
 8012ed2:	e79b      	b.n	8012e0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8012ed4:	449c      	add	ip, r3
 8012ed6:	1aff      	subs	r7, r7, r3
 8012ed8:	f1b8 0f00 	cmp.w	r8, #0
 8012edc:	d009      	beq.n	8012ef2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8012ede:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8012ee2:	9019      	str	r0, [sp, #100]	; 0x64
 8012ee4:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8012ee8:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8012eec:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8012ef0:	911d      	str	r1, [sp, #116]	; 0x74
 8012ef2:	1ad2      	subs	r2, r2, r3
 8012ef4:	e68b      	b.n	8012c0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8012ef6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012ef8:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8012efa:	2b00      	cmp	r3, #0
 8012efc:	f000 80d1 	beq.w	80130a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8012f00:	ad19      	add	r5, sp, #100	; 0x64
 8012f02:	ac39      	add	r4, sp, #228	; 0xe4
 8012f04:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8012f06:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8012f0a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8012f0e:	930c      	str	r3, [sp, #48]	; 0x30
 8012f10:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012f12:	6963      	ldr	r3, [r4, #20]
 8012f14:	440b      	add	r3, r1
 8012f16:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8012f1a:	4408      	add	r0, r1
 8012f1c:	b200      	sxth	r0, r0
 8012f1e:	4283      	cmp	r3, r0
 8012f20:	900d      	str	r0, [sp, #52]	; 0x34
 8012f22:	f280 80c1 	bge.w	80130a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8012f26:	428b      	cmp	r3, r1
 8012f28:	da08      	bge.n	8012f3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8012f2a:	2a00      	cmp	r2, #0
 8012f2c:	dd06      	ble.n	8012f3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8012f2e:	1acb      	subs	r3, r1, r3
 8012f30:	429a      	cmp	r2, r3
 8012f32:	f2c0 80bb 	blt.w	80130ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8012f36:	2b00      	cmp	r3, #0
 8012f38:	f300 80b9 	bgt.w	80130ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8012f3c:	6967      	ldr	r7, [r4, #20]
 8012f3e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012f40:	443b      	add	r3, r7
 8012f42:	461f      	mov	r7, r3
 8012f44:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012f46:	1bdf      	subs	r7, r3, r7
 8012f48:	4297      	cmp	r7, r2
 8012f4a:	bfa8      	it	ge
 8012f4c:	4617      	movge	r7, r2
 8012f4e:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8012f52:	2f00      	cmp	r7, #0
 8012f54:	f340 813c 	ble.w	80131d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8012f58:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8012f5a:	6829      	ldr	r1, [r5, #0]
 8012f5c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012f60:	f9bb 3000 	ldrsh.w	r3, [fp]
 8012f64:	6820      	ldr	r0, [r4, #0]
 8012f66:	4411      	add	r1, r2
 8012f68:	4299      	cmp	r1, r3
 8012f6a:	dd1a      	ble.n	8012fa2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8012f6c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8012f70:	440b      	add	r3, r1
 8012f72:	4402      	add	r2, r0
 8012f74:	b21b      	sxth	r3, r3
 8012f76:	429a      	cmp	r2, r3
 8012f78:	dc13      	bgt.n	8012fa2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8012f7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012f7c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8012f7e:	681b      	ldr	r3, [r3, #0]
 8012f80:	9206      	str	r2, [sp, #24]
 8012f82:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012f84:	9205      	str	r2, [sp, #20]
 8012f86:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8012f88:	9500      	str	r5, [sp, #0]
 8012f8a:	e9cd b203 	strd	fp, r2, [sp, #12]
 8012f8e:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8012f90:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012f92:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8012f96:	a912      	add	r1, sp, #72	; 0x48
 8012f98:	f8d3 9040 	ldr.w	r9, [r3, #64]	; 0x40
 8012f9c:	aa49      	add	r2, sp, #292	; 0x124
 8012f9e:	4623      	mov	r3, r4
 8012fa0:	47c8      	blx	r9
 8012fa2:	e9d4 2300 	ldrd	r2, r3, [r4]
 8012fa6:	441a      	add	r2, r3
 8012fa8:	6963      	ldr	r3, [r4, #20]
 8012faa:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8012fae:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8012fb2:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8012fb6:	68a1      	ldr	r1, [r4, #8]
 8012fb8:	ed94 6a08 	vldr	s12, [r4, #32]
 8012fbc:	6022      	str	r2, [r4, #0]
 8012fbe:	3301      	adds	r3, #1
 8012fc0:	6163      	str	r3, [r4, #20]
 8012fc2:	69a3      	ldr	r3, [r4, #24]
 8012fc4:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012fc8:	3b01      	subs	r3, #1
 8012fca:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8012fce:	61a3      	str	r3, [r4, #24]
 8012fd0:	6923      	ldr	r3, [r4, #16]
 8012fd2:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8012fd6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012fda:	edd4 6a07 	vldr	s13, [r4, #28]
 8012fde:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8012fe2:	440b      	add	r3, r1
 8012fe4:	68e1      	ldr	r1, [r4, #12]
 8012fe6:	6123      	str	r3, [r4, #16]
 8012fe8:	ee76 6a86 	vadd.f32	s13, s13, s12
 8012fec:	428b      	cmp	r3, r1
 8012fee:	edc4 6a07 	vstr	s13, [r4, #28]
 8012ff2:	db15      	blt.n	8013020 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8012ff4:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8012ff8:	ee76 6a26 	vadd.f32	s13, s12, s13
 8012ffc:	3201      	adds	r2, #1
 8012ffe:	edc4 6a07 	vstr	s13, [r4, #28]
 8013002:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8013006:	6022      	str	r2, [r4, #0]
 8013008:	ee36 7a87 	vadd.f32	s14, s13, s14
 801300c:	1a5b      	subs	r3, r3, r1
 801300e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013012:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8013016:	6123      	str	r3, [r4, #16]
 8013018:	ee77 7a27 	vadd.f32	s15, s14, s15
 801301c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013020:	e9d5 2300 	ldrd	r2, r3, [r5]
 8013024:	441a      	add	r2, r3
 8013026:	696b      	ldr	r3, [r5, #20]
 8013028:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 801302c:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8013030:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8013034:	68a9      	ldr	r1, [r5, #8]
 8013036:	ed95 6a08 	vldr	s12, [r5, #32]
 801303a:	602a      	str	r2, [r5, #0]
 801303c:	3301      	adds	r3, #1
 801303e:	616b      	str	r3, [r5, #20]
 8013040:	69ab      	ldr	r3, [r5, #24]
 8013042:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013046:	3b01      	subs	r3, #1
 8013048:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 801304c:	61ab      	str	r3, [r5, #24]
 801304e:	692b      	ldr	r3, [r5, #16]
 8013050:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013054:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013058:	edd5 6a07 	vldr	s13, [r5, #28]
 801305c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013060:	440b      	add	r3, r1
 8013062:	68e9      	ldr	r1, [r5, #12]
 8013064:	612b      	str	r3, [r5, #16]
 8013066:	ee76 6a86 	vadd.f32	s13, s13, s12
 801306a:	428b      	cmp	r3, r1
 801306c:	edc5 6a07 	vstr	s13, [r5, #28]
 8013070:	db15      	blt.n	801309e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8013072:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8013076:	ee76 6a26 	vadd.f32	s13, s12, s13
 801307a:	3201      	adds	r2, #1
 801307c:	edc5 6a07 	vstr	s13, [r5, #28]
 8013080:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8013084:	602a      	str	r2, [r5, #0]
 8013086:	ee36 7a87 	vadd.f32	s14, s13, s14
 801308a:	1a5b      	subs	r3, r3, r1
 801308c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013090:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8013094:	612b      	str	r3, [r5, #16]
 8013096:	ee77 7a27 	vadd.f32	s15, s14, s15
 801309a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801309e:	3f01      	subs	r7, #1
 80130a0:	e757      	b.n	8012f52 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 80130a2:	ad39      	add	r5, sp, #228	; 0xe4
 80130a4:	ac19      	add	r4, sp, #100	; 0x64
 80130a6:	e72d      	b.n	8012f04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 80130a8:	4613      	mov	r3, r2
 80130aa:	e744      	b.n	8012f36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 80130ac:	4613      	mov	r3, r2
 80130ae:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 80130b2:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 80130b4:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 80130b8:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 80130bc:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 80130c0:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 80130c4:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 80130c8:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 80130cc:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 80130d0:	993d      	ldr	r1, [sp, #244]	; 0xf4
 80130d2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 80130d6:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 80130da:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 80130de:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 80130e2:	960e      	str	r6, [sp, #56]	; 0x38
 80130e4:	469e      	mov	lr, r3
 80130e6:	461f      	mov	r7, r3
 80130e8:	f04f 0900 	mov.w	r9, #0
 80130ec:	2f00      	cmp	r7, #0
 80130ee:	d146      	bne.n	801317e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 80130f0:	449c      	add	ip, r3
 80130f2:	1ad7      	subs	r7, r2, r3
 80130f4:	f1b9 0f00 	cmp.w	r9, #0
 80130f8:	d009      	beq.n	801310e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 80130fa:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 80130fe:	9039      	str	r0, [sp, #228]	; 0xe4
 8013100:	913d      	str	r1, [sp, #244]	; 0xf4
 8013102:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8013106:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 801310a:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 801310e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8013110:	910e      	str	r1, [sp, #56]	; 0x38
 8013112:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8013116:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 801311a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801311e:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8013122:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8013126:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 801312a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801312e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8013132:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8013136:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 801313a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801313e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8013142:	f04f 0800 	mov.w	r8, #0
 8013146:	f1be 0f00 	cmp.w	lr, #0
 801314a:	d030      	beq.n	80131ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 801314c:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801314e:	4431      	add	r1, r6
 8013150:	4549      	cmp	r1, r9
 8013152:	4450      	add	r0, sl
 8013154:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013158:	ee37 7a04 	vadd.f32	s14, s14, s8
 801315c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8013160:	db08      	blt.n	8013174 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8013162:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013166:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801316a:	ee37 7a06 	vadd.f32	s14, s14, s12
 801316e:	3001      	adds	r0, #1
 8013170:	eba1 0109 	sub.w	r1, r1, r9
 8013174:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013178:	f04f 0801 	mov.w	r8, #1
 801317c:	e7e3      	b.n	8013146 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 801317e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8013180:	4431      	add	r1, r6
 8013182:	4541      	cmp	r1, r8
 8013184:	4450      	add	r0, sl
 8013186:	ee37 7a24 	vadd.f32	s14, s14, s9
 801318a:	ee77 7a84 	vadd.f32	s15, s15, s8
 801318e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8013192:	db08      	blt.n	80131a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8013194:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013198:	ee37 7a25 	vadd.f32	s14, s14, s11
 801319c:	ee77 7a86 	vadd.f32	s15, s15, s12
 80131a0:	3001      	adds	r0, #1
 80131a2:	eba1 0108 	sub.w	r1, r1, r8
 80131a6:	3f01      	subs	r7, #1
 80131a8:	f04f 0901 	mov.w	r9, #1
 80131ac:	e79e      	b.n	80130ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 80131ae:	449c      	add	ip, r3
 80131b0:	1aff      	subs	r7, r7, r3
 80131b2:	f1b8 0f00 	cmp.w	r8, #0
 80131b6:	d009      	beq.n	80131cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 80131b8:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80131bc:	9019      	str	r0, [sp, #100]	; 0x64
 80131be:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80131c2:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80131c6:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80131ca:	911d      	str	r1, [sp, #116]	; 0x74
 80131cc:	1ad2      	subs	r2, r2, r3
 80131ce:	e6b5      	b.n	8012f3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80131d0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80131d2:	681b      	ldr	r3, [r3, #0]
 80131d4:	b923      	cbnz	r3, 80131e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80131d6:	4b04      	ldr	r3, [pc, #16]	; (80131e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 80131d8:	6818      	ldr	r0, [r3, #0]
 80131da:	6803      	ldr	r3, [r0, #0]
 80131dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80131de:	4798      	blx	r3
 80131e0:	b05b      	add	sp, #364	; 0x16c
 80131e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80131e6:	bf00      	nop
 80131e8:	20020a90 	.word	0x20020a90

080131ec <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 80131ec:	b570      	push	{r4, r5, r6, lr}
 80131ee:	4604      	mov	r4, r0
 80131f0:	2500      	movs	r5, #0
 80131f2:	7223      	strb	r3, [r4, #8]
 80131f4:	9804      	ldr	r0, [sp, #16]
 80131f6:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80131fa:	8025      	strh	r5, [r4, #0]
 80131fc:	6061      	str	r1, [r4, #4]
 80131fe:	7263      	strb	r3, [r4, #9]
 8013200:	60e0      	str	r0, [r4, #12]
 8013202:	8222      	strh	r2, [r4, #16]
 8013204:	8265      	strh	r5, [r4, #18]
 8013206:	82a5      	strh	r5, [r4, #20]
 8013208:	82e5      	strh	r5, [r4, #22]
 801320a:	8325      	strh	r5, [r4, #24]
 801320c:	8365      	strh	r5, [r4, #26]
 801320e:	83a5      	strh	r5, [r4, #28]
 8013210:	77a5      	strb	r5, [r4, #30]
 8013212:	6803      	ldr	r3, [r0, #0]
 8013214:	695b      	ldr	r3, [r3, #20]
 8013216:	4798      	blx	r3
 8013218:	4606      	mov	r6, r0
 801321a:	b1f8      	cbz	r0, 801325c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 801321c:	68e0      	ldr	r0, [r4, #12]
 801321e:	6803      	ldr	r3, [r0, #0]
 8013220:	4631      	mov	r1, r6
 8013222:	68db      	ldr	r3, [r3, #12]
 8013224:	4798      	blx	r3
 8013226:	7b43      	ldrb	r3, [r0, #13]
 8013228:	7a82      	ldrb	r2, [r0, #10]
 801322a:	005b      	lsls	r3, r3, #1
 801322c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013230:	4313      	orrs	r3, r2
 8013232:	83a3      	strh	r3, [r4, #28]
 8013234:	7a63      	ldrb	r3, [r4, #9]
 8013236:	2b04      	cmp	r3, #4
 8013238:	4605      	mov	r5, r0
 801323a:	d10f      	bne.n	801325c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 801323c:	68e0      	ldr	r0, [r4, #12]
 801323e:	6803      	ldr	r3, [r0, #0]
 8013240:	462a      	mov	r2, r5
 8013242:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013244:	4631      	mov	r1, r6
 8013246:	4798      	blx	r3
 8013248:	7b6b      	ldrb	r3, [r5, #13]
 801324a:	005b      	lsls	r3, r3, #1
 801324c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013250:	7aab      	ldrb	r3, [r5, #10]
 8013252:	4313      	orrs	r3, r2
 8013254:	4418      	add	r0, r3
 8013256:	8ba3      	ldrh	r3, [r4, #28]
 8013258:	4418      	add	r0, r3
 801325a:	83a0      	strh	r0, [r4, #28]
 801325c:	4620      	mov	r0, r4
 801325e:	bd70      	pop	{r4, r5, r6, pc}

08013260 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8013260:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013264:	2400      	movs	r4, #0
 8013266:	b085      	sub	sp, #20
 8013268:	4681      	mov	r9, r0
 801326a:	4688      	mov	r8, r1
 801326c:	4692      	mov	sl, r2
 801326e:	469b      	mov	fp, r3
 8013270:	4627      	mov	r7, r4
 8013272:	4625      	mov	r5, r4
 8013274:	4626      	mov	r6, r4
 8013276:	4554      	cmp	r4, sl
 8013278:	da2a      	bge.n	80132d0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801327a:	2300      	movs	r3, #0
 801327c:	9303      	str	r3, [sp, #12]
 801327e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013282:	429d      	cmp	r5, r3
 8013284:	d004      	beq.n	8013290 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8013286:	f242 030b 	movw	r3, #8203	; 0x200b
 801328a:	429d      	cmp	r5, r3
 801328c:	bf18      	it	ne
 801328e:	462f      	movne	r7, r5
 8013290:	ab03      	add	r3, sp, #12
 8013292:	4642      	mov	r2, r8
 8013294:	4659      	mov	r1, fp
 8013296:	4648      	mov	r0, r9
 8013298:	f003 ff8e 	bl	80171b8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801329c:	4605      	mov	r5, r0
 801329e:	b1b8      	cbz	r0, 80132d0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80132a0:	280a      	cmp	r0, #10
 80132a2:	d015      	beq.n	80132d0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80132a4:	9a03      	ldr	r2, [sp, #12]
 80132a6:	b18a      	cbz	r2, 80132cc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 80132a8:	7b50      	ldrb	r0, [r2, #13]
 80132aa:	7a93      	ldrb	r3, [r2, #10]
 80132ac:	8895      	ldrh	r5, [r2, #4]
 80132ae:	0040      	lsls	r0, r0, #1
 80132b0:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80132b4:	4303      	orrs	r3, r0
 80132b6:	9301      	str	r3, [sp, #4]
 80132b8:	f8d8 3000 	ldr.w	r3, [r8]
 80132bc:	4639      	mov	r1, r7
 80132be:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80132c0:	4640      	mov	r0, r8
 80132c2:	4798      	blx	r3
 80132c4:	9b01      	ldr	r3, [sp, #4]
 80132c6:	4418      	add	r0, r3
 80132c8:	4406      	add	r6, r0
 80132ca:	b2b6      	uxth	r6, r6
 80132cc:	3401      	adds	r4, #1
 80132ce:	e7d2      	b.n	8013276 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 80132d0:	4630      	mov	r0, r6
 80132d2:	b005      	add	sp, #20
 80132d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080132d8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 80132d8:	2a02      	cmp	r2, #2
 80132da:	b530      	push	{r4, r5, lr}
 80132dc:	d011      	beq.n	8013302 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 80132de:	2a03      	cmp	r2, #3
 80132e0:	d01c      	beq.n	801331c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 80132e2:	2a01      	cmp	r2, #1
 80132e4:	d10c      	bne.n	8013300 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80132e6:	888b      	ldrh	r3, [r1, #4]
 80132e8:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 80132ec:	8801      	ldrh	r1, [r0, #0]
 80132ee:	8844      	ldrh	r4, [r0, #2]
 80132f0:	8004      	strh	r4, [r0, #0]
 80132f2:	1a9b      	subs	r3, r3, r2
 80132f4:	1a5b      	subs	r3, r3, r1
 80132f6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80132fa:	8043      	strh	r3, [r0, #2]
 80132fc:	8081      	strh	r1, [r0, #4]
 80132fe:	80c2      	strh	r2, [r0, #6]
 8013300:	bd30      	pop	{r4, r5, pc}
 8013302:	88cb      	ldrh	r3, [r1, #6]
 8013304:	88c2      	ldrh	r2, [r0, #6]
 8013306:	1a9b      	subs	r3, r3, r2
 8013308:	8842      	ldrh	r2, [r0, #2]
 801330a:	1a9b      	subs	r3, r3, r2
 801330c:	888a      	ldrh	r2, [r1, #4]
 801330e:	8881      	ldrh	r1, [r0, #4]
 8013310:	8043      	strh	r3, [r0, #2]
 8013312:	1a52      	subs	r2, r2, r1
 8013314:	8801      	ldrh	r1, [r0, #0]
 8013316:	1a52      	subs	r2, r2, r1
 8013318:	8002      	strh	r2, [r0, #0]
 801331a:	e7f1      	b.n	8013300 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801331c:	88cb      	ldrh	r3, [r1, #6]
 801331e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8013322:	8841      	ldrh	r1, [r0, #2]
 8013324:	f9b0 5000 	ldrsh.w	r5, [r0]
 8013328:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 801332c:	8045      	strh	r5, [r0, #2]
 801332e:	1a9b      	subs	r3, r3, r2
 8013330:	1a5b      	subs	r3, r3, r1
 8013332:	8003      	strh	r3, [r0, #0]
 8013334:	8082      	strh	r2, [r0, #4]
 8013336:	80c4      	strh	r4, [r0, #6]
 8013338:	e7e2      	b.n	8013300 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0801333a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 801333a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801333e:	b09f      	sub	sp, #124	; 0x7c
 8013340:	9116      	str	r1, [sp, #88]	; 0x58
 8013342:	9317      	str	r3, [sp, #92]	; 0x5c
 8013344:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8013346:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013348:	8809      	ldrh	r1, [r1, #0]
 801334a:	889b      	ldrh	r3, [r3, #4]
 801334c:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8013350:	9212      	str	r2, [sp, #72]	; 0x48
 8013352:	440b      	add	r3, r1
 8013354:	b21b      	sxth	r3, r3
 8013356:	9310      	str	r3, [sp, #64]	; 0x40
 8013358:	f8d8 3000 	ldr.w	r3, [r8]
 801335c:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8013360:	7a59      	ldrb	r1, [r3, #9]
 8013362:	7a1b      	ldrb	r3, [r3, #8]
 8013364:	9315      	str	r3, [sp, #84]	; 0x54
 8013366:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013368:	9011      	str	r0, [sp, #68]	; 0x44
 801336a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 801336e:	9114      	str	r1, [sp, #80]	; 0x50
 8013370:	f9b3 5000 	ldrsh.w	r5, [r3]
 8013374:	2a00      	cmp	r2, #0
 8013376:	d067      	beq.n	8013448 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10e>
 8013378:	f898 3010 	ldrb.w	r3, [r8, #16]
 801337c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801337e:	2b04      	cmp	r3, #4
 8013380:	bf14      	ite	ne
 8013382:	2301      	movne	r3, #1
 8013384:	2302      	moveq	r3, #2
 8013386:	4413      	add	r3, r2
 8013388:	f04f 0900 	mov.w	r9, #0
 801338c:	930f      	str	r3, [sp, #60]	; 0x3c
 801338e:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8013392:	464c      	mov	r4, r9
 8013394:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8013398:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 801339c:	4293      	cmp	r3, r2
 801339e:	f280 808c 	bge.w	80134ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 80133a2:	2300      	movs	r3, #0
 80133a4:	931c      	str	r3, [sp, #112]	; 0x70
 80133a6:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80133aa:	429c      	cmp	r4, r3
 80133ac:	d006      	beq.n	80133bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x82>
 80133ae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80133b0:	f242 020b 	movw	r2, #8203	; 0x200b
 80133b4:	4294      	cmp	r4, r2
 80133b6:	bf18      	it	ne
 80133b8:	4623      	movne	r3, r4
 80133ba:	930d      	str	r3, [sp, #52]	; 0x34
 80133bc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80133be:	992d      	ldr	r1, [sp, #180]	; 0xb4
 80133c0:	f8d8 2000 	ldr.w	r2, [r8]
 80133c4:	428b      	cmp	r3, r1
 80133c6:	db41      	blt.n	801344c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 80133c8:	6813      	ldr	r3, [r2, #0]
 80133ca:	4610      	mov	r0, r2
 80133cc:	695b      	ldr	r3, [r3, #20]
 80133ce:	4798      	blx	r3
 80133d0:	4604      	mov	r4, r0
 80133d2:	f8d8 0000 	ldr.w	r0, [r8]
 80133d6:	6803      	ldr	r3, [r0, #0]
 80133d8:	aa1d      	add	r2, sp, #116	; 0x74
 80133da:	689e      	ldr	r6, [r3, #8]
 80133dc:	4621      	mov	r1, r4
 80133de:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80133e2:	47b0      	blx	r6
 80133e4:	901c      	str	r0, [sp, #112]	; 0x70
 80133e6:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80133ea:	429c      	cmp	r4, r3
 80133ec:	f000 80e9 	beq.w	80135c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 80133f0:	f242 030b 	movw	r3, #8203	; 0x200b
 80133f4:	429c      	cmp	r4, r3
 80133f6:	f000 80e4 	beq.w	80135c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 80133fa:	2c00      	cmp	r4, #0
 80133fc:	f000 80f6 	beq.w	80135ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 8013400:	2c0a      	cmp	r4, #10
 8013402:	d060      	beq.n	80134c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8013404:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8013406:	b36a      	cbz	r2, 8013464 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12a>
 8013408:	8894      	ldrh	r4, [r2, #4]
 801340a:	f1bb 0f00 	cmp.w	fp, #0
 801340e:	d03b      	beq.n	8013488 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 8013410:	f892 900d 	ldrb.w	r9, [r2, #13]
 8013414:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8013418:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801341c:	f892 900a 	ldrb.w	r9, [r2, #10]
 8013420:	f1bb 0f01 	cmp.w	fp, #1
 8013424:	ea49 0903 	orr.w	r9, r9, r3
 8013428:	d134      	bne.n	8013494 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15a>
 801342a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801342c:	eba5 0509 	sub.w	r5, r5, r9
 8013430:	2b00      	cmp	r3, #0
 8013432:	d14f      	bne.n	80134d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 8013434:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013436:	eb09 0305 	add.w	r3, r9, r5
 801343a:	4413      	add	r3, r2
 801343c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801343e:	f9b2 2000 	ldrsh.w	r2, [r2]
 8013442:	4293      	cmp	r3, r2
 8013444:	da51      	bge.n	80134ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 8013446:	e038      	b.n	80134ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 8013448:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801344a:	e79d      	b.n	8013388 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4e>
 801344c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8013450:	9301      	str	r3, [sp, #4]
 8013452:	ab1d      	add	r3, sp, #116	; 0x74
 8013454:	9300      	str	r3, [sp, #0]
 8013456:	4659      	mov	r1, fp
 8013458:	ab1c      	add	r3, sp, #112	; 0x70
 801345a:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801345c:	f003 ff04 	bl	8017268 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8013460:	4604      	mov	r4, r0
 8013462:	e7c0      	b.n	80133e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 8013464:	f8d8 0000 	ldr.w	r0, [r8]
 8013468:	6803      	ldr	r3, [r0, #0]
 801346a:	691b      	ldr	r3, [r3, #16]
 801346c:	4798      	blx	r3
 801346e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013472:	4298      	cmp	r0, r3
 8013474:	f000 80a5 	beq.w	80135c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8013478:	f242 030b 	movw	r3, #8203	; 0x200b
 801347c:	4298      	cmp	r0, r3
 801347e:	f000 80a0 	beq.w	80135c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8013482:	f1bb 0f00 	cmp.w	fp, #0
 8013486:	d100      	bne.n	801348a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 8013488:	444d      	add	r5, r9
 801348a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801348c:	2a00      	cmp	r2, #0
 801348e:	d1bf      	bne.n	8013410 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd6>
 8013490:	4691      	mov	r9, r2
 8013492:	e096      	b.n	80135c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8013494:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013496:	2b00      	cmp	r3, #0
 8013498:	f000 80aa 	beq.w	80135f0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 801349c:	f1bb 0f00 	cmp.w	fp, #0
 80134a0:	d118      	bne.n	80134d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 80134a2:	f8d8 0000 	ldr.w	r0, [r8]
 80134a6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80134a8:	6803      	ldr	r3, [r0, #0]
 80134aa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80134ac:	4798      	blx	r3
 80134ae:	4405      	add	r5, r0
 80134b0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80134b2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80134b4:	1aeb      	subs	r3, r5, r3
 80134b6:	4293      	cmp	r3, r2
 80134b8:	dd17      	ble.n	80134ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 80134ba:	2c00      	cmp	r4, #0
 80134bc:	f000 8096 	beq.w	80135ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 80134c0:	2c0a      	cmp	r4, #10
 80134c2:	f040 8084 	bne.w	80135ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 80134c6:	240a      	movs	r4, #10
 80134c8:	fab4 f084 	clz	r0, r4
 80134cc:	0940      	lsrs	r0, r0, #5
 80134ce:	b01f      	add	sp, #124	; 0x7c
 80134d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80134d4:	f8d8 0000 	ldr.w	r0, [r8]
 80134d8:	990d      	ldr	r1, [sp, #52]	; 0x34
 80134da:	6803      	ldr	r3, [r0, #0]
 80134dc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80134de:	4798      	blx	r3
 80134e0:	f1bb 0f01 	cmp.w	fp, #1
 80134e4:	eba5 0500 	sub.w	r5, r5, r0
 80134e8:	d0a4      	beq.n	8013434 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfa>
 80134ea:	981c      	ldr	r0, [sp, #112]	; 0x70
 80134ec:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80134ee:	f990 1009 	ldrsb.w	r1, [r0, #9]
 80134f2:	f9b3 6000 	ldrsh.w	r6, [r3]
 80134f6:	7b43      	ldrb	r3, [r0, #13]
 80134f8:	015b      	lsls	r3, r3, #5
 80134fa:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80134fe:	7983      	ldrb	r3, [r0, #6]
 8013500:	4429      	add	r1, r5
 8013502:	4313      	orrs	r3, r2
 8013504:	440b      	add	r3, r1
 8013506:	42b3      	cmp	r3, r6
 8013508:	db5b      	blt.n	80135c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 801350a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801350c:	4299      	cmp	r1, r3
 801350e:	da58      	bge.n	80135c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8013510:	f8d8 0000 	ldr.w	r0, [r8]
 8013514:	6803      	ldr	r3, [r0, #0]
 8013516:	42ae      	cmp	r6, r5
 8013518:	bfc8      	it	gt
 801351a:	1b76      	subgt	r6, r6, r5
 801351c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801351e:	bfcc      	ite	gt
 8013520:	b2b6      	uxthgt	r6, r6
 8013522:	2600      	movle	r6, #0
 8013524:	4798      	blx	r3
 8013526:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8013528:	7b5a      	ldrb	r2, [r3, #13]
 801352a:	00d1      	lsls	r1, r2, #3
 801352c:	f401 7780 	and.w	r7, r1, #256	; 0x100
 8013530:	7a19      	ldrb	r1, [r3, #8]
 8013532:	4339      	orrs	r1, r7
 8013534:	0657      	lsls	r7, r2, #25
 8013536:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 8013538:	bf44      	itt	mi
 801353a:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 801353e:	b209      	sxthmi	r1, r1
 8013540:	19c7      	adds	r7, r0, r7
 8013542:	1a7f      	subs	r7, r7, r1
 8013544:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8013546:	b2bf      	uxth	r7, r7
 8013548:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801354c:	fa0f fa87 	sxth.w	sl, r7
 8013550:	4551      	cmp	r1, sl
 8013552:	dd3a      	ble.n	80135ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013554:	0112      	lsls	r2, r2, #4
 8013556:	79d8      	ldrb	r0, [r3, #7]
 8013558:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801355c:	4302      	orrs	r2, r0
 801355e:	4492      	add	sl, r2
 8013560:	4551      	cmp	r1, sl
 8013562:	dc2e      	bgt.n	80135c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 8013564:	1bcf      	subs	r7, r1, r7
 8013566:	b2bf      	uxth	r7, r7
 8013568:	468a      	mov	sl, r1
 801356a:	9319      	str	r3, [sp, #100]	; 0x64
 801356c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801356e:	f8d8 0000 	ldr.w	r0, [r8]
 8013572:	681a      	ldr	r2, [r3, #0]
 8013574:	6801      	ldr	r1, [r0, #0]
 8013576:	6c53      	ldr	r3, [r2, #68]	; 0x44
 8013578:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801357a:	9313      	str	r3, [sp, #76]	; 0x4c
 801357c:	9218      	str	r2, [sp, #96]	; 0x60
 801357e:	6b89      	ldr	r1, [r1, #56]	; 0x38
 8013580:	4788      	blx	r1
 8013582:	f898 1006 	ldrb.w	r1, [r8, #6]
 8013586:	910b      	str	r1, [sp, #44]	; 0x2c
 8013588:	f898 100e 	ldrb.w	r1, [r8, #14]
 801358c:	910a      	str	r1, [sp, #40]	; 0x28
 801358e:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8013592:	9109      	str	r1, [sp, #36]	; 0x24
 8013594:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8013596:	f8d8 1008 	ldr.w	r1, [r8, #8]
 801359a:	9305      	str	r3, [sp, #20]
 801359c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801359e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80135a0:	9206      	str	r2, [sp, #24]
 80135a2:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80135a6:	e9cd 7303 	strd	r7, r3, [sp, #12]
 80135aa:	e9cd a601 	strd	sl, r6, [sp, #4]
 80135ae:	442e      	add	r6, r5
 80135b0:	b236      	sxth	r6, r6
 80135b2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80135b4:	9600      	str	r6, [sp, #0]
 80135b6:	681a      	ldr	r2, [r3, #0]
 80135b8:	9916      	ldr	r1, [sp, #88]	; 0x58
 80135ba:	685b      	ldr	r3, [r3, #4]
 80135bc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80135be:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80135c0:	47b0      	blx	r6
 80135c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80135c4:	3301      	adds	r3, #1
 80135c6:	930e      	str	r3, [sp, #56]	; 0x38
 80135c8:	e6e6      	b.n	8013398 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5e>
 80135ca:	2700      	movs	r7, #0
 80135cc:	e7cd      	b.n	801356a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x230>
 80135ce:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80135d0:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80135d2:	3501      	adds	r5, #1
 80135d4:	429d      	cmp	r5, r3
 80135d6:	f6bf af77 	bge.w	80134c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 80135da:	4659      	mov	r1, fp
 80135dc:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80135de:	f7f3 fbd7 	bl	8006d90 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80135e2:	4604      	mov	r4, r0
 80135e4:	b110      	cbz	r0, 80135ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 80135e6:	280a      	cmp	r0, #10
 80135e8:	d1f2      	bne.n	80135d0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 80135ea:	e76c      	b.n	80134c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 80135ec:	2400      	movs	r4, #0
 80135ee:	e76b      	b.n	80134c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 80135f0:	f1bb 0f00 	cmp.w	fp, #0
 80135f4:	f43f af5c 	beq.w	80134b0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 80135f8:	e777      	b.n	80134ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>

080135fa <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>:
 80135fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80135fe:	b089      	sub	sp, #36	; 0x24
 8013600:	4699      	mov	r9, r3
 8013602:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8013604:	f8bd 4050 	ldrh.w	r4, [sp, #80]	; 0x50
 8013608:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801360a:	4683      	mov	fp, r0
 801360c:	460d      	mov	r5, r1
 801360e:	4690      	mov	r8, r2
 8013610:	bb0b      	cbnz	r3, 8013656 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x5c>
 8013612:	6813      	ldr	r3, [r2, #0]
 8013614:	4610      	mov	r0, r2
 8013616:	695b      	ldr	r3, [r3, #20]
 8013618:	4798      	blx	r3
 801361a:	4682      	mov	sl, r0
 801361c:	b1d8      	cbz	r0, 8013656 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x5c>
 801361e:	f8d8 3000 	ldr.w	r3, [r8]
 8013622:	4601      	mov	r1, r0
 8013624:	68db      	ldr	r3, [r3, #12]
 8013626:	4640      	mov	r0, r8
 8013628:	4798      	blx	r3
 801362a:	7b47      	ldrb	r7, [r0, #13]
 801362c:	007f      	lsls	r7, r7, #1
 801362e:	f407 7380 	and.w	r3, r7, #256	; 0x100
 8013632:	7a87      	ldrb	r7, [r0, #10]
 8013634:	431f      	orrs	r7, r3
 8013636:	6933      	ldr	r3, [r6, #16]
 8013638:	7c1b      	ldrb	r3, [r3, #16]
 801363a:	443c      	add	r4, r7
 801363c:	2b04      	cmp	r3, #4
 801363e:	4602      	mov	r2, r0
 8013640:	b2a4      	uxth	r4, r4
 8013642:	d108      	bne.n	8013656 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x5c>
 8013644:	f8d8 3000 	ldr.w	r3, [r8]
 8013648:	4651      	mov	r1, sl
 801364a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801364c:	4640      	mov	r0, r8
 801364e:	4798      	blx	r3
 8013650:	4438      	add	r0, r7
 8013652:	4404      	add	r4, r0
 8013654:	b2a4      	uxth	r4, r4
 8013656:	6933      	ldr	r3, [r6, #16]
 8013658:	795b      	ldrb	r3, [r3, #5]
 801365a:	bb3b      	cbnz	r3, 80136ac <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xb2>
 801365c:	f1b9 0f01 	cmp.w	r9, #1
 8013660:	d102      	bne.n	8013668 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x6e>
 8013662:	882b      	ldrh	r3, [r5, #0]
 8013664:	4423      	add	r3, r4
 8013666:	802b      	strh	r3, [r5, #0]
 8013668:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801366a:	f9b6 3008 	ldrsh.w	r3, [r6, #8]
 801366e:	fab2 f282 	clz	r2, r2
 8013672:	0952      	lsrs	r2, r2, #5
 8013674:	9206      	str	r2, [sp, #24]
 8013676:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013678:	9205      	str	r2, [sp, #20]
 801367a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801367c:	e9cd 9203 	strd	r9, r2, [sp, #12]
 8013680:	6932      	ldr	r2, [r6, #16]
 8013682:	9202      	str	r2, [sp, #8]
 8013684:	68f2      	ldr	r2, [r6, #12]
 8013686:	e9cd 5200 	strd	r5, r2, [sp]
 801368a:	4658      	mov	r0, fp
 801368c:	e9d6 1200 	ldrd	r1, r2, [r6]
 8013690:	f7ff fe53 	bl	801333a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8013694:	6933      	ldr	r3, [r6, #16]
 8013696:	795b      	ldrb	r3, [r3, #5]
 8013698:	b983      	cbnz	r3, 80136bc <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xc2>
 801369a:	f1b9 0f00 	cmp.w	r9, #0
 801369e:	d102      	bne.n	80136a6 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xac>
 80136a0:	8828      	ldrh	r0, [r5, #0]
 80136a2:	4404      	add	r4, r0
 80136a4:	802c      	strh	r4, [r5, #0]
 80136a6:	b009      	add	sp, #36	; 0x24
 80136a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80136ac:	2b01      	cmp	r3, #1
 80136ae:	d1db      	bne.n	8013668 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x6e>
 80136b0:	f1b9 0f00 	cmp.w	r9, #0
 80136b4:	d1d8      	bne.n	8013668 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x6e>
 80136b6:	882b      	ldrh	r3, [r5, #0]
 80136b8:	1b1b      	subs	r3, r3, r4
 80136ba:	e7d4      	b.n	8013666 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0x6c>
 80136bc:	2b01      	cmp	r3, #1
 80136be:	d1f2      	bne.n	80136a6 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xac>
 80136c0:	f1b9 0f01 	cmp.w	r9, #1
 80136c4:	d1ef      	bne.n	80136a6 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xac>
 80136c6:	8828      	ldrh	r0, [r5, #0]
 80136c8:	1b04      	subs	r4, r0, r4
 80136ca:	e7eb      	b.n	80136a4 <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE+0xaa>

080136cc <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE>:
 80136cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80136d0:	b0a7      	sub	sp, #156	; 0x9c
 80136d2:	4689      	mov	r9, r1
 80136d4:	9004      	str	r0, [sp, #16]
 80136d6:	9309      	str	r3, [sp, #36]	; 0x24
 80136d8:	4690      	mov	r8, r2
 80136da:	f89d 30c8 	ldrb.w	r3, [sp, #200]	; 0xc8
 80136de:	9930      	ldr	r1, [sp, #192]	; 0xc0
 80136e0:	930b      	str	r3, [sp, #44]	; 0x2c
 80136e2:	2264      	movs	r2, #100	; 0x64
 80136e4:	a80d      	add	r0, sp, #52	; 0x34
 80136e6:	f011 f93f 	bl	8024968 <memcpy>
 80136ea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80136ec:	2300      	movs	r3, #0
 80136ee:	930c      	str	r3, [sp, #48]	; 0x30
 80136f0:	2a00      	cmp	r2, #0
 80136f2:	f040 8149 	bne.w	8013988 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2bc>
 80136f6:	4693      	mov	fp, r2
 80136f8:	9208      	str	r2, [sp, #32]
 80136fa:	9206      	str	r2, [sp, #24]
 80136fc:	4616      	mov	r6, r2
 80136fe:	4617      	mov	r7, r2
 8013700:	9205      	str	r2, [sp, #20]
 8013702:	4614      	mov	r4, r2
 8013704:	9207      	str	r2, [sp, #28]
 8013706:	4692      	mov	sl, r2
 8013708:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801370a:	459b      	cmp	fp, r3
 801370c:	f280 80f0 	bge.w	80138f0 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x224>
 8013710:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013714:	459a      	cmp	sl, r3
 8013716:	d006      	beq.n	8013726 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5a>
 8013718:	9b07      	ldr	r3, [sp, #28]
 801371a:	f242 020b 	movw	r2, #8203	; 0x200b
 801371e:	4592      	cmp	sl, r2
 8013720:	bf18      	it	ne
 8013722:	4653      	movne	r3, sl
 8013724:	9307      	str	r3, [sp, #28]
 8013726:	4642      	mov	r2, r8
 8013728:	ab0c      	add	r3, sp, #48	; 0x30
 801372a:	2100      	movs	r1, #0
 801372c:	9830      	ldr	r0, [sp, #192]	; 0xc0
 801372e:	f003 fd43 	bl	80171b8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8013732:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8013734:	4682      	mov	sl, r0
 8013736:	2a00      	cmp	r2, #0
 8013738:	d064      	beq.n	8013804 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x138>
 801373a:	7b55      	ldrb	r5, [r2, #13]
 801373c:	f8d8 3000 	ldr.w	r3, [r8]
 8013740:	9907      	ldr	r1, [sp, #28]
 8013742:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013744:	f8b2 a004 	ldrh.w	sl, [r2, #4]
 8013748:	006d      	lsls	r5, r5, #1
 801374a:	f405 7080 	and.w	r0, r5, #256	; 0x100
 801374e:	7a95      	ldrb	r5, [r2, #10]
 8013750:	4305      	orrs	r5, r0
 8013752:	4640      	mov	r0, r8
 8013754:	4798      	blx	r3
 8013756:	4405      	add	r5, r0
 8013758:	b2ad      	uxth	r5, r5
 801375a:	f1ba 0f00 	cmp.w	sl, #0
 801375e:	f000 80c7 	beq.w	80138f0 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x224>
 8013762:	f1ba 0f0a 	cmp.w	sl, #10
 8013766:	f000 80c3 	beq.w	80138f0 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x224>
 801376a:	f1aa 0328 	sub.w	r3, sl, #40	; 0x28
 801376e:	b29b      	uxth	r3, r3
 8013770:	f02a 0120 	bic.w	r1, sl, #32
 8013774:	2b01      	cmp	r3, #1
 8013776:	b289      	uxth	r1, r1
 8013778:	d946      	bls.n	8013808 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x13c>
 801377a:	295b      	cmp	r1, #91	; 0x5b
 801377c:	d044      	beq.n	8013808 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x13c>
 801377e:	295d      	cmp	r1, #93	; 0x5d
 8013780:	d042      	beq.n	8013808 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x13c>
 8013782:	f02a 0202 	bic.w	r2, sl, #2
 8013786:	b292      	uxth	r2, r2
 8013788:	f1a2 033c 	sub.w	r3, r2, #60	; 0x3c
 801378c:	425a      	negs	r2, r3
 801378e:	415a      	adcs	r2, r3
 8013790:	f1aa 0330 	sub.w	r3, sl, #48	; 0x30
 8013794:	b29b      	uxth	r3, r3
 8013796:	2b09      	cmp	r3, #9
 8013798:	d938      	bls.n	801380c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x140>
 801379a:	f5aa 63cc 	sub.w	r3, sl, #1632	; 0x660
 801379e:	b29b      	uxth	r3, r3
 80137a0:	2b09      	cmp	r3, #9
 80137a2:	bf8c      	ite	hi
 80137a4:	2300      	movhi	r3, #0
 80137a6:	2301      	movls	r3, #1
 80137a8:	f5aa 60b2 	sub.w	r0, sl, #1424	; 0x590
 80137ac:	b280      	uxth	r0, r0
 80137ae:	f5b0 7fb8 	cmp.w	r0, #368	; 0x170
 80137b2:	d305      	bcc.n	80137c0 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0xf4>
 80137b4:	f50a 6096 	add.w	r0, sl, #1200	; 0x4b0
 80137b8:	b280      	uxth	r0, r0
 80137ba:	f5b0 7f6c 	cmp.w	r0, #944	; 0x3b0
 80137be:	d227      	bcs.n	8013810 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x144>
 80137c0:	f083 0001 	eor.w	r0, r3, #1
 80137c4:	f64f 6cff 	movw	ip, #65279	; 0xfeff
 80137c8:	45e2      	cmp	sl, ip
 80137ca:	d023      	beq.n	8013814 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x148>
 80137cc:	f242 0c0b 	movw	ip, #8203	; 0x200b
 80137d0:	45e2      	cmp	sl, ip
 80137d2:	bf14      	ite	ne
 80137d4:	f04f 0c00 	movne.w	ip, #0
 80137d8:	f04f 0c01 	moveq.w	ip, #1
 80137dc:	3941      	subs	r1, #65	; 0x41
 80137de:	2919      	cmp	r1, #25
 80137e0:	d90a      	bls.n	80137f8 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x12c>
 80137e2:	f1ba 0f7f 	cmp.w	sl, #127	; 0x7f
 80137e6:	f240 8256 	bls.w	8013c96 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5ca>
 80137ea:	2800      	cmp	r0, #0
 80137ec:	f040 8253 	bne.w	8013c96 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5ca>
 80137f0:	f1bc 0f00 	cmp.w	ip, #0
 80137f4:	f040 824f 	bne.w	8013c96 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5ca>
 80137f8:	2f03      	cmp	r7, #3
 80137fa:	d844      	bhi.n	8013886 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1ba>
 80137fc:	e8df f007 	tbb	[pc, r7]
 8013800:	4c2d1813 	.word	0x4c2d1813
 8013804:	4615      	mov	r5, r2
 8013806:	e7a8      	b.n	801375a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x8e>
 8013808:	2201      	movs	r2, #1
 801380a:	e7c1      	b.n	8013790 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0xc4>
 801380c:	2301      	movs	r3, #1
 801380e:	e7cb      	b.n	80137a8 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0xdc>
 8013810:	2000      	movs	r0, #0
 8013812:	e7d7      	b.n	80137c4 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0xf8>
 8013814:	f04f 0c01 	mov.w	ip, #1
 8013818:	e7e0      	b.n	80137dc <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x110>
 801381a:	2f03      	cmp	r7, #3
 801381c:	d833      	bhi.n	8013886 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1ba>
 801381e:	e8df f007 	tbb	[pc, r7]
 8013822:	0702      	.short	0x0702
 8013824:	3c1c      	.short	0x3c1c
 8013826:	462c      	mov	r4, r5
 8013828:	2601      	movs	r6, #1
 801382a:	b1a0      	cbz	r0, 8013856 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x18a>
 801382c:	2702      	movs	r7, #2
 801382e:	e02a      	b.n	8013886 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1ba>
 8013830:	b170      	cbz	r0, 8013850 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x184>
 8013832:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8013834:	9601      	str	r6, [sp, #4]
 8013836:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801383a:	ab0d      	add	r3, sp, #52	; 0x34
 801383c:	9300      	str	r3, [sp, #0]
 801383e:	4642      	mov	r2, r8
 8013840:	2300      	movs	r3, #0
 8013842:	4649      	mov	r1, r9
 8013844:	9804      	ldr	r0, [sp, #16]
 8013846:	f7ff fed8 	bl	80135fa <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 801384a:	462c      	mov	r4, r5
 801384c:	2601      	movs	r6, #1
 801384e:	e7ed      	b.n	801382c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x160>
 8013850:	442c      	add	r4, r5
 8013852:	3601      	adds	r6, #1
 8013854:	b2a4      	uxth	r4, r4
 8013856:	2701      	movs	r7, #1
 8013858:	e015      	b.n	8013886 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1ba>
 801385a:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801385c:	9601      	str	r6, [sp, #4]
 801385e:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8013862:	ab0d      	add	r3, sp, #52	; 0x34
 8013864:	9300      	str	r3, [sp, #0]
 8013866:	4642      	mov	r2, r8
 8013868:	2301      	movs	r3, #1
 801386a:	4649      	mov	r1, r9
 801386c:	9804      	ldr	r0, [sp, #16]
 801386e:	f7ff fec4 	bl	80135fa <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8013872:	462c      	mov	r4, r5
 8013874:	2601      	movs	r6, #1
 8013876:	e7ee      	b.n	8013856 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x18a>
 8013878:	b910      	cbnz	r0, 8013880 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1b4>
 801387a:	f1bc 0f00 	cmp.w	ip, #0
 801387e:	d033      	beq.n	80138e8 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x21c>
 8013880:	442c      	add	r4, r5
 8013882:	3601      	adds	r6, #1
 8013884:	b2a4      	uxth	r4, r4
 8013886:	9b08      	ldr	r3, [sp, #32]
 8013888:	2f01      	cmp	r7, #1
 801388a:	bf08      	it	eq
 801388c:	f043 0301 	orreq.w	r3, r3, #1
 8013890:	9308      	str	r3, [sp, #32]
 8013892:	f10b 0b01 	add.w	fp, fp, #1
 8013896:	e737      	b.n	8013708 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3c>
 8013898:	2301      	movs	r3, #1
 801389a:	9a06      	ldr	r2, [sp, #24]
 801389c:	1c57      	adds	r7, r2, #1
 801389e:	b140      	cbz	r0, 80138b2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1e6>
 80138a0:	9b05      	ldr	r3, [sp, #20]
 80138a2:	441c      	add	r4, r3
 80138a4:	fa15 f484 	uxtah	r4, r5, r4
 80138a8:	443e      	add	r6, r7
 80138aa:	b2a4      	uxth	r4, r4
 80138ac:	e7be      	b.n	801382c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x160>
 80138ae:	2300      	movs	r3, #0
 80138b0:	e7f3      	b.n	801389a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1ce>
 80138b2:	b193      	cbz	r3, 80138da <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x20e>
 80138b4:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80138b6:	9601      	str	r6, [sp, #4]
 80138b8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80138bc:	ab0d      	add	r3, sp, #52	; 0x34
 80138be:	9300      	str	r3, [sp, #0]
 80138c0:	4642      	mov	r2, r8
 80138c2:	2301      	movs	r3, #1
 80138c4:	4649      	mov	r1, r9
 80138c6:	9804      	ldr	r0, [sp, #16]
 80138c8:	f7ff fe97 	bl	80135fa <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 80138cc:	9b05      	ldr	r3, [sp, #20]
 80138ce:	441c      	add	r4, r3
 80138d0:	fa15 f484 	uxtah	r4, r5, r4
 80138d4:	b2a4      	uxth	r4, r4
 80138d6:	463e      	mov	r6, r7
 80138d8:	e7bd      	b.n	8013856 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x18a>
 80138da:	9b05      	ldr	r3, [sp, #20]
 80138dc:	442b      	add	r3, r5
 80138de:	b29b      	uxth	r3, r3
 80138e0:	e9cd 3705 	strd	r3, r7, [sp, #20]
 80138e4:	2703      	movs	r7, #3
 80138e6:	e7ce      	b.n	8013886 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1ba>
 80138e8:	2301      	movs	r3, #1
 80138ea:	9505      	str	r5, [sp, #20]
 80138ec:	9306      	str	r3, [sp, #24]
 80138ee:	e7f9      	b.n	80138e4 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x218>
 80138f0:	2f01      	cmp	r7, #1
 80138f2:	d106      	bne.n	8013902 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x236>
 80138f4:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80138f6:	9601      	str	r6, [sp, #4]
 80138f8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80138fc:	ab0d      	add	r3, sp, #52	; 0x34
 80138fe:	9300      	str	r3, [sp, #0]
 8013900:	e01f      	b.n	8013942 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x276>
 8013902:	2f02      	cmp	r7, #2
 8013904:	d106      	bne.n	8013914 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x248>
 8013906:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8013908:	9601      	str	r6, [sp, #4]
 801390a:	e9cd 4302 	strd	r4, r3, [sp, #8]
 801390e:	ab0d      	add	r3, sp, #52	; 0x34
 8013910:	9300      	str	r3, [sp, #0]
 8013912:	e037      	b.n	8013984 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2b8>
 8013914:	2f03      	cmp	r7, #3
 8013916:	d11a      	bne.n	801394e <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x282>
 8013918:	9b08      	ldr	r3, [sp, #32]
 801391a:	af0d      	add	r7, sp, #52	; 0x34
 801391c:	b343      	cbz	r3, 8013970 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2a4>
 801391e:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8013920:	9804      	ldr	r0, [sp, #16]
 8013922:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8013926:	e9cd 7600 	strd	r7, r6, [sp]
 801392a:	2301      	movs	r3, #1
 801392c:	4642      	mov	r2, r8
 801392e:	4649      	mov	r1, r9
 8013930:	f7ff fe63 	bl	80135fa <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8013934:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8013936:	9303      	str	r3, [sp, #12]
 8013938:	9b05      	ldr	r3, [sp, #20]
 801393a:	9302      	str	r3, [sp, #8]
 801393c:	9b06      	ldr	r3, [sp, #24]
 801393e:	e9cd 7300 	strd	r7, r3, [sp]
 8013942:	2300      	movs	r3, #0
 8013944:	4642      	mov	r2, r8
 8013946:	4649      	mov	r1, r9
 8013948:	9804      	ldr	r0, [sp, #16]
 801394a:	f7ff fe56 	bl	80135fa <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 801394e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013950:	b15b      	cbz	r3, 801396a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x29e>
 8013952:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8013954:	9303      	str	r3, [sp, #12]
 8013956:	aa0d      	add	r2, sp, #52	; 0x34
 8013958:	2300      	movs	r3, #0
 801395a:	9200      	str	r2, [sp, #0]
 801395c:	e9cd 3301 	strd	r3, r3, [sp, #4]
 8013960:	4642      	mov	r2, r8
 8013962:	4649      	mov	r1, r9
 8013964:	9804      	ldr	r0, [sp, #16]
 8013966:	f7ff fe48 	bl	80135fa <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 801396a:	b027      	add	sp, #156	; 0x9c
 801396c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013970:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8013972:	9303      	str	r3, [sp, #12]
 8013974:	9b05      	ldr	r3, [sp, #20]
 8013976:	441c      	add	r4, r3
 8013978:	9b06      	ldr	r3, [sp, #24]
 801397a:	441e      	add	r6, r3
 801397c:	e9cd 7600 	strd	r7, r6, [sp]
 8013980:	b2a4      	uxth	r4, r4
 8013982:	9402      	str	r4, [sp, #8]
 8013984:	2301      	movs	r3, #1
 8013986:	e7dd      	b.n	8013944 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x278>
 8013988:	e9cd 3306 	strd	r3, r3, [sp, #24]
 801398c:	9305      	str	r3, [sp, #20]
 801398e:	461e      	mov	r6, r3
 8013990:	461f      	mov	r7, r3
 8013992:	469b      	mov	fp, r3
 8013994:	461c      	mov	r4, r3
 8013996:	9308      	str	r3, [sp, #32]
 8013998:	469a      	mov	sl, r3
 801399a:	9b06      	ldr	r3, [sp, #24]
 801399c:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801399e:	4293      	cmp	r3, r2
 80139a0:	f280 814e 	bge.w	8013c40 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x574>
 80139a4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80139a8:	459a      	cmp	sl, r3
 80139aa:	d006      	beq.n	80139ba <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2ee>
 80139ac:	9b08      	ldr	r3, [sp, #32]
 80139ae:	f242 020b 	movw	r2, #8203	; 0x200b
 80139b2:	4592      	cmp	sl, r2
 80139b4:	bf18      	it	ne
 80139b6:	4653      	movne	r3, sl
 80139b8:	9308      	str	r3, [sp, #32]
 80139ba:	4642      	mov	r2, r8
 80139bc:	ab0c      	add	r3, sp, #48	; 0x30
 80139be:	9909      	ldr	r1, [sp, #36]	; 0x24
 80139c0:	9830      	ldr	r0, [sp, #192]	; 0xc0
 80139c2:	f003 fbf9 	bl	80171b8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80139c6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80139c8:	4682      	mov	sl, r0
 80139ca:	2a00      	cmp	r2, #0
 80139cc:	d067      	beq.n	8013a9e <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3d2>
 80139ce:	7b53      	ldrb	r3, [r2, #13]
 80139d0:	9908      	ldr	r1, [sp, #32]
 80139d2:	f8b2 a004 	ldrh.w	sl, [r2, #4]
 80139d6:	005b      	lsls	r3, r3, #1
 80139d8:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80139dc:	7a93      	ldrb	r3, [r2, #10]
 80139de:	ea43 0500 	orr.w	r5, r3, r0
 80139e2:	f8d8 3000 	ldr.w	r3, [r8]
 80139e6:	4640      	mov	r0, r8
 80139e8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80139ea:	4798      	blx	r3
 80139ec:	4428      	add	r0, r5
 80139ee:	b285      	uxth	r5, r0
 80139f0:	f1ba 0f00 	cmp.w	sl, #0
 80139f4:	f000 8124 	beq.w	8013c40 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x574>
 80139f8:	f1ba 0f0a 	cmp.w	sl, #10
 80139fc:	f000 8120 	beq.w	8013c40 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x574>
 8013a00:	f1aa 0328 	sub.w	r3, sl, #40	; 0x28
 8013a04:	b29b      	uxth	r3, r3
 8013a06:	f02a 0220 	bic.w	r2, sl, #32
 8013a0a:	2b01      	cmp	r3, #1
 8013a0c:	b292      	uxth	r2, r2
 8013a0e:	d948      	bls.n	8013aa2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3d6>
 8013a10:	2a5b      	cmp	r2, #91	; 0x5b
 8013a12:	d046      	beq.n	8013aa2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3d6>
 8013a14:	2a5d      	cmp	r2, #93	; 0x5d
 8013a16:	d044      	beq.n	8013aa2 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3d6>
 8013a18:	f02a 0102 	bic.w	r1, sl, #2
 8013a1c:	b289      	uxth	r1, r1
 8013a1e:	f1a1 033c 	sub.w	r3, r1, #60	; 0x3c
 8013a22:	4259      	negs	r1, r3
 8013a24:	4159      	adcs	r1, r3
 8013a26:	f1aa 0330 	sub.w	r3, sl, #48	; 0x30
 8013a2a:	b29b      	uxth	r3, r3
 8013a2c:	2b09      	cmp	r3, #9
 8013a2e:	d93a      	bls.n	8013aa6 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3da>
 8013a30:	f5aa 63cc 	sub.w	r3, sl, #1632	; 0x660
 8013a34:	b29b      	uxth	r3, r3
 8013a36:	2b09      	cmp	r3, #9
 8013a38:	bf8c      	ite	hi
 8013a3a:	2300      	movhi	r3, #0
 8013a3c:	2301      	movls	r3, #1
 8013a3e:	f5aa 60b2 	sub.w	r0, sl, #1424	; 0x590
 8013a42:	b280      	uxth	r0, r0
 8013a44:	f5b0 7fb8 	cmp.w	r0, #368	; 0x170
 8013a48:	d306      	bcc.n	8013a58 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x38c>
 8013a4a:	f50a 6096 	add.w	r0, sl, #1200	; 0x4b0
 8013a4e:	b280      	uxth	r0, r0
 8013a50:	f5b0 7f6c 	cmp.w	r0, #944	; 0x3b0
 8013a54:	d300      	bcc.n	8013a58 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x38c>
 8013a56:	b109      	cbz	r1, 8013a5c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x390>
 8013a58:	f083 0101 	eor.w	r1, r3, #1
 8013a5c:	f64f 60ff 	movw	r0, #65279	; 0xfeff
 8013a60:	4582      	cmp	sl, r0
 8013a62:	d022      	beq.n	8013aaa <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3de>
 8013a64:	f242 000b 	movw	r0, #8203	; 0x200b
 8013a68:	ebaa 0c00 	sub.w	ip, sl, r0
 8013a6c:	f1dc 0000 	rsbs	r0, ip, #0
 8013a70:	eb40 000c 	adc.w	r0, r0, ip
 8013a74:	3a41      	subs	r2, #65	; 0x41
 8013a76:	2a19      	cmp	r2, #25
 8013a78:	d909      	bls.n	8013a8e <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3c2>
 8013a7a:	f1ba 0f7f 	cmp.w	sl, #127	; 0x7f
 8013a7e:	f240 811f 	bls.w	8013cc0 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5f4>
 8013a82:	2900      	cmp	r1, #0
 8013a84:	f040 811c 	bne.w	8013cc0 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5f4>
 8013a88:	2800      	cmp	r0, #0
 8013a8a:	f040 8119 	bne.w	8013cc0 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5f4>
 8013a8e:	2f07      	cmp	r7, #7
 8013a90:	d815      	bhi.n	8013abe <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 8013a92:	e8df f007 	tbb	[pc, r7]
 8013a96:	141e      	.short	0x141e
 8013a98:	7c501432 	.word	0x7c501432
 8013a9c:	ac60      	.short	0xac60
 8013a9e:	4615      	mov	r5, r2
 8013aa0:	e7a6      	b.n	80139f0 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x324>
 8013aa2:	2101      	movs	r1, #1
 8013aa4:	e7bf      	b.n	8013a26 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x35a>
 8013aa6:	2301      	movs	r3, #1
 8013aa8:	e7c9      	b.n	8013a3e <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x372>
 8013aaa:	2001      	movs	r0, #1
 8013aac:	e7e2      	b.n	8013a74 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3a8>
 8013aae:	2200      	movs	r2, #0
 8013ab0:	462c      	mov	r4, r5
 8013ab2:	2601      	movs	r6, #1
 8013ab4:	b9fb      	cbnz	r3, 8013af6 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x42a>
 8013ab6:	2a00      	cmp	r2, #0
 8013ab8:	bf0c      	ite	eq
 8013aba:	2702      	moveq	r7, #2
 8013abc:	2706      	movne	r7, #6
 8013abe:	9b07      	ldr	r3, [sp, #28]
 8013ac0:	2f02      	cmp	r7, #2
 8013ac2:	bf08      	it	eq
 8013ac4:	f043 0301 	orreq.w	r3, r3, #1
 8013ac8:	9307      	str	r3, [sp, #28]
 8013aca:	9b06      	ldr	r3, [sp, #24]
 8013acc:	3301      	adds	r3, #1
 8013ace:	9306      	str	r3, [sp, #24]
 8013ad0:	e763      	b.n	801399a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2ce>
 8013ad2:	2201      	movs	r2, #1
 8013ad4:	e7ec      	b.n	8013ab0 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3e4>
 8013ad6:	2200      	movs	r2, #0
 8013ad8:	b18b      	cbz	r3, 8013afe <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x432>
 8013ada:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8013adc:	9601      	str	r6, [sp, #4]
 8013ade:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8013ae2:	ab0d      	add	r3, sp, #52	; 0x34
 8013ae4:	9300      	str	r3, [sp, #0]
 8013ae6:	4642      	mov	r2, r8
 8013ae8:	2301      	movs	r3, #1
 8013aea:	4649      	mov	r1, r9
 8013aec:	9804      	ldr	r0, [sp, #16]
 8013aee:	f7ff fd84 	bl	80135fa <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8013af2:	462c      	mov	r4, r5
 8013af4:	2601      	movs	r6, #1
 8013af6:	2704      	movs	r7, #4
 8013af8:	e7e1      	b.n	8013abe <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 8013afa:	2201      	movs	r2, #1
 8013afc:	e7ec      	b.n	8013ad8 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x40c>
 8013afe:	b17a      	cbz	r2, 8013b20 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x454>
 8013b00:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8013b02:	9601      	str	r6, [sp, #4]
 8013b04:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8013b08:	ab0d      	add	r3, sp, #52	; 0x34
 8013b0a:	9300      	str	r3, [sp, #0]
 8013b0c:	2301      	movs	r3, #1
 8013b0e:	4642      	mov	r2, r8
 8013b10:	4649      	mov	r1, r9
 8013b12:	9804      	ldr	r0, [sp, #16]
 8013b14:	f7ff fd71 	bl	80135fa <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8013b18:	462c      	mov	r4, r5
 8013b1a:	2601      	movs	r6, #1
 8013b1c:	2706      	movs	r7, #6
 8013b1e:	e7ce      	b.n	8013abe <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 8013b20:	3601      	adds	r6, #1
 8013b22:	442c      	add	r4, r5
 8013b24:	b2a4      	uxth	r4, r4
 8013b26:	2702      	movs	r7, #2
 8013b28:	e7c9      	b.n	8013abe <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 8013b2a:	2200      	movs	r2, #0
 8013b2c:	b12b      	cbz	r3, 8013b3a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x46e>
 8013b2e:	3601      	adds	r6, #1
 8013b30:	442c      	add	r4, r5
 8013b32:	b2a4      	uxth	r4, r4
 8013b34:	e7df      	b.n	8013af6 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x42a>
 8013b36:	2201      	movs	r2, #1
 8013b38:	e7f8      	b.n	8013b2c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x460>
 8013b3a:	f02a 0302 	bic.w	r3, sl, #2
 8013b3e:	b29b      	uxth	r3, r3
 8013b40:	2b2c      	cmp	r3, #44	; 0x2c
 8013b42:	d06f      	beq.n	8013c24 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x558>
 8013b44:	f1ba 0f3a 	cmp.w	sl, #58	; 0x3a
 8013b48:	d06c      	beq.n	8013c24 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x558>
 8013b4a:	f2aa 636b 	subw	r3, sl, #1643	; 0x66b
 8013b4e:	b29b      	uxth	r3, r3
 8013b50:	2b01      	cmp	r3, #1
 8013b52:	d967      	bls.n	8013c24 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x558>
 8013b54:	b11a      	cbz	r2, 8013b5e <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x492>
 8013b56:	3601      	adds	r6, #1
 8013b58:	442c      	add	r4, r5
 8013b5a:	b2a4      	uxth	r4, r4
 8013b5c:	e7de      	b.n	8013b1c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x450>
 8013b5e:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8013b60:	9601      	str	r6, [sp, #4]
 8013b62:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8013b66:	ab0d      	add	r3, sp, #52	; 0x34
 8013b68:	9300      	str	r3, [sp, #0]
 8013b6a:	4613      	mov	r3, r2
 8013b6c:	4642      	mov	r2, r8
 8013b6e:	4649      	mov	r1, r9
 8013b70:	9804      	ldr	r0, [sp, #16]
 8013b72:	f7ff fd42 	bl	80135fa <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8013b76:	462c      	mov	r4, r5
 8013b78:	2601      	movs	r6, #1
 8013b7a:	e7d4      	b.n	8013b26 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x45a>
 8013b7c:	2200      	movs	r2, #0
 8013b7e:	b143      	cbz	r3, 8013b92 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x4c6>
 8013b80:	9b05      	ldr	r3, [sp, #20]
 8013b82:	445c      	add	r4, fp
 8013b84:	3301      	adds	r3, #1
 8013b86:	441e      	add	r6, r3
 8013b88:	fa15 f484 	uxtah	r4, r5, r4
 8013b8c:	e7d1      	b.n	8013b32 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x466>
 8013b8e:	2201      	movs	r2, #1
 8013b90:	e7f5      	b.n	8013b7e <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x4b2>
 8013b92:	af0d      	add	r7, sp, #52	; 0x34
 8013b94:	b182      	cbz	r2, 8013bb8 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x4ec>
 8013b96:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8013b98:	9804      	ldr	r0, [sp, #16]
 8013b9a:	e9cd 4202 	strd	r4, r2, [sp, #8]
 8013b9e:	e9cd 7600 	strd	r7, r6, [sp]
 8013ba2:	4642      	mov	r2, r8
 8013ba4:	4649      	mov	r1, r9
 8013ba6:	f7ff fd28 	bl	80135fa <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8013baa:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8013bac:	e9cd b302 	strd	fp, r3, [sp, #8]
 8013bb0:	9b05      	ldr	r3, [sp, #20]
 8013bb2:	e9cd 7300 	strd	r7, r3, [sp]
 8013bb6:	e7a9      	b.n	8013b0c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x440>
 8013bb8:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8013bba:	9804      	ldr	r0, [sp, #16]
 8013bbc:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8013bc0:	e9cd 7600 	strd	r7, r6, [sp]
 8013bc4:	4613      	mov	r3, r2
 8013bc6:	4649      	mov	r1, r9
 8013bc8:	4642      	mov	r2, r8
 8013bca:	f7ff fd16 	bl	80135fa <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8013bce:	9b05      	ldr	r3, [sp, #20]
 8013bd0:	eb0b 0405 	add.w	r4, fp, r5
 8013bd4:	1c5e      	adds	r6, r3, #1
 8013bd6:	e7a5      	b.n	8013b24 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x458>
 8013bd8:	2b00      	cmp	r3, #0
 8013bda:	d1bc      	bne.n	8013b56 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x48a>
 8013bdc:	b339      	cbz	r1, 8013c2e <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x562>
 8013bde:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8013be0:	9601      	str	r6, [sp, #4]
 8013be2:	e9cd 4202 	strd	r4, r2, [sp, #8]
 8013be6:	aa0d      	add	r2, sp, #52	; 0x34
 8013be8:	9200      	str	r2, [sp, #0]
 8013bea:	e7bf      	b.n	8013b6c <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x4a0>
 8013bec:	b133      	cbz	r3, 8013bfc <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x530>
 8013bee:	9b05      	ldr	r3, [sp, #20]
 8013bf0:	445c      	add	r4, fp
 8013bf2:	3301      	adds	r3, #1
 8013bf4:	441e      	add	r6, r3
 8013bf6:	fa15 f484 	uxtah	r4, r5, r4
 8013bfa:	e7ae      	b.n	8013b5a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x48e>
 8013bfc:	9a05      	ldr	r2, [sp, #20]
 8013bfe:	445d      	add	r5, fp
 8013c00:	3201      	adds	r2, #1
 8013c02:	920a      	str	r2, [sp, #40]	; 0x28
 8013c04:	b2ad      	uxth	r5, r5
 8013c06:	b1b9      	cbz	r1, 8013c38 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x56c>
 8013c08:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8013c0a:	9601      	str	r6, [sp, #4]
 8013c0c:	e9cd 4202 	strd	r4, r2, [sp, #8]
 8013c10:	aa0d      	add	r2, sp, #52	; 0x34
 8013c12:	9200      	str	r2, [sp, #0]
 8013c14:	4649      	mov	r1, r9
 8013c16:	4642      	mov	r2, r8
 8013c18:	9804      	ldr	r0, [sp, #16]
 8013c1a:	f7ff fcee 	bl	80135fa <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8013c1e:	462c      	mov	r4, r5
 8013c20:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8013c22:	e780      	b.n	8013b26 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x45a>
 8013c24:	2301      	movs	r3, #1
 8013c26:	46ab      	mov	fp, r5
 8013c28:	9305      	str	r3, [sp, #20]
 8013c2a:	2705      	movs	r7, #5
 8013c2c:	e747      	b.n	8013abe <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 8013c2e:	2301      	movs	r3, #1
 8013c30:	46ab      	mov	fp, r5
 8013c32:	9305      	str	r3, [sp, #20]
 8013c34:	2707      	movs	r7, #7
 8013c36:	e742      	b.n	8013abe <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 8013c38:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013c3a:	9305      	str	r3, [sp, #20]
 8013c3c:	46ab      	mov	fp, r5
 8013c3e:	e73e      	b.n	8013abe <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 8013c40:	2f02      	cmp	r7, #2
 8013c42:	f43f ae60 	beq.w	8013906 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x23a>
 8013c46:	f007 0705 	and.w	r7, r7, #5
 8013c4a:	2f04      	cmp	r7, #4
 8013c4c:	f43f ae52 	beq.w	80138f4 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x228>
 8013c50:	2f05      	cmp	r7, #5
 8013c52:	f47f ae7c 	bne.w	801394e <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x282>
 8013c56:	9b07      	ldr	r3, [sp, #28]
 8013c58:	ad0d      	add	r5, sp, #52	; 0x34
 8013c5a:	b18b      	cbz	r3, 8013c80 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5b4>
 8013c5c:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8013c5e:	9804      	ldr	r0, [sp, #16]
 8013c60:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8013c64:	e9cd 5600 	strd	r5, r6, [sp]
 8013c68:	2300      	movs	r3, #0
 8013c6a:	4642      	mov	r2, r8
 8013c6c:	4649      	mov	r1, r9
 8013c6e:	f7ff fcc4 	bl	80135fa <_ZN8touchgfx3LCD21drawStringRTLInternalERsPKNS_4FontEhRNS_12TextProviderEitPKNS0_24DrawStringInternalStructE>
 8013c72:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8013c74:	e9cd b302 	strd	fp, r3, [sp, #8]
 8013c78:	9b05      	ldr	r3, [sp, #20]
 8013c7a:	e9cd 5300 	strd	r5, r3, [sp]
 8013c7e:	e681      	b.n	8013984 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x2b8>
 8013c80:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8013c82:	9303      	str	r3, [sp, #12]
 8013c84:	9b05      	ldr	r3, [sp, #20]
 8013c86:	445c      	add	r4, fp
 8013c88:	441e      	add	r6, r3
 8013c8a:	b2a4      	uxth	r4, r4
 8013c8c:	9402      	str	r4, [sp, #8]
 8013c8e:	e9cd 5600 	strd	r5, r6, [sp]
 8013c92:	9b07      	ldr	r3, [sp, #28]
 8013c94:	e656      	b.n	8013944 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x278>
 8013c96:	2b00      	cmp	r3, #0
 8013c98:	f47f adbf 	bne.w	801381a <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x14e>
 8013c9c:	2a00      	cmp	r2, #0
 8013c9e:	f47f adab 	bne.w	80137f8 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x12c>
 8013ca2:	2f03      	cmp	r7, #3
 8013ca4:	f63f adef 	bhi.w	8013886 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x1ba>
 8013ca8:	a301      	add	r3, pc, #4	; (adr r3, 8013cb0 <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x5e4>)
 8013caa:	f853 f027 	ldr.w	pc, [r3, r7, lsl #2]
 8013cae:	bf00      	nop
 8013cb0:	08013827 	.word	0x08013827
 8013cb4:	08013831 	.word	0x08013831
 8013cb8:	08013879 	.word	0x08013879
 8013cbc:	080138af 	.word	0x080138af
 8013cc0:	2f07      	cmp	r7, #7
 8013cc2:	f63f aefc 	bhi.w	8013abe <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x3f2>
 8013cc6:	a201      	add	r2, pc, #4	; (adr r2, 8013ccc <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE+0x600>)
 8013cc8:	f852 f027 	ldr.w	pc, [r2, r7, lsl #2]
 8013ccc:	08013aaf 	.word	0x08013aaf
 8013cd0:	08013abf 	.word	0x08013abf
 8013cd4:	08013ad7 	.word	0x08013ad7
 8013cd8:	08013abf 	.word	0x08013abf
 8013cdc:	08013b2b 	.word	0x08013b2b
 8013ce0:	08013b7d 	.word	0x08013b7d
 8013ce4:	08013bd9 	.word	0x08013bd9
 8013ce8:	08013bed 	.word	0x08013bed

08013cec <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8013cec:	b530      	push	{r4, r5, lr}
 8013cee:	8a44      	ldrh	r4, [r0, #18]
 8013cf0:	8ac5      	ldrh	r5, [r0, #22]
 8013cf2:	82c3      	strh	r3, [r0, #22]
 8013cf4:	442c      	add	r4, r5
 8013cf6:	1ae4      	subs	r4, r4, r3
 8013cf8:	8244      	strh	r4, [r0, #18]
 8013cfa:	8b03      	ldrh	r3, [r0, #24]
 8013cfc:	8a84      	ldrh	r4, [r0, #20]
 8013cfe:	4422      	add	r2, r4
 8013d00:	440c      	add	r4, r1
 8013d02:	1a59      	subs	r1, r3, r1
 8013d04:	8342      	strh	r2, [r0, #26]
 8013d06:	8284      	strh	r4, [r0, #20]
 8013d08:	8301      	strh	r1, [r0, #24]
 8013d0a:	bd30      	pop	{r4, r5, pc}

08013d0c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 8013d0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d10:	7a43      	ldrb	r3, [r0, #9]
 8013d12:	1eda      	subs	r2, r3, #3
 8013d14:	b087      	sub	sp, #28
 8013d16:	4604      	mov	r4, r0
 8013d18:	b2d2      	uxtb	r2, r2
 8013d1a:	460f      	mov	r7, r1
 8013d1c:	2900      	cmp	r1, #0
 8013d1e:	d036      	beq.n	8013d8e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 8013d20:	2a01      	cmp	r2, #1
 8013d22:	d932      	bls.n	8013d8a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 8013d24:	1e58      	subs	r0, r3, #1
 8013d26:	f1d0 0b00 	rsbs	fp, r0, #0
 8013d2a:	eb4b 0b00 	adc.w	fp, fp, r0
 8013d2e:	1e99      	subs	r1, r3, #2
 8013d30:	424b      	negs	r3, r1
 8013d32:	414b      	adcs	r3, r1
 8013d34:	9303      	str	r3, [sp, #12]
 8013d36:	2300      	movs	r3, #0
 8013d38:	e9cd 3301 	strd	r3, r3, [sp, #4]
 8013d3c:	2500      	movs	r5, #0
 8013d3e:	8265      	strh	r5, [r4, #18]
 8013d40:	82a5      	strh	r5, [r4, #20]
 8013d42:	46a9      	mov	r9, r5
 8013d44:	f242 0a0b 	movw	sl, #8203	; 0x200b
 8013d48:	2300      	movs	r3, #0
 8013d4a:	9305      	str	r3, [sp, #20]
 8013d4c:	8823      	ldrh	r3, [r4, #0]
 8013d4e:	2b20      	cmp	r3, #32
 8013d50:	d02b      	beq.n	8013daa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 8013d52:	eba3 020a 	sub.w	r2, r3, sl
 8013d56:	4256      	negs	r6, r2
 8013d58:	4156      	adcs	r6, r2
 8013d5a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8013d5e:	4293      	cmp	r3, r2
 8013d60:	d004      	beq.n	8013d6c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8013d62:	4553      	cmp	r3, sl
 8013d64:	bf16      	itet	ne
 8013d66:	4699      	movne	r9, r3
 8013d68:	2601      	moveq	r6, #1
 8013d6a:	2600      	movne	r6, #0
 8013d6c:	ab05      	add	r3, sp, #20
 8013d6e:	68e2      	ldr	r2, [r4, #12]
 8013d70:	7a21      	ldrb	r1, [r4, #8]
 8013d72:	6860      	ldr	r0, [r4, #4]
 8013d74:	f003 fa20 	bl	80171b8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8013d78:	8020      	strh	r0, [r4, #0]
 8013d7a:	b9c8      	cbnz	r0, 8013db0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 8013d7c:	8b22      	ldrh	r2, [r4, #24]
 8013d7e:	2300      	movs	r3, #0
 8013d80:	4611      	mov	r1, r2
 8013d82:	4620      	mov	r0, r4
 8013d84:	f7ff ffb2 	bl	8013cec <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8013d88:	e066      	b.n	8013e58 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 8013d8a:	468b      	mov	fp, r1
 8013d8c:	e7cf      	b.n	8013d2e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 8013d8e:	3b01      	subs	r3, #1
 8013d90:	2a01      	cmp	r2, #1
 8013d92:	bf8c      	ite	hi
 8013d94:	2200      	movhi	r2, #0
 8013d96:	2201      	movls	r2, #1
 8013d98:	2b01      	cmp	r3, #1
 8013d9a:	bf8c      	ite	hi
 8013d9c:	2300      	movhi	r3, #0
 8013d9e:	2301      	movls	r3, #1
 8013da0:	9202      	str	r2, [sp, #8]
 8013da2:	9301      	str	r3, [sp, #4]
 8013da4:	9103      	str	r1, [sp, #12]
 8013da6:	468b      	mov	fp, r1
 8013da8:	e7c8      	b.n	8013d3c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 8013daa:	4699      	mov	r9, r3
 8013dac:	2601      	movs	r6, #1
 8013dae:	e7dd      	b.n	8013d6c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8013db0:	8ae3      	ldrh	r3, [r4, #22]
 8013db2:	280a      	cmp	r0, #10
 8013db4:	f103 0301 	add.w	r3, r3, #1
 8013db8:	82e3      	strh	r3, [r4, #22]
 8013dba:	d0df      	beq.n	8013d7c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 8013dbc:	9a05      	ldr	r2, [sp, #20]
 8013dbe:	bb42      	cbnz	r2, 8013e12 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 8013dc0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013dc4:	4298      	cmp	r0, r3
 8013dc6:	d001      	beq.n	8013dcc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 8013dc8:	4550      	cmp	r0, sl
 8013dca:	d1bd      	bne.n	8013d48 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8013dcc:	8823      	ldrh	r3, [r4, #0]
 8013dce:	8b21      	ldrh	r1, [r4, #24]
 8013dd0:	2b20      	cmp	r3, #32
 8013dd2:	d001      	beq.n	8013dd8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 8013dd4:	4553      	cmp	r3, sl
 8013dd6:	d131      	bne.n	8013e3c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 8013dd8:	2e00      	cmp	r6, #0
 8013dda:	bf0a      	itet	eq
 8013ddc:	460d      	moveq	r5, r1
 8013dde:	4630      	movne	r0, r6
 8013de0:	2001      	moveq	r0, #1
 8013de2:	440a      	add	r2, r1
 8013de4:	8aa3      	ldrh	r3, [r4, #20]
 8013de6:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8013dea:	b292      	uxth	r2, r2
 8013dec:	8322      	strh	r2, [r4, #24]
 8013dee:	4413      	add	r3, r2
 8013df0:	2f00      	cmp	r7, #0
 8013df2:	d03a      	beq.n	8013e6a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 8013df4:	f1bb 0f00 	cmp.w	fp, #0
 8013df8:	d102      	bne.n	8013e00 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 8013dfa:	9903      	ldr	r1, [sp, #12]
 8013dfc:	b301      	cbz	r1, 8013e40 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8013dfe:	b1f8      	cbz	r0, 8013e40 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8013e00:	8ba1      	ldrh	r1, [r4, #28]
 8013e02:	4419      	add	r1, r3
 8013e04:	458c      	cmp	ip, r1
 8013e06:	da2a      	bge.n	8013e5e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 8013e08:	8a61      	ldrh	r1, [r4, #18]
 8013e0a:	b341      	cbz	r1, 8013e5e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 8013e0c:	4563      	cmp	r3, ip
 8013e0e:	dd9b      	ble.n	8013d48 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8013e10:	e01c      	b.n	8013e4c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 8013e12:	8893      	ldrh	r3, [r2, #4]
 8013e14:	8023      	strh	r3, [r4, #0]
 8013e16:	f892 800d 	ldrb.w	r8, [r2, #13]
 8013e1a:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8013e1e:	f408 7080 	and.w	r0, r8, #256	; 0x100
 8013e22:	f892 800a 	ldrb.w	r8, [r2, #10]
 8013e26:	ea48 0800 	orr.w	r8, r8, r0
 8013e2a:	68e0      	ldr	r0, [r4, #12]
 8013e2c:	6803      	ldr	r3, [r0, #0]
 8013e2e:	4649      	mov	r1, r9
 8013e30:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013e32:	4798      	blx	r3
 8013e34:	eb08 0200 	add.w	r2, r8, r0
 8013e38:	b292      	uxth	r2, r2
 8013e3a:	e7c7      	b.n	8013dcc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 8013e3c:	2000      	movs	r0, #0
 8013e3e:	e7d0      	b.n	8013de2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 8013e40:	4563      	cmp	r3, ip
 8013e42:	dd81      	ble.n	8013d48 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8013e44:	8a63      	ldrh	r3, [r4, #18]
 8013e46:	2b00      	cmp	r3, #0
 8013e48:	f43f af7e 	beq.w	8013d48 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8013e4c:	2301      	movs	r3, #1
 8013e4e:	77a3      	strb	r3, [r4, #30]
 8013e50:	8ba2      	ldrh	r2, [r4, #28]
 8013e52:	8b63      	ldrh	r3, [r4, #26]
 8013e54:	4413      	add	r3, r2
 8013e56:	8363      	strh	r3, [r4, #26]
 8013e58:	b007      	add	sp, #28
 8013e5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013e5e:	2300      	movs	r3, #0
 8013e60:	4611      	mov	r1, r2
 8013e62:	4620      	mov	r0, r4
 8013e64:	f7ff ff42 	bl	8013cec <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8013e68:	e76e      	b.n	8013d48 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8013e6a:	4563      	cmp	r3, ip
 8013e6c:	dd14      	ble.n	8013e98 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 8013e6e:	9b02      	ldr	r3, [sp, #8]
 8013e70:	b113      	cbz	r3, 8013e78 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 8013e72:	2301      	movs	r3, #1
 8013e74:	460a      	mov	r2, r1
 8013e76:	e783      	b.n	8013d80 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 8013e78:	9b01      	ldr	r3, [sp, #4]
 8013e7a:	2b00      	cmp	r3, #0
 8013e7c:	f43f af64 	beq.w	8013d48 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8013e80:	2800      	cmp	r0, #0
 8013e82:	f47f af61 	bne.w	8013d48 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8013e86:	b116      	cbz	r6, 8013e8e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 8013e88:	2301      	movs	r3, #1
 8013e8a:	462a      	mov	r2, r5
 8013e8c:	e779      	b.n	8013d82 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 8013e8e:	8a63      	ldrh	r3, [r4, #18]
 8013e90:	2b00      	cmp	r3, #0
 8013e92:	f43f af59 	beq.w	8013d48 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8013e96:	e7df      	b.n	8013e58 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 8013e98:	2800      	cmp	r0, #0
 8013e9a:	f47f af55 	bne.w	8013d48 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8013e9e:	2e00      	cmp	r6, #0
 8013ea0:	f43f af52 	beq.w	8013d48 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8013ea4:	2301      	movs	r3, #1
 8013ea6:	462a      	mov	r2, r5
 8013ea8:	e7db      	b.n	8013e62 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

08013eaa <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8013eaa:	b530      	push	{r4, r5, lr}
 8013eac:	4605      	mov	r5, r0
 8013eae:	b08b      	sub	sp, #44	; 0x2c
 8013eb0:	b191      	cbz	r1, 8013ed8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 8013eb2:	e9cd 3100 	strd	r3, r1, [sp]
 8013eb6:	4613      	mov	r3, r2
 8013eb8:	4601      	mov	r1, r0
 8013eba:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8013ebe:	a802      	add	r0, sp, #8
 8013ec0:	f7ff f994 	bl	80131ec <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8013ec4:	2401      	movs	r4, #1
 8013ec6:	2100      	movs	r1, #0
 8013ec8:	a802      	add	r0, sp, #8
 8013eca:	f7ff ff1f 	bl	8013d0c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8013ece:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8013ed2:	b163      	cbz	r3, 8013eee <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8013ed4:	3401      	adds	r4, #1
 8013ed6:	e7f6      	b.n	8013ec6 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 8013ed8:	f003 fa68 	bl	80173ac <_ZN8touchgfx12TextProvider11getNextCharEv>
 8013edc:	2401      	movs	r4, #1
 8013ede:	280a      	cmp	r0, #10
 8013ee0:	4628      	mov	r0, r5
 8013ee2:	bf08      	it	eq
 8013ee4:	3401      	addeq	r4, #1
 8013ee6:	f003 fa61 	bl	80173ac <_ZN8touchgfx12TextProvider11getNextCharEv>
 8013eea:	2800      	cmp	r0, #0
 8013eec:	d1f7      	bne.n	8013ede <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8013eee:	b2a0      	uxth	r0, r4
 8013ef0:	b00b      	add	sp, #44	; 0x2c
 8013ef2:	bd30      	pop	{r4, r5, pc}

08013ef4 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8013ef4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ef8:	b0e9      	sub	sp, #420	; 0x1a4
 8013efa:	468b      	mov	fp, r1
 8013efc:	f8dd a1c8 	ldr.w	sl, [sp, #456]	; 0x1c8
 8013f00:	9007      	str	r0, [sp, #28]
 8013f02:	461c      	mov	r4, r3
 8013f04:	f1ba 0f00 	cmp.w	sl, #0
 8013f08:	f000 80cd 	beq.w	80140a6 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b2>
 8013f0c:	681b      	ldr	r3, [r3, #0]
 8013f0e:	2b00      	cmp	r3, #0
 8013f10:	f000 80c9 	beq.w	80140a6 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b2>
 8013f14:	7ba3      	ldrb	r3, [r4, #14]
 8013f16:	2b00      	cmp	r3, #0
 8013f18:	f000 80c5 	beq.w	80140a6 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b2>
 8013f1c:	6810      	ldr	r0, [r2, #0]
 8013f1e:	6851      	ldr	r1, [r2, #4]
 8013f20:	f9bb 2004 	ldrsh.w	r2, [fp, #4]
 8013f24:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 8013f28:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8013f2c:	464b      	mov	r3, r9
 8013f2e:	c303      	stmia	r3!, {r0, r1}
 8013f30:	79a2      	ldrb	r2, [r4, #6]
 8013f32:	f9bb 3006 	ldrsh.w	r3, [fp, #6]
 8013f36:	7967      	ldrb	r7, [r4, #5]
 8013f38:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8013f3c:	a90e      	add	r1, sp, #56	; 0x38
 8013f3e:	4648      	mov	r0, r9
 8013f40:	2500      	movs	r5, #0
 8013f42:	950e      	str	r5, [sp, #56]	; 0x38
 8013f44:	f7ff f9c8 	bl	80132d8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8013f48:	a90e      	add	r1, sp, #56	; 0x38
 8013f4a:	79a2      	ldrb	r2, [r4, #6]
 8013f4c:	4608      	mov	r0, r1
 8013f4e:	f7ff f9c3 	bl	80132d8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8013f52:	2f00      	cmp	r7, #0
 8013f54:	d16a      	bne.n	801402c <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8013f56:	f894 8004 	ldrb.w	r8, [r4, #4]
 8013f5a:	ebb8 0805 	subs.w	r8, r8, r5
 8013f5e:	bf18      	it	ne
 8013f60:	f04f 0801 	movne.w	r8, #1
 8013f64:	f8cd 8014 	str.w	r8, [sp, #20]
 8013f68:	a81d      	add	r0, sp, #116	; 0x74
 8013f6a:	f002 f92a 	bl	80161c2 <_ZN8touchgfx12TextProviderC1Ev>
 8013f6e:	6820      	ldr	r0, [r4, #0]
 8013f70:	6803      	ldr	r3, [r0, #0]
 8013f72:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013f74:	4798      	blx	r3
 8013f76:	4605      	mov	r5, r0
 8013f78:	6820      	ldr	r0, [r4, #0]
 8013f7a:	6803      	ldr	r3, [r0, #0]
 8013f7c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8013f7e:	4798      	blx	r3
 8013f80:	462b      	mov	r3, r5
 8013f82:	9000      	str	r0, [sp, #0]
 8013f84:	9a73      	ldr	r2, [sp, #460]	; 0x1cc
 8013f86:	4651      	mov	r1, sl
 8013f88:	a81d      	add	r0, sp, #116	; 0x74
 8013f8a:	f002 f985 	bl	8016298 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013f8e:	6820      	ldr	r0, [r4, #0]
 8013f90:	6803      	ldr	r3, [r0, #0]
 8013f92:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013f94:	4798      	blx	r3
 8013f96:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8013f9a:	182e      	adds	r6, r5, r0
 8013f9c:	2e00      	cmp	r6, #0
 8013f9e:	dd51      	ble.n	8014044 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x150>
 8013fa0:	f9b9 3002 	ldrsh.w	r3, [r9, #2]
 8013fa4:	4283      	cmp	r3, r0
 8013fa6:	db4d      	blt.n	8014044 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x150>
 8013fa8:	441d      	add	r5, r3
 8013faa:	fb95 f5f6 	sdiv	r5, r5, r6
 8013fae:	a836      	add	r0, sp, #216	; 0xd8
 8013fb0:	f002 f907 	bl	80161c2 <_ZN8touchgfx12TextProviderC1Ev>
 8013fb4:	7c23      	ldrb	r3, [r4, #16]
 8013fb6:	b17b      	cbz	r3, 8013fd8 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xe4>
 8013fb8:	6820      	ldr	r0, [r4, #0]
 8013fba:	6803      	ldr	r3, [r0, #0]
 8013fbc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013fbe:	4798      	blx	r3
 8013fc0:	9006      	str	r0, [sp, #24]
 8013fc2:	6820      	ldr	r0, [r4, #0]
 8013fc4:	6802      	ldr	r2, [r0, #0]
 8013fc6:	6c92      	ldr	r2, [r2, #72]	; 0x48
 8013fc8:	4790      	blx	r2
 8013fca:	9b06      	ldr	r3, [sp, #24]
 8013fcc:	9000      	str	r0, [sp, #0]
 8013fce:	9a73      	ldr	r2, [sp, #460]	; 0x1cc
 8013fd0:	4651      	mov	r1, sl
 8013fd2:	a836      	add	r0, sp, #216	; 0xd8
 8013fd4:	f002 f960 	bl	8016298 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013fd8:	7be1      	ldrb	r1, [r4, #15]
 8013fda:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8013fde:	7963      	ldrb	r3, [r4, #5]
 8013fe0:	1a52      	subs	r2, r2, r1
 8013fe2:	7c21      	ldrb	r1, [r4, #16]
 8013fe4:	9101      	str	r1, [sp, #4]
 8013fe6:	f10d 0a54 	add.w	sl, sp, #84	; 0x54
 8013fea:	6821      	ldr	r1, [r4, #0]
 8013fec:	9100      	str	r1, [sp, #0]
 8013fee:	b292      	uxth	r2, r2
 8013ff0:	a936      	add	r1, sp, #216	; 0xd8
 8013ff2:	4650      	mov	r0, sl
 8013ff4:	f7ff f8fa 	bl	80131ec <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8013ff8:	7c23      	ldrb	r3, [r4, #16]
 8013ffa:	bb2b      	cbnz	r3, 8014048 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x154>
 8013ffc:	fa1f fa86 	uxth.w	sl, r6
 8014000:	2d00      	cmp	r5, #0
 8014002:	dd53      	ble.n	80140ac <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b8>
 8014004:	a81d      	add	r0, sp, #116	; 0x74
 8014006:	f003 f9d1 	bl	80173ac <_ZN8touchgfx12TextProvider11getNextCharEv>
 801400a:	2800      	cmp	r0, #0
 801400c:	d04b      	beq.n	80140a6 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b2>
 801400e:	280a      	cmp	r0, #10
 8014010:	d1f6      	bne.n	8014000 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x10c>
 8014012:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 8014016:	4453      	add	r3, sl
 8014018:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801401c:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8014020:	eba3 030a 	sub.w	r3, r3, sl
 8014024:	3d01      	subs	r5, #1
 8014026:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 801402a:	e7e9      	b.n	8014000 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x10c>
 801402c:	2f01      	cmp	r7, #1
 801402e:	d107      	bne.n	8014040 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14c>
 8014030:	7923      	ldrb	r3, [r4, #4]
 8014032:	3b02      	subs	r3, #2
 8014034:	bf18      	it	ne
 8014036:	2301      	movne	r3, #1
 8014038:	9305      	str	r3, [sp, #20]
 801403a:	f04f 0801 	mov.w	r8, #1
 801403e:	e793      	b.n	8013f68 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x74>
 8014040:	9505      	str	r5, [sp, #20]
 8014042:	e7fa      	b.n	801403a <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x146>
 8014044:	2500      	movs	r5, #0
 8014046:	e7b2      	b.n	8013fae <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xba>
 8014048:	0073      	lsls	r3, r6, #1
 801404a:	9306      	str	r3, [sp, #24]
 801404c:	2d00      	cmp	r5, #0
 801404e:	dd2d      	ble.n	80140ac <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b8>
 8014050:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 8014054:	9b06      	ldr	r3, [sp, #24]
 8014056:	428b      	cmp	r3, r1
 8014058:	bfd4      	ite	le
 801405a:	2100      	movle	r1, #0
 801405c:	2101      	movgt	r1, #1
 801405e:	4650      	mov	r0, sl
 8014060:	f7ff fe54 	bl	8013d0c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8014064:	f8ba 3012 	ldrh.w	r3, [sl, #18]
 8014068:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801406c:	3b01      	subs	r3, #1
 801406e:	b29b      	uxth	r3, r3
 8014070:	4293      	cmp	r3, r2
 8014072:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8014076:	d006      	beq.n	8014086 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x192>
 8014078:	4639      	mov	r1, r7
 801407a:	a81d      	add	r0, sp, #116	; 0x74
 801407c:	f7f2 fe88 	bl	8006d90 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8014080:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8014084:	e7f2      	b.n	801406c <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x178>
 8014086:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801408a:	b2b3      	uxth	r3, r6
 801408c:	441a      	add	r2, r3
 801408e:	f8ad 203a 	strh.w	r2, [sp, #58]	; 0x3a
 8014092:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 8014096:	1ad3      	subs	r3, r2, r3
 8014098:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 801409c:	f8ba 3000 	ldrh.w	r3, [sl]
 80140a0:	3d01      	subs	r5, #1
 80140a2:	2b00      	cmp	r3, #0
 80140a4:	d1d2      	bne.n	801404c <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x158>
 80140a6:	b069      	add	sp, #420	; 0x1a4
 80140a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80140ac:	2500      	movs	r5, #0
 80140ae:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 80140b2:	f8ad 3048 	strh.w	r3, [sp, #72]	; 0x48
 80140b6:	e9cd 5b10 	strd	r5, fp, [sp, #64]	; 0x40
 80140ba:	e9cd 9413 	strd	r9, r4, [sp, #76]	; 0x4c
 80140be:	0073      	lsls	r3, r6, #1
 80140c0:	9306      	str	r3, [sp, #24]
 80140c2:	f10d 0a74 	add.w	sl, sp, #116	; 0x74
 80140c6:	7c23      	ldrb	r3, [r4, #16]
 80140c8:	f8ad 502e 	strh.w	r5, [sp, #46]	; 0x2e
 80140cc:	b14b      	cbz	r3, 80140e2 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ee>
 80140ce:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 80140d2:	9b06      	ldr	r3, [sp, #24]
 80140d4:	428b      	cmp	r3, r1
 80140d6:	bfd4      	ite	le
 80140d8:	2100      	movle	r1, #0
 80140da:	2101      	movgt	r1, #1
 80140dc:	a815      	add	r0, sp, #84	; 0x54
 80140de:	f7ff fe15 	bl	8013d0c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 80140e2:	f1b8 0f00 	cmp.w	r8, #0
 80140e6:	d069      	beq.n	80141bc <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x2c8>
 80140e8:	9b05      	ldr	r3, [sp, #20]
 80140ea:	2b00      	cmp	r3, #0
 80140ec:	d061      	beq.n	80141b2 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x2be>
 80140ee:	7c23      	ldrb	r3, [r4, #16]
 80140f0:	b9c3      	cbnz	r3, 8014124 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 80140f2:	2264      	movs	r2, #100	; 0x64
 80140f4:	4651      	mov	r1, sl
 80140f6:	a84f      	add	r0, sp, #316	; 0x13c
 80140f8:	f010 fc36 	bl	8024968 <memcpy>
 80140fc:	463b      	mov	r3, r7
 80140fe:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8014102:	6821      	ldr	r1, [r4, #0]
 8014104:	a84f      	add	r0, sp, #316	; 0x13c
 8014106:	f7ff f8ab 	bl	8013260 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801410a:	b200      	sxth	r0, r0
 801410c:	7922      	ldrb	r2, [r4, #4]
 801410e:	2f00      	cmp	r7, #0
 8014110:	d144      	bne.n	801419c <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x2a8>
 8014112:	2a01      	cmp	r2, #1
 8014114:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8014118:	d107      	bne.n	801412a <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x236>
 801411a:	1a1b      	subs	r3, r3, r0
 801411c:	2002      	movs	r0, #2
 801411e:	fb93 f3f0 	sdiv	r3, r3, r0
 8014122:	e005      	b.n	8014130 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23c>
 8014124:	f9bd 006e 	ldrsh.w	r0, [sp, #110]	; 0x6e
 8014128:	e7f0      	b.n	801410c <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x218>
 801412a:	7be2      	ldrb	r2, [r4, #15]
 801412c:	1a9b      	subs	r3, r3, r2
 801412e:	1a1b      	subs	r3, r3, r0
 8014130:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8014134:	7c23      	ldrb	r3, [r4, #16]
 8014136:	2b00      	cmp	r3, #0
 8014138:	d042      	beq.n	80141c0 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x2cc>
 801413a:	f8bd 2066 	ldrh.w	r2, [sp, #102]	; 0x66
 801413e:	f89d 3072 	ldrb.w	r3, [sp, #114]	; 0x72
 8014142:	9807      	ldr	r0, [sp, #28]
 8014144:	f10d 0b40 	add.w	fp, sp, #64	; 0x40
 8014148:	e9cd 3b02 	strd	r3, fp, [sp, #8]
 801414c:	e9cd a200 	strd	sl, r2, [sp]
 8014150:	463b      	mov	r3, r7
 8014152:	6822      	ldr	r2, [r4, #0]
 8014154:	f10d 012e 	add.w	r1, sp, #46	; 0x2e
 8014158:	f7ff fab8 	bl	80136cc <_ZN8touchgfx3LCD17drawStringRTLLineERsPKNS_4FontEhRNS_12TextProviderEibPKNS0_24DrawStringInternalStructE>
 801415c:	f8bb 3008 	ldrh.w	r3, [fp, #8]
 8014160:	b2b2      	uxth	r2, r6
 8014162:	4611      	mov	r1, r2
 8014164:	4413      	add	r3, r2
 8014166:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 801416a:	1a52      	subs	r2, r2, r1
 801416c:	7c21      	ldrb	r1, [r4, #16]
 801416e:	b21b      	sxth	r3, r3
 8014170:	b212      	sxth	r2, r2
 8014172:	f8ab 3008 	strh.w	r3, [fp, #8]
 8014176:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 801417a:	b109      	cbz	r1, 8014180 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x28c>
 801417c:	42b2      	cmp	r2, r6
 801417e:	db92      	blt.n	80140a6 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b2>
 8014180:	f8b9 2006 	ldrh.w	r2, [r9, #6]
 8014184:	f8b9 1002 	ldrh.w	r1, [r9, #2]
 8014188:	440a      	add	r2, r1
 801418a:	b212      	sxth	r2, r2
 801418c:	4293      	cmp	r3, r2
 801418e:	dc8a      	bgt.n	80140a6 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b2>
 8014190:	4650      	mov	r0, sl
 8014192:	f002 f83d 	bl	8016210 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8014196:	2800      	cmp	r0, #0
 8014198:	d095      	beq.n	80140c6 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d2>
 801419a:	e784      	b.n	80140a6 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b2>
 801419c:	2a01      	cmp	r2, #1
 801419e:	d103      	bne.n	80141a8 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x2b4>
 80141a0:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 80141a4:	4403      	add	r3, r0
 80141a6:	e7b9      	b.n	801411c <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x228>
 80141a8:	2a00      	cmp	r2, #0
 80141aa:	d1c3      	bne.n	8014134 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x240>
 80141ac:	7be3      	ldrb	r3, [r4, #15]
 80141ae:	4403      	add	r3, r0
 80141b0:	e7be      	b.n	8014130 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23c>
 80141b2:	7be2      	ldrb	r2, [r4, #15]
 80141b4:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 80141b8:	1a9b      	subs	r3, r3, r2
 80141ba:	e7b9      	b.n	8014130 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23c>
 80141bc:	7be3      	ldrb	r3, [r4, #15]
 80141be:	e7b7      	b.n	8014130 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23c>
 80141c0:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80141c4:	e7bd      	b.n	8014142 <_ZN8touchgfx3LCD13drawStringRTLERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>

080141c6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 80141c6:	b510      	push	{r4, lr}
 80141c8:	2b02      	cmp	r3, #2
 80141ca:	f9b0 4000 	ldrsh.w	r4, [r0]
 80141ce:	d00b      	beq.n	80141e8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 80141d0:	2b03      	cmp	r3, #3
 80141d2:	d00e      	beq.n	80141f2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 80141d4:	2b01      	cmp	r3, #1
 80141d6:	d001      	beq.n	80141dc <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 80141d8:	1860      	adds	r0, r4, r1
 80141da:	bd10      	pop	{r4, pc}
 80141dc:	8880      	ldrh	r0, [r0, #4]
 80141de:	4420      	add	r0, r4
 80141e0:	b200      	sxth	r0, r0
 80141e2:	1a80      	subs	r0, r0, r2
 80141e4:	3801      	subs	r0, #1
 80141e6:	e7f8      	b.n	80141da <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 80141e8:	8880      	ldrh	r0, [r0, #4]
 80141ea:	4420      	add	r0, r4
 80141ec:	b200      	sxth	r0, r0
 80141ee:	1a40      	subs	r0, r0, r1
 80141f0:	e7f8      	b.n	80141e4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 80141f2:	18a0      	adds	r0, r4, r2
 80141f4:	e7f1      	b.n	80141da <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

080141f6 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 80141f6:	b510      	push	{r4, lr}
 80141f8:	2b02      	cmp	r3, #2
 80141fa:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 80141fe:	d006      	beq.n	801420e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 8014200:	2b03      	cmp	r3, #3
 8014202:	d00a      	beq.n	801421a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8014204:	2b01      	cmp	r3, #1
 8014206:	bf14      	ite	ne
 8014208:	18a0      	addne	r0, r4, r2
 801420a:	1860      	addeq	r0, r4, r1
 801420c:	bd10      	pop	{r4, pc}
 801420e:	88c0      	ldrh	r0, [r0, #6]
 8014210:	4420      	add	r0, r4
 8014212:	b200      	sxth	r0, r0
 8014214:	1a80      	subs	r0, r0, r2
 8014216:	3801      	subs	r0, #1
 8014218:	e7f8      	b.n	801420c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 801421a:	88c0      	ldrh	r0, [r0, #6]
 801421c:	4420      	add	r0, r4
 801421e:	b200      	sxth	r0, r0
 8014220:	1a40      	subs	r0, r0, r1
 8014222:	e7f8      	b.n	8014216 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>

08014224 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8014224:	4b01      	ldr	r3, [pc, #4]	; (801422c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8014226:	2200      	movs	r2, #0
 8014228:	601a      	str	r2, [r3, #0]
 801422a:	4770      	bx	lr
 801422c:	20020a98 	.word	0x20020a98

08014230 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8014230:	4603      	mov	r3, r0
 8014232:	b1c8      	cbz	r0, 8014268 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8014234:	0c02      	lsrs	r2, r0, #16
 8014236:	0412      	lsls	r2, r2, #16
 8014238:	b9a2      	cbnz	r2, 8014264 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801423a:	0403      	lsls	r3, r0, #16
 801423c:	2010      	movs	r0, #16
 801423e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8014242:	bf04      	itt	eq
 8014244:	021b      	lsleq	r3, r3, #8
 8014246:	3008      	addeq	r0, #8
 8014248:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801424c:	bf04      	itt	eq
 801424e:	011b      	lsleq	r3, r3, #4
 8014250:	3004      	addeq	r0, #4
 8014252:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8014256:	bf04      	itt	eq
 8014258:	009b      	lsleq	r3, r3, #2
 801425a:	3002      	addeq	r0, #2
 801425c:	2b00      	cmp	r3, #0
 801425e:	db04      	blt.n	801426a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8014260:	3001      	adds	r0, #1
 8014262:	4770      	bx	lr
 8014264:	2000      	movs	r0, #0
 8014266:	e7ea      	b.n	801423e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8014268:	2020      	movs	r0, #32
 801426a:	4770      	bx	lr

0801426c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 801426c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014270:	b087      	sub	sp, #28
 8014272:	4681      	mov	r9, r0
 8014274:	4698      	mov	r8, r3
 8014276:	4610      	mov	r0, r2
 8014278:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 801427c:	460d      	mov	r5, r1
 801427e:	b981      	cbnz	r1, 80142a2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 8014280:	b14b      	cbz	r3, 8014296 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 8014282:	460b      	mov	r3, r1
 8014284:	e9cd 4700 	strd	r4, r7, [sp]
 8014288:	464a      	mov	r2, r9
 801428a:	4641      	mov	r1, r8
 801428c:	f7ff ffee 	bl	801426c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014290:	b007      	add	sp, #28
 8014292:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014296:	f04f 33ff 	mov.w	r3, #4294967295
 801429a:	603b      	str	r3, [r7, #0]
 801429c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80142a0:	e7f6      	b.n	8014290 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 80142a2:	fa32 fa01 	lsrs.w	sl, r2, r1
 80142a6:	d107      	bne.n	80142b8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 80142a8:	fb09 f602 	mul.w	r6, r9, r2
 80142ac:	fbb6 f0f4 	udiv	r0, r6, r4
 80142b0:	fb04 6610 	mls	r6, r4, r0, r6
 80142b4:	603e      	str	r6, [r7, #0]
 80142b6:	e7eb      	b.n	8014290 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 80142b8:	2601      	movs	r6, #1
 80142ba:	408e      	lsls	r6, r1
 80142bc:	3e01      	subs	r6, #1
 80142be:	4016      	ands	r6, r2
 80142c0:	fa09 fb01 	lsl.w	fp, r9, r1
 80142c4:	4630      	mov	r0, r6
 80142c6:	fbbb f3f4 	udiv	r3, fp, r4
 80142ca:	9302      	str	r3, [sp, #8]
 80142cc:	fb0a f303 	mul.w	r3, sl, r3
 80142d0:	9303      	str	r3, [sp, #12]
 80142d2:	f7ff ffad 	bl	8014230 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80142d6:	464a      	mov	r2, r9
 80142d8:	460b      	mov	r3, r1
 80142da:	e9cd 4700 	strd	r4, r7, [sp]
 80142de:	4601      	mov	r1, r0
 80142e0:	4630      	mov	r0, r6
 80142e2:	f7ff ffc3 	bl	801426c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80142e6:	9b02      	ldr	r3, [sp, #8]
 80142e8:	fb04 bb13 	mls	fp, r4, r3, fp
 80142ec:	4606      	mov	r6, r0
 80142ee:	4658      	mov	r0, fp
 80142f0:	eb05 0108 	add.w	r1, r5, r8
 80142f4:	f7ff ff9c 	bl	8014230 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80142f8:	ab05      	add	r3, sp, #20
 80142fa:	e9cd 4300 	strd	r4, r3, [sp]
 80142fe:	465a      	mov	r2, fp
 8014300:	4603      	mov	r3, r0
 8014302:	4650      	mov	r0, sl
 8014304:	f7ff ffb2 	bl	801426c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014308:	6839      	ldr	r1, [r7, #0]
 801430a:	9a05      	ldr	r2, [sp, #20]
 801430c:	9b03      	ldr	r3, [sp, #12]
 801430e:	4411      	add	r1, r2
 8014310:	fbb1 f2f4 	udiv	r2, r1, r4
 8014314:	18d3      	adds	r3, r2, r3
 8014316:	441e      	add	r6, r3
 8014318:	fb04 1412 	mls	r4, r4, r2, r1
 801431c:	4430      	add	r0, r6
 801431e:	603c      	str	r4, [r7, #0]
 8014320:	e7b6      	b.n	8014290 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

08014322 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8014322:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014326:	b085      	sub	sp, #20
 8014328:	f1b0 0900 	subs.w	r9, r0, #0
 801432c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801432e:	461d      	mov	r5, r3
 8014330:	bfbf      	itttt	lt
 8014332:	6823      	ldrlt	r3, [r4, #0]
 8014334:	425b      	neglt	r3, r3
 8014336:	f1c9 0900 	rsblt	r9, r9, #0
 801433a:	6023      	strlt	r3, [r4, #0]
 801433c:	bfb4      	ite	lt
 801433e:	f04f 36ff 	movlt.w	r6, #4294967295
 8014342:	2601      	movge	r6, #1
 8014344:	2a00      	cmp	r2, #0
 8014346:	4617      	mov	r7, r2
 8014348:	da04      	bge.n	8014354 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 801434a:	6823      	ldr	r3, [r4, #0]
 801434c:	425b      	negs	r3, r3
 801434e:	4257      	negs	r7, r2
 8014350:	4276      	negs	r6, r6
 8014352:	6023      	str	r3, [r4, #0]
 8014354:	2d00      	cmp	r5, #0
 8014356:	4638      	mov	r0, r7
 8014358:	bfba      	itte	lt
 801435a:	426d      	neglt	r5, r5
 801435c:	f04f 38ff 	movlt.w	r8, #4294967295
 8014360:	f04f 0801 	movge.w	r8, #1
 8014364:	f7ff ff64 	bl	8014230 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014368:	ab03      	add	r3, sp, #12
 801436a:	e9cd 5300 	strd	r5, r3, [sp]
 801436e:	463a      	mov	r2, r7
 8014370:	4603      	mov	r3, r0
 8014372:	4648      	mov	r0, r9
 8014374:	f7ff ff7a 	bl	801426c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014378:	6823      	ldr	r3, [r4, #0]
 801437a:	9a03      	ldr	r2, [sp, #12]
 801437c:	4546      	cmp	r6, r8
 801437e:	441a      	add	r2, r3
 8014380:	fb92 f3f5 	sdiv	r3, r2, r5
 8014384:	4418      	add	r0, r3
 8014386:	bf18      	it	ne
 8014388:	4240      	negne	r0, r0
 801438a:	fb05 2313 	mls	r3, r5, r3, r2
 801438e:	1c72      	adds	r2, r6, #1
 8014390:	6023      	str	r3, [r4, #0]
 8014392:	d105      	bne.n	80143a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8014394:	2b00      	cmp	r3, #0
 8014396:	f1c3 0200 	rsb	r2, r3, #0
 801439a:	db0b      	blt.n	80143b4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801439c:	6022      	str	r2, [r4, #0]
 801439e:	e006      	b.n	80143ae <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80143a0:	2e01      	cmp	r6, #1
 80143a2:	d104      	bne.n	80143ae <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80143a4:	2b00      	cmp	r3, #0
 80143a6:	da02      	bge.n	80143ae <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80143a8:	442b      	add	r3, r5
 80143aa:	3801      	subs	r0, #1
 80143ac:	6023      	str	r3, [r4, #0]
 80143ae:	b005      	add	sp, #20
 80143b0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80143b4:	3801      	subs	r0, #1
 80143b6:	1b52      	subs	r2, r2, r5
 80143b8:	e7f0      	b.n	801439c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

080143bc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 80143bc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80143c0:	4c1c      	ldr	r4, [pc, #112]	; (8014434 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 80143c2:	6807      	ldr	r7, [r0, #0]
 80143c4:	69a3      	ldr	r3, [r4, #24]
 80143c6:	4605      	mov	r5, r0
 80143c8:	b92b      	cbnz	r3, 80143d6 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 80143ca:	6840      	ldr	r0, [r0, #4]
 80143cc:	e9c5 7000 	strd	r7, r0, [r5]
 80143d0:	b004      	add	sp, #16
 80143d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80143d6:	68a2      	ldr	r2, [r4, #8]
 80143d8:	6820      	ldr	r0, [r4, #0]
 80143da:	ae04      	add	r6, sp, #16
 80143dc:	f04f 0802 	mov.w	r8, #2
 80143e0:	fb93 f1f8 	sdiv	r1, r3, r8
 80143e4:	440a      	add	r2, r1
 80143e6:	f846 2d04 	str.w	r2, [r6, #-4]!
 80143ea:	69e1      	ldr	r1, [r4, #28]
 80143ec:	9600      	str	r6, [sp, #0]
 80143ee:	463a      	mov	r2, r7
 80143f0:	f7ff ff97 	bl	8014322 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80143f4:	69a3      	ldr	r3, [r4, #24]
 80143f6:	686a      	ldr	r2, [r5, #4]
 80143f8:	6a21      	ldr	r1, [r4, #32]
 80143fa:	9600      	str	r6, [sp, #0]
 80143fc:	4607      	mov	r7, r0
 80143fe:	6860      	ldr	r0, [r4, #4]
 8014400:	f7ff ff8f 	bl	8014322 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014404:	6962      	ldr	r2, [r4, #20]
 8014406:	69a3      	ldr	r3, [r4, #24]
 8014408:	fb93 f8f8 	sdiv	r8, r3, r8
 801440c:	4442      	add	r2, r8
 801440e:	9203      	str	r2, [sp, #12]
 8014410:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8014412:	682a      	ldr	r2, [r5, #0]
 8014414:	9600      	str	r6, [sp, #0]
 8014416:	4407      	add	r7, r0
 8014418:	68e0      	ldr	r0, [r4, #12]
 801441a:	f7ff ff82 	bl	8014322 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801441e:	9600      	str	r6, [sp, #0]
 8014420:	4680      	mov	r8, r0
 8014422:	69a3      	ldr	r3, [r4, #24]
 8014424:	686a      	ldr	r2, [r5, #4]
 8014426:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8014428:	6920      	ldr	r0, [r4, #16]
 801442a:	f7ff ff7a 	bl	8014322 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801442e:	4440      	add	r0, r8
 8014430:	e7cc      	b.n	80143cc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8014432:	bf00      	nop
 8014434:	20020a9c 	.word	0x20020a9c

08014438 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8014438:	4b07      	ldr	r3, [pc, #28]	; (8014458 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 801443a:	781b      	ldrb	r3, [r3, #0]
 801443c:	2b01      	cmp	r3, #1
 801443e:	d109      	bne.n	8014454 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8014440:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014444:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014448:	8003      	strh	r3, [r0, #0]
 801444a:	4b04      	ldr	r3, [pc, #16]	; (801445c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 801444c:	881b      	ldrh	r3, [r3, #0]
 801444e:	3b01      	subs	r3, #1
 8014450:	1a9b      	subs	r3, r3, r2
 8014452:	800b      	strh	r3, [r1, #0]
 8014454:	4770      	bx	lr
 8014456:	bf00      	nop
 8014458:	20020a88 	.word	0x20020a88
 801445c:	20020a8c 	.word	0x20020a8c

08014460 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8014460:	b510      	push	{r4, lr}
 8014462:	4b07      	ldr	r3, [pc, #28]	; (8014480 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8014464:	781b      	ldrb	r3, [r3, #0]
 8014466:	2b01      	cmp	r3, #1
 8014468:	d108      	bne.n	801447c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 801446a:	4b06      	ldr	r3, [pc, #24]	; (8014484 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 801446c:	880c      	ldrh	r4, [r1, #0]
 801446e:	881b      	ldrh	r3, [r3, #0]
 8014470:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014474:	3b01      	subs	r3, #1
 8014476:	1b1b      	subs	r3, r3, r4
 8014478:	8003      	strh	r3, [r0, #0]
 801447a:	800a      	strh	r2, [r1, #0]
 801447c:	bd10      	pop	{r4, pc}
 801447e:	bf00      	nop
 8014480:	20020a88 	.word	0x20020a88
 8014484:	20020a8c 	.word	0x20020a8c

08014488 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8014488:	b510      	push	{r4, lr}
 801448a:	4b0a      	ldr	r3, [pc, #40]	; (80144b4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 801448c:	781b      	ldrb	r3, [r3, #0]
 801448e:	2b01      	cmp	r3, #1
 8014490:	d10e      	bne.n	80144b0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8014492:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8014496:	8843      	ldrh	r3, [r0, #2]
 8014498:	f9b0 4000 	ldrsh.w	r4, [r0]
 801449c:	8044      	strh	r4, [r0, #2]
 801449e:	18ca      	adds	r2, r1, r3
 80144a0:	4b05      	ldr	r3, [pc, #20]	; (80144b8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 80144a2:	881b      	ldrh	r3, [r3, #0]
 80144a4:	1a9b      	subs	r3, r3, r2
 80144a6:	8003      	strh	r3, [r0, #0]
 80144a8:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80144ac:	80c3      	strh	r3, [r0, #6]
 80144ae:	8081      	strh	r1, [r0, #4]
 80144b0:	bd10      	pop	{r4, pc}
 80144b2:	bf00      	nop
 80144b4:	20020a88 	.word	0x20020a88
 80144b8:	20020a8c 	.word	0x20020a8c

080144bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 80144bc:	4b08      	ldr	r3, [pc, #32]	; (80144e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 80144be:	781b      	ldrb	r3, [r3, #0]
 80144c0:	2b01      	cmp	r3, #1
 80144c2:	d10c      	bne.n	80144de <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 80144c4:	8803      	ldrh	r3, [r0, #0]
 80144c6:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 80144ca:	8842      	ldrh	r2, [r0, #2]
 80144cc:	8002      	strh	r2, [r0, #0]
 80144ce:	185a      	adds	r2, r3, r1
 80144d0:	4b04      	ldr	r3, [pc, #16]	; (80144e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 80144d2:	881b      	ldrh	r3, [r3, #0]
 80144d4:	1a9b      	subs	r3, r3, r2
 80144d6:	8043      	strh	r3, [r0, #2]
 80144d8:	88c3      	ldrh	r3, [r0, #6]
 80144da:	8083      	strh	r3, [r0, #4]
 80144dc:	80c1      	strh	r1, [r0, #6]
 80144de:	4770      	bx	lr
 80144e0:	20020a88 	.word	0x20020a88
 80144e4:	20020a8c 	.word	0x20020a8c

080144e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 80144e8:	b510      	push	{r4, lr}
 80144ea:	4b07      	ldr	r3, [pc, #28]	; (8014508 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 80144ec:	781b      	ldrb	r3, [r3, #0]
 80144ee:	2b01      	cmp	r3, #1
 80144f0:	d108      	bne.n	8014504 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 80144f2:	f9b1 3000 	ldrsh.w	r3, [r1]
 80144f6:	f9b0 4000 	ldrsh.w	r4, [r0]
 80144fa:	8003      	strh	r3, [r0, #0]
 80144fc:	8893      	ldrh	r3, [r2, #4]
 80144fe:	3b01      	subs	r3, #1
 8014500:	1b1b      	subs	r3, r3, r4
 8014502:	800b      	strh	r3, [r1, #0]
 8014504:	bd10      	pop	{r4, pc}
 8014506:	bf00      	nop
 8014508:	20020a88 	.word	0x20020a88

0801450c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 801450c:	b510      	push	{r4, lr}
 801450e:	4b0a      	ldr	r3, [pc, #40]	; (8014538 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8014510:	781b      	ldrb	r3, [r3, #0]
 8014512:	2b01      	cmp	r3, #1
 8014514:	460a      	mov	r2, r1
 8014516:	d10d      	bne.n	8014534 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8014518:	8881      	ldrh	r1, [r0, #4]
 801451a:	8803      	ldrh	r3, [r0, #0]
 801451c:	440b      	add	r3, r1
 801451e:	4601      	mov	r1, r0
 8014520:	3b01      	subs	r3, #1
 8014522:	f821 3b02 	strh.w	r3, [r1], #2
 8014526:	f7ff ffdf 	bl	80144e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 801452a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801452e:	88c2      	ldrh	r2, [r0, #6]
 8014530:	8082      	strh	r2, [r0, #4]
 8014532:	80c3      	strh	r3, [r0, #6]
 8014534:	bd10      	pop	{r4, pc}
 8014536:	bf00      	nop
 8014538:	20020a88 	.word	0x20020a88

0801453c <_ZN8touchgfx11Application13requestRedrawEv>:
 801453c:	4b06      	ldr	r3, [pc, #24]	; (8014558 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 801453e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014542:	4b06      	ldr	r3, [pc, #24]	; (801455c <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8014544:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 8014548:	f9b3 3000 	ldrsh.w	r3, [r3]
 801454c:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 8014550:	2100      	movs	r1, #0
 8014552:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 8014556:	4770      	bx	lr
 8014558:	20020a84 	.word	0x20020a84
 801455c:	20020a86 	.word	0x20020a86

08014560 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8014560:	4b03      	ldr	r3, [pc, #12]	; (8014570 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8014562:	6818      	ldr	r0, [r3, #0]
 8014564:	b110      	cbz	r0, 801456c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8014566:	6803      	ldr	r3, [r0, #0]
 8014568:	699b      	ldr	r3, [r3, #24]
 801456a:	4718      	bx	r3
 801456c:	4770      	bx	lr
 801456e:	bf00      	nop
 8014570:	20020acc 	.word	0x20020acc

08014574 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8014574:	4770      	bx	lr
	...

08014578 <_ZN8touchgfx11Application4drawEv>:
 8014578:	b507      	push	{r0, r1, r2, lr}
 801457a:	4b09      	ldr	r3, [pc, #36]	; (80145a0 <_ZN8touchgfx11Application4drawEv+0x28>)
 801457c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014580:	4b08      	ldr	r3, [pc, #32]	; (80145a4 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8014582:	f8ad 2004 	strh.w	r2, [sp, #4]
 8014586:	f9b3 3000 	ldrsh.w	r3, [r3]
 801458a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801458e:	6803      	ldr	r3, [r0, #0]
 8014590:	2100      	movs	r1, #0
 8014592:	9100      	str	r1, [sp, #0]
 8014594:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8014596:	4669      	mov	r1, sp
 8014598:	4798      	blx	r3
 801459a:	b003      	add	sp, #12
 801459c:	f85d fb04 	ldr.w	pc, [sp], #4
 80145a0:	20020a84 	.word	0x20020a84
 80145a4:	20020a86 	.word	0x20020a86

080145a8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 80145a8:	4b03      	ldr	r3, [pc, #12]	; (80145b8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 80145aa:	6818      	ldr	r0, [r3, #0]
 80145ac:	b110      	cbz	r0, 80145b4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 80145ae:	6803      	ldr	r3, [r0, #0]
 80145b0:	69db      	ldr	r3, [r3, #28]
 80145b2:	4718      	bx	r3
 80145b4:	4770      	bx	lr
 80145b6:	bf00      	nop
 80145b8:	20020acc 	.word	0x20020acc

080145bc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 80145bc:	4b03      	ldr	r3, [pc, #12]	; (80145cc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 80145be:	6818      	ldr	r0, [r3, #0]
 80145c0:	b110      	cbz	r0, 80145c8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 80145c2:	6803      	ldr	r3, [r0, #0]
 80145c4:	6a1b      	ldr	r3, [r3, #32]
 80145c6:	4718      	bx	r3
 80145c8:	4770      	bx	lr
 80145ca:	bf00      	nop
 80145cc:	20020acc 	.word	0x20020acc

080145d0 <_ZN8touchgfx11Application14handleKeyEventEh>:
 80145d0:	4b03      	ldr	r3, [pc, #12]	; (80145e0 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 80145d2:	6818      	ldr	r0, [r3, #0]
 80145d4:	b110      	cbz	r0, 80145dc <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80145d6:	6803      	ldr	r3, [r0, #0]
 80145d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80145da:	4718      	bx	r3
 80145dc:	4770      	bx	lr
 80145de:	bf00      	nop
 80145e0:	20020acc 	.word	0x20020acc

080145e4 <_ZN8touchgfx11ApplicationD1Ev>:
 80145e4:	4770      	bx	lr

080145e6 <_ZN8touchgfx11ApplicationD0Ev>:
 80145e6:	b510      	push	{r4, lr}
 80145e8:	f44f 719c 	mov.w	r1, #312	; 0x138
 80145ec:	4604      	mov	r4, r0
 80145ee:	f00f fef4 	bl	80243da <_ZdlPvj>
 80145f2:	4620      	mov	r0, r4
 80145f4:	bd10      	pop	{r4, pc}
	...

080145f8 <_ZN8touchgfx11Application15handleTickEventEv>:
 80145f8:	b570      	push	{r4, r5, r6, lr}
 80145fa:	4d38      	ldr	r5, [pc, #224]	; (80146dc <_ZN8touchgfx11Application15handleTickEventEv+0xe4>)
 80145fc:	4604      	mov	r4, r0
 80145fe:	6828      	ldr	r0, [r5, #0]
 8014600:	b140      	cbz	r0, 8014614 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8014602:	7a03      	ldrb	r3, [r0, #8]
 8014604:	b933      	cbnz	r3, 8014614 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8014606:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 801460a:	6803      	ldr	r3, [r0, #0]
 801460c:	689b      	ldr	r3, [r3, #8]
 801460e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014612:	4718      	bx	r3
 8014614:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
 8014618:	b97b      	cbnz	r3, 801463a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801461a:	b170      	cbz	r0, 801463a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801461c:	7a03      	ldrb	r3, [r0, #8]
 801461e:	b163      	cbz	r3, 801463a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8014620:	4b2f      	ldr	r3, [pc, #188]	; (80146e0 <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 8014622:	6818      	ldr	r0, [r3, #0]
 8014624:	b110      	cbz	r0, 801462c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8014626:	6803      	ldr	r3, [r0, #0]
 8014628:	691b      	ldr	r3, [r3, #16]
 801462a:	4798      	blx	r3
 801462c:	6828      	ldr	r0, [r5, #0]
 801462e:	6803      	ldr	r3, [r0, #0]
 8014630:	68db      	ldr	r3, [r3, #12]
 8014632:	4798      	blx	r3
 8014634:	2301      	movs	r3, #1
 8014636:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 801463a:	2500      	movs	r5, #0
 801463c:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 8014640:	42a8      	cmp	r0, r5
 8014642:	dd0c      	ble.n	801465e <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 8014644:	1963      	adds	r3, r4, r5
 8014646:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 801464a:	b132      	cbz	r2, 801465a <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 801464c:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 8014650:	4413      	add	r3, r2
 8014652:	6858      	ldr	r0, [r3, #4]
 8014654:	6803      	ldr	r3, [r0, #0]
 8014656:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014658:	4798      	blx	r3
 801465a:	3501      	adds	r5, #1
 801465c:	e7ee      	b.n	801463c <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 801465e:	2300      	movs	r3, #0
 8014660:	461a      	mov	r2, r3
 8014662:	4298      	cmp	r0, r3
 8014664:	d10f      	bne.n	8014686 <_ZN8touchgfx11Application15handleTickEventEv+0x8e>
 8014666:	1d25      	adds	r5, r4, #4
 8014668:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 801466c:	4291      	cmp	r1, r2
 801466e:	dd2d      	ble.n	80146cc <_ZN8touchgfx11Application15handleTickEventEv+0xd4>
 8014670:	1e48      	subs	r0, r1, #1
 8014672:	b280      	uxth	r0, r0
 8014674:	4288      	cmp	r0, r1
 8014676:	d31a      	bcc.n	80146ae <_ZN8touchgfx11Application15handleTickEventEv+0xb6>
 8014678:	4b1a      	ldr	r3, [pc, #104]	; (80146e4 <_ZN8touchgfx11Application15handleTickEventEv+0xec>)
 801467a:	4a1b      	ldr	r2, [pc, #108]	; (80146e8 <_ZN8touchgfx11Application15handleTickEventEv+0xf0>)
 801467c:	481b      	ldr	r0, [pc, #108]	; (80146ec <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 801467e:	f240 11a9 	movw	r1, #425	; 0x1a9
 8014682:	f00f fed9 	bl	8024438 <__assert_func>
 8014686:	18e1      	adds	r1, r4, r3
 8014688:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 801468c:	b16d      	cbz	r5, 80146aa <_ZN8touchgfx11Application15handleTickEventEv+0xb2>
 801468e:	429a      	cmp	r2, r3
 8014690:	d00a      	beq.n	80146a8 <_ZN8touchgfx11Application15handleTickEventEv+0xb0>
 8014692:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 8014696:	4431      	add	r1, r6
 8014698:	684e      	ldr	r6, [r1, #4]
 801469a:	b291      	uxth	r1, r2
 801469c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80146a0:	604e      	str	r6, [r1, #4]
 80146a2:	18a1      	adds	r1, r4, r2
 80146a4:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 80146a8:	3201      	adds	r2, #1
 80146aa:	3301      	adds	r3, #1
 80146ac:	e7d9      	b.n	8014662 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 80146ae:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 80146b2:	3304      	adds	r3, #4
 80146b4:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 80146b8:	428b      	cmp	r3, r1
 80146ba:	d004      	beq.n	80146c6 <_ZN8touchgfx11Application15handleTickEventEv+0xce>
 80146bc:	f853 6f04 	ldr.w	r6, [r3, #4]!
 80146c0:	f843 6c04 	str.w	r6, [r3, #-4]
 80146c4:	e7f8      	b.n	80146b8 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 80146c6:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 80146ca:	e7cd      	b.n	8014668 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 80146cc:	4b04      	ldr	r3, [pc, #16]	; (80146e0 <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 80146ce:	6818      	ldr	r0, [r3, #0]
 80146d0:	b110      	cbz	r0, 80146d8 <_ZN8touchgfx11Application15handleTickEventEv+0xe0>
 80146d2:	6803      	ldr	r3, [r0, #0]
 80146d4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80146d6:	e79a      	b.n	801460e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 80146d8:	bd70      	pop	{r4, r5, r6, pc}
 80146da:	bf00      	nop
 80146dc:	20020ad0 	.word	0x20020ad0
 80146e0:	20020acc 	.word	0x20020acc
 80146e4:	08029fbc 	.word	0x08029fbc
 80146e8:	0802a215 	.word	0x0802a215
 80146ec:	08029fca 	.word	0x08029fca

080146f0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 80146f0:	b570      	push	{r4, r5, r6, lr}
 80146f2:	4606      	mov	r6, r0
 80146f4:	460c      	mov	r4, r1
 80146f6:	b929      	cbnz	r1, 8014704 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 80146f8:	4b0c      	ldr	r3, [pc, #48]	; (801472c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 80146fa:	4a0d      	ldr	r2, [pc, #52]	; (8014730 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 80146fc:	480d      	ldr	r0, [pc, #52]	; (8014734 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 80146fe:	2167      	movs	r1, #103	; 0x67
 8014700:	f00f fe9a 	bl	8024438 <__assert_func>
 8014704:	4d0c      	ldr	r5, [pc, #48]	; (8014738 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 8014706:	2300      	movs	r3, #0
 8014708:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 801470c:	6828      	ldr	r0, [r5, #0]
 801470e:	b110      	cbz	r0, 8014716 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 8014710:	6803      	ldr	r3, [r0, #0]
 8014712:	695b      	ldr	r3, [r3, #20]
 8014714:	4798      	blx	r3
 8014716:	602c      	str	r4, [r5, #0]
 8014718:	6823      	ldr	r3, [r4, #0]
 801471a:	4620      	mov	r0, r4
 801471c:	68db      	ldr	r3, [r3, #12]
 801471e:	4798      	blx	r3
 8014720:	6833      	ldr	r3, [r6, #0]
 8014722:	4630      	mov	r0, r6
 8014724:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014726:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801472a:	4718      	bx	r3
 801472c:	08029f88 	.word	0x08029f88
 8014730:	0802a090 	.word	0x0802a090
 8014734:	08029f92 	.word	0x08029f92
 8014738:	20020acc 	.word	0x20020acc

0801473c <_ZNK8touchgfx4Rect9intersectERKS0_>:
 801473c:	b510      	push	{r4, lr}
 801473e:	f9b1 4000 	ldrsh.w	r4, [r1]
 8014742:	888a      	ldrh	r2, [r1, #4]
 8014744:	f9b0 3000 	ldrsh.w	r3, [r0]
 8014748:	4422      	add	r2, r4
 801474a:	b212      	sxth	r2, r2
 801474c:	4293      	cmp	r3, r2
 801474e:	da15      	bge.n	801477c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014750:	8882      	ldrh	r2, [r0, #4]
 8014752:	4413      	add	r3, r2
 8014754:	b21b      	sxth	r3, r3
 8014756:	429c      	cmp	r4, r3
 8014758:	da10      	bge.n	801477c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801475a:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801475e:	88c9      	ldrh	r1, [r1, #6]
 8014760:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8014764:	4419      	add	r1, r3
 8014766:	b209      	sxth	r1, r1
 8014768:	428a      	cmp	r2, r1
 801476a:	da07      	bge.n	801477c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801476c:	88c0      	ldrh	r0, [r0, #6]
 801476e:	4410      	add	r0, r2
 8014770:	b200      	sxth	r0, r0
 8014772:	4283      	cmp	r3, r0
 8014774:	bfac      	ite	ge
 8014776:	2000      	movge	r0, #0
 8014778:	2001      	movlt	r0, #1
 801477a:	bd10      	pop	{r4, pc}
 801477c:	2000      	movs	r0, #0
 801477e:	e7fc      	b.n	801477a <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08014780 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8014780:	b570      	push	{r4, r5, r6, lr}
 8014782:	f9b1 4000 	ldrsh.w	r4, [r1]
 8014786:	f9b0 5000 	ldrsh.w	r5, [r0]
 801478a:	42ac      	cmp	r4, r5
 801478c:	db18      	blt.n	80147c0 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 801478e:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 8014792:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8014796:	429a      	cmp	r2, r3
 8014798:	db12      	blt.n	80147c0 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 801479a:	8886      	ldrh	r6, [r0, #4]
 801479c:	4435      	add	r5, r6
 801479e:	888e      	ldrh	r6, [r1, #4]
 80147a0:	4434      	add	r4, r6
 80147a2:	b22d      	sxth	r5, r5
 80147a4:	b224      	sxth	r4, r4
 80147a6:	42a5      	cmp	r5, r4
 80147a8:	db0a      	blt.n	80147c0 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 80147aa:	88c0      	ldrh	r0, [r0, #6]
 80147ac:	4418      	add	r0, r3
 80147ae:	88cb      	ldrh	r3, [r1, #6]
 80147b0:	441a      	add	r2, r3
 80147b2:	b200      	sxth	r0, r0
 80147b4:	b212      	sxth	r2, r2
 80147b6:	4290      	cmp	r0, r2
 80147b8:	bfb4      	ite	lt
 80147ba:	2000      	movlt	r0, #0
 80147bc:	2001      	movge	r0, #1
 80147be:	bd70      	pop	{r4, r5, r6, pc}
 80147c0:	2000      	movs	r0, #0
 80147c2:	e7fc      	b.n	80147be <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

080147c4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 80147c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80147c6:	4604      	mov	r4, r0
 80147c8:	4608      	mov	r0, r1
 80147ca:	460d      	mov	r5, r1
 80147cc:	f7fc f80b 	bl	80107e6 <_ZNK8touchgfx4Rect7isEmptyEv>
 80147d0:	b978      	cbnz	r0, 80147f2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 80147d2:	4620      	mov	r0, r4
 80147d4:	f7fc f807 	bl	80107e6 <_ZNK8touchgfx4Rect7isEmptyEv>
 80147d8:	f9b5 6000 	ldrsh.w	r6, [r5]
 80147dc:	b150      	cbz	r0, 80147f4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 80147de:	8026      	strh	r6, [r4, #0]
 80147e0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80147e4:	8063      	strh	r3, [r4, #2]
 80147e6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 80147ea:	80a3      	strh	r3, [r4, #4]
 80147ec:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80147f0:	80e3      	strh	r3, [r4, #6]
 80147f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80147f4:	f9b4 1000 	ldrsh.w	r1, [r4]
 80147f8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80147fc:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8014800:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8014804:	88ed      	ldrh	r5, [r5, #6]
 8014806:	42b1      	cmp	r1, r6
 8014808:	460f      	mov	r7, r1
 801480a:	bfa8      	it	ge
 801480c:	4637      	movge	r7, r6
 801480e:	4293      	cmp	r3, r2
 8014810:	4618      	mov	r0, r3
 8014812:	4466      	add	r6, ip
 8014814:	bfa8      	it	ge
 8014816:	4610      	movge	r0, r2
 8014818:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 801481c:	8027      	strh	r7, [r4, #0]
 801481e:	442a      	add	r2, r5
 8014820:	88e5      	ldrh	r5, [r4, #6]
 8014822:	8060      	strh	r0, [r4, #2]
 8014824:	4461      	add	r1, ip
 8014826:	442b      	add	r3, r5
 8014828:	b236      	sxth	r6, r6
 801482a:	b209      	sxth	r1, r1
 801482c:	b212      	sxth	r2, r2
 801482e:	b21b      	sxth	r3, r3
 8014830:	428e      	cmp	r6, r1
 8014832:	bfac      	ite	ge
 8014834:	ebc7 0106 	rsbge	r1, r7, r6
 8014838:	ebc7 0101 	rsblt	r1, r7, r1
 801483c:	429a      	cmp	r2, r3
 801483e:	bfac      	ite	ge
 8014840:	ebc0 0202 	rsbge	r2, r0, r2
 8014844:	ebc0 0203 	rsblt	r2, r0, r3
 8014848:	80a1      	strh	r1, [r4, #4]
 801484a:	80e2      	strh	r2, [r4, #6]
 801484c:	e7d1      	b.n	80147f2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08014850 <_ZN8touchgfx11Application11getInstanceEv>:
 8014850:	4b01      	ldr	r3, [pc, #4]	; (8014858 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8014852:	6818      	ldr	r0, [r3, #0]
 8014854:	4770      	bx	lr
 8014856:	bf00      	nop
 8014858:	20020adc 	.word	0x20020adc

0801485c <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>:
 801485c:	b570      	push	{r4, r5, r6, lr}
 801485e:	f8b0 3084 	ldrh.w	r3, [r0, #132]	; 0x84
 8014862:	1d04      	adds	r4, r0, #4
 8014864:	2200      	movs	r2, #0
 8014866:	b295      	uxth	r5, r2
 8014868:	42ab      	cmp	r3, r5
 801486a:	d90f      	bls.n	801488c <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x30>
 801486c:	f854 6b04 	ldr.w	r6, [r4], #4
 8014870:	428e      	cmp	r6, r1
 8014872:	4615      	mov	r5, r2
 8014874:	f102 0201 	add.w	r2, r2, #1
 8014878:	d1f5      	bne.n	8014866 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0xa>
 801487a:	4428      	add	r0, r5
 801487c:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 8014880:	2bff      	cmp	r3, #255	; 0xff
 8014882:	d002      	beq.n	801488a <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 8014884:	3301      	adds	r3, #1
 8014886:	f880 3088 	strb.w	r3, [r0, #136]	; 0x88
 801488a:	bd70      	pop	{r4, r5, r6, pc}
 801488c:	2b20      	cmp	r3, #32
 801488e:	d106      	bne.n	801489e <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x42>
 8014890:	4b08      	ldr	r3, [pc, #32]	; (80148b4 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x58>)
 8014892:	4a09      	ldr	r2, [pc, #36]	; (80148b8 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x5c>)
 8014894:	4809      	ldr	r0, [pc, #36]	; (80148bc <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x60>)
 8014896:	f240 215f 	movw	r1, #607	; 0x25f
 801489a:	f00f fdcd 	bl	8024438 <__assert_func>
 801489e:	18c2      	adds	r2, r0, r3
 80148a0:	2401      	movs	r4, #1
 80148a2:	f882 4088 	strb.w	r4, [r2, #136]	; 0x88
 80148a6:	191a      	adds	r2, r3, r4
 80148a8:	f8a0 2084 	strh.w	r2, [r0, #132]	; 0x84
 80148ac:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 80148b0:	6041      	str	r1, [r0, #4]
 80148b2:	e7ea      	b.n	801488a <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 80148b4:	08029ff3 	.word	0x08029ff3
 80148b8:	0802a0d4 	.word	0x0802a0d4
 80148bc:	08029f92 	.word	0x08029f92

080148c0 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>:
 80148c0:	b570      	push	{r4, r5, r6, lr}
 80148c2:	f8b0 6084 	ldrh.w	r6, [r0, #132]	; 0x84
 80148c6:	1d04      	adds	r4, r0, #4
 80148c8:	2300      	movs	r3, #0
 80148ca:	b29a      	uxth	r2, r3
 80148cc:	4296      	cmp	r6, r2
 80148ce:	d90a      	bls.n	80148e6 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x26>
 80148d0:	f854 2b04 	ldr.w	r2, [r4], #4
 80148d4:	428a      	cmp	r2, r1
 80148d6:	d107      	bne.n	80148e8 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 80148d8:	18c5      	adds	r5, r0, r3
 80148da:	f895 2088 	ldrb.w	r2, [r5, #136]	; 0x88
 80148de:	b11a      	cbz	r2, 80148e8 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 80148e0:	3a01      	subs	r2, #1
 80148e2:	f885 2088 	strb.w	r2, [r5, #136]	; 0x88
 80148e6:	bd70      	pop	{r4, r5, r6, pc}
 80148e8:	3301      	adds	r3, #1
 80148ea:	e7ee      	b.n	80148ca <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0xa>

080148ec <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 80148ec:	2300      	movs	r3, #0
 80148ee:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 80148f2:	f100 0288 	add.w	r2, r0, #136	; 0x88
 80148f6:	30a8      	adds	r0, #168	; 0xa8
 80148f8:	f802 3b01 	strb.w	r3, [r2], #1
 80148fc:	4282      	cmp	r2, r0
 80148fe:	d1fb      	bne.n	80148f8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 8014900:	4770      	bx	lr

08014902 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8014902:	4603      	mov	r3, r0
 8014904:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8014908:	2200      	movs	r2, #0
 801490a:	801a      	strh	r2, [r3, #0]
 801490c:	805a      	strh	r2, [r3, #2]
 801490e:	809a      	strh	r2, [r3, #4]
 8014910:	80da      	strh	r2, [r3, #6]
 8014912:	3308      	adds	r3, #8
 8014914:	428b      	cmp	r3, r1
 8014916:	d1f8      	bne.n	801490a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8014918:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 801491c:	4770      	bx	lr
	...

08014920 <_ZN8touchgfx11ApplicationC1Ev>:
 8014920:	b570      	push	{r4, r5, r6, lr}
 8014922:	4b1a      	ldr	r3, [pc, #104]	; (801498c <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 8014924:	6003      	str	r3, [r0, #0]
 8014926:	2500      	movs	r5, #0
 8014928:	4604      	mov	r4, r0
 801492a:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 801492e:	30a8      	adds	r0, #168	; 0xa8
 8014930:	f7ff ffe7 	bl	8014902 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014934:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 8014938:	f7ff ffe3 	bl	8014902 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801493c:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 8014940:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 8014944:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8014948:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 801494c:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 8014950:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 8014954:	490e      	ldr	r1, [pc, #56]	; (8014990 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 8014956:	480f      	ldr	r0, [pc, #60]	; (8014994 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 8014958:	4e0f      	ldr	r6, [pc, #60]	; (8014998 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 801495a:	f00f fc31 	bl	80241c0 <CRC_Lock>
 801495e:	4b0f      	ldr	r3, [pc, #60]	; (801499c <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8014960:	b158      	cbz	r0, 801497a <_ZN8touchgfx11ApplicationC1Ev+0x5a>
 8014962:	801d      	strh	r5, [r3, #0]
 8014964:	4a0e      	ldr	r2, [pc, #56]	; (80149a0 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8014966:	2300      	movs	r3, #0
 8014968:	6013      	str	r3, [r2, #0]
 801496a:	4a0e      	ldr	r2, [pc, #56]	; (80149a4 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 801496c:	6033      	str	r3, [r6, #0]
 801496e:	4620      	mov	r0, r4
 8014970:	6013      	str	r3, [r2, #0]
 8014972:	f7ff ffbb 	bl	80148ec <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 8014976:	4620      	mov	r0, r4
 8014978:	bd70      	pop	{r4, r5, r6, pc}
 801497a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 801497e:	2002      	movs	r0, #2
 8014980:	801a      	strh	r2, [r3, #0]
 8014982:	6030      	str	r0, [r6, #0]
 8014984:	f001 f9e2 	bl	8015d4c <_ZN8touchgfx6Screen4drawEv>
 8014988:	e7ec      	b.n	8014964 <_ZN8touchgfx11ApplicationC1Ev+0x44>
 801498a:	bf00      	nop
 801498c:	0802a054 	.word	0x0802a054
 8014990:	b5e8b5cd 	.word	0xb5e8b5cd
 8014994:	f407a5c2 	.word	0xf407a5c2
 8014998:	20020acc 	.word	0x20020acc
 801499c:	20000064 	.word	0x20000064
 80149a0:	20020adc 	.word	0x20020adc
 80149a4:	20020ad0 	.word	0x20020ad0

080149a8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 80149a8:	b510      	push	{r4, lr}
 80149aa:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 80149ae:	428b      	cmp	r3, r1
 80149b0:	d806      	bhi.n	80149c0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x18>
 80149b2:	4b0b      	ldr	r3, [pc, #44]	; (80149e0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x38>)
 80149b4:	4a0b      	ldr	r2, [pc, #44]	; (80149e4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3c>)
 80149b6:	480c      	ldr	r0, [pc, #48]	; (80149e8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x40>)
 80149b8:	f44f 71de 	mov.w	r1, #444	; 0x1bc
 80149bc:	f00f fd3c 	bl	8024438 <__assert_func>
 80149c0:	3b01      	subs	r3, #1
 80149c2:	b29b      	uxth	r3, r3
 80149c4:	428b      	cmp	r3, r1
 80149c6:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 80149ca:	d908      	bls.n	80149de <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x36>
 80149cc:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 80149d0:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 80149d4:	681a      	ldr	r2, [r3, #0]
 80149d6:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 80149da:	685a      	ldr	r2, [r3, #4]
 80149dc:	6062      	str	r2, [r4, #4]
 80149de:	bd10      	pop	{r4, pc}
 80149e0:	08029fbc 	.word	0x08029fbc
 80149e4:	0802a119 	.word	0x0802a119
 80149e8:	08029fca 	.word	0x08029fca

080149ec <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 80149ec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80149ee:	466b      	mov	r3, sp
 80149f0:	e883 0006 	stmia.w	r3, {r1, r2}
 80149f4:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 80149f8:	2a07      	cmp	r2, #7
 80149fa:	4604      	mov	r4, r0
 80149fc:	d906      	bls.n	8014a0c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 80149fe:	4b09      	ldr	r3, [pc, #36]	; (8014a24 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 8014a00:	4a09      	ldr	r2, [pc, #36]	; (8014a28 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 8014a02:	480a      	ldr	r0, [pc, #40]	; (8014a2c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 8014a04:	f44f 71c1 	mov.w	r1, #386	; 0x182
 8014a08:	f00f fd16 	bl	8024438 <__assert_func>
 8014a0c:	1c51      	adds	r1, r2, #1
 8014a0e:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8014a12:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 8014a16:	cb03      	ldmia	r3!, {r0, r1}
 8014a18:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 8014a1c:	6069      	str	r1, [r5, #4]
 8014a1e:	b003      	add	sp, #12
 8014a20:	bd30      	pop	{r4, r5, pc}
 8014a22:	bf00      	nop
 8014a24:	0802a01b 	.word	0x0802a01b
 8014a28:	0802a1af 	.word	0x0802a1af
 8014a2c:	08029fca 	.word	0x08029fca

08014a30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8014a30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014a34:	b08d      	sub	sp, #52	; 0x34
 8014a36:	ac08      	add	r4, sp, #32
 8014a38:	4683      	mov	fp, r0
 8014a3a:	4620      	mov	r0, r4
 8014a3c:	e884 0006 	stmia.w	r4, {r1, r2}
 8014a40:	f7fb fed1 	bl	80107e6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014a44:	2800      	cmp	r0, #0
 8014a46:	d16a      	bne.n	8014b1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 8014a48:	9402      	str	r4, [sp, #8]
 8014a4a:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 8014a4e:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8014a52:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 8014a56:	2400      	movs	r4, #0
 8014a58:	9301      	str	r3, [sp, #4]
 8014a5a:	36a0      	adds	r6, #160	; 0xa0
 8014a5c:	42a5      	cmp	r5, r4
 8014a5e:	d00d      	beq.n	8014a7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c>
 8014a60:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 8014a64:	9802      	ldr	r0, [sp, #8]
 8014a66:	f7ff fe8b 	bl	8014780 <_ZNK8touchgfx4Rect8includesERKS0_>
 8014a6a:	b128      	cbz	r0, 8014a78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 8014a6c:	1e69      	subs	r1, r5, #1
 8014a6e:	1b09      	subs	r1, r1, r4
 8014a70:	b289      	uxth	r1, r1
 8014a72:	9801      	ldr	r0, [sp, #4]
 8014a74:	f7ff ff98 	bl	80149a8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014a78:	3401      	adds	r4, #1
 8014a7a:	e7ef      	b.n	8014a5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014a7c:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 8014a80:	9703      	str	r7, [sp, #12]
 8014a82:	1e7b      	subs	r3, r7, #1
 8014a84:	9300      	str	r3, [sp, #0]
 8014a86:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 8014a8a:	2400      	movs	r4, #0
 8014a8c:	4655      	mov	r5, sl
 8014a8e:	9704      	str	r7, [sp, #16]
 8014a90:	4626      	mov	r6, r4
 8014a92:	9b04      	ldr	r3, [sp, #16]
 8014a94:	2b00      	cmp	r3, #0
 8014a96:	d078      	beq.n	8014b8a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15a>
 8014a98:	9902      	ldr	r1, [sp, #8]
 8014a9a:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8014a9e:	f7ff fe4d 	bl	801473c <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014aa2:	b360      	cbz	r0, 8014afe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 8014aa4:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8014aa8:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 8014aac:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 8014ab0:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 8014ab4:	45e6      	cmp	lr, ip
 8014ab6:	db35      	blt.n	8014b24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 8014ab8:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 8014abc:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 8014ac0:	4472      	add	r2, lr
 8014ac2:	4463      	add	r3, ip
 8014ac4:	b212      	sxth	r2, r2
 8014ac6:	b21b      	sxth	r3, r3
 8014ac8:	429a      	cmp	r2, r3
 8014aca:	dc2b      	bgt.n	8014b24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 8014acc:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 8014ad0:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8014ad4:	fa1f f288 	uxth.w	r2, r8
 8014ad8:	4413      	add	r3, r2
 8014ada:	b29b      	uxth	r3, r3
 8014adc:	45c1      	cmp	r9, r8
 8014ade:	fa0f fe83 	sxth.w	lr, r3
 8014ae2:	fa1f fc89 	uxth.w	ip, r9
 8014ae6:	db0f      	blt.n	8014b08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xd8>
 8014ae8:	eba3 030c 	sub.w	r3, r3, ip
 8014aec:	1ac9      	subs	r1, r1, r3
 8014aee:	b209      	sxth	r1, r1
 8014af0:	2900      	cmp	r1, #0
 8014af2:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 8014af6:	dd12      	ble.n	8014b1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 8014af8:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 8014afc:	4604      	mov	r4, r0
 8014afe:	9b04      	ldr	r3, [sp, #16]
 8014b00:	3b01      	subs	r3, #1
 8014b02:	9304      	str	r3, [sp, #16]
 8014b04:	3d08      	subs	r5, #8
 8014b06:	e7c4      	b.n	8014a92 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 8014b08:	4461      	add	r1, ip
 8014b0a:	b209      	sxth	r1, r1
 8014b0c:	4571      	cmp	r1, lr
 8014b0e:	dc3a      	bgt.n	8014b86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 8014b10:	eba2 020c 	sub.w	r2, r2, ip
 8014b14:	b212      	sxth	r2, r2
 8014b16:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 8014b1a:	2a00      	cmp	r2, #0
 8014b1c:	dcee      	bgt.n	8014afc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 8014b1e:	b00d      	add	sp, #52	; 0x34
 8014b20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014b24:	45c1      	cmp	r9, r8
 8014b26:	db2e      	blt.n	8014b86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 8014b28:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 8014b2c:	4499      	add	r9, r3
 8014b2e:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 8014b32:	4498      	add	r8, r3
 8014b34:	fa0f f989 	sxth.w	r9, r9
 8014b38:	fa0f f888 	sxth.w	r8, r8
 8014b3c:	45c1      	cmp	r9, r8
 8014b3e:	dc22      	bgt.n	8014b86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 8014b40:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 8014b44:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8014b48:	fa1f f28c 	uxth.w	r2, ip
 8014b4c:	4413      	add	r3, r2
 8014b4e:	b29b      	uxth	r3, r3
 8014b50:	45e6      	cmp	lr, ip
 8014b52:	fa1f f88e 	uxth.w	r8, lr
 8014b56:	fa0f f983 	sxth.w	r9, r3
 8014b5a:	db0a      	blt.n	8014b72 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x142>
 8014b5c:	eba3 0308 	sub.w	r3, r3, r8
 8014b60:	1ac9      	subs	r1, r1, r3
 8014b62:	b209      	sxth	r1, r1
 8014b64:	2900      	cmp	r1, #0
 8014b66:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 8014b6a:	ddd8      	ble.n	8014b1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 8014b6c:	f8ad 9020 	strh.w	r9, [sp, #32]
 8014b70:	e7c4      	b.n	8014afc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 8014b72:	4441      	add	r1, r8
 8014b74:	b209      	sxth	r1, r1
 8014b76:	4549      	cmp	r1, r9
 8014b78:	dc05      	bgt.n	8014b86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 8014b7a:	eba2 0208 	sub.w	r2, r2, r8
 8014b7e:	b212      	sxth	r2, r2
 8014b80:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8014b84:	e7c9      	b.n	8014b1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8014b86:	4606      	mov	r6, r0
 8014b88:	e7b9      	b.n	8014afe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 8014b8a:	2c00      	cmp	r4, #0
 8014b8c:	f47f af7d 	bne.w	8014a8a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 8014b90:	2e00      	cmp	r6, #0
 8014b92:	f000 81dd 	beq.w	8014f50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 8014b96:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 8014b9a:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 8014b9e:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 8014ba2:	b2b9      	uxth	r1, r7
 8014ba4:	9104      	str	r1, [sp, #16]
 8014ba6:	9804      	ldr	r0, [sp, #16]
 8014ba8:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8014bac:	4401      	add	r1, r0
 8014bae:	b2b3      	uxth	r3, r6
 8014bb0:	b289      	uxth	r1, r1
 8014bb2:	441a      	add	r2, r3
 8014bb4:	9105      	str	r1, [sp, #20]
 8014bb6:	b292      	uxth	r2, r2
 8014bb8:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 8014bbc:	fa0f f882 	sxth.w	r8, r2
 8014bc0:	4655      	mov	r5, sl
 8014bc2:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8014bc6:	9b03      	ldr	r3, [sp, #12]
 8014bc8:	2b00      	cmp	r3, #0
 8014bca:	d054      	beq.n	8014c76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 8014bcc:	9902      	ldr	r1, [sp, #8]
 8014bce:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8014bd2:	f7ff fdb3 	bl	801473c <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014bd6:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8014bda:	b1d8      	cbz	r0, 8014c14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8014bdc:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 8014be0:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 8014be4:	4576      	cmp	r6, lr
 8014be6:	dc26      	bgt.n	8014c36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8014be8:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 8014bec:	44f4      	add	ip, lr
 8014bee:	fa0f fc8c 	sxth.w	ip, ip
 8014bf2:	45e0      	cmp	r8, ip
 8014bf4:	db1f      	blt.n	8014c36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8014bf6:	428f      	cmp	r7, r1
 8014bf8:	fa1f fc81 	uxth.w	ip, r1
 8014bfc:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 8014c00:	dc0f      	bgt.n	8014c22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8014c02:	9805      	ldr	r0, [sp, #20]
 8014c04:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 8014c08:	eba0 0c0c 	sub.w	ip, r0, ip
 8014c0c:	eba1 010c 	sub.w	r1, r1, ip
 8014c10:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 8014c14:	4620      	mov	r0, r4
 8014c16:	9903      	ldr	r1, [sp, #12]
 8014c18:	3901      	subs	r1, #1
 8014c1a:	9103      	str	r1, [sp, #12]
 8014c1c:	3d08      	subs	r5, #8
 8014c1e:	4604      	mov	r4, r0
 8014c20:	e7cf      	b.n	8014bc2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x192>
 8014c22:	4461      	add	r1, ip
 8014c24:	b209      	sxth	r1, r1
 8014c26:	4549      	cmp	r1, r9
 8014c28:	dcf5      	bgt.n	8014c16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014c2a:	9904      	ldr	r1, [sp, #16]
 8014c2c:	eba1 0c0c 	sub.w	ip, r1, ip
 8014c30:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 8014c34:	e7ee      	b.n	8014c14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8014c36:	428f      	cmp	r7, r1
 8014c38:	dced      	bgt.n	8014c16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014c3a:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 8014c3e:	4461      	add	r1, ip
 8014c40:	b209      	sxth	r1, r1
 8014c42:	4589      	cmp	r9, r1
 8014c44:	dbe7      	blt.n	8014c16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014c46:	4576      	cmp	r6, lr
 8014c48:	fa1f fc8e 	uxth.w	ip, lr
 8014c4c:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 8014c50:	dc08      	bgt.n	8014c64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x234>
 8014c52:	eba2 0c0c 	sub.w	ip, r2, ip
 8014c56:	eba1 010c 	sub.w	r1, r1, ip
 8014c5a:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 8014c5e:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 8014c62:	e7d7      	b.n	8014c14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8014c64:	4461      	add	r1, ip
 8014c66:	b209      	sxth	r1, r1
 8014c68:	4588      	cmp	r8, r1
 8014c6a:	dbd4      	blt.n	8014c16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014c6c:	eba3 0c0c 	sub.w	ip, r3, ip
 8014c70:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 8014c74:	e7ce      	b.n	8014c14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8014c76:	2c00      	cmp	r4, #0
 8014c78:	f000 816a 	beq.w	8014f50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 8014c7c:	9b00      	ldr	r3, [sp, #0]
 8014c7e:	3301      	adds	r3, #1
 8014c80:	f000 8166 	beq.w	8014f50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 8014c84:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 8014c88:	4621      	mov	r1, r4
 8014c8a:	9802      	ldr	r0, [sp, #8]
 8014c8c:	f7ff fd78 	bl	8014780 <_ZNK8touchgfx4Rect8includesERKS0_>
 8014c90:	b120      	cbz	r0, 8014c9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26c>
 8014c92:	f8bd 1000 	ldrh.w	r1, [sp]
 8014c96:	9801      	ldr	r0, [sp, #4]
 8014c98:	f7ff fe86 	bl	80149a8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014c9c:	9902      	ldr	r1, [sp, #8]
 8014c9e:	4620      	mov	r0, r4
 8014ca0:	f7ff fd4c 	bl	801473c <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014ca4:	2800      	cmp	r0, #0
 8014ca6:	f000 809b 	beq.w	8014de0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3b0>
 8014caa:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8014cae:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 8014cb2:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 8014cb6:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 8014cba:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8014cbe:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 8014cc2:	fa1f f288 	uxth.w	r2, r8
 8014cc6:	19d5      	adds	r5, r2, r7
 8014cc8:	fa1f f985 	uxth.w	r9, r5
 8014ccc:	fa0f f589 	sxth.w	r5, r9
 8014cd0:	b2a1      	uxth	r1, r4
 8014cd2:	440b      	add	r3, r1
 8014cd4:	9503      	str	r5, [sp, #12]
 8014cd6:	45a0      	cmp	r8, r4
 8014cd8:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 8014cdc:	9507      	str	r5, [sp, #28]
 8014cde:	b29b      	uxth	r3, r3
 8014ce0:	f340 809d 	ble.w	8014e1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8014ce4:	1a52      	subs	r2, r2, r1
 8014ce6:	b292      	uxth	r2, r2
 8014ce8:	4584      	cmp	ip, r0
 8014cea:	fa0f fe83 	sxth.w	lr, r3
 8014cee:	b215      	sxth	r5, r2
 8014cf0:	dd2f      	ble.n	8014d52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 8014cf2:	9e00      	ldr	r6, [sp, #0]
 8014cf4:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8014cf8:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 8014cfc:	9e03      	ldr	r6, [sp, #12]
 8014cfe:	eba6 060e 	sub.w	r6, r6, lr
 8014d02:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 8014d06:	fa1f fc8c 	uxth.w	ip, ip
 8014d0a:	b280      	uxth	r0, r0
 8014d0c:	ebac 0300 	sub.w	r3, ip, r0
 8014d10:	448c      	add	ip, r1
 8014d12:	4470      	add	r0, lr
 8014d14:	b29b      	uxth	r3, r3
 8014d16:	fa0f fc8c 	sxth.w	ip, ip
 8014d1a:	b200      	sxth	r0, r0
 8014d1c:	b21c      	sxth	r4, r3
 8014d1e:	ebac 0000 	sub.w	r0, ip, r0
 8014d22:	4366      	muls	r6, r4
 8014d24:	4368      	muls	r0, r5
 8014d26:	4286      	cmp	r6, r0
 8014d28:	db09      	blt.n	8014d3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x30e>
 8014d2a:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 8014d2e:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 8014d32:	4417      	add	r7, r2
 8014d34:	f8ad 3020 	strh.w	r3, [sp, #32]
 8014d38:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 8014d3c:	e685      	b.n	8014a4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8014d3e:	440b      	add	r3, r1
 8014d40:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8014d44:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 8014d48:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 8014d4c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8014d50:	e67b      	b.n	8014a4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8014d52:	9e03      	ldr	r6, [sp, #12]
 8014d54:	45b6      	cmp	lr, r6
 8014d56:	da28      	bge.n	8014daa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37a>
 8014d58:	9b00      	ldr	r3, [sp, #0]
 8014d5a:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 8014d5e:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 8014d62:	eb04 030c 	add.w	r3, r4, ip
 8014d66:	fa1f f883 	uxth.w	r8, r3
 8014d6a:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 8014d6e:	4403      	add	r3, r0
 8014d70:	eba3 0308 	sub.w	r3, r3, r8
 8014d74:	b29b      	uxth	r3, r3
 8014d76:	fa0f f988 	sxth.w	r9, r8
 8014d7a:	eba0 000c 	sub.w	r0, r0, ip
 8014d7e:	fa0f f883 	sxth.w	r8, r3
 8014d82:	eba6 060e 	sub.w	r6, r6, lr
 8014d86:	4368      	muls	r0, r5
 8014d88:	fb08 f606 	mul.w	r6, r8, r6
 8014d8c:	42b0      	cmp	r0, r6
 8014d8e:	dc06      	bgt.n	8014d9e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x36e>
 8014d90:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 8014d94:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 8014d98:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 8014d9c:	e7c9      	b.n	8014d32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x302>
 8014d9e:	4423      	add	r3, r4
 8014da0:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 8014da4:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8014da8:	e64f      	b.n	8014a4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8014daa:	9807      	ldr	r0, [sp, #28]
 8014dac:	eba3 0309 	sub.w	r3, r3, r9
 8014db0:	b29b      	uxth	r3, r3
 8014db2:	2806      	cmp	r0, #6
 8014db4:	fa0f fc83 	sxth.w	ip, r3
 8014db8:	d818      	bhi.n	8014dec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3bc>
 8014dba:	4652      	mov	r2, sl
 8014dbc:	ab0a      	add	r3, sp, #40	; 0x28
 8014dbe:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 8014dc2:	6851      	ldr	r1, [r2, #4]
 8014dc4:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 8014dc8:	c303      	stmia	r3!, {r0, r1}
 8014dca:	9b03      	ldr	r3, [sp, #12]
 8014dcc:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 8014dd0:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 8014dd4:	ab0a      	add	r3, sp, #40	; 0x28
 8014dd6:	e893 0006 	ldmia.w	r3, {r1, r2}
 8014dda:	9801      	ldr	r0, [sp, #4]
 8014ddc:	f7ff fe06 	bl	80149ec <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8014de0:	9b00      	ldr	r3, [sp, #0]
 8014de2:	3b01      	subs	r3, #1
 8014de4:	9300      	str	r3, [sp, #0]
 8014de6:	f1aa 0a08 	sub.w	sl, sl, #8
 8014dea:	e747      	b.n	8014c7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8014dec:	9800      	ldr	r0, [sp, #0]
 8014dee:	45ac      	cmp	ip, r5
 8014df0:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 8014df4:	db0c      	blt.n	8014e10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e0>
 8014df6:	4417      	add	r7, r2
 8014df8:	b2bf      	uxth	r7, r7
 8014dfa:	4458      	add	r0, fp
 8014dfc:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 8014e00:	440f      	add	r7, r1
 8014e02:	f8ad 4020 	strh.w	r4, [sp, #32]
 8014e06:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 8014e0a:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 8014e0e:	e61c      	b.n	8014a4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8014e10:	4458      	add	r0, fp
 8014e12:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 8014e16:	443b      	add	r3, r7
 8014e18:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8014e1c:	e615      	b.n	8014a4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8014e1e:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 8014e22:	fa1f f18c 	uxth.w	r1, ip
 8014e26:	eb01 0e05 	add.w	lr, r1, r5
 8014e2a:	b282      	uxth	r2, r0
 8014e2c:	fa1f fe8e 	uxth.w	lr, lr
 8014e30:	9204      	str	r2, [sp, #16]
 8014e32:	fa0f f28e 	sxth.w	r2, lr
 8014e36:	9205      	str	r2, [sp, #20]
 8014e38:	9e04      	ldr	r6, [sp, #16]
 8014e3a:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 8014e3e:	4432      	add	r2, r6
 8014e40:	b292      	uxth	r2, r2
 8014e42:	4584      	cmp	ip, r0
 8014e44:	9206      	str	r2, [sp, #24]
 8014e46:	da26      	bge.n	8014e96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x466>
 8014e48:	eba3 0309 	sub.w	r3, r3, r9
 8014e4c:	eba2 020e 	sub.w	r2, r2, lr
 8014e50:	b29b      	uxth	r3, r3
 8014e52:	b292      	uxth	r2, r2
 8014e54:	fa0f fa83 	sxth.w	sl, r3
 8014e58:	b211      	sxth	r1, r2
 8014e5a:	eba0 000c 	sub.w	r0, r0, ip
 8014e5e:	eba4 0408 	sub.w	r4, r4, r8
 8014e62:	fb0a f000 	mul.w	r0, sl, r0
 8014e66:	434c      	muls	r4, r1
 8014e68:	42a0      	cmp	r0, r4
 8014e6a:	9800      	ldr	r0, [sp, #0]
 8014e6c:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 8014e70:	dc06      	bgt.n	8014e80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x450>
 8014e72:	4458      	add	r0, fp
 8014e74:	9a05      	ldr	r2, [sp, #20]
 8014e76:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 8014e7a:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 8014e7e:	e7ca      	b.n	8014e16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 8014e80:	eb0b 0300 	add.w	r3, fp, r0
 8014e84:	9903      	ldr	r1, [sp, #12]
 8014e86:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 8014e8a:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 8014e8e:	442a      	add	r2, r5
 8014e90:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 8014e94:	e5d9      	b.n	8014a4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8014e96:	9e04      	ldr	r6, [sp, #16]
 8014e98:	9a03      	ldr	r2, [sp, #12]
 8014e9a:	1b89      	subs	r1, r1, r6
 8014e9c:	b21e      	sxth	r6, r3
 8014e9e:	b289      	uxth	r1, r1
 8014ea0:	4296      	cmp	r6, r2
 8014ea2:	fa0f fc81 	sxth.w	ip, r1
 8014ea6:	dd26      	ble.n	8014ef6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c6>
 8014ea8:	eba3 0309 	sub.w	r3, r3, r9
 8014eac:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 8014eb0:	9e05      	ldr	r6, [sp, #20]
 8014eb2:	b29b      	uxth	r3, r3
 8014eb4:	eba6 0902 	sub.w	r9, r6, r2
 8014eb8:	b218      	sxth	r0, r3
 8014eba:	eba4 0408 	sub.w	r4, r4, r8
 8014ebe:	fb0c f404 	mul.w	r4, ip, r4
 8014ec2:	fb00 f909 	mul.w	r9, r0, r9
 8014ec6:	9a00      	ldr	r2, [sp, #0]
 8014ec8:	454c      	cmp	r4, r9
 8014eca:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8014ece:	db03      	blt.n	8014ed8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4a8>
 8014ed0:	445a      	add	r2, fp
 8014ed2:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 8014ed6:	e79e      	b.n	8014e16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 8014ed8:	eb0b 0302 	add.w	r3, fp, r2
 8014edc:	9a03      	ldr	r2, [sp, #12]
 8014ede:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 8014ee2:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 8014ee6:	4429      	add	r1, r5
 8014ee8:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 8014eec:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8014ef0:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 8014ef4:	e5a9      	b.n	8014a4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8014ef6:	9b06      	ldr	r3, [sp, #24]
 8014ef8:	9c07      	ldr	r4, [sp, #28]
 8014efa:	eba3 020e 	sub.w	r2, r3, lr
 8014efe:	b292      	uxth	r2, r2
 8014f00:	2c06      	cmp	r4, #6
 8014f02:	b213      	sxth	r3, r2
 8014f04:	d80d      	bhi.n	8014f22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4f2>
 8014f06:	4651      	mov	r1, sl
 8014f08:	aa0a      	add	r2, sp, #40	; 0x28
 8014f0a:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 8014f0e:	6849      	ldr	r1, [r1, #4]
 8014f10:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 8014f14:	9b05      	ldr	r3, [sp, #20]
 8014f16:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 8014f1a:	c203      	stmia	r2!, {r0, r1}
 8014f1c:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 8014f20:	e758      	b.n	8014dd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3a4>
 8014f22:	9c00      	ldr	r4, [sp, #0]
 8014f24:	4563      	cmp	r3, ip
 8014f26:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8014f2a:	db0d      	blt.n	8014f48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x518>
 8014f2c:	4429      	add	r1, r5
 8014f2e:	9a04      	ldr	r2, [sp, #16]
 8014f30:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8014f34:	b289      	uxth	r1, r1
 8014f36:	445c      	add	r4, fp
 8014f38:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 8014f3c:	4411      	add	r1, r2
 8014f3e:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 8014f42:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 8014f46:	e580      	b.n	8014a4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 8014f48:	445c      	add	r4, fp
 8014f4a:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 8014f4e:	e79e      	b.n	8014e8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45e>
 8014f50:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 8014f54:	2f07      	cmp	r7, #7
 8014f56:	d806      	bhi.n	8014f66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x536>
 8014f58:	ab08      	add	r3, sp, #32
 8014f5a:	e893 0006 	ldmia.w	r3, {r1, r2}
 8014f5e:	9801      	ldr	r0, [sp, #4]
 8014f60:	f7ff fd44 	bl	80149ec <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8014f64:	e5db      	b.n	8014b1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 8014f66:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8014f6a:	f107 39ff 	add.w	r9, r7, #4294967295
 8014f6e:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8014f72:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 8014f76:	f04f 35ff 	mov.w	r5, #4294967295
 8014f7a:	2400      	movs	r4, #0
 8014f7c:	9304      	str	r3, [sp, #16]
 8014f7e:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 8014f82:	9300      	str	r3, [sp, #0]
 8014f84:	f109 32ff 	add.w	r2, r9, #4294967295
 8014f88:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 8014f8c:	9303      	str	r3, [sp, #12]
 8014f8e:	4690      	mov	r8, r2
 8014f90:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8014f94:	f1b8 3fff 	cmp.w	r8, #4294967295
 8014f98:	bf14      	ite	ne
 8014f9a:	9904      	ldrne	r1, [sp, #16]
 8014f9c:	f8dd e008 	ldreq.w	lr, [sp, #8]
 8014fa0:	6818      	ldr	r0, [r3, #0]
 8014fa2:	9206      	str	r2, [sp, #24]
 8014fa4:	bf18      	it	ne
 8014fa6:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 8014faa:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 8014fae:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8014fb2:	f8be 6004 	ldrh.w	r6, [lr, #4]
 8014fb6:	9305      	str	r3, [sp, #20]
 8014fb8:	fb16 f601 	smulbb	r6, r6, r1
 8014fbc:	6859      	ldr	r1, [r3, #4]
 8014fbe:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8014fc2:	4671      	mov	r1, lr
 8014fc4:	a80a      	add	r0, sp, #40	; 0x28
 8014fc6:	f7ff fbfd 	bl	80147c4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8014fca:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 8014fce:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8014fd2:	9b03      	ldr	r3, [sp, #12]
 8014fd4:	9a00      	ldr	r2, [sp, #0]
 8014fd6:	fb11 f100 	smulbb	r1, r1, r0
 8014fda:	fb02 6603 	mla	r6, r2, r3, r6
 8014fde:	1b8e      	subs	r6, r1, r6
 8014fe0:	2008      	movs	r0, #8
 8014fe2:	fb91 f1f0 	sdiv	r1, r1, r0
 8014fe6:	42b1      	cmp	r1, r6
 8014fe8:	dc21      	bgt.n	801502e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 8014fea:	4556      	cmp	r6, sl
 8014fec:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 8014ff0:	da03      	bge.n	8014ffa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8014ff2:	b1e6      	cbz	r6, 801502e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 8014ff4:	46b2      	mov	sl, r6
 8014ff6:	4645      	mov	r5, r8
 8014ff8:	464c      	mov	r4, r9
 8014ffa:	f108 38ff 	add.w	r8, r8, #4294967295
 8014ffe:	f118 0f02 	cmn.w	r8, #2
 8015002:	d1c7      	bne.n	8014f94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x564>
 8015004:	f1b2 3fff 	cmp.w	r2, #4294967295
 8015008:	f1a7 0708 	sub.w	r7, r7, #8
 801500c:	4691      	mov	r9, r2
 801500e:	d1b6      	bne.n	8014f7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54e>
 8015010:	9b01      	ldr	r3, [sp, #4]
 8015012:	b2a6      	uxth	r6, r4
 8015014:	00e4      	lsls	r4, r4, #3
 8015016:	1918      	adds	r0, r3, r4
 8015018:	1c6b      	adds	r3, r5, #1
 801501a:	d10b      	bne.n	8015034 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x604>
 801501c:	4601      	mov	r1, r0
 801501e:	9802      	ldr	r0, [sp, #8]
 8015020:	f7ff fbd0 	bl	80147c4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015024:	4631      	mov	r1, r6
 8015026:	9801      	ldr	r0, [sp, #4]
 8015028:	f7ff fcbe 	bl	80149a8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801502c:	e50d      	b.n	8014a4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 801502e:	4645      	mov	r5, r8
 8015030:	464c      	mov	r4, r9
 8015032:	e7ed      	b.n	8015010 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e0>
 8015034:	9b01      	ldr	r3, [sp, #4]
 8015036:	00ed      	lsls	r5, r5, #3
 8015038:	1959      	adds	r1, r3, r5
 801503a:	f7ff fbc3 	bl	80147c4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801503e:	9b02      	ldr	r3, [sp, #8]
 8015040:	cb03      	ldmia	r3!, {r0, r1}
 8015042:	445d      	add	r5, fp
 8015044:	445c      	add	r4, fp
 8015046:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 801504a:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 801504e:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 8015052:	9b02      	ldr	r3, [sp, #8]
 8015054:	6861      	ldr	r1, [r4, #4]
 8015056:	c303      	stmia	r3!, {r0, r1}
 8015058:	e7e4      	b.n	8015024 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5f4>
	...

0801505c <_ZN8touchgfx11Application4drawERNS_4RectE>:
 801505c:	b530      	push	{r4, r5, lr}
 801505e:	4b1d      	ldr	r3, [pc, #116]	; (80150d4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 8015060:	b085      	sub	sp, #20
 8015062:	460c      	mov	r4, r1
 8015064:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015068:	4b1b      	ldr	r3, [pc, #108]	; (80150d8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 801506a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801506e:	2100      	movs	r1, #0
 8015070:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015074:	9100      	str	r1, [sp, #0]
 8015076:	4605      	mov	r5, r0
 8015078:	6861      	ldr	r1, [r4, #4]
 801507a:	6820      	ldr	r0, [r4, #0]
 801507c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015080:	ab02      	add	r3, sp, #8
 8015082:	c303      	stmia	r3!, {r0, r1}
 8015084:	4669      	mov	r1, sp
 8015086:	a802      	add	r0, sp, #8
 8015088:	f7fb fb6a 	bl	8010760 <_ZN8touchgfx4RectaNERKS0_>
 801508c:	ab02      	add	r3, sp, #8
 801508e:	cb03      	ldmia	r3!, {r0, r1}
 8015090:	4b12      	ldr	r3, [pc, #72]	; (80150dc <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 8015092:	6020      	str	r0, [r4, #0]
 8015094:	6818      	ldr	r0, [r3, #0]
 8015096:	6061      	str	r1, [r4, #4]
 8015098:	b138      	cbz	r0, 80150aa <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 801509a:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
 801509e:	b133      	cbz	r3, 80150ae <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 80150a0:	6821      	ldr	r1, [r4, #0]
 80150a2:	6862      	ldr	r2, [r4, #4]
 80150a4:	4628      	mov	r0, r5
 80150a6:	f7ff fcc3 	bl	8014a30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80150aa:	b005      	add	sp, #20
 80150ac:	bd30      	pop	{r4, r5, pc}
 80150ae:	6803      	ldr	r3, [r0, #0]
 80150b0:	4621      	mov	r1, r4
 80150b2:	689b      	ldr	r3, [r3, #8]
 80150b4:	4798      	blx	r3
 80150b6:	4b0a      	ldr	r3, [pc, #40]	; (80150e0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 80150b8:	6818      	ldr	r0, [r3, #0]
 80150ba:	b118      	cbz	r0, 80150c4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 80150bc:	6803      	ldr	r3, [r0, #0]
 80150be:	4621      	mov	r1, r4
 80150c0:	689b      	ldr	r3, [r3, #8]
 80150c2:	4798      	blx	r3
 80150c4:	4b07      	ldr	r3, [pc, #28]	; (80150e4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 80150c6:	6818      	ldr	r0, [r3, #0]
 80150c8:	6803      	ldr	r3, [r0, #0]
 80150ca:	4621      	mov	r1, r4
 80150cc:	69db      	ldr	r3, [r3, #28]
 80150ce:	4798      	blx	r3
 80150d0:	e7eb      	b.n	80150aa <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 80150d2:	bf00      	nop
 80150d4:	20020a84 	.word	0x20020a84
 80150d8:	20020a86 	.word	0x20020a86
 80150dc:	20020acc 	.word	0x20020acc
 80150e0:	20020ac8 	.word	0x20020ac8
 80150e4:	20020a90 	.word	0x20020a90

080150e8 <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 80150e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80150ec:	4604      	mov	r4, r0
 80150ee:	b09b      	sub	sp, #108	; 0x6c
 80150f0:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
 80150f4:	b129      	cbz	r1, 8015102 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 80150f6:	2300      	movs	r3, #0
 80150f8:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 80150fc:	b01b      	add	sp, #108	; 0x6c
 80150fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015102:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 8015106:	4630      	mov	r0, r6
 8015108:	f7fb fb6d 	bl	80107e6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801510c:	4605      	mov	r5, r0
 801510e:	b940      	cbnz	r0, 8015122 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
 8015110:	e896 0006 	ldmia.w	r6, {r1, r2}
 8015114:	4620      	mov	r0, r4
 8015116:	f7ff fc8b 	bl	8014a30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 801511a:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 801511e:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8015122:	4ba7      	ldr	r3, [pc, #668]	; (80153c0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d8>)
 8015124:	681b      	ldr	r3, [r3, #0]
 8015126:	b33b      	cbz	r3, 8015178 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 8015128:	4da6      	ldr	r5, [pc, #664]	; (80153c4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2dc>)
 801512a:	4628      	mov	r0, r5
 801512c:	f7fb fb5b 	bl	80107e6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015130:	4606      	mov	r6, r0
 8015132:	bb08      	cbnz	r0, 8015178 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 8015134:	4628      	mov	r0, r5
 8015136:	f7ff f9a7 	bl	8014488 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801513a:	6829      	ldr	r1, [r5, #0]
 801513c:	686a      	ldr	r2, [r5, #4]
 801513e:	4620      	mov	r0, r4
 8015140:	f7ff fc76 	bl	8014a30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8015144:	802e      	strh	r6, [r5, #0]
 8015146:	806e      	strh	r6, [r5, #2]
 8015148:	80ae      	strh	r6, [r5, #4]
 801514a:	80ee      	strh	r6, [r5, #6]
 801514c:	4f9e      	ldr	r7, [pc, #632]	; (80153c8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e0>)
 801514e:	a809      	add	r0, sp, #36	; 0x24
 8015150:	f7ff fbd7 	bl	8014902 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015154:	883d      	ldrh	r5, [r7, #0]
 8015156:	462e      	mov	r6, r5
 8015158:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 801515c:	42b3      	cmp	r3, r6
 801515e:	d910      	bls.n	8015182 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
 8015160:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8015164:	a809      	add	r0, sp, #36	; 0x24
 8015166:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 801516a:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 801516e:	3601      	adds	r6, #1
 8015170:	f7ff fc3c 	bl	80149ec <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 8015174:	b2b6      	uxth	r6, r6
 8015176:	e7ef      	b.n	8015158 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 8015178:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 801517c:	2b00      	cmp	r3, #0
 801517e:	d1e5      	bne.n	801514c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
 8015180:	e7bc      	b.n	80150fc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 8015182:	462e      	mov	r6, r5
 8015184:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 8015188:	42b3      	cmp	r3, r6
 801518a:	d90b      	bls.n	80151a4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
 801518c:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8015190:	4620      	mov	r0, r4
 8015192:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 8015196:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 801519a:	3601      	adds	r6, #1
 801519c:	f7ff fc48 	bl	8014a30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80151a0:	b2b6      	uxth	r6, r6
 80151a2:	e7ef      	b.n	8015184 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 80151a4:	4a89      	ldr	r2, [pc, #548]	; (80153cc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e4>)
 80151a6:	6813      	ldr	r3, [r2, #0]
 80151a8:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80151ac:	2b01      	cmp	r3, #1
 80151ae:	4690      	mov	r8, r2
 80151b0:	f040 8094 	bne.w	80152dc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f4>
 80151b4:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 80151b8:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 80151bc:	33aa      	adds	r3, #170	; 0xaa
 80151be:	f04f 0900 	mov.w	r9, #0
 80151c2:	42a8      	cmp	r0, r5
 80151c4:	f103 0308 	add.w	r3, r3, #8
 80151c8:	dd0a      	ble.n	80151e0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
 80151ca:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 80151ce:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 80151d2:	440a      	add	r2, r1
 80151d4:	b212      	sxth	r2, r2
 80151d6:	4591      	cmp	r9, r2
 80151d8:	bfb8      	it	lt
 80151da:	4691      	movlt	r9, r2
 80151dc:	3501      	adds	r5, #1
 80151de:	e7f0      	b.n	80151c2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
 80151e0:	4b7b      	ldr	r3, [pc, #492]	; (80153d0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e8>)
 80151e2:	4e7c      	ldr	r6, [pc, #496]	; (80153d4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ec>)
 80151e4:	881d      	ldrh	r5, [r3, #0]
 80151e6:	2300      	movs	r3, #0
 80151e8:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80151ec:	2d0f      	cmp	r5, #15
 80151ee:	bf8c      	ite	hi
 80151f0:	08ed      	lsrhi	r5, r5, #3
 80151f2:	2501      	movls	r5, #1
 80151f4:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 80151f8:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 80151fc:	f8d8 0000 	ldr.w	r0, [r8]
 8015200:	440b      	add	r3, r1
 8015202:	b21b      	sxth	r3, r3
 8015204:	4599      	cmp	r9, r3
 8015206:	6802      	ldr	r2, [r0, #0]
 8015208:	dd4b      	ble.n	80152a2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ba>
 801520a:	f8d2 3094 	ldr.w	r3, [r2, #148]	; 0x94
 801520e:	4798      	blx	r3
 8015210:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8015214:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8015218:	4413      	add	r3, r2
 801521a:	b21b      	sxth	r3, r3
 801521c:	195a      	adds	r2, r3, r5
 801521e:	4290      	cmp	r0, r2
 8015220:	da07      	bge.n	8015232 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 8015222:	4581      	cmp	r9, r0
 8015224:	dd05      	ble.n	8015232 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 8015226:	4298      	cmp	r0, r3
 8015228:	da33      	bge.n	8015292 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 801522a:	2b00      	cmp	r3, #0
 801522c:	dd31      	ble.n	8015292 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 801522e:	4648      	mov	r0, r9
 8015230:	e004      	b.n	801523c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
 8015232:	4298      	cmp	r0, r3
 8015234:	dbfb      	blt.n	801522e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
 8015236:	4548      	cmp	r0, r9
 8015238:	bfa8      	it	ge
 801523a:	4648      	movge	r0, r9
 801523c:	f9b6 2000 	ldrsh.w	r2, [r6]
 8015240:	f8b7 a000 	ldrh.w	sl, [r7]
 8015244:	f8ad 3016 	strh.w	r3, [sp, #22]
 8015248:	2100      	movs	r1, #0
 801524a:	1ac0      	subs	r0, r0, r3
 801524c:	f8ad 1014 	strh.w	r1, [sp, #20]
 8015250:	f8ad 2018 	strh.w	r2, [sp, #24]
 8015254:	f8ad 001a 	strh.w	r0, [sp, #26]
 8015258:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 801525c:	4553      	cmp	r3, sl
 801525e:	d9c9      	bls.n	80151f4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 8015260:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 8015264:	ab07      	add	r3, sp, #28
 8015266:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 801526a:	6851      	ldr	r1, [r2, #4]
 801526c:	c303      	stmia	r3!, {r0, r1}
 801526e:	a807      	add	r0, sp, #28
 8015270:	a905      	add	r1, sp, #20
 8015272:	f7fb fa75 	bl	8010760 <_ZN8touchgfx4RectaNERKS0_>
 8015276:	a807      	add	r0, sp, #28
 8015278:	f7fb fab5 	bl	80107e6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801527c:	b920      	cbnz	r0, 8015288 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
 801527e:	6823      	ldr	r3, [r4, #0]
 8015280:	a907      	add	r1, sp, #28
 8015282:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8015284:	4620      	mov	r0, r4
 8015286:	4798      	blx	r3
 8015288:	f10a 0a01 	add.w	sl, sl, #1
 801528c:	fa1f fa8a 	uxth.w	sl, sl
 8015290:	e7e2      	b.n	8015258 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
 8015292:	f8d8 0000 	ldr.w	r0, [r8]
 8015296:	6803      	ldr	r3, [r0, #0]
 8015298:	2101      	movs	r1, #1
 801529a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 801529e:	4798      	blx	r3
 80152a0:	e7a8      	b.n	80151f4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 80152a2:	6a53      	ldr	r3, [r2, #36]	; 0x24
 80152a4:	4798      	blx	r3
 80152a6:	4b4c      	ldr	r3, [pc, #304]	; (80153d8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f0>)
 80152a8:	781b      	ldrb	r3, [r3, #0]
 80152aa:	2b00      	cmp	r3, #0
 80152ac:	f43f af26 	beq.w	80150fc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 80152b0:	2300      	movs	r3, #0
 80152b2:	883d      	ldrh	r5, [r7, #0]
 80152b4:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 80152b8:	34ea      	adds	r4, #234	; 0xea
 80152ba:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 80152be:	42ab      	cmp	r3, r5
 80152c0:	f67f af1c 	bls.w	80150fc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 80152c4:	ab1a      	add	r3, sp, #104	; 0x68
 80152c6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80152ca:	3b44      	subs	r3, #68	; 0x44
 80152cc:	e893 0006 	ldmia.w	r3, {r1, r2}
 80152d0:	4620      	mov	r0, r4
 80152d2:	3501      	adds	r5, #1
 80152d4:	f7ff fb8a 	bl	80149ec <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 80152d8:	b2ad      	uxth	r5, r5
 80152da:	e7ee      	b.n	80152ba <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d2>
 80152dc:	2b02      	cmp	r3, #2
 80152de:	f040 813e 	bne.w	801555e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x476>
 80152e2:	4b3e      	ldr	r3, [pc, #248]	; (80153dc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f4>)
 80152e4:	781b      	ldrb	r3, [r3, #0]
 80152e6:	2b01      	cmp	r3, #1
 80152e8:	d02c      	beq.n	8015344 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25c>
 80152ea:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
 80152ee:	883a      	ldrh	r2, [r7, #0]
 80152f0:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 80152f4:	3201      	adds	r2, #1
 80152f6:	b292      	uxth	r2, r2
 80152f8:	2900      	cmp	r1, #0
 80152fa:	d0d4      	beq.n	80152a6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 80152fc:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 8015300:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 8015304:	441d      	add	r5, r3
 8015306:	b22d      	sxth	r5, r5
 8015308:	4610      	mov	r0, r2
 801530a:	f04f 0a00 	mov.w	sl, #0
 801530e:	b283      	uxth	r3, r0
 8015310:	4299      	cmp	r1, r3
 8015312:	ea4f 06ca 	mov.w	r6, sl, lsl #3
 8015316:	f240 80c5 	bls.w	80154a4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3bc>
 801531a:	4426      	add	r6, r4
 801531c:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
 8015320:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
 8015324:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
 8015328:	4573      	cmp	r3, lr
 801532a:	4684      	mov	ip, r0
 801532c:	f340 80a7 	ble.w	801547e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x396>
 8015330:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
 8015334:	4475      	add	r5, lr
 8015336:	b22d      	sxth	r5, r5
 8015338:	429d      	cmp	r5, r3
 801533a:	bfa8      	it	ge
 801533c:	461d      	movge	r5, r3
 801533e:	3001      	adds	r0, #1
 8015340:	46e2      	mov	sl, ip
 8015342:	e7e4      	b.n	801530e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x226>
 8015344:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 8015348:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 801534c:	f1bb 0f00 	cmp.w	fp, #0
 8015350:	d0a9      	beq.n	80152a6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 8015352:	883b      	ldrh	r3, [r7, #0]
 8015354:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 8015358:	3301      	adds	r3, #1
 801535a:	b29b      	uxth	r3, r3
 801535c:	2600      	movs	r6, #0
 801535e:	b299      	uxth	r1, r3
 8015360:	458b      	cmp	fp, r1
 8015362:	ea4f 05c6 	mov.w	r5, r6, lsl #3
 8015366:	d93b      	bls.n	80153e0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f8>
 8015368:	4425      	add	r5, r4
 801536a:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 801536e:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 8015372:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 8015376:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 801537a:	4408      	add	r0, r1
 801537c:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 8015380:	4471      	add	r1, lr
 8015382:	b200      	sxth	r0, r0
 8015384:	b209      	sxth	r1, r1
 8015386:	4288      	cmp	r0, r1
 8015388:	469c      	mov	ip, r3
 801538a:	da06      	bge.n	801539a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2b2>
 801538c:	4586      	cmp	lr, r0
 801538e:	4672      	mov	r2, lr
 8015390:	bfb8      	it	lt
 8015392:	4602      	movlt	r2, r0
 8015394:	3301      	adds	r3, #1
 8015396:	4666      	mov	r6, ip
 8015398:	e7e1      	b.n	801535e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x276>
 801539a:	d10b      	bne.n	80153b4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2cc>
 801539c:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 80153a0:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 80153a4:	458c      	cmp	ip, r1
 80153a6:	bfb4      	ite	lt
 80153a8:	469c      	movlt	ip, r3
 80153aa:	46b4      	movge	ip, r6
 80153ac:	4572      	cmp	r2, lr
 80153ae:	bfb8      	it	lt
 80153b0:	4672      	movlt	r2, lr
 80153b2:	e7ef      	b.n	8015394 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ac>
 80153b4:	428a      	cmp	r2, r1
 80153b6:	bfb8      	it	lt
 80153b8:	460a      	movlt	r2, r1
 80153ba:	46b4      	mov	ip, r6
 80153bc:	e7ea      	b.n	8015394 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ac>
 80153be:	bf00      	nop
 80153c0:	20020ac8 	.word	0x20020ac8
 80153c4:	20020ad4 	.word	0x20020ad4
 80153c8:	20000064 	.word	0x20000064
 80153cc:	20020a90 	.word	0x20020a90
 80153d0:	20020a86 	.word	0x20020a86
 80153d4:	20020a84 	.word	0x20020a84
 80153d8:	20020a8e 	.word	0x20020a8e
 80153dc:	20020a88 	.word	0x20020a88
 80153e0:	1961      	adds	r1, r4, r5
 80153e2:	ab07      	add	r3, sp, #28
 80153e4:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 80153e8:	6849      	ldr	r1, [r1, #4]
 80153ea:	c303      	stmia	r3!, {r0, r1}
 80153ec:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80153f0:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80153f4:	2b13      	cmp	r3, #19
 80153f6:	bfd8      	it	le
 80153f8:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 80153fc:	f8ad 201c 	strh.w	r2, [sp, #28]
 8015400:	440b      	add	r3, r1
 8015402:	1a9b      	subs	r3, r3, r2
 8015404:	a807      	add	r0, sp, #28
 8015406:	f8ad 3020 	strh.w	r3, [sp, #32]
 801540a:	f7ff f857 	bl	80144bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801540e:	a807      	add	r0, sp, #28
 8015410:	f7fb f9e9 	bl	80107e6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015414:	2800      	cmp	r0, #0
 8015416:	d197      	bne.n	8015348 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 8015418:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801541c:	f8d8 0000 	ldr.w	r0, [r8]
 8015420:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8015424:	f8d0 e000 	ldr.w	lr, [r0]
 8015428:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801542c:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015430:	f1bc 0f14 	cmp.w	ip, #20
 8015434:	bfa8      	it	ge
 8015436:	f04f 0c14 	movge.w	ip, #20
 801543a:	fa1f fc8c 	uxth.w	ip, ip
 801543e:	f8cd c000 	str.w	ip, [sp]
 8015442:	f8de a088 	ldr.w	sl, [lr, #136]	; 0x88
 8015446:	47d0      	blx	sl
 8015448:	4682      	mov	sl, r0
 801544a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801544e:	a807      	add	r0, sp, #28
 8015450:	f7ff f81a 	bl	8014488 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8015454:	6823      	ldr	r3, [r4, #0]
 8015456:	4425      	add	r5, r4
 8015458:	4620      	mov	r0, r4
 801545a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801545c:	a907      	add	r1, sp, #28
 801545e:	4798      	blx	r3
 8015460:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 8015464:	eba0 000a 	sub.w	r0, r0, sl
 8015468:	b200      	sxth	r0, r0
 801546a:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 801546e:	2800      	cmp	r0, #0
 8015470:	f47f af6a 	bne.w	8015348 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 8015474:	b2b1      	uxth	r1, r6
 8015476:	4648      	mov	r0, r9
 8015478:	f7ff fa96 	bl	80149a8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801547c:	e764      	b.n	8015348 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 801547e:	d10c      	bne.n	801549a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b2>
 8015480:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
 8015484:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
 8015488:	45b4      	cmp	ip, r6
 801548a:	bfb4      	ite	lt
 801548c:	4684      	movlt	ip, r0
 801548e:	46d4      	movge	ip, sl
 8015490:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
 8015494:	4433      	add	r3, r6
 8015496:	b21b      	sxth	r3, r3
 8015498:	e74e      	b.n	8015338 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x250>
 801549a:	4575      	cmp	r5, lr
 801549c:	bfa8      	it	ge
 801549e:	4675      	movge	r5, lr
 80154a0:	46d4      	mov	ip, sl
 80154a2:	e74c      	b.n	801533e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x256>
 80154a4:	eb0b 0006 	add.w	r0, fp, r6
 80154a8:	4426      	add	r6, r4
 80154aa:	e9cd 1202 	strd	r1, r2, [sp, #8]
 80154ae:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
 80154b2:	f1b9 0f13 	cmp.w	r9, #19
 80154b6:	bfde      	ittt	le
 80154b8:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
 80154bc:	444d      	addle	r5, r9
 80154be:	b22d      	sxthle	r5, r5
 80154c0:	f7fb f991 	bl	80107e6 <_ZNK8touchgfx4Rect7isEmptyEv>
 80154c4:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 80154c8:	2800      	cmp	r0, #0
 80154ca:	f47f af15 	bne.w	80152f8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x210>
 80154ce:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
 80154d2:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80154d6:	eba5 050c 	sub.w	r5, r5, ip
 80154da:	fa1f f28c 	uxth.w	r2, ip
 80154de:	fa1f f989 	uxth.w	r9, r9
 80154e2:	eb02 0009 	add.w	r0, r2, r9
 80154e6:	2d14      	cmp	r5, #20
 80154e8:	bfa8      	it	ge
 80154ea:	2514      	movge	r5, #20
 80154ec:	b200      	sxth	r0, r0
 80154ee:	fa1f fe85 	uxth.w	lr, r5
 80154f2:	eba0 000c 	sub.w	r0, r0, ip
 80154f6:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
 80154fa:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
 80154fe:	f8ad 101c 	strh.w	r1, [sp, #28]
 8015502:	4586      	cmp	lr, r0
 8015504:	f8d8 0000 	ldr.w	r0, [r8]
 8015508:	f8ad c01e 	strh.w	ip, [sp, #30]
 801550c:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015510:	bfb8      	it	lt
 8015512:	46f1      	movlt	r9, lr
 8015514:	6805      	ldr	r5, [r0, #0]
 8015516:	f8cd 9000 	str.w	r9, [sp]
 801551a:	b29b      	uxth	r3, r3
 801551c:	b289      	uxth	r1, r1
 801551e:	f8d5 5088 	ldr.w	r5, [r5, #136]	; 0x88
 8015522:	47a8      	blx	r5
 8015524:	6823      	ldr	r3, [r4, #0]
 8015526:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801552a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801552c:	a907      	add	r1, sp, #28
 801552e:	4620      	mov	r0, r4
 8015530:	4798      	blx	r3
 8015532:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8015536:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
 801553a:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
 801553e:	1a5b      	subs	r3, r3, r1
 8015540:	440a      	add	r2, r1
 8015542:	b21b      	sxth	r3, r3
 8015544:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
 8015548:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
 801554c:	2b00      	cmp	r3, #0
 801554e:	f47f aece 	bne.w	80152ee <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x206>
 8015552:	fa1f f18a 	uxth.w	r1, sl
 8015556:	4658      	mov	r0, fp
 8015558:	f7ff fa26 	bl	80149a8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801555c:	e6c7      	b.n	80152ee <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x206>
 801555e:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8015562:	42ab      	cmp	r3, r5
 8015564:	f67f ae9f 	bls.w	80152a6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 8015568:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 801556c:	ab07      	add	r3, sp, #28
 801556e:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8015572:	6851      	ldr	r1, [r2, #4]
 8015574:	c303      	stmia	r3!, {r0, r1}
 8015576:	a807      	add	r0, sp, #28
 8015578:	f7fb f935 	bl	80107e6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801557c:	b920      	cbnz	r0, 8015588 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x4a0>
 801557e:	6823      	ldr	r3, [r4, #0]
 8015580:	a907      	add	r1, sp, #28
 8015582:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8015584:	4620      	mov	r0, r4
 8015586:	4798      	blx	r3
 8015588:	3501      	adds	r5, #1
 801558a:	b2ad      	uxth	r5, r5
 801558c:	e7e7      	b.n	801555e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x476>
 801558e:	bf00      	nop

08015590 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8015590:	4b03      	ldr	r3, [pc, #12]	; (80155a0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8015592:	2200      	movs	r2, #0
 8015594:	801a      	strh	r2, [r3, #0]
 8015596:	805a      	strh	r2, [r3, #2]
 8015598:	809a      	strh	r2, [r3, #4]
 801559a:	80da      	strh	r2, [r3, #6]
 801559c:	4770      	bx	lr
 801559e:	bf00      	nop
 80155a0:	20020ad4 	.word	0x20020ad4

080155a4 <_ZNK8touchgfx4Font17getStringWidthRTLEhPKtSt9__va_list>:
 80155a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80155a8:	4604      	mov	r4, r0
 80155aa:	b09c      	sub	sp, #112	; 0x70
 80155ac:	a803      	add	r0, sp, #12
 80155ae:	4615      	mov	r5, r2
 80155b0:	460e      	mov	r6, r1
 80155b2:	461f      	mov	r7, r3
 80155b4:	f000 fe05 	bl	80161c2 <_ZN8touchgfx12TextProviderC1Ev>
 80155b8:	6823      	ldr	r3, [r4, #0]
 80155ba:	4620      	mov	r0, r4
 80155bc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80155be:	4798      	blx	r3
 80155c0:	6823      	ldr	r3, [r4, #0]
 80155c2:	4680      	mov	r8, r0
 80155c4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80155c6:	4620      	mov	r0, r4
 80155c8:	4798      	blx	r3
 80155ca:	4629      	mov	r1, r5
 80155cc:	9000      	str	r0, [sp, #0]
 80155ce:	4643      	mov	r3, r8
 80155d0:	463a      	mov	r2, r7
 80155d2:	a803      	add	r0, sp, #12
 80155d4:	f000 fe60 	bl	8016298 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80155d8:	2500      	movs	r5, #0
 80155da:	a803      	add	r0, sp, #12
 80155dc:	f000 fe18 	bl	8016210 <_ZN8touchgfx12TextProvider11endOfStringEv>
 80155e0:	b958      	cbnz	r0, 80155fa <_ZNK8touchgfx4Font17getStringWidthRTLEhPKtSt9__va_list+0x56>
 80155e2:	4633      	mov	r3, r6
 80155e4:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80155e8:	4621      	mov	r1, r4
 80155ea:	a803      	add	r0, sp, #12
 80155ec:	f7fd fe38 	bl	8013260 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80155f0:	b203      	sxth	r3, r0
 80155f2:	42ab      	cmp	r3, r5
 80155f4:	bfc8      	it	gt
 80155f6:	4605      	movgt	r5, r0
 80155f8:	e7ef      	b.n	80155da <_ZNK8touchgfx4Font17getStringWidthRTLEhPKtSt9__va_list+0x36>
 80155fa:	4628      	mov	r0, r5
 80155fc:	b01c      	add	sp, #112	; 0x70
 80155fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08015602 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8015602:	b508      	push	{r3, lr}
 8015604:	6803      	ldr	r3, [r0, #0]
 8015606:	68db      	ldr	r3, [r3, #12]
 8015608:	4798      	blx	r3
 801560a:	b128      	cbz	r0, 8015618 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 801560c:	7b43      	ldrb	r3, [r0, #13]
 801560e:	7a80      	ldrb	r0, [r0, #10]
 8015610:	005b      	lsls	r3, r3, #1
 8015612:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015616:	4318      	orrs	r0, r3
 8015618:	bd08      	pop	{r3, pc}

0801561a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 801561a:	b40e      	push	{r1, r2, r3}
 801561c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801561e:	b09e      	sub	sp, #120	; 0x78
 8015620:	ab23      	add	r3, sp, #140	; 0x8c
 8015622:	4605      	mov	r5, r0
 8015624:	f853 4b04 	ldr.w	r4, [r3], #4
 8015628:	9303      	str	r3, [sp, #12]
 801562a:	a805      	add	r0, sp, #20
 801562c:	f000 fdc9 	bl	80161c2 <_ZN8touchgfx12TextProviderC1Ev>
 8015630:	682b      	ldr	r3, [r5, #0]
 8015632:	4628      	mov	r0, r5
 8015634:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015636:	4798      	blx	r3
 8015638:	682b      	ldr	r3, [r5, #0]
 801563a:	4606      	mov	r6, r0
 801563c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801563e:	4628      	mov	r0, r5
 8015640:	4798      	blx	r3
 8015642:	4633      	mov	r3, r6
 8015644:	ae1e      	add	r6, sp, #120	; 0x78
 8015646:	4621      	mov	r1, r4
 8015648:	9000      	str	r0, [sp, #0]
 801564a:	9a03      	ldr	r2, [sp, #12]
 801564c:	2400      	movs	r4, #0
 801564e:	a805      	add	r0, sp, #20
 8015650:	f000 fe22 	bl	8016298 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015654:	f846 4d68 	str.w	r4, [r6, #-104]!
 8015658:	462a      	mov	r2, r5
 801565a:	4633      	mov	r3, r6
 801565c:	4621      	mov	r1, r4
 801565e:	a805      	add	r0, sp, #20
 8015660:	f001 fdaa 	bl	80171b8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015664:	b1f0      	cbz	r0, 80156a4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8015666:	280a      	cmp	r0, #10
 8015668:	d018      	beq.n	801569c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801566a:	9f04      	ldr	r7, [sp, #16]
 801566c:	b1b7      	cbz	r7, 801569c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801566e:	7b78      	ldrb	r0, [r7, #13]
 8015670:	7a3b      	ldrb	r3, [r7, #8]
 8015672:	88aa      	ldrh	r2, [r5, #4]
 8015674:	00c1      	lsls	r1, r0, #3
 8015676:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801567a:	4319      	orrs	r1, r3
 801567c:	0643      	lsls	r3, r0, #25
 801567e:	bf44      	itt	mi
 8015680:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8015684:	b219      	sxthmi	r1, r3
 8015686:	0100      	lsls	r0, r0, #4
 8015688:	79fb      	ldrb	r3, [r7, #7]
 801568a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801568e:	4303      	orrs	r3, r0
 8015690:	4413      	add	r3, r2
 8015692:	1a5b      	subs	r3, r3, r1
 8015694:	b29b      	uxth	r3, r3
 8015696:	42a3      	cmp	r3, r4
 8015698:	bfc8      	it	gt
 801569a:	b21c      	sxthgt	r4, r3
 801569c:	4633      	mov	r3, r6
 801569e:	462a      	mov	r2, r5
 80156a0:	2100      	movs	r1, #0
 80156a2:	e7dc      	b.n	801565e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 80156a4:	b2a0      	uxth	r0, r4
 80156a6:	b01e      	add	sp, #120	; 0x78
 80156a8:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80156ac:	b003      	add	sp, #12
 80156ae:	4770      	bx	lr

080156b0 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 80156b0:	b40e      	push	{r1, r2, r3}
 80156b2:	b570      	push	{r4, r5, r6, lr}
 80156b4:	b09d      	sub	sp, #116	; 0x74
 80156b6:	ab21      	add	r3, sp, #132	; 0x84
 80156b8:	4604      	mov	r4, r0
 80156ba:	f853 5b04 	ldr.w	r5, [r3], #4
 80156be:	9302      	str	r3, [sp, #8]
 80156c0:	a803      	add	r0, sp, #12
 80156c2:	f000 fd7e 	bl	80161c2 <_ZN8touchgfx12TextProviderC1Ev>
 80156c6:	6823      	ldr	r3, [r4, #0]
 80156c8:	4620      	mov	r0, r4
 80156ca:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80156cc:	4798      	blx	r3
 80156ce:	6823      	ldr	r3, [r4, #0]
 80156d0:	4606      	mov	r6, r0
 80156d2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80156d4:	4620      	mov	r0, r4
 80156d6:	4798      	blx	r3
 80156d8:	4633      	mov	r3, r6
 80156da:	9000      	str	r0, [sp, #0]
 80156dc:	9a02      	ldr	r2, [sp, #8]
 80156de:	4629      	mov	r1, r5
 80156e0:	a803      	add	r0, sp, #12
 80156e2:	f000 fdd9 	bl	8016298 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80156e6:	a803      	add	r0, sp, #12
 80156e8:	f001 fe60 	bl	80173ac <_ZN8touchgfx12TextProvider11getNextCharEv>
 80156ec:	2401      	movs	r4, #1
 80156ee:	b2a3      	uxth	r3, r4
 80156f0:	b140      	cbz	r0, 8015704 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 80156f2:	280a      	cmp	r0, #10
 80156f4:	bf08      	it	eq
 80156f6:	3301      	addeq	r3, #1
 80156f8:	a803      	add	r0, sp, #12
 80156fa:	bf08      	it	eq
 80156fc:	b21c      	sxtheq	r4, r3
 80156fe:	f001 fe55 	bl	80173ac <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015702:	e7f4      	b.n	80156ee <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8015704:	4618      	mov	r0, r3
 8015706:	b01d      	add	sp, #116	; 0x74
 8015708:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801570c:	b003      	add	sp, #12
 801570e:	4770      	bx	lr

08015710 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8015710:	b40e      	push	{r1, r2, r3}
 8015712:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015714:	b09e      	sub	sp, #120	; 0x78
 8015716:	ab23      	add	r3, sp, #140	; 0x8c
 8015718:	4604      	mov	r4, r0
 801571a:	f853 5b04 	ldr.w	r5, [r3], #4
 801571e:	9303      	str	r3, [sp, #12]
 8015720:	a805      	add	r0, sp, #20
 8015722:	f000 fd4e 	bl	80161c2 <_ZN8touchgfx12TextProviderC1Ev>
 8015726:	6823      	ldr	r3, [r4, #0]
 8015728:	4620      	mov	r0, r4
 801572a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801572c:	4798      	blx	r3
 801572e:	6823      	ldr	r3, [r4, #0]
 8015730:	4606      	mov	r6, r0
 8015732:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015734:	4620      	mov	r0, r4
 8015736:	4798      	blx	r3
 8015738:	4633      	mov	r3, r6
 801573a:	4629      	mov	r1, r5
 801573c:	9000      	str	r0, [sp, #0]
 801573e:	9a03      	ldr	r2, [sp, #12]
 8015740:	a805      	add	r0, sp, #20
 8015742:	ad1e      	add	r5, sp, #120	; 0x78
 8015744:	f000 fda8 	bl	8016298 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015748:	2100      	movs	r1, #0
 801574a:	f845 1d68 	str.w	r1, [r5, #-104]!
 801574e:	4622      	mov	r2, r4
 8015750:	462b      	mov	r3, r5
 8015752:	a805      	add	r0, sp, #20
 8015754:	f001 fd30 	bl	80171b8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015758:	26ff      	movs	r6, #255	; 0xff
 801575a:	b1d8      	cbz	r0, 8015794 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 801575c:	280a      	cmp	r0, #10
 801575e:	d012      	beq.n	8015786 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8015760:	9804      	ldr	r0, [sp, #16]
 8015762:	b180      	cbz	r0, 8015786 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8015764:	7b47      	ldrb	r7, [r0, #13]
 8015766:	7922      	ldrb	r2, [r4, #4]
 8015768:	00fb      	lsls	r3, r7, #3
 801576a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801576e:	7a03      	ldrb	r3, [r0, #8]
 8015770:	430b      	orrs	r3, r1
 8015772:	0679      	lsls	r1, r7, #25
 8015774:	bf44      	itt	mi
 8015776:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801577a:	b21b      	sxthmi	r3, r3
 801577c:	1ad3      	subs	r3, r2, r3
 801577e:	b2db      	uxtb	r3, r3
 8015780:	429e      	cmp	r6, r3
 8015782:	bf28      	it	cs
 8015784:	461e      	movcs	r6, r3
 8015786:	462b      	mov	r3, r5
 8015788:	4622      	mov	r2, r4
 801578a:	2100      	movs	r1, #0
 801578c:	a805      	add	r0, sp, #20
 801578e:	f001 fd13 	bl	80171b8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015792:	e7e2      	b.n	801575a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 8015794:	4630      	mov	r0, r6
 8015796:	b01e      	add	sp, #120	; 0x78
 8015798:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801579c:	b003      	add	sp, #12
 801579e:	4770      	bx	lr

080157a0 <_ZNK8touchgfx8Drawable10invalidateEv>:
 80157a0:	b513      	push	{r0, r1, r4, lr}
 80157a2:	6803      	ldr	r3, [r0, #0]
 80157a4:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80157a8:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80157ac:	f8ad 1004 	strh.w	r1, [sp, #4]
 80157b0:	2400      	movs	r4, #0
 80157b2:	9400      	str	r4, [sp, #0]
 80157b4:	f8ad 2006 	strh.w	r2, [sp, #6]
 80157b8:	691b      	ldr	r3, [r3, #16]
 80157ba:	4669      	mov	r1, sp
 80157bc:	4798      	blx	r3
 80157be:	b002      	add	sp, #8
 80157c0:	bd10      	pop	{r4, pc}

080157c2 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80157c2:	b538      	push	{r3, r4, r5, lr}
 80157c4:	680b      	ldr	r3, [r1, #0]
 80157c6:	460c      	mov	r4, r1
 80157c8:	68db      	ldr	r3, [r3, #12]
 80157ca:	4605      	mov	r5, r0
 80157cc:	4798      	blx	r3
 80157ce:	6823      	ldr	r3, [r4, #0]
 80157d0:	4620      	mov	r0, r4
 80157d2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80157d4:	4629      	mov	r1, r5
 80157d6:	4798      	blx	r3
 80157d8:	4628      	mov	r0, r5
 80157da:	bd38      	pop	{r3, r4, r5, pc}

080157dc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80157dc:	b410      	push	{r4}
 80157de:	880a      	ldrh	r2, [r1, #0]
 80157e0:	8884      	ldrh	r4, [r0, #4]
 80157e2:	4422      	add	r2, r4
 80157e4:	800a      	strh	r2, [r1, #0]
 80157e6:	88c4      	ldrh	r4, [r0, #6]
 80157e8:	884a      	ldrh	r2, [r1, #2]
 80157ea:	4422      	add	r2, r4
 80157ec:	804a      	strh	r2, [r1, #2]
 80157ee:	6940      	ldr	r0, [r0, #20]
 80157f0:	b120      	cbz	r0, 80157fc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80157f2:	6803      	ldr	r3, [r0, #0]
 80157f4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80157f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80157fa:	4718      	bx	r3
 80157fc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8015800:	4770      	bx	lr

08015802 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8015802:	b570      	push	{r4, r5, r6, lr}
 8015804:	8882      	ldrh	r2, [r0, #4]
 8015806:	880b      	ldrh	r3, [r1, #0]
 8015808:	4413      	add	r3, r2
 801580a:	800b      	strh	r3, [r1, #0]
 801580c:	88c2      	ldrh	r2, [r0, #6]
 801580e:	884b      	ldrh	r3, [r1, #2]
 8015810:	460c      	mov	r4, r1
 8015812:	4413      	add	r3, r2
 8015814:	804b      	strh	r3, [r1, #2]
 8015816:	4605      	mov	r5, r0
 8015818:	1d01      	adds	r1, r0, #4
 801581a:	4620      	mov	r0, r4
 801581c:	f7fa ffa0 	bl	8010760 <_ZN8touchgfx4RectaNERKS0_>
 8015820:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8015824:	2b00      	cmp	r3, #0
 8015826:	dd0b      	ble.n	8015840 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8015828:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801582c:	2b00      	cmp	r3, #0
 801582e:	dd07      	ble.n	8015840 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8015830:	6968      	ldr	r0, [r5, #20]
 8015832:	b128      	cbz	r0, 8015840 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8015834:	6803      	ldr	r3, [r0, #0]
 8015836:	4621      	mov	r1, r4
 8015838:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801583a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801583e:	4718      	bx	r3
 8015840:	bd70      	pop	{r4, r5, r6, pc}
	...

08015844 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8015844:	b570      	push	{r4, r5, r6, lr}
 8015846:	8882      	ldrh	r2, [r0, #4]
 8015848:	880b      	ldrh	r3, [r1, #0]
 801584a:	4413      	add	r3, r2
 801584c:	800b      	strh	r3, [r1, #0]
 801584e:	88c2      	ldrh	r2, [r0, #6]
 8015850:	884b      	ldrh	r3, [r1, #2]
 8015852:	460c      	mov	r4, r1
 8015854:	4413      	add	r3, r2
 8015856:	804b      	strh	r3, [r1, #2]
 8015858:	4605      	mov	r5, r0
 801585a:	1d01      	adds	r1, r0, #4
 801585c:	4620      	mov	r0, r4
 801585e:	f7fa ff7f 	bl	8010760 <_ZN8touchgfx4RectaNERKS0_>
 8015862:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8015866:	2b00      	cmp	r3, #0
 8015868:	dd15      	ble.n	8015896 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x52>
 801586a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801586e:	2b00      	cmp	r3, #0
 8015870:	dd11      	ble.n	8015896 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x52>
 8015872:	6968      	ldr	r0, [r5, #20]
 8015874:	b128      	cbz	r0, 8015882 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8015876:	6803      	ldr	r3, [r0, #0]
 8015878:	691b      	ldr	r3, [r3, #16]
 801587a:	4621      	mov	r1, r4
 801587c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015880:	4718      	bx	r3
 8015882:	4b05      	ldr	r3, [pc, #20]	; (8015898 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x54>)
 8015884:	681b      	ldr	r3, [r3, #0]
 8015886:	3304      	adds	r3, #4
 8015888:	429d      	cmp	r5, r3
 801588a:	d104      	bne.n	8015896 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x52>
 801588c:	f7fe ffe0 	bl	8014850 <_ZN8touchgfx11Application11getInstanceEv>
 8015890:	6803      	ldr	r3, [r0, #0]
 8015892:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8015894:	e7f1      	b.n	801587a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x36>
 8015896:	bd70      	pop	{r4, r5, r6, pc}
 8015898:	20020acc 	.word	0x20020acc

0801589c <_ZN8touchgfx8Drawable12moveRelativeEss>:
 801589c:	b570      	push	{r4, r5, r6, lr}
 801589e:	4604      	mov	r4, r0
 80158a0:	4616      	mov	r6, r2
 80158a2:	460d      	mov	r5, r1
 80158a4:	b901      	cbnz	r1, 80158a8 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80158a6:	b192      	cbz	r2, 80158ce <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80158a8:	6823      	ldr	r3, [r4, #0]
 80158aa:	4620      	mov	r0, r4
 80158ac:	695b      	ldr	r3, [r3, #20]
 80158ae:	4798      	blx	r3
 80158b0:	88e2      	ldrh	r2, [r4, #6]
 80158b2:	88a1      	ldrh	r1, [r4, #4]
 80158b4:	4432      	add	r2, r6
 80158b6:	4429      	add	r1, r5
 80158b8:	4620      	mov	r0, r4
 80158ba:	b212      	sxth	r2, r2
 80158bc:	b209      	sxth	r1, r1
 80158be:	f7ec fce9 	bl	8002294 <_ZN8touchgfx8Drawable5setXYEss>
 80158c2:	6823      	ldr	r3, [r4, #0]
 80158c4:	4620      	mov	r0, r4
 80158c6:	695b      	ldr	r3, [r3, #20]
 80158c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80158cc:	4718      	bx	r3
 80158ce:	bd70      	pop	{r4, r5, r6, pc}

080158d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80158d0:	b510      	push	{r4, lr}
 80158d2:	4604      	mov	r4, r0
 80158d4:	4608      	mov	r0, r1
 80158d6:	2300      	movs	r3, #0
 80158d8:	8023      	strh	r3, [r4, #0]
 80158da:	8063      	strh	r3, [r4, #2]
 80158dc:	6803      	ldr	r3, [r0, #0]
 80158de:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80158e2:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80158e6:	80a1      	strh	r1, [r4, #4]
 80158e8:	80e2      	strh	r2, [r4, #6]
 80158ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80158ec:	4621      	mov	r1, r4
 80158ee:	4798      	blx	r3
 80158f0:	4620      	mov	r0, r4
 80158f2:	bd10      	pop	{r4, pc}

080158f4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 80158f4:	b530      	push	{r4, r5, lr}
 80158f6:	8083      	strh	r3, [r0, #4]
 80158f8:	f89d 300c 	ldrb.w	r3, [sp, #12]
 80158fc:	f89d 5010 	ldrb.w	r5, [sp, #16]
 8015900:	7183      	strb	r3, [r0, #6]
 8015902:	79c3      	ldrb	r3, [r0, #7]
 8015904:	6101      	str	r1, [r0, #16]
 8015906:	f365 0306 	bfi	r3, r5, #0, #7
 801590a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801590e:	8282      	strh	r2, [r0, #20]
 8015910:	f365 13c7 	bfi	r3, r5, #7, #1
 8015914:	71c3      	strb	r3, [r0, #7]
 8015916:	f89d 3018 	ldrb.w	r3, [sp, #24]
 801591a:	7203      	strb	r3, [r0, #8]
 801591c:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8015920:	7243      	strb	r3, [r0, #9]
 8015922:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8015926:	8143      	strh	r3, [r0, #10]
 8015928:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801592c:	8183      	strh	r3, [r0, #12]
 801592e:	4b01      	ldr	r3, [pc, #4]	; (8015934 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 8015930:	6003      	str	r3, [r0, #0]
 8015932:	bd30      	pop	{r4, r5, pc}
 8015934:	0802a318 	.word	0x0802a318

08015938 <_ZNK8touchgfx9ConstFont4findEt>:
 8015938:	b5f0      	push	{r4, r5, r6, r7, lr}
 801593a:	6904      	ldr	r4, [r0, #16]
 801593c:	b3bc      	cbz	r4, 80159ae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801593e:	88a3      	ldrh	r3, [r4, #4]
 8015940:	8a82      	ldrh	r2, [r0, #20]
 8015942:	1acb      	subs	r3, r1, r3
 8015944:	f102 32ff 	add.w	r2, r2, #4294967295
 8015948:	d431      	bmi.n	80159ae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801594a:	4293      	cmp	r3, r2
 801594c:	dd0c      	ble.n	8015968 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801594e:	230e      	movs	r3, #14
 8015950:	fb03 4302 	mla	r3, r3, r2, r4
 8015954:	889b      	ldrh	r3, [r3, #4]
 8015956:	1a5b      	subs	r3, r3, r1
 8015958:	1ad3      	subs	r3, r2, r3
 801595a:	429a      	cmp	r2, r3
 801595c:	db27      	blt.n	80159ae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801595e:	2b00      	cmp	r3, #0
 8015960:	bfbc      	itt	lt
 8015962:	2302      	movlt	r3, #2
 8015964:	fb92 f3f3 	sdivlt	r3, r2, r3
 8015968:	2500      	movs	r5, #0
 801596a:	260e      	movs	r6, #14
 801596c:	4295      	cmp	r5, r2
 801596e:	dc1e      	bgt.n	80159ae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015970:	fb06 4003 	mla	r0, r6, r3, r4
 8015974:	8887      	ldrh	r7, [r0, #4]
 8015976:	42b9      	cmp	r1, r7
 8015978:	d01a      	beq.n	80159b0 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801597a:	d20d      	bcs.n	8015998 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 801597c:	1e5a      	subs	r2, r3, #1
 801597e:	4295      	cmp	r5, r2
 8015980:	dc15      	bgt.n	80159ae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015982:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8015986:	1a5b      	subs	r3, r3, r1
 8015988:	1ad3      	subs	r3, r2, r3
 801598a:	429a      	cmp	r2, r3
 801598c:	db0f      	blt.n	80159ae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801598e:	429d      	cmp	r5, r3
 8015990:	ddec      	ble.n	801596c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015992:	1953      	adds	r3, r2, r5
 8015994:	105b      	asrs	r3, r3, #1
 8015996:	e7e9      	b.n	801596c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015998:	1c5d      	adds	r5, r3, #1
 801599a:	42aa      	cmp	r2, r5
 801599c:	db07      	blt.n	80159ae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801599e:	8a43      	ldrh	r3, [r0, #18]
 80159a0:	1acb      	subs	r3, r1, r3
 80159a2:	442b      	add	r3, r5
 80159a4:	429d      	cmp	r5, r3
 80159a6:	dc02      	bgt.n	80159ae <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80159a8:	429a      	cmp	r2, r3
 80159aa:	dadf      	bge.n	801596c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80159ac:	e7f1      	b.n	8015992 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80159ae:	2000      	movs	r0, #0
 80159b0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080159b2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80159b2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80159b4:	4604      	mov	r4, r0
 80159b6:	4617      	mov	r7, r2
 80159b8:	461e      	mov	r6, r3
 80159ba:	b911      	cbnz	r1, 80159c2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80159bc:	2500      	movs	r5, #0
 80159be:	4628      	mov	r0, r5
 80159c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80159c2:	290a      	cmp	r1, #10
 80159c4:	d0fa      	beq.n	80159bc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80159c6:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80159ca:	4291      	cmp	r1, r2
 80159cc:	d0f6      	beq.n	80159bc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80159ce:	f242 020b 	movw	r2, #8203	; 0x200b
 80159d2:	4291      	cmp	r1, r2
 80159d4:	d0f2      	beq.n	80159bc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80159d6:	f7ff ffaf 	bl	8015938 <_ZNK8touchgfx9ConstFont4findEt>
 80159da:	4605      	mov	r5, r0
 80159dc:	b950      	cbnz	r0, 80159f4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80159de:	6823      	ldr	r3, [r4, #0]
 80159e0:	4620      	mov	r0, r4
 80159e2:	691b      	ldr	r3, [r3, #16]
 80159e4:	4798      	blx	r3
 80159e6:	4601      	mov	r1, r0
 80159e8:	4620      	mov	r0, r4
 80159ea:	f7ff ffa5 	bl	8015938 <_ZNK8touchgfx9ConstFont4findEt>
 80159ee:	4605      	mov	r5, r0
 80159f0:	2800      	cmp	r0, #0
 80159f2:	d0e3      	beq.n	80159bc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80159f4:	6823      	ldr	r3, [r4, #0]
 80159f6:	4629      	mov	r1, r5
 80159f8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80159fa:	4620      	mov	r0, r4
 80159fc:	4798      	blx	r3
 80159fe:	6038      	str	r0, [r7, #0]
 8015a00:	6823      	ldr	r3, [r4, #0]
 8015a02:	4620      	mov	r0, r4
 8015a04:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8015a06:	4798      	blx	r3
 8015a08:	7030      	strb	r0, [r6, #0]
 8015a0a:	e7d8      	b.n	80159be <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08015a0c <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 8015a0c:	2000      	movs	r0, #0
 8015a0e:	4770      	bx	lr

08015a10 <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 8015a10:	2001      	movs	r0, #1
 8015a12:	4770      	bx	lr

08015a14 <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 8015a14:	2002      	movs	r0, #2
 8015a16:	4770      	bx	lr

08015a18 <_ZN8touchgfx6ScreenD1Ev>:
 8015a18:	4770      	bx	lr

08015a1a <_ZN8touchgfx12GestureEventD1Ev>:
 8015a1a:	4770      	bx	lr

08015a1c <_ZN8touchgfx9DragEventD1Ev>:
 8015a1c:	4770      	bx	lr

08015a1e <_ZN8touchgfx10ClickEventD1Ev>:
 8015a1e:	4770      	bx	lr

08015a20 <_ZN8touchgfx10ClickEventD0Ev>:
 8015a20:	b510      	push	{r4, lr}
 8015a22:	210c      	movs	r1, #12
 8015a24:	4604      	mov	r4, r0
 8015a26:	f00e fcd8 	bl	80243da <_ZdlPvj>
 8015a2a:	4620      	mov	r0, r4
 8015a2c:	bd10      	pop	{r4, pc}

08015a2e <_ZN8touchgfx9DragEventD0Ev>:
 8015a2e:	b510      	push	{r4, lr}
 8015a30:	2110      	movs	r1, #16
 8015a32:	4604      	mov	r4, r0
 8015a34:	f00e fcd1 	bl	80243da <_ZdlPvj>
 8015a38:	4620      	mov	r0, r4
 8015a3a:	bd10      	pop	{r4, pc}

08015a3c <_ZN8touchgfx12GestureEventD0Ev>:
 8015a3c:	b510      	push	{r4, lr}
 8015a3e:	210c      	movs	r1, #12
 8015a40:	4604      	mov	r4, r0
 8015a42:	f00e fcca 	bl	80243da <_ZdlPvj>
 8015a46:	4620      	mov	r0, r4
 8015a48:	bd10      	pop	{r4, pc}

08015a4a <_ZN8touchgfx6ScreenD0Ev>:
 8015a4a:	b510      	push	{r4, lr}
 8015a4c:	213c      	movs	r1, #60	; 0x3c
 8015a4e:	4604      	mov	r4, r0
 8015a50:	f00e fcc3 	bl	80243da <_ZdlPvj>
 8015a54:	4620      	mov	r0, r4
 8015a56:	bd10      	pop	{r4, pc}

08015a58 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8015a58:	b530      	push	{r4, r5, lr}
 8015a5a:	460d      	mov	r5, r1
 8015a5c:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8015a5e:	b087      	sub	sp, #28
 8015a60:	4604      	mov	r4, r0
 8015a62:	b301      	cbz	r1, 8015aa6 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8015a64:	a801      	add	r0, sp, #4
 8015a66:	f7ff ff33 	bl	80158d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015a6a:	892a      	ldrh	r2, [r5, #8]
 8015a6c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8015a70:	7928      	ldrb	r0, [r5, #4]
 8015a72:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8015a76:	f88d 0010 	strb.w	r0, [sp, #16]
 8015a7a:	1ad2      	subs	r2, r2, r3
 8015a7c:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8015a7e:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8015a80:	f8ad 1012 	strh.w	r1, [sp, #18]
 8015a84:	441a      	add	r2, r3
 8015a86:	896b      	ldrh	r3, [r5, #10]
 8015a88:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8015a8c:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015a90:	1b5b      	subs	r3, r3, r5
 8015a92:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8015a94:	442b      	add	r3, r5
 8015a96:	4d05      	ldr	r5, [pc, #20]	; (8015aac <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8015a98:	9503      	str	r5, [sp, #12]
 8015a9a:	f8ad 3016 	strh.w	r3, [sp, #22]
 8015a9e:	6803      	ldr	r3, [r0, #0]
 8015aa0:	a903      	add	r1, sp, #12
 8015aa2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015aa4:	4798      	blx	r3
 8015aa6:	b007      	add	sp, #28
 8015aa8:	bd30      	pop	{r4, r5, pc}
 8015aaa:	bf00      	nop
 8015aac:	0802a398 	.word	0x0802a398

08015ab0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8015ab0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015ab4:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8015ab6:	b08a      	sub	sp, #40	; 0x28
 8015ab8:	4604      	mov	r4, r0
 8015aba:	460d      	mov	r5, r1
 8015abc:	b113      	cbz	r3, 8015ac4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8015abe:	790b      	ldrb	r3, [r1, #4]
 8015ac0:	2b00      	cmp	r3, #0
 8015ac2:	d044      	beq.n	8015b4e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8015ac4:	f104 0804 	add.w	r8, r4, #4
 8015ac8:	4641      	mov	r1, r8
 8015aca:	a803      	add	r0, sp, #12
 8015acc:	f7ff ff00 	bl	80158d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015ad0:	792b      	ldrb	r3, [r5, #4]
 8015ad2:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8015ad6:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8015ada:	b983      	cbnz	r3, 8015afe <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8015adc:	892a      	ldrh	r2, [r5, #8]
 8015ade:	88e9      	ldrh	r1, [r5, #6]
 8015ae0:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8015ae4:	1b92      	subs	r2, r2, r6
 8015ae6:	1bc9      	subs	r1, r1, r7
 8015ae8:	9301      	str	r3, [sp, #4]
 8015aea:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8015aee:	9300      	str	r3, [sp, #0]
 8015af0:	b212      	sxth	r2, r2
 8015af2:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8015af6:	b209      	sxth	r1, r1
 8015af8:	4640      	mov	r0, r8
 8015afa:	f7fa fd4d 	bl	8010598 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8015afe:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8015b00:	b329      	cbz	r1, 8015b4e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8015b02:	a805      	add	r0, sp, #20
 8015b04:	f7ff fee4 	bl	80158d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015b08:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8015b0c:	792b      	ldrb	r3, [r5, #4]
 8015b0e:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8015b10:	f88d 3020 	strb.w	r3, [sp, #32]
 8015b14:	1abf      	subs	r7, r7, r2
 8015b16:	88ea      	ldrh	r2, [r5, #6]
 8015b18:	4417      	add	r7, r2
 8015b1a:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8015b1c:	4417      	add	r7, r2
 8015b1e:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8015b22:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8015b26:	1ab6      	subs	r6, r6, r2
 8015b28:	892a      	ldrh	r2, [r5, #8]
 8015b2a:	4416      	add	r6, r2
 8015b2c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8015b2e:	4416      	add	r6, r2
 8015b30:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8015b34:	4a07      	ldr	r2, [pc, #28]	; (8015b54 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8015b36:	9207      	str	r2, [sp, #28]
 8015b38:	2600      	movs	r6, #0
 8015b3a:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8015b3e:	6803      	ldr	r3, [r0, #0]
 8015b40:	a907      	add	r1, sp, #28
 8015b42:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015b44:	4798      	blx	r3
 8015b46:	792b      	ldrb	r3, [r5, #4]
 8015b48:	b10b      	cbz	r3, 8015b4e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8015b4a:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8015b4e:	b00a      	add	sp, #40	; 0x28
 8015b50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015b54:	0802a370 	.word	0x0802a370

08015b58 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8015b58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015b5c:	460c      	mov	r4, r1
 8015b5e:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8015b60:	b088      	sub	sp, #32
 8015b62:	4605      	mov	r5, r0
 8015b64:	2900      	cmp	r1, #0
 8015b66:	d06d      	beq.n	8015c44 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8015b68:	4668      	mov	r0, sp
 8015b6a:	f7ff feb1 	bl	80158d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015b6e:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8015b70:	88e3      	ldrh	r3, [r4, #6]
 8015b72:	f9bd 8000 	ldrsh.w	r8, [sp]
 8015b76:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8015b7a:	440b      	add	r3, r1
 8015b7c:	b21b      	sxth	r3, r3
 8015b7e:	4543      	cmp	r3, r8
 8015b80:	db31      	blt.n	8015be6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015b82:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8015b86:	44c4      	add	ip, r8
 8015b88:	fa0f fc8c 	sxth.w	ip, ip
 8015b8c:	4563      	cmp	r3, ip
 8015b8e:	da2a      	bge.n	8015be6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015b90:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8015b92:	8926      	ldrh	r6, [r4, #8]
 8015b94:	4416      	add	r6, r2
 8015b96:	b236      	sxth	r6, r6
 8015b98:	42be      	cmp	r6, r7
 8015b9a:	db24      	blt.n	8015be6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015b9c:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8015ba0:	4438      	add	r0, r7
 8015ba2:	b200      	sxth	r0, r0
 8015ba4:	4286      	cmp	r6, r0
 8015ba6:	da1e      	bge.n	8015be6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015ba8:	8963      	ldrh	r3, [r4, #10]
 8015baa:	4419      	add	r1, r3
 8015bac:	b209      	sxth	r1, r1
 8015bae:	4541      	cmp	r1, r8
 8015bb0:	db08      	blt.n	8015bc4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8015bb2:	4561      	cmp	r1, ip
 8015bb4:	da06      	bge.n	8015bc4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8015bb6:	89a3      	ldrh	r3, [r4, #12]
 8015bb8:	441a      	add	r2, r3
 8015bba:	b212      	sxth	r2, r2
 8015bbc:	42ba      	cmp	r2, r7
 8015bbe:	db01      	blt.n	8015bc4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8015bc0:	4282      	cmp	r2, r0
 8015bc2:	db10      	blt.n	8015be6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015bc4:	4b21      	ldr	r3, [pc, #132]	; (8015c4c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8015bc6:	9304      	str	r3, [sp, #16]
 8015bc8:	2302      	movs	r3, #2
 8015bca:	f88d 3014 	strb.w	r3, [sp, #20]
 8015bce:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8015bd0:	2300      	movs	r3, #0
 8015bd2:	f8ad 3016 	strh.w	r3, [sp, #22]
 8015bd6:	f8ad 3018 	strh.w	r3, [sp, #24]
 8015bda:	f8ad 301a 	strh.w	r3, [sp, #26]
 8015bde:	6803      	ldr	r3, [r0, #0]
 8015be0:	a904      	add	r1, sp, #16
 8015be2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015be4:	4798      	blx	r3
 8015be6:	1d29      	adds	r1, r5, #4
 8015be8:	a802      	add	r0, sp, #8
 8015bea:	f7ff fe71 	bl	80158d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015bee:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8015bf2:	88e0      	ldrh	r0, [r4, #6]
 8015bf4:	7921      	ldrb	r1, [r4, #4]
 8015bf6:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8015bfa:	8922      	ldrh	r2, [r4, #8]
 8015bfc:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8015bfe:	f88d 1014 	strb.w	r1, [sp, #20]
 8015c02:	eba3 0808 	sub.w	r8, r3, r8
 8015c06:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8015c0a:	1bdf      	subs	r7, r3, r7
 8015c0c:	b2bb      	uxth	r3, r7
 8015c0e:	fa1f f888 	uxth.w	r8, r8
 8015c12:	8967      	ldrh	r7, [r4, #10]
 8015c14:	89a4      	ldrh	r4, [r4, #12]
 8015c16:	4440      	add	r0, r8
 8015c18:	4460      	add	r0, ip
 8015c1a:	441a      	add	r2, r3
 8015c1c:	44b8      	add	r8, r7
 8015c1e:	4423      	add	r3, r4
 8015c20:	f8ad 0016 	strh.w	r0, [sp, #22]
 8015c24:	4433      	add	r3, r6
 8015c26:	4432      	add	r2, r6
 8015c28:	44e0      	add	r8, ip
 8015c2a:	4c09      	ldr	r4, [pc, #36]	; (8015c50 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8015c2c:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8015c2e:	9404      	str	r4, [sp, #16]
 8015c30:	f8ad 2018 	strh.w	r2, [sp, #24]
 8015c34:	f8ad 801a 	strh.w	r8, [sp, #26]
 8015c38:	f8ad 301c 	strh.w	r3, [sp, #28]
 8015c3c:	6803      	ldr	r3, [r0, #0]
 8015c3e:	a904      	add	r1, sp, #16
 8015c40:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015c42:	4798      	blx	r3
 8015c44:	b008      	add	sp, #32
 8015c46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015c4a:	bf00      	nop
 8015c4c:	0802a370 	.word	0x0802a370
 8015c50:	0802a384 	.word	0x0802a384

08015c54 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8015c54:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8015c56:	4604      	mov	r4, r0
 8015c58:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8015c5c:	3201      	adds	r2, #1
 8015c5e:	d112      	bne.n	8015c86 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8015c60:	6803      	ldr	r3, [r0, #0]
 8015c62:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8015c66:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8015c6a:	f8ad 1004 	strh.w	r1, [sp, #4]
 8015c6e:	2500      	movs	r5, #0
 8015c70:	9500      	str	r5, [sp, #0]
 8015c72:	466d      	mov	r5, sp
 8015c74:	4629      	mov	r1, r5
 8015c76:	f8ad 2006 	strh.w	r2, [sp, #6]
 8015c7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015c7c:	4798      	blx	r3
 8015c7e:	e895 0003 	ldmia.w	r5, {r0, r1}
 8015c82:	e884 0003 	stmia.w	r4, {r0, r1}
 8015c86:	4620      	mov	r0, r4
 8015c88:	b003      	add	sp, #12
 8015c8a:	bd30      	pop	{r4, r5, pc}

08015c8c <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8015c8c:	b513      	push	{r0, r1, r4, lr}
 8015c8e:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8015c92:	3301      	adds	r3, #1
 8015c94:	4604      	mov	r4, r0
 8015c96:	d109      	bne.n	8015cac <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8015c98:	4601      	mov	r1, r0
 8015c9a:	4668      	mov	r0, sp
 8015c9c:	f7ff fe18 	bl	80158d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015ca0:	f8bd 3000 	ldrh.w	r3, [sp]
 8015ca4:	8423      	strh	r3, [r4, #32]
 8015ca6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8015caa:	8463      	strh	r3, [r4, #34]	; 0x22
 8015cac:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8015cb0:	b002      	add	sp, #8
 8015cb2:	bd10      	pop	{r4, pc}

08015cb4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8015cb4:	b513      	push	{r0, r1, r4, lr}
 8015cb6:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8015cba:	3301      	adds	r3, #1
 8015cbc:	4604      	mov	r4, r0
 8015cbe:	d109      	bne.n	8015cd4 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8015cc0:	4601      	mov	r1, r0
 8015cc2:	4668      	mov	r0, sp
 8015cc4:	f7ff fe04 	bl	80158d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015cc8:	f8bd 3000 	ldrh.w	r3, [sp]
 8015ccc:	8423      	strh	r3, [r4, #32]
 8015cce:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8015cd2:	8463      	strh	r3, [r4, #34]	; 0x22
 8015cd4:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8015cd8:	b002      	add	sp, #8
 8015cda:	bd10      	pop	{r4, pc}

08015cdc <_ZN8touchgfx6ScreenC1Ev>:
 8015cdc:	b570      	push	{r4, r5, r6, lr}
 8015cde:	4605      	mov	r5, r0
 8015ce0:	4b16      	ldr	r3, [pc, #88]	; (8015d3c <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8015ce2:	f845 3b04 	str.w	r3, [r5], #4
 8015ce6:	2300      	movs	r3, #0
 8015ce8:	8103      	strh	r3, [r0, #8]
 8015cea:	8143      	strh	r3, [r0, #10]
 8015cec:	8183      	strh	r3, [r0, #12]
 8015cee:	81c3      	strh	r3, [r0, #14]
 8015cf0:	8203      	strh	r3, [r0, #16]
 8015cf2:	8243      	strh	r3, [r0, #18]
 8015cf4:	8283      	strh	r3, [r0, #20]
 8015cf6:	82c3      	strh	r3, [r0, #22]
 8015cf8:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8015cfc:	6203      	str	r3, [r0, #32]
 8015cfe:	8483      	strh	r3, [r0, #36]	; 0x24
 8015d00:	84c3      	strh	r3, [r0, #38]	; 0x26
 8015d02:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8015d06:	4a0e      	ldr	r2, [pc, #56]	; (8015d40 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8015d08:	6343      	str	r3, [r0, #52]	; 0x34
 8015d0a:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8015d0e:	4b0d      	ldr	r3, [pc, #52]	; (8015d44 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8015d10:	6042      	str	r2, [r0, #4]
 8015d12:	f9b3 6000 	ldrsh.w	r6, [r3]
 8015d16:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8015d18:	4a0b      	ldr	r2, [pc, #44]	; (8015d48 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8015d1a:	4604      	mov	r4, r0
 8015d1c:	2101      	movs	r1, #1
 8015d1e:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8015d22:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8015d26:	f9b2 1000 	ldrsh.w	r1, [r2]
 8015d2a:	4628      	mov	r0, r5
 8015d2c:	4798      	blx	r3
 8015d2e:	6863      	ldr	r3, [r4, #4]
 8015d30:	4628      	mov	r0, r5
 8015d32:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015d34:	4631      	mov	r1, r6
 8015d36:	4798      	blx	r3
 8015d38:	4620      	mov	r0, r4
 8015d3a:	bd70      	pop	{r4, r5, r6, pc}
 8015d3c:	0802a3ac 	.word	0x0802a3ac
 8015d40:	080290b4 	.word	0x080290b4
 8015d44:	20020a86 	.word	0x20020a86
 8015d48:	20020a84 	.word	0x20020a84

08015d4c <_ZN8touchgfx6Screen4drawEv>:
 8015d4c:	b507      	push	{r0, r1, r2, lr}
 8015d4e:	4b09      	ldr	r3, [pc, #36]	; (8015d74 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8015d50:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015d54:	4b08      	ldr	r3, [pc, #32]	; (8015d78 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8015d56:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015d5a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015d5e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015d62:	6803      	ldr	r3, [r0, #0]
 8015d64:	2100      	movs	r1, #0
 8015d66:	9100      	str	r1, [sp, #0]
 8015d68:	689b      	ldr	r3, [r3, #8]
 8015d6a:	4669      	mov	r1, sp
 8015d6c:	4798      	blx	r3
 8015d6e:	b003      	add	sp, #12
 8015d70:	f85d fb04 	ldr.w	pc, [sp], #4
 8015d74:	20020a84 	.word	0x20020a84
 8015d78:	20020a86 	.word	0x20020a86

08015d7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8015d7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d80:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8015d84:	2b00      	cmp	r3, #0
 8015d86:	b089      	sub	sp, #36	; 0x24
 8015d88:	4680      	mov	r8, r0
 8015d8a:	460c      	mov	r4, r1
 8015d8c:	4615      	mov	r5, r2
 8015d8e:	dd0e      	ble.n	8015dae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8015d90:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8015d94:	2b00      	cmp	r3, #0
 8015d96:	dd0a      	ble.n	8015dae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8015d98:	4628      	mov	r0, r5
 8015d9a:	f7ff ff5b 	bl	8015c54 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8015d9e:	4621      	mov	r1, r4
 8015da0:	f7fe fccc 	bl	801473c <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015da4:	69eb      	ldr	r3, [r5, #28]
 8015da6:	b928      	cbnz	r0, 8015db4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8015da8:	461d      	mov	r5, r3
 8015daa:	2b00      	cmp	r3, #0
 8015dac:	d1f4      	bne.n	8015d98 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8015dae:	b009      	add	sp, #36	; 0x24
 8015db0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015db4:	ae04      	add	r6, sp, #16
 8015db6:	2b00      	cmp	r3, #0
 8015db8:	f000 80b5 	beq.w	8015f26 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8015dbc:	682b      	ldr	r3, [r5, #0]
 8015dbe:	4629      	mov	r1, r5
 8015dc0:	68db      	ldr	r3, [r3, #12]
 8015dc2:	a802      	add	r0, sp, #8
 8015dc4:	4798      	blx	r3
 8015dc6:	4628      	mov	r0, r5
 8015dc8:	f7ff ff60 	bl	8015c8c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8015dcc:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8015dd0:	4407      	add	r7, r0
 8015dd2:	4628      	mov	r0, r5
 8015dd4:	f7ff ff6e 	bl	8015cb4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8015dd8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8015ddc:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8015de0:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015de4:	4418      	add	r0, r3
 8015de6:	4621      	mov	r1, r4
 8015de8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8015dec:	f8ad 0012 	strh.w	r0, [sp, #18]
 8015df0:	b23f      	sxth	r7, r7
 8015df2:	4630      	mov	r0, r6
 8015df4:	f8ad 3016 	strh.w	r3, [sp, #22]
 8015df8:	f8ad 7010 	strh.w	r7, [sp, #16]
 8015dfc:	f7fa fcb0 	bl	8010760 <_ZN8touchgfx4RectaNERKS0_>
 8015e00:	4628      	mov	r0, r5
 8015e02:	f7ff ff27 	bl	8015c54 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8015e06:	4602      	mov	r2, r0
 8015e08:	e896 0003 	ldmia.w	r6, {r0, r1}
 8015e0c:	ab06      	add	r3, sp, #24
 8015e0e:	e883 0003 	stmia.w	r3, {r0, r1}
 8015e12:	4611      	mov	r1, r2
 8015e14:	4618      	mov	r0, r3
 8015e16:	f7fa fca3 	bl	8010760 <_ZN8touchgfx4RectaNERKS0_>
 8015e1a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8015e1e:	f9b4 1000 	ldrsh.w	r1, [r4]
 8015e22:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8015e26:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8015e2a:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8015e2e:	4299      	cmp	r1, r3
 8015e30:	d10b      	bne.n	8015e4a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8015e32:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8015e36:	4552      	cmp	r2, sl
 8015e38:	d107      	bne.n	8015e4a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8015e3a:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8015e3e:	455a      	cmp	r2, fp
 8015e40:	d103      	bne.n	8015e4a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8015e42:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8015e46:	454a      	cmp	r2, r9
 8015e48:	d06d      	beq.n	8015f26 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8015e4a:	f1bb 0f00 	cmp.w	fp, #0
 8015e4e:	dd65      	ble.n	8015f1c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8015e50:	f1b9 0f00 	cmp.w	r9, #0
 8015e54:	dd62      	ble.n	8015f1c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8015e56:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8015e5a:	fa1f f08a 	uxth.w	r0, sl
 8015e5e:	4552      	cmp	r2, sl
 8015e60:	9000      	str	r0, [sp, #0]
 8015e62:	da12      	bge.n	8015e8a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8015e64:	9301      	str	r3, [sp, #4]
 8015e66:	9b00      	ldr	r3, [sp, #0]
 8015e68:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8015e6c:	f8ad 2012 	strh.w	r2, [sp, #18]
 8015e70:	1a9a      	subs	r2, r3, r2
 8015e72:	f8ad 1010 	strh.w	r1, [sp, #16]
 8015e76:	f8ad 0014 	strh.w	r0, [sp, #20]
 8015e7a:	f8ad 2016 	strh.w	r2, [sp, #22]
 8015e7e:	69ea      	ldr	r2, [r5, #28]
 8015e80:	4631      	mov	r1, r6
 8015e82:	4640      	mov	r0, r8
 8015e84:	f7ff ff7a 	bl	8015d7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8015e88:	9b01      	ldr	r3, [sp, #4]
 8015e8a:	f9b4 2000 	ldrsh.w	r2, [r4]
 8015e8e:	429a      	cmp	r2, r3
 8015e90:	b29f      	uxth	r7, r3
 8015e92:	da0d      	bge.n	8015eb0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8015e94:	f8ad 2010 	strh.w	r2, [sp, #16]
 8015e98:	1aba      	subs	r2, r7, r2
 8015e9a:	f8ad a012 	strh.w	sl, [sp, #18]
 8015e9e:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015ea2:	f8ad 9016 	strh.w	r9, [sp, #22]
 8015ea6:	69ea      	ldr	r2, [r5, #28]
 8015ea8:	4631      	mov	r1, r6
 8015eaa:	4640      	mov	r0, r8
 8015eac:	f7ff ff66 	bl	8015d7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8015eb0:	8822      	ldrh	r2, [r4, #0]
 8015eb2:	88a3      	ldrh	r3, [r4, #4]
 8015eb4:	445f      	add	r7, fp
 8015eb6:	4413      	add	r3, r2
 8015eb8:	b29b      	uxth	r3, r3
 8015eba:	b2bf      	uxth	r7, r7
 8015ebc:	b23a      	sxth	r2, r7
 8015ebe:	b219      	sxth	r1, r3
 8015ec0:	4291      	cmp	r1, r2
 8015ec2:	dd0d      	ble.n	8015ee0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8015ec4:	1bdb      	subs	r3, r3, r7
 8015ec6:	f8ad 2010 	strh.w	r2, [sp, #16]
 8015eca:	f8ad a012 	strh.w	sl, [sp, #18]
 8015ece:	f8ad 3014 	strh.w	r3, [sp, #20]
 8015ed2:	f8ad 9016 	strh.w	r9, [sp, #22]
 8015ed6:	69ea      	ldr	r2, [r5, #28]
 8015ed8:	4631      	mov	r1, r6
 8015eda:	4640      	mov	r0, r8
 8015edc:	f7ff ff4e 	bl	8015d7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8015ee0:	88e2      	ldrh	r2, [r4, #6]
 8015ee2:	8863      	ldrh	r3, [r4, #2]
 8015ee4:	4413      	add	r3, r2
 8015ee6:	9a00      	ldr	r2, [sp, #0]
 8015ee8:	444a      	add	r2, r9
 8015eea:	b29b      	uxth	r3, r3
 8015eec:	fa1f f982 	uxth.w	r9, r2
 8015ef0:	fa0f f289 	sxth.w	r2, r9
 8015ef4:	b219      	sxth	r1, r3
 8015ef6:	428a      	cmp	r2, r1
 8015ef8:	da15      	bge.n	8015f26 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8015efa:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8015efe:	f9b4 0000 	ldrsh.w	r0, [r4]
 8015f02:	f8ad 1014 	strh.w	r1, [sp, #20]
 8015f06:	eba3 0309 	sub.w	r3, r3, r9
 8015f0a:	f8ad 0010 	strh.w	r0, [sp, #16]
 8015f0e:	f8ad 2012 	strh.w	r2, [sp, #18]
 8015f12:	f8ad 3016 	strh.w	r3, [sp, #22]
 8015f16:	69ea      	ldr	r2, [r5, #28]
 8015f18:	4631      	mov	r1, r6
 8015f1a:	e001      	b.n	8015f20 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8015f1c:	69ea      	ldr	r2, [r5, #28]
 8015f1e:	4621      	mov	r1, r4
 8015f20:	4640      	mov	r0, r8
 8015f22:	f7ff ff2b 	bl	8015d7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8015f26:	4628      	mov	r0, r5
 8015f28:	f7ff fe94 	bl	8015c54 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8015f2c:	6861      	ldr	r1, [r4, #4]
 8015f2e:	4602      	mov	r2, r0
 8015f30:	6820      	ldr	r0, [r4, #0]
 8015f32:	4633      	mov	r3, r6
 8015f34:	c303      	stmia	r3!, {r0, r1}
 8015f36:	4611      	mov	r1, r2
 8015f38:	4630      	mov	r0, r6
 8015f3a:	f7fa fc11 	bl	8010760 <_ZN8touchgfx4RectaNERKS0_>
 8015f3e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8015f42:	2b00      	cmp	r3, #0
 8015f44:	f77f af33 	ble.w	8015dae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8015f48:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8015f4c:	2b00      	cmp	r3, #0
 8015f4e:	f77f af2e 	ble.w	8015dae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8015f52:	4628      	mov	r0, r5
 8015f54:	f7ff fe9a 	bl	8015c8c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8015f58:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8015f5c:	1a18      	subs	r0, r3, r0
 8015f5e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8015f62:	4628      	mov	r0, r5
 8015f64:	f7ff fea6 	bl	8015cb4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8015f68:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8015f6c:	1a18      	subs	r0, r3, r0
 8015f6e:	f8ad 0012 	strh.w	r0, [sp, #18]
 8015f72:	682b      	ldr	r3, [r5, #0]
 8015f74:	4631      	mov	r1, r6
 8015f76:	689b      	ldr	r3, [r3, #8]
 8015f78:	4628      	mov	r0, r5
 8015f7a:	4798      	blx	r3
 8015f7c:	e717      	b.n	8015dae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08015f7e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8015f7e:	b570      	push	{r4, r5, r6, lr}
 8015f80:	460c      	mov	r4, r1
 8015f82:	b086      	sub	sp, #24
 8015f84:	1d06      	adds	r6, r0, #4
 8015f86:	2300      	movs	r3, #0
 8015f88:	4631      	mov	r1, r6
 8015f8a:	4605      	mov	r5, r0
 8015f8c:	a802      	add	r0, sp, #8
 8015f8e:	9301      	str	r3, [sp, #4]
 8015f90:	f7ff fc9e 	bl	80158d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015f94:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8015f98:	8822      	ldrh	r2, [r4, #0]
 8015f9a:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8015f9e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8015fa2:	f8ad 0014 	strh.w	r0, [sp, #20]
 8015fa6:	1ad2      	subs	r2, r2, r3
 8015fa8:	8863      	ldrh	r3, [r4, #2]
 8015faa:	f8ad 2010 	strh.w	r2, [sp, #16]
 8015fae:	1a5b      	subs	r3, r3, r1
 8015fb0:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8015fb4:	f8ad 1016 	strh.w	r1, [sp, #22]
 8015fb8:	aa01      	add	r2, sp, #4
 8015fba:	a904      	add	r1, sp, #16
 8015fbc:	4630      	mov	r0, r6
 8015fbe:	f8ad 3012 	strh.w	r3, [sp, #18]
 8015fc2:	f7fa fca5 	bl	8010910 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8015fc6:	9a01      	ldr	r2, [sp, #4]
 8015fc8:	b11a      	cbz	r2, 8015fd2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8015fca:	4621      	mov	r1, r4
 8015fcc:	4628      	mov	r0, r5
 8015fce:	f7ff fed5 	bl	8015d7c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8015fd2:	b006      	add	sp, #24
 8015fd4:	bd70      	pop	{r4, r5, r6, pc}

08015fd6 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8015fd6:	b530      	push	{r4, r5, lr}
 8015fd8:	4602      	mov	r2, r0
 8015fda:	4604      	mov	r4, r0
 8015fdc:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8015fe0:	b085      	sub	sp, #20
 8015fe2:	460d      	mov	r5, r1
 8015fe4:	6851      	ldr	r1, [r2, #4]
 8015fe6:	466b      	mov	r3, sp
 8015fe8:	c303      	stmia	r3!, {r0, r1}
 8015fea:	4629      	mov	r1, r5
 8015fec:	4668      	mov	r0, sp
 8015fee:	f7fa fbb7 	bl	8010760 <_ZN8touchgfx4RectaNERKS0_>
 8015ff2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8015ff6:	b12b      	cbz	r3, 8016004 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8015ff8:	4669      	mov	r1, sp
 8015ffa:	4620      	mov	r0, r4
 8015ffc:	f7ff ffbf 	bl	8015f7e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8016000:	b005      	add	sp, #20
 8016002:	bd30      	pop	{r4, r5, pc}
 8016004:	3404      	adds	r4, #4
 8016006:	4621      	mov	r1, r4
 8016008:	a802      	add	r0, sp, #8
 801600a:	f7ff fc61 	bl	80158d0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801600e:	f8bd 3000 	ldrh.w	r3, [sp]
 8016012:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8016016:	1a9b      	subs	r3, r3, r2
 8016018:	f8ad 3000 	strh.w	r3, [sp]
 801601c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016020:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016024:	4669      	mov	r1, sp
 8016026:	1a9b      	subs	r3, r3, r2
 8016028:	4620      	mov	r0, r4
 801602a:	f8ad 3002 	strh.w	r3, [sp, #2]
 801602e:	f7fa fc36 	bl	801089e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8016032:	e7e5      	b.n	8016000 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08016034 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8016034:	680a      	ldr	r2, [r1, #0]
 8016036:	460b      	mov	r3, r1
 8016038:	6992      	ldr	r2, [r2, #24]
 801603a:	1d01      	adds	r1, r0, #4
 801603c:	4618      	mov	r0, r3
 801603e:	4710      	bx	r2

08016040 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>:
 8016040:	4298      	cmp	r0, r3
 8016042:	d200      	bcs.n	8016046 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x6>
 8016044:	b913      	cbnz	r3, 801604c <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0xc>
 8016046:	440a      	add	r2, r1
 8016048:	b210      	sxth	r0, r2
 801604a:	4770      	bx	lr
 801604c:	ee07 0a90 	vmov	s15, r0
 8016050:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8016054:	ee07 3a90 	vmov	s15, r3
 8016058:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801605c:	eddf 4a15 	vldr	s9, [pc, #84]	; 80160b4 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x74>
 8016060:	eddf 5a15 	vldr	s11, [pc, #84]	; 80160b8 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x78>
 8016064:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8016068:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801606c:	ee37 7a66 	vsub.f32	s14, s14, s13
 8016070:	ee07 2a90 	vmov	s15, r2
 8016074:	eee7 5a24 	vfma.f32	s11, s14, s9
 8016078:	ee27 5a07 	vmul.f32	s10, s14, s14
 801607c:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8016080:	eee5 6a25 	vfma.f32	s13, s10, s11
 8016084:	ee07 1a90 	vmov	s15, r1
 8016088:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801608c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8016090:	eee6 7a26 	vfma.f32	s15, s12, s13
 8016094:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016098:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801609c:	bfcc      	ite	gt
 801609e:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80160a2:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80160a6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80160aa:	ee17 3a90 	vmov	r3, s15
 80160ae:	b218      	sxth	r0, r3
 80160b0:	4770      	bx	lr
 80160b2:	bf00      	nop
 80160b4:	402ce6b0 	.word	0x402ce6b0
 80160b8:	3fd9cd60 	.word	0x3fd9cd60

080160bc <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst>:
 80160bc:	4298      	cmp	r0, r3
 80160be:	d200      	bcs.n	80160c2 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0x6>
 80160c0:	b913      	cbnz	r3, 80160c8 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0xc>
 80160c2:	1888      	adds	r0, r1, r2
 80160c4:	b200      	sxth	r0, r0
 80160c6:	4770      	bx	lr
 80160c8:	ee07 0a90 	vmov	s15, r0
 80160cc:	ee07 3a10 	vmov	s14, r3
 80160d0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80160d4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80160d8:	ee77 7aa7 	vadd.f32	s15, s15, s15
 80160dc:	2002      	movs	r0, #2
 80160de:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80160e2:	fb92 f0f0 	sdiv	r0, r2, r0
 80160e6:	ee07 0a90 	vmov	s15, r0
 80160ea:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 80160ee:	eeb4 7ac6 	vcmpe.f32	s14, s12
 80160f2:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 80160f6:	ee07 1a90 	vmov	s15, r1
 80160fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80160fe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016102:	eddf 4a16 	vldr	s9, [pc, #88]	; 801615c <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0xa0>
 8016106:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 801610a:	d518      	bpl.n	801613e <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0x82>
 801610c:	ed9f 5a14 	vldr	s10, [pc, #80]	; 8016160 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0xa4>
 8016110:	eea7 5a24 	vfma.f32	s10, s14, s9
 8016114:	ee67 5a07 	vmul.f32	s11, s14, s14
 8016118:	ee25 7a85 	vmul.f32	s14, s11, s10
 801611c:	eee7 7a26 	vfma.f32	s15, s14, s13
 8016120:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016124:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016128:	bfcc      	ite	gt
 801612a:	ee77 7a86 	vaddgt.f32	s15, s15, s12
 801612e:	ee77 7ac6 	vsuble.f32	s15, s15, s12
 8016132:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016136:	ee17 3a90 	vmov	r3, s15
 801613a:	b218      	sxth	r0, r3
 801613c:	4770      	bx	lr
 801613e:	eef0 5a00 	vmov.f32	s11, #0	; 0x40000000  2.0
 8016142:	ee37 7a65 	vsub.f32	s14, s14, s11
 8016146:	ed9f 5a07 	vldr	s10, [pc, #28]	; 8016164 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0xa8>
 801614a:	eea7 5a24 	vfma.f32	s10, s14, s9
 801614e:	ee27 4a07 	vmul.f32	s8, s14, s14
 8016152:	eee4 5a05 	vfma.f32	s11, s8, s10
 8016156:	eee5 7aa6 	vfma.f32	s15, s11, s13
 801615a:	e7e1      	b.n	8016120 <_ZN8touchgfx15EasingEquations13backEaseInOutEtsst+0x64>
 801615c:	406612ff 	.word	0x406612ff
 8016160:	c02612ff 	.word	0xc02612ff
 8016164:	402612ff 	.word	0x402612ff

08016168 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8016168:	4298      	cmp	r0, r3
 801616a:	d200      	bcs.n	801616e <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 801616c:	b913      	cbnz	r3, 8016174 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 801616e:	440a      	add	r2, r1
 8016170:	b210      	sxth	r0, r2
 8016172:	4770      	bx	lr
 8016174:	ee07 2a90 	vmov	s15, r2
 8016178:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801617c:	ee07 0a90 	vmov	s15, r0
 8016180:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8016184:	ee67 7a27 	vmul.f32	s15, s14, s15
 8016188:	ee07 3a10 	vmov	s14, r3
 801618c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8016190:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8016194:	ee07 1a90 	vmov	s15, r1
 8016198:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801619c:	ee77 7a27 	vadd.f32	s15, s14, s15
 80161a0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80161a4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80161a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80161ac:	bfcc      	ite	gt
 80161ae:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80161b2:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80161b6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80161ba:	ee17 3a90 	vmov	r3, s15
 80161be:	b218      	sxth	r0, r3
 80161c0:	4770      	bx	lr

080161c2 <_ZN8touchgfx12TextProviderC1Ev>:
 80161c2:	b538      	push	{r3, r4, r5, lr}
 80161c4:	2500      	movs	r5, #0
 80161c6:	2302      	movs	r3, #2
 80161c8:	4604      	mov	r4, r0
 80161ca:	e9c0 5500 	strd	r5, r5, [r0]
 80161ce:	7403      	strb	r3, [r0, #16]
 80161d0:	6145      	str	r5, [r0, #20]
 80161d2:	7605      	strb	r5, [r0, #24]
 80161d4:	83c5      	strh	r5, [r0, #30]
 80161d6:	8405      	strh	r5, [r0, #32]
 80161d8:	86c5      	strh	r5, [r0, #54]	; 0x36
 80161da:	8705      	strh	r5, [r0, #56]	; 0x38
 80161dc:	87c5      	strh	r5, [r0, #62]	; 0x3e
 80161de:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 80161e2:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 80161e6:	220e      	movs	r2, #14
 80161e8:	4629      	mov	r1, r5
 80161ea:	304c      	adds	r0, #76	; 0x4c
 80161ec:	f00e fbca 	bl	8024984 <memset>
 80161f0:	2301      	movs	r3, #1
 80161f2:	4620      	mov	r0, r4
 80161f4:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 80161f8:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80161fc:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8016200:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8016204:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8016208:	f7f0 fe08 	bl	8006e1c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801620c:	4620      	mov	r0, r4
 801620e:	bd38      	pop	{r3, r4, r5, pc}

08016210 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8016210:	b508      	push	{r3, lr}
 8016212:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8016214:	b92b      	cbnz	r3, 8016222 <_ZN8touchgfx12TextProvider11endOfStringEv+0x12>
 8016216:	4b07      	ldr	r3, [pc, #28]	; (8016234 <_ZN8touchgfx12TextProvider11endOfStringEv+0x24>)
 8016218:	4a07      	ldr	r2, [pc, #28]	; (8016238 <_ZN8touchgfx12TextProvider11endOfStringEv+0x28>)
 801621a:	4808      	ldr	r0, [pc, #32]	; (801623c <_ZN8touchgfx12TextProvider11endOfStringEv+0x2c>)
 801621c:	21c0      	movs	r1, #192	; 0xc0
 801621e:	f00e f90b 	bl	8024438 <__assert_func>
 8016222:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8016224:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016228:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 801622a:	fab0 f080 	clz	r0, r0
 801622e:	0940      	lsrs	r0, r0, #5
 8016230:	bd08      	pop	{r3, pc}
 8016232:	bf00      	nop
 8016234:	08027fac 	.word	0x08027fac
 8016238:	0802a607 	.word	0x0802a607
 801623c:	0802807e 	.word	0x0802807e

08016240 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8016240:	b530      	push	{r4, r5, lr}
 8016242:	2500      	movs	r5, #0
 8016244:	2401      	movs	r4, #1
 8016246:	6843      	ldr	r3, [r0, #4]
 8016248:	b913      	cbnz	r3, 8016250 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801624a:	6803      	ldr	r3, [r0, #0]
 801624c:	b313      	cbz	r3, 8016294 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801624e:	6043      	str	r3, [r0, #4]
 8016250:	7e03      	ldrb	r3, [r0, #24]
 8016252:	b143      	cbz	r3, 8016266 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8016254:	6943      	ldr	r3, [r0, #20]
 8016256:	b12b      	cbz	r3, 8016264 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8016258:	881a      	ldrh	r2, [r3, #0]
 801625a:	b11a      	cbz	r2, 8016264 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801625c:	1c9a      	adds	r2, r3, #2
 801625e:	6142      	str	r2, [r0, #20]
 8016260:	8818      	ldrh	r0, [r3, #0]
 8016262:	bd30      	pop	{r4, r5, pc}
 8016264:	7605      	strb	r5, [r0, #24]
 8016266:	6843      	ldr	r3, [r0, #4]
 8016268:	8819      	ldrh	r1, [r3, #0]
 801626a:	b199      	cbz	r1, 8016294 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801626c:	1c9a      	adds	r2, r3, #2
 801626e:	2902      	cmp	r1, #2
 8016270:	6042      	str	r2, [r0, #4]
 8016272:	d1f5      	bne.n	8016260 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8016274:	7c03      	ldrb	r3, [r0, #16]
 8016276:	2b01      	cmp	r3, #1
 8016278:	d8e5      	bhi.n	8016246 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801627a:	1c5a      	adds	r2, r3, #1
 801627c:	3302      	adds	r3, #2
 801627e:	7402      	strb	r2, [r0, #16]
 8016280:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8016284:	6143      	str	r3, [r0, #20]
 8016286:	2b00      	cmp	r3, #0
 8016288:	d0dd      	beq.n	8016246 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801628a:	881b      	ldrh	r3, [r3, #0]
 801628c:	2b00      	cmp	r3, #0
 801628e:	d0da      	beq.n	8016246 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016290:	7604      	strb	r4, [r0, #24]
 8016292:	e7d8      	b.n	8016246 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016294:	2000      	movs	r0, #0
 8016296:	e7e4      	b.n	8016262 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08016298 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8016298:	b430      	push	{r4, r5}
 801629a:	6815      	ldr	r5, [r2, #0]
 801629c:	6085      	str	r5, [r0, #8]
 801629e:	6852      	ldr	r2, [r2, #4]
 80162a0:	60c2      	str	r2, [r0, #12]
 80162a2:	6443      	str	r3, [r0, #68]	; 0x44
 80162a4:	2200      	movs	r2, #0
 80162a6:	9b02      	ldr	r3, [sp, #8]
 80162a8:	7402      	strb	r2, [r0, #16]
 80162aa:	6001      	str	r1, [r0, #0]
 80162ac:	6483      	str	r3, [r0, #72]	; 0x48
 80162ae:	6042      	str	r2, [r0, #4]
 80162b0:	6142      	str	r2, [r0, #20]
 80162b2:	7602      	strb	r2, [r0, #24]
 80162b4:	8702      	strh	r2, [r0, #56]	; 0x38
 80162b6:	8402      	strh	r2, [r0, #32]
 80162b8:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 80162bc:	bc30      	pop	{r4, r5}
 80162be:	f7f0 bdad 	b.w	8006e1c <_ZN8touchgfx12TextProvider18initializeInternalEv>

080162c2 <_ZN8touchgfx12TextProvider20unicodeConverterInitEv>:
 80162c2:	2301      	movs	r3, #1
 80162c4:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 80162c8:	4770      	bx	lr
	...

080162cc <_ZN8touchgfx12TextProvider16unicodeConverterEh>:
 80162cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80162d0:	b089      	sub	sp, #36	; 0x24
 80162d2:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 80162d4:	9302      	str	r3, [sp, #8]
 80162d6:	b92b      	cbnz	r3, 80162e4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x18>
 80162d8:	4bb4      	ldr	r3, [pc, #720]	; (80165ac <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2e0>)
 80162da:	4ab5      	ldr	r2, [pc, #724]	; (80165b0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2e4>)
 80162dc:	21c0      	movs	r1, #192	; 0xc0
 80162de:	48b5      	ldr	r0, [pc, #724]	; (80165b4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2e8>)
 80162e0:	f00e f8aa 	bl	8024438 <__assert_func>
 80162e4:	f8b0 b036 	ldrh.w	fp, [r0, #54]	; 0x36
 80162e8:	eb00 064b 	add.w	r6, r0, fp, lsl #1
 80162ec:	8c73      	ldrh	r3, [r6, #34]	; 0x22
 80162ee:	2b00      	cmp	r3, #0
 80162f0:	f000 8158 	beq.w	80165a4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 80162f4:	2b7f      	cmp	r3, #127	; 0x7f
 80162f6:	d819      	bhi.n	801632c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x60>
 80162f8:	2901      	cmp	r1, #1
 80162fa:	d117      	bne.n	801632c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x60>
 80162fc:	2b3c      	cmp	r3, #60	; 0x3c
 80162fe:	f000 83fd 	beq.w	8016afc <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x830>
 8016302:	2b3e      	cmp	r3, #62	; 0x3e
 8016304:	f000 83fc 	beq.w	8016b00 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x834>
 8016308:	2b28      	cmp	r3, #40	; 0x28
 801630a:	f000 83fb 	beq.w	8016b04 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x838>
 801630e:	2b29      	cmp	r3, #41	; 0x29
 8016310:	f000 83fa 	beq.w	8016b08 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x83c>
 8016314:	2b5b      	cmp	r3, #91	; 0x5b
 8016316:	f000 83f9 	beq.w	8016b0c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x840>
 801631a:	2b5d      	cmp	r3, #93	; 0x5d
 801631c:	f000 83f8 	beq.w	8016b10 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x844>
 8016320:	2b7b      	cmp	r3, #123	; 0x7b
 8016322:	f000 83f7 	beq.w	8016b14 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x848>
 8016326:	2b7d      	cmp	r3, #125	; 0x7d
 8016328:	f000 83f6 	beq.w	8016b18 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x84c>
 801632c:	9a02      	ldr	r2, [sp, #8]
 801632e:	2a01      	cmp	r2, #1
 8016330:	d803      	bhi.n	801633a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6e>
 8016332:	4ba1      	ldr	r3, [pc, #644]	; (80165b8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2ec>)
 8016334:	4aa1      	ldr	r2, [pc, #644]	; (80165bc <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2f0>)
 8016336:	21c5      	movs	r1, #197	; 0xc5
 8016338:	e7d1      	b.n	80162de <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x12>
 801633a:	f10b 0201 	add.w	r2, fp, #1
 801633e:	b292      	uxth	r2, r2
 8016340:	2a09      	cmp	r2, #9
 8016342:	4611      	mov	r1, r2
 8016344:	bf88      	it	hi
 8016346:	f1a2 010a 	subhi.w	r1, r2, #10
 801634a:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801634e:	9104      	str	r1, [sp, #16]
 8016350:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8016352:	9101      	str	r1, [sp, #4]
 8016354:	9902      	ldr	r1, [sp, #8]
 8016356:	2902      	cmp	r1, #2
 8016358:	d0eb      	beq.n	8016332 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x66>
 801635a:	f10b 0102 	add.w	r1, fp, #2
 801635e:	b289      	uxth	r1, r1
 8016360:	2909      	cmp	r1, #9
 8016362:	bf88      	it	hi
 8016364:	390a      	subhi	r1, #10
 8016366:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801636a:	9c01      	ldr	r4, [sp, #4]
 801636c:	8c4d      	ldrh	r5, [r1, #34]	; 0x22
 801636e:	f240 6151 	movw	r1, #1617	; 0x651
 8016372:	428c      	cmp	r4, r1
 8016374:	d125      	bne.n	80163c2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xf6>
 8016376:	f2a3 614b 	subw	r1, r3, #1611	; 0x64b
 801637a:	b289      	uxth	r1, r1
 801637c:	2914      	cmp	r1, #20
 801637e:	d914      	bls.n	80163aa <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xde>
 8016380:	f023 0104 	bic.w	r1, r3, #4
 8016384:	b289      	uxth	r1, r1
 8016386:	f5b1 6fce 	cmp.w	r1, #1648	; 0x670
 801638a:	d00e      	beq.n	80163aa <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xde>
 801638c:	f2a3 61d6 	subw	r1, r3, #1750	; 0x6d6
 8016390:	b289      	uxth	r1, r1
 8016392:	2917      	cmp	r1, #23
 8016394:	d804      	bhi.n	80163a0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xd4>
 8016396:	4f8a      	ldr	r7, [pc, #552]	; (80165c0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2f4>)
 8016398:	fa27 f101 	lsr.w	r1, r7, r1
 801639c:	07c9      	lsls	r1, r1, #31
 801639e:	d404      	bmi.n	80163aa <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xde>
 80163a0:	f6a3 01e4 	subw	r1, r3, #2276	; 0x8e4
 80163a4:	b289      	uxth	r1, r1
 80163a6:	291a      	cmp	r1, #26
 80163a8:	d80b      	bhi.n	80163c2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0xf6>
 80163aa:	2a0a      	cmp	r2, #10
 80163ac:	bf28      	it	cs
 80163ae:	2200      	movcs	r2, #0
 80163b0:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80163b4:	f240 6151 	movw	r1, #1617	; 0x651
 80163b8:	8471      	strh	r1, [r6, #34]	; 0x22
 80163ba:	8453      	strh	r3, [r2, #34]	; 0x22
 80163bc:	461a      	mov	r2, r3
 80163be:	9b01      	ldr	r3, [sp, #4]
 80163c0:	9201      	str	r2, [sp, #4]
 80163c2:	f2a3 6222 	subw	r2, r3, #1570	; 0x622
 80163c6:	b292      	uxth	r2, r2
 80163c8:	2a18      	cmp	r2, #24
 80163ca:	d90e      	bls.n	80163ea <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x11e>
 80163cc:	f5a3 62c8 	sub.w	r2, r3, #1600	; 0x640
 80163d0:	b292      	uxth	r2, r2
 80163d2:	2a0a      	cmp	r2, #10
 80163d4:	d909      	bls.n	80163ea <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x11e>
 80163d6:	f46f 69ce 	mvn.w	r9, #1648	; 0x670
 80163da:	eb03 0209 	add.w	r2, r3, r9
 80163de:	b292      	uxth	r2, r2
 80163e0:	2a62      	cmp	r2, #98	; 0x62
 80163e2:	d902      	bls.n	80163ea <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x11e>
 80163e4:	2b20      	cmp	r3, #32
 80163e6:	f040 80dd 	bne.w	80165a4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 80163ea:	9a02      	ldr	r2, [sp, #8]
 80163ec:	2a03      	cmp	r2, #3
 80163ee:	d0a0      	beq.n	8016332 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x66>
 80163f0:	f10b 0103 	add.w	r1, fp, #3
 80163f4:	b289      	uxth	r1, r1
 80163f6:	2909      	cmp	r1, #9
 80163f8:	460a      	mov	r2, r1
 80163fa:	bf88      	it	hi
 80163fc:	f1a1 020a 	subhi.w	r2, r1, #10
 8016400:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8016404:	f8b2 c022 	ldrh.w	ip, [r2, #34]	; 0x22
 8016408:	9a02      	ldr	r2, [sp, #8]
 801640a:	2a04      	cmp	r2, #4
 801640c:	d091      	beq.n	8016332 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x66>
 801640e:	f10b 0204 	add.w	r2, fp, #4
 8016412:	b292      	uxth	r2, r2
 8016414:	2a09      	cmp	r2, #9
 8016416:	bf88      	it	hi
 8016418:	3a0a      	subhi	r2, #10
 801641a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801641e:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8016420:	f2a2 6622 	subw	r6, r2, #1570	; 0x622
 8016424:	2e18      	cmp	r6, #24
 8016426:	f240 80cd 	bls.w	80165c4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2f8>
 801642a:	f5a2 66c8 	sub.w	r6, r2, #1600	; 0x640
 801642e:	2e0a      	cmp	r6, #10
 8016430:	f240 80c8 	bls.w	80165c4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2f8>
 8016434:	f46f 68ce 	mvn.w	r8, #1648	; 0x670
 8016438:	4442      	add	r2, r8
 801643a:	2a62      	cmp	r2, #98	; 0x62
 801643c:	f240 80c2 	bls.w	80165c4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2f8>
 8016440:	f2a3 6227 	subw	r2, r3, #1575	; 0x627
 8016444:	b292      	uxth	r2, r2
 8016446:	2a21      	cmp	r2, #33	; 0x21
 8016448:	f200 80bc 	bhi.w	80165c4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2f8>
 801644c:	f2a5 6227 	subw	r2, r5, #1575	; 0x627
 8016450:	b292      	uxth	r2, r2
 8016452:	2a23      	cmp	r2, #35	; 0x23
 8016454:	d82d      	bhi.n	80164b2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e6>
 8016456:	f2ac 622f 	subw	r2, ip, #1583	; 0x62f
 801645a:	b292      	uxth	r2, r2
 801645c:	2a18      	cmp	r2, #24
 801645e:	d828      	bhi.n	80164b2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e6>
 8016460:	eb05 0285 	add.w	r2, r5, r5, lsl #2
 8016464:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8016468:	f5a2 4282 	sub.w	r2, r2, #16640	; 0x4100
 801646c:	ebc3 1603 	rsb	r6, r3, r3, lsl #4
 8016470:	3a1a      	subs	r2, #26
 8016472:	ebc6 1606 	rsb	r6, r6, r6, lsl #4
 8016476:	eb02 0286 	add.w	r2, r2, r6, lsl #2
 801647a:	6c87      	ldr	r7, [r0, #72]	; 0x48
 801647c:	4462      	add	r2, ip
 801647e:	b292      	uxth	r2, r2
 8016480:	b1bf      	cbz	r7, 80164b2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e6>
 8016482:	8b3e      	ldrh	r6, [r7, #24]
 8016484:	b1ae      	cbz	r6, 80164b2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e6>
 8016486:	f8d7 9000 	ldr.w	r9, [r7]
 801648a:	f04f 0e00 	mov.w	lr, #0
 801648e:	eb06 070e 	add.w	r7, r6, lr
 8016492:	107f      	asrs	r7, r7, #1
 8016494:	240a      	movs	r4, #10
 8016496:	fb04 fa07 	mul.w	sl, r4, r7
 801649a:	eb09 080a 	add.w	r8, r9, sl
 801649e:	f839 a00a 	ldrh.w	sl, [r9, sl]
 80164a2:	4552      	cmp	r2, sl
 80164a4:	d968      	bls.n	8016578 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2ac>
 80164a6:	f107 0e01 	add.w	lr, r7, #1
 80164aa:	e000      	b.n	80164ae <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e2>
 80164ac:	463e      	mov	r6, r7
 80164ae:	4576      	cmp	r6, lr
 80164b0:	dced      	bgt.n	801648e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1c2>
 80164b2:	f5a3 62c5 	sub.w	r2, r3, #1576	; 0x628
 80164b6:	b292      	uxth	r2, r2
 80164b8:	2a22      	cmp	r2, #34	; 0x22
 80164ba:	f240 8086 	bls.w	80165ca <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2fe>
 80164be:	9a01      	ldr	r2, [sp, #4]
 80164c0:	f2a2 624b 	subw	r2, r2, #1611	; 0x64b
 80164c4:	b292      	uxth	r2, r2
 80164c6:	2a14      	cmp	r2, #20
 80164c8:	d91c      	bls.n	8016504 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x238>
 80164ca:	9a01      	ldr	r2, [sp, #4]
 80164cc:	f5b2 6fce 	cmp.w	r2, #1648	; 0x670
 80164d0:	d018      	beq.n	8016504 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x238>
 80164d2:	9901      	ldr	r1, [sp, #4]
 80164d4:	f240 6274 	movw	r2, #1652	; 0x674
 80164d8:	4291      	cmp	r1, r2
 80164da:	d013      	beq.n	8016504 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x238>
 80164dc:	f2a1 62d6 	subw	r2, r1, #1750	; 0x6d6
 80164e0:	b292      	uxth	r2, r2
 80164e2:	2a17      	cmp	r2, #23
 80164e4:	d804      	bhi.n	80164f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x224>
 80164e6:	4936      	ldr	r1, [pc, #216]	; (80165c0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2f4>)
 80164e8:	fa21 f202 	lsr.w	r2, r1, r2
 80164ec:	07d7      	lsls	r7, r2, #31
 80164ee:	d409      	bmi.n	8016504 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x238>
 80164f0:	9a01      	ldr	r2, [sp, #4]
 80164f2:	f6a2 02e4 	subw	r2, r2, #2276	; 0x8e4
 80164f6:	b292      	uxth	r2, r2
 80164f8:	2a1a      	cmp	r2, #26
 80164fa:	d903      	bls.n	8016504 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x238>
 80164fc:	2200      	movs	r2, #0
 80164fe:	46ac      	mov	ip, r5
 8016500:	9d01      	ldr	r5, [sp, #4]
 8016502:	9201      	str	r2, [sp, #4]
 8016504:	2b20      	cmp	r3, #32
 8016506:	d005      	beq.n	8016514 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x248>
 8016508:	f2a3 6226 	subw	r2, r3, #1574	; 0x626
 801650c:	b292      	uxth	r2, r2
 801650e:	2a24      	cmp	r2, #36	; 0x24
 8016510:	f200 814e 	bhi.w	80167b0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4e4>
 8016514:	f2a5 6222 	subw	r2, r5, #1570	; 0x622
 8016518:	b292      	uxth	r2, r2
 801651a:	2ab3      	cmp	r2, #179	; 0xb3
 801651c:	f200 8148 	bhi.w	80167b0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4e4>
 8016520:	f240 6244 	movw	r2, #1604	; 0x644
 8016524:	4295      	cmp	r5, r2
 8016526:	d104      	bne.n	8016532 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x266>
 8016528:	f240 6227 	movw	r2, #1575	; 0x627
 801652c:	4594      	cmp	ip, r2
 801652e:	f000 813f 	beq.w	80167b0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4e4>
 8016532:	9901      	ldr	r1, [sp, #4]
 8016534:	f240 624f 	movw	r2, #1615	; 0x64f
 8016538:	4291      	cmp	r1, r2
 801653a:	f000 8139 	beq.w	80167b0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4e4>
 801653e:	6c81      	ldr	r1, [r0, #72]	; 0x48
 8016540:	2900      	cmp	r1, #0
 8016542:	f000 8135 	beq.w	80167b0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4e4>
 8016546:	8b8a      	ldrh	r2, [r1, #28]
 8016548:	2a00      	cmp	r2, #0
 801654a:	f000 8132 	beq.w	80167b2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4e6>
 801654e:	b2ed      	uxtb	r5, r5
 8016550:	ea45 2503 	orr.w	r5, r5, r3, lsl #8
 8016554:	6889      	ldr	r1, [r1, #8]
 8016556:	b2ad      	uxth	r5, r5
 8016558:	2700      	movs	r7, #0
 801655a:	f04f 080a 	mov.w	r8, #10
 801655e:	19d6      	adds	r6, r2, r7
 8016560:	1076      	asrs	r6, r6, #1
 8016562:	fb08 fc06 	mul.w	ip, r8, r6
 8016566:	eb01 0e0c 	add.w	lr, r1, ip
 801656a:	f831 c00c 	ldrh.w	ip, [r1, ip]
 801656e:	4565      	cmp	r5, ip
 8016570:	f240 8121 	bls.w	80167b6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4ea>
 8016574:	1c77      	adds	r7, r6, #1
 8016576:	e118      	b.n	80167aa <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4de>
 8016578:	d398      	bcc.n	80164ac <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e0>
 801657a:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 801657e:	9c01      	ldr	r4, [sp, #4]
 8016580:	42a2      	cmp	r2, r4
 8016582:	d196      	bne.n	80164b2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e6>
 8016584:	9b02      	ldr	r3, [sp, #8]
 8016586:	86c1      	strh	r1, [r0, #54]	; 0x36
 8016588:	3b03      	subs	r3, #3
 801658a:	2909      	cmp	r1, #9
 801658c:	8703      	strh	r3, [r0, #56]	; 0x38
 801658e:	bf88      	it	hi
 8016590:	f1ab 0207 	subhi.w	r2, fp, #7
 8016594:	f04f 0301 	mov.w	r3, #1
 8016598:	bf88      	it	hi
 801659a:	86c2      	strhhi	r2, [r0, #54]	; 0x36
 801659c:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 80165a0:	f8b8 3002 	ldrh.w	r3, [r8, #2]
 80165a4:	4618      	mov	r0, r3
 80165a6:	b009      	add	sp, #36	; 0x24
 80165a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80165ac:	08027fac 	.word	0x08027fac
 80165b0:	0802a607 	.word	0x0802a607
 80165b4:	0802807e 	.word	0x0802807e
 80165b8:	080280aa 	.word	0x080280aa
 80165bc:	0802a535 	.word	0x0802a535
 80165c0:	00f67e7f 	.word	0x00f67e7f
 80165c4:	2b20      	cmp	r3, #32
 80165c6:	f47f af74 	bne.w	80164b2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1e6>
 80165ca:	9a01      	ldr	r2, [sp, #4]
 80165cc:	f2a2 622c 	subw	r2, r2, #1580	; 0x62c
 80165d0:	b292      	uxth	r2, r2
 80165d2:	2a25      	cmp	r2, #37	; 0x25
 80165d4:	f63f af73 	bhi.w	80164be <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1f2>
 80165d8:	f2a5 612c 	subw	r1, r5, #1580	; 0x62c
 80165dc:	b289      	uxth	r1, r1
 80165de:	2925      	cmp	r1, #37	; 0x25
 80165e0:	d915      	bls.n	801660e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x342>
 80165e2:	f5b5 6fce 	cmp.w	r5, #1648	; 0x670
 80165e6:	f000 82ee 	beq.w	8016bc6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8fa>
 80165ea:	f240 62d2 	movw	r2, #1746	; 0x6d2
 80165ee:	4295      	cmp	r5, r2
 80165f0:	f47f af65 	bne.w	80164be <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1f2>
 80165f4:	9a01      	ldr	r2, [sp, #4]
 80165f6:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80165fa:	00d2      	lsls	r2, r2, #3
 80165fc:	2b20      	cmp	r3, #32
 80165fe:	b292      	uxth	r2, r2
 8016600:	d107      	bne.n	8016612 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x346>
 8016602:	f5a2 5240 	sub.w	r2, r2, #12288	; 0x3000
 8016606:	3a30      	subs	r2, #48	; 0x30
 8016608:	b292      	uxth	r2, r2
 801660a:	2127      	movs	r1, #39	; 0x27
 801660c:	e018      	b.n	8016640 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x374>
 801660e:	2b20      	cmp	r3, #32
 8016610:	d035      	beq.n	801667e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3b2>
 8016612:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8016616:	ebc3 1242 	rsb	r2, r3, r2, lsl #5
 801661a:	0112      	lsls	r2, r2, #4
 801661c:	f502 42e5 	add.w	r2, r2, #29312	; 0x7280
 8016620:	b292      	uxth	r2, r2
 8016622:	9c01      	ldr	r4, [sp, #4]
 8016624:	eb04 0684 	add.w	r6, r4, r4, lsl #2
 8016628:	eb02 02c6 	add.w	r2, r2, r6, lsl #3
 801662c:	f5b5 6fce 	cmp.w	r5, #1648	; 0x670
 8016630:	b292      	uxth	r2, r2
 8016632:	f000 82d4 	beq.w	8016bde <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x912>
 8016636:	f240 66d2 	movw	r6, #1746	; 0x6d2
 801663a:	42b5      	cmp	r5, r6
 801663c:	bf08      	it	eq
 801663e:	2127      	moveq	r1, #39	; 0x27
 8016640:	6c87      	ldr	r7, [r0, #72]	; 0x48
 8016642:	2f00      	cmp	r7, #0
 8016644:	f43f af3b 	beq.w	80164be <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1f2>
 8016648:	8b7e      	ldrh	r6, [r7, #26]
 801664a:	2e00      	cmp	r6, #0
 801664c:	f43f af37 	beq.w	80164be <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1f2>
 8016650:	440a      	add	r2, r1
 8016652:	f502 6212 	add.w	r2, r2, #2336	; 0x920
 8016656:	6879      	ldr	r1, [r7, #4]
 8016658:	b292      	uxth	r2, r2
 801665a:	f04f 0e00 	mov.w	lr, #0
 801665e:	f04f 0a0a 	mov.w	sl, #10
 8016662:	eb06 070e 	add.w	r7, r6, lr
 8016666:	107f      	asrs	r7, r7, #1
 8016668:	fb0a f807 	mul.w	r8, sl, r7
 801666c:	eb01 0908 	add.w	r9, r1, r8
 8016670:	f831 8008 	ldrh.w	r8, [r1, r8]
 8016674:	4542      	cmp	r2, r8
 8016676:	d909      	bls.n	801668c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3c0>
 8016678:	f107 0e01 	add.w	lr, r7, #1
 801667c:	e003      	b.n	8016686 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3ba>
 801667e:	f64c 72d0 	movw	r2, #53200	; 0xcfd0
 8016682:	e7ce      	b.n	8016622 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x356>
 8016684:	463e      	mov	r6, r7
 8016686:	4576      	cmp	r6, lr
 8016688:	dceb      	bgt.n	8016662 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x396>
 801668a:	e718      	b.n	80164be <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x1f2>
 801668c:	d3fa      	bcc.n	8016684 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3b8>
 801668e:	2200      	movs	r2, #0
 8016690:	9201      	str	r2, [sp, #4]
 8016692:	f109 0102 	add.w	r1, r9, #2
 8016696:	2202      	movs	r2, #2
 8016698:	9c01      	ldr	r4, [sp, #4]
 801669a:	4fbe      	ldr	r7, [pc, #760]	; (8016994 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6c8>)
 801669c:	2c00      	cmp	r4, #0
 801669e:	bf0c      	ite	eq
 80166a0:	4616      	moveq	r6, r2
 80166a2:	1c56      	addne	r6, r2, #1
 80166a4:	3601      	adds	r6, #1
 80166a6:	9c02      	ldr	r4, [sp, #8]
 80166a8:	b2b5      	uxth	r5, r6
 80166aa:	42ac      	cmp	r4, r5
 80166ac:	f67f ae41 	bls.w	8016332 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x66>
 80166b0:	445d      	add	r5, fp
 80166b2:	b2ad      	uxth	r5, r5
 80166b4:	2d09      	cmp	r5, #9
 80166b6:	bf88      	it	hi
 80166b8:	3d0a      	subhi	r5, #10
 80166ba:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80166be:	8c6d      	ldrh	r5, [r5, #34]	; 0x22
 80166c0:	f2a5 6c4b 	subw	ip, r5, #1611	; 0x64b
 80166c4:	f1bc 0f14 	cmp.w	ip, #20
 80166c8:	d97a      	bls.n	80167c0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4f4>
 80166ca:	f025 0c04 	bic.w	ip, r5, #4
 80166ce:	f5bc 6fce 	cmp.w	ip, #1648	; 0x670
 80166d2:	d075      	beq.n	80167c0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4f4>
 80166d4:	f2a5 6cd6 	subw	ip, r5, #1750	; 0x6d6
 80166d8:	fa1f fc8c 	uxth.w	ip, ip
 80166dc:	f1bc 0f17 	cmp.w	ip, #23
 80166e0:	d804      	bhi.n	80166ec <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x420>
 80166e2:	fa27 fc0c 	lsr.w	ip, r7, ip
 80166e6:	f01c 0f01 	tst.w	ip, #1
 80166ea:	d169      	bne.n	80167c0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4f4>
 80166ec:	f6a5 0ce4 	subw	ip, r5, #2276	; 0x8e4
 80166f0:	f1bc 0f1a 	cmp.w	ip, #26
 80166f4:	d964      	bls.n	80167c0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4f4>
 80166f6:	f2a5 6622 	subw	r6, r5, #1570	; 0x622
 80166fa:	2e18      	cmp	r6, #24
 80166fc:	d962      	bls.n	80167c4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4f8>
 80166fe:	f5a5 66c8 	sub.w	r6, r5, #1600	; 0x640
 8016702:	2e0a      	cmp	r6, #10
 8016704:	d95e      	bls.n	80167c4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4f8>
 8016706:	f46f 66ce 	mvn.w	r6, #1648	; 0x670
 801670a:	4435      	add	r5, r6
 801670c:	2d62      	cmp	r5, #98	; 0x62
 801670e:	bf94      	ite	ls
 8016710:	2400      	movls	r4, #0
 8016712:	2401      	movhi	r4, #1
 8016714:	f890 5060 	ldrb.w	r5, [r0, #96]	; 0x60
 8016718:	9403      	str	r4, [sp, #12]
 801671a:	f085 0401 	eor.w	r4, r5, #1
 801671e:	9406      	str	r4, [sp, #24]
 8016720:	9c03      	ldr	r4, [sp, #12]
 8016722:	2c00      	cmp	r4, #0
 8016724:	9c06      	ldr	r4, [sp, #24]
 8016726:	bf0c      	ite	eq
 8016728:	2502      	moveq	r5, #2
 801672a:	2500      	movne	r5, #0
 801672c:	eb05 0904 	add.w	r9, r5, r4
 8016730:	2900      	cmp	r1, #0
 8016732:	f000 817f 	beq.w	8016a34 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x768>
 8016736:	f831 5019 	ldrh.w	r5, [r1, r9, lsl #1]
 801673a:	2d00      	cmp	r5, #0
 801673c:	f040 821a 	bne.w	8016b74 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8a8>
 8016740:	2a00      	cmp	r2, #0
 8016742:	f000 8217 	beq.w	8016b74 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8a8>
 8016746:	eb0b 0502 	add.w	r5, fp, r2
 801674a:	b2ad      	uxth	r5, r5
 801674c:	2d09      	cmp	r5, #9
 801674e:	bf88      	it	hi
 8016750:	3d0a      	subhi	r5, #10
 8016752:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8016756:	f8df c23c 	ldr.w	ip, [pc, #572]	; 8016994 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6c8>
 801675a:	8c6f      	ldrh	r7, [r5, #34]	; 0x22
 801675c:	1c56      	adds	r6, r2, #1
 801675e:	f2a7 654b 	subw	r5, r7, #1611	; 0x64b
 8016762:	2d14      	cmp	r5, #20
 8016764:	d911      	bls.n	801678a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4be>
 8016766:	f027 0504 	bic.w	r5, r7, #4
 801676a:	f5b5 6fce 	cmp.w	r5, #1648	; 0x670
 801676e:	d00c      	beq.n	801678a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4be>
 8016770:	f2a7 65d6 	subw	r5, r7, #1750	; 0x6d6
 8016774:	b2ad      	uxth	r5, r5
 8016776:	2d17      	cmp	r5, #23
 8016778:	d803      	bhi.n	8016782 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4b6>
 801677a:	fa2c f505 	lsr.w	r5, ip, r5
 801677e:	07ed      	lsls	r5, r5, #31
 8016780:	d403      	bmi.n	801678a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4be>
 8016782:	f6a7 05e4 	subw	r5, r7, #2276	; 0x8e4
 8016786:	2d1a      	cmp	r5, #26
 8016788:	d81e      	bhi.n	80167c8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4fc>
 801678a:	9c02      	ldr	r4, [sp, #8]
 801678c:	b2b5      	uxth	r5, r6
 801678e:	42ac      	cmp	r4, r5
 8016790:	f67f adcf 	bls.w	8016332 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x66>
 8016794:	445d      	add	r5, fp
 8016796:	b2ad      	uxth	r5, r5
 8016798:	2d09      	cmp	r5, #9
 801679a:	bf88      	it	hi
 801679c:	3d0a      	subhi	r5, #10
 801679e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80167a2:	3601      	adds	r6, #1
 80167a4:	8c6f      	ldrh	r7, [r5, #34]	; 0x22
 80167a6:	e7da      	b.n	801675e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x492>
 80167a8:	4632      	mov	r2, r6
 80167aa:	4297      	cmp	r7, r2
 80167ac:	f6ff aed7 	blt.w	801655e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x292>
 80167b0:	2200      	movs	r2, #0
 80167b2:	4611      	mov	r1, r2
 80167b4:	e770      	b.n	8016698 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3cc>
 80167b6:	d3f7      	bcc.n	80167a8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x4dc>
 80167b8:	f10e 0102 	add.w	r1, lr, #2
 80167bc:	2201      	movs	r2, #1
 80167be:	e76b      	b.n	8016698 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3cc>
 80167c0:	3601      	adds	r6, #1
 80167c2:	e770      	b.n	80166a6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x3da>
 80167c4:	2400      	movs	r4, #0
 80167c6:	e7a5      	b.n	8016714 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x448>
 80167c8:	f8d0 c048 	ldr.w	ip, [r0, #72]	; 0x48
 80167cc:	f1bc 0f00 	cmp.w	ip, #0
 80167d0:	d076      	beq.n	80168c0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5f4>
 80167d2:	f46f 64c4 	mvn.w	r4, #1568	; 0x620
 80167d6:	193d      	adds	r5, r7, r4
 80167d8:	2d19      	cmp	r5, #25
 80167da:	d840      	bhi.n	801685e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x592>
 80167dc:	f107 5700 	add.w	r7, r7, #536870912	; 0x20000000
 80167e0:	f46f 6ac4 	mvn.w	sl, #1568	; 0x620
 80167e4:	f8dc 500c 	ldr.w	r5, [ip, #12]
 80167e8:	4457      	add	r7, sl
 80167ea:	eb05 05c7 	add.w	r5, r5, r7, lsl #3
 80167ee:	9c02      	ldr	r4, [sp, #8]
 80167f0:	f106 0e01 	add.w	lr, r6, #1
 80167f4:	b2b6      	uxth	r6, r6
 80167f6:	42a6      	cmp	r6, r4
 80167f8:	f4bf ad9b 	bcs.w	8016332 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x66>
 80167fc:	445e      	add	r6, fp
 80167fe:	b2b6      	uxth	r6, r6
 8016800:	2e09      	cmp	r6, #9
 8016802:	bf88      	it	hi
 8016804:	3e0a      	subhi	r6, #10
 8016806:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801680a:	f8df 8188 	ldr.w	r8, [pc, #392]	; 8016994 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6c8>
 801680e:	8c77      	ldrh	r7, [r6, #34]	; 0x22
 8016810:	f2a7 664b 	subw	r6, r7, #1611	; 0x64b
 8016814:	2e14      	cmp	r6, #20
 8016816:	d911      	bls.n	801683c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x570>
 8016818:	f027 0604 	bic.w	r6, r7, #4
 801681c:	f5b6 6fce 	cmp.w	r6, #1648	; 0x670
 8016820:	d00c      	beq.n	801683c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x570>
 8016822:	f2a7 66d6 	subw	r6, r7, #1750	; 0x6d6
 8016826:	b2b6      	uxth	r6, r6
 8016828:	2e17      	cmp	r6, #23
 801682a:	d803      	bhi.n	8016834 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x568>
 801682c:	fa28 f606 	lsr.w	r6, r8, r6
 8016830:	07f4      	lsls	r4, r6, #31
 8016832:	d403      	bmi.n	801683c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x570>
 8016834:	f6a7 06e4 	subw	r6, r7, #2276	; 0x8e4
 8016838:	2e1a      	cmp	r6, #26
 801683a:	d847      	bhi.n	80168cc <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x600>
 801683c:	9c02      	ldr	r4, [sp, #8]
 801683e:	fa1f f68e 	uxth.w	r6, lr
 8016842:	42b4      	cmp	r4, r6
 8016844:	f67f ad75 	bls.w	8016332 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x66>
 8016848:	445e      	add	r6, fp
 801684a:	b2b6      	uxth	r6, r6
 801684c:	2e09      	cmp	r6, #9
 801684e:	bf88      	it	hi
 8016850:	3e0a      	subhi	r6, #10
 8016852:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8016856:	f10e 0e01 	add.w	lr, lr, #1
 801685a:	8c77      	ldrh	r7, [r6, #34]	; 0x22
 801685c:	e7d8      	b.n	8016810 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x544>
 801685e:	f46f 68c8 	mvn.w	r8, #1600	; 0x640
 8016862:	eb07 0508 	add.w	r5, r7, r8
 8016866:	2d09      	cmp	r5, #9
 8016868:	d807      	bhi.n	801687a <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5ae>
 801686a:	f107 5700 	add.w	r7, r7, #536870912	; 0x20000000
 801686e:	f46f 6ec8 	mvn.w	lr, #1600	; 0x640
 8016872:	4477      	add	r7, lr
 8016874:	f8dc 5010 	ldr.w	r5, [ip, #16]
 8016878:	e7b7      	b.n	80167ea <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x51e>
 801687a:	f46f 65ce 	mvn.w	r5, #1648	; 0x670
 801687e:	197d      	adds	r5, r7, r5
 8016880:	2d62      	cmp	r5, #98	; 0x62
 8016882:	d81d      	bhi.n	80168c0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5f4>
 8016884:	f8bc 501e 	ldrh.w	r5, [ip, #30]
 8016888:	2d00      	cmp	r5, #0
 801688a:	d0b0      	beq.n	80167ee <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x522>
 801688c:	f8dc 4014 	ldr.w	r4, [ip, #20]
 8016890:	9405      	str	r4, [sp, #20]
 8016892:	f04f 0800 	mov.w	r8, #0
 8016896:	eb05 0e08 	add.w	lr, r5, r8
 801689a:	240a      	movs	r4, #10
 801689c:	ea4f 0e6e 	mov.w	lr, lr, asr #1
 80168a0:	fb04 fa0e 	mul.w	sl, r4, lr
 80168a4:	9c05      	ldr	r4, [sp, #20]
 80168a6:	4454      	add	r4, sl
 80168a8:	9407      	str	r4, [sp, #28]
 80168aa:	9c05      	ldr	r4, [sp, #20]
 80168ac:	f834 a00a 	ldrh.w	sl, [r4, sl]
 80168b0:	45ba      	cmp	sl, r7
 80168b2:	d207      	bcs.n	80168c4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5f8>
 80168b4:	f10e 0801 	add.w	r8, lr, #1
 80168b8:	e000      	b.n	80168bc <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5f0>
 80168ba:	4675      	mov	r5, lr
 80168bc:	45a8      	cmp	r8, r5
 80168be:	dbea      	blt.n	8016896 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5ca>
 80168c0:	2500      	movs	r5, #0
 80168c2:	e794      	b.n	80167ee <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x522>
 80168c4:	d8f9      	bhi.n	80168ba <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x5ee>
 80168c6:	9d07      	ldr	r5, [sp, #28]
 80168c8:	3502      	adds	r5, #2
 80168ca:	e790      	b.n	80167ee <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x522>
 80168cc:	f1bc 0f00 	cmp.w	ip, #0
 80168d0:	d05a      	beq.n	8016988 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6bc>
 80168d2:	f46f 68c4 	mvn.w	r8, #1568	; 0x620
 80168d6:	eb07 0608 	add.w	r6, r7, r8
 80168da:	2e19      	cmp	r6, #25
 80168dc:	d823      	bhi.n	8016926 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x65a>
 80168de:	f46f 66c4 	mvn.w	r6, #1568	; 0x620
 80168e2:	f107 5700 	add.w	r7, r7, #536870912	; 0x20000000
 80168e6:	4437      	add	r7, r6
 80168e8:	f8dc 600c 	ldr.w	r6, [ip, #12]
 80168ec:	eb06 06c7 	add.w	r6, r6, r7, lsl #3
 80168f0:	b155      	cbz	r5, 8016908 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x63c>
 80168f2:	88ed      	ldrh	r5, [r5, #6]
 80168f4:	b145      	cbz	r5, 8016908 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x63c>
 80168f6:	b13e      	cbz	r6, 8016908 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x63c>
 80168f8:	8875      	ldrh	r5, [r6, #2]
 80168fa:	2d00      	cmp	r5, #0
 80168fc:	f040 810e 	bne.w	8016b1c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x850>
 8016900:	88f5      	ldrh	r5, [r6, #6]
 8016902:	2d00      	cmp	r5, #0
 8016904:	f040 810a 	bne.w	8016b1c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x850>
 8016908:	f1b9 0f02 	cmp.w	r9, #2
 801690c:	d144      	bne.n	8016998 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6cc>
 801690e:	880d      	ldrh	r5, [r1, #0]
 8016910:	2d00      	cmp	r5, #0
 8016912:	f000 8103 	beq.w	8016b1c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x850>
 8016916:	f240 6544 	movw	r5, #1604	; 0x644
 801691a:	42ab      	cmp	r3, r5
 801691c:	f040 80fe 	bne.w	8016b1c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x850>
 8016920:	2401      	movs	r4, #1
 8016922:	9403      	str	r4, [sp, #12]
 8016924:	e0de      	b.n	8016ae4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x818>
 8016926:	f46f 64c8 	mvn.w	r4, #1600	; 0x640
 801692a:	193e      	adds	r6, r7, r4
 801692c:	2e09      	cmp	r6, #9
 801692e:	d807      	bhi.n	8016940 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x674>
 8016930:	f107 5700 	add.w	r7, r7, #536870912	; 0x20000000
 8016934:	f46f 6ac8 	mvn.w	sl, #1600	; 0x640
 8016938:	4457      	add	r7, sl
 801693a:	f8dc 6010 	ldr.w	r6, [ip, #16]
 801693e:	e7d5      	b.n	80168ec <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x620>
 8016940:	f46f 68ce 	mvn.w	r8, #1648	; 0x670
 8016944:	eb07 0608 	add.w	r6, r7, r8
 8016948:	2e62      	cmp	r6, #98	; 0x62
 801694a:	d81d      	bhi.n	8016988 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6bc>
 801694c:	f8bc 601e 	ldrh.w	r6, [ip, #30]
 8016950:	2e00      	cmp	r6, #0
 8016952:	d0cd      	beq.n	80168f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x624>
 8016954:	f8dc 4014 	ldr.w	r4, [ip, #20]
 8016958:	9405      	str	r4, [sp, #20]
 801695a:	f04f 0800 	mov.w	r8, #0
 801695e:	eb06 0e08 	add.w	lr, r6, r8
 8016962:	240a      	movs	r4, #10
 8016964:	ea4f 0e6e 	mov.w	lr, lr, asr #1
 8016968:	fb04 fa0e 	mul.w	sl, r4, lr
 801696c:	9c05      	ldr	r4, [sp, #20]
 801696e:	4454      	add	r4, sl
 8016970:	9407      	str	r4, [sp, #28]
 8016972:	9c05      	ldr	r4, [sp, #20]
 8016974:	f834 a00a 	ldrh.w	sl, [r4, sl]
 8016978:	45ba      	cmp	sl, r7
 801697a:	d207      	bcs.n	801698c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6c0>
 801697c:	f10e 0801 	add.w	r8, lr, #1
 8016980:	e000      	b.n	8016984 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6b8>
 8016982:	4676      	mov	r6, lr
 8016984:	45b0      	cmp	r8, r6
 8016986:	dbea      	blt.n	801695e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x692>
 8016988:	2600      	movs	r6, #0
 801698a:	e7b1      	b.n	80168f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x624>
 801698c:	d8f9      	bhi.n	8016982 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6b6>
 801698e:	9e07      	ldr	r6, [sp, #28]
 8016990:	3602      	adds	r6, #2
 8016992:	e7ad      	b.n	80168f0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x624>
 8016994:	00f67e7f 	.word	0x00f67e7f
 8016998:	f1b9 0f03 	cmp.w	r9, #3
 801699c:	f040 80be 	bne.w	8016b1c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x850>
 80169a0:	884d      	ldrh	r5, [r1, #2]
 80169a2:	2d00      	cmp	r5, #0
 80169a4:	f000 80ba 	beq.w	8016b1c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x850>
 80169a8:	f240 6544 	movw	r5, #1604	; 0x644
 80169ac:	42ab      	cmp	r3, r5
 80169ae:	f040 80b5 	bne.w	8016b1c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x850>
 80169b2:	2401      	movs	r4, #1
 80169b4:	9403      	str	r4, [sp, #12]
 80169b6:	884d      	ldrh	r5, [r1, #2]
 80169b8:	2d00      	cmp	r5, #0
 80169ba:	f000 8093 	beq.w	8016ae4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x818>
 80169be:	f04f 0901 	mov.w	r9, #1
 80169c2:	e0de      	b.n	8016b82 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8b6>
 80169c4:	f46f 65c8 	mvn.w	r5, #1600	; 0x640
 80169c8:	195d      	adds	r5, r3, r5
 80169ca:	b2ad      	uxth	r5, r5
 80169cc:	2d09      	cmp	r5, #9
 80169ce:	d807      	bhi.n	80169e0 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x714>
 80169d0:	f103 5500 	add.w	r5, r3, #536870912	; 0x20000000
 80169d4:	f46f 64c8 	mvn.w	r4, #1600	; 0x640
 80169d8:	4425      	add	r5, r4
 80169da:	f8dc 6010 	ldr.w	r6, [ip, #16]
 80169de:	e0ae      	b.n	8016b3e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x872>
 80169e0:	f46f 6ace 	mvn.w	sl, #1648	; 0x670
 80169e4:	eb03 050a 	add.w	r5, r3, sl
 80169e8:	b2ad      	uxth	r5, r5
 80169ea:	2d62      	cmp	r5, #98	; 0x62
 80169ec:	d81b      	bhi.n	8016a26 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x75a>
 80169ee:	f8bc 801e 	ldrh.w	r8, [ip, #30]
 80169f2:	f1b8 0f00 	cmp.w	r8, #0
 80169f6:	f000 80a4 	beq.w	8016b42 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x876>
 80169fa:	f8dc 7014 	ldr.w	r7, [ip, #20]
 80169fe:	2600      	movs	r6, #0
 8016a00:	46c4      	mov	ip, r8
 8016a02:	f04f 0a0a 	mov.w	sl, #10
 8016a06:	eb0c 0506 	add.w	r5, ip, r6
 8016a0a:	106d      	asrs	r5, r5, #1
 8016a0c:	fb0a fe05 	mul.w	lr, sl, r5
 8016a10:	eb07 080e 	add.w	r8, r7, lr
 8016a14:	f837 e00e 	ldrh.w	lr, [r7, lr]
 8016a18:	459e      	cmp	lr, r3
 8016a1a:	d207      	bcs.n	8016a2c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x760>
 8016a1c:	1c6e      	adds	r6, r5, #1
 8016a1e:	e000      	b.n	8016a22 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x756>
 8016a20:	46ac      	mov	ip, r5
 8016a22:	4566      	cmp	r6, ip
 8016a24:	dbef      	blt.n	8016a06 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x73a>
 8016a26:	f04f 0800 	mov.w	r8, #0
 8016a2a:	e08a      	b.n	8016b42 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x876>
 8016a2c:	d8f8      	bhi.n	8016a20 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x754>
 8016a2e:	f108 0802 	add.w	r8, r8, #2
 8016a32:	e086      	b.n	8016b42 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x876>
 8016a34:	6c86      	ldr	r6, [r0, #72]	; 0x48
 8016a36:	b18e      	cbz	r6, 8016a5c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x790>
 8016a38:	f46f 68c4 	mvn.w	r8, #1568	; 0x620
 8016a3c:	eb03 0508 	add.w	r5, r3, r8
 8016a40:	b2ad      	uxth	r5, r5
 8016a42:	2d19      	cmp	r5, #25
 8016a44:	d812      	bhi.n	8016a6c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7a0>
 8016a46:	f103 5100 	add.w	r1, r3, #536870912	; 0x20000000
 8016a4a:	f46f 6cc4 	mvn.w	ip, #1568	; 0x620
 8016a4e:	68f5      	ldr	r5, [r6, #12]
 8016a50:	4461      	add	r1, ip
 8016a52:	eb05 01c1 	add.w	r1, r5, r1, lsl #3
 8016a56:	2900      	cmp	r1, #0
 8016a58:	f040 808c 	bne.w	8016b74 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8a8>
 8016a5c:	f5b3 6fc8 	cmp.w	r3, #1600	; 0x640
 8016a60:	f47f ada0 	bne.w	80165a4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8016a64:	2200      	movs	r2, #0
 8016a66:	f880 2060 	strb.w	r2, [r0, #96]	; 0x60
 8016a6a:	e59b      	b.n	80165a4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8016a6c:	f46f 67c8 	mvn.w	r7, #1600	; 0x640
 8016a70:	19dd      	adds	r5, r3, r7
 8016a72:	b2ad      	uxth	r5, r5
 8016a74:	2d09      	cmp	r5, #9
 8016a76:	d806      	bhi.n	8016a86 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7ba>
 8016a78:	f46f 65c8 	mvn.w	r5, #1600	; 0x640
 8016a7c:	f103 5100 	add.w	r1, r3, #536870912	; 0x20000000
 8016a80:	4429      	add	r1, r5
 8016a82:	6935      	ldr	r5, [r6, #16]
 8016a84:	e7e5      	b.n	8016a52 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x786>
 8016a86:	f46f 64ce 	mvn.w	r4, #1648	; 0x670
 8016a8a:	191d      	adds	r5, r3, r4
 8016a8c:	b2ad      	uxth	r5, r5
 8016a8e:	2d62      	cmp	r5, #98	; 0x62
 8016a90:	d8e4      	bhi.n	8016a5c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x790>
 8016a92:	8bf5      	ldrh	r5, [r6, #30]
 8016a94:	2d00      	cmp	r5, #0
 8016a96:	d0e1      	beq.n	8016a5c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x790>
 8016a98:	6977      	ldr	r7, [r6, #20]
 8016a9a:	f04f 080a 	mov.w	r8, #10
 8016a9e:	186e      	adds	r6, r5, r1
 8016aa0:	1076      	asrs	r6, r6, #1
 8016aa2:	fb08 fc06 	mul.w	ip, r8, r6
 8016aa6:	eb07 0e0c 	add.w	lr, r7, ip
 8016aaa:	f837 c00c 	ldrh.w	ip, [r7, ip]
 8016aae:	459c      	cmp	ip, r3
 8016ab0:	d205      	bcs.n	8016abe <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7f2>
 8016ab2:	1c71      	adds	r1, r6, #1
 8016ab4:	e000      	b.n	8016ab8 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7ec>
 8016ab6:	4635      	mov	r5, r6
 8016ab8:	428d      	cmp	r5, r1
 8016aba:	dcf0      	bgt.n	8016a9e <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7d2>
 8016abc:	e7ce      	b.n	8016a5c <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x790>
 8016abe:	d8fa      	bhi.n	8016ab6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7ea>
 8016ac0:	f10e 0102 	add.w	r1, lr, #2
 8016ac4:	e056      	b.n	8016b74 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8a8>
 8016ac6:	f1b9 0f03 	cmp.w	r9, #3
 8016aca:	d104      	bne.n	8016ad6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x80a>
 8016acc:	88cd      	ldrh	r5, [r1, #6]
 8016ace:	2d00      	cmp	r5, #0
 8016ad0:	f43f af6f 	beq.w	80169b2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6e6>
 8016ad4:	e055      	b.n	8016b82 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8b6>
 8016ad6:	f1b9 0f01 	cmp.w	r9, #1
 8016ada:	f43f af6c 	beq.w	80169b6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6ea>
 8016ade:	f1b9 0f00 	cmp.w	r9, #0
 8016ae2:	d14e      	bne.n	8016b82 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8b6>
 8016ae4:	880d      	ldrh	r5, [r1, #0]
 8016ae6:	b935      	cbnz	r5, 8016af6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x82a>
 8016ae8:	884d      	ldrh	r5, [r1, #2]
 8016aea:	f115 0900 	adds.w	r9, r5, #0
 8016aee:	bf18      	it	ne
 8016af0:	f04f 0901 	movne.w	r9, #1
 8016af4:	e045      	b.n	8016b82 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8b6>
 8016af6:	f04f 0900 	mov.w	r9, #0
 8016afa:	e042      	b.n	8016b82 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8b6>
 8016afc:	233e      	movs	r3, #62	; 0x3e
 8016afe:	e551      	b.n	80165a4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8016b00:	233c      	movs	r3, #60	; 0x3c
 8016b02:	e54f      	b.n	80165a4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8016b04:	2329      	movs	r3, #41	; 0x29
 8016b06:	e54d      	b.n	80165a4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8016b08:	2328      	movs	r3, #40	; 0x28
 8016b0a:	e54b      	b.n	80165a4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8016b0c:	235d      	movs	r3, #93	; 0x5d
 8016b0e:	e549      	b.n	80165a4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8016b10:	235b      	movs	r3, #91	; 0x5b
 8016b12:	e547      	b.n	80165a4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8016b14:	237d      	movs	r3, #125	; 0x7d
 8016b16:	e545      	b.n	80165a4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8016b18:	237b      	movs	r3, #123	; 0x7b
 8016b1a:	e543      	b.n	80165a4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8016b1c:	f1bc 0f00 	cmp.w	ip, #0
 8016b20:	d081      	beq.n	8016a26 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x75a>
 8016b22:	f46f 67c4 	mvn.w	r7, #1568	; 0x620
 8016b26:	19dd      	adds	r5, r3, r7
 8016b28:	b2ad      	uxth	r5, r5
 8016b2a:	2d19      	cmp	r5, #25
 8016b2c:	f63f af4a 	bhi.w	80169c4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x6f8>
 8016b30:	f46f 66c4 	mvn.w	r6, #1568	; 0x620
 8016b34:	f103 5500 	add.w	r5, r3, #536870912	; 0x20000000
 8016b38:	4435      	add	r5, r6
 8016b3a:	f8dc 600c 	ldr.w	r6, [ip, #12]
 8016b3e:	eb06 08c5 	add.w	r8, r6, r5, lsl #3
 8016b42:	9c04      	ldr	r4, [sp, #16]
 8016b44:	8c65      	ldrh	r5, [r4, #34]	; 0x22
 8016b46:	f2a5 6522 	subw	r5, r5, #1570	; 0x622
 8016b4a:	b2ad      	uxth	r5, r5
 8016b4c:	2db1      	cmp	r5, #177	; 0xb1
 8016b4e:	bf8c      	ite	hi
 8016b50:	2600      	movhi	r6, #0
 8016b52:	2602      	movls	r6, #2
 8016b54:	f1b8 0f00 	cmp.w	r8, #0
 8016b58:	d00c      	beq.n	8016b74 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8a8>
 8016b5a:	9c06      	ldr	r4, [sp, #24]
 8016b5c:	4426      	add	r6, r4
 8016b5e:	f838 7016 	ldrh.w	r7, [r8, r6, lsl #1]
 8016b62:	b13f      	cbz	r7, 8016b74 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8a8>
 8016b64:	2db1      	cmp	r5, #177	; 0xb1
 8016b66:	bf94      	ite	ls
 8016b68:	2200      	movls	r2, #0
 8016b6a:	2201      	movhi	r2, #1
 8016b6c:	9203      	str	r2, [sp, #12]
 8016b6e:	46b1      	mov	r9, r6
 8016b70:	4641      	mov	r1, r8
 8016b72:	2200      	movs	r2, #0
 8016b74:	f1b9 0f02 	cmp.w	r9, #2
 8016b78:	d1a5      	bne.n	8016ac6 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x7fa>
 8016b7a:	888d      	ldrh	r5, [r1, #4]
 8016b7c:	2d00      	cmp	r5, #0
 8016b7e:	f43f aecf 	beq.w	8016920 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x654>
 8016b82:	eb01 0549 	add.w	r5, r1, r9, lsl #1
 8016b86:	f831 1019 	ldrh.w	r1, [r1, r9, lsl #1]
 8016b8a:	2900      	cmp	r1, #0
 8016b8c:	f43f ad0a 	beq.w	80165a4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8016b90:	9b03      	ldr	r3, [sp, #12]
 8016b92:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 8016b96:	9b02      	ldr	r3, [sp, #8]
 8016b98:	b292      	uxth	r2, r2
 8016b9a:	1a9b      	subs	r3, r3, r2
 8016b9c:	445a      	add	r2, fp
 8016b9e:	b292      	uxth	r2, r2
 8016ba0:	8703      	strh	r3, [r0, #56]	; 0x38
 8016ba2:	2a09      	cmp	r2, #9
 8016ba4:	9b01      	ldr	r3, [sp, #4]
 8016ba6:	bf88      	it	hi
 8016ba8:	3a0a      	subhi	r2, #10
 8016baa:	86c2      	strh	r2, [r0, #54]	; 0x36
 8016bac:	b14b      	cbz	r3, 8016bc2 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x8f6>
 8016bae:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8016bb0:	3301      	adds	r3, #1
 8016bb2:	b29b      	uxth	r3, r3
 8016bb4:	2b0a      	cmp	r3, #10
 8016bb6:	bf28      	it	cs
 8016bb8:	2300      	movcs	r3, #0
 8016bba:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016bbe:	9b01      	ldr	r3, [sp, #4]
 8016bc0:	8443      	strh	r3, [r0, #34]	; 0x22
 8016bc2:	882b      	ldrh	r3, [r5, #0]
 8016bc4:	e4ee      	b.n	80165a4 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x2d8>
 8016bc6:	9a01      	ldr	r2, [sp, #4]
 8016bc8:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8016bcc:	00d2      	lsls	r2, r2, #3
 8016bce:	2b20      	cmp	r3, #32
 8016bd0:	b292      	uxth	r2, r2
 8016bd2:	f47f ad1e 	bne.w	8016612 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x346>
 8016bd6:	f5a2 5240 	sub.w	r2, r2, #12288	; 0x3000
 8016bda:	3a30      	subs	r2, #48	; 0x30
 8016bdc:	b292      	uxth	r2, r2
 8016bde:	f240 6152 	movw	r1, #1618	; 0x652
 8016be2:	e52d      	b.n	8016640 <_ZN8touchgfx12TextProvider16unicodeConverterEh+0x374>

08016be4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8016be4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016be6:	4605      	mov	r5, r0
 8016be8:	4608      	mov	r0, r1
 8016bea:	b1e9      	cbz	r1, 8016c28 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8016bec:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8016bf0:	460b      	mov	r3, r1
 8016bf2:	f101 0708 	add.w	r7, r1, #8
 8016bf6:	4622      	mov	r2, r4
 8016bf8:	6818      	ldr	r0, [r3, #0]
 8016bfa:	6859      	ldr	r1, [r3, #4]
 8016bfc:	4626      	mov	r6, r4
 8016bfe:	c603      	stmia	r6!, {r0, r1}
 8016c00:	3308      	adds	r3, #8
 8016c02:	42bb      	cmp	r3, r7
 8016c04:	4634      	mov	r4, r6
 8016c06:	d1f7      	bne.n	8016bf8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8016c08:	6818      	ldr	r0, [r3, #0]
 8016c0a:	6030      	str	r0, [r6, #0]
 8016c0c:	889b      	ldrh	r3, [r3, #4]
 8016c0e:	80b3      	strh	r3, [r6, #4]
 8016c10:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8016c14:	015b      	lsls	r3, r3, #5
 8016c16:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016c1a:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8016c1e:	430b      	orrs	r3, r1
 8016c20:	425b      	negs	r3, r3
 8016c22:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8016c26:	4610      	mov	r0, r2
 8016c28:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016c2a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8016c2a:	b538      	push	{r3, r4, r5, lr}
 8016c2c:	460c      	mov	r4, r1
 8016c2e:	6811      	ldr	r1, [r2, #0]
 8016c30:	4610      	mov	r0, r2
 8016c32:	68cd      	ldr	r5, [r1, #12]
 8016c34:	4619      	mov	r1, r3
 8016c36:	47a8      	blx	r5
 8016c38:	2800      	cmp	r0, #0
 8016c3a:	bf08      	it	eq
 8016c3c:	4620      	moveq	r0, r4
 8016c3e:	bd38      	pop	{r3, r4, r5, pc}

08016c40 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8016c40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016c42:	4604      	mov	r4, r0
 8016c44:	4615      	mov	r5, r2
 8016c46:	4608      	mov	r0, r1
 8016c48:	b93a      	cbnz	r2, 8016c5a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8016c4a:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8016c4e:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8016c52:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8016c56:	4628      	mov	r0, r5
 8016c58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016c5a:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8016c5e:	8893      	ldrh	r3, [r2, #4]
 8016c60:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8016c64:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8016c68:	79ee      	ldrb	r6, [r5, #7]
 8016c6a:	4316      	orrs	r6, r2
 8016c6c:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 8016c70:	189a      	adds	r2, r3, r2
 8016c72:	b291      	uxth	r1, r2
 8016c74:	291d      	cmp	r1, #29
 8016c76:	b2b7      	uxth	r7, r6
 8016c78:	f200 8083 	bhi.w	8016d82 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 8016c7c:	2201      	movs	r2, #1
 8016c7e:	408a      	lsls	r2, r1
 8016c80:	4978      	ldr	r1, [pc, #480]	; (8016e64 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 8016c82:	420a      	tst	r2, r1
 8016c84:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8016c88:	d12d      	bne.n	8016ce6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 8016c8a:	f412 7f60 	tst.w	r2, #896	; 0x380
 8016c8e:	d078      	beq.n	8016d82 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 8016c90:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8016c94:	462b      	mov	r3, r5
 8016c96:	f105 0e08 	add.w	lr, r5, #8
 8016c9a:	4615      	mov	r5, r2
 8016c9c:	6818      	ldr	r0, [r3, #0]
 8016c9e:	6859      	ldr	r1, [r3, #4]
 8016ca0:	4694      	mov	ip, r2
 8016ca2:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8016ca6:	3308      	adds	r3, #8
 8016ca8:	4573      	cmp	r3, lr
 8016caa:	4662      	mov	r2, ip
 8016cac:	d1f6      	bne.n	8016c9c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 8016cae:	6818      	ldr	r0, [r3, #0]
 8016cb0:	f8cc 0000 	str.w	r0, [ip]
 8016cb4:	889b      	ldrh	r3, [r3, #4]
 8016cb6:	f8ac 3004 	strh.w	r3, [ip, #4]
 8016cba:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8016cbe:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8016cc2:	b2b3      	uxth	r3, r6
 8016cc4:	1aca      	subs	r2, r1, r3
 8016cc6:	b292      	uxth	r2, r2
 8016cc8:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8016ccc:	10d2      	asrs	r2, r2, #3
 8016cce:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8016cd2:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8016cd6:	4302      	orrs	r2, r0
 8016cd8:	1bcf      	subs	r7, r1, r7
 8016cda:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8016cde:	1afb      	subs	r3, r7, r3
 8016ce0:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8016ce4:	e7b7      	b.n	8016c56 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8016ce6:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8016ce8:	b92b      	cbnz	r3, 8016cf6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 8016cea:	4b5f      	ldr	r3, [pc, #380]	; (8016e68 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 8016cec:	4a5f      	ldr	r2, [pc, #380]	; (8016e6c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 8016cee:	4860      	ldr	r0, [pc, #384]	; (8016e70 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 8016cf0:	21c0      	movs	r1, #192	; 0xc0
 8016cf2:	f00d fba1 	bl	8024438 <__assert_func>
 8016cf6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8016cf8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016cfc:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8016cfe:	f640 6333 	movw	r3, #3635	; 0xe33
 8016d02:	4299      	cmp	r1, r3
 8016d04:	d110      	bne.n	8016d28 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 8016d06:	6803      	ldr	r3, [r0, #0]
 8016d08:	68db      	ldr	r3, [r3, #12]
 8016d0a:	4798      	blx	r3
 8016d0c:	7b41      	ldrb	r1, [r0, #13]
 8016d0e:	00cb      	lsls	r3, r1, #3
 8016d10:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016d14:	7a03      	ldrb	r3, [r0, #8]
 8016d16:	0648      	lsls	r0, r1, #25
 8016d18:	ea43 0302 	orr.w	r3, r3, r2
 8016d1c:	bf44      	itt	mi
 8016d1e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016d22:	b21b      	sxthmi	r3, r3
 8016d24:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016d28:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8016d2c:	443b      	add	r3, r7
 8016d2e:	4433      	add	r3, r6
 8016d30:	b29b      	uxth	r3, r3
 8016d32:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8016d36:	462a      	mov	r2, r5
 8016d38:	f105 0c08 	add.w	ip, r5, #8
 8016d3c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016d40:	4635      	mov	r5, r6
 8016d42:	6810      	ldr	r0, [r2, #0]
 8016d44:	6851      	ldr	r1, [r2, #4]
 8016d46:	4637      	mov	r7, r6
 8016d48:	c703      	stmia	r7!, {r0, r1}
 8016d4a:	3208      	adds	r2, #8
 8016d4c:	4562      	cmp	r2, ip
 8016d4e:	463e      	mov	r6, r7
 8016d50:	d1f7      	bne.n	8016d42 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 8016d52:	6810      	ldr	r0, [r2, #0]
 8016d54:	6038      	str	r0, [r7, #0]
 8016d56:	8892      	ldrh	r2, [r2, #4]
 8016d58:	80ba      	strh	r2, [r7, #4]
 8016d5a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8016d5e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8016d62:	10db      	asrs	r3, r3, #3
 8016d64:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8016d68:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8016d6c:	4313      	orrs	r3, r2
 8016d6e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8016d72:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8016d76:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8016d7a:	1a9b      	subs	r3, r3, r2
 8016d7c:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8016d80:	e769      	b.n	8016c56 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8016d82:	f023 0204 	bic.w	r2, r3, #4
 8016d86:	f640 611b 	movw	r1, #3611	; 0xe1b
 8016d8a:	428a      	cmp	r2, r1
 8016d8c:	d003      	beq.n	8016d96 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 8016d8e:	f640 621d 	movw	r2, #3613	; 0xe1d
 8016d92:	4293      	cmp	r3, r2
 8016d94:	d120      	bne.n	8016dd8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 8016d96:	3b01      	subs	r3, #1
 8016d98:	4602      	mov	r2, r0
 8016d9a:	b29b      	uxth	r3, r3
 8016d9c:	4629      	mov	r1, r5
 8016d9e:	4620      	mov	r0, r4
 8016da0:	f7ff ff43 	bl	8016c2a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8016da4:	7b41      	ldrb	r1, [r0, #13]
 8016da6:	00cb      	lsls	r3, r1, #3
 8016da8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016dac:	7a03      	ldrb	r3, [r0, #8]
 8016dae:	0649      	lsls	r1, r1, #25
 8016db0:	ea43 0302 	orr.w	r3, r3, r2
 8016db4:	bf44      	itt	mi
 8016db6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016dba:	b21b      	sxthmi	r3, r3
 8016dbc:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016dc0:	7b6b      	ldrb	r3, [r5, #13]
 8016dc2:	7aaa      	ldrb	r2, [r5, #10]
 8016dc4:	005b      	lsls	r3, r3, #1
 8016dc6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016dca:	4313      	orrs	r3, r2
 8016dcc:	115a      	asrs	r2, r3, #5
 8016dce:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8016dd2:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8016dd6:	e036      	b.n	8016e46 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 8016dd8:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8016ddc:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8016de0:	7a2a      	ldrb	r2, [r5, #8]
 8016de2:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8016de6:	ea42 0201 	orr.w	r2, r2, r1
 8016dea:	bf1c      	itt	ne
 8016dec:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8016df0:	b212      	sxthne	r2, r2
 8016df2:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8016df6:	f640 6109 	movw	r1, #3593	; 0xe09
 8016dfa:	f023 0210 	bic.w	r2, r3, #16
 8016dfe:	428a      	cmp	r2, r1
 8016e00:	d003      	beq.n	8016e0a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 8016e02:	f640 6213 	movw	r2, #3603	; 0xe13
 8016e06:	4293      	cmp	r3, r2
 8016e08:	d12a      	bne.n	8016e60 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 8016e0a:	7b6e      	ldrb	r6, [r5, #13]
 8016e0c:	0076      	lsls	r6, r6, #1
 8016e0e:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8016e12:	7aae      	ldrb	r6, [r5, #10]
 8016e14:	4316      	orrs	r6, r2
 8016e16:	f640 6213 	movw	r2, #3603	; 0xe13
 8016e1a:	4293      	cmp	r3, r2
 8016e1c:	bf18      	it	ne
 8016e1e:	f103 33ff 	addne.w	r3, r3, #4294967295
 8016e22:	4602      	mov	r2, r0
 8016e24:	bf14      	ite	ne
 8016e26:	b29b      	uxthne	r3, r3
 8016e28:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8016e2c:	4629      	mov	r1, r5
 8016e2e:	4620      	mov	r0, r4
 8016e30:	f7ff fefb 	bl	8016c2a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8016e34:	7b43      	ldrb	r3, [r0, #13]
 8016e36:	7a82      	ldrb	r2, [r0, #10]
 8016e38:	005b      	lsls	r3, r3, #1
 8016e3a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016e3e:	4313      	orrs	r3, r2
 8016e40:	1af6      	subs	r6, r6, r3
 8016e42:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8016e46:	7b69      	ldrb	r1, [r5, #13]
 8016e48:	00cb      	lsls	r3, r1, #3
 8016e4a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016e4e:	7a2b      	ldrb	r3, [r5, #8]
 8016e50:	4313      	orrs	r3, r2
 8016e52:	064a      	lsls	r2, r1, #25
 8016e54:	bf44      	itt	mi
 8016e56:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016e5a:	b21b      	sxthmi	r3, r3
 8016e5c:	1bdb      	subs	r3, r3, r7
 8016e5e:	e73f      	b.n	8016ce0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 8016e60:	2300      	movs	r3, #0
 8016e62:	e7b6      	b.n	8016dd2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 8016e64:	3fc00079 	.word	0x3fc00079
 8016e68:	08027fac 	.word	0x08027fac
 8016e6c:	0802a607 	.word	0x0802a607
 8016e70:	0802807e 	.word	0x0802807e

08016e74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8016e74:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016e78:	4604      	mov	r4, r0
 8016e7a:	b942      	cbnz	r2, 8016e8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8016e7c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8016e80:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8016e84:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8016e88:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8016e8c:	e046      	b.n	8016f1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 8016e8e:	7b51      	ldrb	r1, [r2, #13]
 8016e90:	8893      	ldrh	r3, [r2, #4]
 8016e92:	010f      	lsls	r7, r1, #4
 8016e94:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8016e98:	79d7      	ldrb	r7, [r2, #7]
 8016e9a:	4307      	orrs	r7, r0
 8016e9c:	2f04      	cmp	r7, #4
 8016e9e:	b2bd      	uxth	r5, r7
 8016ea0:	bfcc      	ite	gt
 8016ea2:	08bf      	lsrgt	r7, r7, #2
 8016ea4:	2701      	movle	r7, #1
 8016ea6:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8016eaa:	f200 80ab 	bhi.w	8017004 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 8016eae:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8016eb2:	4283      	cmp	r3, r0
 8016eb4:	d216      	bcs.n	8016ee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8016eb6:	f240 605b 	movw	r0, #1627	; 0x65b
 8016eba:	4283      	cmp	r3, r0
 8016ebc:	d859      	bhi.n	8016f72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 8016ebe:	f240 6057 	movw	r0, #1623	; 0x657
 8016ec2:	4283      	cmp	r3, r0
 8016ec4:	d20e      	bcs.n	8016ee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8016ec6:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8016eca:	d24a      	bcs.n	8016f62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 8016ecc:	f240 604e 	movw	r0, #1614	; 0x64e
 8016ed0:	4283      	cmp	r3, r0
 8016ed2:	d207      	bcs.n	8016ee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8016ed4:	f240 601a 	movw	r0, #1562	; 0x61a
 8016ed8:	4283      	cmp	r3, r0
 8016eda:	d02a      	beq.n	8016f32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8016edc:	d821      	bhi.n	8016f22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 8016ede:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8016ee2:	d35b      	bcc.n	8016f9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8016ee4:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8016ee8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8016eec:	f040 80d0 	bne.w	8017090 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 8016ef0:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8016ef4:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8016ef8:	f040 80ca 	bne.w	8017090 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 8016efc:	00cb      	lsls	r3, r1, #3
 8016efe:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8016f02:	7a13      	ldrb	r3, [r2, #8]
 8016f04:	0649      	lsls	r1, r1, #25
 8016f06:	ea43 0300 	orr.w	r3, r3, r0
 8016f0a:	bf44      	itt	mi
 8016f0c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016f10:	b21b      	sxthmi	r3, r3
 8016f12:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016f16:	1b5d      	subs	r5, r3, r5
 8016f18:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016f1c:	4610      	mov	r0, r2
 8016f1e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016f22:	f240 604b 	movw	r0, #1611	; 0x64b
 8016f26:	4283      	cmp	r3, r0
 8016f28:	d338      	bcc.n	8016f9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8016f2a:	f240 604c 	movw	r0, #1612	; 0x64c
 8016f2e:	4283      	cmp	r3, r0
 8016f30:	d9d8      	bls.n	8016ee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8016f32:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8016f36:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8016f3a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8016f3e:	f040 80f1 	bne.w	8017124 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 8016f42:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8016f46:	f040 80ed 	bne.w	8017124 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 8016f4a:	00cb      	lsls	r3, r1, #3
 8016f4c:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8016f50:	7a13      	ldrb	r3, [r2, #8]
 8016f52:	064e      	lsls	r6, r1, #25
 8016f54:	ea43 0300 	orr.w	r3, r3, r0
 8016f58:	bf44      	itt	mi
 8016f5a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016f5e:	b21b      	sxthmi	r3, r3
 8016f60:	e7d9      	b.n	8016f16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 8016f62:	f240 6054 	movw	r0, #1620	; 0x654
 8016f66:	4283      	cmp	r3, r0
 8016f68:	d8e3      	bhi.n	8016f32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8016f6a:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8016f6e:	d9e0      	bls.n	8016f32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8016f70:	e7b8      	b.n	8016ee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8016f72:	f240 6074 	movw	r0, #1652	; 0x674
 8016f76:	4283      	cmp	r3, r0
 8016f78:	d0b4      	beq.n	8016ee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8016f7a:	d82d      	bhi.n	8016fd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 8016f7c:	f240 605e 	movw	r0, #1630	; 0x65e
 8016f80:	4283      	cmp	r3, r0
 8016f82:	d804      	bhi.n	8016f8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 8016f84:	f240 605d 	movw	r0, #1629	; 0x65d
 8016f88:	4283      	cmp	r3, r0
 8016f8a:	d3d2      	bcc.n	8016f32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8016f8c:	e7aa      	b.n	8016ee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8016f8e:	f240 605f 	movw	r0, #1631	; 0x65f
 8016f92:	4283      	cmp	r3, r0
 8016f94:	d0cd      	beq.n	8016f32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8016f96:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8016f9a:	d0a3      	beq.n	8016ee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8016f9c:	00cb      	lsls	r3, r1, #3
 8016f9e:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8016fa2:	7a13      	ldrb	r3, [r2, #8]
 8016fa4:	0649      	lsls	r1, r1, #25
 8016fa6:	ea43 0300 	orr.w	r3, r3, r0
 8016faa:	bf44      	itt	mi
 8016fac:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016fb0:	b21b      	sxthmi	r3, r3
 8016fb2:	1b5d      	subs	r5, r3, r5
 8016fb4:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016fb8:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016fbc:	7b53      	ldrb	r3, [r2, #13]
 8016fbe:	015b      	lsls	r3, r3, #5
 8016fc0:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016fc4:	7993      	ldrb	r3, [r2, #6]
 8016fc6:	430b      	orrs	r3, r1
 8016fc8:	005b      	lsls	r3, r3, #1
 8016fca:	2105      	movs	r1, #5
 8016fcc:	fb93 f3f1 	sdiv	r3, r3, r1
 8016fd0:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8016fd4:	440b      	add	r3, r1
 8016fd6:	e757      	b.n	8016e88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8016fd8:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8016fdc:	4283      	cmp	r3, r0
 8016fde:	d809      	bhi.n	8016ff4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 8016fe0:	f240 60df 	movw	r0, #1759	; 0x6df
 8016fe4:	4283      	cmp	r3, r0
 8016fe6:	f4bf af7d 	bcs.w	8016ee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8016fea:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8016fee:	2b05      	cmp	r3, #5
 8016ff0:	d8d4      	bhi.n	8016f9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8016ff2:	e777      	b.n	8016ee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8016ff4:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8016ff8:	4283      	cmp	r3, r0
 8016ffa:	d09a      	beq.n	8016f32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8016ffc:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8017000:	4283      	cmp	r3, r0
 8017002:	e7ca      	b.n	8016f9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 8017004:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8017008:	d22b      	bcs.n	8017062 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 801700a:	f640 00ed 	movw	r0, #2285	; 0x8ed
 801700e:	4283      	cmp	r3, r0
 8017010:	d28f      	bcs.n	8016f32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8017012:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8017016:	4283      	cmp	r3, r0
 8017018:	d816      	bhi.n	8017048 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 801701a:	f640 00e4 	movw	r0, #2276	; 0x8e4
 801701e:	4283      	cmp	r3, r0
 8017020:	f4bf af60 	bcs.w	8016ee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8017024:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8017028:	4283      	cmp	r3, r0
 801702a:	d80a      	bhi.n	8017042 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 801702c:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8017030:	4283      	cmp	r3, r0
 8017032:	f4bf af57 	bcs.w	8016ee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8017036:	f240 60ea 	movw	r0, #1770	; 0x6ea
 801703a:	4283      	cmp	r3, r0
 801703c:	f43f af79 	beq.w	8016f32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8017040:	e7ac      	b.n	8016f9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8017042:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8017046:	e7f8      	b.n	801703a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 8017048:	f640 00e8 	movw	r0, #2280	; 0x8e8
 801704c:	4283      	cmp	r3, r0
 801704e:	d802      	bhi.n	8017056 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 8017050:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8017054:	e798      	b.n	8016f88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 8017056:	f640 00e9 	movw	r0, #2281	; 0x8e9
 801705a:	4283      	cmp	r3, r0
 801705c:	f47f af42 	bne.w	8016ee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8017060:	e767      	b.n	8016f32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8017062:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8017066:	4283      	cmp	r3, r0
 8017068:	f43f af63 	beq.w	8016f32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801706c:	d802      	bhi.n	8017074 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 801706e:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8017072:	e7f2      	b.n	801705a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 8017074:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8017078:	4283      	cmp	r3, r0
 801707a:	d805      	bhi.n	8017088 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 801707c:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8017080:	4283      	cmp	r3, r0
 8017082:	f4ff af2f 	bcc.w	8016ee4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8017086:	e754      	b.n	8016f32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8017088:	f640 00fe 	movw	r0, #2302	; 0x8fe
 801708c:	4283      	cmp	r3, r0
 801708e:	e7af      	b.n	8016ff0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 8017090:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8017094:	4617      	mov	r7, r2
 8017096:	f102 0808 	add.w	r8, r2, #8
 801709a:	4666      	mov	r6, ip
 801709c:	6838      	ldr	r0, [r7, #0]
 801709e:	6879      	ldr	r1, [r7, #4]
 80170a0:	46e6      	mov	lr, ip
 80170a2:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80170a6:	3708      	adds	r7, #8
 80170a8:	4547      	cmp	r7, r8
 80170aa:	46f4      	mov	ip, lr
 80170ac:	d1f6      	bne.n	801709c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 80170ae:	6838      	ldr	r0, [r7, #0]
 80170b0:	f8ce 0000 	str.w	r0, [lr]
 80170b4:	88b9      	ldrh	r1, [r7, #4]
 80170b6:	f8ae 1004 	strh.w	r1, [lr, #4]
 80170ba:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80170be:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80170c2:	d009      	beq.n	80170d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 80170c4:	7b51      	ldrb	r1, [r2, #13]
 80170c6:	7992      	ldrb	r2, [r2, #6]
 80170c8:	0149      	lsls	r1, r1, #5
 80170ca:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80170ce:	4311      	orrs	r1, r2
 80170d0:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80170d4:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80170d8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80170dc:	d00d      	beq.n	80170fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 80170de:	442b      	add	r3, r5
 80170e0:	b29b      	uxth	r3, r3
 80170e2:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80170e6:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80170ea:	10db      	asrs	r3, r3, #3
 80170ec:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80170f0:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80170f4:	4313      	orrs	r3, r2
 80170f6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80170fa:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80170fe:	00cb      	lsls	r3, r1, #3
 8017100:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017104:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8017108:	064f      	lsls	r7, r1, #25
 801710a:	ea43 0302 	orr.w	r3, r3, r2
 801710e:	bf44      	itt	mi
 8017110:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017114:	b21b      	sxthmi	r3, r3
 8017116:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801711a:	1b5d      	subs	r5, r3, r5
 801711c:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017120:	4632      	mov	r2, r6
 8017122:	e6fb      	b.n	8016f1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 8017124:	f104 0e4c 	add.w	lr, r4, #76	; 0x4c
 8017128:	4694      	mov	ip, r2
 801712a:	f102 0908 	add.w	r9, r2, #8
 801712e:	4676      	mov	r6, lr
 8017130:	f8dc 0000 	ldr.w	r0, [ip]
 8017134:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8017138:	46f0      	mov	r8, lr
 801713a:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801713e:	f10c 0c08 	add.w	ip, ip, #8
 8017142:	45cc      	cmp	ip, r9
 8017144:	46c6      	mov	lr, r8
 8017146:	d1f3      	bne.n	8017130 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 8017148:	f8dc 0000 	ldr.w	r0, [ip]
 801714c:	f8c8 0000 	str.w	r0, [r8]
 8017150:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 8017154:	f8a8 1004 	strh.w	r1, [r8, #4]
 8017158:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801715c:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017160:	d009      	beq.n	8017176 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 8017162:	7b51      	ldrb	r1, [r2, #13]
 8017164:	7992      	ldrb	r2, [r2, #6]
 8017166:	0149      	lsls	r1, r1, #5
 8017168:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801716c:	4311      	orrs	r1, r2
 801716e:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8017172:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8017176:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801717a:	d00d      	beq.n	8017198 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 801717c:	1bdb      	subs	r3, r3, r7
 801717e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017182:	b29b      	uxth	r3, r3
 8017184:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017188:	10db      	asrs	r3, r3, #3
 801718a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801718e:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8017192:	4313      	orrs	r3, r2
 8017194:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017198:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801719c:	00cb      	lsls	r3, r1, #3
 801719e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80171a2:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80171a6:	0648      	lsls	r0, r1, #25
 80171a8:	ea43 0302 	orr.w	r3, r3, r2
 80171ac:	bf44      	itt	mi
 80171ae:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80171b2:	b21b      	sxthmi	r3, r3
 80171b4:	e7b1      	b.n	801711a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

080171b8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80171b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80171bc:	461e      	mov	r6, r3
 80171be:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 80171c0:	4604      	mov	r4, r0
 80171c2:	4617      	mov	r7, r2
 80171c4:	b92b      	cbnz	r3, 80171d2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 80171c6:	4b25      	ldr	r3, [pc, #148]	; (801725c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 80171c8:	4a25      	ldr	r2, [pc, #148]	; (8017260 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 80171ca:	4826      	ldr	r0, [pc, #152]	; (8017264 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 80171cc:	21c0      	movs	r1, #192	; 0xc0
 80171ce:	f00d f933 	bl	8024438 <__assert_func>
 80171d2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80171d4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80171d8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80171dc:	f7ef fdd8 	bl	8006d90 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80171e0:	4605      	mov	r5, r0
 80171e2:	b918      	cbnz	r0, 80171ec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 80171e4:	6030      	str	r0, [r6, #0]
 80171e6:	4628      	mov	r0, r5
 80171e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80171ec:	683b      	ldr	r3, [r7, #0]
 80171ee:	4601      	mov	r1, r0
 80171f0:	68db      	ldr	r3, [r3, #12]
 80171f2:	4638      	mov	r0, r7
 80171f4:	4798      	blx	r3
 80171f6:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80171fa:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80171fe:	4602      	mov	r2, r0
 8017200:	6030      	str	r0, [r6, #0]
 8017202:	d213      	bcs.n	801722c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 8017204:	4643      	mov	r3, r8
 8017206:	4639      	mov	r1, r7
 8017208:	4620      	mov	r0, r4
 801720a:	f7ff fe33 	bl	8016e74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801720e:	6030      	str	r0, [r6, #0]
 8017210:	6833      	ldr	r3, [r6, #0]
 8017212:	b143      	cbz	r3, 8017226 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 8017214:	7b5a      	ldrb	r2, [r3, #13]
 8017216:	7a9b      	ldrb	r3, [r3, #10]
 8017218:	0052      	lsls	r2, r2, #1
 801721a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801721e:	4313      	orrs	r3, r2
 8017220:	bf0c      	ite	eq
 8017222:	2301      	moveq	r3, #1
 8017224:	2300      	movne	r3, #0
 8017226:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801722a:	e7dc      	b.n	80171e6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 801722c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8017230:	b29b      	uxth	r3, r3
 8017232:	2b7f      	cmp	r3, #127	; 0x7f
 8017234:	d804      	bhi.n	8017240 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 8017236:	4639      	mov	r1, r7
 8017238:	4620      	mov	r0, r4
 801723a:	f7ff fd01 	bl	8016c40 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801723e:	e7e6      	b.n	801720e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 8017240:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8017244:	2b00      	cmp	r3, #0
 8017246:	d0e3      	beq.n	8017210 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 8017248:	f640 1302 	movw	r3, #2306	; 0x902
 801724c:	429d      	cmp	r5, r3
 801724e:	d1df      	bne.n	8017210 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 8017250:	4601      	mov	r1, r0
 8017252:	4620      	mov	r0, r4
 8017254:	f7ff fcc6 	bl	8016be4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8017258:	e7d9      	b.n	801720e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 801725a:	bf00      	nop
 801725c:	08027fac 	.word	0x08027fac
 8017260:	0802a607 	.word	0x0802a607
 8017264:	0802807e 	.word	0x0802807e

08017268 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8017268:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801726c:	461e      	mov	r6, r3
 801726e:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8017270:	4604      	mov	r4, r0
 8017272:	4617      	mov	r7, r2
 8017274:	b92b      	cbnz	r3, 8017282 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 8017276:	4b26      	ldr	r3, [pc, #152]	; (8017310 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 8017278:	4a26      	ldr	r2, [pc, #152]	; (8017314 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 801727a:	4827      	ldr	r0, [pc, #156]	; (8017318 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 801727c:	21c0      	movs	r1, #192	; 0xc0
 801727e:	f00d f8db 	bl	8024438 <__assert_func>
 8017282:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017284:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017288:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801728c:	f7ef fd80 	bl	8006d90 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8017290:	4605      	mov	r5, r0
 8017292:	b918      	cbnz	r0, 801729c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 8017294:	6030      	str	r0, [r6, #0]
 8017296:	4628      	mov	r0, r5
 8017298:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801729c:	683b      	ldr	r3, [r7, #0]
 801729e:	4601      	mov	r1, r0
 80172a0:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80172a4:	4638      	mov	r0, r7
 80172a6:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80172aa:	47c8      	blx	r9
 80172ac:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80172b0:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80172b4:	4602      	mov	r2, r0
 80172b6:	6030      	str	r0, [r6, #0]
 80172b8:	d213      	bcs.n	80172e2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 80172ba:	4643      	mov	r3, r8
 80172bc:	4639      	mov	r1, r7
 80172be:	4620      	mov	r0, r4
 80172c0:	f7ff fdd8 	bl	8016e74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80172c4:	6030      	str	r0, [r6, #0]
 80172c6:	6833      	ldr	r3, [r6, #0]
 80172c8:	b143      	cbz	r3, 80172dc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 80172ca:	7b5a      	ldrb	r2, [r3, #13]
 80172cc:	7a9b      	ldrb	r3, [r3, #10]
 80172ce:	0052      	lsls	r2, r2, #1
 80172d0:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80172d4:	4313      	orrs	r3, r2
 80172d6:	bf0c      	ite	eq
 80172d8:	2301      	moveq	r3, #1
 80172da:	2300      	movne	r3, #0
 80172dc:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80172e0:	e7d9      	b.n	8017296 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 80172e2:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80172e6:	b29b      	uxth	r3, r3
 80172e8:	2b7f      	cmp	r3, #127	; 0x7f
 80172ea:	d804      	bhi.n	80172f6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 80172ec:	4639      	mov	r1, r7
 80172ee:	4620      	mov	r0, r4
 80172f0:	f7ff fca6 	bl	8016c40 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80172f4:	e7e6      	b.n	80172c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 80172f6:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80172fa:	2b00      	cmp	r3, #0
 80172fc:	d0e3      	beq.n	80172c6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 80172fe:	f640 1302 	movw	r3, #2306	; 0x902
 8017302:	429d      	cmp	r5, r3
 8017304:	d1df      	bne.n	80172c6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 8017306:	4601      	mov	r1, r0
 8017308:	4620      	mov	r0, r4
 801730a:	f7ff fc6b 	bl	8016be4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801730e:	e7d9      	b.n	80172c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 8017310:	08027fac 	.word	0x08027fac
 8017314:	0802a607 	.word	0x0802a607
 8017318:	0802807e 	.word	0x0802807e

0801731c <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801731c:	b510      	push	{r4, lr}
 801731e:	4604      	mov	r4, r0
 8017320:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8017324:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8017326:	b9d9      	cbnz	r1, 8017360 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x44>
 8017328:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801732a:	2b0a      	cmp	r3, #10
 801732c:	d037      	beq.n	801739e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 801732e:	4620      	mov	r0, r4
 8017330:	f7fe ff86 	bl	8016240 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8017334:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8017336:	2b09      	cmp	r3, #9
 8017338:	d906      	bls.n	8017348 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2c>
 801733a:	4b19      	ldr	r3, [pc, #100]	; (80173a0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 801733c:	4a19      	ldr	r2, [pc, #100]	; (80173a4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 801733e:	481a      	ldr	r0, [pc, #104]	; (80173a8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x8c>)
 8017340:	f44f 7182 	mov.w	r1, #260	; 0x104
 8017344:	f00d f878 	bl	8024438 <__assert_func>
 8017348:	1c5a      	adds	r2, r3, #1
 801734a:	8722      	strh	r2, [r4, #56]	; 0x38
 801734c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801734e:	4413      	add	r3, r2
 8017350:	b29b      	uxth	r3, r3
 8017352:	2b09      	cmp	r3, #9
 8017354:	bf88      	it	hi
 8017356:	3b0a      	subhi	r3, #10
 8017358:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801735c:	8458      	strh	r0, [r3, #34]	; 0x22
 801735e:	e7e3      	b.n	8017328 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xc>
 8017360:	2b0a      	cmp	r3, #10
 8017362:	d01c      	beq.n	801739e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 8017364:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8017366:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801736a:	3901      	subs	r1, #1
 801736c:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801736e:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8017372:	1c51      	adds	r1, r2, #1
 8017374:	b289      	uxth	r1, r1
 8017376:	2901      	cmp	r1, #1
 8017378:	bf8a      	itet	hi
 801737a:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801737e:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8017380:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8017382:	2b09      	cmp	r3, #9
 8017384:	d8d9      	bhi.n	801733a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1e>
 8017386:	1c5a      	adds	r2, r3, #1
 8017388:	8722      	strh	r2, [r4, #56]	; 0x38
 801738a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801738c:	4413      	add	r3, r2
 801738e:	b29b      	uxth	r3, r3
 8017390:	2b09      	cmp	r3, #9
 8017392:	bf88      	it	hi
 8017394:	3b0a      	subhi	r3, #10
 8017396:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801739a:	8458      	strh	r0, [r3, #34]	; 0x22
 801739c:	e7c0      	b.n	8017320 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801739e:	bd10      	pop	{r4, pc}
 80173a0:	0802a3d8 	.word	0x0802a3d8
 80173a4:	0802a75d 	.word	0x0802a75d
 80173a8:	0802807e 	.word	0x0802807e

080173ac <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80173ac:	b538      	push	{r3, r4, r5, lr}
 80173ae:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 80173b0:	4604      	mov	r4, r0
 80173b2:	b92a      	cbnz	r2, 80173c0 <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 80173b4:	4b13      	ldr	r3, [pc, #76]	; (8017404 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 80173b6:	4a14      	ldr	r2, [pc, #80]	; (8017408 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 80173b8:	4814      	ldr	r0, [pc, #80]	; (801740c <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 80173ba:	21d5      	movs	r1, #213	; 0xd5
 80173bc:	f00d f83c 	bl	8024438 <__assert_func>
 80173c0:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80173c2:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 80173c6:	3a01      	subs	r2, #1
 80173c8:	8c4d      	ldrh	r5, [r1, #34]	; 0x22
 80173ca:	8702      	strh	r2, [r0, #56]	; 0x38
 80173cc:	1c5a      	adds	r2, r3, #1
 80173ce:	b292      	uxth	r2, r2
 80173d0:	2a09      	cmp	r2, #9
 80173d2:	bf86      	itte	hi
 80173d4:	3b09      	subhi	r3, #9
 80173d6:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 80173d8:	86c2      	strhls	r2, [r0, #54]	; 0x36
 80173da:	f7ff ff9f 	bl	801731c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80173de:	8c23      	ldrh	r3, [r4, #32]
 80173e0:	2b01      	cmp	r3, #1
 80173e2:	bf9c      	itt	ls
 80173e4:	3301      	addls	r3, #1
 80173e6:	8423      	strhls	r3, [r4, #32]
 80173e8:	8be3      	ldrh	r3, [r4, #30]
 80173ea:	b90b      	cbnz	r3, 80173f0 <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 80173ec:	2302      	movs	r3, #2
 80173ee:	83e3      	strh	r3, [r4, #30]
 80173f0:	8be3      	ldrh	r3, [r4, #30]
 80173f2:	3b01      	subs	r3, #1
 80173f4:	b29b      	uxth	r3, r3
 80173f6:	83e3      	strh	r3, [r4, #30]
 80173f8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80173fc:	4628      	mov	r0, r5
 80173fe:	8365      	strh	r5, [r4, #26]
 8017400:	bd38      	pop	{r3, r4, r5, pc}
 8017402:	bf00      	nop
 8017404:	08027fac 	.word	0x08027fac
 8017408:	0802a6b2 	.word	0x0802a6b2
 801740c:	0802807e 	.word	0x0802807e

08017410 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8017410:	b538      	push	{r3, r4, r5, lr}
 8017412:	428a      	cmp	r2, r1
 8017414:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8017416:	d90c      	bls.n	8017432 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 8017418:	b92c      	cbnz	r4, 8017426 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 801741a:	4b1c      	ldr	r3, [pc, #112]	; (801748c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 801741c:	4a1c      	ldr	r2, [pc, #112]	; (8017490 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 801741e:	21e1      	movs	r1, #225	; 0xe1
 8017420:	481c      	ldr	r0, [pc, #112]	; (8017494 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 8017422:	f00d f809 	bl	8024438 <__assert_func>
 8017426:	3c01      	subs	r4, #1
 8017428:	8704      	strh	r4, [r0, #56]	; 0x38
 801742a:	4b1b      	ldr	r3, [pc, #108]	; (8017498 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 801742c:	4a1b      	ldr	r2, [pc, #108]	; (801749c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 801742e:	21c5      	movs	r1, #197	; 0xc5
 8017430:	e7f6      	b.n	8017420 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 8017432:	428c      	cmp	r4, r1
 8017434:	d203      	bcs.n	801743e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 8017436:	4b1a      	ldr	r3, [pc, #104]	; (80174a0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 8017438:	4a1a      	ldr	r2, [pc, #104]	; (80174a4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 801743a:	21cb      	movs	r1, #203	; 0xcb
 801743c:	e7f0      	b.n	8017420 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 801743e:	1a64      	subs	r4, r4, r1
 8017440:	8704      	strh	r4, [r0, #56]	; 0x38
 8017442:	8ec4      	ldrh	r4, [r0, #54]	; 0x36
 8017444:	4421      	add	r1, r4
 8017446:	b289      	uxth	r1, r1
 8017448:	2909      	cmp	r1, #9
 801744a:	bf88      	it	hi
 801744c:	390a      	subhi	r1, #10
 801744e:	86c1      	strh	r1, [r0, #54]	; 0x36
 8017450:	250a      	movs	r5, #10
 8017452:	b1ba      	cbz	r2, 8017484 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 8017454:	3a01      	subs	r2, #1
 8017456:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8017458:	b292      	uxth	r2, r2
 801745a:	2909      	cmp	r1, #9
 801745c:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8017460:	d903      	bls.n	801746a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 8017462:	4b11      	ldr	r3, [pc, #68]	; (80174a8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 8017464:	4a11      	ldr	r2, [pc, #68]	; (80174ac <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 8017466:	21e6      	movs	r1, #230	; 0xe6
 8017468:	e7da      	b.n	8017420 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 801746a:	3101      	adds	r1, #1
 801746c:	8701      	strh	r1, [r0, #56]	; 0x38
 801746e:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8017470:	b901      	cbnz	r1, 8017474 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 8017472:	86c5      	strh	r5, [r0, #54]	; 0x36
 8017474:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8017476:	3901      	subs	r1, #1
 8017478:	b289      	uxth	r1, r1
 801747a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801747c:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8017480:	844c      	strh	r4, [r1, #34]	; 0x22
 8017482:	e7e6      	b.n	8017452 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 8017484:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8017488:	f7ff bf48 	b.w	801731c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801748c:	08027fac 	.word	0x08027fac
 8017490:	0802a48b 	.word	0x0802a48b
 8017494:	0802807e 	.word	0x0802807e
 8017498:	080280aa 	.word	0x080280aa
 801749c:	0802a535 	.word	0x0802a535
 80174a0:	0802a3e4 	.word	0x0802a3e4
 80174a4:	0802a80c 	.word	0x0802a80c
 80174a8:	0802a3f0 	.word	0x0802a3f0
 80174ac:	0802a403 	.word	0x0802a403

080174b0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80174b0:	3a01      	subs	r2, #1
 80174b2:	b570      	push	{r4, r5, r6, lr}
 80174b4:	b292      	uxth	r2, r2
 80174b6:	f64f 76ff 	movw	r6, #65535	; 0xffff
 80174ba:	42b2      	cmp	r2, r6
 80174bc:	d019      	beq.n	80174f2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 80174be:	8c04      	ldrh	r4, [r0, #32]
 80174c0:	f831 5b02 	ldrh.w	r5, [r1], #2
 80174c4:	4294      	cmp	r4, r2
 80174c6:	d805      	bhi.n	80174d4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 80174c8:	4b19      	ldr	r3, [pc, #100]	; (8017530 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 80174ca:	4a1a      	ldr	r2, [pc, #104]	; (8017534 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 80174cc:	481a      	ldr	r0, [pc, #104]	; (8017538 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 80174ce:	21c5      	movs	r1, #197	; 0xc5
 80174d0:	f00c ffb2 	bl	8024438 <__assert_func>
 80174d4:	8bc4      	ldrh	r4, [r0, #30]
 80174d6:	4414      	add	r4, r2
 80174d8:	b2a4      	uxth	r4, r4
 80174da:	2c01      	cmp	r4, #1
 80174dc:	bf88      	it	hi
 80174de:	3c02      	subhi	r4, #2
 80174e0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80174e4:	3a01      	subs	r2, #1
 80174e6:	8b64      	ldrh	r4, [r4, #26]
 80174e8:	42ac      	cmp	r4, r5
 80174ea:	b292      	uxth	r2, r2
 80174ec:	d0e5      	beq.n	80174ba <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 80174ee:	2000      	movs	r0, #0
 80174f0:	bd70      	pop	{r4, r5, r6, pc}
 80174f2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80174f6:	2400      	movs	r4, #0
 80174f8:	4413      	add	r3, r2
 80174fa:	b2a2      	uxth	r2, r4
 80174fc:	429a      	cmp	r2, r3
 80174fe:	da14      	bge.n	801752a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 8017500:	8f06      	ldrh	r6, [r0, #56]	; 0x38
 8017502:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8017506:	4296      	cmp	r6, r2
 8017508:	d802      	bhi.n	8017510 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 801750a:	4b09      	ldr	r3, [pc, #36]	; (8017530 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 801750c:	4a0b      	ldr	r2, [pc, #44]	; (801753c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 801750e:	e7dd      	b.n	80174cc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 8017510:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8017512:	4432      	add	r2, r6
 8017514:	b292      	uxth	r2, r2
 8017516:	2a09      	cmp	r2, #9
 8017518:	bf88      	it	hi
 801751a:	3a0a      	subhi	r2, #10
 801751c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017520:	3401      	adds	r4, #1
 8017522:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8017524:	42aa      	cmp	r2, r5
 8017526:	d0e8      	beq.n	80174fa <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 8017528:	e7e1      	b.n	80174ee <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 801752a:	2001      	movs	r0, #1
 801752c:	e7e0      	b.n	80174f0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 801752e:	bf00      	nop
 8017530:	080280aa 	.word	0x080280aa
 8017534:	0802a890 	.word	0x0802a890
 8017538:	0802807e 	.word	0x0802807e
 801753c:	0802a535 	.word	0x0802a535

08017540 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8017540:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017544:	4605      	mov	r5, r0
 8017546:	4616      	mov	r6, r2
 8017548:	1c8c      	adds	r4, r1, #2
 801754a:	8809      	ldrh	r1, [r1, #0]
 801754c:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8017550:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8017554:	42b3      	cmp	r3, r6
 8017556:	d124      	bne.n	80175a2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8017558:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801755c:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8017560:	f001 070f 	and.w	r7, r1, #15
 8017564:	f8cd 8000 	str.w	r8, [sp]
 8017568:	464b      	mov	r3, r9
 801756a:	4652      	mov	r2, sl
 801756c:	4621      	mov	r1, r4
 801756e:	4628      	mov	r0, r5
 8017570:	f7ff ff9e 	bl	80174b0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8017574:	4683      	mov	fp, r0
 8017576:	b168      	cbz	r0, 8017594 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8017578:	eb0a 0109 	add.w	r1, sl, r9
 801757c:	4441      	add	r1, r8
 801757e:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8017582:	463a      	mov	r2, r7
 8017584:	4649      	mov	r1, r9
 8017586:	4628      	mov	r0, r5
 8017588:	f7ff ff42 	bl	8017410 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801758c:	4658      	mov	r0, fp
 801758e:	b003      	add	sp, #12
 8017590:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017594:	eb07 010a 	add.w	r1, r7, sl
 8017598:	4449      	add	r1, r9
 801759a:	4441      	add	r1, r8
 801759c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80175a0:	e7d2      	b.n	8017548 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80175a2:	f04f 0b00 	mov.w	fp, #0
 80175a6:	e7f1      	b.n	801758c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080175a8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80175a8:	b570      	push	{r4, r5, r6, lr}
 80175aa:	8810      	ldrh	r0, [r2, #0]
 80175ac:	4298      	cmp	r0, r3
 80175ae:	d817      	bhi.n	80175e0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80175b0:	1e48      	subs	r0, r1, #1
 80175b2:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 80175b6:	4298      	cmp	r0, r3
 80175b8:	d312      	bcc.n	80175e0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80175ba:	2400      	movs	r4, #0
 80175bc:	428c      	cmp	r4, r1
 80175be:	d20f      	bcs.n	80175e0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80175c0:	1860      	adds	r0, r4, r1
 80175c2:	1040      	asrs	r0, r0, #1
 80175c4:	0085      	lsls	r5, r0, #2
 80175c6:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80175ca:	42b3      	cmp	r3, r6
 80175cc:	d902      	bls.n	80175d4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80175ce:	3001      	adds	r0, #1
 80175d0:	b284      	uxth	r4, r0
 80175d2:	e7f3      	b.n	80175bc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80175d4:	d201      	bcs.n	80175da <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80175d6:	b281      	uxth	r1, r0
 80175d8:	e7f0      	b.n	80175bc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80175da:	442a      	add	r2, r5
 80175dc:	8850      	ldrh	r0, [r2, #2]
 80175de:	bd70      	pop	{r4, r5, r6, pc}
 80175e0:	2000      	movs	r0, #0
 80175e2:	e7fc      	b.n	80175de <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080175e4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80175e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80175e8:	6c45      	ldr	r5, [r0, #68]	; 0x44
 80175ea:	886f      	ldrh	r7, [r5, #2]
 80175ec:	4604      	mov	r4, r0
 80175ee:	087f      	lsrs	r7, r7, #1
 80175f0:	260b      	movs	r6, #11
 80175f2:	3e01      	subs	r6, #1
 80175f4:	d01b      	beq.n	801762e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 80175f6:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80175f8:	b92b      	cbnz	r3, 8017606 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 80175fa:	4b0e      	ldr	r3, [pc, #56]	; (8017634 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 80175fc:	4a0e      	ldr	r2, [pc, #56]	; (8017638 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 80175fe:	480f      	ldr	r0, [pc, #60]	; (801763c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 8017600:	21c0      	movs	r1, #192	; 0xc0
 8017602:	f00c ff19 	bl	8024438 <__assert_func>
 8017606:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8017608:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801760c:	462a      	mov	r2, r5
 801760e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8017612:	4639      	mov	r1, r7
 8017614:	4643      	mov	r3, r8
 8017616:	4620      	mov	r0, r4
 8017618:	f7ff ffc6 	bl	80175a8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801761c:	b138      	cbz	r0, 801762e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 801761e:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8017622:	4642      	mov	r2, r8
 8017624:	4620      	mov	r0, r4
 8017626:	f7ff ff8b 	bl	8017540 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801762a:	2800      	cmp	r0, #0
 801762c:	d1e1      	bne.n	80175f2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801762e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017632:	bf00      	nop
 8017634:	08027fac 	.word	0x08027fac
 8017638:	0802a607 	.word	0x0802a607
 801763c:	0802807e 	.word	0x0802807e

08017640 <_ZN8touchgfx8ceil28_4El>:
 8017640:	f110 030f 	adds.w	r3, r0, #15
 8017644:	d401      	bmi.n	801764a <_ZN8touchgfx8ceil28_4El+0xa>
 8017646:	1118      	asrs	r0, r3, #4
 8017648:	4770      	bx	lr
 801764a:	f1c0 0001 	rsb	r0, r0, #1
 801764e:	f010 000f 	ands.w	r0, r0, #15
 8017652:	bf18      	it	ne
 8017654:	2001      	movne	r0, #1
 8017656:	2210      	movs	r2, #16
 8017658:	fb93 f3f2 	sdiv	r3, r3, r2
 801765c:	1a18      	subs	r0, r3, r0
 801765e:	4770      	bx	lr

08017660 <_ZN8touchgfx11floorDivModEllRlS0_>:
 8017660:	2900      	cmp	r1, #0
 8017662:	b538      	push	{r3, r4, r5, lr}
 8017664:	dc05      	bgt.n	8017672 <_ZN8touchgfx11floorDivModEllRlS0_+0x12>
 8017666:	4b0f      	ldr	r3, [pc, #60]	; (80176a4 <_ZN8touchgfx11floorDivModEllRlS0_+0x44>)
 8017668:	4a0f      	ldr	r2, [pc, #60]	; (80176a8 <_ZN8touchgfx11floorDivModEllRlS0_+0x48>)
 801766a:	4810      	ldr	r0, [pc, #64]	; (80176ac <_ZN8touchgfx11floorDivModEllRlS0_+0x4c>)
 801766c:	21f7      	movs	r1, #247	; 0xf7
 801766e:	f00c fee3 	bl	8024438 <__assert_func>
 8017672:	2800      	cmp	r0, #0
 8017674:	db06      	blt.n	8017684 <_ZN8touchgfx11floorDivModEllRlS0_+0x24>
 8017676:	fb90 f4f1 	sdiv	r4, r0, r1
 801767a:	6014      	str	r4, [r2, #0]
 801767c:	fb01 0114 	mls	r1, r1, r4, r0
 8017680:	6019      	str	r1, [r3, #0]
 8017682:	bd38      	pop	{r3, r4, r5, pc}
 8017684:	4240      	negs	r0, r0
 8017686:	fb90 f4f1 	sdiv	r4, r0, r1
 801768a:	4265      	negs	r5, r4
 801768c:	fb01 0014 	mls	r0, r1, r4, r0
 8017690:	6015      	str	r5, [r2, #0]
 8017692:	6018      	str	r0, [r3, #0]
 8017694:	2800      	cmp	r0, #0
 8017696:	d0f4      	beq.n	8017682 <_ZN8touchgfx11floorDivModEllRlS0_+0x22>
 8017698:	6810      	ldr	r0, [r2, #0]
 801769a:	3801      	subs	r0, #1
 801769c:	6010      	str	r0, [r2, #0]
 801769e:	6818      	ldr	r0, [r3, #0]
 80176a0:	1a09      	subs	r1, r1, r0
 80176a2:	e7ed      	b.n	8017680 <_ZN8touchgfx11floorDivModEllRlS0_+0x20>
 80176a4:	0802a961 	.word	0x0802a961
 80176a8:	0802a9a0 	.word	0x0802a9a0
 80176ac:	0802a971 	.word	0x0802a971

080176b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80176b0:	b570      	push	{r4, r5, r6, lr}
 80176b2:	694a      	ldr	r2, [r1, #20]
 80176b4:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80176b6:	684b      	ldr	r3, [r1, #4]
 80176b8:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 80176ba:	1b54      	subs	r4, r2, r5
 80176bc:	f000 8106 	beq.w	80178cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80176c0:	1b9b      	subs	r3, r3, r6
 80176c2:	d003      	beq.n	80176cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80176c4:	4363      	muls	r3, r4
 80176c6:	2210      	movs	r2, #16
 80176c8:	fb93 f3f2 	sdiv	r3, r3, r2
 80176cc:	680c      	ldr	r4, [r1, #0]
 80176ce:	698a      	ldr	r2, [r1, #24]
 80176d0:	1b65      	subs	r5, r4, r5
 80176d2:	f000 80fd 	beq.w	80178d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80176d6:	1b92      	subs	r2, r2, r6
 80176d8:	d003      	beq.n	80176e2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80176da:	436a      	muls	r2, r5
 80176dc:	2410      	movs	r4, #16
 80176de:	fb92 f2f4 	sdiv	r2, r2, r4
 80176e2:	1a9b      	subs	r3, r3, r2
 80176e4:	ee07 3a90 	vmov	s15, r3
 80176e8:	ed9f 4a88 	vldr	s8, [pc, #544]	; 801790c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80176ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80176f0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80176f4:	ee67 7a84 	vmul.f32	s15, s15, s8
 80176f8:	460a      	mov	r2, r1
 80176fa:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80176fe:	4603      	mov	r3, r0
 8017700:	f100 040c 	add.w	r4, r0, #12
 8017704:	eeb1 6a43 	vneg.f32	s12, s6
 8017708:	edd2 7a02 	vldr	s15, [r2, #8]
 801770c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8017710:	3214      	adds	r2, #20
 8017712:	ece3 6a01 	vstmia	r3!, {s13}
 8017716:	ed52 7a02 	vldr	s15, [r2, #-8]
 801771a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801771e:	429c      	cmp	r4, r3
 8017720:	edc3 7a02 	vstr	s15, [r3, #8]
 8017724:	ed52 7a01 	vldr	s15, [r2, #-4]
 8017728:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801772c:	edc3 7a05 	vstr	s15, [r3, #20]
 8017730:	d1ea      	bne.n	8017708 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8017732:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017734:	698b      	ldr	r3, [r1, #24]
 8017736:	edd0 4a02 	vldr	s9, [r0, #8]
 801773a:	edd0 3a00 	vldr	s7, [r0]
 801773e:	edd0 6a01 	vldr	s13, [r0, #4]
 8017742:	ed90 5a05 	vldr	s10, [r0, #20]
 8017746:	ed90 2a03 	vldr	s4, [r0, #12]
 801774a:	edd0 5a04 	vldr	s11, [r0, #16]
 801774e:	ed90 1a07 	vldr	s2, [r0, #28]
 8017752:	edd0 2a06 	vldr	s5, [r0, #24]
 8017756:	1a9b      	subs	r3, r3, r2
 8017758:	ee07 3a90 	vmov	s15, r3
 801775c:	684b      	ldr	r3, [r1, #4]
 801775e:	1a9b      	subs	r3, r3, r2
 8017760:	ee07 3a10 	vmov	s14, r3
 8017764:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017768:	ee76 6ae4 	vsub.f32	s13, s13, s9
 801776c:	ee67 7a84 	vmul.f32	s15, s15, s8
 8017770:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8017774:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017778:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 801777c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017780:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8017784:	eee6 7a87 	vfma.f32	s15, s13, s14
 8017788:	ee32 5a45 	vsub.f32	s10, s4, s10
 801778c:	ee67 7a83 	vmul.f32	s15, s15, s6
 8017790:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8017794:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017796:	694a      	ldr	r2, [r1, #20]
 8017798:	1b13      	subs	r3, r2, r4
 801779a:	ee07 3a10 	vmov	s14, r3
 801779e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80177a2:	680b      	ldr	r3, [r1, #0]
 80177a4:	ee27 7a04 	vmul.f32	s14, s14, s8
 80177a8:	1b1b      	subs	r3, r3, r4
 80177aa:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80177ae:	ee07 3a10 	vmov	s14, r3
 80177b2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80177b6:	ee27 7a04 	vmul.f32	s14, s14, s8
 80177ba:	eee6 4a87 	vfma.f32	s9, s13, s14
 80177be:	ee64 4a86 	vmul.f32	s9, s9, s12
 80177c2:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 80177c6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80177c8:	698b      	ldr	r3, [r1, #24]
 80177ca:	1a9b      	subs	r3, r3, r2
 80177cc:	ee06 3a90 	vmov	s13, r3
 80177d0:	684b      	ldr	r3, [r1, #4]
 80177d2:	1a9b      	subs	r3, r3, r2
 80177d4:	ee07 3a10 	vmov	s14, r3
 80177d8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80177dc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80177e0:	ee66 6a84 	vmul.f32	s13, s13, s8
 80177e4:	ee27 7a04 	vmul.f32	s14, s14, s8
 80177e8:	ee65 6a66 	vnmul.f32	s13, s10, s13
 80177ec:	eee5 6a87 	vfma.f32	s13, s11, s14
 80177f0:	ee66 6a83 	vmul.f32	s13, s13, s6
 80177f4:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 80177f8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80177fa:	694a      	ldr	r2, [r1, #20]
 80177fc:	1b13      	subs	r3, r2, r4
 80177fe:	ee07 3a10 	vmov	s14, r3
 8017802:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017806:	680b      	ldr	r3, [r1, #0]
 8017808:	ee27 7a04 	vmul.f32	s14, s14, s8
 801780c:	1b1b      	subs	r3, r3, r4
 801780e:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8017812:	ee07 3a10 	vmov	s14, r3
 8017816:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801781a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801781e:	eea5 5a87 	vfma.f32	s10, s11, s14
 8017822:	edd0 5a08 	vldr	s11, [r0, #32]
 8017826:	ee25 5a06 	vmul.f32	s10, s10, s12
 801782a:	ee31 1a65 	vsub.f32	s2, s2, s11
 801782e:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8017832:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017834:	698b      	ldr	r3, [r1, #24]
 8017836:	1a9b      	subs	r3, r3, r2
 8017838:	ee07 3a10 	vmov	s14, r3
 801783c:	684b      	ldr	r3, [r1, #4]
 801783e:	1a9b      	subs	r3, r3, r2
 8017840:	ee01 3a90 	vmov	s3, r3
 8017844:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017848:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801784c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017850:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8017854:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8017858:	ee61 1a84 	vmul.f32	s3, s3, s8
 801785c:	eea1 7a21 	vfma.f32	s14, s2, s3
 8017860:	ee27 7a03 	vmul.f32	s14, s14, s6
 8017864:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8017868:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801786a:	694a      	ldr	r2, [r1, #20]
 801786c:	1b13      	subs	r3, r2, r4
 801786e:	ee03 3a10 	vmov	s6, r3
 8017872:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8017876:	680b      	ldr	r3, [r1, #0]
 8017878:	ee23 3a04 	vmul.f32	s6, s6, s8
 801787c:	1b1b      	subs	r3, r3, r4
 801787e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8017882:	ee03 3a10 	vmov	s6, r3
 8017886:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801788a:	ee23 4a04 	vmul.f32	s8, s6, s8
 801788e:	eee1 5a04 	vfma.f32	s11, s2, s8
 8017892:	ee25 6a86 	vmul.f32	s12, s11, s12
 8017896:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801789a:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 801789e:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80178a2:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80178a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80178aa:	dd13      	ble.n	80178d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80178ac:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80178b0:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80178b4:	63c3      	str	r3, [r0, #60]	; 0x3c
 80178b6:	eee3 7a87 	vfma.f32	s15, s7, s14
 80178ba:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80178be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80178c2:	dd15      	ble.n	80178f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80178c4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80178c8:	6403      	str	r3, [r0, #64]	; 0x40
 80178ca:	bd70      	pop	{r4, r5, r6, pc}
 80178cc:	4623      	mov	r3, r4
 80178ce:	e6fd      	b.n	80176cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80178d0:	462a      	mov	r2, r5
 80178d2:	e706      	b.n	80176e2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80178d4:	d502      	bpl.n	80178dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80178d6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80178da:	e7e9      	b.n	80178b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80178dc:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80178e0:	eea3 2a85 	vfma.f32	s4, s7, s10
 80178e4:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 80178e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80178ec:	dade      	bge.n	80178ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 80178ee:	e7f2      	b.n	80178d6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 80178f0:	d502      	bpl.n	80178f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 80178f2:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80178f6:	e7e7      	b.n	80178c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 80178f8:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 80178fc:	eee3 4a86 	vfma.f32	s9, s7, s12
 8017900:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8017904:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017908:	dadc      	bge.n	80178c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801790a:	e7f2      	b.n	80178f2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801790c:	3d800000 	.word	0x3d800000

08017910 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8017910:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017914:	f04f 0814 	mov.w	r8, #20
 8017918:	fb08 f903 	mul.w	r9, r8, r3
 801791c:	eb02 0a09 	add.w	sl, r2, r9
 8017920:	4604      	mov	r4, r0
 8017922:	f8da 0004 	ldr.w	r0, [sl, #4]
 8017926:	4617      	mov	r7, r2
 8017928:	460d      	mov	r5, r1
 801792a:	461e      	mov	r6, r3
 801792c:	f7ff fe88 	bl	8017640 <_ZN8touchgfx8ceil28_4El>
 8017930:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017932:	6160      	str	r0, [r4, #20]
 8017934:	fb08 f803 	mul.w	r8, r8, r3
 8017938:	eb07 0b08 	add.w	fp, r7, r8
 801793c:	9001      	str	r0, [sp, #4]
 801793e:	f8db 0004 	ldr.w	r0, [fp, #4]
 8017942:	f7ff fe7d 	bl	8017640 <_ZN8touchgfx8ceil28_4El>
 8017946:	9a01      	ldr	r2, [sp, #4]
 8017948:	1a80      	subs	r0, r0, r2
 801794a:	61a0      	str	r0, [r4, #24]
 801794c:	2800      	cmp	r0, #0
 801794e:	f000 8088 	beq.w	8017a62 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x152>
 8017952:	f857 3009 	ldr.w	r3, [r7, r9]
 8017956:	f857 c008 	ldr.w	ip, [r7, r8]
 801795a:	f8da 1004 	ldr.w	r1, [sl, #4]
 801795e:	f8db 0004 	ldr.w	r0, [fp, #4]
 8017962:	ebac 0c03 	sub.w	ip, ip, r3
 8017966:	ea4f 1b0c 	mov.w	fp, ip, lsl #4
 801796a:	fb0b f202 	mul.w	r2, fp, r2
 801796e:	fb0c 2211 	mls	r2, ip, r1, r2
 8017972:	1a40      	subs	r0, r0, r1
 8017974:	ea4f 1800 	mov.w	r8, r0, lsl #4
 8017978:	fb00 2003 	mla	r0, r0, r3, r2
 801797c:	3801      	subs	r0, #1
 801797e:	f104 0310 	add.w	r3, r4, #16
 8017982:	4622      	mov	r2, r4
 8017984:	4641      	mov	r1, r8
 8017986:	4440      	add	r0, r8
 8017988:	f7ff fe6a 	bl	8017660 <_ZN8touchgfx11floorDivModEllRlS0_>
 801798c:	f104 0308 	add.w	r3, r4, #8
 8017990:	1d22      	adds	r2, r4, #4
 8017992:	4641      	mov	r1, r8
 8017994:	4658      	mov	r0, fp
 8017996:	f7ff fe63 	bl	8017660 <_ZN8touchgfx11floorDivModEllRlS0_>
 801799a:	f8c4 800c 	str.w	r8, [r4, #12]
 801799e:	f8da 3004 	ldr.w	r3, [sl, #4]
 80179a2:	6962      	ldr	r2, [r4, #20]
 80179a4:	eddf 6a31 	vldr	s13, [pc, #196]	; 8017a6c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 80179a8:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 80179ac:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 80179b0:	ee07 3a10 	vmov	s14, r3
 80179b4:	6822      	ldr	r2, [r4, #0]
 80179b6:	f857 3009 	ldr.w	r3, [r7, r9]
 80179ba:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 80179be:	ee07 3a90 	vmov	s15, r3
 80179c2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80179c6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80179ca:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 80179ce:	ee27 7a26 	vmul.f32	s14, s14, s13
 80179d2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80179d6:	edd3 6a00 	vldr	s13, [r3]
 80179da:	eee6 6a07 	vfma.f32	s13, s12, s14
 80179de:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80179e2:	eee6 6a27 	vfma.f32	s13, s12, s15
 80179e6:	edc4 6a07 	vstr	s13, [r4, #28]
 80179ea:	edd4 6a01 	vldr	s13, [r4, #4]
 80179ee:	edd5 5a09 	vldr	s11, [r5, #36]	; 0x24
 80179f2:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 80179f6:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80179fa:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80179fe:	ed84 6a08 	vstr	s12, [r4, #32]
 8017a02:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 8017a04:	6262      	str	r2, [r4, #36]	; 0x24
 8017a06:	edd5 5a0c 	vldr	s11, [r5, #48]	; 0x30
 8017a0a:	ed93 6a03 	vldr	s12, [r3, #12]
 8017a0e:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017a12:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 8017a16:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8017a1a:	ed84 6a0a 	vstr	s12, [r4, #40]	; 0x28
 8017a1e:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 8017a22:	ed95 6a0c 	vldr	s12, [r5, #48]	; 0x30
 8017a26:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8017a2a:	ed84 6a0b 	vstr	s12, [r4, #44]	; 0x2c
 8017a2e:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 8017a30:	6322      	str	r2, [r4, #48]	; 0x30
 8017a32:	ed93 6a06 	vldr	s12, [r3, #24]
 8017a36:	edd5 5a0e 	vldr	s11, [r5, #56]	; 0x38
 8017a3a:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017a3e:	eeb0 7a46 	vmov.f32	s14, s12
 8017a42:	ed95 6a0d 	vldr	s12, [r5, #52]	; 0x34
 8017a46:	eea6 7a27 	vfma.f32	s14, s12, s15
 8017a4a:	ed84 7a0d 	vstr	s14, [r4, #52]	; 0x34
 8017a4e:	ed95 7a0d 	vldr	s14, [r5, #52]	; 0x34
 8017a52:	edd5 7a0e 	vldr	s15, [r5, #56]	; 0x38
 8017a56:	eee6 7a87 	vfma.f32	s15, s13, s14
 8017a5a:	edc4 7a0e 	vstr	s15, [r4, #56]	; 0x38
 8017a5e:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8017a60:	63e3      	str	r3, [r4, #60]	; 0x3c
 8017a62:	4620      	mov	r0, r4
 8017a64:	b003      	add	sp, #12
 8017a66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017a6a:	bf00      	nop
 8017a6c:	3d800000 	.word	0x3d800000

08017a70 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8017a70:	4602      	mov	r2, r0
 8017a72:	b148      	cbz	r0, 8017a88 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8017a74:	2300      	movs	r3, #0
 8017a76:	b298      	uxth	r0, r3
 8017a78:	3301      	adds	r3, #1
 8017a7a:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8017a7e:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8017a82:	2900      	cmp	r1, #0
 8017a84:	d1f7      	bne.n	8017a76 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8017a86:	4770      	bx	lr
 8017a88:	4770      	bx	lr

08017a8a <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8017a8a:	b530      	push	{r4, r5, lr}
 8017a8c:	4604      	mov	r4, r0
 8017a8e:	b159      	cbz	r1, 8017aa8 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8017a90:	b148      	cbz	r0, 8017aa6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8017a92:	2300      	movs	r3, #0
 8017a94:	b298      	uxth	r0, r3
 8017a96:	4282      	cmp	r2, r0
 8017a98:	d905      	bls.n	8017aa6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8017a9a:	5ccd      	ldrb	r5, [r1, r3]
 8017a9c:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8017aa0:	3301      	adds	r3, #1
 8017aa2:	2d00      	cmp	r5, #0
 8017aa4:	d1f6      	bne.n	8017a94 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8017aa6:	bd30      	pop	{r4, r5, pc}
 8017aa8:	4608      	mov	r0, r1
 8017aaa:	e7fc      	b.n	8017aa6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08017aac <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 8017aac:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017aae:	b08b      	sub	sp, #44	; 0x2c
 8017ab0:	468c      	mov	ip, r1
 8017ab2:	2100      	movs	r1, #0
 8017ab4:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8017ab8:	ae01      	add	r6, sp, #4
 8017aba:	211f      	movs	r1, #31
 8017abc:	fbb0 f7f3 	udiv	r7, r0, r3
 8017ac0:	fb03 0517 	mls	r5, r3, r7, r0
 8017ac4:	b2ec      	uxtb	r4, r5
 8017ac6:	2d09      	cmp	r5, #9
 8017ac8:	bfd4      	ite	le
 8017aca:	3430      	addle	r4, #48	; 0x30
 8017acc:	3457      	addgt	r4, #87	; 0x57
 8017ace:	b2e4      	uxtb	r4, r4
 8017ad0:	558c      	strb	r4, [r1, r6]
 8017ad2:	4638      	mov	r0, r7
 8017ad4:	1e4c      	subs	r4, r1, #1
 8017ad6:	b92f      	cbnz	r7, 8017ae4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 8017ad8:	4431      	add	r1, r6
 8017ada:	4660      	mov	r0, ip
 8017adc:	f7ff ffd5 	bl	8017a8a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017ae0:	b00b      	add	sp, #44	; 0x2c
 8017ae2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017ae4:	4621      	mov	r1, r4
 8017ae6:	e7e9      	b.n	8017abc <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

08017ae8 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8017ae8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017aea:	4607      	mov	r7, r0
 8017aec:	b08b      	sub	sp, #44	; 0x2c
 8017aee:	4608      	mov	r0, r1
 8017af0:	b341      	cbz	r1, 8017b44 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8017af2:	1e99      	subs	r1, r3, #2
 8017af4:	2922      	cmp	r1, #34	; 0x22
 8017af6:	d825      	bhi.n	8017b44 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8017af8:	2100      	movs	r1, #0
 8017afa:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8017afe:	463c      	mov	r4, r7
 8017b00:	261f      	movs	r6, #31
 8017b02:	f10d 0c04 	add.w	ip, sp, #4
 8017b06:	fb94 fef3 	sdiv	lr, r4, r3
 8017b0a:	fb03 441e 	mls	r4, r3, lr, r4
 8017b0e:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8017b12:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8017b16:	b2ec      	uxtb	r4, r5
 8017b18:	2d09      	cmp	r5, #9
 8017b1a:	bfd4      	ite	le
 8017b1c:	3430      	addle	r4, #48	; 0x30
 8017b1e:	3457      	addgt	r4, #87	; 0x57
 8017b20:	b2e4      	uxtb	r4, r4
 8017b22:	f80c 4006 	strb.w	r4, [ip, r6]
 8017b26:	4674      	mov	r4, lr
 8017b28:	1e71      	subs	r1, r6, #1
 8017b2a:	b96c      	cbnz	r4, 8017b48 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 8017b2c:	2f00      	cmp	r7, #0
 8017b2e:	da05      	bge.n	8017b3c <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 8017b30:	ab0a      	add	r3, sp, #40	; 0x28
 8017b32:	4419      	add	r1, r3
 8017b34:	232d      	movs	r3, #45	; 0x2d
 8017b36:	f801 3c24 	strb.w	r3, [r1, #-36]
 8017b3a:	1eb1      	subs	r1, r6, #2
 8017b3c:	3101      	adds	r1, #1
 8017b3e:	4461      	add	r1, ip
 8017b40:	f7ff ffa3 	bl	8017a8a <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017b44:	b00b      	add	sp, #44	; 0x2c
 8017b46:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017b48:	460e      	mov	r6, r1
 8017b4a:	e7dc      	b.n	8017b06 <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

08017b4c <_ZN8touchgfx7Unicode4atoiEPKt>:
 8017b4c:	b510      	push	{r4, lr}
 8017b4e:	b158      	cbz	r0, 8017b68 <_ZN8touchgfx7Unicode4atoiEPKt+0x1c>
 8017b50:	1e82      	subs	r2, r0, #2
 8017b52:	210a      	movs	r1, #10
 8017b54:	2000      	movs	r0, #0
 8017b56:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8017b5a:	3b30      	subs	r3, #48	; 0x30
 8017b5c:	b29c      	uxth	r4, r3
 8017b5e:	2c09      	cmp	r4, #9
 8017b60:	d802      	bhi.n	8017b68 <_ZN8touchgfx7Unicode4atoiEPKt+0x1c>
 8017b62:	fb01 3000 	mla	r0, r1, r0, r3
 8017b66:	e7f6      	b.n	8017b56 <_ZN8touchgfx7Unicode4atoiEPKt+0xa>
 8017b68:	bd10      	pop	{r4, pc}

08017b6a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8017b6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b6e:	4691      	mov	r9, r2
 8017b70:	b085      	sub	sp, #20
 8017b72:	6802      	ldr	r2, [r0, #0]
 8017b74:	9201      	str	r2, [sp, #4]
 8017b76:	4688      	mov	r8, r1
 8017b78:	4683      	mov	fp, r0
 8017b7a:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8017b7e:	9103      	str	r1, [sp, #12]
 8017b80:	4610      	mov	r0, r2
 8017b82:	461c      	mov	r4, r3
 8017b84:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8017b88:	9302      	str	r3, [sp, #8]
 8017b8a:	f7ff ff71 	bl	8017a70 <_ZN8touchgfx7Unicode6strlenEPKt>
 8017b8e:	f1b8 0f00 	cmp.w	r8, #0
 8017b92:	bf0c      	ite	eq
 8017b94:	4684      	moveq	ip, r0
 8017b96:	f100 0c01 	addne.w	ip, r0, #1
 8017b9a:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8017b9e:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8017ba2:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8017ba4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017ba6:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8017baa:	9903      	ldr	r1, [sp, #12]
 8017bac:	fa1f fc8c 	uxth.w	ip, ip
 8017bb0:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8017bb4:	d041      	beq.n	8017c3a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8017bb6:	d834      	bhi.n	8017c22 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8017bb8:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8017bbc:	d059      	beq.n	8017c72 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8017bbe:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8017bc2:	d03a      	beq.n	8017c3a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8017bc4:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8017bc8:	d034      	beq.n	8017c34 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8017bca:	2400      	movs	r4, #0
 8017bcc:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8017bd0:	3a01      	subs	r2, #1
 8017bd2:	b169      	cbz	r1, 8017bf0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017bd4:	9911      	ldr	r1, [sp, #68]	; 0x44
 8017bd6:	458c      	cmp	ip, r1
 8017bd8:	da09      	bge.n	8017bee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8017bda:	eba1 010c 	sub.w	r1, r1, ip
 8017bde:	b289      	uxth	r1, r1
 8017be0:	b933      	cbnz	r3, 8017bf0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017be2:	2e00      	cmp	r6, #0
 8017be4:	d051      	beq.n	8017c8a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8017be6:	2800      	cmp	r0, #0
 8017be8:	d04f      	beq.n	8017c8a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8017bea:	440c      	add	r4, r1
 8017bec:	b2a4      	uxth	r4, r4
 8017bee:	2100      	movs	r1, #0
 8017bf0:	682b      	ldr	r3, [r5, #0]
 8017bf2:	4293      	cmp	r3, r2
 8017bf4:	da07      	bge.n	8017c06 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8017bf6:	f1b8 0f00 	cmp.w	r8, #0
 8017bfa:	d004      	beq.n	8017c06 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8017bfc:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8017c00:	682b      	ldr	r3, [r5, #0]
 8017c02:	3301      	adds	r3, #1
 8017c04:	602b      	str	r3, [r5, #0]
 8017c06:	2730      	movs	r7, #48	; 0x30
 8017c08:	2c00      	cmp	r4, #0
 8017c0a:	d04e      	beq.n	8017caa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017c0c:	682e      	ldr	r6, [r5, #0]
 8017c0e:	3c01      	subs	r4, #1
 8017c10:	42b2      	cmp	r2, r6
 8017c12:	b2a4      	uxth	r4, r4
 8017c14:	dd49      	ble.n	8017caa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017c16:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8017c1a:	682b      	ldr	r3, [r5, #0]
 8017c1c:	3301      	adds	r3, #1
 8017c1e:	602b      	str	r3, [r5, #0]
 8017c20:	e7f2      	b.n	8017c08 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8017c22:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8017c26:	d01d      	beq.n	8017c64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8017c28:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8017c2c:	d002      	beq.n	8017c34 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8017c2e:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8017c32:	e7c9      	b.n	8017bc8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8017c34:	4684      	mov	ip, r0
 8017c36:	f04f 0800 	mov.w	r8, #0
 8017c3a:	2c00      	cmp	r4, #0
 8017c3c:	d0c6      	beq.n	8017bcc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017c3e:	b947      	cbnz	r7, 8017c52 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8017c40:	2801      	cmp	r0, #1
 8017c42:	d106      	bne.n	8017c52 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8017c44:	8814      	ldrh	r4, [r2, #0]
 8017c46:	2c30      	cmp	r4, #48	; 0x30
 8017c48:	bf02      	ittt	eq
 8017c4a:	3202      	addeq	r2, #2
 8017c4c:	f8cb 2000 	streq.w	r2, [fp]
 8017c50:	4638      	moveq	r0, r7
 8017c52:	45bc      	cmp	ip, r7
 8017c54:	da14      	bge.n	8017c80 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8017c56:	b2bf      	uxth	r7, r7
 8017c58:	eba7 040c 	sub.w	r4, r7, ip
 8017c5c:	b2a4      	uxth	r4, r4
 8017c5e:	46bc      	mov	ip, r7
 8017c60:	2600      	movs	r6, #0
 8017c62:	e7b3      	b.n	8017bcc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017c64:	4684      	mov	ip, r0
 8017c66:	b16c      	cbz	r4, 8017c84 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8017c68:	42b8      	cmp	r0, r7
 8017c6a:	dd00      	ble.n	8017c6e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8017c6c:	b2b8      	uxth	r0, r7
 8017c6e:	2400      	movs	r4, #0
 8017c70:	e003      	b.n	8017c7a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8017c72:	f04f 0c01 	mov.w	ip, #1
 8017c76:	2400      	movs	r4, #0
 8017c78:	4660      	mov	r0, ip
 8017c7a:	4626      	mov	r6, r4
 8017c7c:	46a0      	mov	r8, r4
 8017c7e:	e7a5      	b.n	8017bcc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017c80:	2400      	movs	r4, #0
 8017c82:	e7ed      	b.n	8017c60 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8017c84:	4626      	mov	r6, r4
 8017c86:	46a0      	mov	r8, r4
 8017c88:	e7a0      	b.n	8017bcc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017c8a:	2900      	cmp	r1, #0
 8017c8c:	d0b0      	beq.n	8017bf0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017c8e:	2720      	movs	r7, #32
 8017c90:	682e      	ldr	r6, [r5, #0]
 8017c92:	2900      	cmp	r1, #0
 8017c94:	d0ac      	beq.n	8017bf0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017c96:	3901      	subs	r1, #1
 8017c98:	4296      	cmp	r6, r2
 8017c9a:	b289      	uxth	r1, r1
 8017c9c:	daa7      	bge.n	8017bee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8017c9e:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8017ca2:	682b      	ldr	r3, [r5, #0]
 8017ca4:	3301      	adds	r3, #1
 8017ca6:	602b      	str	r3, [r5, #0]
 8017ca8:	e7f2      	b.n	8017c90 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8017caa:	b188      	cbz	r0, 8017cd0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8017cac:	682b      	ldr	r3, [r5, #0]
 8017cae:	3801      	subs	r0, #1
 8017cb0:	429a      	cmp	r2, r3
 8017cb2:	b280      	uxth	r0, r0
 8017cb4:	dd0c      	ble.n	8017cd0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8017cb6:	f8db 3000 	ldr.w	r3, [fp]
 8017cba:	1c9c      	adds	r4, r3, #2
 8017cbc:	f8cb 4000 	str.w	r4, [fp]
 8017cc0:	881c      	ldrh	r4, [r3, #0]
 8017cc2:	682b      	ldr	r3, [r5, #0]
 8017cc4:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8017cc8:	682b      	ldr	r3, [r5, #0]
 8017cca:	3301      	adds	r3, #1
 8017ccc:	602b      	str	r3, [r5, #0]
 8017cce:	e7ec      	b.n	8017caa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017cd0:	2620      	movs	r6, #32
 8017cd2:	b151      	cbz	r1, 8017cea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8017cd4:	6828      	ldr	r0, [r5, #0]
 8017cd6:	3901      	subs	r1, #1
 8017cd8:	4282      	cmp	r2, r0
 8017cda:	b289      	uxth	r1, r1
 8017cdc:	dd05      	ble.n	8017cea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8017cde:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8017ce2:	682b      	ldr	r3, [r5, #0]
 8017ce4:	3301      	adds	r3, #1
 8017ce6:	602b      	str	r3, [r5, #0]
 8017ce8:	e7f3      	b.n	8017cd2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8017cea:	b005      	add	sp, #20
 8017cec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017cf0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8017cf0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017cf4:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8017cf8:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8017cfc:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8017d00:	2400      	movs	r4, #0
 8017d02:	8014      	strh	r4, [r2, #0]
 8017d04:	701c      	strb	r4, [r3, #0]
 8017d06:	f888 4000 	strb.w	r4, [r8]
 8017d0a:	f88c 4000 	strb.w	r4, [ip]
 8017d0e:	f88e 4000 	strb.w	r4, [lr]
 8017d12:	703c      	strb	r4, [r7, #0]
 8017d14:	6804      	ldr	r4, [r0, #0]
 8017d16:	b1a4      	cbz	r4, 8017d42 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8017d18:	8824      	ldrh	r4, [r4, #0]
 8017d1a:	f04f 0901 	mov.w	r9, #1
 8017d1e:	b314      	cbz	r4, 8017d66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017d20:	2c2b      	cmp	r4, #43	; 0x2b
 8017d22:	d001      	beq.n	8017d28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8017d24:	2c20      	cmp	r4, #32
 8017d26:	d110      	bne.n	8017d4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8017d28:	8014      	strh	r4, [r2, #0]
 8017d2a:	6804      	ldr	r4, [r0, #0]
 8017d2c:	b10c      	cbz	r4, 8017d32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8017d2e:	3402      	adds	r4, #2
 8017d30:	6004      	str	r4, [r0, #0]
 8017d32:	680c      	ldr	r4, [r1, #0]
 8017d34:	b10c      	cbz	r4, 8017d3a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8017d36:	3401      	adds	r4, #1
 8017d38:	600c      	str	r4, [r1, #0]
 8017d3a:	6804      	ldr	r4, [r0, #0]
 8017d3c:	b17c      	cbz	r4, 8017d5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8017d3e:	8824      	ldrh	r4, [r4, #0]
 8017d40:	e7ed      	b.n	8017d1e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8017d42:	680c      	ldr	r4, [r1, #0]
 8017d44:	b17c      	cbz	r4, 8017d66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017d46:	7824      	ldrb	r4, [r4, #0]
 8017d48:	e7e7      	b.n	8017d1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8017d4a:	2c2d      	cmp	r4, #45	; 0x2d
 8017d4c:	d102      	bne.n	8017d54 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8017d4e:	f883 9000 	strb.w	r9, [r3]
 8017d52:	e7ea      	b.n	8017d2a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8017d54:	2c23      	cmp	r4, #35	; 0x23
 8017d56:	d107      	bne.n	8017d68 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8017d58:	f888 9000 	strb.w	r9, [r8]
 8017d5c:	e7e5      	b.n	8017d2a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8017d5e:	680c      	ldr	r4, [r1, #0]
 8017d60:	b10c      	cbz	r4, 8017d66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017d62:	7824      	ldrb	r4, [r4, #0]
 8017d64:	e7db      	b.n	8017d1e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8017d66:	2400      	movs	r4, #0
 8017d68:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8017d6c:	2b09      	cmp	r3, #9
 8017d6e:	d901      	bls.n	8017d74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8017d70:	2c2a      	cmp	r4, #42	; 0x2a
 8017d72:	d122      	bne.n	8017dba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017d74:	2301      	movs	r3, #1
 8017d76:	2c30      	cmp	r4, #48	; 0x30
 8017d78:	f88e 3000 	strb.w	r3, [lr]
 8017d7c:	d10d      	bne.n	8017d9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8017d7e:	f88c 3000 	strb.w	r3, [ip]
 8017d82:	6803      	ldr	r3, [r0, #0]
 8017d84:	b10b      	cbz	r3, 8017d8a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8017d86:	3302      	adds	r3, #2
 8017d88:	6003      	str	r3, [r0, #0]
 8017d8a:	680b      	ldr	r3, [r1, #0]
 8017d8c:	b10b      	cbz	r3, 8017d92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8017d8e:	3301      	adds	r3, #1
 8017d90:	600b      	str	r3, [r1, #0]
 8017d92:	6803      	ldr	r3, [r0, #0]
 8017d94:	2b00      	cmp	r3, #0
 8017d96:	d02f      	beq.n	8017df8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8017d98:	881c      	ldrh	r4, [r3, #0]
 8017d9a:	2c2a      	cmp	r4, #42	; 0x2a
 8017d9c:	d135      	bne.n	8017e0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8017d9e:	f04f 33ff 	mov.w	r3, #4294967295
 8017da2:	6033      	str	r3, [r6, #0]
 8017da4:	6803      	ldr	r3, [r0, #0]
 8017da6:	b10b      	cbz	r3, 8017dac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8017da8:	3302      	adds	r3, #2
 8017daa:	6003      	str	r3, [r0, #0]
 8017dac:	680b      	ldr	r3, [r1, #0]
 8017dae:	b10b      	cbz	r3, 8017db4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8017db0:	3301      	adds	r3, #1
 8017db2:	600b      	str	r3, [r1, #0]
 8017db4:	6803      	ldr	r3, [r0, #0]
 8017db6:	b31b      	cbz	r3, 8017e00 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8017db8:	881c      	ldrh	r4, [r3, #0]
 8017dba:	2c2e      	cmp	r4, #46	; 0x2e
 8017dbc:	d11a      	bne.n	8017df4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017dbe:	2301      	movs	r3, #1
 8017dc0:	703b      	strb	r3, [r7, #0]
 8017dc2:	6803      	ldr	r3, [r0, #0]
 8017dc4:	b10b      	cbz	r3, 8017dca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8017dc6:	3302      	adds	r3, #2
 8017dc8:	6003      	str	r3, [r0, #0]
 8017dca:	680b      	ldr	r3, [r1, #0]
 8017dcc:	b10b      	cbz	r3, 8017dd2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8017dce:	3301      	adds	r3, #1
 8017dd0:	600b      	str	r3, [r1, #0]
 8017dd2:	6803      	ldr	r3, [r0, #0]
 8017dd4:	2b00      	cmp	r3, #0
 8017dd6:	d036      	beq.n	8017e46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8017dd8:	881b      	ldrh	r3, [r3, #0]
 8017dda:	2b2a      	cmp	r3, #42	; 0x2a
 8017ddc:	d137      	bne.n	8017e4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8017dde:	f04f 33ff 	mov.w	r3, #4294967295
 8017de2:	602b      	str	r3, [r5, #0]
 8017de4:	6803      	ldr	r3, [r0, #0]
 8017de6:	b10b      	cbz	r3, 8017dec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8017de8:	3302      	adds	r3, #2
 8017dea:	6003      	str	r3, [r0, #0]
 8017dec:	680b      	ldr	r3, [r1, #0]
 8017dee:	b10b      	cbz	r3, 8017df4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017df0:	3301      	adds	r3, #1
 8017df2:	600b      	str	r3, [r1, #0]
 8017df4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017df8:	680c      	ldr	r4, [r1, #0]
 8017dfa:	b134      	cbz	r4, 8017e0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8017dfc:	7824      	ldrb	r4, [r4, #0]
 8017dfe:	e7cc      	b.n	8017d9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8017e00:	680b      	ldr	r3, [r1, #0]
 8017e02:	2b00      	cmp	r3, #0
 8017e04:	d0f6      	beq.n	8017df4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017e06:	781c      	ldrb	r4, [r3, #0]
 8017e08:	e7d7      	b.n	8017dba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017e0a:	2300      	movs	r3, #0
 8017e0c:	6033      	str	r3, [r6, #0]
 8017e0e:	220a      	movs	r2, #10
 8017e10:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8017e14:	fa1f f38c 	uxth.w	r3, ip
 8017e18:	2b09      	cmp	r3, #9
 8017e1a:	d8ce      	bhi.n	8017dba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017e1c:	6833      	ldr	r3, [r6, #0]
 8017e1e:	fb02 c303 	mla	r3, r2, r3, ip
 8017e22:	6033      	str	r3, [r6, #0]
 8017e24:	6803      	ldr	r3, [r0, #0]
 8017e26:	b10b      	cbz	r3, 8017e2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8017e28:	3302      	adds	r3, #2
 8017e2a:	6003      	str	r3, [r0, #0]
 8017e2c:	680b      	ldr	r3, [r1, #0]
 8017e2e:	b10b      	cbz	r3, 8017e34 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8017e30:	3301      	adds	r3, #1
 8017e32:	600b      	str	r3, [r1, #0]
 8017e34:	6803      	ldr	r3, [r0, #0]
 8017e36:	b10b      	cbz	r3, 8017e3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8017e38:	881c      	ldrh	r4, [r3, #0]
 8017e3a:	e7e9      	b.n	8017e10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017e3c:	680c      	ldr	r4, [r1, #0]
 8017e3e:	2c00      	cmp	r4, #0
 8017e40:	d0e6      	beq.n	8017e10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017e42:	7824      	ldrb	r4, [r4, #0]
 8017e44:	e7e4      	b.n	8017e10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017e46:	680b      	ldr	r3, [r1, #0]
 8017e48:	b10b      	cbz	r3, 8017e4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8017e4a:	781b      	ldrb	r3, [r3, #0]
 8017e4c:	e7c5      	b.n	8017dda <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8017e4e:	2200      	movs	r2, #0
 8017e50:	602a      	str	r2, [r5, #0]
 8017e52:	240a      	movs	r4, #10
 8017e54:	3b30      	subs	r3, #48	; 0x30
 8017e56:	b29e      	uxth	r6, r3
 8017e58:	2e09      	cmp	r6, #9
 8017e5a:	682a      	ldr	r2, [r5, #0]
 8017e5c:	d813      	bhi.n	8017e86 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8017e5e:	fb04 3302 	mla	r3, r4, r2, r3
 8017e62:	602b      	str	r3, [r5, #0]
 8017e64:	6803      	ldr	r3, [r0, #0]
 8017e66:	b10b      	cbz	r3, 8017e6c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8017e68:	3302      	adds	r3, #2
 8017e6a:	6003      	str	r3, [r0, #0]
 8017e6c:	680b      	ldr	r3, [r1, #0]
 8017e6e:	b10b      	cbz	r3, 8017e74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8017e70:	3301      	adds	r3, #1
 8017e72:	600b      	str	r3, [r1, #0]
 8017e74:	6803      	ldr	r3, [r0, #0]
 8017e76:	b10b      	cbz	r3, 8017e7c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8017e78:	881b      	ldrh	r3, [r3, #0]
 8017e7a:	e7eb      	b.n	8017e54 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017e7c:	680b      	ldr	r3, [r1, #0]
 8017e7e:	2b00      	cmp	r3, #0
 8017e80:	d0e8      	beq.n	8017e54 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017e82:	781b      	ldrb	r3, [r3, #0]
 8017e84:	e7e6      	b.n	8017e54 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017e86:	2a06      	cmp	r2, #6
 8017e88:	bfa8      	it	ge
 8017e8a:	2206      	movge	r2, #6
 8017e8c:	602a      	str	r2, [r5, #0]
 8017e8e:	e7b1      	b.n	8017df4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08017e90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8017e90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e94:	b0a3      	sub	sp, #140	; 0x8c
 8017e96:	2600      	movs	r6, #0
 8017e98:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8017e9c:	4607      	mov	r7, r0
 8017e9e:	4688      	mov	r8, r1
 8017ea0:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8017ea4:	4631      	mov	r1, r6
 8017ea6:	2242      	movs	r2, #66	; 0x42
 8017ea8:	4648      	mov	r0, r9
 8017eaa:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8017eac:	960d      	str	r6, [sp, #52]	; 0x34
 8017eae:	f00c fd69 	bl	8024984 <memset>
 8017eb2:	b15f      	cbz	r7, 8017ecc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8017eb4:	f108 3aff 	add.w	sl, r8, #4294967295
 8017eb8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017eba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017ebc:	b152      	cbz	r2, 8017ed4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8017ebe:	8812      	ldrh	r2, [r2, #0]
 8017ec0:	b10a      	cbz	r2, 8017ec6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8017ec2:	459a      	cmp	sl, r3
 8017ec4:	dc2e      	bgt.n	8017f24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8017ec6:	2200      	movs	r2, #0
 8017ec8:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8017ecc:	4638      	mov	r0, r7
 8017ece:	b023      	add	sp, #140	; 0x8c
 8017ed0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017ed4:	9a08      	ldr	r2, [sp, #32]
 8017ed6:	2a00      	cmp	r2, #0
 8017ed8:	d0f5      	beq.n	8017ec6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8017eda:	7812      	ldrb	r2, [r2, #0]
 8017edc:	e7f0      	b.n	8017ec0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8017ede:	2d00      	cmp	r5, #0
 8017ee0:	d0ea      	beq.n	8017eb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017ee2:	782a      	ldrb	r2, [r5, #0]
 8017ee4:	b142      	cbz	r2, 8017ef8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8017ee6:	2a25      	cmp	r2, #37	; 0x25
 8017ee8:	d001      	beq.n	8017eee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8017eea:	459a      	cmp	sl, r3
 8017eec:	dc08      	bgt.n	8017f00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8017eee:	f1bb 0f00 	cmp.w	fp, #0
 8017ef2:	d121      	bne.n	8017f38 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8017ef4:	2d00      	cmp	r5, #0
 8017ef6:	d0df      	beq.n	8017eb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017ef8:	782a      	ldrb	r2, [r5, #0]
 8017efa:	f04f 0b00 	mov.w	fp, #0
 8017efe:	e01d      	b.n	8017f3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8017f00:	f1bb 0f00 	cmp.w	fp, #0
 8017f04:	d078      	beq.n	8017ff8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8017f06:	f8bb 2000 	ldrh.w	r2, [fp]
 8017f0a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8017f0e:	f1bb 0f00 	cmp.w	fp, #0
 8017f12:	d002      	beq.n	8017f1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8017f14:	f10b 0202 	add.w	r2, fp, #2
 8017f18:	9209      	str	r2, [sp, #36]	; 0x24
 8017f1a:	b10d      	cbz	r5, 8017f20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8017f1c:	3501      	adds	r5, #1
 8017f1e:	9508      	str	r5, [sp, #32]
 8017f20:	3301      	adds	r3, #1
 8017f22:	930d      	str	r3, [sp, #52]	; 0x34
 8017f24:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8017f28:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017f2a:	f1bb 0f00 	cmp.w	fp, #0
 8017f2e:	d0d6      	beq.n	8017ede <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8017f30:	f8bb 2000 	ldrh.w	r2, [fp]
 8017f34:	2a00      	cmp	r2, #0
 8017f36:	d1d6      	bne.n	8017ee6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8017f38:	f8bb 2000 	ldrh.w	r2, [fp]
 8017f3c:	2a00      	cmp	r2, #0
 8017f3e:	d0bb      	beq.n	8017eb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017f40:	459a      	cmp	sl, r3
 8017f42:	ddb9      	ble.n	8017eb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017f44:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8017f48:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8017f4c:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8017f50:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8017f54:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8017f58:	960e      	str	r6, [sp, #56]	; 0x38
 8017f5a:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8017f5e:	960f      	str	r6, [sp, #60]	; 0x3c
 8017f60:	f1bb 0f00 	cmp.w	fp, #0
 8017f64:	d002      	beq.n	8017f6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8017f66:	f10b 0302 	add.w	r3, fp, #2
 8017f6a:	9309      	str	r3, [sp, #36]	; 0x24
 8017f6c:	b10d      	cbz	r5, 8017f72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8017f6e:	1c6b      	adds	r3, r5, #1
 8017f70:	9308      	str	r3, [sp, #32]
 8017f72:	ab0f      	add	r3, sp, #60	; 0x3c
 8017f74:	9305      	str	r3, [sp, #20]
 8017f76:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8017f7a:	9304      	str	r3, [sp, #16]
 8017f7c:	ab0e      	add	r3, sp, #56	; 0x38
 8017f7e:	9303      	str	r3, [sp, #12]
 8017f80:	ab0c      	add	r3, sp, #48	; 0x30
 8017f82:	9302      	str	r3, [sp, #8]
 8017f84:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8017f88:	9301      	str	r3, [sp, #4]
 8017f8a:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8017f8e:	9300      	str	r3, [sp, #0]
 8017f90:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8017f94:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8017f98:	a908      	add	r1, sp, #32
 8017f9a:	a809      	add	r0, sp, #36	; 0x24
 8017f9c:	f7ff fea8 	bl	8017cf0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8017fa0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017fa2:	2b00      	cmp	r3, #0
 8017fa4:	bfbe      	ittt	lt
 8017fa6:	6823      	ldrlt	r3, [r4, #0]
 8017fa8:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8017fac:	930e      	strlt	r3, [sp, #56]	; 0x38
 8017fae:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017fb0:	bfb8      	it	lt
 8017fb2:	3404      	addlt	r4, #4
 8017fb4:	2b00      	cmp	r3, #0
 8017fb6:	bfb8      	it	lt
 8017fb8:	6823      	ldrlt	r3, [r4, #0]
 8017fba:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017fbe:	bfbe      	ittt	lt
 8017fc0:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8017fc4:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8017fc6:	3404      	addlt	r4, #4
 8017fc8:	b1d9      	cbz	r1, 8018002 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8017fca:	880b      	ldrh	r3, [r1, #0]
 8017fcc:	2b69      	cmp	r3, #105	; 0x69
 8017fce:	d01f      	beq.n	8018010 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017fd0:	d82f      	bhi.n	8018032 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8017fd2:	2b58      	cmp	r3, #88	; 0x58
 8017fd4:	d01c      	beq.n	8018010 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017fd6:	d818      	bhi.n	801800a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8017fd8:	2b25      	cmp	r3, #37	; 0x25
 8017fda:	d034      	beq.n	8018046 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8017fdc:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8017fe0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017fe2:	f1bb 0f00 	cmp.w	fp, #0
 8017fe6:	f000 80b8 	beq.w	801815a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8017fea:	f8bb 5000 	ldrh.w	r5, [fp]
 8017fee:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8017ff2:	3301      	adds	r3, #1
 8017ff4:	930d      	str	r3, [sp, #52]	; 0x34
 8017ff6:	e029      	b.n	801804c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8017ff8:	b10d      	cbz	r5, 8017ffe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8017ffa:	782a      	ldrb	r2, [r5, #0]
 8017ffc:	e785      	b.n	8017f0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8017ffe:	462a      	mov	r2, r5
 8018000:	e783      	b.n	8017f0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8018002:	2a00      	cmp	r2, #0
 8018004:	d0ea      	beq.n	8017fdc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018006:	7813      	ldrb	r3, [r2, #0]
 8018008:	e7e0      	b.n	8017fcc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 801800a:	3b63      	subs	r3, #99	; 0x63
 801800c:	2b01      	cmp	r3, #1
 801800e:	d8e5      	bhi.n	8017fdc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018010:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8018014:	b329      	cbz	r1, 8018062 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8018016:	880b      	ldrh	r3, [r1, #0]
 8018018:	2b69      	cmp	r3, #105	; 0x69
 801801a:	d063      	beq.n	80180e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801801c:	d825      	bhi.n	801806a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 801801e:	2b63      	cmp	r3, #99	; 0x63
 8018020:	d038      	beq.n	8018094 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8018022:	2b64      	cmp	r3, #100	; 0x64
 8018024:	d05e      	beq.n	80180e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8018026:	2b58      	cmp	r3, #88	; 0x58
 8018028:	d07b      	beq.n	8018122 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 801802a:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 801802e:	4625      	mov	r5, r4
 8018030:	e036      	b.n	80180a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018032:	2b73      	cmp	r3, #115	; 0x73
 8018034:	d0ec      	beq.n	8018010 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018036:	d802      	bhi.n	801803e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8018038:	2b6f      	cmp	r3, #111	; 0x6f
 801803a:	d1cf      	bne.n	8017fdc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801803c:	e7e8      	b.n	8018010 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801803e:	2b75      	cmp	r3, #117	; 0x75
 8018040:	d0e6      	beq.n	8018010 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018042:	2b78      	cmp	r3, #120	; 0x78
 8018044:	e7f9      	b.n	801803a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8018046:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018048:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801804c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801804e:	b10b      	cbz	r3, 8018054 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8018050:	3302      	adds	r3, #2
 8018052:	9309      	str	r3, [sp, #36]	; 0x24
 8018054:	9b08      	ldr	r3, [sp, #32]
 8018056:	2b00      	cmp	r3, #0
 8018058:	f43f af2e 	beq.w	8017eb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801805c:	3301      	adds	r3, #1
 801805e:	9308      	str	r3, [sp, #32]
 8018060:	e72a      	b.n	8017eb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018062:	2a00      	cmp	r2, #0
 8018064:	d0e1      	beq.n	801802a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018066:	7813      	ldrb	r3, [r2, #0]
 8018068:	e7d6      	b.n	8018018 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 801806a:	2b73      	cmp	r3, #115	; 0x73
 801806c:	d036      	beq.n	80180dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 801806e:	d807      	bhi.n	8018080 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8018070:	2b6f      	cmp	r3, #111	; 0x6f
 8018072:	d1da      	bne.n	801802a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018074:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018076:	1d25      	adds	r5, r4, #4
 8018078:	eba8 0202 	sub.w	r2, r8, r2
 801807c:	2308      	movs	r3, #8
 801807e:	e04a      	b.n	8018116 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8018080:	2b75      	cmp	r3, #117	; 0x75
 8018082:	d043      	beq.n	801810c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8018084:	2b78      	cmp	r3, #120	; 0x78
 8018086:	d1d0      	bne.n	801802a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018088:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801808a:	1d25      	adds	r5, r4, #4
 801808c:	eba8 0202 	sub.w	r2, r8, r2
 8018090:	2310      	movs	r3, #16
 8018092:	e040      	b.n	8018116 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8018094:	7823      	ldrb	r3, [r4, #0]
 8018096:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801809a:	1d25      	adds	r5, r4, #4
 801809c:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 80180a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80180a2:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 80180a6:	2b00      	cmp	r3, #0
 80180a8:	d052      	beq.n	8018150 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 80180aa:	881a      	ldrh	r2, [r3, #0]
 80180ac:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 80180b0:	a80d      	add	r0, sp, #52	; 0x34
 80180b2:	9005      	str	r0, [sp, #20]
 80180b4:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 80180b8:	9004      	str	r0, [sp, #16]
 80180ba:	980e      	ldr	r0, [sp, #56]	; 0x38
 80180bc:	9003      	str	r0, [sp, #12]
 80180be:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 80180c2:	9002      	str	r0, [sp, #8]
 80180c4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80180c6:	9001      	str	r0, [sp, #4]
 80180c8:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 80180cc:	9000      	str	r0, [sp, #0]
 80180ce:	e9cd 8706 	strd	r8, r7, [sp, #24]
 80180d2:	a810      	add	r0, sp, #64	; 0x40
 80180d4:	f7ff fd49 	bl	8017b6a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 80180d8:	462c      	mov	r4, r5
 80180da:	e7b7      	b.n	801804c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 80180dc:	6823      	ldr	r3, [r4, #0]
 80180de:	1d25      	adds	r5, r4, #4
 80180e0:	9310      	str	r3, [sp, #64]	; 0x40
 80180e2:	e7dd      	b.n	80180a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80180e4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80180e6:	6820      	ldr	r0, [r4, #0]
 80180e8:	eba8 0202 	sub.w	r2, r8, r2
 80180ec:	230a      	movs	r3, #10
 80180ee:	b292      	uxth	r2, r2
 80180f0:	4649      	mov	r1, r9
 80180f2:	f7ff fcf9 	bl	8017ae8 <_ZN8touchgfx7Unicode4itoaElPtti>
 80180f6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80180fa:	2b2d      	cmp	r3, #45	; 0x2d
 80180fc:	f104 0504 	add.w	r5, r4, #4
 8018100:	d1ce      	bne.n	80180a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018102:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018106:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018108:	3302      	adds	r3, #2
 801810a:	e7e9      	b.n	80180e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801810c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801810e:	1d25      	adds	r5, r4, #4
 8018110:	eba8 0202 	sub.w	r2, r8, r2
 8018114:	230a      	movs	r3, #10
 8018116:	b292      	uxth	r2, r2
 8018118:	4649      	mov	r1, r9
 801811a:	6820      	ldr	r0, [r4, #0]
 801811c:	f7ff fcc6 	bl	8017aac <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8018120:	e7be      	b.n	80180a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018122:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018124:	6820      	ldr	r0, [r4, #0]
 8018126:	eba8 0202 	sub.w	r2, r8, r2
 801812a:	b292      	uxth	r2, r2
 801812c:	2310      	movs	r3, #16
 801812e:	4649      	mov	r1, r9
 8018130:	f7ff fcbc 	bl	8017aac <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8018134:	1d25      	adds	r5, r4, #4
 8018136:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 801813a:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 801813e:	2b00      	cmp	r3, #0
 8018140:	d0ae      	beq.n	80180a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018142:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8018146:	2919      	cmp	r1, #25
 8018148:	d8f7      	bhi.n	801813a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801814a:	3b20      	subs	r3, #32
 801814c:	8013      	strh	r3, [r2, #0]
 801814e:	e7f4      	b.n	801813a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8018150:	9a08      	ldr	r2, [sp, #32]
 8018152:	2a00      	cmp	r2, #0
 8018154:	d0aa      	beq.n	80180ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8018156:	7812      	ldrb	r2, [r2, #0]
 8018158:	e7a8      	b.n	80180ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801815a:	2d00      	cmp	r5, #0
 801815c:	f43f af47 	beq.w	8017fee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8018160:	782d      	ldrb	r5, [r5, #0]
 8018162:	e744      	b.n	8017fee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08018164 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list>:
 8018164:	b507      	push	{r0, r1, r2, lr}
 8018166:	9300      	str	r3, [sp, #0]
 8018168:	2300      	movs	r3, #0
 801816a:	f7ff fe91 	bl	8017e90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801816e:	b003      	add	sp, #12
 8018170:	f85d fb04 	ldr.w	pc, [sp], #4

08018174 <_ZN8touchgfx7Unicode8snprintfEPttPKtz>:
 8018174:	b40c      	push	{r2, r3}
 8018176:	b507      	push	{r0, r1, r2, lr}
 8018178:	ab04      	add	r3, sp, #16
 801817a:	f853 2b04 	ldr.w	r2, [r3], #4
 801817e:	9301      	str	r3, [sp, #4]
 8018180:	f7ff fff0 	bl	8018164 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list>
 8018184:	b003      	add	sp, #12
 8018186:	f85d eb04 	ldr.w	lr, [sp], #4
 801818a:	b002      	add	sp, #8
 801818c:	4770      	bx	lr

0801818e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801818e:	b507      	push	{r0, r1, r2, lr}
 8018190:	9300      	str	r3, [sp, #0]
 8018192:	4613      	mov	r3, r2
 8018194:	2200      	movs	r2, #0
 8018196:	f7ff fe7b 	bl	8017e90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801819a:	b003      	add	sp, #12
 801819c:	f85d fb04 	ldr.w	pc, [sp], #4

080181a0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 80181a0:	b40c      	push	{r2, r3}
 80181a2:	b507      	push	{r0, r1, r2, lr}
 80181a4:	ab04      	add	r3, sp, #16
 80181a6:	f853 2b04 	ldr.w	r2, [r3], #4
 80181aa:	9301      	str	r3, [sp, #4]
 80181ac:	f7ff ffef 	bl	801818e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 80181b0:	b003      	add	sp, #12
 80181b2:	f85d eb04 	ldr.w	lr, [sp], #4
 80181b6:	b002      	add	sp, #8
 80181b8:	4770      	bx	lr
	...

080181bc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80181bc:	4b01      	ldr	r3, [pc, #4]	; (80181c4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80181be:	6018      	str	r0, [r3, #0]
 80181c0:	4770      	bx	lr
 80181c2:	bf00      	nop
 80181c4:	20020af0 	.word	0x20020af0

080181c8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80181c8:	4b06      	ldr	r3, [pc, #24]	; (80181e4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80181ca:	881a      	ldrh	r2, [r3, #0]
 80181cc:	4282      	cmp	r2, r0
 80181ce:	d807      	bhi.n	80181e0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 80181d0:	4b05      	ldr	r3, [pc, #20]	; (80181e8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 80181d2:	881b      	ldrh	r3, [r3, #0]
 80181d4:	4413      	add	r3, r2
 80181d6:	4298      	cmp	r0, r3
 80181d8:	bfac      	ite	ge
 80181da:	2000      	movge	r0, #0
 80181dc:	2001      	movlt	r0, #1
 80181de:	4770      	bx	lr
 80181e0:	2000      	movs	r0, #0
 80181e2:	4770      	bx	lr
 80181e4:	20020b10 	.word	0x20020b10
 80181e8:	20020b14 	.word	0x20020b14

080181ec <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 80181ec:	b508      	push	{r3, lr}
 80181ee:	4601      	mov	r1, r0
 80181f0:	f7ff ffea 	bl	80181c8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80181f4:	b118      	cbz	r0, 80181fe <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80181f6:	4b02      	ldr	r3, [pc, #8]	; (8018200 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80181f8:	681b      	ldr	r3, [r3, #0]
 80181fa:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80181fe:	bd08      	pop	{r3, pc}
 8018200:	20020af4 	.word	0x20020af4

08018204 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8018204:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018208:	4d28      	ldr	r5, [pc, #160]	; (80182ac <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801820a:	682b      	ldr	r3, [r5, #0]
 801820c:	2b00      	cmp	r3, #0
 801820e:	d04a      	beq.n	80182a6 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 8018210:	4a27      	ldr	r2, [pc, #156]	; (80182b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8018212:	4e28      	ldr	r6, [pc, #160]	; (80182b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8018214:	8810      	ldrh	r0, [r2, #0]
 8018216:	f8b6 8000 	ldrh.w	r8, [r6]
 801821a:	4c27      	ldr	r4, [pc, #156]	; (80182b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801821c:	4f27      	ldr	r7, [pc, #156]	; (80182bc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801821e:	4440      	add	r0, r8
 8018220:	1c41      	adds	r1, r0, #1
 8018222:	f021 0101 	bic.w	r1, r1, #1
 8018226:	0409      	lsls	r1, r1, #16
 8018228:	0c09      	lsrs	r1, r1, #16
 801822a:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 801822e:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8018232:	eb03 020e 	add.w	r2, r3, lr
 8018236:	eb0e 010c 	add.w	r1, lr, ip
 801823a:	6022      	str	r2, [r4, #0]
 801823c:	185a      	adds	r2, r3, r1
 801823e:	603a      	str	r2, [r7, #0]
 8018240:	220e      	movs	r2, #14
 8018242:	fb02 f208 	mul.w	r2, r2, r8
 8018246:	3203      	adds	r2, #3
 8018248:	f022 0203 	bic.w	r2, r2, #3
 801824c:	4411      	add	r1, r2
 801824e:	440b      	add	r3, r1
 8018250:	491b      	ldr	r1, [pc, #108]	; (80182c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 8018252:	600b      	str	r3, [r1, #0]
 8018254:	491b      	ldr	r1, [pc, #108]	; (80182c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 8018256:	2300      	movs	r3, #0
 8018258:	800b      	strh	r3, [r1, #0]
 801825a:	491b      	ldr	r1, [pc, #108]	; (80182c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 801825c:	6809      	ldr	r1, [r1, #0]
 801825e:	eba1 010e 	sub.w	r1, r1, lr
 8018262:	eba1 010c 	sub.w	r1, r1, ip
 8018266:	1a8a      	subs	r2, r1, r2
 8018268:	4918      	ldr	r1, [pc, #96]	; (80182cc <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
 801826a:	600a      	str	r2, [r1, #0]
 801826c:	4a18      	ldr	r2, [pc, #96]	; (80182d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
 801826e:	469c      	mov	ip, r3
 8018270:	8013      	strh	r3, [r2, #0]
 8018272:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8018276:	4283      	cmp	r3, r0
 8018278:	d10d      	bne.n	8018296 <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
 801827a:	8835      	ldrh	r5, [r6, #0]
 801827c:	6838      	ldr	r0, [r7, #0]
 801827e:	2300      	movs	r3, #0
 8018280:	240e      	movs	r4, #14
 8018282:	429d      	cmp	r5, r3
 8018284:	d90f      	bls.n	80182a6 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 8018286:	fb04 0203 	mla	r2, r4, r3, r0
 801828a:	3301      	adds	r3, #1
 801828c:	7b11      	ldrb	r1, [r2, #12]
 801828e:	f36f 1145 	bfc	r1, #5, #1
 8018292:	7311      	strb	r1, [r2, #12]
 8018294:	e7f5      	b.n	8018282 <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
 8018296:	682a      	ldr	r2, [r5, #0]
 8018298:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801829c:	6822      	ldr	r2, [r4, #0]
 801829e:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 80182a2:	3301      	adds	r3, #1
 80182a4:	e7e7      	b.n	8018276 <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
 80182a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80182aa:	bf00      	nop
 80182ac:	20020af4 	.word	0x20020af4
 80182b0:	20020b10 	.word	0x20020b10
 80182b4:	20020b14 	.word	0x20020b14
 80182b8:	20020b08 	.word	0x20020b08
 80182bc:	20020af8 	.word	0x20020af8
 80182c0:	20020b00 	.word	0x20020b00
 80182c4:	20020b12 	.word	0x20020b12
 80182c8:	20020afc 	.word	0x20020afc
 80182cc:	20020b0c 	.word	0x20020b0c
 80182d0:	20020b04 	.word	0x20020b04

080182d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 80182d4:	b510      	push	{r4, lr}
 80182d6:	4b10      	ldr	r3, [pc, #64]	; (8018318 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 80182d8:	681b      	ldr	r3, [r3, #0]
 80182da:	b9db      	cbnz	r3, 8018314 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 80182dc:	b1d1      	cbz	r1, 8018314 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 80182de:	4b0f      	ldr	r3, [pc, #60]	; (801831c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 80182e0:	801a      	strh	r2, [r3, #0]
 80182e2:	4b0f      	ldr	r3, [pc, #60]	; (8018320 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 80182e4:	881b      	ldrh	r3, [r3, #0]
 80182e6:	b292      	uxth	r2, r2
 80182e8:	240e      	movs	r4, #14
 80182ea:	4413      	add	r3, r2
 80182ec:	4362      	muls	r2, r4
 80182ee:	2406      	movs	r4, #6
 80182f0:	fb04 2203 	mla	r2, r4, r3, r2
 80182f4:	428a      	cmp	r2, r1
 80182f6:	d305      	bcc.n	8018304 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 80182f8:	4b0a      	ldr	r3, [pc, #40]	; (8018324 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 80182fa:	4a0b      	ldr	r2, [pc, #44]	; (8018328 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 80182fc:	480b      	ldr	r0, [pc, #44]	; (801832c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 80182fe:	2135      	movs	r1, #53	; 0x35
 8018300:	f00c f89a 	bl	8024438 <__assert_func>
 8018304:	4b0a      	ldr	r3, [pc, #40]	; (8018330 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 8018306:	6019      	str	r1, [r3, #0]
 8018308:	4b0a      	ldr	r3, [pc, #40]	; (8018334 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 801830a:	6018      	str	r0, [r3, #0]
 801830c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018310:	f7ff bf78 	b.w	8018204 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8018314:	bd10      	pop	{r4, pc}
 8018316:	bf00      	nop
 8018318:	20020b00 	.word	0x20020b00
 801831c:	20020b14 	.word	0x20020b14
 8018320:	20020b10 	.word	0x20020b10
 8018324:	0802aa3e 	.word	0x0802aa3e
 8018328:	0802aa97 	.word	0x0802aa97
 801832c:	0802aa19 	.word	0x0802aa19
 8018330:	20020afc 	.word	0x20020afc
 8018334:	20020af4 	.word	0x20020af4

08018338 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8018338:	b470      	push	{r4, r5, r6}
 801833a:	4c07      	ldr	r4, [pc, #28]	; (8018358 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801833c:	6826      	ldr	r6, [r4, #0]
 801833e:	4605      	mov	r5, r0
 8018340:	4610      	mov	r0, r2
 8018342:	9a03      	ldr	r2, [sp, #12]
 8018344:	b936      	cbnz	r6, 8018354 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8018346:	6025      	str	r5, [r4, #0]
 8018348:	4c04      	ldr	r4, [pc, #16]	; (801835c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801834a:	8021      	strh	r1, [r4, #0]
 801834c:	bc70      	pop	{r4, r5, r6}
 801834e:	4619      	mov	r1, r3
 8018350:	f7ff bfc0 	b.w	80182d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8018354:	bc70      	pop	{r4, r5, r6}
 8018356:	4770      	bx	lr
 8018358:	20020b18 	.word	0x20020b18
 801835c:	20020b10 	.word	0x20020b10

08018360 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8018360:	b508      	push	{r3, lr}
 8018362:	4b14      	ldr	r3, [pc, #80]	; (80183b4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8018364:	6819      	ldr	r1, [r3, #0]
 8018366:	b931      	cbnz	r1, 8018376 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 8018368:	4b13      	ldr	r3, [pc, #76]	; (80183b8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801836a:	4a14      	ldr	r2, [pc, #80]	; (80183bc <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801836c:	4814      	ldr	r0, [pc, #80]	; (80183c0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801836e:	f240 4185 	movw	r1, #1157	; 0x485
 8018372:	f00c f861 	bl	8024438 <__assert_func>
 8018376:	4a13      	ldr	r2, [pc, #76]	; (80183c4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8018378:	8803      	ldrh	r3, [r0, #0]
 801837a:	8812      	ldrh	r2, [r2, #0]
 801837c:	4293      	cmp	r3, r2
 801837e:	d204      	bcs.n	801838a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 8018380:	2214      	movs	r2, #20
 8018382:	fb02 1303 	mla	r3, r2, r3, r1
 8018386:	8918      	ldrh	r0, [r3, #8]
 8018388:	bd08      	pop	{r3, pc}
 801838a:	490f      	ldr	r1, [pc, #60]	; (80183c8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 801838c:	8809      	ldrh	r1, [r1, #0]
 801838e:	4411      	add	r1, r2
 8018390:	428b      	cmp	r3, r1
 8018392:	da06      	bge.n	80183a2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 8018394:	1a9b      	subs	r3, r3, r2
 8018396:	4a0d      	ldr	r2, [pc, #52]	; (80183cc <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 8018398:	6812      	ldr	r2, [r2, #0]
 801839a:	210e      	movs	r1, #14
 801839c:	fb01 2303 	mla	r3, r1, r3, r2
 80183a0:	e7f1      	b.n	8018386 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 80183a2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80183a6:	4293      	cmp	r3, r2
 80183a8:	bf0a      	itet	eq
 80183aa:	4b09      	ldreq	r3, [pc, #36]	; (80183d0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 80183ac:	2000      	movne	r0, #0
 80183ae:	8818      	ldrheq	r0, [r3, #0]
 80183b0:	e7ea      	b.n	8018388 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 80183b2:	bf00      	nop
 80183b4:	20020b18 	.word	0x20020b18
 80183b8:	08029c94 	.word	0x08029c94
 80183bc:	0802ab44 	.word	0x0802ab44
 80183c0:	0802aa19 	.word	0x0802aa19
 80183c4:	20020b10 	.word	0x20020b10
 80183c8:	20020b14 	.word	0x20020b14
 80183cc:	20020af8 	.word	0x20020af8
 80183d0:	20020a84 	.word	0x20020a84

080183d4 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 80183d4:	b508      	push	{r3, lr}
 80183d6:	4b14      	ldr	r3, [pc, #80]	; (8018428 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80183d8:	6819      	ldr	r1, [r3, #0]
 80183da:	b931      	cbnz	r1, 80183ea <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 80183dc:	4b13      	ldr	r3, [pc, #76]	; (801842c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80183de:	4a14      	ldr	r2, [pc, #80]	; (8018430 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80183e0:	4814      	ldr	r0, [pc, #80]	; (8018434 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80183e2:	f240 4199 	movw	r1, #1177	; 0x499
 80183e6:	f00c f827 	bl	8024438 <__assert_func>
 80183ea:	4a13      	ldr	r2, [pc, #76]	; (8018438 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80183ec:	8803      	ldrh	r3, [r0, #0]
 80183ee:	8812      	ldrh	r2, [r2, #0]
 80183f0:	4293      	cmp	r3, r2
 80183f2:	d204      	bcs.n	80183fe <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 80183f4:	2214      	movs	r2, #20
 80183f6:	fb02 1303 	mla	r3, r2, r3, r1
 80183fa:	8958      	ldrh	r0, [r3, #10]
 80183fc:	bd08      	pop	{r3, pc}
 80183fe:	490f      	ldr	r1, [pc, #60]	; (801843c <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 8018400:	8809      	ldrh	r1, [r1, #0]
 8018402:	4411      	add	r1, r2
 8018404:	428b      	cmp	r3, r1
 8018406:	da06      	bge.n	8018416 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 8018408:	1a9b      	subs	r3, r3, r2
 801840a:	4a0d      	ldr	r2, [pc, #52]	; (8018440 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 801840c:	6812      	ldr	r2, [r2, #0]
 801840e:	210e      	movs	r1, #14
 8018410:	fb01 2303 	mla	r3, r1, r3, r2
 8018414:	e7f1      	b.n	80183fa <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 8018416:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801841a:	4293      	cmp	r3, r2
 801841c:	bf0a      	itet	eq
 801841e:	4b09      	ldreq	r3, [pc, #36]	; (8018444 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 8018420:	2000      	movne	r0, #0
 8018422:	8818      	ldrheq	r0, [r3, #0]
 8018424:	e7ea      	b.n	80183fc <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 8018426:	bf00      	nop
 8018428:	20020b18 	.word	0x20020b18
 801842c:	08029c94 	.word	0x08029c94
 8018430:	0802ab70 	.word	0x0802ab70
 8018434:	0802aa19 	.word	0x0802aa19
 8018438:	20020b10 	.word	0x20020b10
 801843c:	20020b14 	.word	0x20020b14
 8018440:	20020af8 	.word	0x20020af8
 8018444:	20020a86 	.word	0x20020a86

08018448 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8018448:	b510      	push	{r4, lr}
 801844a:	4b23      	ldr	r3, [pc, #140]	; (80184d8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801844c:	681c      	ldr	r4, [r3, #0]
 801844e:	b934      	cbnz	r4, 801845e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 8018450:	4b22      	ldr	r3, [pc, #136]	; (80184dc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8018452:	4a23      	ldr	r2, [pc, #140]	; (80184e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8018454:	4823      	ldr	r0, [pc, #140]	; (80184e4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8018456:	f240 41ad 	movw	r1, #1197	; 0x4ad
 801845a:	f00b ffed 	bl	8024438 <__assert_func>
 801845e:	4a22      	ldr	r2, [pc, #136]	; (80184e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8018460:	880b      	ldrh	r3, [r1, #0]
 8018462:	8812      	ldrh	r2, [r2, #0]
 8018464:	4293      	cmp	r3, r2
 8018466:	d211      	bcs.n	801848c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 8018468:	2214      	movs	r2, #20
 801846a:	fb02 4303 	mla	r3, r2, r3, r4
 801846e:	8a1a      	ldrh	r2, [r3, #16]
 8018470:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8018474:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8018478:	8a5b      	ldrh	r3, [r3, #18]
 801847a:	8004      	strh	r4, [r0, #0]
 801847c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8018480:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8018484:	8041      	strh	r1, [r0, #2]
 8018486:	8082      	strh	r2, [r0, #4]
 8018488:	80c3      	strh	r3, [r0, #6]
 801848a:	e00e      	b.n	80184aa <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 801848c:	4917      	ldr	r1, [pc, #92]	; (80184ec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 801848e:	8809      	ldrh	r1, [r1, #0]
 8018490:	4411      	add	r1, r2
 8018492:	428b      	cmp	r3, r1
 8018494:	da0a      	bge.n	80184ac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 8018496:	1a9b      	subs	r3, r3, r2
 8018498:	4a15      	ldr	r2, [pc, #84]	; (80184f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 801849a:	6812      	ldr	r2, [r2, #0]
 801849c:	210e      	movs	r1, #14
 801849e:	fb01 2303 	mla	r3, r1, r3, r2
 80184a2:	681a      	ldr	r2, [r3, #0]
 80184a4:	6002      	str	r2, [r0, #0]
 80184a6:	685a      	ldr	r2, [r3, #4]
 80184a8:	6042      	str	r2, [r0, #4]
 80184aa:	bd10      	pop	{r4, pc}
 80184ac:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80184b0:	4293      	cmp	r3, r2
 80184b2:	d10b      	bne.n	80184cc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 80184b4:	4b0f      	ldr	r3, [pc, #60]	; (80184f4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 80184b6:	f9b3 1000 	ldrsh.w	r1, [r3]
 80184ba:	4b0f      	ldr	r3, [pc, #60]	; (80184f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 80184bc:	8081      	strh	r1, [r0, #4]
 80184be:	f9b3 2000 	ldrsh.w	r2, [r3]
 80184c2:	80c2      	strh	r2, [r0, #6]
 80184c4:	2300      	movs	r3, #0
 80184c6:	8003      	strh	r3, [r0, #0]
 80184c8:	8043      	strh	r3, [r0, #2]
 80184ca:	e7ee      	b.n	80184aa <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 80184cc:	2300      	movs	r3, #0
 80184ce:	8003      	strh	r3, [r0, #0]
 80184d0:	8043      	strh	r3, [r0, #2]
 80184d2:	8083      	strh	r3, [r0, #4]
 80184d4:	e7d8      	b.n	8018488 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 80184d6:	bf00      	nop
 80184d8:	20020b18 	.word	0x20020b18
 80184dc:	08029c94 	.word	0x08029c94
 80184e0:	0802aadd 	.word	0x0802aadd
 80184e4:	0802aa19 	.word	0x0802aa19
 80184e8:	20020b10 	.word	0x20020b10
 80184ec:	20020b14 	.word	0x20020b14
 80184f0:	20020af8 	.word	0x20020af8
 80184f4:	20020a84 	.word	0x20020a84
 80184f8:	20020a86 	.word	0x20020a86

080184fc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 80184fc:	4b18      	ldr	r3, [pc, #96]	; (8018560 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80184fe:	681b      	ldr	r3, [r3, #0]
 8018500:	b34b      	cbz	r3, 8018556 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 8018502:	4a18      	ldr	r2, [pc, #96]	; (8018564 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8018504:	8800      	ldrh	r0, [r0, #0]
 8018506:	8812      	ldrh	r2, [r2, #0]
 8018508:	4290      	cmp	r0, r2
 801850a:	d211      	bcs.n	8018530 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 801850c:	2214      	movs	r2, #20
 801850e:	fb02 3300 	mla	r3, r2, r0, r3
 8018512:	8a1a      	ldrh	r2, [r3, #16]
 8018514:	8919      	ldrh	r1, [r3, #8]
 8018516:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801851a:	428a      	cmp	r2, r1
 801851c:	db1d      	blt.n	801855a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 801851e:	8a58      	ldrh	r0, [r3, #18]
 8018520:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8018524:	895b      	ldrh	r3, [r3, #10]
 8018526:	4298      	cmp	r0, r3
 8018528:	bfac      	ite	ge
 801852a:	2000      	movge	r0, #0
 801852c:	2001      	movlt	r0, #1
 801852e:	4770      	bx	lr
 8018530:	4b0d      	ldr	r3, [pc, #52]	; (8018568 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8018532:	881b      	ldrh	r3, [r3, #0]
 8018534:	4413      	add	r3, r2
 8018536:	4298      	cmp	r0, r3
 8018538:	da0d      	bge.n	8018556 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 801853a:	4b0c      	ldr	r3, [pc, #48]	; (801856c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 801853c:	681b      	ldr	r3, [r3, #0]
 801853e:	1a80      	subs	r0, r0, r2
 8018540:	220e      	movs	r2, #14
 8018542:	fb02 3300 	mla	r3, r2, r0, r3
 8018546:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801854a:	891a      	ldrh	r2, [r3, #8]
 801854c:	4291      	cmp	r1, r2
 801854e:	db04      	blt.n	801855a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 8018550:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8018554:	e7e6      	b.n	8018524 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 8018556:	2000      	movs	r0, #0
 8018558:	4770      	bx	lr
 801855a:	2001      	movs	r0, #1
 801855c:	4770      	bx	lr
 801855e:	bf00      	nop
 8018560:	20020b18 	.word	0x20020b18
 8018564:	20020b10 	.word	0x20020b10
 8018568:	20020b14 	.word	0x20020b14
 801856c:	20020af8 	.word	0x20020af8

08018570 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8018570:	b508      	push	{r3, lr}
 8018572:	4b12      	ldr	r3, [pc, #72]	; (80185bc <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8018574:	6819      	ldr	r1, [r3, #0]
 8018576:	b931      	cbnz	r1, 8018586 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8018578:	4b11      	ldr	r3, [pc, #68]	; (80185c0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801857a:	4a12      	ldr	r2, [pc, #72]	; (80185c4 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801857c:	4812      	ldr	r0, [pc, #72]	; (80185c8 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801857e:	f240 41d1 	movw	r1, #1233	; 0x4d1
 8018582:	f00b ff59 	bl	8024438 <__assert_func>
 8018586:	8803      	ldrh	r3, [r0, #0]
 8018588:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801858c:	4293      	cmp	r3, r2
 801858e:	d012      	beq.n	80185b6 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8018590:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018594:	4293      	cmp	r3, r2
 8018596:	d103      	bne.n	80185a0 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 8018598:	4b0c      	ldr	r3, [pc, #48]	; (80185cc <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801859a:	681b      	ldr	r3, [r3, #0]
 801859c:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801859e:	bd08      	pop	{r3, pc}
 80185a0:	4a0b      	ldr	r2, [pc, #44]	; (80185d0 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 80185a2:	6812      	ldr	r2, [r2, #0]
 80185a4:	b11a      	cbz	r2, 80185ae <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 80185a6:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80185aa:	2800      	cmp	r0, #0
 80185ac:	d1f7      	bne.n	801859e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 80185ae:	2214      	movs	r2, #20
 80185b0:	4353      	muls	r3, r2
 80185b2:	58c8      	ldr	r0, [r1, r3]
 80185b4:	e7f3      	b.n	801859e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 80185b6:	2000      	movs	r0, #0
 80185b8:	e7f1      	b.n	801859e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 80185ba:	bf00      	nop
 80185bc:	20020b18 	.word	0x20020b18
 80185c0:	08029c94 	.word	0x08029c94
 80185c4:	0802ab13 	.word	0x0802ab13
 80185c8:	0802aa19 	.word	0x0802aa19
 80185cc:	20020a90 	.word	0x20020a90
 80185d0:	20020af4 	.word	0x20020af4

080185d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80185d4:	8802      	ldrh	r2, [r0, #0]
 80185d6:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 80185da:	429a      	cmp	r2, r3
 80185dc:	d845      	bhi.n	801866a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 80185de:	4b24      	ldr	r3, [pc, #144]	; (8018670 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80185e0:	8818      	ldrh	r0, [r3, #0]
 80185e2:	4282      	cmp	r2, r0
 80185e4:	d221      	bcs.n	801862a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 80185e6:	4b23      	ldr	r3, [pc, #140]	; (8018674 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80185e8:	6819      	ldr	r1, [r3, #0]
 80185ea:	2314      	movs	r3, #20
 80185ec:	fb03 1302 	mla	r3, r3, r2, r1
 80185f0:	6858      	ldr	r0, [r3, #4]
 80185f2:	2800      	cmp	r0, #0
 80185f4:	d03a      	beq.n	801866c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 80185f6:	4920      	ldr	r1, [pc, #128]	; (8018678 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80185f8:	6809      	ldr	r1, [r1, #0]
 80185fa:	2900      	cmp	r1, #0
 80185fc:	d036      	beq.n	801866c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 80185fe:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8018602:	2900      	cmp	r1, #0
 8018604:	d032      	beq.n	801866c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8018606:	891a      	ldrh	r2, [r3, #8]
 8018608:	8958      	ldrh	r0, [r3, #10]
 801860a:	4350      	muls	r0, r2
 801860c:	7c5a      	ldrb	r2, [r3, #17]
 801860e:	7cdb      	ldrb	r3, [r3, #19]
 8018610:	0952      	lsrs	r2, r2, #5
 8018612:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8018616:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801861a:	2b0b      	cmp	r3, #11
 801861c:	bf18      	it	ne
 801861e:	0040      	lslne	r0, r0, #1
 8018620:	3003      	adds	r0, #3
 8018622:	f020 0003 	bic.w	r0, r0, #3
 8018626:	4408      	add	r0, r1
 8018628:	4770      	bx	lr
 801862a:	4b14      	ldr	r3, [pc, #80]	; (801867c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 801862c:	881b      	ldrh	r3, [r3, #0]
 801862e:	4403      	add	r3, r0
 8018630:	429a      	cmp	r2, r3
 8018632:	da1a      	bge.n	801866a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8018634:	4b12      	ldr	r3, [pc, #72]	; (8018680 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 8018636:	681b      	ldr	r3, [r3, #0]
 8018638:	1a10      	subs	r0, r2, r0
 801863a:	210e      	movs	r1, #14
 801863c:	fb01 3000 	mla	r0, r1, r0, r3
 8018640:	7b03      	ldrb	r3, [r0, #12]
 8018642:	f003 031f 	and.w	r3, r3, #31
 8018646:	2b0b      	cmp	r3, #11
 8018648:	d10b      	bne.n	8018662 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801864a:	8903      	ldrh	r3, [r0, #8]
 801864c:	8940      	ldrh	r0, [r0, #10]
 801864e:	4358      	muls	r0, r3
 8018650:	4b09      	ldr	r3, [pc, #36]	; (8018678 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8018652:	6819      	ldr	r1, [r3, #0]
 8018654:	3003      	adds	r0, #3
 8018656:	f020 0303 	bic.w	r3, r0, #3
 801865a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801865e:	4418      	add	r0, r3
 8018660:	4770      	bx	lr
 8018662:	2b0d      	cmp	r3, #13
 8018664:	d101      	bne.n	801866a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8018666:	300d      	adds	r0, #13
 8018668:	4770      	bx	lr
 801866a:	2000      	movs	r0, #0
 801866c:	4770      	bx	lr
 801866e:	bf00      	nop
 8018670:	20020b10 	.word	0x20020b10
 8018674:	20020b18 	.word	0x20020b18
 8018678:	20020af4 	.word	0x20020af4
 801867c:	20020b14 	.word	0x20020b14
 8018680:	20020af8 	.word	0x20020af8

08018684 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8018684:	b510      	push	{r4, lr}
 8018686:	4b17      	ldr	r3, [pc, #92]	; (80186e4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8018688:	6819      	ldr	r1, [r3, #0]
 801868a:	8803      	ldrh	r3, [r0, #0]
 801868c:	b1e9      	cbz	r1, 80186ca <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 801868e:	4a16      	ldr	r2, [pc, #88]	; (80186e8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8018690:	8812      	ldrh	r2, [r2, #0]
 8018692:	429a      	cmp	r2, r3
 8018694:	d90a      	bls.n	80186ac <_ZNK8touchgfx6Bitmap9getFormatEv+0x28>
 8018696:	2214      	movs	r2, #20
 8018698:	fb02 1303 	mla	r3, r2, r3, r1
 801869c:	7c58      	ldrb	r0, [r3, #17]
 801869e:	0942      	lsrs	r2, r0, #5
 80186a0:	7cd8      	ldrb	r0, [r3, #19]
 80186a2:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80186a6:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80186aa:	bd10      	pop	{r4, pc}
 80186ac:	490f      	ldr	r1, [pc, #60]	; (80186ec <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80186ae:	8809      	ldrh	r1, [r1, #0]
 80186b0:	4411      	add	r1, r2
 80186b2:	428b      	cmp	r3, r1
 80186b4:	da09      	bge.n	80186ca <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 80186b6:	1a9b      	subs	r3, r3, r2
 80186b8:	4a0d      	ldr	r2, [pc, #52]	; (80186f0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80186ba:	6812      	ldr	r2, [r2, #0]
 80186bc:	210e      	movs	r1, #14
 80186be:	fb01 2303 	mla	r3, r1, r3, r2
 80186c2:	7b18      	ldrb	r0, [r3, #12]
 80186c4:	f000 001f 	and.w	r0, r0, #31
 80186c8:	e7ef      	b.n	80186aa <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80186ca:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80186ce:	4293      	cmp	r3, r2
 80186d0:	d106      	bne.n	80186e0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 80186d2:	f7f8 fcf3 	bl	80110bc <_ZN8touchgfx3HAL3lcdEv>
 80186d6:	6803      	ldr	r3, [r0, #0]
 80186d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80186dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80186de:	4718      	bx	r3
 80186e0:	2000      	movs	r0, #0
 80186e2:	e7e2      	b.n	80186aa <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80186e4:	20020b18 	.word	0x20020b18
 80186e8:	20020b10 	.word	0x20020b10
 80186ec:	20020b14 	.word	0x20020b14
 80186f0:	20020af8 	.word	0x20020af8

080186f4 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 80186f4:	2010      	movs	r0, #16
 80186f6:	4770      	bx	lr

080186f8 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 80186f8:	2000      	movs	r0, #0
 80186fa:	4770      	bx	lr

080186fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80186fc:	2bff      	cmp	r3, #255	; 0xff
 80186fe:	d050      	beq.n	80187a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8018700:	2a0b      	cmp	r2, #11
 8018702:	d04a      	beq.n	801879a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8018704:	d80e      	bhi.n	8018724 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8018706:	2a03      	cmp	r2, #3
 8018708:	d03f      	beq.n	801878a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801870a:	d804      	bhi.n	8018716 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801870c:	2a01      	cmp	r2, #1
 801870e:	d03e      	beq.n	801878e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8018710:	d93f      	bls.n	8018792 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8018712:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8018714:	4770      	bx	lr
 8018716:	2a09      	cmp	r2, #9
 8018718:	d03f      	beq.n	801879a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801871a:	d83c      	bhi.n	8018796 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801871c:	2a08      	cmp	r2, #8
 801871e:	d03a      	beq.n	8018796 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8018720:	2000      	movs	r0, #0
 8018722:	4770      	bx	lr
 8018724:	2a2f      	cmp	r2, #47	; 0x2f
 8018726:	d024      	beq.n	8018772 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8018728:	d80d      	bhi.n	8018746 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801872a:	2a2d      	cmp	r2, #45	; 0x2d
 801872c:	d014      	beq.n	8018758 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801872e:	d826      	bhi.n	801877e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8018730:	2a2c      	cmp	r2, #44	; 0x2c
 8018732:	d1f5      	bne.n	8018720 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018734:	684b      	ldr	r3, [r1, #4]
 8018736:	781b      	ldrb	r3, [r3, #0]
 8018738:	2b01      	cmp	r3, #1
 801873a:	d018      	beq.n	801876e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801873c:	d323      	bcc.n	8018786 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801873e:	2b02      	cmp	r3, #2
 8018740:	d1ee      	bne.n	8018720 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018742:	6880      	ldr	r0, [r0, #8]
 8018744:	4770      	bx	lr
 8018746:	2a31      	cmp	r2, #49	; 0x31
 8018748:	d004      	beq.n	8018754 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801874a:	d328      	bcc.n	801879e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801874c:	2a32      	cmp	r2, #50	; 0x32
 801874e:	d026      	beq.n	801879e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8018750:	2a33      	cmp	r2, #51	; 0x33
 8018752:	d1e5      	bne.n	8018720 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018754:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8018756:	4770      	bx	lr
 8018758:	684b      	ldr	r3, [r1, #4]
 801875a:	781b      	ldrb	r3, [r3, #0]
 801875c:	2b01      	cmp	r3, #1
 801875e:	d004      	beq.n	801876a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8018760:	d30b      	bcc.n	801877a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018762:	2b02      	cmp	r3, #2
 8018764:	d1dc      	bne.n	8018720 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018766:	6900      	ldr	r0, [r0, #16]
 8018768:	4770      	bx	lr
 801876a:	6a00      	ldr	r0, [r0, #32]
 801876c:	4770      	bx	lr
 801876e:	6980      	ldr	r0, [r0, #24]
 8018770:	4770      	bx	lr
 8018772:	684b      	ldr	r3, [r1, #4]
 8018774:	781b      	ldrb	r3, [r3, #0]
 8018776:	2b00      	cmp	r3, #0
 8018778:	d1d2      	bne.n	8018720 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801877a:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801877c:	4770      	bx	lr
 801877e:	684b      	ldr	r3, [r1, #4]
 8018780:	781b      	ldrb	r3, [r3, #0]
 8018782:	2b00      	cmp	r3, #0
 8018784:	d1cc      	bne.n	8018720 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018786:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8018788:	4770      	bx	lr
 801878a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801878c:	4770      	bx	lr
 801878e:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8018790:	4770      	bx	lr
 8018792:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8018794:	4770      	bx	lr
 8018796:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8018798:	4770      	bx	lr
 801879a:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801879c:	4770      	bx	lr
 801879e:	6e80      	ldr	r0, [r0, #104]	; 0x68
 80187a0:	4770      	bx	lr
 80187a2:	2a0b      	cmp	r2, #11
 80187a4:	d049      	beq.n	801883a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80187a6:	d80e      	bhi.n	80187c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80187a8:	2a03      	cmp	r2, #3
 80187aa:	d040      	beq.n	801882e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80187ac:	d804      	bhi.n	80187b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80187ae:	2a01      	cmp	r2, #1
 80187b0:	d03f      	beq.n	8018832 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80187b2:	d940      	bls.n	8018836 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80187b4:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80187b6:	4770      	bx	lr
 80187b8:	2a09      	cmp	r2, #9
 80187ba:	d03e      	beq.n	801883a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80187bc:	d801      	bhi.n	80187c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80187be:	2a08      	cmp	r2, #8
 80187c0:	d1ae      	bne.n	8018720 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80187c2:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 80187c4:	4770      	bx	lr
 80187c6:	2a2f      	cmp	r2, #47	; 0x2f
 80187c8:	d024      	beq.n	8018814 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 80187ca:	d80d      	bhi.n	80187e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 80187cc:	2a2d      	cmp	r2, #45	; 0x2d
 80187ce:	d014      	beq.n	80187fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 80187d0:	d826      	bhi.n	8018820 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 80187d2:	2a2c      	cmp	r2, #44	; 0x2c
 80187d4:	d1a4      	bne.n	8018720 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80187d6:	684b      	ldr	r3, [r1, #4]
 80187d8:	781b      	ldrb	r3, [r3, #0]
 80187da:	2b01      	cmp	r3, #1
 80187dc:	d018      	beq.n	8018810 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 80187de:	d324      	bcc.n	801882a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 80187e0:	2b02      	cmp	r3, #2
 80187e2:	d19d      	bne.n	8018720 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80187e4:	68c0      	ldr	r0, [r0, #12]
 80187e6:	4770      	bx	lr
 80187e8:	2a31      	cmp	r2, #49	; 0x31
 80187ea:	d004      	beq.n	80187f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 80187ec:	d327      	bcc.n	801883e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80187ee:	2a32      	cmp	r2, #50	; 0x32
 80187f0:	d025      	beq.n	801883e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80187f2:	2a33      	cmp	r2, #51	; 0x33
 80187f4:	d194      	bne.n	8018720 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80187f6:	6f40      	ldr	r0, [r0, #116]	; 0x74
 80187f8:	4770      	bx	lr
 80187fa:	684b      	ldr	r3, [r1, #4]
 80187fc:	781b      	ldrb	r3, [r3, #0]
 80187fe:	2b01      	cmp	r3, #1
 8018800:	d004      	beq.n	801880c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8018802:	d30b      	bcc.n	801881c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8018804:	2b02      	cmp	r3, #2
 8018806:	d18b      	bne.n	8018720 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018808:	6940      	ldr	r0, [r0, #20]
 801880a:	4770      	bx	lr
 801880c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801880e:	4770      	bx	lr
 8018810:	69c0      	ldr	r0, [r0, #28]
 8018812:	4770      	bx	lr
 8018814:	684b      	ldr	r3, [r1, #4]
 8018816:	781b      	ldrb	r3, [r3, #0]
 8018818:	2b00      	cmp	r3, #0
 801881a:	d181      	bne.n	8018720 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801881c:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801881e:	4770      	bx	lr
 8018820:	684b      	ldr	r3, [r1, #4]
 8018822:	781b      	ldrb	r3, [r3, #0]
 8018824:	2b00      	cmp	r3, #0
 8018826:	f47f af7b 	bne.w	8018720 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801882a:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801882c:	4770      	bx	lr
 801882e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8018830:	4770      	bx	lr
 8018832:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8018834:	4770      	bx	lr
 8018836:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8018838:	4770      	bx	lr
 801883a:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801883c:	4770      	bx	lr
 801883e:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8018840:	4770      	bx	lr

08018842 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018842:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018846:	b087      	sub	sp, #28
 8018848:	9815      	ldr	r0, [sp, #84]	; 0x54
 801884a:	9205      	str	r2, [sp, #20]
 801884c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018850:	9202      	str	r2, [sp, #8]
 8018852:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8018856:	9101      	str	r1, [sp, #4]
 8018858:	6841      	ldr	r1, [r0, #4]
 801885a:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801885e:	fb01 2404 	mla	r4, r1, r4, r2
 8018862:	6802      	ldr	r2, [r0, #0]
 8018864:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018868:	f8de 2000 	ldr.w	r2, [lr]
 801886c:	9203      	str	r2, [sp, #12]
 801886e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8018872:	3204      	adds	r2, #4
 8018874:	9204      	str	r2, [sp, #16]
 8018876:	9a02      	ldr	r2, [sp, #8]
 8018878:	43d6      	mvns	r6, r2
 801887a:	b2f6      	uxtb	r6, r6
 801887c:	9a01      	ldr	r2, [sp, #4]
 801887e:	2a00      	cmp	r2, #0
 8018880:	dc03      	bgt.n	801888a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8018882:	9a05      	ldr	r2, [sp, #20]
 8018884:	2a00      	cmp	r2, #0
 8018886:	f340 8129 	ble.w	8018adc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801888a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801888c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8018890:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8018894:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018898:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801889a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801889e:	2b00      	cmp	r3, #0
 80188a0:	dd0e      	ble.n	80188c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80188a2:	1408      	asrs	r0, r1, #16
 80188a4:	d405      	bmi.n	80188b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80188a6:	4560      	cmp	r0, ip
 80188a8:	da03      	bge.n	80188b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80188aa:	1410      	asrs	r0, r2, #16
 80188ac:	d401      	bmi.n	80188b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80188ae:	42b8      	cmp	r0, r7
 80188b0:	db07      	blt.n	80188c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80188b2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80188b4:	4401      	add	r1, r0
 80188b6:	9814      	ldr	r0, [sp, #80]	; 0x50
 80188b8:	3b01      	subs	r3, #1
 80188ba:	4402      	add	r2, r0
 80188bc:	3402      	adds	r4, #2
 80188be:	e7ee      	b.n	801889e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80188c0:	d071      	beq.n	80189a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80188c2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80188c4:	1e58      	subs	r0, r3, #1
 80188c6:	fb05 1500 	mla	r5, r5, r0, r1
 80188ca:	142d      	asrs	r5, r5, #16
 80188cc:	d45f      	bmi.n	801898e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80188ce:	4565      	cmp	r5, ip
 80188d0:	da5d      	bge.n	801898e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80188d2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80188d4:	fb05 2000 	mla	r0, r5, r0, r2
 80188d8:	1400      	asrs	r0, r0, #16
 80188da:	d458      	bmi.n	801898e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80188dc:	42b8      	cmp	r0, r7
 80188de:	da56      	bge.n	801898e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80188e0:	f8bd b008 	ldrh.w	fp, [sp, #8]
 80188e4:	4699      	mov	r9, r3
 80188e6:	46a2      	mov	sl, r4
 80188e8:	f1b9 0f00 	cmp.w	r9, #0
 80188ec:	dd57      	ble.n	801899e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80188ee:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80188f2:	9803      	ldr	r0, [sp, #12]
 80188f4:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80188f8:	140d      	asrs	r5, r1, #16
 80188fa:	fb07 000c 	mla	r0, r7, ip, r0
 80188fe:	f109 39ff 	add.w	r9, r9, #4294967295
 8018902:	5d40      	ldrb	r0, [r0, r5]
 8018904:	9d04      	ldr	r5, [sp, #16]
 8018906:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801890a:	f8ba 5000 	ldrh.w	r5, [sl]
 801890e:	122f      	asrs	r7, r5, #8
 8018910:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018914:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018918:	fb17 f706 	smulbb	r7, r7, r6
 801891c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8018920:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018924:	00ed      	lsls	r5, r5, #3
 8018926:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801892a:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801892e:	10c7      	asrs	r7, r0, #3
 8018930:	b2ed      	uxtb	r5, r5
 8018932:	00c0      	lsls	r0, r0, #3
 8018934:	fb18 f806 	smulbb	r8, r8, r6
 8018938:	fb15 f506 	smulbb	r5, r5, r6
 801893c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018940:	b2c0      	uxtb	r0, r0
 8018942:	fa1f fc8c 	uxth.w	ip, ip
 8018946:	fb07 870b 	mla	r7, r7, fp, r8
 801894a:	fb00 500b 	mla	r0, r0, fp, r5
 801894e:	b280      	uxth	r0, r0
 8018950:	b2bf      	uxth	r7, r7
 8018952:	f10c 0501 	add.w	r5, ip, #1
 8018956:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801895a:	f107 0801 	add.w	r8, r7, #1
 801895e:	1c45      	adds	r5, r0, #1
 8018960:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018964:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8018968:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801896a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801896e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018972:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018976:	ea45 0c0c 	orr.w	ip, r5, ip
 801897a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801897e:	4401      	add	r1, r0
 8018980:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018982:	ea4c 0c08 	orr.w	ip, ip, r8
 8018986:	f82a cb02 	strh.w	ip, [sl], #2
 801898a:	4402      	add	r2, r0
 801898c:	e7ac      	b.n	80188e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801898e:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8018992:	f04f 0800 	mov.w	r8, #0
 8018996:	eb03 0008 	add.w	r0, r3, r8
 801899a:	2800      	cmp	r0, #0
 801899c:	dc41      	bgt.n	8018a22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801899e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80189a2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80189a6:	9b01      	ldr	r3, [sp, #4]
 80189a8:	2b00      	cmp	r3, #0
 80189aa:	f340 8097 	ble.w	8018adc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80189ae:	ee30 0a04 	vadd.f32	s0, s0, s8
 80189b2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80189b6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80189ba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80189bc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80189c0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80189c4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80189c8:	eef0 6a62 	vmov.f32	s13, s5
 80189cc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80189d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80189d4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80189d8:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80189dc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80189e0:	eef0 6a43 	vmov.f32	s13, s6
 80189e4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80189e8:	ee12 2a90 	vmov	r2, s5
 80189ec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80189f0:	fb92 f3f3 	sdiv	r3, r2, r3
 80189f4:	ee13 2a10 	vmov	r2, s6
 80189f8:	9313      	str	r3, [sp, #76]	; 0x4c
 80189fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80189fc:	fb92 f3f3 	sdiv	r3, r2, r3
 8018a00:	9314      	str	r3, [sp, #80]	; 0x50
 8018a02:	9b01      	ldr	r3, [sp, #4]
 8018a04:	9a05      	ldr	r2, [sp, #20]
 8018a06:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018a0a:	3b01      	subs	r3, #1
 8018a0c:	9301      	str	r3, [sp, #4]
 8018a0e:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8018a12:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018a14:	eeb0 3a67 	vmov.f32	s6, s15
 8018a18:	bf08      	it	eq
 8018a1a:	4613      	moveq	r3, r2
 8018a1c:	eef0 2a47 	vmov.f32	s5, s14
 8018a20:	e72c      	b.n	801887c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8018a22:	140f      	asrs	r7, r1, #16
 8018a24:	d453      	bmi.n	8018ace <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018a26:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018a2a:	42bd      	cmp	r5, r7
 8018a2c:	dd4f      	ble.n	8018ace <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018a2e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8018a32:	d44c      	bmi.n	8018ace <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018a34:	f8de 000c 	ldr.w	r0, [lr, #12]
 8018a38:	4560      	cmp	r0, ip
 8018a3a:	dd48      	ble.n	8018ace <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018a3c:	9803      	ldr	r0, [sp, #12]
 8018a3e:	b22d      	sxth	r5, r5
 8018a40:	fb0c 0505 	mla	r5, ip, r5, r0
 8018a44:	5de8      	ldrb	r0, [r5, r7]
 8018a46:	9d04      	ldr	r5, [sp, #16]
 8018a48:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018a4c:	f06f 0501 	mvn.w	r5, #1
 8018a50:	fb05 fb08 	mul.w	fp, r5, r8
 8018a54:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018a58:	f834 500b 	ldrh.w	r5, [r4, fp]
 8018a5c:	122f      	asrs	r7, r5, #8
 8018a5e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018a62:	fb17 f706 	smulbb	r7, r7, r6
 8018a66:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018a6a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018a6e:	00ed      	lsls	r5, r5, #3
 8018a70:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8018a74:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8018a78:	10c7      	asrs	r7, r0, #3
 8018a7a:	b2ed      	uxtb	r5, r5
 8018a7c:	00c0      	lsls	r0, r0, #3
 8018a7e:	fb19 f906 	smulbb	r9, r9, r6
 8018a82:	fb15 f506 	smulbb	r5, r5, r6
 8018a86:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018a8a:	b2c0      	uxtb	r0, r0
 8018a8c:	fa1f fc8c 	uxth.w	ip, ip
 8018a90:	fb07 970a 	mla	r7, r7, sl, r9
 8018a94:	fb00 500a 	mla	r0, r0, sl, r5
 8018a98:	b2bf      	uxth	r7, r7
 8018a9a:	b280      	uxth	r0, r0
 8018a9c:	f10c 0501 	add.w	r5, ip, #1
 8018aa0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018aa4:	f107 0901 	add.w	r9, r7, #1
 8018aa8:	1c45      	adds	r5, r0, #1
 8018aaa:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018aae:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8018ab2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018ab6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018aba:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018abe:	ea45 0c0c 	orr.w	ip, r5, ip
 8018ac2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018ac6:	ea4c 0c09 	orr.w	ip, ip, r9
 8018aca:	f824 c00b 	strh.w	ip, [r4, fp]
 8018ace:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018ad0:	4401      	add	r1, r0
 8018ad2:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018ad4:	f108 38ff 	add.w	r8, r8, #4294967295
 8018ad8:	4402      	add	r2, r0
 8018ada:	e75c      	b.n	8018996 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8018adc:	b007      	add	sp, #28
 8018ade:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018ae2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018ae2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ae6:	b085      	sub	sp, #20
 8018ae8:	4693      	mov	fp, r2
 8018aea:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018aec:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8018aee:	6870      	ldr	r0, [r6, #4]
 8018af0:	9100      	str	r1, [sp, #0]
 8018af2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018af6:	fb00 2404 	mla	r4, r0, r4, r2
 8018afa:	6832      	ldr	r2, [r6, #0]
 8018afc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018b00:	682a      	ldr	r2, [r5, #0]
 8018b02:	9201      	str	r2, [sp, #4]
 8018b04:	686a      	ldr	r2, [r5, #4]
 8018b06:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8018b0a:	3204      	adds	r2, #4
 8018b0c:	9202      	str	r2, [sp, #8]
 8018b0e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018b12:	9a00      	ldr	r2, [sp, #0]
 8018b14:	2a00      	cmp	r2, #0
 8018b16:	dc03      	bgt.n	8018b20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018b18:	f1bb 0f00 	cmp.w	fp, #0
 8018b1c:	f340 80a0 	ble.w	8018c60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8018b20:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018b22:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018b26:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018b2a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018b2e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018b30:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018b34:	2b00      	cmp	r3, #0
 8018b36:	dd0c      	ble.n	8018b52 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018b38:	1406      	asrs	r6, r0, #16
 8018b3a:	d405      	bmi.n	8018b48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018b3c:	454e      	cmp	r6, r9
 8018b3e:	da03      	bge.n	8018b48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018b40:	1416      	asrs	r6, r2, #16
 8018b42:	d401      	bmi.n	8018b48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018b44:	4546      	cmp	r6, r8
 8018b46:	db05      	blt.n	8018b54 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018b48:	4470      	add	r0, lr
 8018b4a:	4462      	add	r2, ip
 8018b4c:	3b01      	subs	r3, #1
 8018b4e:	3402      	adds	r4, #2
 8018b50:	e7f0      	b.n	8018b34 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018b52:	d00f      	beq.n	8018b74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018b54:	1e5e      	subs	r6, r3, #1
 8018b56:	fb0e 0706 	mla	r7, lr, r6, r0
 8018b5a:	143f      	asrs	r7, r7, #16
 8018b5c:	d541      	bpl.n	8018be2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8018b5e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8018b62:	4698      	mov	r8, r3
 8018b64:	9603      	str	r6, [sp, #12]
 8018b66:	f1b8 0f00 	cmp.w	r8, #0
 8018b6a:	dc59      	bgt.n	8018c20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018b6c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018b70:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018b74:	9b00      	ldr	r3, [sp, #0]
 8018b76:	2b00      	cmp	r3, #0
 8018b78:	dd72      	ble.n	8018c60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8018b7a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018b7e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018b82:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018b86:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018b88:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018b8c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018b90:	eeb0 6a62 	vmov.f32	s12, s5
 8018b94:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018b98:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018b9c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018ba0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8018ba4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018ba8:	eeb0 6a43 	vmov.f32	s12, s6
 8018bac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018bb0:	ee12 2a90 	vmov	r2, s5
 8018bb4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018bb8:	fb92 fef3 	sdiv	lr, r2, r3
 8018bbc:	ee13 2a10 	vmov	r2, s6
 8018bc0:	fb92 fcf3 	sdiv	ip, r2, r3
 8018bc4:	9b00      	ldr	r3, [sp, #0]
 8018bc6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018bca:	3b01      	subs	r3, #1
 8018bcc:	9300      	str	r3, [sp, #0]
 8018bce:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8018bd2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018bd4:	eeb0 3a67 	vmov.f32	s6, s15
 8018bd8:	bf08      	it	eq
 8018bda:	465b      	moveq	r3, fp
 8018bdc:	eef0 2a47 	vmov.f32	s5, s14
 8018be0:	e797      	b.n	8018b12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8018be2:	454f      	cmp	r7, r9
 8018be4:	dabb      	bge.n	8018b5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018be6:	fb0c 2606 	mla	r6, ip, r6, r2
 8018bea:	1436      	asrs	r6, r6, #16
 8018bec:	d4b7      	bmi.n	8018b5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018bee:	4546      	cmp	r6, r8
 8018bf0:	dab5      	bge.n	8018b5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018bf2:	461e      	mov	r6, r3
 8018bf4:	46a0      	mov	r8, r4
 8018bf6:	2e00      	cmp	r6, #0
 8018bf8:	ddb8      	ble.n	8018b6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018bfa:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8018bfe:	9901      	ldr	r1, [sp, #4]
 8018c00:	1417      	asrs	r7, r2, #16
 8018c02:	ea4f 4920 	mov.w	r9, r0, asr #16
 8018c06:	fb0a 1707 	mla	r7, sl, r7, r1
 8018c0a:	9902      	ldr	r1, [sp, #8]
 8018c0c:	f817 7009 	ldrb.w	r7, [r7, r9]
 8018c10:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8018c14:	f828 7b02 	strh.w	r7, [r8], #2
 8018c18:	4470      	add	r0, lr
 8018c1a:	4462      	add	r2, ip
 8018c1c:	3e01      	subs	r6, #1
 8018c1e:	e7ea      	b.n	8018bf6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8018c20:	ea5f 4920 	movs.w	r9, r0, asr #16
 8018c24:	d417      	bmi.n	8018c56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018c26:	68ae      	ldr	r6, [r5, #8]
 8018c28:	454e      	cmp	r6, r9
 8018c2a:	dd14      	ble.n	8018c56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018c2c:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8018c30:	d411      	bmi.n	8018c56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018c32:	68ef      	ldr	r7, [r5, #12]
 8018c34:	4557      	cmp	r7, sl
 8018c36:	dd0e      	ble.n	8018c56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018c38:	9f01      	ldr	r7, [sp, #4]
 8018c3a:	b236      	sxth	r6, r6
 8018c3c:	fb0a 7606 	mla	r6, sl, r6, r7
 8018c40:	9f02      	ldr	r7, [sp, #8]
 8018c42:	f816 6009 	ldrb.w	r6, [r6, r9]
 8018c46:	f06f 0101 	mvn.w	r1, #1
 8018c4a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8018c4e:	fb01 f608 	mul.w	r6, r1, r8
 8018c52:	9903      	ldr	r1, [sp, #12]
 8018c54:	538f      	strh	r7, [r1, r6]
 8018c56:	4470      	add	r0, lr
 8018c58:	4462      	add	r2, ip
 8018c5a:	f108 38ff 	add.w	r8, r8, #4294967295
 8018c5e:	e782      	b.n	8018b66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018c60:	b005      	add	sp, #20
 8018c62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018c66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018c66:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018c6a:	b087      	sub	sp, #28
 8018c6c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018c6e:	9205      	str	r2, [sp, #20]
 8018c70:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018c74:	9203      	str	r2, [sp, #12]
 8018c76:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8018c7a:	9102      	str	r1, [sp, #8]
 8018c7c:	6861      	ldr	r1, [r4, #4]
 8018c7e:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8018c82:	fb01 2000 	mla	r0, r1, r0, r2
 8018c86:	6822      	ldr	r2, [r4, #0]
 8018c88:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8018c8c:	9200      	str	r2, [sp, #0]
 8018c8e:	f8dc 2000 	ldr.w	r2, [ip]
 8018c92:	9204      	str	r2, [sp, #16]
 8018c94:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8018c98:	3204      	adds	r2, #4
 8018c9a:	9201      	str	r2, [sp, #4]
 8018c9c:	9a03      	ldr	r2, [sp, #12]
 8018c9e:	43d5      	mvns	r5, r2
 8018ca0:	b2ed      	uxtb	r5, r5
 8018ca2:	9a02      	ldr	r2, [sp, #8]
 8018ca4:	2a00      	cmp	r2, #0
 8018ca6:	dc03      	bgt.n	8018cb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8018ca8:	9a05      	ldr	r2, [sp, #20]
 8018caa:	2a00      	cmp	r2, #0
 8018cac:	f340 812c 	ble.w	8018f08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8018cb0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018cb2:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8018cb6:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8018cba:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018cbe:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018cc0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018cc4:	2b00      	cmp	r3, #0
 8018cc6:	dd10      	ble.n	8018cea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018cc8:	140c      	asrs	r4, r1, #16
 8018cca:	d405      	bmi.n	8018cd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018ccc:	4574      	cmp	r4, lr
 8018cce:	da03      	bge.n	8018cd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018cd0:	1414      	asrs	r4, r2, #16
 8018cd2:	d401      	bmi.n	8018cd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018cd4:	42bc      	cmp	r4, r7
 8018cd6:	db09      	blt.n	8018cec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8018cd8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018cda:	9800      	ldr	r0, [sp, #0]
 8018cdc:	4421      	add	r1, r4
 8018cde:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018ce0:	3002      	adds	r0, #2
 8018ce2:	4422      	add	r2, r4
 8018ce4:	3b01      	subs	r3, #1
 8018ce6:	9000      	str	r0, [sp, #0]
 8018ce8:	e7ec      	b.n	8018cc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8018cea:	d071      	beq.n	8018dd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8018cec:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018cee:	1e5c      	subs	r4, r3, #1
 8018cf0:	fb06 1604 	mla	r6, r6, r4, r1
 8018cf4:	1436      	asrs	r6, r6, #16
 8018cf6:	d45d      	bmi.n	8018db4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018cf8:	4576      	cmp	r6, lr
 8018cfa:	da5b      	bge.n	8018db4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018cfc:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8018cfe:	fb06 2404 	mla	r4, r6, r4, r2
 8018d02:	1424      	asrs	r4, r4, #16
 8018d04:	d456      	bmi.n	8018db4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018d06:	42bc      	cmp	r4, r7
 8018d08:	da54      	bge.n	8018db4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018d0a:	f8dd 9000 	ldr.w	r9, [sp]
 8018d0e:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8018d12:	4698      	mov	r8, r3
 8018d14:	f1b8 0f00 	cmp.w	r8, #0
 8018d18:	dd54      	ble.n	8018dc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8018d1a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8018d1e:	9804      	ldr	r0, [sp, #16]
 8018d20:	1414      	asrs	r4, r2, #16
 8018d22:	fb07 0404 	mla	r4, r7, r4, r0
 8018d26:	140e      	asrs	r6, r1, #16
 8018d28:	9801      	ldr	r0, [sp, #4]
 8018d2a:	f814 e006 	ldrb.w	lr, [r4, r6]
 8018d2e:	f8b9 4000 	ldrh.w	r4, [r9]
 8018d32:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018d36:	eb00 0b0e 	add.w	fp, r0, lr
 8018d3a:	1227      	asrs	r7, r4, #8
 8018d3c:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8018d40:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018d44:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8018d48:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018d4a:	fb16 f60a 	smulbb	r6, r6, sl
 8018d4e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018d52:	fb07 6705 	mla	r7, r7, r5, r6
 8018d56:	10e6      	asrs	r6, r4, #3
 8018d58:	00e4      	lsls	r4, r4, #3
 8018d5a:	b2e4      	uxtb	r4, r4
 8018d5c:	fb1b fb0a 	smulbb	fp, fp, sl
 8018d60:	fb14 f405 	smulbb	r4, r4, r5
 8018d64:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018d68:	b2bf      	uxth	r7, r7
 8018d6a:	fb06 b605 	mla	r6, r6, r5, fp
 8018d6e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8018d72:	b2b6      	uxth	r6, r6
 8018d74:	fa1f fe8e 	uxth.w	lr, lr
 8018d78:	1c7c      	adds	r4, r7, #1
 8018d7a:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8018d7e:	f106 0b01 	add.w	fp, r6, #1
 8018d82:	f10e 0401 	add.w	r4, lr, #1
 8018d86:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8018d8a:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8018d8e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018d92:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8018d96:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8018d9a:	4327      	orrs	r7, r4
 8018d9c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018da0:	4401      	add	r1, r0
 8018da2:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018da4:	ea47 070b 	orr.w	r7, r7, fp
 8018da8:	f829 7b02 	strh.w	r7, [r9], #2
 8018dac:	4402      	add	r2, r0
 8018dae:	f108 38ff 	add.w	r8, r8, #4294967295
 8018db2:	e7af      	b.n	8018d14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8018db4:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8018db8:	f04f 0e00 	mov.w	lr, #0
 8018dbc:	eb03 040e 	add.w	r4, r3, lr
 8018dc0:	2c00      	cmp	r4, #0
 8018dc2:	dc43      	bgt.n	8018e4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8018dc4:	9a00      	ldr	r2, [sp, #0]
 8018dc6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018dca:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018dce:	9300      	str	r3, [sp, #0]
 8018dd0:	9b02      	ldr	r3, [sp, #8]
 8018dd2:	2b00      	cmp	r3, #0
 8018dd4:	f340 8098 	ble.w	8018f08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8018dd8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018ddc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018de0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018de4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018de6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018dea:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018dee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018df2:	eef0 6a62 	vmov.f32	s13, s5
 8018df6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018dfa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018dfe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018e02:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8018e06:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018e0a:	eef0 6a43 	vmov.f32	s13, s6
 8018e0e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018e12:	ee12 2a90 	vmov	r2, s5
 8018e16:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018e1a:	fb92 f3f3 	sdiv	r3, r2, r3
 8018e1e:	ee13 2a10 	vmov	r2, s6
 8018e22:	9313      	str	r3, [sp, #76]	; 0x4c
 8018e24:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018e26:	fb92 f3f3 	sdiv	r3, r2, r3
 8018e2a:	9314      	str	r3, [sp, #80]	; 0x50
 8018e2c:	9b02      	ldr	r3, [sp, #8]
 8018e2e:	9a05      	ldr	r2, [sp, #20]
 8018e30:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018e34:	3b01      	subs	r3, #1
 8018e36:	9302      	str	r3, [sp, #8]
 8018e38:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8018e3c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018e3e:	eeb0 3a67 	vmov.f32	s6, s15
 8018e42:	bf08      	it	eq
 8018e44:	4613      	moveq	r3, r2
 8018e46:	eef0 2a47 	vmov.f32	s5, s14
 8018e4a:	e72a      	b.n	8018ca2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018e4c:	140f      	asrs	r7, r1, #16
 8018e4e:	d454      	bmi.n	8018efa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018e50:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8018e54:	42be      	cmp	r6, r7
 8018e56:	dd50      	ble.n	8018efa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018e58:	ea5f 4822 	movs.w	r8, r2, asr #16
 8018e5c:	d44d      	bmi.n	8018efa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018e5e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8018e62:	4544      	cmp	r4, r8
 8018e64:	dd49      	ble.n	8018efa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018e66:	9c04      	ldr	r4, [sp, #16]
 8018e68:	b236      	sxth	r6, r6
 8018e6a:	fb08 4606 	mla	r6, r8, r6, r4
 8018e6e:	f06f 0001 	mvn.w	r0, #1
 8018e72:	f816 8007 	ldrb.w	r8, [r6, r7]
 8018e76:	9c01      	ldr	r4, [sp, #4]
 8018e78:	fb00 fa0e 	mul.w	sl, r0, lr
 8018e7c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8018e80:	9800      	ldr	r0, [sp, #0]
 8018e82:	eb04 0b08 	add.w	fp, r4, r8
 8018e86:	f830 400a 	ldrh.w	r4, [r0, sl]
 8018e8a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8018e8e:	9801      	ldr	r0, [sp, #4]
 8018e90:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018e94:	f810 8008 	ldrb.w	r8, [r0, r8]
 8018e98:	9800      	ldr	r0, [sp, #0]
 8018e9a:	1227      	asrs	r7, r4, #8
 8018e9c:	fb16 f609 	smulbb	r6, r6, r9
 8018ea0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018ea4:	fb07 6705 	mla	r7, r7, r5, r6
 8018ea8:	10e6      	asrs	r6, r4, #3
 8018eaa:	00e4      	lsls	r4, r4, #3
 8018eac:	b2e4      	uxtb	r4, r4
 8018eae:	fb1b fb09 	smulbb	fp, fp, r9
 8018eb2:	fb14 f405 	smulbb	r4, r4, r5
 8018eb6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018eba:	b2bf      	uxth	r7, r7
 8018ebc:	fb06 b605 	mla	r6, r6, r5, fp
 8018ec0:	fb08 4809 	mla	r8, r8, r9, r4
 8018ec4:	b2b6      	uxth	r6, r6
 8018ec6:	fa1f f888 	uxth.w	r8, r8
 8018eca:	1c7c      	adds	r4, r7, #1
 8018ecc:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8018ed0:	f106 0b01 	add.w	fp, r6, #1
 8018ed4:	f108 0401 	add.w	r4, r8, #1
 8018ed8:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8018edc:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8018ee0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018ee4:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8018ee8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8018eec:	4327      	orrs	r7, r4
 8018eee:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018ef2:	ea47 070b 	orr.w	r7, r7, fp
 8018ef6:	f820 700a 	strh.w	r7, [r0, sl]
 8018efa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018efc:	4401      	add	r1, r0
 8018efe:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018f00:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018f04:	4402      	add	r2, r0
 8018f06:	e759      	b.n	8018dbc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8018f08:	b007      	add	sp, #28
 8018f0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08018f10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018f10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018f14:	b085      	sub	sp, #20
 8018f16:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018f1a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018f1c:	9203      	str	r2, [sp, #12]
 8018f1e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018f22:	6870      	ldr	r0, [r6, #4]
 8018f24:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8018f26:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8018f2a:	686f      	ldr	r7, [r5, #4]
 8018f2c:	9101      	str	r1, [sp, #4]
 8018f2e:	fb00 2404 	mla	r4, r0, r4, r2
 8018f32:	6832      	ldr	r2, [r6, #0]
 8018f34:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018f38:	682a      	ldr	r2, [r5, #0]
 8018f3a:	9202      	str	r2, [sp, #8]
 8018f3c:	3704      	adds	r7, #4
 8018f3e:	9a01      	ldr	r2, [sp, #4]
 8018f40:	2a00      	cmp	r2, #0
 8018f42:	dc03      	bgt.n	8018f4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018f44:	9a03      	ldr	r2, [sp, #12]
 8018f46:	2a00      	cmp	r2, #0
 8018f48:	f340 80cc 	ble.w	80190e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8018f4c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018f4e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018f52:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018f56:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018f5a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018f5c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018f60:	2b00      	cmp	r3, #0
 8018f62:	dd0d      	ble.n	8018f80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018f64:	1406      	asrs	r6, r0, #16
 8018f66:	d405      	bmi.n	8018f74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018f68:	454e      	cmp	r6, r9
 8018f6a:	da03      	bge.n	8018f74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018f6c:	1416      	asrs	r6, r2, #16
 8018f6e:	d401      	bmi.n	8018f74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018f70:	4546      	cmp	r6, r8
 8018f72:	db06      	blt.n	8018f82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018f74:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8018f76:	4460      	add	r0, ip
 8018f78:	4432      	add	r2, r6
 8018f7a:	3b01      	subs	r3, #1
 8018f7c:	3402      	adds	r4, #2
 8018f7e:	e7ef      	b.n	8018f60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8018f80:	d00f      	beq.n	8018fa2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018f82:	1e5e      	subs	r6, r3, #1
 8018f84:	fb0c 0e06 	mla	lr, ip, r6, r0
 8018f88:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8018f8c:	d543      	bpl.n	8019016 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8018f8e:	4698      	mov	r8, r3
 8018f90:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8018f94:	f1b8 0f00 	cmp.w	r8, #0
 8018f98:	dc71      	bgt.n	801907e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8018f9a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018f9e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018fa2:	9b01      	ldr	r3, [sp, #4]
 8018fa4:	2b00      	cmp	r3, #0
 8018fa6:	f340 809d 	ble.w	80190e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8018faa:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018fae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018fb2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018fb6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018fb8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018fbc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018fc0:	eeb0 6a62 	vmov.f32	s12, s5
 8018fc4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018fc8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018fcc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018fd0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8018fd4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018fd8:	eeb0 6a43 	vmov.f32	s12, s6
 8018fdc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018fe0:	ee12 2a90 	vmov	r2, s5
 8018fe4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018fe8:	fb92 fcf3 	sdiv	ip, r2, r3
 8018fec:	ee13 2a10 	vmov	r2, s6
 8018ff0:	fb92 f3f3 	sdiv	r3, r2, r3
 8018ff4:	9312      	str	r3, [sp, #72]	; 0x48
 8018ff6:	9b01      	ldr	r3, [sp, #4]
 8018ff8:	9a03      	ldr	r2, [sp, #12]
 8018ffa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018ffe:	3b01      	subs	r3, #1
 8019000:	9301      	str	r3, [sp, #4]
 8019002:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019006:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019008:	eeb0 3a67 	vmov.f32	s6, s15
 801900c:	bf08      	it	eq
 801900e:	4613      	moveq	r3, r2
 8019010:	eef0 2a47 	vmov.f32	s5, s14
 8019014:	e793      	b.n	8018f3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8019016:	45ce      	cmp	lr, r9
 8019018:	dab9      	bge.n	8018f8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801901a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801901c:	fb01 2606 	mla	r6, r1, r6, r2
 8019020:	1436      	asrs	r6, r6, #16
 8019022:	d4b4      	bmi.n	8018f8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019024:	4546      	cmp	r6, r8
 8019026:	dab2      	bge.n	8018f8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019028:	4698      	mov	r8, r3
 801902a:	46a2      	mov	sl, r4
 801902c:	f1b8 0f00 	cmp.w	r8, #0
 8019030:	ddb3      	ble.n	8018f9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019032:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019036:	9902      	ldr	r1, [sp, #8]
 8019038:	1416      	asrs	r6, r2, #16
 801903a:	fb09 1606 	mla	r6, r9, r6, r1
 801903e:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8019042:	492a      	ldr	r1, [pc, #168]	; (80190ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8019044:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8019048:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801904c:	eb07 0b0e 	add.w	fp, r7, lr
 8019050:	4460      	add	r0, ip
 8019052:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8019056:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801905a:	00f6      	lsls	r6, r6, #3
 801905c:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8019060:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019064:	ea49 0606 	orr.w	r6, r9, r6
 8019068:	f817 900e 	ldrb.w	r9, [r7, lr]
 801906c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801906e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8019072:	f82a 6b02 	strh.w	r6, [sl], #2
 8019076:	440a      	add	r2, r1
 8019078:	f108 38ff 	add.w	r8, r8, #4294967295
 801907c:	e7d6      	b.n	801902c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801907e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019082:	d429      	bmi.n	80190d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019084:	68ae      	ldr	r6, [r5, #8]
 8019086:	454e      	cmp	r6, r9
 8019088:	dd26      	ble.n	80190d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801908a:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801908e:	d423      	bmi.n	80190d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019090:	68e9      	ldr	r1, [r5, #12]
 8019092:	4559      	cmp	r1, fp
 8019094:	dd20      	ble.n	80190d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019096:	9902      	ldr	r1, [sp, #8]
 8019098:	fa0f fe86 	sxth.w	lr, r6
 801909c:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80190a0:	f06f 0101 	mvn.w	r1, #1
 80190a4:	f81e e009 	ldrb.w	lr, [lr, r9]
 80190a8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80190ac:	eb07 060e 	add.w	r6, r7, lr
 80190b0:	fb01 f908 	mul.w	r9, r1, r8
 80190b4:	f896 b002 	ldrb.w	fp, [r6, #2]
 80190b8:	7876      	ldrb	r6, [r6, #1]
 80190ba:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 80190be:	00f6      	lsls	r6, r6, #3
 80190c0:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80190c4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80190c8:	ea4b 0606 	orr.w	r6, fp, r6
 80190cc:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80190d0:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 80190d4:	f82a 6009 	strh.w	r6, [sl, r9]
 80190d8:	9912      	ldr	r1, [sp, #72]	; 0x48
 80190da:	4460      	add	r0, ip
 80190dc:	440a      	add	r2, r1
 80190de:	f108 38ff 	add.w	r8, r8, #4294967295
 80190e2:	e757      	b.n	8018f94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80190e4:	b005      	add	sp, #20
 80190e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80190ea:	bf00      	nop
 80190ec:	fffff800 	.word	0xfffff800

080190f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80190f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80190f4:	b087      	sub	sp, #28
 80190f6:	468b      	mov	fp, r1
 80190f8:	9815      	ldr	r0, [sp, #84]	; 0x54
 80190fa:	9204      	str	r2, [sp, #16]
 80190fc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019100:	9205      	str	r2, [sp, #20]
 8019102:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8019106:	6841      	ldr	r1, [r0, #4]
 8019108:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801910c:	fb01 2404 	mla	r4, r1, r4, r2
 8019110:	6802      	ldr	r2, [r0, #0]
 8019112:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019116:	f8dc 2000 	ldr.w	r2, [ip]
 801911a:	9201      	str	r2, [sp, #4]
 801911c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8019120:	3204      	adds	r2, #4
 8019122:	9202      	str	r2, [sp, #8]
 8019124:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019128:	f1bb 0f00 	cmp.w	fp, #0
 801912c:	dc03      	bgt.n	8019136 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801912e:	9a04      	ldr	r2, [sp, #16]
 8019130:	2a00      	cmp	r2, #0
 8019132:	f340 8138 	ble.w	80193a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8019136:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019138:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801913c:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8019140:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019144:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019146:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801914a:	2b00      	cmp	r3, #0
 801914c:	dd0e      	ble.n	801916c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801914e:	1402      	asrs	r2, r0, #16
 8019150:	d405      	bmi.n	801915e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019152:	42ba      	cmp	r2, r7
 8019154:	da03      	bge.n	801915e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019156:	140a      	asrs	r2, r1, #16
 8019158:	d401      	bmi.n	801915e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801915a:	42b2      	cmp	r2, r6
 801915c:	db07      	blt.n	801916e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801915e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019160:	4410      	add	r0, r2
 8019162:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019164:	3b01      	subs	r3, #1
 8019166:	4411      	add	r1, r2
 8019168:	3402      	adds	r4, #2
 801916a:	e7ee      	b.n	801914a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801916c:	d019      	beq.n	80191a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801916e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019170:	1e5a      	subs	r2, r3, #1
 8019172:	fb05 0502 	mla	r5, r5, r2, r0
 8019176:	142d      	asrs	r5, r5, #16
 8019178:	d409      	bmi.n	801918e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801917a:	42bd      	cmp	r5, r7
 801917c:	da07      	bge.n	801918e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801917e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019180:	fb05 1202 	mla	r2, r5, r2, r1
 8019184:	1412      	asrs	r2, r2, #16
 8019186:	d402      	bmi.n	801918e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019188:	42b2      	cmp	r2, r6
 801918a:	f2c0 80ac 	blt.w	80192e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801918e:	f04f 0e00 	mov.w	lr, #0
 8019192:	eb03 020e 	add.w	r2, r3, lr
 8019196:	2a00      	cmp	r2, #0
 8019198:	dc3e      	bgt.n	8019218 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801919a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801919e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80191a2:	f1bb 0f00 	cmp.w	fp, #0
 80191a6:	f340 80fe 	ble.w	80193a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80191aa:	ee30 0a04 	vadd.f32	s0, s0, s8
 80191ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80191b2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80191b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80191b8:	f1bb 0b01 	subs.w	fp, fp, #1
 80191bc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80191c0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80191c4:	eeb0 6a62 	vmov.f32	s12, s5
 80191c8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80191cc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80191d0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80191d4:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80191d8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80191dc:	eeb0 6a43 	vmov.f32	s12, s6
 80191e0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80191e4:	ee12 2a90 	vmov	r2, s5
 80191e8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80191ec:	fb92 f3f3 	sdiv	r3, r2, r3
 80191f0:	ee13 2a10 	vmov	r2, s6
 80191f4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80191f8:	9313      	str	r3, [sp, #76]	; 0x4c
 80191fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80191fc:	fb92 f3f3 	sdiv	r3, r2, r3
 8019200:	9a04      	ldr	r2, [sp, #16]
 8019202:	9314      	str	r3, [sp, #80]	; 0x50
 8019204:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8019208:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801920a:	eeb0 3a67 	vmov.f32	s6, s15
 801920e:	bf08      	it	eq
 8019210:	4613      	moveq	r3, r2
 8019212:	eef0 2a47 	vmov.f32	s5, s14
 8019216:	e787      	b.n	8019128 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019218:	1406      	asrs	r6, r0, #16
 801921a:	d45d      	bmi.n	80192d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801921c:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8019220:	42b5      	cmp	r5, r6
 8019222:	dd59      	ble.n	80192d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019224:	140f      	asrs	r7, r1, #16
 8019226:	d457      	bmi.n	80192d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019228:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801922c:	42ba      	cmp	r2, r7
 801922e:	dd53      	ble.n	80192d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019230:	9a01      	ldr	r2, [sp, #4]
 8019232:	b22d      	sxth	r5, r5
 8019234:	fb07 2505 	mla	r5, r7, r5, r2
 8019238:	5daa      	ldrb	r2, [r5, r6]
 801923a:	9d02      	ldr	r5, [sp, #8]
 801923c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8019240:	0e2e      	lsrs	r6, r5, #24
 8019242:	d049      	beq.n	80192d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019244:	f06f 0201 	mvn.w	r2, #1
 8019248:	fb02 f20e 	mul.w	r2, r2, lr
 801924c:	9203      	str	r2, [sp, #12]
 801924e:	f834 8002 	ldrh.w	r8, [r4, r2]
 8019252:	9a05      	ldr	r2, [sp, #20]
 8019254:	4356      	muls	r6, r2
 8019256:	1c72      	adds	r2, r6, #1
 8019258:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801925c:	1212      	asrs	r2, r2, #8
 801925e:	fa1f f982 	uxth.w	r9, r2
 8019262:	ea4f 2728 	mov.w	r7, r8, asr #8
 8019266:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801926a:	43d2      	mvns	r2, r2
 801926c:	b2d2      	uxtb	r2, r2
 801926e:	fb16 f609 	smulbb	r6, r6, r9
 8019272:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019276:	fb07 6702 	mla	r7, r7, r2, r6
 801927a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801927e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8019282:	b2ed      	uxtb	r5, r5
 8019284:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019288:	fa5f f888 	uxtb.w	r8, r8
 801928c:	fb15 f509 	smulbb	r5, r5, r9
 8019290:	fb08 5502 	mla	r5, r8, r2, r5
 8019294:	b2bf      	uxth	r7, r7
 8019296:	fb1a fa09 	smulbb	sl, sl, r9
 801929a:	b2ad      	uxth	r5, r5
 801929c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80192a0:	fb06 a602 	mla	r6, r6, r2, sl
 80192a4:	1c7a      	adds	r2, r7, #1
 80192a6:	f105 0a01 	add.w	sl, r5, #1
 80192aa:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80192ae:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80192b2:	b2b6      	uxth	r6, r6
 80192b4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80192b8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80192bc:	ea4a 0707 	orr.w	r7, sl, r7
 80192c0:	f106 0a01 	add.w	sl, r6, #1
 80192c4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80192c8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80192cc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80192d0:	9a03      	ldr	r2, [sp, #12]
 80192d2:	ea47 070a 	orr.w	r7, r7, sl
 80192d6:	52a7      	strh	r7, [r4, r2]
 80192d8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80192da:	4410      	add	r0, r2
 80192dc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80192de:	f10e 3eff 	add.w	lr, lr, #4294967295
 80192e2:	4411      	add	r1, r2
 80192e4:	e755      	b.n	8019192 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80192e6:	f04f 0800 	mov.w	r8, #0
 80192ea:	eba3 0208 	sub.w	r2, r3, r8
 80192ee:	2a00      	cmp	r2, #0
 80192f0:	f77f af53 	ble.w	801919a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80192f4:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 80192f8:	9f01      	ldr	r7, [sp, #4]
 80192fa:	140a      	asrs	r2, r1, #16
 80192fc:	1405      	asrs	r5, r0, #16
 80192fe:	fb06 7202 	mla	r2, r6, r2, r7
 8019302:	5d52      	ldrb	r2, [r2, r5]
 8019304:	9d02      	ldr	r5, [sp, #8]
 8019306:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801930a:	0e2e      	lsrs	r6, r5, #24
 801930c:	d044      	beq.n	8019398 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801930e:	9a05      	ldr	r2, [sp, #20]
 8019310:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8019314:	4356      	muls	r6, r2
 8019316:	1c72      	adds	r2, r6, #1
 8019318:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801931c:	1212      	asrs	r2, r2, #8
 801931e:	fa1f f982 	uxth.w	r9, r2
 8019322:	ea4f 272e 	mov.w	r7, lr, asr #8
 8019326:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801932a:	43d2      	mvns	r2, r2
 801932c:	b2d2      	uxtb	r2, r2
 801932e:	fb16 f609 	smulbb	r6, r6, r9
 8019332:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019336:	fb07 6702 	mla	r7, r7, r2, r6
 801933a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801933e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019342:	b2ed      	uxtb	r5, r5
 8019344:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019348:	fa5f fe8e 	uxtb.w	lr, lr
 801934c:	fb15 f509 	smulbb	r5, r5, r9
 8019350:	fb0e 5502 	mla	r5, lr, r2, r5
 8019354:	b2bf      	uxth	r7, r7
 8019356:	fb1a fa09 	smulbb	sl, sl, r9
 801935a:	b2ad      	uxth	r5, r5
 801935c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019360:	fb06 a602 	mla	r6, r6, r2, sl
 8019364:	1c7a      	adds	r2, r7, #1
 8019366:	f105 0a01 	add.w	sl, r5, #1
 801936a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801936e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019372:	b2b6      	uxth	r6, r6
 8019374:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019378:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801937c:	ea4a 0707 	orr.w	r7, sl, r7
 8019380:	f106 0a01 	add.w	sl, r6, #1
 8019384:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019388:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801938c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019390:	ea47 070a 	orr.w	r7, r7, sl
 8019394:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8019398:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801939a:	4410      	add	r0, r2
 801939c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801939e:	f108 0801 	add.w	r8, r8, #1
 80193a2:	4411      	add	r1, r2
 80193a4:	e7a1      	b.n	80192ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80193a6:	b007      	add	sp, #28
 80193a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080193ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80193ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80193b0:	b085      	sub	sp, #20
 80193b2:	468b      	mov	fp, r1
 80193b4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80193b6:	9203      	str	r2, [sp, #12]
 80193b8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80193bc:	6841      	ldr	r1, [r0, #4]
 80193be:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80193c2:	fb01 2404 	mla	r4, r1, r4, r2
 80193c6:	6802      	ldr	r2, [r0, #0]
 80193c8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80193cc:	f8de 2000 	ldr.w	r2, [lr]
 80193d0:	9200      	str	r2, [sp, #0]
 80193d2:	f8de 2004 	ldr.w	r2, [lr, #4]
 80193d6:	3204      	adds	r2, #4
 80193d8:	9201      	str	r2, [sp, #4]
 80193da:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80193de:	f1bb 0f00 	cmp.w	fp, #0
 80193e2:	dc03      	bgt.n	80193ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80193e4:	9a03      	ldr	r2, [sp, #12]
 80193e6:	2a00      	cmp	r2, #0
 80193e8:	f340 8153 	ble.w	8019692 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80193ec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80193ee:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80193f2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80193f6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80193fa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80193fc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019400:	2b00      	cmp	r3, #0
 8019402:	dd0e      	ble.n	8019422 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019404:	1408      	asrs	r0, r1, #16
 8019406:	d405      	bmi.n	8019414 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019408:	42b8      	cmp	r0, r7
 801940a:	da03      	bge.n	8019414 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801940c:	1410      	asrs	r0, r2, #16
 801940e:	d401      	bmi.n	8019414 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019410:	42b0      	cmp	r0, r6
 8019412:	db07      	blt.n	8019424 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019414:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019416:	4401      	add	r1, r0
 8019418:	9812      	ldr	r0, [sp, #72]	; 0x48
 801941a:	3b01      	subs	r3, #1
 801941c:	4402      	add	r2, r0
 801941e:	3402      	adds	r4, #2
 8019420:	e7ee      	b.n	8019400 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8019422:	d017      	beq.n	8019454 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019424:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019426:	1e58      	subs	r0, r3, #1
 8019428:	fb05 1500 	mla	r5, r5, r0, r1
 801942c:	142d      	asrs	r5, r5, #16
 801942e:	d409      	bmi.n	8019444 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019430:	42bd      	cmp	r5, r7
 8019432:	da07      	bge.n	8019444 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019434:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019436:	fb05 2000 	mla	r0, r5, r0, r2
 801943a:	1400      	asrs	r0, r0, #16
 801943c:	d402      	bmi.n	8019444 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801943e:	42b0      	cmp	r0, r6
 8019440:	f2c0 80bc 	blt.w	80195bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8019444:	2600      	movs	r6, #0
 8019446:	1998      	adds	r0, r3, r6
 8019448:	2800      	cmp	r0, #0
 801944a:	dc3e      	bgt.n	80194ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801944c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019450:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019454:	f1bb 0f00 	cmp.w	fp, #0
 8019458:	f340 811b 	ble.w	8019692 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801945c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019460:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019464:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019468:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801946a:	f1bb 0b01 	subs.w	fp, fp, #1
 801946e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019472:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019476:	eeb0 6a62 	vmov.f32	s12, s5
 801947a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801947e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019482:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019486:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801948a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801948e:	eeb0 6a43 	vmov.f32	s12, s6
 8019492:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019496:	ee12 2a90 	vmov	r2, s5
 801949a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801949e:	fb92 f3f3 	sdiv	r3, r2, r3
 80194a2:	ee13 2a10 	vmov	r2, s6
 80194a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80194aa:	9311      	str	r3, [sp, #68]	; 0x44
 80194ac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80194ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80194b2:	9a03      	ldr	r2, [sp, #12]
 80194b4:	9312      	str	r3, [sp, #72]	; 0x48
 80194b6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80194ba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80194bc:	eeb0 3a67 	vmov.f32	s6, s15
 80194c0:	bf08      	it	eq
 80194c2:	4613      	moveq	r3, r2
 80194c4:	eef0 2a47 	vmov.f32	s5, s14
 80194c8:	e789      	b.n	80193de <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80194ca:	140f      	asrs	r7, r1, #16
 80194cc:	d426      	bmi.n	801951c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80194ce:	f8de 5008 	ldr.w	r5, [lr, #8]
 80194d2:	42bd      	cmp	r5, r7
 80194d4:	dd22      	ble.n	801951c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80194d6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80194da:	d41f      	bmi.n	801951c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80194dc:	f8de 000c 	ldr.w	r0, [lr, #12]
 80194e0:	4560      	cmp	r0, ip
 80194e2:	dd1b      	ble.n	801951c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80194e4:	9800      	ldr	r0, [sp, #0]
 80194e6:	b22d      	sxth	r5, r5
 80194e8:	fb0c 0505 	mla	r5, ip, r5, r0
 80194ec:	5de8      	ldrb	r0, [r5, r7]
 80194ee:	9d01      	ldr	r5, [sp, #4]
 80194f0:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 80194f4:	0e07      	lsrs	r7, r0, #24
 80194f6:	2fff      	cmp	r7, #255	; 0xff
 80194f8:	d116      	bne.n	8019528 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80194fa:	f06f 0501 	mvn.w	r5, #1
 80194fe:	fb05 f706 	mul.w	r7, r5, r6
 8019502:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8019506:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801950a:	0945      	lsrs	r5, r0, #5
 801950c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019510:	ea4c 0505 	orr.w	r5, ip, r5
 8019514:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8019518:	4305      	orrs	r5, r0
 801951a:	53e5      	strh	r5, [r4, r7]
 801951c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801951e:	4401      	add	r1, r0
 8019520:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019522:	3e01      	subs	r6, #1
 8019524:	4402      	add	r2, r0
 8019526:	e78e      	b.n	8019446 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019528:	b2fd      	uxtb	r5, r7
 801952a:	2f00      	cmp	r7, #0
 801952c:	d0f6      	beq.n	801951c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801952e:	f06f 0701 	mvn.w	r7, #1
 8019532:	4377      	muls	r7, r6
 8019534:	fa1f f985 	uxth.w	r9, r5
 8019538:	f834 8007 	ldrh.w	r8, [r4, r7]
 801953c:	9702      	str	r7, [sp, #8]
 801953e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8019542:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8019546:	43ed      	mvns	r5, r5
 8019548:	b2ed      	uxtb	r5, r5
 801954a:	fb17 f709 	smulbb	r7, r7, r9
 801954e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019552:	fb0c 7c05 	mla	ip, ip, r5, r7
 8019556:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801955a:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801955e:	b2c0      	uxtb	r0, r0
 8019560:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019564:	fa5f f888 	uxtb.w	r8, r8
 8019568:	fb10 f009 	smulbb	r0, r0, r9
 801956c:	fb08 0005 	mla	r0, r8, r5, r0
 8019570:	b280      	uxth	r0, r0
 8019572:	fa1f fc8c 	uxth.w	ip, ip
 8019576:	fb1a fa09 	smulbb	sl, sl, r9
 801957a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801957e:	fb07 a705 	mla	r7, r7, r5, sl
 8019582:	f100 0a01 	add.w	sl, r0, #1
 8019586:	f10c 0501 	add.w	r5, ip, #1
 801958a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801958e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019592:	b2bf      	uxth	r7, r7
 8019594:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019598:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801959c:	ea4a 0c0c 	orr.w	ip, sl, ip
 80195a0:	f107 0a01 	add.w	sl, r7, #1
 80195a4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80195a8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80195ac:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80195b0:	9802      	ldr	r0, [sp, #8]
 80195b2:	ea4c 0c0a 	orr.w	ip, ip, sl
 80195b6:	f824 c000 	strh.w	ip, [r4, r0]
 80195ba:	e7af      	b.n	801951c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80195bc:	f04f 0800 	mov.w	r8, #0
 80195c0:	eba3 0008 	sub.w	r0, r3, r8
 80195c4:	2800      	cmp	r0, #0
 80195c6:	f77f af41 	ble.w	801944c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80195ca:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80195ce:	9f00      	ldr	r7, [sp, #0]
 80195d0:	1410      	asrs	r0, r2, #16
 80195d2:	140d      	asrs	r5, r1, #16
 80195d4:	fb06 7000 	mla	r0, r6, r0, r7
 80195d8:	5d40      	ldrb	r0, [r0, r5]
 80195da:	9d01      	ldr	r5, [sp, #4]
 80195dc:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80195e0:	0e2e      	lsrs	r6, r5, #24
 80195e2:	2eff      	cmp	r6, #255	; 0xff
 80195e4:	d112      	bne.n	801960c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 80195e6:	482c      	ldr	r0, [pc, #176]	; (8019698 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 80195e8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80195ec:	0968      	lsrs	r0, r5, #5
 80195ee:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80195f2:	4330      	orrs	r0, r6
 80195f4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80195f8:	4328      	orrs	r0, r5
 80195fa:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 80195fe:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019600:	4401      	add	r1, r0
 8019602:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019604:	f108 0801 	add.w	r8, r8, #1
 8019608:	4402      	add	r2, r0
 801960a:	e7d9      	b.n	80195c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801960c:	b2f0      	uxtb	r0, r6
 801960e:	2e00      	cmp	r6, #0
 8019610:	d0f5      	beq.n	80195fe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019612:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8019616:	fa1f f980 	uxth.w	r9, r0
 801961a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801961e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8019622:	43c0      	mvns	r0, r0
 8019624:	b2c0      	uxtb	r0, r0
 8019626:	fb16 f609 	smulbb	r6, r6, r9
 801962a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801962e:	fb07 6700 	mla	r7, r7, r0, r6
 8019632:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019636:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801963a:	b2ed      	uxtb	r5, r5
 801963c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019640:	fa5f fc8c 	uxtb.w	ip, ip
 8019644:	fb15 f509 	smulbb	r5, r5, r9
 8019648:	fb0c 5500 	mla	r5, ip, r0, r5
 801964c:	b2bf      	uxth	r7, r7
 801964e:	fb1a fa09 	smulbb	sl, sl, r9
 8019652:	b2ad      	uxth	r5, r5
 8019654:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019658:	fb06 a600 	mla	r6, r6, r0, sl
 801965c:	1c78      	adds	r0, r7, #1
 801965e:	f105 0a01 	add.w	sl, r5, #1
 8019662:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8019666:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801966a:	b2b6      	uxth	r6, r6
 801966c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019670:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019674:	ea4a 0707 	orr.w	r7, sl, r7
 8019678:	f106 0a01 	add.w	sl, r6, #1
 801967c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019680:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019684:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019688:	ea47 070a 	orr.w	r7, r7, sl
 801968c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8019690:	e7b5      	b.n	80195fe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019692:	b005      	add	sp, #20
 8019694:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019698:	fffff800 	.word	0xfffff800

0801969c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801969c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80196a0:	b087      	sub	sp, #28
 80196a2:	468b      	mov	fp, r1
 80196a4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80196a6:	9204      	str	r2, [sp, #16]
 80196a8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80196ac:	9205      	str	r2, [sp, #20]
 80196ae:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80196b2:	6861      	ldr	r1, [r4, #4]
 80196b4:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80196b8:	fb01 2000 	mla	r0, r1, r0, r2
 80196bc:	6822      	ldr	r2, [r4, #0]
 80196be:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80196c2:	f8de 2000 	ldr.w	r2, [lr]
 80196c6:	9201      	str	r2, [sp, #4]
 80196c8:	f8de 2004 	ldr.w	r2, [lr, #4]
 80196cc:	9202      	str	r2, [sp, #8]
 80196ce:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80196d2:	f1bb 0f00 	cmp.w	fp, #0
 80196d6:	dc03      	bgt.n	80196e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 80196d8:	9a04      	ldr	r2, [sp, #16]
 80196da:	2a00      	cmp	r2, #0
 80196dc:	f340 8142 	ble.w	8019964 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80196e0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80196e2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80196e6:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80196ea:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80196ee:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80196f0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80196f4:	2b00      	cmp	r3, #0
 80196f6:	dd0e      	ble.n	8019716 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80196f8:	140c      	asrs	r4, r1, #16
 80196fa:	d405      	bmi.n	8019708 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80196fc:	42bc      	cmp	r4, r7
 80196fe:	da03      	bge.n	8019708 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019700:	1414      	asrs	r4, r2, #16
 8019702:	d401      	bmi.n	8019708 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019704:	42b4      	cmp	r4, r6
 8019706:	db07      	blt.n	8019718 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019708:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801970a:	4421      	add	r1, r4
 801970c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801970e:	3b01      	subs	r3, #1
 8019710:	4422      	add	r2, r4
 8019712:	3002      	adds	r0, #2
 8019714:	e7ee      	b.n	80196f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8019716:	d019      	beq.n	801974c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8019718:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801971a:	1e5c      	subs	r4, r3, #1
 801971c:	fb05 1504 	mla	r5, r5, r4, r1
 8019720:	142d      	asrs	r5, r5, #16
 8019722:	d409      	bmi.n	8019738 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019724:	42bd      	cmp	r5, r7
 8019726:	da07      	bge.n	8019738 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019728:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801972a:	fb05 2404 	mla	r4, r5, r4, r2
 801972e:	1424      	asrs	r4, r4, #16
 8019730:	d402      	bmi.n	8019738 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019732:	42b4      	cmp	r4, r6
 8019734:	f2c0 80b1 	blt.w	801989a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8019738:	f04f 0800 	mov.w	r8, #0
 801973c:	eb03 0408 	add.w	r4, r3, r8
 8019740:	2c00      	cmp	r4, #0
 8019742:	dc3e      	bgt.n	80197c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8019744:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019748:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801974c:	f1bb 0f00 	cmp.w	fp, #0
 8019750:	f340 8108 	ble.w	8019964 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8019754:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019758:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801975c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019760:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019762:	f1bb 0b01 	subs.w	fp, fp, #1
 8019766:	ee31 1a05 	vadd.f32	s2, s2, s10
 801976a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801976e:	eeb0 6a62 	vmov.f32	s12, s5
 8019772:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019776:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801977a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801977e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8019782:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019786:	eeb0 6a43 	vmov.f32	s12, s6
 801978a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801978e:	ee12 2a90 	vmov	r2, s5
 8019792:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019796:	fb92 f3f3 	sdiv	r3, r2, r3
 801979a:	ee13 2a10 	vmov	r2, s6
 801979e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80197a2:	9313      	str	r3, [sp, #76]	; 0x4c
 80197a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80197a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80197aa:	9a04      	ldr	r2, [sp, #16]
 80197ac:	9314      	str	r3, [sp, #80]	; 0x50
 80197ae:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80197b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80197b4:	eeb0 3a67 	vmov.f32	s6, s15
 80197b8:	bf08      	it	eq
 80197ba:	4613      	moveq	r3, r2
 80197bc:	eef0 2a47 	vmov.f32	s5, s14
 80197c0:	e787      	b.n	80196d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80197c2:	140e      	asrs	r6, r1, #16
 80197c4:	d462      	bmi.n	801988c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80197c6:	f8de 5008 	ldr.w	r5, [lr, #8]
 80197ca:	42b5      	cmp	r5, r6
 80197cc:	dd5e      	ble.n	801988c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80197ce:	1417      	asrs	r7, r2, #16
 80197d0:	d45c      	bmi.n	801988c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80197d2:	f8de 400c 	ldr.w	r4, [lr, #12]
 80197d6:	42bc      	cmp	r4, r7
 80197d8:	dd58      	ble.n	801988c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80197da:	b22d      	sxth	r5, r5
 80197dc:	fb07 6505 	mla	r5, r7, r5, r6
 80197e0:	9c02      	ldr	r4, [sp, #8]
 80197e2:	5d66      	ldrb	r6, [r4, r5]
 80197e4:	2e00      	cmp	r6, #0
 80197e6:	d051      	beq.n	801988c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80197e8:	9c01      	ldr	r4, [sp, #4]
 80197ea:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 80197ee:	f06f 0401 	mvn.w	r4, #1
 80197f2:	fb04 f408 	mul.w	r4, r4, r8
 80197f6:	9403      	str	r4, [sp, #12]
 80197f8:	5b05      	ldrh	r5, [r0, r4]
 80197fa:	9c05      	ldr	r4, [sp, #20]
 80197fc:	4366      	muls	r6, r4
 80197fe:	1c74      	adds	r4, r6, #1
 8019800:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8019804:	1224      	asrs	r4, r4, #8
 8019806:	b2a7      	uxth	r7, r4
 8019808:	122e      	asrs	r6, r5, #8
 801980a:	43e4      	mvns	r4, r4
 801980c:	b2e4      	uxtb	r4, r4
 801980e:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8019812:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019816:	fb16 f604 	smulbb	r6, r6, r4
 801981a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801981e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019822:	00ed      	lsls	r5, r5, #3
 8019824:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019828:	b2ed      	uxtb	r5, r5
 801982a:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801982e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8019832:	fb15 f504 	smulbb	r5, r5, r4
 8019836:	fa5f f989 	uxtb.w	r9, r9
 801983a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801983e:	fb09 5507 	mla	r5, r9, r7, r5
 8019842:	fb1a fa04 	smulbb	sl, sl, r4
 8019846:	fa1f fc8c 	uxth.w	ip, ip
 801984a:	b2ad      	uxth	r5, r5
 801984c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019850:	fb06 a607 	mla	r6, r6, r7, sl
 8019854:	f10c 0401 	add.w	r4, ip, #1
 8019858:	f105 0a01 	add.w	sl, r5, #1
 801985c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019860:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019864:	b2b6      	uxth	r6, r6
 8019866:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801986a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801986e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019872:	f106 0a01 	add.w	sl, r6, #1
 8019876:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801987a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801987e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019882:	9c03      	ldr	r4, [sp, #12]
 8019884:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019888:	f820 c004 	strh.w	ip, [r0, r4]
 801988c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801988e:	4421      	add	r1, r4
 8019890:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019892:	f108 38ff 	add.w	r8, r8, #4294967295
 8019896:	4422      	add	r2, r4
 8019898:	e750      	b.n	801973c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801989a:	f04f 0900 	mov.w	r9, #0
 801989e:	eba3 0409 	sub.w	r4, r3, r9
 80198a2:	2c00      	cmp	r4, #0
 80198a4:	f77f af4e 	ble.w	8019744 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80198a8:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80198ac:	140d      	asrs	r5, r1, #16
 80198ae:	1414      	asrs	r4, r2, #16
 80198b0:	fb06 5404 	mla	r4, r6, r4, r5
 80198b4:	9d02      	ldr	r5, [sp, #8]
 80198b6:	5d2e      	ldrb	r6, [r5, r4]
 80198b8:	2e00      	cmp	r6, #0
 80198ba:	d04c      	beq.n	8019956 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80198bc:	9d01      	ldr	r5, [sp, #4]
 80198be:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 80198c2:	9c05      	ldr	r4, [sp, #20]
 80198c4:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80198c8:	4366      	muls	r6, r4
 80198ca:	1c74      	adds	r4, r6, #1
 80198cc:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80198d0:	1224      	asrs	r4, r4, #8
 80198d2:	b2a7      	uxth	r7, r4
 80198d4:	122e      	asrs	r6, r5, #8
 80198d6:	43e4      	mvns	r4, r4
 80198d8:	b2e4      	uxtb	r4, r4
 80198da:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80198de:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80198e2:	fb16 f604 	smulbb	r6, r6, r4
 80198e6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80198ea:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80198ee:	00ed      	lsls	r5, r5, #3
 80198f0:	fb0c 6c07 	mla	ip, ip, r7, r6
 80198f4:	b2ed      	uxtb	r5, r5
 80198f6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80198fa:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80198fe:	fb15 f504 	smulbb	r5, r5, r4
 8019902:	fa5f f888 	uxtb.w	r8, r8
 8019906:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801990a:	fb08 5507 	mla	r5, r8, r7, r5
 801990e:	fb1a fa04 	smulbb	sl, sl, r4
 8019912:	fa1f fc8c 	uxth.w	ip, ip
 8019916:	b2ad      	uxth	r5, r5
 8019918:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801991c:	fb06 a607 	mla	r6, r6, r7, sl
 8019920:	f10c 0401 	add.w	r4, ip, #1
 8019924:	f105 0a01 	add.w	sl, r5, #1
 8019928:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801992c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019930:	b2b6      	uxth	r6, r6
 8019932:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019936:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801993a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801993e:	f106 0a01 	add.w	sl, r6, #1
 8019942:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019946:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801994a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801994e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019952:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8019956:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019958:	4421      	add	r1, r4
 801995a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801995c:	f109 0901 	add.w	r9, r9, #1
 8019960:	4422      	add	r2, r4
 8019962:	e79c      	b.n	801989e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8019964:	b007      	add	sp, #28
 8019966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801996a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801996a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801996e:	b085      	sub	sp, #20
 8019970:	468b      	mov	fp, r1
 8019972:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019974:	9203      	str	r2, [sp, #12]
 8019976:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801997a:	6861      	ldr	r1, [r4, #4]
 801997c:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8019980:	fb01 2000 	mla	r0, r1, r0, r2
 8019984:	6822      	ldr	r2, [r4, #0]
 8019986:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801998a:	f8d8 2000 	ldr.w	r2, [r8]
 801998e:	9200      	str	r2, [sp, #0]
 8019990:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8019994:	9201      	str	r2, [sp, #4]
 8019996:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801999a:	f1bb 0f00 	cmp.w	fp, #0
 801999e:	dc03      	bgt.n	80199a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80199a0:	9a03      	ldr	r2, [sp, #12]
 80199a2:	2a00      	cmp	r2, #0
 80199a4:	f340 8146 	ble.w	8019c34 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80199a8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80199aa:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80199ae:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80199b2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80199b6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80199b8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80199bc:	2b00      	cmp	r3, #0
 80199be:	dd0e      	ble.n	80199de <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80199c0:	140c      	asrs	r4, r1, #16
 80199c2:	d405      	bmi.n	80199d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80199c4:	42bc      	cmp	r4, r7
 80199c6:	da03      	bge.n	80199d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80199c8:	1414      	asrs	r4, r2, #16
 80199ca:	d401      	bmi.n	80199d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80199cc:	42b4      	cmp	r4, r6
 80199ce:	db07      	blt.n	80199e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80199d0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80199d2:	4421      	add	r1, r4
 80199d4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80199d6:	3b01      	subs	r3, #1
 80199d8:	4422      	add	r2, r4
 80199da:	3002      	adds	r0, #2
 80199dc:	e7ee      	b.n	80199bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80199de:	d017      	beq.n	8019a10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80199e0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80199e2:	1e5c      	subs	r4, r3, #1
 80199e4:	fb05 1504 	mla	r5, r5, r4, r1
 80199e8:	142d      	asrs	r5, r5, #16
 80199ea:	d409      	bmi.n	8019a00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80199ec:	42bd      	cmp	r5, r7
 80199ee:	da07      	bge.n	8019a00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80199f0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80199f2:	fb05 2404 	mla	r4, r5, r4, r2
 80199f6:	1424      	asrs	r4, r4, #16
 80199f8:	d402      	bmi.n	8019a00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80199fa:	42b4      	cmp	r4, r6
 80199fc:	f2c0 80b3 	blt.w	8019b66 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8019a00:	2600      	movs	r6, #0
 8019a02:	199c      	adds	r4, r3, r6
 8019a04:	2c00      	cmp	r4, #0
 8019a06:	dc3e      	bgt.n	8019a86 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019a08:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019a0c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019a10:	f1bb 0f00 	cmp.w	fp, #0
 8019a14:	f340 810e 	ble.w	8019c34 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019a18:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019a1c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019a20:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019a24:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019a26:	f1bb 0b01 	subs.w	fp, fp, #1
 8019a2a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019a2e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019a32:	eeb0 6a62 	vmov.f32	s12, s5
 8019a36:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019a3a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019a3e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019a42:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019a46:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019a4a:	eeb0 6a43 	vmov.f32	s12, s6
 8019a4e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019a52:	ee12 2a90 	vmov	r2, s5
 8019a56:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019a5a:	fb92 f3f3 	sdiv	r3, r2, r3
 8019a5e:	ee13 2a10 	vmov	r2, s6
 8019a62:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019a66:	9311      	str	r3, [sp, #68]	; 0x44
 8019a68:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019a6a:	fb92 f3f3 	sdiv	r3, r2, r3
 8019a6e:	9a03      	ldr	r2, [sp, #12]
 8019a70:	9312      	str	r3, [sp, #72]	; 0x48
 8019a72:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019a76:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019a78:	eeb0 3a67 	vmov.f32	s6, s15
 8019a7c:	bf08      	it	eq
 8019a7e:	4613      	moveq	r3, r2
 8019a80:	eef0 2a47 	vmov.f32	s5, s14
 8019a84:	e789      	b.n	801999a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019a86:	140f      	asrs	r7, r1, #16
 8019a88:	d418      	bmi.n	8019abc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019a8a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8019a8e:	42bd      	cmp	r5, r7
 8019a90:	dd14      	ble.n	8019abc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019a92:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019a96:	d411      	bmi.n	8019abc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019a98:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8019a9c:	4564      	cmp	r4, ip
 8019a9e:	dd0d      	ble.n	8019abc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019aa0:	b22d      	sxth	r5, r5
 8019aa2:	fb0c 7505 	mla	r5, ip, r5, r7
 8019aa6:	9c01      	ldr	r4, [sp, #4]
 8019aa8:	5d64      	ldrb	r4, [r4, r5]
 8019aaa:	2cff      	cmp	r4, #255	; 0xff
 8019aac:	d10c      	bne.n	8019ac8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8019aae:	9c00      	ldr	r4, [sp, #0]
 8019ab0:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8019ab4:	f06f 0401 	mvn.w	r4, #1
 8019ab8:	4374      	muls	r4, r6
 8019aba:	5305      	strh	r5, [r0, r4]
 8019abc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019abe:	4421      	add	r1, r4
 8019ac0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019ac2:	3e01      	subs	r6, #1
 8019ac4:	4422      	add	r2, r4
 8019ac6:	e79c      	b.n	8019a02 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019ac8:	2c00      	cmp	r4, #0
 8019aca:	d0f7      	beq.n	8019abc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019acc:	9f00      	ldr	r7, [sp, #0]
 8019ace:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8019ad2:	f06f 0501 	mvn.w	r5, #1
 8019ad6:	4375      	muls	r5, r6
 8019ad8:	9502      	str	r5, [sp, #8]
 8019ada:	5b45      	ldrh	r5, [r0, r5]
 8019adc:	fa1f fc84 	uxth.w	ip, r4
 8019ae0:	122f      	asrs	r7, r5, #8
 8019ae2:	43e4      	mvns	r4, r4
 8019ae4:	b2e4      	uxtb	r4, r4
 8019ae6:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8019aea:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019aee:	fb17 f704 	smulbb	r7, r7, r4
 8019af2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019af6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8019afa:	00ed      	lsls	r5, r5, #3
 8019afc:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8019b00:	b2ed      	uxtb	r5, r5
 8019b02:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8019b06:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8019b0a:	fb15 f504 	smulbb	r5, r5, r4
 8019b0e:	fa5f f989 	uxtb.w	r9, r9
 8019b12:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019b16:	fb09 550c 	mla	r5, r9, ip, r5
 8019b1a:	fb1a fa04 	smulbb	sl, sl, r4
 8019b1e:	fa1f fe8e 	uxth.w	lr, lr
 8019b22:	b2ad      	uxth	r5, r5
 8019b24:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019b28:	fb07 a70c 	mla	r7, r7, ip, sl
 8019b2c:	f10e 0401 	add.w	r4, lr, #1
 8019b30:	f105 0a01 	add.w	sl, r5, #1
 8019b34:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8019b38:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019b3c:	b2bf      	uxth	r7, r7
 8019b3e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019b42:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8019b46:	ea4a 0e0e 	orr.w	lr, sl, lr
 8019b4a:	f107 0a01 	add.w	sl, r7, #1
 8019b4e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019b52:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019b56:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019b5a:	9c02      	ldr	r4, [sp, #8]
 8019b5c:	ea4e 0e0a 	orr.w	lr, lr, sl
 8019b60:	f820 e004 	strh.w	lr, [r0, r4]
 8019b64:	e7aa      	b.n	8019abc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019b66:	f04f 0900 	mov.w	r9, #0
 8019b6a:	eba3 0409 	sub.w	r4, r3, r9
 8019b6e:	2c00      	cmp	r4, #0
 8019b70:	f77f af4a 	ble.w	8019a08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019b74:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8019b78:	1414      	asrs	r4, r2, #16
 8019b7a:	140d      	asrs	r5, r1, #16
 8019b7c:	fb06 5504 	mla	r5, r6, r4, r5
 8019b80:	9c01      	ldr	r4, [sp, #4]
 8019b82:	5d64      	ldrb	r4, [r4, r5]
 8019b84:	2cff      	cmp	r4, #255	; 0xff
 8019b86:	d10b      	bne.n	8019ba0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8019b88:	9c00      	ldr	r4, [sp, #0]
 8019b8a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8019b8e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8019b92:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019b94:	4421      	add	r1, r4
 8019b96:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019b98:	f109 0901 	add.w	r9, r9, #1
 8019b9c:	4422      	add	r2, r4
 8019b9e:	e7e4      	b.n	8019b6a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8019ba0:	2c00      	cmp	r4, #0
 8019ba2:	d0f6      	beq.n	8019b92 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019ba4:	9e00      	ldr	r6, [sp, #0]
 8019ba6:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8019baa:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8019bae:	b2a7      	uxth	r7, r4
 8019bb0:	122e      	asrs	r6, r5, #8
 8019bb2:	43e4      	mvns	r4, r4
 8019bb4:	b2e4      	uxtb	r4, r4
 8019bb6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019bba:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019bbe:	fb16 f604 	smulbb	r6, r6, r4
 8019bc2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019bc6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019bca:	00ed      	lsls	r5, r5, #3
 8019bcc:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019bd0:	b2ed      	uxtb	r5, r5
 8019bd2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019bd6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019bda:	fb15 f504 	smulbb	r5, r5, r4
 8019bde:	fa5f fe8e 	uxtb.w	lr, lr
 8019be2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019be6:	fb0e 5507 	mla	r5, lr, r7, r5
 8019bea:	fb1a fa04 	smulbb	sl, sl, r4
 8019bee:	fa1f fc8c 	uxth.w	ip, ip
 8019bf2:	b2ad      	uxth	r5, r5
 8019bf4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019bf8:	fb06 a607 	mla	r6, r6, r7, sl
 8019bfc:	f10c 0401 	add.w	r4, ip, #1
 8019c00:	f105 0a01 	add.w	sl, r5, #1
 8019c04:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019c08:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019c0c:	b2b6      	uxth	r6, r6
 8019c0e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019c12:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019c16:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019c1a:	f106 0a01 	add.w	sl, r6, #1
 8019c1e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019c22:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019c26:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019c2a:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019c2e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8019c32:	e7ae      	b.n	8019b92 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019c34:	b005      	add	sp, #20
 8019c36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019c3a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019c3a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c3e:	b085      	sub	sp, #20
 8019c40:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019c42:	9203      	str	r2, [sp, #12]
 8019c44:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8019c48:	9201      	str	r2, [sp, #4]
 8019c4a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019c4e:	9100      	str	r1, [sp, #0]
 8019c50:	6841      	ldr	r1, [r0, #4]
 8019c52:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8019c56:	fb01 2404 	mla	r4, r1, r4, r2
 8019c5a:	6802      	ldr	r2, [r0, #0]
 8019c5c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019c60:	f8de 2000 	ldr.w	r2, [lr]
 8019c64:	9202      	str	r2, [sp, #8]
 8019c66:	9a01      	ldr	r2, [sp, #4]
 8019c68:	43d6      	mvns	r6, r2
 8019c6a:	b2f6      	uxtb	r6, r6
 8019c6c:	9a00      	ldr	r2, [sp, #0]
 8019c6e:	2a00      	cmp	r2, #0
 8019c70:	dc03      	bgt.n	8019c7a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8019c72:	9a03      	ldr	r2, [sp, #12]
 8019c74:	2a00      	cmp	r2, #0
 8019c76:	f340 8124 	ble.w	8019ec2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8019c7a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019c7c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8019c80:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8019c84:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019c88:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019c8a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019c8e:	2b00      	cmp	r3, #0
 8019c90:	dd0e      	ble.n	8019cb0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019c92:	1408      	asrs	r0, r1, #16
 8019c94:	d405      	bmi.n	8019ca2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019c96:	4560      	cmp	r0, ip
 8019c98:	da03      	bge.n	8019ca2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019c9a:	1410      	asrs	r0, r2, #16
 8019c9c:	d401      	bmi.n	8019ca2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019c9e:	42b8      	cmp	r0, r7
 8019ca0:	db07      	blt.n	8019cb2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019ca2:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019ca4:	4401      	add	r1, r0
 8019ca6:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019ca8:	3b01      	subs	r3, #1
 8019caa:	4402      	add	r2, r0
 8019cac:	3402      	adds	r4, #2
 8019cae:	e7ee      	b.n	8019c8e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8019cb0:	d06e      	beq.n	8019d90 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8019cb2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019cb4:	1e58      	subs	r0, r3, #1
 8019cb6:	fb05 1500 	mla	r5, r5, r0, r1
 8019cba:	142d      	asrs	r5, r5, #16
 8019cbc:	d45c      	bmi.n	8019d78 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019cbe:	4565      	cmp	r5, ip
 8019cc0:	da5a      	bge.n	8019d78 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019cc2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019cc4:	fb05 2000 	mla	r0, r5, r0, r2
 8019cc8:	1400      	asrs	r0, r0, #16
 8019cca:	d455      	bmi.n	8019d78 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019ccc:	42b8      	cmp	r0, r7
 8019cce:	da53      	bge.n	8019d78 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019cd0:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8019cd4:	4699      	mov	r9, r3
 8019cd6:	46a2      	mov	sl, r4
 8019cd8:	f1b9 0f00 	cmp.w	r9, #0
 8019cdc:	dd54      	ble.n	8019d88 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019cde:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019ce2:	140d      	asrs	r5, r1, #16
 8019ce4:	1410      	asrs	r0, r2, #16
 8019ce6:	fb07 5000 	mla	r0, r7, r0, r5
 8019cea:	9d02      	ldr	r5, [sp, #8]
 8019cec:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019cf0:	f8ba 5000 	ldrh.w	r5, [sl]
 8019cf4:	122f      	asrs	r7, r5, #8
 8019cf6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019cfa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019cfe:	fb17 f706 	smulbb	r7, r7, r6
 8019d02:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8019d06:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019d0a:	00ed      	lsls	r5, r5, #3
 8019d0c:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8019d10:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8019d14:	10c7      	asrs	r7, r0, #3
 8019d16:	b2ed      	uxtb	r5, r5
 8019d18:	00c0      	lsls	r0, r0, #3
 8019d1a:	fb18 f806 	smulbb	r8, r8, r6
 8019d1e:	fb15 f506 	smulbb	r5, r5, r6
 8019d22:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019d26:	b2c0      	uxtb	r0, r0
 8019d28:	fa1f fc8c 	uxth.w	ip, ip
 8019d2c:	fb07 870b 	mla	r7, r7, fp, r8
 8019d30:	fb00 500b 	mla	r0, r0, fp, r5
 8019d34:	b280      	uxth	r0, r0
 8019d36:	b2bf      	uxth	r7, r7
 8019d38:	f10c 0501 	add.w	r5, ip, #1
 8019d3c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019d40:	f107 0801 	add.w	r8, r7, #1
 8019d44:	1c45      	adds	r5, r0, #1
 8019d46:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019d4a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8019d4e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019d50:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019d54:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019d58:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019d5c:	ea45 0c0c 	orr.w	ip, r5, ip
 8019d60:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8019d64:	4401      	add	r1, r0
 8019d66:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019d68:	ea4c 0c08 	orr.w	ip, ip, r8
 8019d6c:	f82a cb02 	strh.w	ip, [sl], #2
 8019d70:	4402      	add	r2, r0
 8019d72:	f109 39ff 	add.w	r9, r9, #4294967295
 8019d76:	e7af      	b.n	8019cd8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019d78:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8019d7c:	f04f 0800 	mov.w	r8, #0
 8019d80:	eb03 0008 	add.w	r0, r3, r8
 8019d84:	2800      	cmp	r0, #0
 8019d86:	dc41      	bgt.n	8019e0c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8019d88:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019d8c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019d90:	9b00      	ldr	r3, [sp, #0]
 8019d92:	2b00      	cmp	r3, #0
 8019d94:	f340 8095 	ble.w	8019ec2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8019d98:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019d9c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019da0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019da4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019da6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019daa:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019dae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019db2:	eef0 6a62 	vmov.f32	s13, s5
 8019db6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019dba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019dbe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019dc2:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8019dc6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019dca:	eef0 6a43 	vmov.f32	s13, s6
 8019dce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019dd2:	ee12 2a90 	vmov	r2, s5
 8019dd6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019dda:	fb92 f3f3 	sdiv	r3, r2, r3
 8019dde:	ee13 2a10 	vmov	r2, s6
 8019de2:	9311      	str	r3, [sp, #68]	; 0x44
 8019de4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019de6:	fb92 f3f3 	sdiv	r3, r2, r3
 8019dea:	9312      	str	r3, [sp, #72]	; 0x48
 8019dec:	9b00      	ldr	r3, [sp, #0]
 8019dee:	9a03      	ldr	r2, [sp, #12]
 8019df0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019df4:	3b01      	subs	r3, #1
 8019df6:	9300      	str	r3, [sp, #0]
 8019df8:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8019dfc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019dfe:	eeb0 3a67 	vmov.f32	s6, s15
 8019e02:	bf08      	it	eq
 8019e04:	4613      	moveq	r3, r2
 8019e06:	eef0 2a47 	vmov.f32	s5, s14
 8019e0a:	e72f      	b.n	8019c6c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8019e0c:	140f      	asrs	r7, r1, #16
 8019e0e:	d451      	bmi.n	8019eb4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019e10:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019e14:	42bd      	cmp	r5, r7
 8019e16:	dd4d      	ble.n	8019eb4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019e18:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019e1c:	d44a      	bmi.n	8019eb4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019e1e:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019e22:	4560      	cmp	r0, ip
 8019e24:	dd46      	ble.n	8019eb4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019e26:	b22d      	sxth	r5, r5
 8019e28:	fb0c 7505 	mla	r5, ip, r5, r7
 8019e2c:	9802      	ldr	r0, [sp, #8]
 8019e2e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8019e32:	f06f 0501 	mvn.w	r5, #1
 8019e36:	fb05 fb08 	mul.w	fp, r5, r8
 8019e3a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019e3e:	f834 500b 	ldrh.w	r5, [r4, fp]
 8019e42:	122f      	asrs	r7, r5, #8
 8019e44:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019e48:	fb17 f706 	smulbb	r7, r7, r6
 8019e4c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019e50:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019e54:	00ed      	lsls	r5, r5, #3
 8019e56:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8019e5a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8019e5e:	10c7      	asrs	r7, r0, #3
 8019e60:	b2ed      	uxtb	r5, r5
 8019e62:	00c0      	lsls	r0, r0, #3
 8019e64:	fb19 f906 	smulbb	r9, r9, r6
 8019e68:	fb15 f506 	smulbb	r5, r5, r6
 8019e6c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019e70:	b2c0      	uxtb	r0, r0
 8019e72:	fa1f fc8c 	uxth.w	ip, ip
 8019e76:	fb07 970a 	mla	r7, r7, sl, r9
 8019e7a:	fb00 500a 	mla	r0, r0, sl, r5
 8019e7e:	b2bf      	uxth	r7, r7
 8019e80:	b280      	uxth	r0, r0
 8019e82:	f10c 0501 	add.w	r5, ip, #1
 8019e86:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019e8a:	f107 0901 	add.w	r9, r7, #1
 8019e8e:	1c45      	adds	r5, r0, #1
 8019e90:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019e94:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8019e98:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019e9c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019ea0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019ea4:	ea45 0c0c 	orr.w	ip, r5, ip
 8019ea8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019eac:	ea4c 0c09 	orr.w	ip, ip, r9
 8019eb0:	f824 c00b 	strh.w	ip, [r4, fp]
 8019eb4:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019eb6:	4401      	add	r1, r0
 8019eb8:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019eba:	f108 38ff 	add.w	r8, r8, #4294967295
 8019ebe:	4402      	add	r2, r0
 8019ec0:	e75e      	b.n	8019d80 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8019ec2:	b005      	add	sp, #20
 8019ec4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019ec8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019ec8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019ecc:	b085      	sub	sp, #20
 8019ece:	4693      	mov	fp, r2
 8019ed0:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019ed2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019ed4:	6870      	ldr	r0, [r6, #4]
 8019ed6:	9101      	str	r1, [sp, #4]
 8019ed8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019edc:	fb00 2404 	mla	r4, r0, r4, r2
 8019ee0:	6832      	ldr	r2, [r6, #0]
 8019ee2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8019ee6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019eea:	682a      	ldr	r2, [r5, #0]
 8019eec:	9202      	str	r2, [sp, #8]
 8019eee:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019ef2:	9a01      	ldr	r2, [sp, #4]
 8019ef4:	2a00      	cmp	r2, #0
 8019ef6:	dc03      	bgt.n	8019f00 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019ef8:	f1bb 0f00 	cmp.w	fp, #0
 8019efc:	f340 809a 	ble.w	801a034 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8019f00:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019f02:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019f06:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019f0a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019f0e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019f10:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019f14:	2b00      	cmp	r3, #0
 8019f16:	dd0c      	ble.n	8019f32 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8019f18:	1406      	asrs	r6, r0, #16
 8019f1a:	d405      	bmi.n	8019f28 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019f1c:	454e      	cmp	r6, r9
 8019f1e:	da03      	bge.n	8019f28 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019f20:	1416      	asrs	r6, r2, #16
 8019f22:	d401      	bmi.n	8019f28 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019f24:	4546      	cmp	r6, r8
 8019f26:	db05      	blt.n	8019f34 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019f28:	4470      	add	r0, lr
 8019f2a:	4462      	add	r2, ip
 8019f2c:	3b01      	subs	r3, #1
 8019f2e:	3402      	adds	r4, #2
 8019f30:	e7f0      	b.n	8019f14 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019f32:	d00f      	beq.n	8019f54 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019f34:	1e5e      	subs	r6, r3, #1
 8019f36:	fb0e 0706 	mla	r7, lr, r6, r0
 8019f3a:	143f      	asrs	r7, r7, #16
 8019f3c:	d541      	bpl.n	8019fc2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8019f3e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8019f42:	4698      	mov	r8, r3
 8019f44:	9603      	str	r6, [sp, #12]
 8019f46:	f1b8 0f00 	cmp.w	r8, #0
 8019f4a:	dc56      	bgt.n	8019ffa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8019f4c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019f50:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019f54:	9b01      	ldr	r3, [sp, #4]
 8019f56:	2b00      	cmp	r3, #0
 8019f58:	dd6c      	ble.n	801a034 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8019f5a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019f5e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019f62:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019f66:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019f68:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019f6c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019f70:	eeb0 6a62 	vmov.f32	s12, s5
 8019f74:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019f78:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019f7c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019f80:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019f84:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019f88:	eeb0 6a43 	vmov.f32	s12, s6
 8019f8c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019f90:	ee12 2a90 	vmov	r2, s5
 8019f94:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019f98:	fb92 fef3 	sdiv	lr, r2, r3
 8019f9c:	ee13 2a10 	vmov	r2, s6
 8019fa0:	fb92 fcf3 	sdiv	ip, r2, r3
 8019fa4:	9b01      	ldr	r3, [sp, #4]
 8019fa6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019faa:	3b01      	subs	r3, #1
 8019fac:	9301      	str	r3, [sp, #4]
 8019fae:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019fb2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019fb4:	eeb0 3a67 	vmov.f32	s6, s15
 8019fb8:	bf08      	it	eq
 8019fba:	465b      	moveq	r3, fp
 8019fbc:	eef0 2a47 	vmov.f32	s5, s14
 8019fc0:	e797      	b.n	8019ef2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8019fc2:	454f      	cmp	r7, r9
 8019fc4:	dabb      	bge.n	8019f3e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019fc6:	fb0c 2606 	mla	r6, ip, r6, r2
 8019fca:	1436      	asrs	r6, r6, #16
 8019fcc:	d4b7      	bmi.n	8019f3e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019fce:	4546      	cmp	r6, r8
 8019fd0:	dab5      	bge.n	8019f3e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019fd2:	461e      	mov	r6, r3
 8019fd4:	46a0      	mov	r8, r4
 8019fd6:	2e00      	cmp	r6, #0
 8019fd8:	ddb8      	ble.n	8019f4c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019fda:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8019fde:	9902      	ldr	r1, [sp, #8]
 8019fe0:	1417      	asrs	r7, r2, #16
 8019fe2:	ea4f 4920 	mov.w	r9, r0, asr #16
 8019fe6:	fb0a 9707 	mla	r7, sl, r7, r9
 8019fea:	4470      	add	r0, lr
 8019fec:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8019ff0:	f828 7b02 	strh.w	r7, [r8], #2
 8019ff4:	4462      	add	r2, ip
 8019ff6:	3e01      	subs	r6, #1
 8019ff8:	e7ed      	b.n	8019fd6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8019ffa:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019ffe:	d414      	bmi.n	801a02a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a000:	68ae      	ldr	r6, [r5, #8]
 801a002:	454e      	cmp	r6, r9
 801a004:	dd11      	ble.n	801a02a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a006:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801a00a:	d40e      	bmi.n	801a02a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a00c:	68ef      	ldr	r7, [r5, #12]
 801a00e:	4557      	cmp	r7, sl
 801a010:	dd0b      	ble.n	801a02a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a012:	b236      	sxth	r6, r6
 801a014:	fb0a 9606 	mla	r6, sl, r6, r9
 801a018:	9f02      	ldr	r7, [sp, #8]
 801a01a:	f06f 0101 	mvn.w	r1, #1
 801a01e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801a022:	fb01 f608 	mul.w	r6, r1, r8
 801a026:	9903      	ldr	r1, [sp, #12]
 801a028:	538f      	strh	r7, [r1, r6]
 801a02a:	4470      	add	r0, lr
 801a02c:	4462      	add	r2, ip
 801a02e:	f108 38ff 	add.w	r8, r8, #4294967295
 801a032:	e788      	b.n	8019f46 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a034:	b005      	add	sp, #20
 801a036:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a03a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a03a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a03e:	b087      	sub	sp, #28
 801a040:	468b      	mov	fp, r1
 801a042:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a044:	9203      	str	r2, [sp, #12]
 801a046:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a04a:	9204      	str	r2, [sp, #16]
 801a04c:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801a050:	6841      	ldr	r1, [r0, #4]
 801a052:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801a056:	fb01 2505 	mla	r5, r1, r5, r2
 801a05a:	6802      	ldr	r2, [r0, #0]
 801a05c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801a060:	f8d9 2000 	ldr.w	r2, [r9]
 801a064:	9201      	str	r2, [sp, #4]
 801a066:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a06a:	f1bb 0f00 	cmp.w	fp, #0
 801a06e:	dc03      	bgt.n	801a078 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a070:	9a03      	ldr	r2, [sp, #12]
 801a072:	2a00      	cmp	r2, #0
 801a074:	f340 8159 	ble.w	801a32a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a078:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a07a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a07e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a082:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a086:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a088:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a08c:	2b00      	cmp	r3, #0
 801a08e:	dd0e      	ble.n	801a0ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801a090:	1402      	asrs	r2, r0, #16
 801a092:	d405      	bmi.n	801a0a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a094:	42ba      	cmp	r2, r7
 801a096:	da03      	bge.n	801a0a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a098:	140a      	asrs	r2, r1, #16
 801a09a:	d401      	bmi.n	801a0a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a09c:	42b2      	cmp	r2, r6
 801a09e:	db07      	blt.n	801a0b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a0a0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a0a2:	4410      	add	r0, r2
 801a0a4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a0a6:	3b01      	subs	r3, #1
 801a0a8:	4411      	add	r1, r2
 801a0aa:	3502      	adds	r5, #2
 801a0ac:	e7ee      	b.n	801a08c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a0ae:	d017      	beq.n	801a0e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a0b0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a0b2:	1e5a      	subs	r2, r3, #1
 801a0b4:	fb04 0402 	mla	r4, r4, r2, r0
 801a0b8:	1424      	asrs	r4, r4, #16
 801a0ba:	d409      	bmi.n	801a0d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a0bc:	42bc      	cmp	r4, r7
 801a0be:	da07      	bge.n	801a0d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a0c0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a0c2:	fb04 1202 	mla	r2, r4, r2, r1
 801a0c6:	1412      	asrs	r2, r2, #16
 801a0c8:	d402      	bmi.n	801a0d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a0ca:	42b2      	cmp	r2, r6
 801a0cc:	f2c0 80bf 	blt.w	801a24e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a0d0:	2700      	movs	r7, #0
 801a0d2:	19da      	adds	r2, r3, r7
 801a0d4:	2a00      	cmp	r2, #0
 801a0d6:	dc3e      	bgt.n	801a156 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a0d8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a0dc:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801a0e0:	f1bb 0f00 	cmp.w	fp, #0
 801a0e4:	f340 8121 	ble.w	801a32a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a0e8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a0ec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a0f0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a0f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a0f6:	f1bb 0b01 	subs.w	fp, fp, #1
 801a0fa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a0fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a102:	eeb0 6a62 	vmov.f32	s12, s5
 801a106:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a10a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a10e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a112:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a116:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a11a:	eeb0 6a43 	vmov.f32	s12, s6
 801a11e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a122:	ee12 2a90 	vmov	r2, s5
 801a126:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a12a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a12e:	ee13 2a10 	vmov	r2, s6
 801a132:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a136:	9313      	str	r3, [sp, #76]	; 0x4c
 801a138:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a13a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a13e:	9a03      	ldr	r2, [sp, #12]
 801a140:	9314      	str	r3, [sp, #80]	; 0x50
 801a142:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a146:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a148:	eeb0 3a67 	vmov.f32	s6, s15
 801a14c:	bf08      	it	eq
 801a14e:	4613      	moveq	r3, r2
 801a150:	eef0 2a47 	vmov.f32	s5, s14
 801a154:	e789      	b.n	801a06a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a156:	1406      	asrs	r6, r0, #16
 801a158:	d42d      	bmi.n	801a1b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a15a:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801a15e:	42b4      	cmp	r4, r6
 801a160:	dd29      	ble.n	801a1b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a162:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801a166:	d426      	bmi.n	801a1b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a168:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801a16c:	4562      	cmp	r2, ip
 801a16e:	dd22      	ble.n	801a1b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a170:	b224      	sxth	r4, r4
 801a172:	9a01      	ldr	r2, [sp, #4]
 801a174:	fb0c 6404 	mla	r4, ip, r4, r6
 801a178:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801a17c:	0e22      	lsrs	r2, r4, #24
 801a17e:	d01a      	beq.n	801a1b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a180:	9e04      	ldr	r6, [sp, #16]
 801a182:	4372      	muls	r2, r6
 801a184:	1c56      	adds	r6, r2, #1
 801a186:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801a18a:	1212      	asrs	r2, r2, #8
 801a18c:	0a26      	lsrs	r6, r4, #8
 801a18e:	2aff      	cmp	r2, #255	; 0xff
 801a190:	9605      	str	r6, [sp, #20]
 801a192:	d116      	bne.n	801a1c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a194:	f06f 0201 	mvn.w	r2, #1
 801a198:	fb02 fc07 	mul.w	ip, r2, r7
 801a19c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a1a0:	0962      	lsrs	r2, r4, #5
 801a1a2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a1a6:	f026 0607 	bic.w	r6, r6, #7
 801a1aa:	4316      	orrs	r6, r2
 801a1ac:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a1b0:	4326      	orrs	r6, r4
 801a1b2:	f825 600c 	strh.w	r6, [r5, ip]
 801a1b6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a1b8:	4410      	add	r0, r2
 801a1ba:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a1bc:	3f01      	subs	r7, #1
 801a1be:	4411      	add	r1, r2
 801a1c0:	e787      	b.n	801a0d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a1c2:	f06f 0601 	mvn.w	r6, #1
 801a1c6:	437e      	muls	r6, r7
 801a1c8:	fa1f fa82 	uxth.w	sl, r2
 801a1cc:	f835 8006 	ldrh.w	r8, [r5, r6]
 801a1d0:	9602      	str	r6, [sp, #8]
 801a1d2:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801a1d6:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801a1da:	43d2      	mvns	r2, r2
 801a1dc:	b2d2      	uxtb	r2, r2
 801a1de:	fb1c fc0a 	smulbb	ip, ip, sl
 801a1e2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a1e6:	fb0e ce02 	mla	lr, lr, r2, ip
 801a1ea:	b2e4      	uxtb	r4, r4
 801a1ec:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801a1f0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a1f4:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801a1f8:	fa5f f888 	uxtb.w	r8, r8
 801a1fc:	fb14 f40a 	smulbb	r4, r4, sl
 801a200:	fb08 4402 	mla	r4, r8, r2, r4
 801a204:	fa1f fe8e 	uxth.w	lr, lr
 801a208:	fb16 f60a 	smulbb	r6, r6, sl
 801a20c:	b2a4      	uxth	r4, r4
 801a20e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a212:	fb0c 6c02 	mla	ip, ip, r2, r6
 801a216:	f10e 0201 	add.w	r2, lr, #1
 801a21a:	1c66      	adds	r6, r4, #1
 801a21c:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801a220:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801a224:	fa1f fc8c 	uxth.w	ip, ip
 801a228:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a22c:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801a230:	ea46 0e0e 	orr.w	lr, r6, lr
 801a234:	f10c 0601 	add.w	r6, ip, #1
 801a238:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801a23c:	0976      	lsrs	r6, r6, #5
 801a23e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a242:	9a02      	ldr	r2, [sp, #8]
 801a244:	ea4e 0e06 	orr.w	lr, lr, r6
 801a248:	f825 e002 	strh.w	lr, [r5, r2]
 801a24c:	e7b3      	b.n	801a1b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a24e:	f04f 0800 	mov.w	r8, #0
 801a252:	eba3 0208 	sub.w	r2, r3, r8
 801a256:	2a00      	cmp	r2, #0
 801a258:	f77f af3e 	ble.w	801a0d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a25c:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801a260:	1404      	asrs	r4, r0, #16
 801a262:	140a      	asrs	r2, r1, #16
 801a264:	fb06 4202 	mla	r2, r6, r2, r4
 801a268:	9c01      	ldr	r4, [sp, #4]
 801a26a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801a26e:	0e22      	lsrs	r2, r4, #24
 801a270:	d016      	beq.n	801a2a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801a272:	9e04      	ldr	r6, [sp, #16]
 801a274:	4372      	muls	r2, r6
 801a276:	1c56      	adds	r6, r2, #1
 801a278:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801a27c:	1212      	asrs	r2, r2, #8
 801a27e:	2aff      	cmp	r2, #255	; 0xff
 801a280:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801a284:	d113      	bne.n	801a2ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801a286:	0962      	lsrs	r2, r4, #5
 801a288:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a28c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a290:	f026 0607 	bic.w	r6, r6, #7
 801a294:	4316      	orrs	r6, r2
 801a296:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a29a:	4326      	orrs	r6, r4
 801a29c:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801a2a0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a2a2:	4410      	add	r0, r2
 801a2a4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a2a6:	f108 0801 	add.w	r8, r8, #1
 801a2aa:	4411      	add	r1, r2
 801a2ac:	e7d1      	b.n	801a252 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801a2ae:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801a2b2:	fa1f fa82 	uxth.w	sl, r2
 801a2b6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a2ba:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801a2be:	43d2      	mvns	r2, r2
 801a2c0:	b2d2      	uxtb	r2, r2
 801a2c2:	fb17 f70a 	smulbb	r7, r7, sl
 801a2c6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a2ca:	fb0c 7c02 	mla	ip, ip, r2, r7
 801a2ce:	b2e4      	uxtb	r4, r4
 801a2d0:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a2d4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a2d8:	fa5f fe8e 	uxtb.w	lr, lr
 801a2dc:	fb14 f40a 	smulbb	r4, r4, sl
 801a2e0:	fb0e 4402 	mla	r4, lr, r2, r4
 801a2e4:	b2f6      	uxtb	r6, r6
 801a2e6:	fa1f fc8c 	uxth.w	ip, ip
 801a2ea:	fb16 f60a 	smulbb	r6, r6, sl
 801a2ee:	b2a4      	uxth	r4, r4
 801a2f0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a2f4:	fb07 6702 	mla	r7, r7, r2, r6
 801a2f8:	f10c 0201 	add.w	r2, ip, #1
 801a2fc:	1c66      	adds	r6, r4, #1
 801a2fe:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801a302:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801a306:	b2bf      	uxth	r7, r7
 801a308:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a30c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a310:	ea46 0c0c 	orr.w	ip, r6, ip
 801a314:	1c7e      	adds	r6, r7, #1
 801a316:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801a31a:	0976      	lsrs	r6, r6, #5
 801a31c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a320:	ea4c 0c06 	orr.w	ip, ip, r6
 801a324:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801a328:	e7ba      	b.n	801a2a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801a32a:	b007      	add	sp, #28
 801a32c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a330 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a330:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a334:	b085      	sub	sp, #20
 801a336:	468b      	mov	fp, r1
 801a338:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a33a:	9203      	str	r2, [sp, #12]
 801a33c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a340:	6841      	ldr	r1, [r0, #4]
 801a342:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801a346:	fb01 2404 	mla	r4, r1, r4, r2
 801a34a:	6802      	ldr	r2, [r0, #0]
 801a34c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a350:	f8d8 2000 	ldr.w	r2, [r8]
 801a354:	9201      	str	r2, [sp, #4]
 801a356:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a35a:	f1bb 0f00 	cmp.w	fp, #0
 801a35e:	dc03      	bgt.n	801a368 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a360:	9a03      	ldr	r2, [sp, #12]
 801a362:	2a00      	cmp	r2, #0
 801a364:	f340 814f 	ble.w	801a606 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801a368:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a36a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801a36e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801a372:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a376:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a378:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a37c:	2b00      	cmp	r3, #0
 801a37e:	dd0e      	ble.n	801a39e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a380:	1408      	asrs	r0, r1, #16
 801a382:	d405      	bmi.n	801a390 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a384:	42b8      	cmp	r0, r7
 801a386:	da03      	bge.n	801a390 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a388:	1410      	asrs	r0, r2, #16
 801a38a:	d401      	bmi.n	801a390 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a38c:	42b0      	cmp	r0, r6
 801a38e:	db07      	blt.n	801a3a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a390:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a392:	4401      	add	r1, r0
 801a394:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a396:	3b01      	subs	r3, #1
 801a398:	4402      	add	r2, r0
 801a39a:	3402      	adds	r4, #2
 801a39c:	e7ee      	b.n	801a37c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a39e:	d017      	beq.n	801a3d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a3a0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a3a2:	1e58      	subs	r0, r3, #1
 801a3a4:	fb05 1500 	mla	r5, r5, r0, r1
 801a3a8:	142d      	asrs	r5, r5, #16
 801a3aa:	d409      	bmi.n	801a3c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a3ac:	42bd      	cmp	r5, r7
 801a3ae:	da07      	bge.n	801a3c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a3b0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a3b2:	fb05 2000 	mla	r0, r5, r0, r2
 801a3b6:	1400      	asrs	r0, r0, #16
 801a3b8:	d402      	bmi.n	801a3c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a3ba:	42b0      	cmp	r0, r6
 801a3bc:	f2c0 80ba 	blt.w	801a534 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a3c0:	2600      	movs	r6, #0
 801a3c2:	1998      	adds	r0, r3, r6
 801a3c4:	2800      	cmp	r0, #0
 801a3c6:	dc3e      	bgt.n	801a446 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a3c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a3cc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a3d0:	f1bb 0f00 	cmp.w	fp, #0
 801a3d4:	f340 8117 	ble.w	801a606 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801a3d8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a3dc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a3e0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a3e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a3e6:	f1bb 0b01 	subs.w	fp, fp, #1
 801a3ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a3ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a3f2:	eeb0 6a62 	vmov.f32	s12, s5
 801a3f6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a3fa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a3fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a402:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a406:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a40a:	eeb0 6a43 	vmov.f32	s12, s6
 801a40e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a412:	ee12 2a90 	vmov	r2, s5
 801a416:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a41a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a41e:	ee13 2a10 	vmov	r2, s6
 801a422:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a426:	9311      	str	r3, [sp, #68]	; 0x44
 801a428:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a42a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a42e:	9a03      	ldr	r2, [sp, #12]
 801a430:	9312      	str	r3, [sp, #72]	; 0x48
 801a432:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a436:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a438:	eeb0 3a67 	vmov.f32	s6, s15
 801a43c:	bf08      	it	eq
 801a43e:	4613      	moveq	r3, r2
 801a440:	eef0 2a47 	vmov.f32	s5, s14
 801a444:	e789      	b.n	801a35a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801a446:	140f      	asrs	r7, r1, #16
 801a448:	d424      	bmi.n	801a494 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a44a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801a44e:	42bd      	cmp	r5, r7
 801a450:	dd20      	ble.n	801a494 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a452:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a456:	d41d      	bmi.n	801a494 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a458:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801a45c:	4560      	cmp	r0, ip
 801a45e:	dd19      	ble.n	801a494 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a460:	b22d      	sxth	r5, r5
 801a462:	fb0c 7505 	mla	r5, ip, r5, r7
 801a466:	9801      	ldr	r0, [sp, #4]
 801a468:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801a46c:	0e07      	lsrs	r7, r0, #24
 801a46e:	2fff      	cmp	r7, #255	; 0xff
 801a470:	d116      	bne.n	801a4a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a472:	f06f 0501 	mvn.w	r5, #1
 801a476:	fb05 f706 	mul.w	r7, r5, r6
 801a47a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801a47e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801a482:	0945      	lsrs	r5, r0, #5
 801a484:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a488:	ea4c 0505 	orr.w	r5, ip, r5
 801a48c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a490:	4305      	orrs	r5, r0
 801a492:	53e5      	strh	r5, [r4, r7]
 801a494:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a496:	4401      	add	r1, r0
 801a498:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a49a:	3e01      	subs	r6, #1
 801a49c:	4402      	add	r2, r0
 801a49e:	e790      	b.n	801a3c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a4a0:	b2fd      	uxtb	r5, r7
 801a4a2:	2f00      	cmp	r7, #0
 801a4a4:	d0f6      	beq.n	801a494 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a4a6:	f06f 0701 	mvn.w	r7, #1
 801a4aa:	4377      	muls	r7, r6
 801a4ac:	fa1f f985 	uxth.w	r9, r5
 801a4b0:	f834 e007 	ldrh.w	lr, [r4, r7]
 801a4b4:	9702      	str	r7, [sp, #8]
 801a4b6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a4ba:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a4be:	43ed      	mvns	r5, r5
 801a4c0:	b2ed      	uxtb	r5, r5
 801a4c2:	fb17 f709 	smulbb	r7, r7, r9
 801a4c6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a4ca:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a4ce:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a4d2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a4d6:	b2c0      	uxtb	r0, r0
 801a4d8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a4dc:	fa5f fe8e 	uxtb.w	lr, lr
 801a4e0:	fb10 f009 	smulbb	r0, r0, r9
 801a4e4:	fb0e 0005 	mla	r0, lr, r5, r0
 801a4e8:	b280      	uxth	r0, r0
 801a4ea:	fa1f fc8c 	uxth.w	ip, ip
 801a4ee:	fb1a fa09 	smulbb	sl, sl, r9
 801a4f2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a4f6:	fb07 a705 	mla	r7, r7, r5, sl
 801a4fa:	f100 0a01 	add.w	sl, r0, #1
 801a4fe:	f10c 0501 	add.w	r5, ip, #1
 801a502:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801a506:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a50a:	b2bf      	uxth	r7, r7
 801a50c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a510:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a514:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a518:	f107 0a01 	add.w	sl, r7, #1
 801a51c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a520:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a524:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a528:	9802      	ldr	r0, [sp, #8]
 801a52a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a52e:	f824 c000 	strh.w	ip, [r4, r0]
 801a532:	e7af      	b.n	801a494 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a534:	f04f 0e00 	mov.w	lr, #0
 801a538:	eba3 000e 	sub.w	r0, r3, lr
 801a53c:	2800      	cmp	r0, #0
 801a53e:	f77f af43 	ble.w	801a3c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a542:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801a546:	140d      	asrs	r5, r1, #16
 801a548:	1410      	asrs	r0, r2, #16
 801a54a:	fb06 5000 	mla	r0, r6, r0, r5
 801a54e:	9d01      	ldr	r5, [sp, #4]
 801a550:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801a554:	0e2e      	lsrs	r6, r5, #24
 801a556:	2eff      	cmp	r6, #255	; 0xff
 801a558:	d112      	bne.n	801a580 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801a55a:	482c      	ldr	r0, [pc, #176]	; (801a60c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801a55c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801a560:	0968      	lsrs	r0, r5, #5
 801a562:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a566:	4330      	orrs	r0, r6
 801a568:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a56c:	4328      	orrs	r0, r5
 801a56e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801a572:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a574:	4401      	add	r1, r0
 801a576:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a578:	f10e 0e01 	add.w	lr, lr, #1
 801a57c:	4402      	add	r2, r0
 801a57e:	e7db      	b.n	801a538 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801a580:	b2f0      	uxtb	r0, r6
 801a582:	2e00      	cmp	r6, #0
 801a584:	d0f5      	beq.n	801a572 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a586:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801a58a:	fa1f f980 	uxth.w	r9, r0
 801a58e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a592:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a596:	43c0      	mvns	r0, r0
 801a598:	b2c0      	uxtb	r0, r0
 801a59a:	fb16 f609 	smulbb	r6, r6, r9
 801a59e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a5a2:	fb07 6700 	mla	r7, r7, r0, r6
 801a5a6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a5aa:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a5ae:	b2ed      	uxtb	r5, r5
 801a5b0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a5b4:	fa5f fc8c 	uxtb.w	ip, ip
 801a5b8:	fb15 f509 	smulbb	r5, r5, r9
 801a5bc:	fb0c 5500 	mla	r5, ip, r0, r5
 801a5c0:	b2bf      	uxth	r7, r7
 801a5c2:	fb1a fa09 	smulbb	sl, sl, r9
 801a5c6:	b2ad      	uxth	r5, r5
 801a5c8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a5cc:	fb06 a600 	mla	r6, r6, r0, sl
 801a5d0:	1c78      	adds	r0, r7, #1
 801a5d2:	f105 0a01 	add.w	sl, r5, #1
 801a5d6:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801a5da:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a5de:	b2b6      	uxth	r6, r6
 801a5e0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a5e4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a5e8:	ea4a 0707 	orr.w	r7, sl, r7
 801a5ec:	f106 0a01 	add.w	sl, r6, #1
 801a5f0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a5f4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a5f8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a5fc:	ea47 070a 	orr.w	r7, r7, sl
 801a600:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801a604:	e7b5      	b.n	801a572 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a606:	b005      	add	sp, #20
 801a608:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a60c:	fffff800 	.word	0xfffff800

0801a610 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a610:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a614:	b087      	sub	sp, #28
 801a616:	468b      	mov	fp, r1
 801a618:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a61a:	9203      	str	r2, [sp, #12]
 801a61c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a620:	9204      	str	r2, [sp, #16]
 801a622:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a626:	6841      	ldr	r1, [r0, #4]
 801a628:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801a62c:	fb01 2404 	mla	r4, r1, r4, r2
 801a630:	6802      	ldr	r2, [r0, #0]
 801a632:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a636:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801a63a:	3201      	adds	r2, #1
 801a63c:	f022 0201 	bic.w	r2, r2, #1
 801a640:	9200      	str	r2, [sp, #0]
 801a642:	f8d9 2000 	ldr.w	r2, [r9]
 801a646:	9201      	str	r2, [sp, #4]
 801a648:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a64c:	f1bb 0f00 	cmp.w	fp, #0
 801a650:	dc03      	bgt.n	801a65a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a652:	9a03      	ldr	r2, [sp, #12]
 801a654:	2a00      	cmp	r2, #0
 801a656:	f340 8169 	ble.w	801a92c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a65a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a65c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a660:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a664:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a668:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a66a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a66e:	2b00      	cmp	r3, #0
 801a670:	dd0e      	ble.n	801a690 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a672:	1402      	asrs	r2, r0, #16
 801a674:	d405      	bmi.n	801a682 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a676:	42ba      	cmp	r2, r7
 801a678:	da03      	bge.n	801a682 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a67a:	140a      	asrs	r2, r1, #16
 801a67c:	d401      	bmi.n	801a682 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a67e:	42b2      	cmp	r2, r6
 801a680:	db07      	blt.n	801a692 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801a682:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a684:	4410      	add	r0, r2
 801a686:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a688:	3b01      	subs	r3, #1
 801a68a:	4411      	add	r1, r2
 801a68c:	3402      	adds	r4, #2
 801a68e:	e7ee      	b.n	801a66e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a690:	d017      	beq.n	801a6c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a692:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a694:	1e5a      	subs	r2, r3, #1
 801a696:	fb05 0502 	mla	r5, r5, r2, r0
 801a69a:	142d      	asrs	r5, r5, #16
 801a69c:	d409      	bmi.n	801a6b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a69e:	42bd      	cmp	r5, r7
 801a6a0:	da07      	bge.n	801a6b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a6a2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a6a4:	fb05 1202 	mla	r2, r5, r2, r1
 801a6a8:	1412      	asrs	r2, r2, #16
 801a6aa:	d402      	bmi.n	801a6b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a6ac:	42b2      	cmp	r2, r6
 801a6ae:	f2c0 80c7 	blt.w	801a840 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801a6b2:	2700      	movs	r7, #0
 801a6b4:	19da      	adds	r2, r3, r7
 801a6b6:	2a00      	cmp	r2, #0
 801a6b8:	dc3e      	bgt.n	801a738 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a6ba:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a6be:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a6c2:	f1bb 0f00 	cmp.w	fp, #0
 801a6c6:	f340 8131 	ble.w	801a92c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a6ca:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a6ce:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a6d2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a6d6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a6d8:	f1bb 0b01 	subs.w	fp, fp, #1
 801a6dc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a6e0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a6e4:	eeb0 6a62 	vmov.f32	s12, s5
 801a6e8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a6ec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a6f0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a6f4:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a6f8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a6fc:	eeb0 6a43 	vmov.f32	s12, s6
 801a700:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a704:	ee12 2a90 	vmov	r2, s5
 801a708:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a70c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a710:	ee13 2a10 	vmov	r2, s6
 801a714:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a718:	9313      	str	r3, [sp, #76]	; 0x4c
 801a71a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a71c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a720:	9a03      	ldr	r2, [sp, #12]
 801a722:	9314      	str	r3, [sp, #80]	; 0x50
 801a724:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a728:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a72a:	eeb0 3a67 	vmov.f32	s6, s15
 801a72e:	bf08      	it	eq
 801a730:	4613      	moveq	r3, r2
 801a732:	eef0 2a47 	vmov.f32	s5, s14
 801a736:	e789      	b.n	801a64c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a738:	1405      	asrs	r5, r0, #16
 801a73a:	d435      	bmi.n	801a7a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a73c:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801a740:	42aa      	cmp	r2, r5
 801a742:	dd31      	ble.n	801a7a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a744:	140e      	asrs	r6, r1, #16
 801a746:	d42f      	bmi.n	801a7a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a748:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801a74c:	42b2      	cmp	r2, r6
 801a74e:	dd2b      	ble.n	801a7a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a750:	9a00      	ldr	r2, [sp, #0]
 801a752:	fb06 5502 	mla	r5, r6, r2, r5
 801a756:	086a      	lsrs	r2, r5, #1
 801a758:	9e01      	ldr	r6, [sp, #4]
 801a75a:	5cb2      	ldrb	r2, [r6, r2]
 801a75c:	07ee      	lsls	r6, r5, #31
 801a75e:	bf54      	ite	pl
 801a760:	f002 020f 	andpl.w	r2, r2, #15
 801a764:	1112      	asrmi	r2, r2, #4
 801a766:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a76a:	b2d2      	uxtb	r2, r2
 801a76c:	b1e2      	cbz	r2, 801a7a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a76e:	9d04      	ldr	r5, [sp, #16]
 801a770:	436a      	muls	r2, r5
 801a772:	1c55      	adds	r5, r2, #1
 801a774:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801a778:	4d6e      	ldr	r5, [pc, #440]	; (801a934 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801a77a:	682d      	ldr	r5, [r5, #0]
 801a77c:	1212      	asrs	r2, r2, #8
 801a77e:	0a2e      	lsrs	r6, r5, #8
 801a780:	2aff      	cmp	r2, #255	; 0xff
 801a782:	9605      	str	r6, [sp, #20]
 801a784:	d116      	bne.n	801a7b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801a786:	f06f 0201 	mvn.w	r2, #1
 801a78a:	fb02 fc07 	mul.w	ip, r2, r7
 801a78e:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a792:	096a      	lsrs	r2, r5, #5
 801a794:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a798:	f026 0607 	bic.w	r6, r6, #7
 801a79c:	4316      	orrs	r6, r2
 801a79e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a7a2:	432e      	orrs	r6, r5
 801a7a4:	f824 600c 	strh.w	r6, [r4, ip]
 801a7a8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a7aa:	4410      	add	r0, r2
 801a7ac:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a7ae:	3f01      	subs	r7, #1
 801a7b0:	4411      	add	r1, r2
 801a7b2:	e77f      	b.n	801a6b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801a7b4:	f06f 0601 	mvn.w	r6, #1
 801a7b8:	437e      	muls	r6, r7
 801a7ba:	fa1f fa82 	uxth.w	sl, r2
 801a7be:	f834 8006 	ldrh.w	r8, [r4, r6]
 801a7c2:	9602      	str	r6, [sp, #8]
 801a7c4:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801a7c8:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801a7cc:	43d2      	mvns	r2, r2
 801a7ce:	b2d2      	uxtb	r2, r2
 801a7d0:	fb1c fc0a 	smulbb	ip, ip, sl
 801a7d4:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a7d8:	fb0e ce02 	mla	lr, lr, r2, ip
 801a7dc:	b2ed      	uxtb	r5, r5
 801a7de:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801a7e2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a7e6:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801a7ea:	fa5f f888 	uxtb.w	r8, r8
 801a7ee:	fb15 f50a 	smulbb	r5, r5, sl
 801a7f2:	fb08 5502 	mla	r5, r8, r2, r5
 801a7f6:	fa1f fe8e 	uxth.w	lr, lr
 801a7fa:	fb16 f60a 	smulbb	r6, r6, sl
 801a7fe:	b2ad      	uxth	r5, r5
 801a800:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a804:	fb0c 6c02 	mla	ip, ip, r2, r6
 801a808:	f10e 0201 	add.w	r2, lr, #1
 801a80c:	1c6e      	adds	r6, r5, #1
 801a80e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801a812:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801a816:	fa1f fc8c 	uxth.w	ip, ip
 801a81a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a81e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801a822:	ea46 0e0e 	orr.w	lr, r6, lr
 801a826:	f10c 0601 	add.w	r6, ip, #1
 801a82a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801a82e:	0976      	lsrs	r6, r6, #5
 801a830:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a834:	9a02      	ldr	r2, [sp, #8]
 801a836:	ea4e 0e06 	orr.w	lr, lr, r6
 801a83a:	f824 e002 	strh.w	lr, [r4, r2]
 801a83e:	e7b3      	b.n	801a7a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a840:	f04f 0800 	mov.w	r8, #0
 801a844:	eba3 0208 	sub.w	r2, r3, r8
 801a848:	2a00      	cmp	r2, #0
 801a84a:	f77f af36 	ble.w	801a6ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801a84e:	9e00      	ldr	r6, [sp, #0]
 801a850:	1402      	asrs	r2, r0, #16
 801a852:	140d      	asrs	r5, r1, #16
 801a854:	fb06 2505 	mla	r5, r6, r5, r2
 801a858:	086a      	lsrs	r2, r5, #1
 801a85a:	9e01      	ldr	r6, [sp, #4]
 801a85c:	5cb2      	ldrb	r2, [r6, r2]
 801a85e:	07ed      	lsls	r5, r5, #31
 801a860:	bf54      	ite	pl
 801a862:	f002 020f 	andpl.w	r2, r2, #15
 801a866:	1112      	asrmi	r2, r2, #4
 801a868:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a86c:	b2d2      	uxtb	r2, r2
 801a86e:	b1c2      	cbz	r2, 801a8a2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801a870:	9d04      	ldr	r5, [sp, #16]
 801a872:	436a      	muls	r2, r5
 801a874:	1c55      	adds	r5, r2, #1
 801a876:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801a87a:	4d2e      	ldr	r5, [pc, #184]	; (801a934 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801a87c:	1212      	asrs	r2, r2, #8
 801a87e:	682e      	ldr	r6, [r5, #0]
 801a880:	2aff      	cmp	r2, #255	; 0xff
 801a882:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801a886:	d113      	bne.n	801a8b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801a888:	0972      	lsrs	r2, r6, #5
 801a88a:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801a88e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a892:	f025 0507 	bic.w	r5, r5, #7
 801a896:	4315      	orrs	r5, r2
 801a898:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801a89c:	4335      	orrs	r5, r6
 801a89e:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801a8a2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a8a4:	4410      	add	r0, r2
 801a8a6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a8a8:	f108 0801 	add.w	r8, r8, #1
 801a8ac:	4411      	add	r1, r2
 801a8ae:	e7c9      	b.n	801a844 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a8b0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801a8b4:	fa1f fa82 	uxth.w	sl, r2
 801a8b8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a8bc:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801a8c0:	43d2      	mvns	r2, r2
 801a8c2:	b2d2      	uxtb	r2, r2
 801a8c4:	fb17 f70a 	smulbb	r7, r7, sl
 801a8c8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a8cc:	fb0c 7c02 	mla	ip, ip, r2, r7
 801a8d0:	b2f6      	uxtb	r6, r6
 801a8d2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a8d6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a8da:	fa5f fe8e 	uxtb.w	lr, lr
 801a8de:	fb16 f60a 	smulbb	r6, r6, sl
 801a8e2:	fb0e 6602 	mla	r6, lr, r2, r6
 801a8e6:	b2ed      	uxtb	r5, r5
 801a8e8:	fa1f fc8c 	uxth.w	ip, ip
 801a8ec:	fb15 f50a 	smulbb	r5, r5, sl
 801a8f0:	b2b6      	uxth	r6, r6
 801a8f2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a8f6:	fb07 5702 	mla	r7, r7, r2, r5
 801a8fa:	f10c 0201 	add.w	r2, ip, #1
 801a8fe:	1c75      	adds	r5, r6, #1
 801a900:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801a904:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801a908:	b2bf      	uxth	r7, r7
 801a90a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a90e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a912:	ea45 0c0c 	orr.w	ip, r5, ip
 801a916:	1c7d      	adds	r5, r7, #1
 801a918:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801a91c:	096d      	lsrs	r5, r5, #5
 801a91e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a922:	ea4c 0c05 	orr.w	ip, ip, r5
 801a926:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801a92a:	e7ba      	b.n	801a8a2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801a92c:	b007      	add	sp, #28
 801a92e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a932:	bf00      	nop
 801a934:	20020a98 	.word	0x20020a98

0801a938 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a938:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a93c:	b087      	sub	sp, #28
 801a93e:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801ac4c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801a942:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a944:	9205      	str	r2, [sp, #20]
 801a946:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a94a:	9101      	str	r1, [sp, #4]
 801a94c:	6841      	ldr	r1, [r0, #4]
 801a94e:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801a952:	fb01 2404 	mla	r4, r1, r4, r2
 801a956:	6802      	ldr	r2, [r0, #0]
 801a958:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a95c:	f8db 2008 	ldr.w	r2, [fp, #8]
 801a960:	3201      	adds	r2, #1
 801a962:	f022 0201 	bic.w	r2, r2, #1
 801a966:	9202      	str	r2, [sp, #8]
 801a968:	f8db 2000 	ldr.w	r2, [fp]
 801a96c:	9203      	str	r2, [sp, #12]
 801a96e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a972:	9a01      	ldr	r2, [sp, #4]
 801a974:	2a00      	cmp	r2, #0
 801a976:	dc03      	bgt.n	801a980 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801a978:	9a05      	ldr	r2, [sp, #20]
 801a97a:	2a00      	cmp	r2, #0
 801a97c:	f340 8162 	ble.w	801ac44 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801a980:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a982:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801a986:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801a98a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a98e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a990:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a994:	2b00      	cmp	r3, #0
 801a996:	dd0e      	ble.n	801a9b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a998:	1402      	asrs	r2, r0, #16
 801a99a:	d405      	bmi.n	801a9a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a99c:	42ba      	cmp	r2, r7
 801a99e:	da03      	bge.n	801a9a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a9a0:	140a      	asrs	r2, r1, #16
 801a9a2:	d401      	bmi.n	801a9a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a9a4:	42b2      	cmp	r2, r6
 801a9a6:	db07      	blt.n	801a9b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a9a8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a9aa:	4410      	add	r0, r2
 801a9ac:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a9ae:	3b01      	subs	r3, #1
 801a9b0:	4411      	add	r1, r2
 801a9b2:	3402      	adds	r4, #2
 801a9b4:	e7ee      	b.n	801a994 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801a9b6:	d017      	beq.n	801a9e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801a9b8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a9ba:	1e5a      	subs	r2, r3, #1
 801a9bc:	fb05 0502 	mla	r5, r5, r2, r0
 801a9c0:	142d      	asrs	r5, r5, #16
 801a9c2:	d409      	bmi.n	801a9d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a9c4:	42bd      	cmp	r5, r7
 801a9c6:	da07      	bge.n	801a9d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a9c8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a9ca:	fb05 1202 	mla	r2, r5, r2, r1
 801a9ce:	1412      	asrs	r2, r2, #16
 801a9d0:	d402      	bmi.n	801a9d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a9d2:	42b2      	cmp	r2, r6
 801a9d4:	f2c0 80c3 	blt.w	801ab5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801a9d8:	2500      	movs	r5, #0
 801a9da:	195a      	adds	r2, r3, r5
 801a9dc:	2a00      	cmp	r2, #0
 801a9de:	dc3f      	bgt.n	801aa60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a9e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a9e4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a9e8:	9b01      	ldr	r3, [sp, #4]
 801a9ea:	2b00      	cmp	r3, #0
 801a9ec:	f340 812a 	ble.w	801ac44 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801a9f0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a9f4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a9f8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a9fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a9fe:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aa02:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aa06:	eeb0 6a62 	vmov.f32	s12, s5
 801aa0a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aa0e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aa12:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aa16:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801aa1a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801aa1e:	eeb0 6a43 	vmov.f32	s12, s6
 801aa22:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801aa26:	ee12 2a90 	vmov	r2, s5
 801aa2a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aa2e:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa32:	ee13 2a10 	vmov	r2, s6
 801aa36:	9313      	str	r3, [sp, #76]	; 0x4c
 801aa38:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aa3a:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa3e:	9314      	str	r3, [sp, #80]	; 0x50
 801aa40:	9b01      	ldr	r3, [sp, #4]
 801aa42:	9a05      	ldr	r2, [sp, #20]
 801aa44:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aa48:	3b01      	subs	r3, #1
 801aa4a:	9301      	str	r3, [sp, #4]
 801aa4c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801aa50:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aa52:	eeb0 3a67 	vmov.f32	s6, s15
 801aa56:	bf08      	it	eq
 801aa58:	4613      	moveq	r3, r2
 801aa5a:	eef0 2a47 	vmov.f32	s5, s14
 801aa5e:	e788      	b.n	801a972 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801aa60:	1406      	asrs	r6, r0, #16
 801aa62:	d42c      	bmi.n	801aabe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801aa64:	f8db 2008 	ldr.w	r2, [fp, #8]
 801aa68:	42b2      	cmp	r2, r6
 801aa6a:	dd28      	ble.n	801aabe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801aa6c:	140f      	asrs	r7, r1, #16
 801aa6e:	d426      	bmi.n	801aabe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801aa70:	f8db 200c 	ldr.w	r2, [fp, #12]
 801aa74:	42ba      	cmp	r2, r7
 801aa76:	dd22      	ble.n	801aabe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801aa78:	9a02      	ldr	r2, [sp, #8]
 801aa7a:	fb07 6602 	mla	r6, r7, r2, r6
 801aa7e:	0872      	lsrs	r2, r6, #1
 801aa80:	9f03      	ldr	r7, [sp, #12]
 801aa82:	5cba      	ldrb	r2, [r7, r2]
 801aa84:	07f6      	lsls	r6, r6, #31
 801aa86:	bf54      	ite	pl
 801aa88:	f002 020f 	andpl.w	r2, r2, #15
 801aa8c:	1112      	asrmi	r2, r2, #4
 801aa8e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801aa92:	b2d2      	uxtb	r2, r2
 801aa94:	2aff      	cmp	r2, #255	; 0xff
 801aa96:	d118      	bne.n	801aaca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801aa98:	f8d8 2000 	ldr.w	r2, [r8]
 801aa9c:	f06f 0601 	mvn.w	r6, #1
 801aaa0:	fb06 f705 	mul.w	r7, r6, r5
 801aaa4:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801aaa8:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801aaac:	0956      	lsrs	r6, r2, #5
 801aaae:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801aab2:	ea4c 0606 	orr.w	r6, ip, r6
 801aab6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801aaba:	4316      	orrs	r6, r2
 801aabc:	53e6      	strh	r6, [r4, r7]
 801aabe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801aac0:	4410      	add	r0, r2
 801aac2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801aac4:	3d01      	subs	r5, #1
 801aac6:	4411      	add	r1, r2
 801aac8:	e787      	b.n	801a9da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801aaca:	2a00      	cmp	r2, #0
 801aacc:	d0f7      	beq.n	801aabe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801aace:	f06f 0601 	mvn.w	r6, #1
 801aad2:	436e      	muls	r6, r5
 801aad4:	f8d8 c000 	ldr.w	ip, [r8]
 801aad8:	f834 e006 	ldrh.w	lr, [r4, r6]
 801aadc:	9604      	str	r6, [sp, #16]
 801aade:	fa1f f982 	uxth.w	r9, r2
 801aae2:	ea4f 272e 	mov.w	r7, lr, asr #8
 801aae6:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801aaea:	43d2      	mvns	r2, r2
 801aaec:	b2d2      	uxtb	r2, r2
 801aaee:	fb16 f609 	smulbb	r6, r6, r9
 801aaf2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801aaf6:	fb07 6702 	mla	r7, r7, r2, r6
 801aafa:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801aafe:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801ab02:	fa5f fc8c 	uxtb.w	ip, ip
 801ab06:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ab0a:	fa5f fe8e 	uxtb.w	lr, lr
 801ab0e:	fb1c fc09 	smulbb	ip, ip, r9
 801ab12:	fb0e cc02 	mla	ip, lr, r2, ip
 801ab16:	b2bf      	uxth	r7, r7
 801ab18:	fb1a fa09 	smulbb	sl, sl, r9
 801ab1c:	fa1f fc8c 	uxth.w	ip, ip
 801ab20:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ab24:	fb06 a602 	mla	r6, r6, r2, sl
 801ab28:	1c7a      	adds	r2, r7, #1
 801ab2a:	f10c 0a01 	add.w	sl, ip, #1
 801ab2e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801ab32:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801ab36:	b2b6      	uxth	r6, r6
 801ab38:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ab3c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801ab40:	ea4a 0707 	orr.w	r7, sl, r7
 801ab44:	f106 0a01 	add.w	sl, r6, #1
 801ab48:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ab4c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ab50:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ab54:	9a04      	ldr	r2, [sp, #16]
 801ab56:	ea47 070a 	orr.w	r7, r7, sl
 801ab5a:	52a7      	strh	r7, [r4, r2]
 801ab5c:	e7af      	b.n	801aabe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ab5e:	f04f 0e00 	mov.w	lr, #0
 801ab62:	eba3 020e 	sub.w	r2, r3, lr
 801ab66:	2a00      	cmp	r2, #0
 801ab68:	f77f af3a 	ble.w	801a9e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801ab6c:	9e02      	ldr	r6, [sp, #8]
 801ab6e:	1402      	asrs	r2, r0, #16
 801ab70:	140d      	asrs	r5, r1, #16
 801ab72:	fb06 2505 	mla	r5, r6, r5, r2
 801ab76:	086a      	lsrs	r2, r5, #1
 801ab78:	9e03      	ldr	r6, [sp, #12]
 801ab7a:	5cb2      	ldrb	r2, [r6, r2]
 801ab7c:	07ed      	lsls	r5, r5, #31
 801ab7e:	bf54      	ite	pl
 801ab80:	f002 020f 	andpl.w	r2, r2, #15
 801ab84:	1112      	asrmi	r2, r2, #4
 801ab86:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ab8a:	b2d2      	uxtb	r2, r2
 801ab8c:	2aff      	cmp	r2, #255	; 0xff
 801ab8e:	d115      	bne.n	801abbc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801ab90:	f8d8 5000 	ldr.w	r5, [r8]
 801ab94:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801ab98:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801ab9c:	096a      	lsrs	r2, r5, #5
 801ab9e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801aba2:	4332      	orrs	r2, r6
 801aba4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801aba8:	432a      	orrs	r2, r5
 801abaa:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801abae:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801abb0:	4410      	add	r0, r2
 801abb2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801abb4:	f10e 0e01 	add.w	lr, lr, #1
 801abb8:	4411      	add	r1, r2
 801abba:	e7d2      	b.n	801ab62 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801abbc:	2a00      	cmp	r2, #0
 801abbe:	d0f6      	beq.n	801abae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801abc0:	f8d8 7000 	ldr.w	r7, [r8]
 801abc4:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801abc8:	fa1f f982 	uxth.w	r9, r2
 801abcc:	ea4f 262c 	mov.w	r6, ip, asr #8
 801abd0:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801abd4:	43d2      	mvns	r2, r2
 801abd6:	b2d2      	uxtb	r2, r2
 801abd8:	fb15 f509 	smulbb	r5, r5, r9
 801abdc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801abe0:	fb06 5602 	mla	r6, r6, r2, r5
 801abe4:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801abe8:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801abec:	b2ff      	uxtb	r7, r7
 801abee:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801abf2:	fa5f fc8c 	uxtb.w	ip, ip
 801abf6:	fb17 f709 	smulbb	r7, r7, r9
 801abfa:	fb0c 7702 	mla	r7, ip, r2, r7
 801abfe:	b2b6      	uxth	r6, r6
 801ac00:	fb1a fa09 	smulbb	sl, sl, r9
 801ac04:	b2bf      	uxth	r7, r7
 801ac06:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ac0a:	fb05 a502 	mla	r5, r5, r2, sl
 801ac0e:	1c72      	adds	r2, r6, #1
 801ac10:	f107 0a01 	add.w	sl, r7, #1
 801ac14:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801ac18:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801ac1c:	b2ad      	uxth	r5, r5
 801ac1e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ac22:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801ac26:	ea4a 0606 	orr.w	r6, sl, r6
 801ac2a:	f105 0a01 	add.w	sl, r5, #1
 801ac2e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ac32:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ac36:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ac3a:	ea46 060a 	orr.w	r6, r6, sl
 801ac3e:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801ac42:	e7b4      	b.n	801abae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ac44:	b007      	add	sp, #28
 801ac46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ac4a:	bf00      	nop
 801ac4c:	20020a98 	.word	0x20020a98

0801ac50 <_ZN8touchgfx8LCD16bppD1Ev>:
 801ac50:	4770      	bx	lr

0801ac52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801ac52:	4770      	bx	lr

0801ac54 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801ac54:	4770      	bx	lr

0801ac56 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801ac56:	4770      	bx	lr

0801ac58 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801ac58:	4770      	bx	lr

0801ac5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ac5a:	4770      	bx	lr

0801ac5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ac5c:	4770      	bx	lr

0801ac5e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ac5e:	4770      	bx	lr

0801ac60 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ac60:	4770      	bx	lr

0801ac62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ac62:	4770      	bx	lr

0801ac64 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801ac64:	4770      	bx	lr

0801ac66 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ac66:	4770      	bx	lr

0801ac68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ac68:	4770      	bx	lr

0801ac6a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ac6a:	4770      	bx	lr

0801ac6c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801ac6c:	4770      	bx	lr

0801ac6e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ac6e:	4770      	bx	lr

0801ac70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ac70:	4770      	bx	lr

0801ac72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ac72:	4770      	bx	lr

0801ac74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ac74:	4770      	bx	lr

0801ac76 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ac76:	4770      	bx	lr

0801ac78 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ac78:	4770      	bx	lr

0801ac7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ac7a:	4770      	bx	lr

0801ac7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801ac7c:	4770      	bx	lr

0801ac7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ac7e:	4770      	bx	lr

0801ac80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801ac80:	4770      	bx	lr

0801ac82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ac82:	4770      	bx	lr

0801ac84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801ac84:	4770      	bx	lr

0801ac86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ac86:	4770      	bx	lr

0801ac88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801ac88:	4770      	bx	lr
	...

0801ac8c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801ac8c:	b508      	push	{r3, lr}
 801ac8e:	4b06      	ldr	r3, [pc, #24]	; (801aca8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 801ac90:	8818      	ldrh	r0, [r3, #0]
 801ac92:	b928      	cbnz	r0, 801aca0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 801ac94:	4b05      	ldr	r3, [pc, #20]	; (801acac <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 801ac96:	4a06      	ldr	r2, [pc, #24]	; (801acb0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 801ac98:	4806      	ldr	r0, [pc, #24]	; (801acb4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 801ac9a:	2150      	movs	r1, #80	; 0x50
 801ac9c:	f009 fbcc 	bl	8024438 <__assert_func>
 801aca0:	0040      	lsls	r0, r0, #1
 801aca2:	b280      	uxth	r0, r0
 801aca4:	bd08      	pop	{r3, pc}
 801aca6:	bf00      	nop
 801aca8:	20020a8a 	.word	0x20020a8a
 801acac:	0802aef4 	.word	0x0802aef4
 801acb0:	0802b4f0 	.word	0x0802b4f0
 801acb4:	0802af36 	.word	0x0802af36

0801acb8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801acb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801acbc:	b08b      	sub	sp, #44	; 0x2c
 801acbe:	460f      	mov	r7, r1
 801acc0:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801acc4:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801acc8:	4616      	mov	r6, r2
 801acca:	f1bb 0f00 	cmp.w	fp, #0
 801acce:	d049      	beq.n	801ad64 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 801acd0:	6810      	ldr	r0, [r2, #0]
 801acd2:	6851      	ldr	r1, [r2, #4]
 801acd4:	ad06      	add	r5, sp, #24
 801acd6:	c503      	stmia	r5!, {r0, r1}
 801acd8:	6818      	ldr	r0, [r3, #0]
 801acda:	6859      	ldr	r1, [r3, #4]
 801acdc:	ad08      	add	r5, sp, #32
 801acde:	c503      	stmia	r5!, {r0, r1}
 801ace0:	a806      	add	r0, sp, #24
 801ace2:	f7f9 fbeb 	bl	80144bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ace6:	4631      	mov	r1, r6
 801ace8:	a808      	add	r0, sp, #32
 801acea:	f7f9 fc0f 	bl	801450c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801acee:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801acf2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801acf6:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801acfa:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801acfe:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801ad02:	fb16 2103 	smlabb	r1, r6, r3, r2
 801ad06:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801ad0a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801ad0e:	4f5f      	ldr	r7, [pc, #380]	; (801ae8c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801ad10:	440a      	add	r2, r1
 801ad12:	f8ad 2020 	strh.w	r2, [sp, #32]
 801ad16:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801ad1a:	6838      	ldr	r0, [r7, #0]
 801ad1c:	4413      	add	r3, r2
 801ad1e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801ad22:	6803      	ldr	r3, [r0, #0]
 801ad24:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ad26:	4798      	blx	r3
 801ad28:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801ad2c:	46b9      	mov	r9, r7
 801ad2e:	d01c      	beq.n	801ad6a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 801ad30:	f010 0f04 	tst.w	r0, #4
 801ad34:	d01d      	beq.n	801ad72 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801ad36:	f8d9 0000 	ldr.w	r0, [r9]
 801ad3a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801ad3e:	6801      	ldr	r1, [r0, #0]
 801ad40:	f8cd b00c 	str.w	fp, [sp, #12]
 801ad44:	2700      	movs	r7, #0
 801ad46:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801ad4a:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801ad4e:	9402      	str	r4, [sp, #8]
 801ad50:	b2ad      	uxth	r5, r5
 801ad52:	fa1f f488 	uxth.w	r4, r8
 801ad56:	9501      	str	r5, [sp, #4]
 801ad58:	9400      	str	r4, [sp, #0]
 801ad5a:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801ad5c:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801ad60:	4631      	mov	r1, r6
 801ad62:	47a0      	blx	r4
 801ad64:	b00b      	add	sp, #44	; 0x2c
 801ad66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ad6a:	b914      	cbnz	r4, 801ad72 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801ad6c:	f010 0f01 	tst.w	r0, #1
 801ad70:	e7e0      	b.n	801ad34 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 801ad72:	f8d9 0000 	ldr.w	r0, [r9]
 801ad76:	6803      	ldr	r3, [r0, #0]
 801ad78:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ad7a:	4798      	blx	r3
 801ad7c:	4b44      	ldr	r3, [pc, #272]	; (801ae90 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801ad7e:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801ad82:	881a      	ldrh	r2, [r3, #0]
 801ad84:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801ad88:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801ad8c:	fb02 1404 	mla	r4, r2, r4, r1
 801ad90:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801ad94:	469a      	mov	sl, r3
 801ad96:	fb05 f502 	mul.w	r5, r5, r2
 801ad9a:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801ad9e:	d059      	beq.n	801ae54 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801ada0:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801ada4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ada8:	fa1f f28b 	uxth.w	r2, fp
 801adac:	fa1f f989 	uxth.w	r9, r9
 801adb0:	469e      	mov	lr, r3
 801adb2:	42ac      	cmp	r4, r5
 801adb4:	d264      	bcs.n	801ae80 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801adb6:	eb04 0a07 	add.w	sl, r4, r7
 801adba:	4554      	cmp	r4, sl
 801adbc:	d23d      	bcs.n	801ae3a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801adbe:	8821      	ldrh	r1, [r4, #0]
 801adc0:	f836 3b02 	ldrh.w	r3, [r6], #2
 801adc4:	1208      	asrs	r0, r1, #8
 801adc6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801adca:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801adce:	fb10 f009 	smulbb	r0, r0, r9
 801add2:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801add6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801adda:	00c9      	lsls	r1, r1, #3
 801addc:	fb0c 0c02 	mla	ip, ip, r2, r0
 801ade0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801ade4:	10d8      	asrs	r0, r3, #3
 801ade6:	b2c9      	uxtb	r1, r1
 801ade8:	00db      	lsls	r3, r3, #3
 801adea:	fa1f fc8c 	uxth.w	ip, ip
 801adee:	fb1b fb09 	smulbb	fp, fp, r9
 801adf2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801adf6:	b2db      	uxtb	r3, r3
 801adf8:	fb11 f109 	smulbb	r1, r1, r9
 801adfc:	fb00 b002 	mla	r0, r0, r2, fp
 801ae00:	fb03 1302 	mla	r3, r3, r2, r1
 801ae04:	f10c 0b01 	add.w	fp, ip, #1
 801ae08:	b29b      	uxth	r3, r3
 801ae0a:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801ae0e:	b280      	uxth	r0, r0
 801ae10:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801ae14:	f103 0c01 	add.w	ip, r3, #1
 801ae18:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801ae1c:	1c43      	adds	r3, r0, #1
 801ae1e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ae22:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ae26:	0940      	lsrs	r0, r0, #5
 801ae28:	ea4c 0c0b 	orr.w	ip, ip, fp
 801ae2c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ae30:	ea4c 0c00 	orr.w	ip, ip, r0
 801ae34:	f824 cb02 	strh.w	ip, [r4], #2
 801ae38:	e7bf      	b.n	801adba <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801ae3a:	f8be 3000 	ldrh.w	r3, [lr]
 801ae3e:	eba3 0308 	sub.w	r3, r3, r8
 801ae42:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ae46:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801ae4a:	eba3 0308 	sub.w	r3, r3, r8
 801ae4e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ae52:	e7ae      	b.n	801adb2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801ae54:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ae58:	f8d9 0000 	ldr.w	r0, [r9]
 801ae5c:	42ac      	cmp	r4, r5
 801ae5e:	6803      	ldr	r3, [r0, #0]
 801ae60:	d20e      	bcs.n	801ae80 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801ae62:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801ae66:	4632      	mov	r2, r6
 801ae68:	463b      	mov	r3, r7
 801ae6a:	4621      	mov	r1, r4
 801ae6c:	47c0      	blx	r8
 801ae6e:	f8ba 3000 	ldrh.w	r3, [sl]
 801ae72:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ae76:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801ae7a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ae7e:	e7eb      	b.n	801ae58 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801ae80:	4b02      	ldr	r3, [pc, #8]	; (801ae8c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801ae82:	6818      	ldr	r0, [r3, #0]
 801ae84:	6803      	ldr	r3, [r0, #0]
 801ae86:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ae88:	4798      	blx	r3
 801ae8a:	e76b      	b.n	801ad64 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 801ae8c:	20020a90 	.word	0x20020a90
 801ae90:	20020a8a 	.word	0x20020a8a

0801ae94 <_ZN8touchgfx8LCD16bppD0Ev>:
 801ae94:	b510      	push	{r4, lr}
 801ae96:	2178      	movs	r1, #120	; 0x78
 801ae98:	4604      	mov	r4, r0
 801ae9a:	f009 fa9e 	bl	80243da <_ZdlPvj>
 801ae9e:	4620      	mov	r0, r4
 801aea0:	bd10      	pop	{r4, pc}

0801aea2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801aea2:	b510      	push	{r4, lr}
 801aea4:	2104      	movs	r1, #4
 801aea6:	4604      	mov	r4, r0
 801aea8:	f009 fa97 	bl	80243da <_ZdlPvj>
 801aeac:	4620      	mov	r0, r4
 801aeae:	bd10      	pop	{r4, pc}

0801aeb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801aeb0:	b510      	push	{r4, lr}
 801aeb2:	2104      	movs	r1, #4
 801aeb4:	4604      	mov	r4, r0
 801aeb6:	f009 fa90 	bl	80243da <_ZdlPvj>
 801aeba:	4620      	mov	r0, r4
 801aebc:	bd10      	pop	{r4, pc}

0801aebe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801aebe:	b510      	push	{r4, lr}
 801aec0:	2104      	movs	r1, #4
 801aec2:	4604      	mov	r4, r0
 801aec4:	f009 fa89 	bl	80243da <_ZdlPvj>
 801aec8:	4620      	mov	r0, r4
 801aeca:	bd10      	pop	{r4, pc}

0801aecc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801aecc:	b510      	push	{r4, lr}
 801aece:	2104      	movs	r1, #4
 801aed0:	4604      	mov	r4, r0
 801aed2:	f009 fa82 	bl	80243da <_ZdlPvj>
 801aed6:	4620      	mov	r0, r4
 801aed8:	bd10      	pop	{r4, pc}

0801aeda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801aeda:	b510      	push	{r4, lr}
 801aedc:	2104      	movs	r1, #4
 801aede:	4604      	mov	r4, r0
 801aee0:	f009 fa7b 	bl	80243da <_ZdlPvj>
 801aee4:	4620      	mov	r0, r4
 801aee6:	bd10      	pop	{r4, pc}

0801aee8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801aee8:	b510      	push	{r4, lr}
 801aeea:	2104      	movs	r1, #4
 801aeec:	4604      	mov	r4, r0
 801aeee:	f009 fa74 	bl	80243da <_ZdlPvj>
 801aef2:	4620      	mov	r0, r4
 801aef4:	bd10      	pop	{r4, pc}

0801aef6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801aef6:	b510      	push	{r4, lr}
 801aef8:	2104      	movs	r1, #4
 801aefa:	4604      	mov	r4, r0
 801aefc:	f009 fa6d 	bl	80243da <_ZdlPvj>
 801af00:	4620      	mov	r0, r4
 801af02:	bd10      	pop	{r4, pc}

0801af04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801af04:	b510      	push	{r4, lr}
 801af06:	2104      	movs	r1, #4
 801af08:	4604      	mov	r4, r0
 801af0a:	f009 fa66 	bl	80243da <_ZdlPvj>
 801af0e:	4620      	mov	r0, r4
 801af10:	bd10      	pop	{r4, pc}

0801af12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801af12:	b510      	push	{r4, lr}
 801af14:	2104      	movs	r1, #4
 801af16:	4604      	mov	r4, r0
 801af18:	f009 fa5f 	bl	80243da <_ZdlPvj>
 801af1c:	4620      	mov	r0, r4
 801af1e:	bd10      	pop	{r4, pc}

0801af20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801af20:	b510      	push	{r4, lr}
 801af22:	2104      	movs	r1, #4
 801af24:	4604      	mov	r4, r0
 801af26:	f009 fa58 	bl	80243da <_ZdlPvj>
 801af2a:	4620      	mov	r0, r4
 801af2c:	bd10      	pop	{r4, pc}

0801af2e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801af2e:	b510      	push	{r4, lr}
 801af30:	2104      	movs	r1, #4
 801af32:	4604      	mov	r4, r0
 801af34:	f009 fa51 	bl	80243da <_ZdlPvj>
 801af38:	4620      	mov	r0, r4
 801af3a:	bd10      	pop	{r4, pc}

0801af3c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801af3c:	b510      	push	{r4, lr}
 801af3e:	2104      	movs	r1, #4
 801af40:	4604      	mov	r4, r0
 801af42:	f009 fa4a 	bl	80243da <_ZdlPvj>
 801af46:	4620      	mov	r0, r4
 801af48:	bd10      	pop	{r4, pc}

0801af4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801af4a:	b510      	push	{r4, lr}
 801af4c:	2104      	movs	r1, #4
 801af4e:	4604      	mov	r4, r0
 801af50:	f009 fa43 	bl	80243da <_ZdlPvj>
 801af54:	4620      	mov	r0, r4
 801af56:	bd10      	pop	{r4, pc}

0801af58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801af58:	b510      	push	{r4, lr}
 801af5a:	2104      	movs	r1, #4
 801af5c:	4604      	mov	r4, r0
 801af5e:	f009 fa3c 	bl	80243da <_ZdlPvj>
 801af62:	4620      	mov	r0, r4
 801af64:	bd10      	pop	{r4, pc}

0801af66 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801af66:	b510      	push	{r4, lr}
 801af68:	2104      	movs	r1, #4
 801af6a:	4604      	mov	r4, r0
 801af6c:	f009 fa35 	bl	80243da <_ZdlPvj>
 801af70:	4620      	mov	r0, r4
 801af72:	bd10      	pop	{r4, pc}

0801af74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801af74:	b510      	push	{r4, lr}
 801af76:	2104      	movs	r1, #4
 801af78:	4604      	mov	r4, r0
 801af7a:	f009 fa2e 	bl	80243da <_ZdlPvj>
 801af7e:	4620      	mov	r0, r4
 801af80:	bd10      	pop	{r4, pc}

0801af82 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801af82:	b510      	push	{r4, lr}
 801af84:	2104      	movs	r1, #4
 801af86:	4604      	mov	r4, r0
 801af88:	f009 fa27 	bl	80243da <_ZdlPvj>
 801af8c:	4620      	mov	r0, r4
 801af8e:	bd10      	pop	{r4, pc}

0801af90 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801af90:	b510      	push	{r4, lr}
 801af92:	2104      	movs	r1, #4
 801af94:	4604      	mov	r4, r0
 801af96:	f009 fa20 	bl	80243da <_ZdlPvj>
 801af9a:	4620      	mov	r0, r4
 801af9c:	bd10      	pop	{r4, pc}

0801af9e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801af9e:	b510      	push	{r4, lr}
 801afa0:	2104      	movs	r1, #4
 801afa2:	4604      	mov	r4, r0
 801afa4:	f009 fa19 	bl	80243da <_ZdlPvj>
 801afa8:	4620      	mov	r0, r4
 801afaa:	bd10      	pop	{r4, pc}

0801afac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801afac:	b510      	push	{r4, lr}
 801afae:	2104      	movs	r1, #4
 801afb0:	4604      	mov	r4, r0
 801afb2:	f009 fa12 	bl	80243da <_ZdlPvj>
 801afb6:	4620      	mov	r0, r4
 801afb8:	bd10      	pop	{r4, pc}

0801afba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801afba:	b510      	push	{r4, lr}
 801afbc:	2104      	movs	r1, #4
 801afbe:	4604      	mov	r4, r0
 801afc0:	f009 fa0b 	bl	80243da <_ZdlPvj>
 801afc4:	4620      	mov	r0, r4
 801afc6:	bd10      	pop	{r4, pc}

0801afc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801afc8:	b510      	push	{r4, lr}
 801afca:	2104      	movs	r1, #4
 801afcc:	4604      	mov	r4, r0
 801afce:	f009 fa04 	bl	80243da <_ZdlPvj>
 801afd2:	4620      	mov	r0, r4
 801afd4:	bd10      	pop	{r4, pc}

0801afd6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801afd6:	b510      	push	{r4, lr}
 801afd8:	2104      	movs	r1, #4
 801afda:	4604      	mov	r4, r0
 801afdc:	f009 f9fd 	bl	80243da <_ZdlPvj>
 801afe0:	4620      	mov	r0, r4
 801afe2:	bd10      	pop	{r4, pc}

0801afe4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801afe4:	b510      	push	{r4, lr}
 801afe6:	2104      	movs	r1, #4
 801afe8:	4604      	mov	r4, r0
 801afea:	f009 f9f6 	bl	80243da <_ZdlPvj>
 801afee:	4620      	mov	r0, r4
 801aff0:	bd10      	pop	{r4, pc}

0801aff2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801aff2:	b510      	push	{r4, lr}
 801aff4:	2104      	movs	r1, #4
 801aff6:	4604      	mov	r4, r0
 801aff8:	f009 f9ef 	bl	80243da <_ZdlPvj>
 801affc:	4620      	mov	r0, r4
 801affe:	bd10      	pop	{r4, pc}

0801b000 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801b000:	b510      	push	{r4, lr}
 801b002:	2104      	movs	r1, #4
 801b004:	4604      	mov	r4, r0
 801b006:	f009 f9e8 	bl	80243da <_ZdlPvj>
 801b00a:	4620      	mov	r0, r4
 801b00c:	bd10      	pop	{r4, pc}

0801b00e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801b00e:	b510      	push	{r4, lr}
 801b010:	2104      	movs	r1, #4
 801b012:	4604      	mov	r4, r0
 801b014:	f009 f9e1 	bl	80243da <_ZdlPvj>
 801b018:	4620      	mov	r0, r4
 801b01a:	bd10      	pop	{r4, pc}

0801b01c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801b01c:	b510      	push	{r4, lr}
 801b01e:	2104      	movs	r1, #4
 801b020:	4604      	mov	r4, r0
 801b022:	f009 f9da 	bl	80243da <_ZdlPvj>
 801b026:	4620      	mov	r0, r4
 801b028:	bd10      	pop	{r4, pc}
	...

0801b02c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801b02c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b02e:	4606      	mov	r6, r0
 801b030:	b087      	sub	sp, #28
 801b032:	460c      	mov	r4, r1
 801b034:	4617      	mov	r7, r2
 801b036:	461d      	mov	r5, r3
 801b038:	b333      	cbz	r3, 801b088 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801b03a:	4608      	mov	r0, r1
 801b03c:	f7f5 fbd3 	bl	80107e6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801b040:	bb10      	cbnz	r0, 801b088 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801b042:	6820      	ldr	r0, [r4, #0]
 801b044:	6861      	ldr	r1, [r4, #4]
 801b046:	4c1c      	ldr	r4, [pc, #112]	; (801b0b8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801b048:	ab04      	add	r3, sp, #16
 801b04a:	c303      	stmia	r3!, {r0, r1}
 801b04c:	a804      	add	r0, sp, #16
 801b04e:	f7f9 fa35 	bl	80144bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b052:	6820      	ldr	r0, [r4, #0]
 801b054:	6803      	ldr	r3, [r0, #0]
 801b056:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b058:	4798      	blx	r3
 801b05a:	2dff      	cmp	r5, #255	; 0xff
 801b05c:	d016      	beq.n	801b08c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801b05e:	f010 0f08 	tst.w	r0, #8
 801b062:	6820      	ldr	r0, [r4, #0]
 801b064:	d015      	beq.n	801b092 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801b066:	2400      	movs	r4, #0
 801b068:	6801      	ldr	r1, [r0, #0]
 801b06a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801b06e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b072:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801b076:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801b07a:	9401      	str	r4, [sp, #4]
 801b07c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801b080:	9400      	str	r4, [sp, #0]
 801b082:	6dcc      	ldr	r4, [r1, #92]	; 0x5c
 801b084:	4639      	mov	r1, r7
 801b086:	47a0      	blx	r4
 801b088:	b007      	add	sp, #28
 801b08a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b08c:	f010 0f02 	tst.w	r0, #2
 801b090:	e7e7      	b.n	801b062 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801b092:	6803      	ldr	r3, [r0, #0]
 801b094:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b096:	4798      	blx	r3
 801b098:	4b08      	ldr	r3, [pc, #32]	; (801b0bc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801b09a:	881a      	ldrh	r2, [r3, #0]
 801b09c:	6833      	ldr	r3, [r6, #0]
 801b09e:	e9cd 7500 	strd	r7, r5, [sp]
 801b0a2:	4601      	mov	r1, r0
 801b0a4:	69dd      	ldr	r5, [r3, #28]
 801b0a6:	4630      	mov	r0, r6
 801b0a8:	ab04      	add	r3, sp, #16
 801b0aa:	47a8      	blx	r5
 801b0ac:	6820      	ldr	r0, [r4, #0]
 801b0ae:	6803      	ldr	r3, [r0, #0]
 801b0b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b0b2:	4798      	blx	r3
 801b0b4:	e7e8      	b.n	801b088 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801b0b6:	bf00      	nop
 801b0b8:	20020a90 	.word	0x20020a90
 801b0bc:	20020a8a 	.word	0x20020a8a

0801b0c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801b0c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b0c4:	4f97      	ldr	r7, [pc, #604]	; (801b324 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x264>)
 801b0c6:	4616      	mov	r6, r2
 801b0c8:	683a      	ldr	r2, [r7, #0]
 801b0ca:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 801b0ce:	2a02      	cmp	r2, #2
 801b0d0:	b08f      	sub	sp, #60	; 0x3c
 801b0d2:	4604      	mov	r4, r0
 801b0d4:	4689      	mov	r9, r1
 801b0d6:	d106      	bne.n	801b0e6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 801b0d8:	4b93      	ldr	r3, [pc, #588]	; (801b328 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x268>)
 801b0da:	4a94      	ldr	r2, [pc, #592]	; (801b32c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 801b0dc:	f44f 7159 	mov.w	r1, #868	; 0x364
 801b0e0:	4893      	ldr	r0, [pc, #588]	; (801b330 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x270>)
 801b0e2:	f009 f9a9 	bl	8024438 <__assert_func>
 801b0e6:	ad0e      	add	r5, sp, #56	; 0x38
 801b0e8:	f825 3d24 	strh.w	r3, [r5, #-36]!
 801b0ec:	4628      	mov	r0, r5
 801b0ee:	f7fd fac9 	bl	8018684 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801b0f2:	6823      	ldr	r3, [r4, #0]
 801b0f4:	4680      	mov	r8, r0
 801b0f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801b0f8:	4620      	mov	r0, r4
 801b0fa:	4798      	blx	r3
 801b0fc:	4580      	cmp	r8, r0
 801b0fe:	d004      	beq.n	801b10a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 801b100:	4b8c      	ldr	r3, [pc, #560]	; (801b334 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 801b102:	4a8a      	ldr	r2, [pc, #552]	; (801b32c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 801b104:	f240 3166 	movw	r1, #870	; 0x366
 801b108:	e7ea      	b.n	801b0e0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 801b10a:	4628      	mov	r0, r5
 801b10c:	f7fd fa30 	bl	8018570 <_ZNK8touchgfx6Bitmap7getDataEv>
 801b110:	4680      	mov	r8, r0
 801b112:	b920      	cbnz	r0, 801b11e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 801b114:	4b88      	ldr	r3, [pc, #544]	; (801b338 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 801b116:	4a85      	ldr	r2, [pc, #532]	; (801b32c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 801b118:	f44f 715a 	mov.w	r1, #872	; 0x368
 801b11c:	e7e0      	b.n	801b0e0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 801b11e:	6830      	ldr	r0, [r6, #0]
 801b120:	6871      	ldr	r1, [r6, #4]
 801b122:	f9b6 a000 	ldrsh.w	sl, [r6]
 801b126:	ab06      	add	r3, sp, #24
 801b128:	c303      	stmia	r3!, {r0, r1}
 801b12a:	f8d9 1004 	ldr.w	r1, [r9, #4]
 801b12e:	f8d9 0000 	ldr.w	r0, [r9]
 801b132:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801b136:	ab08      	add	r3, sp, #32
 801b138:	c303      	stmia	r3!, {r0, r1}
 801b13a:	4628      	mov	r0, r5
 801b13c:	f7fd f910 	bl	8018360 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801b140:	4606      	mov	r6, r0
 801b142:	4628      	mov	r0, r5
 801b144:	f7fd f946 	bl	80183d4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801b148:	f10d 0b20 	add.w	fp, sp, #32
 801b14c:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 801b150:	a806      	add	r0, sp, #24
 801b152:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 801b156:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 801b15a:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 801b15e:	f7f9 f9ad 	bl	80144bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b162:	4658      	mov	r0, fp
 801b164:	f7f9 f9aa 	bl	80144bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b168:	a80a      	add	r0, sp, #40	; 0x28
 801b16a:	f7f9 f9a7 	bl	80144bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b16e:	4d73      	ldr	r5, [pc, #460]	; (801b33c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 801b170:	4b73      	ldr	r3, [pc, #460]	; (801b340 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 801b172:	f9b5 2000 	ldrsh.w	r2, [r5]
 801b176:	f9b3 3000 	ldrsh.w	r3, [r3]
 801b17a:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801b17e:	2100      	movs	r1, #0
 801b180:	910c      	str	r1, [sp, #48]	; 0x30
 801b182:	4658      	mov	r0, fp
 801b184:	a90c      	add	r1, sp, #48	; 0x30
 801b186:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801b18a:	f7f5 fae9 	bl	8010760 <_ZN8touchgfx4RectaNERKS0_>
 801b18e:	4658      	mov	r0, fp
 801b190:	f7f5 fb29 	bl	80107e6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801b194:	2800      	cmp	r0, #0
 801b196:	f040 8099 	bne.w	801b2cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 801b19a:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 801b19e:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 801b1a2:	4288      	cmp	r0, r1
 801b1a4:	db37      	blt.n	801b216 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 801b1a6:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 801b1aa:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801b1ae:	429a      	cmp	r2, r3
 801b1b0:	db31      	blt.n	801b216 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 801b1b2:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 801b1b6:	4430      	add	r0, r6
 801b1b8:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801b1bc:	4431      	add	r1, r6
 801b1be:	b200      	sxth	r0, r0
 801b1c0:	b209      	sxth	r1, r1
 801b1c2:	4288      	cmp	r0, r1
 801b1c4:	dc27      	bgt.n	801b216 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 801b1c6:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 801b1ca:	440a      	add	r2, r1
 801b1cc:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 801b1d0:	440b      	add	r3, r1
 801b1d2:	b212      	sxth	r2, r2
 801b1d4:	b21b      	sxth	r3, r3
 801b1d6:	429a      	cmp	r2, r3
 801b1d8:	dc1d      	bgt.n	801b216 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 801b1da:	6823      	ldr	r3, [r4, #0]
 801b1dc:	4620      	mov	r0, r4
 801b1de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b1e0:	4798      	blx	r3
 801b1e2:	4682      	mov	sl, r0
 801b1e4:	6838      	ldr	r0, [r7, #0]
 801b1e6:	6803      	ldr	r3, [r0, #0]
 801b1e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801b1ea:	4798      	blx	r3
 801b1ec:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801b1f0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801b1f4:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801b1f8:	1a5b      	subs	r3, r3, r1
 801b1fa:	b29b      	uxth	r3, r3
 801b1fc:	b21c      	sxth	r4, r3
 801b1fe:	2c00      	cmp	r4, #0
 801b200:	dc0e      	bgt.n	801b220 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x160>
 801b202:	bf1f      	itttt	ne
 801b204:	f8ad 1020 	strhne.w	r1, [sp, #32]
 801b208:	f8bd 1024 	ldrhne.w	r1, [sp, #36]	; 0x24
 801b20c:	185b      	addne	r3, r3, r1
 801b20e:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 801b212:	4644      	mov	r4, r8
 801b214:	e009      	b.n	801b22a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x16a>
 801b216:	4b4b      	ldr	r3, [pc, #300]	; (801b344 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 801b218:	4a44      	ldr	r2, [pc, #272]	; (801b32c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 801b21a:	f240 3176 	movw	r1, #886	; 0x376
 801b21e:	e75f      	b.n	801b0e0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 801b220:	1ad3      	subs	r3, r2, r3
 801b222:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801b226:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801b22a:	f9bd 602a 	ldrsh.w	r6, [sp, #42]	; 0x2a
 801b22e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801b232:	1b9b      	subs	r3, r3, r6
 801b234:	b29b      	uxth	r3, r3
 801b236:	b219      	sxth	r1, r3
 801b238:	2900      	cmp	r1, #0
 801b23a:	dd4b      	ble.n	801b2d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x214>
 801b23c:	4351      	muls	r1, r2
 801b23e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801b242:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801b246:	1acb      	subs	r3, r1, r3
 801b248:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801b24c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801b250:	2e00      	cmp	r6, #0
 801b252:	dd3b      	ble.n	801b2cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 801b254:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 801b258:	2b00      	cmp	r3, #0
 801b25a:	dd37      	ble.n	801b2cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 801b25c:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801b260:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801b264:	fb0a f90c 	mul.w	r9, sl, ip
 801b268:	eb09 0941 	add.w	r9, r9, r1, lsl #1
 801b26c:	4481      	add	r9, r0
 801b26e:	8828      	ldrh	r0, [r5, #0]
 801b270:	f9bd 5024 	ldrsh.w	r5, [sp, #36]	; 0x24
 801b274:	42ae      	cmp	r6, r5
 801b276:	bfa8      	it	ge
 801b278:	462e      	movge	r6, r5
 801b27a:	1a41      	subs	r1, r0, r1
 801b27c:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801b280:	428e      	cmp	r6, r1
 801b282:	bfa8      	it	ge
 801b284:	460e      	movge	r6, r1
 801b286:	429d      	cmp	r5, r3
 801b288:	bfa8      	it	ge
 801b28a:	461d      	movge	r5, r3
 801b28c:	4b2c      	ldr	r3, [pc, #176]	; (801b340 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 801b28e:	881b      	ldrh	r3, [r3, #0]
 801b290:	eba3 030c 	sub.w	r3, r3, ip
 801b294:	429d      	cmp	r5, r3
 801b296:	bfa8      	it	ge
 801b298:	461d      	movge	r5, r3
 801b29a:	42b0      	cmp	r0, r6
 801b29c:	d12c      	bne.n	801b2f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 801b29e:	4290      	cmp	r0, r2
 801b2a0:	d12a      	bne.n	801b2f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 801b2a2:	6838      	ldr	r0, [r7, #0]
 801b2a4:	9203      	str	r2, [sp, #12]
 801b2a6:	6803      	ldr	r3, [r0, #0]
 801b2a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b2aa:	4798      	blx	r3
 801b2ac:	07c3      	lsls	r3, r0, #31
 801b2ae:	d51a      	bpl.n	801b2e6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x226>
 801b2b0:	9a03      	ldr	r2, [sp, #12]
 801b2b2:	6838      	ldr	r0, [r7, #0]
 801b2b4:	f8ad 5026 	strh.w	r5, [sp, #38]	; 0x26
 801b2b8:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 801b2bc:	6803      	ldr	r3, [r0, #0]
 801b2be:	9200      	str	r2, [sp, #0]
 801b2c0:	6e9d      	ldr	r5, [r3, #104]	; 0x68
 801b2c2:	e89b 0006 	ldmia.w	fp, {r1, r2}
 801b2c6:	4623      	mov	r3, r4
 801b2c8:	47a8      	blx	r5
 801b2ca:	4680      	mov	r8, r0
 801b2cc:	4640      	mov	r0, r8
 801b2ce:	b00f      	add	sp, #60	; 0x3c
 801b2d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b2d4:	bf1f      	itttt	ne
 801b2d6:	f8bd 1026 	ldrhne.w	r1, [sp, #38]	; 0x26
 801b2da:	f8ad 6022 	strhne.w	r6, [sp, #34]	; 0x22
 801b2de:	185b      	addne	r3, r3, r1
 801b2e0:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 801b2e4:	e7b2      	b.n	801b24c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x18c>
 801b2e6:	6838      	ldr	r0, [r7, #0]
 801b2e8:	6803      	ldr	r3, [r0, #0]
 801b2ea:	464a      	mov	r2, r9
 801b2ec:	6b5e      	ldr	r6, [r3, #52]	; 0x34
 801b2ee:	4621      	mov	r1, r4
 801b2f0:	fb05 f30a 	mul.w	r3, r5, sl
 801b2f4:	47b0      	blx	r6
 801b2f6:	e7e9      	b.n	801b2cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 801b2f8:	4355      	muls	r5, r2
 801b2fa:	eb04 0345 	add.w	r3, r4, r5, lsl #1
 801b2fe:	9303      	str	r3, [sp, #12]
 801b300:	0076      	lsls	r6, r6, #1
 801b302:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 801b306:	9b03      	ldr	r3, [sp, #12]
 801b308:	429c      	cmp	r4, r3
 801b30a:	d2df      	bcs.n	801b2cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 801b30c:	6838      	ldr	r0, [r7, #0]
 801b30e:	6803      	ldr	r3, [r0, #0]
 801b310:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801b312:	464a      	mov	r2, r9
 801b314:	461d      	mov	r5, r3
 801b316:	4621      	mov	r1, r4
 801b318:	4633      	mov	r3, r6
 801b31a:	47a8      	blx	r5
 801b31c:	44d1      	add	r9, sl
 801b31e:	445c      	add	r4, fp
 801b320:	e7f1      	b.n	801b306 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x246>
 801b322:	bf00      	nop
 801b324:	20020a90 	.word	0x20020a90
 801b328:	0802acec 	.word	0x0802acec
 801b32c:	0802b5a0 	.word	0x0802b5a0
 801b330:	0802ad9e 	.word	0x0802ad9e
 801b334:	0802add0 	.word	0x0802add0
 801b338:	0802ae25 	.word	0x0802ae25
 801b33c:	20020a8a 	.word	0x20020a8a
 801b340:	20020a8c 	.word	0x20020a8c
 801b344:	0802ae63 	.word	0x0802ae63

0801b348 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801b348:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b34c:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801b350:	9e08      	ldr	r6, [sp, #32]
 801b352:	4688      	mov	r8, r1
 801b354:	4614      	mov	r4, r2
 801b356:	461d      	mov	r5, r3
 801b358:	2f00      	cmp	r7, #0
 801b35a:	f000 80b3 	beq.w	801b4c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801b35e:	4618      	mov	r0, r3
 801b360:	f7f5 fa41 	bl	80107e6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801b364:	2800      	cmp	r0, #0
 801b366:	f040 80ad 	bne.w	801b4c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801b36a:	f9b5 1000 	ldrsh.w	r1, [r5]
 801b36e:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801b372:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801b376:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801b37a:	fb04 1303 	mla	r3, r4, r3, r1
 801b37e:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801b382:	4365      	muls	r5, r4
 801b384:	2fff      	cmp	r7, #255	; 0xff
 801b386:	eba4 0200 	sub.w	r2, r4, r0
 801b38a:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801b38e:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801b392:	d04b      	beq.n	801b42c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 801b394:	b2bc      	uxth	r4, r7
 801b396:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801b39a:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801b39e:	fa5f f788 	uxtb.w	r7, r8
 801b3a2:	b2f3      	uxtb	r3, r6
 801b3a4:	0040      	lsls	r0, r0, #1
 801b3a6:	fb0e fe04 	mul.w	lr, lr, r4
 801b3aa:	4367      	muls	r7, r4
 801b3ac:	4363      	muls	r3, r4
 801b3ae:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801b3b2:	fa1f fc8c 	uxth.w	ip, ip
 801b3b6:	42a9      	cmp	r1, r5
 801b3b8:	f080 8084 	bcs.w	801b4c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801b3bc:	eb01 0900 	add.w	r9, r1, r0
 801b3c0:	4549      	cmp	r1, r9
 801b3c2:	d231      	bcs.n	801b428 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 801b3c4:	880a      	ldrh	r2, [r1, #0]
 801b3c6:	1214      	asrs	r4, r2, #8
 801b3c8:	10d6      	asrs	r6, r2, #3
 801b3ca:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801b3ce:	00d2      	lsls	r2, r2, #3
 801b3d0:	b2d2      	uxtb	r2, r2
 801b3d2:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801b3d6:	fb14 f40c 	smulbb	r4, r4, ip
 801b3da:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801b3de:	4474      	add	r4, lr
 801b3e0:	fb12 f20c 	smulbb	r2, r2, ip
 801b3e4:	b2a4      	uxth	r4, r4
 801b3e6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b3ea:	441a      	add	r2, r3
 801b3ec:	b292      	uxth	r2, r2
 801b3ee:	f104 0a01 	add.w	sl, r4, #1
 801b3f2:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801b3f6:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801b3fa:	fb16 f60c 	smulbb	r6, r6, ip
 801b3fe:	f102 0a01 	add.w	sl, r2, #1
 801b402:	443e      	add	r6, r7
 801b404:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801b408:	b2b6      	uxth	r6, r6
 801b40a:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801b40e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b412:	4322      	orrs	r2, r4
 801b414:	1c74      	adds	r4, r6, #1
 801b416:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801b41a:	0976      	lsrs	r6, r6, #5
 801b41c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b420:	4332      	orrs	r2, r6
 801b422:	f821 2b02 	strh.w	r2, [r1], #2
 801b426:	e7cb      	b.n	801b3c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 801b428:	4441      	add	r1, r8
 801b42a:	e7c4      	b.n	801b3b6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801b42c:	4f26      	ldr	r7, [pc, #152]	; (801b4c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x180>)
 801b42e:	0973      	lsrs	r3, r6, #5
 801b430:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b434:	ea08 0707 	and.w	r7, r8, r7
 801b438:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801b43c:	433b      	orrs	r3, r7
 801b43e:	4333      	orrs	r3, r6
 801b440:	07e6      	lsls	r6, r4, #31
 801b442:	b29b      	uxth	r3, r3
 801b444:	d50b      	bpl.n	801b45e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x116>
 801b446:	0040      	lsls	r0, r0, #1
 801b448:	0052      	lsls	r2, r2, #1
 801b44a:	42a9      	cmp	r1, r5
 801b44c:	d23a      	bcs.n	801b4c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801b44e:	180c      	adds	r4, r1, r0
 801b450:	42a1      	cmp	r1, r4
 801b452:	d202      	bcs.n	801b45a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x112>
 801b454:	f821 3b02 	strh.w	r3, [r1], #2
 801b458:	e7fa      	b.n	801b450 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x108>
 801b45a:	4411      	add	r1, r2
 801b45c:	e7f5      	b.n	801b44a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x102>
 801b45e:	078f      	lsls	r7, r1, #30
 801b460:	d008      	beq.n	801b474 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>
 801b462:	0066      	lsls	r6, r4, #1
 801b464:	460a      	mov	r2, r1
 801b466:	42aa      	cmp	r2, r5
 801b468:	d202      	bcs.n	801b470 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>
 801b46a:	8013      	strh	r3, [r2, #0]
 801b46c:	4432      	add	r2, r6
 801b46e:	e7fa      	b.n	801b466 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11e>
 801b470:	3102      	adds	r1, #2
 801b472:	3801      	subs	r0, #1
 801b474:	07c6      	lsls	r6, r0, #31
 801b476:	d50b      	bpl.n	801b490 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 801b478:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801b47c:	3a01      	subs	r2, #1
 801b47e:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801b482:	0066      	lsls	r6, r4, #1
 801b484:	42aa      	cmp	r2, r5
 801b486:	d202      	bcs.n	801b48e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801b488:	8013      	strh	r3, [r2, #0]
 801b48a:	4432      	add	r2, r6
 801b48c:	e7fa      	b.n	801b484 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13c>
 801b48e:	3801      	subs	r0, #1
 801b490:	b1c0      	cbz	r0, 801b4c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801b492:	1040      	asrs	r0, r0, #1
 801b494:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801b498:	0080      	lsls	r0, r0, #2
 801b49a:	0064      	lsls	r4, r4, #1
 801b49c:	42a9      	cmp	r1, r5
 801b49e:	d211      	bcs.n	801b4c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 801b4a0:	078a      	lsls	r2, r1, #30
 801b4a2:	d006      	beq.n	801b4b2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16a>
 801b4a4:	4b09      	ldr	r3, [pc, #36]	; (801b4cc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>)
 801b4a6:	4a0a      	ldr	r2, [pc, #40]	; (801b4d0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x188>)
 801b4a8:	480a      	ldr	r0, [pc, #40]	; (801b4d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x18c>)
 801b4aa:	f44f 6185 	mov.w	r1, #1064	; 0x428
 801b4ae:	f008 ffc3 	bl	8024438 <__assert_func>
 801b4b2:	180e      	adds	r6, r1, r0
 801b4b4:	460a      	mov	r2, r1
 801b4b6:	42b2      	cmp	r2, r6
 801b4b8:	d202      	bcs.n	801b4c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x178>
 801b4ba:	f842 3b04 	str.w	r3, [r2], #4
 801b4be:	e7fa      	b.n	801b4b6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16e>
 801b4c0:	4421      	add	r1, r4
 801b4c2:	e7eb      	b.n	801b49c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x154>
 801b4c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b4c8:	00fff800 	.word	0x00fff800
 801b4cc:	0802ab9d 	.word	0x0802ab9d
 801b4d0:	0802b1ec 	.word	0x0802b1ec
 801b4d4:	0802ad9e 	.word	0x0802ad9e

0801b4d8 <_ZN8touchgfx8LCD16bppC1Ev>:
 801b4d8:	2200      	movs	r2, #0
 801b4da:	4910      	ldr	r1, [pc, #64]	; (801b51c <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 801b4dc:	6042      	str	r2, [r0, #4]
 801b4de:	6001      	str	r1, [r0, #0]
 801b4e0:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801b4e4:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801b4e8:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801b4ec:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801b4f0:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801b4f4:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801b4f8:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801b4fc:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801b500:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801b504:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801b508:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801b50c:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801b510:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801b514:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801b518:	4770      	bx	lr
 801b51a:	bf00      	nop
 801b51c:	0802b1a4 	.word	0x0802b1a4

0801b520 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801b520:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b524:	460d      	mov	r5, r1
 801b526:	b08d      	sub	sp, #52	; 0x34
 801b528:	4604      	mov	r4, r0
 801b52a:	6808      	ldr	r0, [r1, #0]
 801b52c:	6849      	ldr	r1, [r1, #4]
 801b52e:	4699      	mov	r9, r3
 801b530:	ab08      	add	r3, sp, #32
 801b532:	c303      	stmia	r3!, {r0, r1}
 801b534:	6810      	ldr	r0, [r2, #0]
 801b536:	6851      	ldr	r1, [r2, #4]
 801b538:	ab0a      	add	r3, sp, #40	; 0x28
 801b53a:	c303      	stmia	r3!, {r0, r1}
 801b53c:	a808      	add	r0, sp, #32
 801b53e:	f7f8 ffbd 	bl	80144bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b542:	4629      	mov	r1, r5
 801b544:	a80a      	add	r0, sp, #40	; 0x28
 801b546:	f7f8 ffe1 	bl	801450c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b54a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801b54e:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801b552:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801b556:	4d63      	ldr	r5, [pc, #396]	; (801b6e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801b558:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801b55c:	6828      	ldr	r0, [r5, #0]
 801b55e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801b562:	fb11 2103 	smlabb	r1, r1, r3, r2
 801b566:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801b56a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801b56e:	440a      	add	r2, r1
 801b570:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801b574:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801b578:	4413      	add	r3, r2
 801b57a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801b57e:	6803      	ldr	r3, [r0, #0]
 801b580:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b582:	4798      	blx	r3
 801b584:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801b588:	d119      	bne.n	801b5be <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801b58a:	f010 0f20 	tst.w	r0, #32
 801b58e:	6828      	ldr	r0, [r5, #0]
 801b590:	d018      	beq.n	801b5c4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801b592:	2500      	movs	r5, #0
 801b594:	6801      	ldr	r1, [r0, #0]
 801b596:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801b59a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801b59e:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801b5a2:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801b5a6:	9502      	str	r5, [sp, #8]
 801b5a8:	b2b6      	uxth	r6, r6
 801b5aa:	fa1f f588 	uxth.w	r5, r8
 801b5ae:	9601      	str	r6, [sp, #4]
 801b5b0:	9500      	str	r5, [sp, #0]
 801b5b2:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801b5b4:	4621      	mov	r1, r4
 801b5b6:	47a8      	blx	r5
 801b5b8:	b00d      	add	sp, #52	; 0x34
 801b5ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b5be:	f010 0f40 	tst.w	r0, #64	; 0x40
 801b5c2:	e7e4      	b.n	801b58e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801b5c4:	6803      	ldr	r3, [r0, #0]
 801b5c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b5c8:	4798      	blx	r3
 801b5ca:	4947      	ldr	r1, [pc, #284]	; (801b6e8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801b5cc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801b5d0:	880b      	ldrh	r3, [r1, #0]
 801b5d2:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801b5d6:	fb03 5202 	mla	r2, r3, r2, r5
 801b5da:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b5de:	4373      	muls	r3, r6
 801b5e0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b5e4:	9307      	str	r3, [sp, #28]
 801b5e6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801b5ea:	9306      	str	r3, [sp, #24]
 801b5ec:	468a      	mov	sl, r1
 801b5ee:	9b07      	ldr	r3, [sp, #28]
 801b5f0:	4298      	cmp	r0, r3
 801b5f2:	d270      	bcs.n	801b6d6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801b5f4:	9b06      	ldr	r3, [sp, #24]
 801b5f6:	4621      	mov	r1, r4
 801b5f8:	eb00 0b03 	add.w	fp, r0, r3
 801b5fc:	4558      	cmp	r0, fp
 801b5fe:	d25d      	bcs.n	801b6bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801b600:	f851 4b04 	ldr.w	r4, [r1], #4
 801b604:	0e23      	lsrs	r3, r4, #24
 801b606:	d014      	beq.n	801b632 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801b608:	2bff      	cmp	r3, #255	; 0xff
 801b60a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801b60e:	d112      	bne.n	801b636 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801b610:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801b614:	d10f      	bne.n	801b636 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801b616:	0963      	lsrs	r3, r4, #5
 801b618:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801b61c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b620:	f02c 0c07 	bic.w	ip, ip, #7
 801b624:	ea43 0c0c 	orr.w	ip, r3, ip
 801b628:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b62c:	ea4c 0404 	orr.w	r4, ip, r4
 801b630:	8004      	strh	r4, [r0, #0]
 801b632:	3002      	adds	r0, #2
 801b634:	e7e2      	b.n	801b5fc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801b636:	fb09 f303 	mul.w	r3, r9, r3
 801b63a:	8807      	ldrh	r7, [r0, #0]
 801b63c:	1c5a      	adds	r2, r3, #1
 801b63e:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801b642:	1212      	asrs	r2, r2, #8
 801b644:	123e      	asrs	r6, r7, #8
 801b646:	b293      	uxth	r3, r2
 801b648:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801b64c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b650:	43d2      	mvns	r2, r2
 801b652:	b2d2      	uxtb	r2, r2
 801b654:	10fd      	asrs	r5, r7, #3
 801b656:	fb1e fe03 	smulbb	lr, lr, r3
 801b65a:	00ff      	lsls	r7, r7, #3
 801b65c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801b660:	fb06 e602 	mla	r6, r6, r2, lr
 801b664:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b668:	b2ff      	uxtb	r7, r7
 801b66a:	fa5f fc8c 	uxtb.w	ip, ip
 801b66e:	b2e4      	uxtb	r4, r4
 801b670:	b2b6      	uxth	r6, r6
 801b672:	fb1c fc03 	smulbb	ip, ip, r3
 801b676:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801b67a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801b67e:	fb14 f403 	smulbb	r4, r4, r3
 801b682:	fb05 c502 	mla	r5, r5, r2, ip
 801b686:	f106 0e01 	add.w	lr, r6, #1
 801b68a:	fb07 4702 	mla	r7, r7, r2, r4
 801b68e:	b2ad      	uxth	r5, r5
 801b690:	b2bf      	uxth	r7, r7
 801b692:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801b696:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801b69a:	f105 0c01 	add.w	ip, r5, #1
 801b69e:	1c7e      	adds	r6, r7, #1
 801b6a0:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801b6a4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801b6a8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b6ac:	096d      	lsrs	r5, r5, #5
 801b6ae:	ea46 060e 	orr.w	r6, r6, lr
 801b6b2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b6b6:	432e      	orrs	r6, r5
 801b6b8:	8006      	strh	r6, [r0, #0]
 801b6ba:	e7ba      	b.n	801b632 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801b6bc:	f8ba 3000 	ldrh.w	r3, [sl]
 801b6c0:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801b6c4:	eba3 0308 	sub.w	r3, r3, r8
 801b6c8:	eba4 0408 	sub.w	r4, r4, r8
 801b6cc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b6d0:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801b6d4:	e78b      	b.n	801b5ee <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801b6d6:	4b03      	ldr	r3, [pc, #12]	; (801b6e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801b6d8:	6818      	ldr	r0, [r3, #0]
 801b6da:	6803      	ldr	r3, [r0, #0]
 801b6dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b6de:	4798      	blx	r3
 801b6e0:	e76a      	b.n	801b5b8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801b6e2:	bf00      	nop
 801b6e4:	20020a90 	.word	0x20020a90
 801b6e8:	20020a8a 	.word	0x20020a8a

0801b6ec <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801b6ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801b6f0:	460c      	mov	r4, r1
 801b6f2:	b085      	sub	sp, #20
 801b6f4:	6810      	ldr	r0, [r2, #0]
 801b6f6:	6851      	ldr	r1, [r2, #4]
 801b6f8:	466d      	mov	r5, sp
 801b6fa:	c503      	stmia	r5!, {r0, r1}
 801b6fc:	6818      	ldr	r0, [r3, #0]
 801b6fe:	6859      	ldr	r1, [r3, #4]
 801b700:	4616      	mov	r6, r2
 801b702:	c503      	stmia	r5!, {r0, r1}
 801b704:	4668      	mov	r0, sp
 801b706:	f7f8 fed9 	bl	80144bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b70a:	4631      	mov	r1, r6
 801b70c:	a802      	add	r0, sp, #8
 801b70e:	f7f8 fefd 	bl	801450c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b712:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801b716:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801b71a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801b71e:	4d28      	ldr	r5, [pc, #160]	; (801b7c0 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801b720:	4e28      	ldr	r6, [pc, #160]	; (801b7c4 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801b722:	6828      	ldr	r0, [r5, #0]
 801b724:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801b728:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801b72c:	fb11 2103 	smlabb	r1, r1, r3, r2
 801b730:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801b734:	f8bd 1000 	ldrh.w	r1, [sp]
 801b738:	440a      	add	r2, r1
 801b73a:	f8ad 2008 	strh.w	r2, [sp, #8]
 801b73e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801b742:	4413      	add	r3, r2
 801b744:	f8ad 300a 	strh.w	r3, [sp, #10]
 801b748:	6803      	ldr	r3, [r0, #0]
 801b74a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b74c:	4798      	blx	r3
 801b74e:	8833      	ldrh	r3, [r6, #0]
 801b750:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801b754:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801b758:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801b7c8 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801b75c:	fb03 1202 	mla	r2, r3, r2, r1
 801b760:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b764:	fb08 f303 	mul.w	r3, r8, r3
 801b768:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b76c:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801b770:	4298      	cmp	r0, r3
 801b772:	d21d      	bcs.n	801b7b0 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801b774:	eb00 080c 	add.w	r8, r0, ip
 801b778:	4540      	cmp	r0, r8
 801b77a:	d20f      	bcs.n	801b79c <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801b77c:	f854 1b04 	ldr.w	r1, [r4], #4
 801b780:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801b784:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801b788:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b78c:	ea42 0209 	orr.w	r2, r2, r9
 801b790:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801b794:	430a      	orrs	r2, r1
 801b796:	f820 2b02 	strh.w	r2, [r0], #2
 801b79a:	e7ed      	b.n	801b778 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801b79c:	8832      	ldrh	r2, [r6, #0]
 801b79e:	1bd2      	subs	r2, r2, r7
 801b7a0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b7a4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801b7a8:	1bd2      	subs	r2, r2, r7
 801b7aa:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801b7ae:	e7df      	b.n	801b770 <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801b7b0:	6828      	ldr	r0, [r5, #0]
 801b7b2:	6803      	ldr	r3, [r0, #0]
 801b7b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b7b6:	4798      	blx	r3
 801b7b8:	b005      	add	sp, #20
 801b7ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801b7be:	bf00      	nop
 801b7c0:	20020a90 	.word	0x20020a90
 801b7c4:	20020a8a 	.word	0x20020a8a
 801b7c8:	fffff800 	.word	0xfffff800

0801b7cc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801b7cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b7d0:	460e      	mov	r6, r1
 801b7d2:	b08e      	sub	sp, #56	; 0x38
 801b7d4:	4604      	mov	r4, r0
 801b7d6:	6808      	ldr	r0, [r1, #0]
 801b7d8:	6849      	ldr	r1, [r1, #4]
 801b7da:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801b9b4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801b7de:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801b9b8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801b7e2:	461d      	mov	r5, r3
 801b7e4:	ab0a      	add	r3, sp, #40	; 0x28
 801b7e6:	c303      	stmia	r3!, {r0, r1}
 801b7e8:	6810      	ldr	r0, [r2, #0]
 801b7ea:	6851      	ldr	r1, [r2, #4]
 801b7ec:	ab0c      	add	r3, sp, #48	; 0x30
 801b7ee:	c303      	stmia	r3!, {r0, r1}
 801b7f0:	a80a      	add	r0, sp, #40	; 0x28
 801b7f2:	f7f8 fe63 	bl	80144bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b7f6:	4631      	mov	r1, r6
 801b7f8:	a80c      	add	r0, sp, #48	; 0x30
 801b7fa:	f7f8 fe87 	bl	801450c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b7fe:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801b802:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801b806:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801b80a:	f8d8 0000 	ldr.w	r0, [r8]
 801b80e:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801b812:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801b816:	fb11 2103 	smlabb	r1, r1, r3, r2
 801b81a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801b81e:	440c      	add	r4, r1
 801b820:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801b824:	440a      	add	r2, r1
 801b826:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801b82a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801b82e:	4413      	add	r3, r2
 801b830:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801b834:	6803      	ldr	r3, [r0, #0]
 801b836:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b838:	4798      	blx	r3
 801b83a:	2dff      	cmp	r5, #255	; 0xff
 801b83c:	d124      	bne.n	801b888 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801b83e:	f010 0f01 	tst.w	r0, #1
 801b842:	f8d8 0000 	ldr.w	r0, [r8]
 801b846:	d022      	beq.n	801b88e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801b848:	2100      	movs	r1, #0
 801b84a:	f8d0 c000 	ldr.w	ip, [r0]
 801b84e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801b852:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801b856:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801b85a:	f04f 0e01 	mov.w	lr, #1
 801b85e:	f8cd e018 	str.w	lr, [sp, #24]
 801b862:	f8b9 e000 	ldrh.w	lr, [r9]
 801b866:	9503      	str	r5, [sp, #12]
 801b868:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801b86c:	b2b6      	uxth	r6, r6
 801b86e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801b872:	9102      	str	r1, [sp, #8]
 801b874:	b2bf      	uxth	r7, r7
 801b876:	9601      	str	r6, [sp, #4]
 801b878:	9700      	str	r7, [sp, #0]
 801b87a:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801b87e:	4621      	mov	r1, r4
 801b880:	47a8      	blx	r5
 801b882:	b00e      	add	sp, #56	; 0x38
 801b884:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b888:	f010 0f04 	tst.w	r0, #4
 801b88c:	e7d9      	b.n	801b842 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801b88e:	6803      	ldr	r3, [r0, #0]
 801b890:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b892:	4798      	blx	r3
 801b894:	f8b9 3000 	ldrh.w	r3, [r9]
 801b898:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b89c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801b8a0:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801b8a4:	fb03 1202 	mla	r2, r3, r2, r1
 801b8a8:	ebac 0c07 	sub.w	ip, ip, r7
 801b8ac:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b8b0:	435e      	muls	r6, r3
 801b8b2:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801b8b6:	2dff      	cmp	r5, #255	; 0xff
 801b8b8:	eba3 0707 	sub.w	r7, r3, r7
 801b8bc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801b8c0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801b8c4:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801b8c8:	d049      	beq.n	801b95e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801b8ca:	43eb      	mvns	r3, r5
 801b8cc:	fa1f f985 	uxth.w	r9, r5
 801b8d0:	b2db      	uxtb	r3, r3
 801b8d2:	42b0      	cmp	r0, r6
 801b8d4:	d266      	bcs.n	801b9a4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801b8d6:	eb00 0a0e 	add.w	sl, r0, lr
 801b8da:	4550      	cmp	r0, sl
 801b8dc:	4621      	mov	r1, r4
 801b8de:	f104 0403 	add.w	r4, r4, #3
 801b8e2:	d25b      	bcs.n	801b99c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801b8e4:	8802      	ldrh	r2, [r0, #0]
 801b8e6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801b8ea:	ea4f 2822 	mov.w	r8, r2, asr #8
 801b8ee:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801b8f2:	fb11 f109 	smulbb	r1, r1, r9
 801b8f6:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801b8fa:	10d5      	asrs	r5, r2, #3
 801b8fc:	fb08 1803 	mla	r8, r8, r3, r1
 801b900:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801b904:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b908:	fb11 f109 	smulbb	r1, r1, r9
 801b90c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801b910:	fb05 1503 	mla	r5, r5, r3, r1
 801b914:	00d2      	lsls	r2, r2, #3
 801b916:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801b91a:	b2d2      	uxtb	r2, r2
 801b91c:	fb11 f109 	smulbb	r1, r1, r9
 801b920:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801b924:	fa1f f888 	uxth.w	r8, r8
 801b928:	fb02 1203 	mla	r2, r2, r3, r1
 801b92c:	b292      	uxth	r2, r2
 801b92e:	f108 0101 	add.w	r1, r8, #1
 801b932:	b2ad      	uxth	r5, r5
 801b934:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801b938:	1c51      	adds	r1, r2, #1
 801b93a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b93e:	1c69      	adds	r1, r5, #1
 801b940:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801b944:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801b948:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b94c:	096d      	lsrs	r5, r5, #5
 801b94e:	ea42 0208 	orr.w	r2, r2, r8
 801b952:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b956:	432a      	orrs	r2, r5
 801b958:	f820 2b02 	strh.w	r2, [r0], #2
 801b95c:	e7bd      	b.n	801b8da <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801b95e:	4a14      	ldr	r2, [pc, #80]	; (801b9b0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801b960:	42b0      	cmp	r0, r6
 801b962:	d21f      	bcs.n	801b9a4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801b964:	eb00 050e 	add.w	r5, r0, lr
 801b968:	42a8      	cmp	r0, r5
 801b96a:	4621      	mov	r1, r4
 801b96c:	f104 0403 	add.w	r4, r4, #3
 801b970:	d210      	bcs.n	801b994 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801b972:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801b976:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801b97a:	00db      	lsls	r3, r3, #3
 801b97c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801b980:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b984:	430b      	orrs	r3, r1
 801b986:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801b98a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801b98e:	f820 3b02 	strh.w	r3, [r0], #2
 801b992:	e7e9      	b.n	801b968 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801b994:	4438      	add	r0, r7
 801b996:	eb01 040c 	add.w	r4, r1, ip
 801b99a:	e7e1      	b.n	801b960 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801b99c:	4438      	add	r0, r7
 801b99e:	eb01 040c 	add.w	r4, r1, ip
 801b9a2:	e796      	b.n	801b8d2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801b9a4:	4b03      	ldr	r3, [pc, #12]	; (801b9b4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801b9a6:	6818      	ldr	r0, [r3, #0]
 801b9a8:	6803      	ldr	r3, [r0, #0]
 801b9aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b9ac:	4798      	blx	r3
 801b9ae:	e768      	b.n	801b882 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801b9b0:	fffff800 	.word	0xfffff800
 801b9b4:	20020a90 	.word	0x20020a90
 801b9b8:	20020a8a 	.word	0x20020a8a

0801b9bc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801b9bc:	b570      	push	{r4, r5, r6, lr}
 801b9be:	9c04      	ldr	r4, [sp, #16]
 801b9c0:	f89d 6018 	ldrb.w	r6, [sp, #24]
 801b9c4:	4605      	mov	r5, r0
 801b9c6:	4608      	mov	r0, r1
 801b9c8:	4619      	mov	r1, r3
 801b9ca:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801b9ce:	2a0d      	cmp	r2, #13
 801b9d0:	d825      	bhi.n	801ba1e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x62>
 801b9d2:	e8df f002 	tbb	[pc, r2]
 801b9d6:	1807      	.short	0x1807
 801b9d8:	1d1d1d13 	.word	0x1d1d1d13
 801b9dc:	1d1d1d1d 	.word	0x1d1d1d1d
 801b9e0:	1d1d1d1d 	.word	0x1d1d1d1d
 801b9e4:	e9cd 3604 	strd	r3, r6, [sp, #16]
 801b9e8:	682a      	ldr	r2, [r5, #0]
 801b9ea:	68d6      	ldr	r6, [r2, #12]
 801b9ec:	4623      	mov	r3, r4
 801b9ee:	460a      	mov	r2, r1
 801b9f0:	46b4      	mov	ip, r6
 801b9f2:	4601      	mov	r1, r0
 801b9f4:	4628      	mov	r0, r5
 801b9f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801b9fa:	4760      	bx	ip
 801b9fc:	4622      	mov	r2, r4
 801b9fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801ba02:	f7ff bd8d 	b.w	801b520 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ba06:	4622      	mov	r2, r4
 801ba08:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801ba0c:	f7ff bede 	b.w	801b7cc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801ba10:	4b03      	ldr	r3, [pc, #12]	; (801ba20 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x64>)
 801ba12:	4a04      	ldr	r2, [pc, #16]	; (801ba24 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x68>)
 801ba14:	4804      	ldr	r0, [pc, #16]	; (801ba28 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x6c>)
 801ba16:	f240 315d 	movw	r1, #861	; 0x35d
 801ba1a:	f008 fd0d 	bl	8024438 <__assert_func>
 801ba1e:	bd70      	pop	{r4, r5, r6, pc}
 801ba20:	0802aec3 	.word	0x0802aec3
 801ba24:	0802b626 	.word	0x0802b626
 801ba28:	0802ad9e 	.word	0x0802ad9e

0801ba2c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801ba2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ba30:	b093      	sub	sp, #76	; 0x4c
 801ba32:	880e      	ldrh	r6, [r1, #0]
 801ba34:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801ba38:	4681      	mov	r9, r0
 801ba3a:	4688      	mov	r8, r1
 801ba3c:	4615      	mov	r5, r2
 801ba3e:	b136      	cbz	r6, 801ba4e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x22>
 801ba40:	4b70      	ldr	r3, [pc, #448]	; (801bc04 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 801ba42:	4a71      	ldr	r2, [pc, #452]	; (801bc08 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 801ba44:	4871      	ldr	r0, [pc, #452]	; (801bc0c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 801ba46:	f44f 71c5 	mov.w	r1, #394	; 0x18a
 801ba4a:	f008 fcf5 	bl	8024438 <__assert_func>
 801ba4e:	6810      	ldr	r0, [r2, #0]
 801ba50:	6851      	ldr	r1, [r2, #4]
 801ba52:	4f6f      	ldr	r7, [pc, #444]	; (801bc10 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 801ba54:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 801bc14 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>
 801ba58:	ac0e      	add	r4, sp, #56	; 0x38
 801ba5a:	c403      	stmia	r4!, {r0, r1}
 801ba5c:	6818      	ldr	r0, [r3, #0]
 801ba5e:	6859      	ldr	r1, [r3, #4]
 801ba60:	ac10      	add	r4, sp, #64	; 0x40
 801ba62:	c403      	stmia	r4!, {r0, r1}
 801ba64:	a80e      	add	r0, sp, #56	; 0x38
 801ba66:	f7f8 fd29 	bl	80144bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ba6a:	4629      	mov	r1, r5
 801ba6c:	a810      	add	r0, sp, #64	; 0x40
 801ba6e:	f7f8 fd4d 	bl	801450c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ba72:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801ba76:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801ba7a:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801ba7e:	6838      	ldr	r0, [r7, #0]
 801ba80:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801ba84:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801ba88:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ba8c:	4489      	add	r9, r1
 801ba8e:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801ba92:	440a      	add	r2, r1
 801ba94:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801ba98:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801ba9c:	4413      	add	r3, r2
 801ba9e:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801baa2:	6803      	ldr	r3, [r0, #0]
 801baa4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801baa6:	4798      	blx	r3
 801baa8:	f010 0f80 	tst.w	r0, #128	; 0x80
 801baac:	6838      	ldr	r0, [r7, #0]
 801baae:	d01d      	beq.n	801baec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xc0>
 801bab0:	6802      	ldr	r2, [r0, #0]
 801bab2:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801bab6:	e9cd 6608 	strd	r6, r6, [sp, #32]
 801baba:	210b      	movs	r1, #11
 801babc:	9107      	str	r1, [sp, #28]
 801babe:	f8bb 1000 	ldrh.w	r1, [fp]
 801bac2:	9106      	str	r1, [sp, #24]
 801bac4:	2101      	movs	r1, #1
 801bac6:	e9cd a104 	strd	sl, r1, [sp, #16]
 801baca:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801bace:	9103      	str	r1, [sp, #12]
 801bad0:	b2a4      	uxth	r4, r4
 801bad2:	f8bd 1042 	ldrh.w	r1, [sp, #66]	; 0x42
 801bad6:	9100      	str	r1, [sp, #0]
 801bad8:	b2ad      	uxth	r5, r5
 801bada:	9502      	str	r5, [sp, #8]
 801badc:	9401      	str	r4, [sp, #4]
 801bade:	6bd4      	ldr	r4, [r2, #60]	; 0x3c
 801bae0:	4649      	mov	r1, r9
 801bae2:	4642      	mov	r2, r8
 801bae4:	47a0      	blx	r4
 801bae6:	b013      	add	sp, #76	; 0x4c
 801bae8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801baec:	6803      	ldr	r3, [r0, #0]
 801baee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801baf0:	4798      	blx	r3
 801baf2:	f8bb 3000 	ldrh.w	r3, [fp]
 801baf6:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801bafa:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801bafe:	fb03 1202 	mla	r2, r3, r2, r1
 801bb02:	435d      	muls	r5, r3
 801bb04:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801bb08:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801bb0c:	920c      	str	r2, [sp, #48]	; 0x30
 801bb0e:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801bb12:	1b12      	subs	r2, r2, r4
 801bb14:	920d      	str	r2, [sp, #52]	; 0x34
 801bb16:	0062      	lsls	r2, r4, #1
 801bb18:	1b1c      	subs	r4, r3, r4
 801bb1a:	0063      	lsls	r3, r4, #1
 801bb1c:	920a      	str	r2, [sp, #40]	; 0x28
 801bb1e:	930b      	str	r3, [sp, #44]	; 0x2c
 801bb20:	f04f 0e04 	mov.w	lr, #4
 801bb24:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801bb26:	4298      	cmp	r0, r3
 801bb28:	d266      	bcs.n	801bbf8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1cc>
 801bb2a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bb2c:	eb00 0b03 	add.w	fp, r0, r3
 801bb30:	4558      	cmp	r0, fp
 801bb32:	d25c      	bcs.n	801bbee <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c2>
 801bb34:	f819 3b01 	ldrb.w	r3, [r9], #1
 801bb38:	fb1e e303 	smlabb	r3, lr, r3, lr
 801bb3c:	f858 2003 	ldr.w	r2, [r8, r3]
 801bb40:	0e11      	lsrs	r1, r2, #24
 801bb42:	d012      	beq.n	801bb6a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 801bb44:	29ff      	cmp	r1, #255	; 0xff
 801bb46:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801bb4a:	d110      	bne.n	801bb6e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 801bb4c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801bb50:	d10d      	bne.n	801bb6e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 801bb52:	0953      	lsrs	r3, r2, #5
 801bb54:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801bb58:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bb5c:	f027 0707 	bic.w	r7, r7, #7
 801bb60:	431f      	orrs	r7, r3
 801bb62:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801bb66:	433a      	orrs	r2, r7
 801bb68:	8002      	strh	r2, [r0, #0]
 801bb6a:	3002      	adds	r0, #2
 801bb6c:	e7e0      	b.n	801bb30 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x104>
 801bb6e:	fb0a f101 	mul.w	r1, sl, r1
 801bb72:	8806      	ldrh	r6, [r0, #0]
 801bb74:	1c4b      	adds	r3, r1, #1
 801bb76:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801bb7a:	1235      	asrs	r5, r6, #8
 801bb7c:	10f4      	asrs	r4, r6, #3
 801bb7e:	121b      	asrs	r3, r3, #8
 801bb80:	00f6      	lsls	r6, r6, #3
 801bb82:	b299      	uxth	r1, r3
 801bb84:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801bb88:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801bb8c:	b2f6      	uxtb	r6, r6
 801bb8e:	43db      	mvns	r3, r3
 801bb90:	b2d2      	uxtb	r2, r2
 801bb92:	b2db      	uxtb	r3, r3
 801bb94:	fb1c fc01 	smulbb	ip, ip, r1
 801bb98:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801bb9c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801bba0:	fb12 f201 	smulbb	r2, r2, r1
 801bba4:	fb05 c503 	mla	r5, r5, r3, ip
 801bba8:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801bbac:	b2ff      	uxtb	r7, r7
 801bbae:	fb06 2203 	mla	r2, r6, r3, r2
 801bbb2:	b2ad      	uxth	r5, r5
 801bbb4:	fb17 f701 	smulbb	r7, r7, r1
 801bbb8:	b292      	uxth	r2, r2
 801bbba:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801bbbe:	fb04 7403 	mla	r4, r4, r3, r7
 801bbc2:	f105 0c01 	add.w	ip, r5, #1
 801bbc6:	1c57      	adds	r7, r2, #1
 801bbc8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801bbcc:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801bbd0:	b2a4      	uxth	r4, r4
 801bbd2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801bbd6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801bbda:	433d      	orrs	r5, r7
 801bbdc:	1c67      	adds	r7, r4, #1
 801bbde:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801bbe2:	0964      	lsrs	r4, r4, #5
 801bbe4:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801bbe8:	4325      	orrs	r5, r4
 801bbea:	8005      	strh	r5, [r0, #0]
 801bbec:	e7bd      	b.n	801bb6a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 801bbee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801bbf0:	4418      	add	r0, r3
 801bbf2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bbf4:	4499      	add	r9, r3
 801bbf6:	e795      	b.n	801bb24 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xf8>
 801bbf8:	4b05      	ldr	r3, [pc, #20]	; (801bc10 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 801bbfa:	6818      	ldr	r0, [r3, #0]
 801bbfc:	6803      	ldr	r3, [r0, #0]
 801bbfe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bc00:	4798      	blx	r3
 801bc02:	e770      	b.n	801bae6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xba>
 801bc04:	0802ac9c 	.word	0x0802ac9c
 801bc08:	0802b3f7 	.word	0x0802b3f7
 801bc0c:	0802ad9e 	.word	0x0802ad9e
 801bc10:	20020a90 	.word	0x20020a90
 801bc14:	20020a8a 	.word	0x20020a8a

0801bc18 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801bc18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bc1c:	4614      	mov	r4, r2
 801bc1e:	880a      	ldrh	r2, [r1, #0]
 801bc20:	b087      	sub	sp, #28
 801bc22:	2a02      	cmp	r2, #2
 801bc24:	4680      	mov	r8, r0
 801bc26:	460d      	mov	r5, r1
 801bc28:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801bc2c:	d006      	beq.n	801bc3c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 801bc2e:	4b63      	ldr	r3, [pc, #396]	; (801bdbc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a4>)
 801bc30:	4a63      	ldr	r2, [pc, #396]	; (801bdc0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a8>)
 801bc32:	4864      	ldr	r0, [pc, #400]	; (801bdc4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ac>)
 801bc34:	f240 11e1 	movw	r1, #481	; 0x1e1
 801bc38:	f008 fbfe 	bl	8024438 <__assert_func>
 801bc3c:	2e00      	cmp	r6, #0
 801bc3e:	f000 80b9 	beq.w	801bdb4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19c>
 801bc42:	6820      	ldr	r0, [r4, #0]
 801bc44:	6861      	ldr	r1, [r4, #4]
 801bc46:	af02      	add	r7, sp, #8
 801bc48:	c703      	stmia	r7!, {r0, r1}
 801bc4a:	6818      	ldr	r0, [r3, #0]
 801bc4c:	6859      	ldr	r1, [r3, #4]
 801bc4e:	af04      	add	r7, sp, #16
 801bc50:	c703      	stmia	r7!, {r0, r1}
 801bc52:	a802      	add	r0, sp, #8
 801bc54:	f7f8 fc32 	bl	80144bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bc58:	4621      	mov	r1, r4
 801bc5a:	a804      	add	r0, sp, #16
 801bc5c:	f7f8 fc56 	bl	801450c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bc60:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801bc64:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801bc68:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801bc6c:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801bc70:	fb14 2103 	smlabb	r1, r4, r3, r2
 801bc74:	eb08 0401 	add.w	r4, r8, r1
 801bc78:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801bc7c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801bc80:	440a      	add	r2, r1
 801bc82:	f8ad 2010 	strh.w	r2, [sp, #16]
 801bc86:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801bc8a:	4413      	add	r3, r2
 801bc8c:	f8ad 3012 	strh.w	r3, [sp, #18]
 801bc90:	4b4d      	ldr	r3, [pc, #308]	; (801bdc8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 801bc92:	6818      	ldr	r0, [r3, #0]
 801bc94:	6803      	ldr	r3, [r0, #0]
 801bc96:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bc98:	4798      	blx	r3
 801bc9a:	4b4c      	ldr	r3, [pc, #304]	; (801bdcc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b4>)
 801bc9c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801bca0:	881a      	ldrh	r2, [r3, #0]
 801bca2:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801bca6:	2eff      	cmp	r6, #255	; 0xff
 801bca8:	fb02 c101 	mla	r1, r2, r1, ip
 801bcac:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801bcb0:	fb02 f207 	mul.w	r2, r2, r7
 801bcb4:	f105 0104 	add.w	r1, r5, #4
 801bcb8:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801bcbc:	461d      	mov	r5, r3
 801bcbe:	d05a      	beq.n	801bd76 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x15e>
 801bcc0:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801bcc4:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801bcc8:	b2b6      	uxth	r6, r6
 801bcca:	fa1f fe8e 	uxth.w	lr, lr
 801bcce:	9301      	str	r3, [sp, #4]
 801bcd0:	4282      	cmp	r2, r0
 801bcd2:	d96a      	bls.n	801bdaa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 801bcd4:	eb00 0b0a 	add.w	fp, r0, sl
 801bcd8:	4583      	cmp	fp, r0
 801bcda:	d940      	bls.n	801bd5e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x146>
 801bcdc:	f814 3b01 	ldrb.w	r3, [r4], #1
 801bce0:	8805      	ldrh	r5, [r0, #0]
 801bce2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801bce6:	122f      	asrs	r7, r5, #8
 801bce8:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801bcec:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bcf0:	fb17 f70e 	smulbb	r7, r7, lr
 801bcf4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801bcf8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bcfc:	00ed      	lsls	r5, r5, #3
 801bcfe:	fb0c 7c06 	mla	ip, ip, r6, r7
 801bd02:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801bd06:	10df      	asrs	r7, r3, #3
 801bd08:	b2ed      	uxtb	r5, r5
 801bd0a:	00db      	lsls	r3, r3, #3
 801bd0c:	fa1f fc8c 	uxth.w	ip, ip
 801bd10:	fb19 f90e 	smulbb	r9, r9, lr
 801bd14:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bd18:	b2db      	uxtb	r3, r3
 801bd1a:	fb15 f50e 	smulbb	r5, r5, lr
 801bd1e:	fb07 9706 	mla	r7, r7, r6, r9
 801bd22:	fb03 5306 	mla	r3, r3, r6, r5
 801bd26:	f10c 0901 	add.w	r9, ip, #1
 801bd2a:	b29b      	uxth	r3, r3
 801bd2c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801bd30:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801bd34:	f103 0c01 	add.w	ip, r3, #1
 801bd38:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801bd3c:	b2bf      	uxth	r7, r7
 801bd3e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801bd42:	ea4c 0c09 	orr.w	ip, ip, r9
 801bd46:	f107 0901 	add.w	r9, r7, #1
 801bd4a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801bd4e:	097f      	lsrs	r7, r7, #5
 801bd50:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801bd54:	ea4c 0c07 	orr.w	ip, ip, r7
 801bd58:	f820 cb02 	strh.w	ip, [r0], #2
 801bd5c:	e7bc      	b.n	801bcd8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 801bd5e:	9b01      	ldr	r3, [sp, #4]
 801bd60:	881b      	ldrh	r3, [r3, #0]
 801bd62:	eba3 0308 	sub.w	r3, r3, r8
 801bd66:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bd6a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801bd6e:	eba3 0308 	sub.w	r3, r3, r8
 801bd72:	441c      	add	r4, r3
 801bd74:	e7ac      	b.n	801bcd0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xb8>
 801bd76:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801bd7a:	4282      	cmp	r2, r0
 801bd7c:	d915      	bls.n	801bdaa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 801bd7e:	eb00 060a 	add.w	r6, r0, sl
 801bd82:	4286      	cmp	r6, r0
 801bd84:	d906      	bls.n	801bd94 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17c>
 801bd86:	f814 3b01 	ldrb.w	r3, [r4], #1
 801bd8a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801bd8e:	f820 3b02 	strh.w	r3, [r0], #2
 801bd92:	e7f6      	b.n	801bd82 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x16a>
 801bd94:	882b      	ldrh	r3, [r5, #0]
 801bd96:	eba3 0308 	sub.w	r3, r3, r8
 801bd9a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bd9e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801bda2:	eba3 0308 	sub.w	r3, r3, r8
 801bda6:	441c      	add	r4, r3
 801bda8:	e7e7      	b.n	801bd7a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x162>
 801bdaa:	4b07      	ldr	r3, [pc, #28]	; (801bdc8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 801bdac:	6818      	ldr	r0, [r3, #0]
 801bdae:	6803      	ldr	r3, [r0, #0]
 801bdb0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bdb2:	4798      	blx	r3
 801bdb4:	b007      	add	sp, #28
 801bdb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bdba:	bf00      	nop
 801bdbc:	0802abcc 	.word	0x0802abcc
 801bdc0:	0802b261 	.word	0x0802b261
 801bdc4:	0802ad9e 	.word	0x0802ad9e
 801bdc8:	20020a90 	.word	0x20020a90
 801bdcc:	20020a8a 	.word	0x20020a8a

0801bdd0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801bdd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bdd4:	f8b1 9000 	ldrh.w	r9, [r1]
 801bdd8:	b091      	sub	sp, #68	; 0x44
 801bdda:	f1b9 0f01 	cmp.w	r9, #1
 801bdde:	4604      	mov	r4, r0
 801bde0:	460f      	mov	r7, r1
 801bde2:	4690      	mov	r8, r2
 801bde4:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801bde8:	d006      	beq.n	801bdf8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x28>
 801bdea:	4b84      	ldr	r3, [pc, #528]	; (801bffc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x22c>)
 801bdec:	4a84      	ldr	r2, [pc, #528]	; (801c000 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x230>)
 801bdee:	4885      	ldr	r0, [pc, #532]	; (801c004 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x234>)
 801bdf0:	f240 212f 	movw	r1, #559	; 0x22f
 801bdf4:	f008 fb20 	bl	8024438 <__assert_func>
 801bdf8:	2d00      	cmp	r5, #0
 801bdfa:	d04f      	beq.n	801be9c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 801bdfc:	6810      	ldr	r0, [r2, #0]
 801bdfe:	6851      	ldr	r1, [r2, #4]
 801be00:	f8df b208 	ldr.w	fp, [pc, #520]	; 801c00c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>
 801be04:	ae0c      	add	r6, sp, #48	; 0x30
 801be06:	c603      	stmia	r6!, {r0, r1}
 801be08:	6818      	ldr	r0, [r3, #0]
 801be0a:	6859      	ldr	r1, [r3, #4]
 801be0c:	ae0e      	add	r6, sp, #56	; 0x38
 801be0e:	c603      	stmia	r6!, {r0, r1}
 801be10:	a80c      	add	r0, sp, #48	; 0x30
 801be12:	f7f8 fb53 	bl	80144bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801be16:	4641      	mov	r1, r8
 801be18:	a80e      	add	r0, sp, #56	; 0x38
 801be1a:	f7f8 fb77 	bl	801450c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801be1e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801be22:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801be26:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801be2a:	f8db 0000 	ldr.w	r0, [fp]
 801be2e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801be32:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801be36:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801c010 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x240>
 801be3a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801be3e:	440c      	add	r4, r1
 801be40:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801be44:	440a      	add	r2, r1
 801be46:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801be4a:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801be4e:	4413      	add	r3, r2
 801be50:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801be54:	6803      	ldr	r3, [r0, #0]
 801be56:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801be58:	4798      	blx	r3
 801be5a:	f010 0f80 	tst.w	r0, #128	; 0x80
 801be5e:	f8db 0000 	ldr.w	r0, [fp]
 801be62:	d01e      	beq.n	801bea2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xd2>
 801be64:	2200      	movs	r2, #0
 801be66:	6801      	ldr	r1, [r0, #0]
 801be68:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801be6c:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801be70:	220b      	movs	r2, #11
 801be72:	9207      	str	r2, [sp, #28]
 801be74:	f8b8 2000 	ldrh.w	r2, [r8]
 801be78:	9504      	str	r5, [sp, #16]
 801be7a:	e9cd 9205 	strd	r9, r2, [sp, #20]
 801be7e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801be82:	9203      	str	r2, [sp, #12]
 801be84:	fa1f f28a 	uxth.w	r2, sl
 801be88:	9202      	str	r2, [sp, #8]
 801be8a:	b2b6      	uxth	r6, r6
 801be8c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801be90:	9200      	str	r2, [sp, #0]
 801be92:	9601      	str	r6, [sp, #4]
 801be94:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801be96:	463a      	mov	r2, r7
 801be98:	4621      	mov	r1, r4
 801be9a:	47a8      	blx	r5
 801be9c:	b011      	add	sp, #68	; 0x44
 801be9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bea2:	6803      	ldr	r3, [r0, #0]
 801bea4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bea6:	4798      	blx	r3
 801bea8:	f8b8 2000 	ldrh.w	r2, [r8]
 801beac:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801beb0:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801beb4:	2dff      	cmp	r5, #255	; 0xff
 801beb6:	fb02 1303 	mla	r3, r2, r3, r1
 801beba:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bebe:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801bec2:	fb0a fa02 	mul.w	sl, sl, r2
 801bec6:	d062      	beq.n	801bf8e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1be>
 801bec8:	ea6f 0c05 	mvn.w	ip, r5
 801becc:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801bed0:	930a      	str	r3, [sp, #40]	; 0x28
 801bed2:	b2ad      	uxth	r5, r5
 801bed4:	fa5f fc8c 	uxtb.w	ip, ip
 801bed8:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801bedc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bede:	4298      	cmp	r0, r3
 801bee0:	f080 8085 	bcs.w	801bfee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 801bee4:	eb00 0b09 	add.w	fp, r0, r9
 801bee8:	4558      	cmp	r0, fp
 801beea:	d246      	bcs.n	801bf7a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801beec:	f814 eb01 	ldrb.w	lr, [r4], #1
 801bef0:	2303      	movs	r3, #3
 801bef2:	2204      	movs	r2, #4
 801bef4:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801bef8:	eb07 0a0e 	add.w	sl, r7, lr
 801befc:	8803      	ldrh	r3, [r0, #0]
 801befe:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801bf02:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801bf06:	1219      	asrs	r1, r3, #8
 801bf08:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801bf0c:	fb18 f805 	smulbb	r8, r8, r5
 801bf10:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801bf14:	10da      	asrs	r2, r3, #3
 801bf16:	fb01 810c 	mla	r1, r1, ip, r8
 801bf1a:	00db      	lsls	r3, r3, #3
 801bf1c:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801bf20:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801bf24:	b2db      	uxtb	r3, r3
 801bf26:	fb18 f805 	smulbb	r8, r8, r5
 801bf2a:	fb1e fe05 	smulbb	lr, lr, r5
 801bf2e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801bf32:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801bf36:	b289      	uxth	r1, r1
 801bf38:	fb02 820c 	mla	r2, r2, ip, r8
 801bf3c:	fb03 e30c 	mla	r3, r3, ip, lr
 801bf40:	b292      	uxth	r2, r2
 801bf42:	b29b      	uxth	r3, r3
 801bf44:	f101 0801 	add.w	r8, r1, #1
 801bf48:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801bf4c:	f103 0e01 	add.w	lr, r3, #1
 801bf50:	f102 0801 	add.w	r8, r2, #1
 801bf54:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801bf58:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801bf5c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801bf60:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801bf64:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801bf68:	ea4e 0101 	orr.w	r1, lr, r1
 801bf6c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801bf70:	ea41 0108 	orr.w	r1, r1, r8
 801bf74:	f820 1b02 	strh.w	r1, [r0], #2
 801bf78:	e7b6      	b.n	801bee8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x118>
 801bf7a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801bf7c:	881b      	ldrh	r3, [r3, #0]
 801bf7e:	1b9b      	subs	r3, r3, r6
 801bf80:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bf84:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801bf88:	1b9b      	subs	r3, r3, r6
 801bf8a:	441c      	add	r4, r3
 801bf8c:	e7a6      	b.n	801bedc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x10c>
 801bf8e:	491e      	ldr	r1, [pc, #120]	; (801c008 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x238>)
 801bf90:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801bf94:	2203      	movs	r2, #3
 801bf96:	2504      	movs	r5, #4
 801bf98:	4550      	cmp	r0, sl
 801bf9a:	d228      	bcs.n	801bfee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 801bf9c:	eb00 0c09 	add.w	ip, r0, r9
 801bfa0:	4560      	cmp	r0, ip
 801bfa2:	4623      	mov	r3, r4
 801bfa4:	d219      	bcs.n	801bfda <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801bfa6:	f893 e000 	ldrb.w	lr, [r3]
 801bfaa:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801bfae:	eb07 0b0e 	add.w	fp, r7, lr
 801bfb2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801bfb6:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801bfba:	f89b b001 	ldrb.w	fp, [fp, #1]
 801bfbe:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801bfc2:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801bfc6:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801bfca:	ea43 030b 	orr.w	r3, r3, fp
 801bfce:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801bfd2:	3401      	adds	r4, #1
 801bfd4:	f820 3b02 	strh.w	r3, [r0], #2
 801bfd8:	e7e2      	b.n	801bfa0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>
 801bfda:	f8b8 3000 	ldrh.w	r3, [r8]
 801bfde:	1b9b      	subs	r3, r3, r6
 801bfe0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bfe4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801bfe8:	1b9b      	subs	r3, r3, r6
 801bfea:	441c      	add	r4, r3
 801bfec:	e7d4      	b.n	801bf98 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>
 801bfee:	4b07      	ldr	r3, [pc, #28]	; (801c00c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>)
 801bff0:	6818      	ldr	r0, [r3, #0]
 801bff2:	6803      	ldr	r3, [r0, #0]
 801bff4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bff6:	4798      	blx	r3
 801bff8:	e750      	b.n	801be9c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 801bffa:	bf00      	nop
 801bffc:	0802ac1a 	.word	0x0802ac1a
 801c000:	0802b2ea 	.word	0x0802b2ea
 801c004:	0802ad9e 	.word	0x0802ad9e
 801c008:	fffff800 	.word	0xfffff800
 801c00c:	20020a90 	.word	0x20020a90
 801c010:	20020a8a 	.word	0x20020a8a

0801c014 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801c014:	b430      	push	{r4, r5}
 801c016:	780d      	ldrb	r5, [r1, #0]
 801c018:	f89d 4008 	ldrb.w	r4, [sp, #8]
 801c01c:	2d01      	cmp	r5, #1
 801c01e:	d00a      	beq.n	801c036 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 801c020:	d305      	bcc.n	801c02e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 801c022:	2d02      	cmp	r5, #2
 801c024:	d10b      	bne.n	801c03e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 801c026:	9402      	str	r4, [sp, #8]
 801c028:	bc30      	pop	{r4, r5}
 801c02a:	f7ff bdf5 	b.w	801bc18 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801c02e:	9402      	str	r4, [sp, #8]
 801c030:	bc30      	pop	{r4, r5}
 801c032:	f7ff bcfb 	b.w	801ba2c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801c036:	9402      	str	r4, [sp, #8]
 801c038:	bc30      	pop	{r4, r5}
 801c03a:	f7ff bec9 	b.w	801bdd0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801c03e:	bc30      	pop	{r4, r5}
 801c040:	4770      	bx	lr
	...

0801c044 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801c044:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c048:	4604      	mov	r4, r0
 801c04a:	b087      	sub	sp, #28
 801c04c:	6810      	ldr	r0, [r2, #0]
 801c04e:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801c052:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801c28c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801c056:	460e      	mov	r6, r1
 801c058:	6851      	ldr	r1, [r2, #4]
 801c05a:	ad02      	add	r5, sp, #8
 801c05c:	c503      	stmia	r5!, {r0, r1}
 801c05e:	6818      	ldr	r0, [r3, #0]
 801c060:	6859      	ldr	r1, [r3, #4]
 801c062:	ad04      	add	r5, sp, #16
 801c064:	4617      	mov	r7, r2
 801c066:	c503      	stmia	r5!, {r0, r1}
 801c068:	a802      	add	r0, sp, #8
 801c06a:	f7f8 fa27 	bl	80144bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c06e:	4639      	mov	r1, r7
 801c070:	a804      	add	r0, sp, #16
 801c072:	f7f8 fa4b 	bl	801450c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c076:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801c07a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801c07e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801c082:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801c086:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801c08a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c08e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801c092:	440e      	add	r6, r1
 801c094:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801c098:	440a      	add	r2, r1
 801c09a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801c09e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801c0a2:	4413      	add	r3, r2
 801c0a4:	f8ad 3012 	strh.w	r3, [sp, #18]
 801c0a8:	4b77      	ldr	r3, [pc, #476]	; (801c288 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801c0aa:	6818      	ldr	r0, [r3, #0]
 801c0ac:	6803      	ldr	r3, [r0, #0]
 801c0ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c0b0:	4798      	blx	r3
 801c0b2:	f8b9 b000 	ldrh.w	fp, [r9]
 801c0b6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801c0ba:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801c0be:	fb0b 2303 	mla	r3, fp, r3, r2
 801c0c2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c0c6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801c0ca:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801c0ce:	fb05 f50b 	mul.w	r5, r5, fp
 801c0d2:	9300      	str	r3, [sp, #0]
 801c0d4:	d069      	beq.n	801c1aa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801c0d6:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801c0da:	4558      	cmp	r0, fp
 801c0dc:	f080 80cc 	bcs.w	801c278 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801c0e0:	9b00      	ldr	r3, [sp, #0]
 801c0e2:	18c3      	adds	r3, r0, r3
 801c0e4:	9301      	str	r3, [sp, #4]
 801c0e6:	4631      	mov	r1, r6
 801c0e8:	9b01      	ldr	r3, [sp, #4]
 801c0ea:	4298      	cmp	r0, r3
 801c0ec:	d24f      	bcs.n	801c18e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801c0ee:	f811 2b01 	ldrb.w	r2, [r1], #1
 801c0f2:	2a00      	cmp	r2, #0
 801c0f4:	d048      	beq.n	801c188 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801c0f6:	fb0a f202 	mul.w	r2, sl, r2
 801c0fa:	1c53      	adds	r3, r2, #1
 801c0fc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c100:	121b      	asrs	r3, r3, #8
 801c102:	d041      	beq.n	801c188 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801c104:	8802      	ldrh	r2, [r0, #0]
 801c106:	f8b4 c000 	ldrh.w	ip, [r4]
 801c10a:	b29e      	uxth	r6, r3
 801c10c:	1215      	asrs	r5, r2, #8
 801c10e:	43db      	mvns	r3, r3
 801c110:	b2db      	uxtb	r3, r3
 801c112:	ea4f 272c 	mov.w	r7, ip, asr #8
 801c116:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c11a:	fb15 f503 	smulbb	r5, r5, r3
 801c11e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801c122:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c126:	00d2      	lsls	r2, r2, #3
 801c128:	fb07 5706 	mla	r7, r7, r6, r5
 801c12c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801c130:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801c134:	b2d2      	uxtb	r2, r2
 801c136:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c13a:	b2bf      	uxth	r7, r7
 801c13c:	fb1e fe03 	smulbb	lr, lr, r3
 801c140:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c144:	fa5f fc8c 	uxtb.w	ip, ip
 801c148:	fb12 f203 	smulbb	r2, r2, r3
 801c14c:	fb05 e506 	mla	r5, r5, r6, lr
 801c150:	fb0c 2c06 	mla	ip, ip, r6, r2
 801c154:	f107 0e01 	add.w	lr, r7, #1
 801c158:	fa1f fc8c 	uxth.w	ip, ip
 801c15c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801c160:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801c164:	f10c 0701 	add.w	r7, ip, #1
 801c168:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801c16c:	b2ad      	uxth	r5, r5
 801c16e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c172:	ea47 070e 	orr.w	r7, r7, lr
 801c176:	f105 0e01 	add.w	lr, r5, #1
 801c17a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801c17e:	096d      	lsrs	r5, r5, #5
 801c180:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c184:	432f      	orrs	r7, r5
 801c186:	8007      	strh	r7, [r0, #0]
 801c188:	3002      	adds	r0, #2
 801c18a:	3402      	adds	r4, #2
 801c18c:	e7ac      	b.n	801c0e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801c18e:	f8b9 3000 	ldrh.w	r3, [r9]
 801c192:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801c196:	eba3 0308 	sub.w	r3, r3, r8
 801c19a:	eba6 0608 	sub.w	r6, r6, r8
 801c19e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801c1a2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c1a6:	440e      	add	r6, r1
 801c1a8:	e797      	b.n	801c0da <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801c1aa:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801c1ae:	42a8      	cmp	r0, r5
 801c1b0:	d262      	bcs.n	801c278 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801c1b2:	9b00      	ldr	r3, [sp, #0]
 801c1b4:	4631      	mov	r1, r6
 801c1b6:	eb00 0b03 	add.w	fp, r0, r3
 801c1ba:	4558      	cmp	r0, fp
 801c1bc:	d24e      	bcs.n	801c25c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801c1be:	f811 3b01 	ldrb.w	r3, [r1], #1
 801c1c2:	b12b      	cbz	r3, 801c1d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801c1c4:	2bff      	cmp	r3, #255	; 0xff
 801c1c6:	f8b4 e000 	ldrh.w	lr, [r4]
 801c1ca:	d104      	bne.n	801c1d6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801c1cc:	f8a0 e000 	strh.w	lr, [r0]
 801c1d0:	3002      	adds	r0, #2
 801c1d2:	3402      	adds	r4, #2
 801c1d4:	e7f1      	b.n	801c1ba <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801c1d6:	8802      	ldrh	r2, [r0, #0]
 801c1d8:	b29f      	uxth	r7, r3
 801c1da:	1216      	asrs	r6, r2, #8
 801c1dc:	43db      	mvns	r3, r3
 801c1de:	b2db      	uxtb	r3, r3
 801c1e0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801c1e4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c1e8:	fb16 f603 	smulbb	r6, r6, r3
 801c1ec:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801c1f0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c1f4:	00d2      	lsls	r2, r2, #3
 801c1f6:	fb0c 6c07 	mla	ip, ip, r7, r6
 801c1fa:	b2d2      	uxtb	r2, r2
 801c1fc:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801c200:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801c204:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c208:	fb1a fa03 	smulbb	sl, sl, r3
 801c20c:	fa1f fc8c 	uxth.w	ip, ip
 801c210:	fb12 f303 	smulbb	r3, r2, r3
 801c214:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c218:	fa5f fe8e 	uxtb.w	lr, lr
 801c21c:	fb06 a607 	mla	r6, r6, r7, sl
 801c220:	f10c 0201 	add.w	r2, ip, #1
 801c224:	fb0e 3307 	mla	r3, lr, r7, r3
 801c228:	b2b6      	uxth	r6, r6
 801c22a:	b29b      	uxth	r3, r3
 801c22c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801c230:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801c234:	f106 0a01 	add.w	sl, r6, #1
 801c238:	f103 0c01 	add.w	ip, r3, #1
 801c23c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801c240:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801c244:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c248:	0976      	lsrs	r6, r6, #5
 801c24a:	ea4c 0c02 	orr.w	ip, ip, r2
 801c24e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c252:	ea4c 0c06 	orr.w	ip, ip, r6
 801c256:	f8a0 c000 	strh.w	ip, [r0]
 801c25a:	e7b9      	b.n	801c1d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801c25c:	f8b9 3000 	ldrh.w	r3, [r9]
 801c260:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801c264:	eba3 0308 	sub.w	r3, r3, r8
 801c268:	eba6 0608 	sub.w	r6, r6, r8
 801c26c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801c270:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c274:	440e      	add	r6, r1
 801c276:	e79a      	b.n	801c1ae <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801c278:	4b03      	ldr	r3, [pc, #12]	; (801c288 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801c27a:	6818      	ldr	r0, [r3, #0]
 801c27c:	6803      	ldr	r3, [r0, #0]
 801c27e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c280:	4798      	blx	r3
 801c282:	b007      	add	sp, #28
 801c284:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c288:	20020a90 	.word	0x20020a90
 801c28c:	20020a8a 	.word	0x20020a8a

0801c290 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801c290:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c294:	b089      	sub	sp, #36	; 0x24
 801c296:	4682      	mov	sl, r0
 801c298:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801c29c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c29e:	460f      	mov	r7, r1
 801c2a0:	4691      	mov	r9, r2
 801c2a2:	4698      	mov	r8, r3
 801c2a4:	2e00      	cmp	r6, #0
 801c2a6:	d03d      	beq.n	801c324 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c2a8:	4608      	mov	r0, r1
 801c2aa:	f7fc f859 	bl	8018360 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801c2ae:	4605      	mov	r5, r0
 801c2b0:	4638      	mov	r0, r7
 801c2b2:	f7fc f88f 	bl	80183d4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801c2b6:	f8ad 000e 	strh.w	r0, [sp, #14]
 801c2ba:	4638      	mov	r0, r7
 801c2bc:	f8ad 9008 	strh.w	r9, [sp, #8]
 801c2c0:	f8ad 500c 	strh.w	r5, [sp, #12]
 801c2c4:	f8ad 800a 	strh.w	r8, [sp, #10]
 801c2c8:	f7fc f952 	bl	8018570 <_ZNK8touchgfx6Bitmap7getDataEv>
 801c2cc:	4605      	mov	r5, r0
 801c2ce:	4638      	mov	r0, r7
 801c2d0:	f7fc f980 	bl	80185d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801c2d4:	4681      	mov	r9, r0
 801c2d6:	4638      	mov	r0, r7
 801c2d8:	f7fc f9d4 	bl	8018684 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801c2dc:	280b      	cmp	r0, #11
 801c2de:	f200 816f 	bhi.w	801c5c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x330>
 801c2e2:	e8df f010 	tbh	[pc, r0, lsl #1]
 801c2e6:	00c3      	.short	0x00c3
 801c2e8:	000c00b4 	.word	0x000c00b4
 801c2ec:	016d016d 	.word	0x016d016d
 801c2f0:	016d016d 	.word	0x016d016d
 801c2f4:	016d016d 	.word	0x016d016d
 801c2f8:	016d016d 	.word	0x016d016d
 801c2fc:	00bb      	.short	0x00bb
 801c2fe:	4bb3      	ldr	r3, [pc, #716]	; (801c5cc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x33c>)
 801c300:	6818      	ldr	r0, [r3, #0]
 801c302:	6803      	ldr	r3, [r0, #0]
 801c304:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c306:	4798      	blx	r3
 801c308:	2eff      	cmp	r6, #255	; 0xff
 801c30a:	d121      	bne.n	801c350 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 801c30c:	0683      	lsls	r3, r0, #26
 801c30e:	d41f      	bmi.n	801c350 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 801c310:	4638      	mov	r0, r7
 801c312:	f7fc f8f3 	bl	80184fc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801c316:	b940      	cbnz	r0, 801c32a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801c318:	4623      	mov	r3, r4
 801c31a:	aa02      	add	r2, sp, #8
 801c31c:	4629      	mov	r1, r5
 801c31e:	4650      	mov	r0, sl
 801c320:	f7ff f9e4 	bl	801b6ec <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801c324:	b009      	add	sp, #36	; 0x24
 801c326:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c32a:	f10d 0818 	add.w	r8, sp, #24
 801c32e:	4639      	mov	r1, r7
 801c330:	4640      	mov	r0, r8
 801c332:	f7fc f889 	bl	8018448 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801c336:	e898 0003 	ldmia.w	r8, {r0, r1}
 801c33a:	af04      	add	r7, sp, #16
 801c33c:	e887 0003 	stmia.w	r7, {r0, r1}
 801c340:	4638      	mov	r0, r7
 801c342:	4621      	mov	r1, r4
 801c344:	f7f4 fa0c 	bl	8010760 <_ZN8touchgfx4RectaNERKS0_>
 801c348:	4638      	mov	r0, r7
 801c34a:	f7f4 fa4c 	bl	80107e6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c34e:	b130      	cbz	r0, 801c35e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xce>
 801c350:	4633      	mov	r3, r6
 801c352:	4622      	mov	r2, r4
 801c354:	a902      	add	r1, sp, #8
 801c356:	4628      	mov	r0, r5
 801c358:	f7ff f8e2 	bl	801b520 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801c35c:	e7e2      	b.n	801c324 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c35e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801c362:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801c366:	4293      	cmp	r3, r2
 801c368:	dd12      	ble.n	801c390 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x100>
 801c36a:	1a9b      	subs	r3, r3, r2
 801c36c:	f9b4 0000 	ldrsh.w	r0, [r4]
 801c370:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801c374:	f8ad 0018 	strh.w	r0, [sp, #24]
 801c378:	f8ad 201a 	strh.w	r2, [sp, #26]
 801c37c:	f8ad 101c 	strh.w	r1, [sp, #28]
 801c380:	f8ad 301e 	strh.w	r3, [sp, #30]
 801c384:	4642      	mov	r2, r8
 801c386:	4633      	mov	r3, r6
 801c388:	a902      	add	r1, sp, #8
 801c38a:	4628      	mov	r0, r5
 801c38c:	f7ff f8c8 	bl	801b520 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801c390:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801c394:	f9b4 2000 	ldrsh.w	r2, [r4]
 801c398:	4293      	cmp	r3, r2
 801c39a:	dd12      	ble.n	801c3c2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x132>
 801c39c:	1a9b      	subs	r3, r3, r2
 801c39e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801c3a2:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801c3a6:	f8ad 2018 	strh.w	r2, [sp, #24]
 801c3aa:	f8ad 001a 	strh.w	r0, [sp, #26]
 801c3ae:	f8ad 301c 	strh.w	r3, [sp, #28]
 801c3b2:	f8ad 101e 	strh.w	r1, [sp, #30]
 801c3b6:	23ff      	movs	r3, #255	; 0xff
 801c3b8:	4642      	mov	r2, r8
 801c3ba:	a902      	add	r1, sp, #8
 801c3bc:	4628      	mov	r0, r5
 801c3be:	f7ff f8af 	bl	801b520 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801c3c2:	463b      	mov	r3, r7
 801c3c4:	aa02      	add	r2, sp, #8
 801c3c6:	4629      	mov	r1, r5
 801c3c8:	4650      	mov	r0, sl
 801c3ca:	f7ff f98f 	bl	801b6ec <_ZN8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801c3ce:	88a2      	ldrh	r2, [r4, #4]
 801c3d0:	8823      	ldrh	r3, [r4, #0]
 801c3d2:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801c3d6:	4413      	add	r3, r2
 801c3d8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c3dc:	440a      	add	r2, r1
 801c3de:	b29b      	uxth	r3, r3
 801c3e0:	b292      	uxth	r2, r2
 801c3e2:	b211      	sxth	r1, r2
 801c3e4:	b218      	sxth	r0, r3
 801c3e6:	4288      	cmp	r0, r1
 801c3e8:	dd12      	ble.n	801c410 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x180>
 801c3ea:	1a9b      	subs	r3, r3, r2
 801c3ec:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801c3f0:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801c3f4:	f8ad 1018 	strh.w	r1, [sp, #24]
 801c3f8:	f8ad 301c 	strh.w	r3, [sp, #28]
 801c3fc:	f8ad 001e 	strh.w	r0, [sp, #30]
 801c400:	23ff      	movs	r3, #255	; 0xff
 801c402:	4642      	mov	r2, r8
 801c404:	a902      	add	r1, sp, #8
 801c406:	4628      	mov	r0, r5
 801c408:	f8ad 601a 	strh.w	r6, [sp, #26]
 801c40c:	f7ff f888 	bl	801b520 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801c410:	88e2      	ldrh	r2, [r4, #6]
 801c412:	8863      	ldrh	r3, [r4, #2]
 801c414:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801c418:	4413      	add	r3, r2
 801c41a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801c41e:	440a      	add	r2, r1
 801c420:	b29b      	uxth	r3, r3
 801c422:	b292      	uxth	r2, r2
 801c424:	b211      	sxth	r1, r2
 801c426:	b218      	sxth	r0, r3
 801c428:	4288      	cmp	r0, r1
 801c42a:	f77f af7b 	ble.w	801c324 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c42e:	1a9b      	subs	r3, r3, r2
 801c430:	f9b4 6000 	ldrsh.w	r6, [r4]
 801c434:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801c438:	f8ad 301e 	strh.w	r3, [sp, #30]
 801c43c:	f8ad 6018 	strh.w	r6, [sp, #24]
 801c440:	f8ad 101a 	strh.w	r1, [sp, #26]
 801c444:	f8ad 001c 	strh.w	r0, [sp, #28]
 801c448:	23ff      	movs	r3, #255	; 0xff
 801c44a:	4642      	mov	r2, r8
 801c44c:	e782      	b.n	801c354 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc4>
 801c44e:	4633      	mov	r3, r6
 801c450:	4622      	mov	r2, r4
 801c452:	a902      	add	r1, sp, #8
 801c454:	4628      	mov	r0, r5
 801c456:	f7ff f9b9 	bl	801b7cc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801c45a:	e763      	b.n	801c324 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c45c:	9600      	str	r6, [sp, #0]
 801c45e:	4623      	mov	r3, r4
 801c460:	aa02      	add	r2, sp, #8
 801c462:	4649      	mov	r1, r9
 801c464:	4628      	mov	r0, r5
 801c466:	f7ff fdd5 	bl	801c014 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801c46a:	e75b      	b.n	801c324 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c46c:	4638      	mov	r0, r7
 801c46e:	f7fc f845 	bl	80184fc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801c472:	b950      	cbnz	r0, 801c48a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fa>
 801c474:	e9cd 6000 	strd	r6, r0, [sp]
 801c478:	f8da 3000 	ldr.w	r3, [sl]
 801c47c:	aa02      	add	r2, sp, #8
 801c47e:	68de      	ldr	r6, [r3, #12]
 801c480:	4629      	mov	r1, r5
 801c482:	4623      	mov	r3, r4
 801c484:	4650      	mov	r0, sl
 801c486:	47b0      	blx	r6
 801c488:	e74c      	b.n	801c324 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c48a:	f10d 0818 	add.w	r8, sp, #24
 801c48e:	4639      	mov	r1, r7
 801c490:	4640      	mov	r0, r8
 801c492:	f7fb ffd9 	bl	8018448 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801c496:	e898 0003 	ldmia.w	r8, {r0, r1}
 801c49a:	af04      	add	r7, sp, #16
 801c49c:	e887 0003 	stmia.w	r7, {r0, r1}
 801c4a0:	4638      	mov	r0, r7
 801c4a2:	4621      	mov	r1, r4
 801c4a4:	f7f4 f95c 	bl	8010760 <_ZN8touchgfx4RectaNERKS0_>
 801c4a8:	4638      	mov	r0, r7
 801c4aa:	f7f4 f99c 	bl	80107e6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c4ae:	b138      	cbz	r0, 801c4c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 801c4b0:	9600      	str	r6, [sp, #0]
 801c4b2:	4623      	mov	r3, r4
 801c4b4:	aa02      	add	r2, sp, #8
 801c4b6:	4649      	mov	r1, r9
 801c4b8:	4628      	mov	r0, r5
 801c4ba:	f7ff fdc3 	bl	801c044 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801c4be:	e731      	b.n	801c324 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c4c0:	e9cd 6000 	strd	r6, r0, [sp]
 801c4c4:	f8da 3000 	ldr.w	r3, [sl]
 801c4c8:	aa02      	add	r2, sp, #8
 801c4ca:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801c4ce:	4629      	mov	r1, r5
 801c4d0:	463b      	mov	r3, r7
 801c4d2:	4650      	mov	r0, sl
 801c4d4:	47d8      	blx	fp
 801c4d6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801c4da:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801c4de:	4293      	cmp	r3, r2
 801c4e0:	dd13      	ble.n	801c50a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x27a>
 801c4e2:	f9b4 0000 	ldrsh.w	r0, [r4]
 801c4e6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801c4ea:	f8ad 0018 	strh.w	r0, [sp, #24]
 801c4ee:	1a9b      	subs	r3, r3, r2
 801c4f0:	f8ad 201a 	strh.w	r2, [sp, #26]
 801c4f4:	f8ad 101c 	strh.w	r1, [sp, #28]
 801c4f8:	f8ad 301e 	strh.w	r3, [sp, #30]
 801c4fc:	9600      	str	r6, [sp, #0]
 801c4fe:	4643      	mov	r3, r8
 801c500:	aa02      	add	r2, sp, #8
 801c502:	4649      	mov	r1, r9
 801c504:	4628      	mov	r0, r5
 801c506:	f7ff fd9d 	bl	801c044 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801c50a:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801c50e:	f9b4 2000 	ldrsh.w	r2, [r4]
 801c512:	4293      	cmp	r3, r2
 801c514:	dd13      	ble.n	801c53e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2ae>
 801c516:	1a9b      	subs	r3, r3, r2
 801c518:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801c51c:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801c520:	f8ad 2018 	strh.w	r2, [sp, #24]
 801c524:	f8ad 001a 	strh.w	r0, [sp, #26]
 801c528:	f8ad 301c 	strh.w	r3, [sp, #28]
 801c52c:	f8ad 101e 	strh.w	r1, [sp, #30]
 801c530:	9600      	str	r6, [sp, #0]
 801c532:	4643      	mov	r3, r8
 801c534:	aa02      	add	r2, sp, #8
 801c536:	4649      	mov	r1, r9
 801c538:	4628      	mov	r0, r5
 801c53a:	f7ff fd83 	bl	801c044 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801c53e:	88a2      	ldrh	r2, [r4, #4]
 801c540:	8823      	ldrh	r3, [r4, #0]
 801c542:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801c546:	4413      	add	r3, r2
 801c548:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c54c:	440a      	add	r2, r1
 801c54e:	b29b      	uxth	r3, r3
 801c550:	b292      	uxth	r2, r2
 801c552:	b211      	sxth	r1, r2
 801c554:	b218      	sxth	r0, r3
 801c556:	4288      	cmp	r0, r1
 801c558:	dd13      	ble.n	801c582 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2f2>
 801c55a:	1a9b      	subs	r3, r3, r2
 801c55c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801c560:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801c564:	f8ad 1018 	strh.w	r1, [sp, #24]
 801c568:	f8ad 301c 	strh.w	r3, [sp, #28]
 801c56c:	f8ad 001e 	strh.w	r0, [sp, #30]
 801c570:	9600      	str	r6, [sp, #0]
 801c572:	4643      	mov	r3, r8
 801c574:	aa02      	add	r2, sp, #8
 801c576:	4649      	mov	r1, r9
 801c578:	4628      	mov	r0, r5
 801c57a:	f8ad 701a 	strh.w	r7, [sp, #26]
 801c57e:	f7ff fd61 	bl	801c044 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801c582:	88e2      	ldrh	r2, [r4, #6]
 801c584:	8863      	ldrh	r3, [r4, #2]
 801c586:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801c58a:	4413      	add	r3, r2
 801c58c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801c590:	440a      	add	r2, r1
 801c592:	b29b      	uxth	r3, r3
 801c594:	b292      	uxth	r2, r2
 801c596:	b211      	sxth	r1, r2
 801c598:	b218      	sxth	r0, r3
 801c59a:	4288      	cmp	r0, r1
 801c59c:	f77f aec2 	ble.w	801c324 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801c5a0:	f9b4 7000 	ldrsh.w	r7, [r4]
 801c5a4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801c5a8:	f8ad 7018 	strh.w	r7, [sp, #24]
 801c5ac:	1a9b      	subs	r3, r3, r2
 801c5ae:	f8ad 301e 	strh.w	r3, [sp, #30]
 801c5b2:	f8ad 101a 	strh.w	r1, [sp, #26]
 801c5b6:	f8ad 001c 	strh.w	r0, [sp, #28]
 801c5ba:	9600      	str	r6, [sp, #0]
 801c5bc:	4643      	mov	r3, r8
 801c5be:	e779      	b.n	801c4b4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801c5c0:	4b03      	ldr	r3, [pc, #12]	; (801c5d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x340>)
 801c5c2:	4a04      	ldr	r2, [pc, #16]	; (801c5d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x344>)
 801c5c4:	4804      	ldr	r0, [pc, #16]	; (801c5d8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x348>)
 801c5c6:	21b4      	movs	r1, #180	; 0xb4
 801c5c8:	f007 ff36 	bl	8024438 <__assert_func>
 801c5cc:	20020a90 	.word	0x20020a90
 801c5d0:	0802ac68 	.word	0x0802ac68
 801c5d4:	0802b373 	.word	0x0802b373
 801c5d8:	0802ad9e 	.word	0x0802ad9e

0801c5dc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801c5dc:	b508      	push	{r3, lr}
 801c5de:	b180      	cbz	r0, 801c602 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 801c5e0:	2902      	cmp	r1, #2
 801c5e2:	d014      	beq.n	801c60e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 801c5e4:	2903      	cmp	r1, #3
 801c5e6:	d01d      	beq.n	801c624 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 801c5e8:	2901      	cmp	r1, #1
 801c5ea:	d101      	bne.n	801c5f0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 801c5ec:	2001      	movs	r0, #1
 801c5ee:	bd08      	pop	{r3, pc}
 801c5f0:	4b0e      	ldr	r3, [pc, #56]	; (801c62c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801c5f2:	8818      	ldrh	r0, [r3, #0]
 801c5f4:	b990      	cbnz	r0, 801c61c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801c5f6:	4b0e      	ldr	r3, [pc, #56]	; (801c630 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 801c5f8:	4a0e      	ldr	r2, [pc, #56]	; (801c634 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 801c5fa:	480f      	ldr	r0, [pc, #60]	; (801c638 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 801c5fc:	2150      	movs	r1, #80	; 0x50
 801c5fe:	f007 ff1b 	bl	8024438 <__assert_func>
 801c602:	2902      	cmp	r1, #2
 801c604:	d00e      	beq.n	801c624 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 801c606:	2903      	cmp	r1, #3
 801c608:	d0f2      	beq.n	801c5f0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 801c60a:	2901      	cmp	r1, #1
 801c60c:	d1ee      	bne.n	801c5ec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 801c60e:	4b07      	ldr	r3, [pc, #28]	; (801c62c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801c610:	8818      	ldrh	r0, [r3, #0]
 801c612:	2800      	cmp	r0, #0
 801c614:	d0ef      	beq.n	801c5f6 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 801c616:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801c61a:	e7e8      	b.n	801c5ee <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 801c61c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801c620:	4240      	negs	r0, r0
 801c622:	e7e4      	b.n	801c5ee <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 801c624:	f04f 30ff 	mov.w	r0, #4294967295
 801c628:	e7e1      	b.n	801c5ee <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 801c62a:	bf00      	nop
 801c62c:	20020a8a 	.word	0x20020a8a
 801c630:	0802aef4 	.word	0x0802aef4
 801c634:	0802b4f0 	.word	0x0802b4f0
 801c638:	0802af36 	.word	0x0802af36

0801c63c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801c63c:	b508      	push	{r3, lr}
 801c63e:	b180      	cbz	r0, 801c662 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 801c640:	2902      	cmp	r1, #2
 801c642:	d014      	beq.n	801c66e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 801c644:	2903      	cmp	r1, #3
 801c646:	d018      	beq.n	801c67a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 801c648:	2901      	cmp	r1, #1
 801c64a:	d001      	beq.n	801c650 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 801c64c:	2001      	movs	r0, #1
 801c64e:	e013      	b.n	801c678 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 801c650:	4b0e      	ldr	r3, [pc, #56]	; (801c68c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801c652:	8818      	ldrh	r0, [r3, #0]
 801c654:	b970      	cbnz	r0, 801c674 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 801c656:	4b0e      	ldr	r3, [pc, #56]	; (801c690 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 801c658:	4a0e      	ldr	r2, [pc, #56]	; (801c694 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 801c65a:	480f      	ldr	r0, [pc, #60]	; (801c698 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 801c65c:	2150      	movs	r1, #80	; 0x50
 801c65e:	f007 feeb 	bl	8024438 <__assert_func>
 801c662:	2902      	cmp	r1, #2
 801c664:	d009      	beq.n	801c67a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 801c666:	2903      	cmp	r1, #3
 801c668:	d0f0      	beq.n	801c64c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 801c66a:	2901      	cmp	r1, #1
 801c66c:	d1f0      	bne.n	801c650 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 801c66e:	f04f 30ff 	mov.w	r0, #4294967295
 801c672:	e001      	b.n	801c678 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 801c674:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801c678:	bd08      	pop	{r3, pc}
 801c67a:	4b04      	ldr	r3, [pc, #16]	; (801c68c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801c67c:	8818      	ldrh	r0, [r3, #0]
 801c67e:	2800      	cmp	r0, #0
 801c680:	d0e9      	beq.n	801c656 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 801c682:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801c686:	4240      	negs	r0, r0
 801c688:	e7f6      	b.n	801c678 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 801c68a:	bf00      	nop
 801c68c:	20020a8a 	.word	0x20020a8a
 801c690:	0802aef4 	.word	0x0802aef4
 801c694:	0802b4f0 	.word	0x0802b4f0
 801c698:	0802af36 	.word	0x0802af36

0801c69c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801c69c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c6a0:	b099      	sub	sp, #100	; 0x64
 801c6a2:	910b      	str	r1, [sp, #44]	; 0x2c
 801c6a4:	a914      	add	r1, sp, #80	; 0x50
 801c6a6:	e881 000c 	stmia.w	r1, {r2, r3}
 801c6aa:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801c6ae:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801c6b2:	930a      	str	r3, [sp, #40]	; 0x28
 801c6b4:	f891 900d 	ldrb.w	r9, [r1, #13]
 801c6b8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801c6bc:	9311      	str	r3, [sp, #68]	; 0x44
 801c6be:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801c6c2:	930c      	str	r3, [sp, #48]	; 0x30
 801c6c4:	7988      	ldrb	r0, [r1, #6]
 801c6c6:	f9bd 5088 	ldrsh.w	r5, [sp, #136]	; 0x88
 801c6ca:	f8bd 6090 	ldrh.w	r6, [sp, #144]	; 0x90
 801c6ce:	f8bd 7094 	ldrh.w	r7, [sp, #148]	; 0x94
 801c6d2:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801c6d6:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801c6da:	ea4f 1349 	mov.w	r3, r9, lsl #5
 801c6de:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801c6e2:	4303      	orrs	r3, r0
 801c6e4:	9309      	str	r3, [sp, #36]	; 0x24
 801c6e6:	f000 81a1 	beq.w	801ca2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801c6ea:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801c6ee:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801c6f2:	f891 9007 	ldrb.w	r9, [r1, #7]
 801c6f6:	ea59 0903 	orrs.w	r9, r9, r3
 801c6fa:	f000 8197 	beq.w	801ca2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801c6fe:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801c702:	b29b      	uxth	r3, r3
 801c704:	2e00      	cmp	r6, #0
 801c706:	f000 813a 	beq.w	801c97e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
 801c70a:	1af6      	subs	r6, r6, r3
 801c70c:	b2b6      	uxth	r6, r6
 801c70e:	0433      	lsls	r3, r6, #16
 801c710:	d502      	bpl.n	801c718 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 801c712:	1bad      	subs	r5, r5, r6
 801c714:	b22d      	sxth	r5, r5
 801c716:	2600      	movs	r6, #0
 801c718:	f9b2 1000 	ldrsh.w	r1, [r2]
 801c71c:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 801c720:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 801c724:	428d      	cmp	r5, r1
 801c726:	b28b      	uxth	r3, r1
 801c728:	bfbf      	itttt	lt
 801c72a:	18f6      	addlt	r6, r6, r3
 801c72c:	1b75      	sublt	r5, r6, r5
 801c72e:	b2ae      	uxthlt	r6, r5
 801c730:	460d      	movlt	r5, r1
 801c732:	8891      	ldrh	r1, [r2, #4]
 801c734:	440b      	add	r3, r1
 801c736:	b21b      	sxth	r3, r3
 801c738:	9310      	str	r3, [sp, #64]	; 0x40
 801c73a:	88d3      	ldrh	r3, [r2, #6]
 801c73c:	8852      	ldrh	r2, [r2, #2]
 801c73e:	4413      	add	r3, r2
 801c740:	b21b      	sxth	r3, r3
 801c742:	930f      	str	r3, [sp, #60]	; 0x3c
 801c744:	4bbc      	ldr	r3, [pc, #752]	; (801ca38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801c746:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c748:	f893 b000 	ldrb.w	fp, [r3]
 801c74c:	f10b 3cff 	add.w	ip, fp, #4294967295
 801c750:	f1dc 0300 	rsbs	r3, ip, #0
 801c754:	eb43 030c 	adc.w	r3, r3, ip
 801c758:	930e      	str	r3, [sp, #56]	; 0x38
 801c75a:	4629      	mov	r1, r5
 801c75c:	4653      	mov	r3, sl
 801c75e:	a814      	add	r0, sp, #80	; 0x50
 801c760:	f7f7 fd31 	bl	80141c6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801c764:	4629      	mov	r1, r5
 801c766:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801c76a:	4653      	mov	r3, sl
 801c76c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c76e:	a814      	add	r0, sp, #80	; 0x50
 801c770:	f7f7 fd41 	bl	80141f6 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801c774:	a918      	add	r1, sp, #96	; 0x60
 801c776:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801c77a:	a817      	add	r0, sp, #92	; 0x5c
 801c77c:	f7f7 fe5c 	bl	8014438 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801c780:	f1ba 0f00 	cmp.w	sl, #0
 801c784:	f040 80fe 	bne.w	801c984 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e8>
 801c788:	f1bb 0f01 	cmp.w	fp, #1
 801c78c:	f040 8102 	bne.w	801c994 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f8>
 801c790:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c792:	b153      	cbz	r3, 801c7aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10e>
 801c794:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c796:	2408      	movs	r4, #8
 801c798:	fb94 f3f8 	sdiv	r3, r4, r8
 801c79c:	1e5c      	subs	r4, r3, #1
 801c79e:	4414      	add	r4, r2
 801c7a0:	fb94 f4f3 	sdiv	r4, r4, r3
 801c7a4:	fb14 f403 	smulbb	r4, r4, r3
 801c7a8:	b2a4      	uxth	r4, r4
 801c7aa:	b906      	cbnz	r6, 801c7ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 801c7ac:	b16f      	cbz	r7, 801c7ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x12e>
 801c7ae:	fb07 6304 	mla	r3, r7, r4, r6
 801c7b2:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801c7b4:	fb08 f303 	mul.w	r3, r8, r3
 801c7b8:	463a      	mov	r2, r7
 801c7ba:	f003 0707 	and.w	r7, r3, #7
 801c7be:	eb01 03d3 	add.w	r3, r1, r3, lsr #3
 801c7c2:	9328      	str	r3, [sp, #160]	; 0xa0
 801c7c4:	eba9 0302 	sub.w	r3, r9, r2
 801c7c8:	930d      	str	r3, [sp, #52]	; 0x34
 801c7ca:	4651      	mov	r1, sl
 801c7cc:	980e      	ldr	r0, [sp, #56]	; 0x38
 801c7ce:	f7ff ff05 	bl	801c5dc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801c7d2:	4651      	mov	r1, sl
 801c7d4:	4681      	mov	r9, r0
 801c7d6:	980e      	ldr	r0, [sp, #56]	; 0x38
 801c7d8:	f7ff ff30 	bl	801c63c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801c7dc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c7de:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c7e0:	eba3 0a02 	sub.w	sl, r3, r2
 801c7e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c7e6:	459a      	cmp	sl, r3
 801c7e8:	bfa8      	it	ge
 801c7ea:	469a      	movge	sl, r3
 801c7ec:	f1ba 0f00 	cmp.w	sl, #0
 801c7f0:	4683      	mov	fp, r0
 801c7f2:	f340 811b 	ble.w	801ca2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801c7f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c7f8:	1bad      	subs	r5, r5, r6
 801c7fa:	1b5d      	subs	r5, r3, r5
 801c7fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c7fe:	429d      	cmp	r5, r3
 801c800:	bfd4      	ite	le
 801c802:	ebc6 0605 	rsble	r6, r6, r5
 801c806:	ebc6 0603 	rsbgt	r6, r6, r3
 801c80a:	2e00      	cmp	r6, #0
 801c80c:	f340 810e 	ble.w	801ca2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801c810:	1ba4      	subs	r4, r4, r6
 801c812:	fb08 f304 	mul.w	r3, r8, r4
 801c816:	930f      	str	r3, [sp, #60]	; 0x3c
 801c818:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c81a:	2b00      	cmp	r3, #0
 801c81c:	f040 8114 	bne.w	801ca48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801c820:	4b86      	ldr	r3, [pc, #536]	; (801ca3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801c822:	6818      	ldr	r0, [r3, #0]
 801c824:	6803      	ldr	r3, [r0, #0]
 801c826:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c828:	4798      	blx	r3
 801c82a:	2301      	movs	r3, #1
 801c82c:	fa03 f308 	lsl.w	r3, r3, r8
 801c830:	4a83      	ldr	r2, [pc, #524]	; (801ca40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801c832:	3b01      	subs	r3, #1
 801c834:	b2db      	uxtb	r3, r3
 801c836:	8811      	ldrh	r1, [r2, #0]
 801c838:	930e      	str	r3, [sp, #56]	; 0x38
 801c83a:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801c83e:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801c842:	fb01 2303 	mla	r3, r1, r3, r2
 801c846:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c84a:	930a      	str	r3, [sp, #40]	; 0x28
 801c84c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801c84e:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801c852:	9313      	str	r3, [sp, #76]	; 0x4c
 801c854:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801c856:	0a19      	lsrs	r1, r3, #8
 801c858:	b2cb      	uxtb	r3, r1
 801c85a:	9312      	str	r3, [sp, #72]	; 0x48
 801c85c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801c85e:	b2db      	uxtb	r3, r3
 801c860:	9311      	str	r3, [sp, #68]	; 0x44
 801c862:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801c864:	095a      	lsrs	r2, r3, #5
 801c866:	4b77      	ldr	r3, [pc, #476]	; (801ca44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801c868:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c86c:	400b      	ands	r3, r1
 801c86e:	4313      	orrs	r3, r2
 801c870:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801c872:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c876:	4313      	orrs	r3, r2
 801c878:	b29b      	uxth	r3, r3
 801c87a:	9310      	str	r3, [sp, #64]	; 0x40
 801c87c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c87e:	781a      	ldrb	r2, [r3, #0]
 801c880:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801c884:	413a      	asrs	r2, r7
 801c886:	fb06 b919 	mls	r9, r6, r9, fp
 801c88a:	fb03 fb06 	mul.w	fp, r3, r6
 801c88e:	b2d2      	uxtb	r2, r2
 801c890:	930d      	str	r3, [sp, #52]	; 0x34
 801c892:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801c896:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801c89a:	f0c0 80ea 	bcc.w	801ca72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d6>
 801c89e:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801c8a2:	46b6      	mov	lr, r6
 801c8a4:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801c8a8:	f0c0 80d2 	bcc.w	801ca50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 801c8ac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c8ae:	4013      	ands	r3, r2
 801c8b0:	d055      	beq.n	801c95e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c2>
 801c8b2:	20ff      	movs	r0, #255	; 0xff
 801c8b4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c8b6:	fb90 f1f1 	sdiv	r1, r0, r1
 801c8ba:	434b      	muls	r3, r1
 801c8bc:	2bfe      	cmp	r3, #254	; 0xfe
 801c8be:	dd03      	ble.n	801c8c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x22c>
 801c8c0:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c8c2:	4281      	cmp	r1, r0
 801c8c4:	f000 80c2 	beq.w	801ca4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801c8c8:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c8ca:	f8bc 4000 	ldrh.w	r4, [ip]
 801c8ce:	fb11 f303 	smulbb	r3, r1, r3
 801c8d2:	b29b      	uxth	r3, r3
 801c8d4:	1c59      	adds	r1, r3, #1
 801c8d6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801c8da:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c8de:	b29d      	uxth	r5, r3
 801c8e0:	43db      	mvns	r3, r3
 801c8e2:	b2db      	uxtb	r3, r3
 801c8e4:	9309      	str	r3, [sp, #36]	; 0x24
 801c8e6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c8e8:	1220      	asrs	r0, r4, #8
 801c8ea:	fb13 f905 	smulbb	r9, r3, r5
 801c8ee:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c8f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c8f4:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801c8f8:	fb00 9003 	mla	r0, r0, r3, r9
 801c8fc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801c8fe:	10e1      	asrs	r1, r4, #3
 801c900:	fb13 f905 	smulbb	r9, r3, r5
 801c904:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c908:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c90a:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801c90e:	fb01 9103 	mla	r1, r1, r3, r9
 801c912:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c914:	00e4      	lsls	r4, r4, #3
 801c916:	fb13 f505 	smulbb	r5, r3, r5
 801c91a:	b2e4      	uxtb	r4, r4
 801c91c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c91e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801c922:	fb04 5403 	mla	r4, r4, r3, r5
 801c926:	b280      	uxth	r0, r0
 801c928:	b2a4      	uxth	r4, r4
 801c92a:	1c43      	adds	r3, r0, #1
 801c92c:	f104 0901 	add.w	r9, r4, #1
 801c930:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c934:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801c938:	b289      	uxth	r1, r1
 801c93a:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801c93e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801c942:	ea49 0000 	orr.w	r0, r9, r0
 801c946:	f101 0901 	add.w	r9, r1, #1
 801c94a:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801c94e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c952:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c956:	ea40 0009 	orr.w	r0, r0, r9
 801c95a:	f8ac 0000 	strh.w	r0, [ip]
 801c95e:	4447      	add	r7, r8
 801c960:	b2bf      	uxth	r7, r7
 801c962:	2f07      	cmp	r7, #7
 801c964:	bf81      	itttt	hi
 801c966:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801c968:	785a      	ldrbhi	r2, [r3, #1]
 801c96a:	3301      	addhi	r3, #1
 801c96c:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801c96e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c970:	bf9a      	itte	ls
 801c972:	fa42 f208 	asrls.w	r2, r2, r8
 801c976:	b2d2      	uxtbls	r2, r2
 801c978:	2700      	movhi	r7, #0
 801c97a:	449c      	add	ip, r3
 801c97c:	e792      	b.n	801c8a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x208>
 801c97e:	441d      	add	r5, r3
 801c980:	b22d      	sxth	r5, r5
 801c982:	e6c9      	b.n	801c718 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 801c984:	f1ba 0f01 	cmp.w	sl, #1
 801c988:	f47f af02 	bne.w	801c790 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801c98c:	f1bb 0f01 	cmp.w	fp, #1
 801c990:	f47f aefe 	bne.w	801c790 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801c994:	f8df b0a4 	ldr.w	fp, [pc, #164]	; 801ca3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801c998:	f8db 0000 	ldr.w	r0, [fp]
 801c99c:	6803      	ldr	r3, [r0, #0]
 801c99e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c9a0:	4798      	blx	r3
 801c9a2:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801c9a6:	465a      	mov	r2, fp
 801c9a8:	d006      	beq.n	801c9b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 801c9aa:	f1b8 0f04 	cmp.w	r8, #4
 801c9ae:	d140      	bne.n	801ca32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801c9b0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c9b2:	3300      	adds	r3, #0
 801c9b4:	bf18      	it	ne
 801c9b6:	2301      	movne	r3, #1
 801c9b8:	0580      	lsls	r0, r0, #22
 801c9ba:	d563      	bpl.n	801ca84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 801c9bc:	f1b8 0f08 	cmp.w	r8, #8
 801c9c0:	d160      	bne.n	801ca84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 801c9c2:	2b00      	cmp	r3, #0
 801c9c4:	bf0c      	ite	eq
 801c9c6:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801c9ca:	f44f 7180 	movne.w	r1, #256	; 0x100
 801c9ce:	2e00      	cmp	r6, #0
 801c9d0:	f47f aede 	bne.w	801c790 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801c9d4:	2f00      	cmp	r7, #0
 801c9d6:	f47f aedb 	bne.w	801c790 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801c9da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c9dc:	9810      	ldr	r0, [sp, #64]	; 0x40
 801c9de:	18eb      	adds	r3, r5, r3
 801c9e0:	4283      	cmp	r3, r0
 801c9e2:	f73f aed5 	bgt.w	801c790 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801c9e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c9e8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c9ea:	444b      	add	r3, r9
 801c9ec:	4283      	cmp	r3, r0
 801c9ee:	f73f aecf 	bgt.w	801c790 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801c9f2:	6810      	ldr	r0, [r2, #0]
 801c9f4:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801c9f8:	6805      	ldr	r5, [r0, #0]
 801c9fa:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801c9fe:	f1b8 0f08 	cmp.w	r8, #8
 801ca02:	f04f 0600 	mov.w	r6, #0
 801ca06:	bf18      	it	ne
 801ca08:	3401      	addne	r4, #1
 801ca0a:	e9cd 1605 	strd	r1, r6, [sp, #20]
 801ca0e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ca10:	9104      	str	r1, [sp, #16]
 801ca12:	bf18      	it	ne
 801ca14:	f024 0401 	bicne.w	r4, r4, #1
 801ca18:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801ca1a:	bf18      	it	ne
 801ca1c:	b2a4      	uxthne	r4, r4
 801ca1e:	e9cd 4102 	strd	r4, r1, [sp, #8]
 801ca22:	e9cd 4900 	strd	r4, r9, [sp]
 801ca26:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801ca28:	6d6c      	ldr	r4, [r5, #84]	; 0x54
 801ca2a:	47a0      	blx	r4
 801ca2c:	b019      	add	sp, #100	; 0x64
 801ca2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ca32:	2300      	movs	r3, #0
 801ca34:	e7c0      	b.n	801c9b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 801ca36:	bf00      	nop
 801ca38:	20020a88 	.word	0x20020a88
 801ca3c:	20020a90 	.word	0x20020a90
 801ca40:	20020a8a 	.word	0x20020a8a
 801ca44:	00fff800 	.word	0x00fff800
 801ca48:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801ca4a:	e6ee      	b.n	801c82a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x18e>
 801ca4c:	9810      	ldr	r0, [sp, #64]	; 0x40
 801ca4e:	e784      	b.n	801c95a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2be>
 801ca50:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ca52:	b153      	cbz	r3, 801ca6a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ce>
 801ca54:	441f      	add	r7, r3
 801ca56:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ca58:	b2bf      	uxth	r7, r7
 801ca5a:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 801ca5e:	f007 0707 	and.w	r7, r7, #7
 801ca62:	781a      	ldrb	r2, [r3, #0]
 801ca64:	9328      	str	r3, [sp, #160]	; 0xa0
 801ca66:	413a      	asrs	r2, r7
 801ca68:	b2d2      	uxtb	r2, r2
 801ca6a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ca6c:	445b      	add	r3, fp
 801ca6e:	930a      	str	r3, [sp, #40]	; 0x28
 801ca70:	e711      	b.n	801c896 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1fa>
 801ca72:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ca74:	2b00      	cmp	r3, #0
 801ca76:	d1d9      	bne.n	801ca2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801ca78:	4b05      	ldr	r3, [pc, #20]	; (801ca90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f4>)
 801ca7a:	6818      	ldr	r0, [r3, #0]
 801ca7c:	6803      	ldr	r3, [r0, #0]
 801ca7e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ca80:	4798      	blx	r3
 801ca82:	e7d3      	b.n	801ca2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801ca84:	2b00      	cmp	r3, #0
 801ca86:	f43f ae83 	beq.w	801c790 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801ca8a:	f44f 7180 	mov.w	r1, #256	; 0x100
 801ca8e:	e79e      	b.n	801c9ce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x332>
 801ca90:	20020a90 	.word	0x20020a90

0801ca94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801ca94:	b538      	push	{r3, r4, r5, lr}
 801ca96:	4c15      	ldr	r4, [pc, #84]	; (801caec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801ca98:	7823      	ldrb	r3, [r4, #0]
 801ca9a:	f3bf 8f5b 	dmb	ish
 801ca9e:	07da      	lsls	r2, r3, #31
 801caa0:	4605      	mov	r5, r0
 801caa2:	d40b      	bmi.n	801cabc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801caa4:	4620      	mov	r0, r4
 801caa6:	f007 fc9a 	bl	80243de <__cxa_guard_acquire>
 801caaa:	b138      	cbz	r0, 801cabc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801caac:	4620      	mov	r0, r4
 801caae:	f007 fca2 	bl	80243f6 <__cxa_guard_release>
 801cab2:	4a0f      	ldr	r2, [pc, #60]	; (801caf0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801cab4:	490f      	ldr	r1, [pc, #60]	; (801caf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801cab6:	4810      	ldr	r0, [pc, #64]	; (801caf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801cab8:	f007 fc8a 	bl	80243d0 <__aeabi_atexit>
 801cabc:	4c0f      	ldr	r4, [pc, #60]	; (801cafc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801cabe:	7823      	ldrb	r3, [r4, #0]
 801cac0:	f3bf 8f5b 	dmb	ish
 801cac4:	07db      	lsls	r3, r3, #31
 801cac6:	d40b      	bmi.n	801cae0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801cac8:	4620      	mov	r0, r4
 801caca:	f007 fc88 	bl	80243de <__cxa_guard_acquire>
 801cace:	b138      	cbz	r0, 801cae0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801cad0:	4620      	mov	r0, r4
 801cad2:	f007 fc90 	bl	80243f6 <__cxa_guard_release>
 801cad6:	4a06      	ldr	r2, [pc, #24]	; (801caf0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801cad8:	4909      	ldr	r1, [pc, #36]	; (801cb00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801cada:	480a      	ldr	r0, [pc, #40]	; (801cb04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801cadc:	f007 fc78 	bl	80243d0 <__aeabi_atexit>
 801cae0:	4b05      	ldr	r3, [pc, #20]	; (801caf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801cae2:	612b      	str	r3, [r5, #16]
 801cae4:	4b07      	ldr	r3, [pc, #28]	; (801cb04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801cae6:	616b      	str	r3, [r5, #20]
 801cae8:	bd38      	pop	{r3, r4, r5, pc}
 801caea:	bf00      	nop
 801caec:	20020b5c 	.word	0x20020b5c
 801caf0:	20000000 	.word	0x20000000
 801caf4:	0801ac85 	.word	0x0801ac85
 801caf8:	200000a8 	.word	0x200000a8
 801cafc:	20020b60 	.word	0x20020b60
 801cb00:	0801ac83 	.word	0x0801ac83
 801cb04:	200000ac 	.word	0x200000ac

0801cb08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801cb08:	b538      	push	{r3, r4, r5, lr}
 801cb0a:	4c15      	ldr	r4, [pc, #84]	; (801cb60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801cb0c:	7823      	ldrb	r3, [r4, #0]
 801cb0e:	f3bf 8f5b 	dmb	ish
 801cb12:	07da      	lsls	r2, r3, #31
 801cb14:	4605      	mov	r5, r0
 801cb16:	d40b      	bmi.n	801cb30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801cb18:	4620      	mov	r0, r4
 801cb1a:	f007 fc60 	bl	80243de <__cxa_guard_acquire>
 801cb1e:	b138      	cbz	r0, 801cb30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801cb20:	4620      	mov	r0, r4
 801cb22:	f007 fc68 	bl	80243f6 <__cxa_guard_release>
 801cb26:	4a0f      	ldr	r2, [pc, #60]	; (801cb64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801cb28:	490f      	ldr	r1, [pc, #60]	; (801cb68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801cb2a:	4810      	ldr	r0, [pc, #64]	; (801cb6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801cb2c:	f007 fc50 	bl	80243d0 <__aeabi_atexit>
 801cb30:	4c0f      	ldr	r4, [pc, #60]	; (801cb70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801cb32:	7823      	ldrb	r3, [r4, #0]
 801cb34:	f3bf 8f5b 	dmb	ish
 801cb38:	07db      	lsls	r3, r3, #31
 801cb3a:	d40b      	bmi.n	801cb54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801cb3c:	4620      	mov	r0, r4
 801cb3e:	f007 fc4e 	bl	80243de <__cxa_guard_acquire>
 801cb42:	b138      	cbz	r0, 801cb54 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801cb44:	4620      	mov	r0, r4
 801cb46:	f007 fc56 	bl	80243f6 <__cxa_guard_release>
 801cb4a:	4a06      	ldr	r2, [pc, #24]	; (801cb64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801cb4c:	4909      	ldr	r1, [pc, #36]	; (801cb74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801cb4e:	480a      	ldr	r0, [pc, #40]	; (801cb78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801cb50:	f007 fc3e 	bl	80243d0 <__aeabi_atexit>
 801cb54:	4b05      	ldr	r3, [pc, #20]	; (801cb6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801cb56:	60ab      	str	r3, [r5, #8]
 801cb58:	4b07      	ldr	r3, [pc, #28]	; (801cb78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801cb5a:	60eb      	str	r3, [r5, #12]
 801cb5c:	bd38      	pop	{r3, r4, r5, pc}
 801cb5e:	bf00      	nop
 801cb60:	20020b34 	.word	0x20020b34
 801cb64:	20000000 	.word	0x20000000
 801cb68:	0801ac89 	.word	0x0801ac89
 801cb6c:	20000080 	.word	0x20000080
 801cb70:	20020b38 	.word	0x20020b38
 801cb74:	0801ac87 	.word	0x0801ac87
 801cb78:	20000084 	.word	0x20000084

0801cb7c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801cb7c:	b510      	push	{r4, lr}
 801cb7e:	4604      	mov	r4, r0
 801cb80:	f7ff ff88 	bl	801ca94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801cb84:	4620      	mov	r0, r4
 801cb86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801cb8a:	f7ff bfbd 	b.w	801cb08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801cb90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801cb90:	b538      	push	{r3, r4, r5, lr}
 801cb92:	4c15      	ldr	r4, [pc, #84]	; (801cbe8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801cb94:	7823      	ldrb	r3, [r4, #0]
 801cb96:	f3bf 8f5b 	dmb	ish
 801cb9a:	07da      	lsls	r2, r3, #31
 801cb9c:	4605      	mov	r5, r0
 801cb9e:	d40b      	bmi.n	801cbb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801cba0:	4620      	mov	r0, r4
 801cba2:	f007 fc1c 	bl	80243de <__cxa_guard_acquire>
 801cba6:	b138      	cbz	r0, 801cbb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801cba8:	4620      	mov	r0, r4
 801cbaa:	f007 fc24 	bl	80243f6 <__cxa_guard_release>
 801cbae:	4a0f      	ldr	r2, [pc, #60]	; (801cbec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801cbb0:	490f      	ldr	r1, [pc, #60]	; (801cbf0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801cbb2:	4810      	ldr	r0, [pc, #64]	; (801cbf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801cbb4:	f007 fc0c 	bl	80243d0 <__aeabi_atexit>
 801cbb8:	4c0f      	ldr	r4, [pc, #60]	; (801cbf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801cbba:	7823      	ldrb	r3, [r4, #0]
 801cbbc:	f3bf 8f5b 	dmb	ish
 801cbc0:	07db      	lsls	r3, r3, #31
 801cbc2:	d40b      	bmi.n	801cbdc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801cbc4:	4620      	mov	r0, r4
 801cbc6:	f007 fc0a 	bl	80243de <__cxa_guard_acquire>
 801cbca:	b138      	cbz	r0, 801cbdc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801cbcc:	4620      	mov	r0, r4
 801cbce:	f007 fc12 	bl	80243f6 <__cxa_guard_release>
 801cbd2:	4a06      	ldr	r2, [pc, #24]	; (801cbec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801cbd4:	4909      	ldr	r1, [pc, #36]	; (801cbfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801cbd6:	480a      	ldr	r0, [pc, #40]	; (801cc00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801cbd8:	f007 fbfa 	bl	80243d0 <__aeabi_atexit>
 801cbdc:	4b05      	ldr	r3, [pc, #20]	; (801cbf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801cbde:	622b      	str	r3, [r5, #32]
 801cbe0:	4b07      	ldr	r3, [pc, #28]	; (801cc00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801cbe2:	626b      	str	r3, [r5, #36]	; 0x24
 801cbe4:	bd38      	pop	{r3, r4, r5, pc}
 801cbe6:	bf00      	nop
 801cbe8:	20020b64 	.word	0x20020b64
 801cbec:	20000000 	.word	0x20000000
 801cbf0:	0801ac7d 	.word	0x0801ac7d
 801cbf4:	200000b0 	.word	0x200000b0
 801cbf8:	20020b68 	.word	0x20020b68
 801cbfc:	0801ac7b 	.word	0x0801ac7b
 801cc00:	200000b4 	.word	0x200000b4

0801cc04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801cc04:	b538      	push	{r3, r4, r5, lr}
 801cc06:	4c15      	ldr	r4, [pc, #84]	; (801cc5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801cc08:	7823      	ldrb	r3, [r4, #0]
 801cc0a:	f3bf 8f5b 	dmb	ish
 801cc0e:	07da      	lsls	r2, r3, #31
 801cc10:	4605      	mov	r5, r0
 801cc12:	d40b      	bmi.n	801cc2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801cc14:	4620      	mov	r0, r4
 801cc16:	f007 fbe2 	bl	80243de <__cxa_guard_acquire>
 801cc1a:	b138      	cbz	r0, 801cc2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801cc1c:	4620      	mov	r0, r4
 801cc1e:	f007 fbea 	bl	80243f6 <__cxa_guard_release>
 801cc22:	4a0f      	ldr	r2, [pc, #60]	; (801cc60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801cc24:	490f      	ldr	r1, [pc, #60]	; (801cc64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801cc26:	4810      	ldr	r0, [pc, #64]	; (801cc68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801cc28:	f007 fbd2 	bl	80243d0 <__aeabi_atexit>
 801cc2c:	4c0f      	ldr	r4, [pc, #60]	; (801cc6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801cc2e:	7823      	ldrb	r3, [r4, #0]
 801cc30:	f3bf 8f5b 	dmb	ish
 801cc34:	07db      	lsls	r3, r3, #31
 801cc36:	d40b      	bmi.n	801cc50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801cc38:	4620      	mov	r0, r4
 801cc3a:	f007 fbd0 	bl	80243de <__cxa_guard_acquire>
 801cc3e:	b138      	cbz	r0, 801cc50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801cc40:	4620      	mov	r0, r4
 801cc42:	f007 fbd8 	bl	80243f6 <__cxa_guard_release>
 801cc46:	4a06      	ldr	r2, [pc, #24]	; (801cc60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801cc48:	4909      	ldr	r1, [pc, #36]	; (801cc70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801cc4a:	480a      	ldr	r0, [pc, #40]	; (801cc74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801cc4c:	f007 fbc0 	bl	80243d0 <__aeabi_atexit>
 801cc50:	4b05      	ldr	r3, [pc, #20]	; (801cc68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801cc52:	61ab      	str	r3, [r5, #24]
 801cc54:	4b07      	ldr	r3, [pc, #28]	; (801cc74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801cc56:	61eb      	str	r3, [r5, #28]
 801cc58:	bd38      	pop	{r3, r4, r5, pc}
 801cc5a:	bf00      	nop
 801cc5c:	20020b3c 	.word	0x20020b3c
 801cc60:	20000000 	.word	0x20000000
 801cc64:	0801ac81 	.word	0x0801ac81
 801cc68:	20000088 	.word	0x20000088
 801cc6c:	20020b40 	.word	0x20020b40
 801cc70:	0801ac7f 	.word	0x0801ac7f
 801cc74:	2000008c 	.word	0x2000008c

0801cc78 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801cc78:	b510      	push	{r4, lr}
 801cc7a:	4604      	mov	r4, r0
 801cc7c:	f7ff ff88 	bl	801cb90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801cc80:	4620      	mov	r0, r4
 801cc82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801cc86:	f7ff bfbd 	b.w	801cc04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801cc8c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801cc8c:	b538      	push	{r3, r4, r5, lr}
 801cc8e:	4c15      	ldr	r4, [pc, #84]	; (801cce4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801cc90:	7823      	ldrb	r3, [r4, #0]
 801cc92:	f3bf 8f5b 	dmb	ish
 801cc96:	07da      	lsls	r2, r3, #31
 801cc98:	4605      	mov	r5, r0
 801cc9a:	d40b      	bmi.n	801ccb4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801cc9c:	4620      	mov	r0, r4
 801cc9e:	f007 fb9e 	bl	80243de <__cxa_guard_acquire>
 801cca2:	b138      	cbz	r0, 801ccb4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801cca4:	4620      	mov	r0, r4
 801cca6:	f007 fba6 	bl	80243f6 <__cxa_guard_release>
 801ccaa:	4a0f      	ldr	r2, [pc, #60]	; (801cce8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801ccac:	490f      	ldr	r1, [pc, #60]	; (801ccec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801ccae:	4810      	ldr	r0, [pc, #64]	; (801ccf0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801ccb0:	f007 fb8e 	bl	80243d0 <__aeabi_atexit>
 801ccb4:	4c0f      	ldr	r4, [pc, #60]	; (801ccf4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801ccb6:	7823      	ldrb	r3, [r4, #0]
 801ccb8:	f3bf 8f5b 	dmb	ish
 801ccbc:	07db      	lsls	r3, r3, #31
 801ccbe:	d40b      	bmi.n	801ccd8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801ccc0:	4620      	mov	r0, r4
 801ccc2:	f007 fb8c 	bl	80243de <__cxa_guard_acquire>
 801ccc6:	b138      	cbz	r0, 801ccd8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801ccc8:	4620      	mov	r0, r4
 801ccca:	f007 fb94 	bl	80243f6 <__cxa_guard_release>
 801ccce:	4a06      	ldr	r2, [pc, #24]	; (801cce8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801ccd0:	4909      	ldr	r1, [pc, #36]	; (801ccf8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801ccd2:	480a      	ldr	r0, [pc, #40]	; (801ccfc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801ccd4:	f007 fb7c 	bl	80243d0 <__aeabi_atexit>
 801ccd8:	4b05      	ldr	r3, [pc, #20]	; (801ccf0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801ccda:	632b      	str	r3, [r5, #48]	; 0x30
 801ccdc:	4b07      	ldr	r3, [pc, #28]	; (801ccfc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801ccde:	636b      	str	r3, [r5, #52]	; 0x34
 801cce0:	bd38      	pop	{r3, r4, r5, pc}
 801cce2:	bf00      	nop
 801cce4:	20020b74 	.word	0x20020b74
 801cce8:	20000000 	.word	0x20000000
 801ccec:	0801ac75 	.word	0x0801ac75
 801ccf0:	200000c0 	.word	0x200000c0
 801ccf4:	20020b78 	.word	0x20020b78
 801ccf8:	0801ac73 	.word	0x0801ac73
 801ccfc:	200000c4 	.word	0x200000c4

0801cd00 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801cd00:	b538      	push	{r3, r4, r5, lr}
 801cd02:	4c15      	ldr	r4, [pc, #84]	; (801cd58 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801cd04:	7823      	ldrb	r3, [r4, #0]
 801cd06:	f3bf 8f5b 	dmb	ish
 801cd0a:	07da      	lsls	r2, r3, #31
 801cd0c:	4605      	mov	r5, r0
 801cd0e:	d40b      	bmi.n	801cd28 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801cd10:	4620      	mov	r0, r4
 801cd12:	f007 fb64 	bl	80243de <__cxa_guard_acquire>
 801cd16:	b138      	cbz	r0, 801cd28 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801cd18:	4620      	mov	r0, r4
 801cd1a:	f007 fb6c 	bl	80243f6 <__cxa_guard_release>
 801cd1e:	4a0f      	ldr	r2, [pc, #60]	; (801cd5c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801cd20:	490f      	ldr	r1, [pc, #60]	; (801cd60 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801cd22:	4810      	ldr	r0, [pc, #64]	; (801cd64 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801cd24:	f007 fb54 	bl	80243d0 <__aeabi_atexit>
 801cd28:	4c0f      	ldr	r4, [pc, #60]	; (801cd68 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801cd2a:	7823      	ldrb	r3, [r4, #0]
 801cd2c:	f3bf 8f5b 	dmb	ish
 801cd30:	07db      	lsls	r3, r3, #31
 801cd32:	d40b      	bmi.n	801cd4c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801cd34:	4620      	mov	r0, r4
 801cd36:	f007 fb52 	bl	80243de <__cxa_guard_acquire>
 801cd3a:	b138      	cbz	r0, 801cd4c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801cd3c:	4620      	mov	r0, r4
 801cd3e:	f007 fb5a 	bl	80243f6 <__cxa_guard_release>
 801cd42:	4a06      	ldr	r2, [pc, #24]	; (801cd5c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801cd44:	4909      	ldr	r1, [pc, #36]	; (801cd6c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801cd46:	480a      	ldr	r0, [pc, #40]	; (801cd70 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801cd48:	f007 fb42 	bl	80243d0 <__aeabi_atexit>
 801cd4c:	4b05      	ldr	r3, [pc, #20]	; (801cd64 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801cd4e:	62ab      	str	r3, [r5, #40]	; 0x28
 801cd50:	4b07      	ldr	r3, [pc, #28]	; (801cd70 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801cd52:	62eb      	str	r3, [r5, #44]	; 0x2c
 801cd54:	bd38      	pop	{r3, r4, r5, pc}
 801cd56:	bf00      	nop
 801cd58:	20020b44 	.word	0x20020b44
 801cd5c:	20000000 	.word	0x20000000
 801cd60:	0801ac79 	.word	0x0801ac79
 801cd64:	20000090 	.word	0x20000090
 801cd68:	20020b48 	.word	0x20020b48
 801cd6c:	0801ac77 	.word	0x0801ac77
 801cd70:	20000094 	.word	0x20000094

0801cd74 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801cd74:	b510      	push	{r4, lr}
 801cd76:	4604      	mov	r4, r0
 801cd78:	f7ff ff88 	bl	801cc8c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801cd7c:	4620      	mov	r0, r4
 801cd7e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801cd82:	f7ff bfbd 	b.w	801cd00 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801cd88 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801cd88:	b538      	push	{r3, r4, r5, lr}
 801cd8a:	4c15      	ldr	r4, [pc, #84]	; (801cde0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801cd8c:	7823      	ldrb	r3, [r4, #0]
 801cd8e:	f3bf 8f5b 	dmb	ish
 801cd92:	07da      	lsls	r2, r3, #31
 801cd94:	4605      	mov	r5, r0
 801cd96:	d40b      	bmi.n	801cdb0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801cd98:	4620      	mov	r0, r4
 801cd9a:	f007 fb20 	bl	80243de <__cxa_guard_acquire>
 801cd9e:	b138      	cbz	r0, 801cdb0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801cda0:	4620      	mov	r0, r4
 801cda2:	f007 fb28 	bl	80243f6 <__cxa_guard_release>
 801cda6:	4a0f      	ldr	r2, [pc, #60]	; (801cde4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801cda8:	490f      	ldr	r1, [pc, #60]	; (801cde8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801cdaa:	4810      	ldr	r0, [pc, #64]	; (801cdec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801cdac:	f007 fb10 	bl	80243d0 <__aeabi_atexit>
 801cdb0:	4c0f      	ldr	r4, [pc, #60]	; (801cdf0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801cdb2:	7823      	ldrb	r3, [r4, #0]
 801cdb4:	f3bf 8f5b 	dmb	ish
 801cdb8:	07db      	lsls	r3, r3, #31
 801cdba:	d40b      	bmi.n	801cdd4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801cdbc:	4620      	mov	r0, r4
 801cdbe:	f007 fb0e 	bl	80243de <__cxa_guard_acquire>
 801cdc2:	b138      	cbz	r0, 801cdd4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801cdc4:	4620      	mov	r0, r4
 801cdc6:	f007 fb16 	bl	80243f6 <__cxa_guard_release>
 801cdca:	4a06      	ldr	r2, [pc, #24]	; (801cde4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801cdcc:	4909      	ldr	r1, [pc, #36]	; (801cdf4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801cdce:	480a      	ldr	r0, [pc, #40]	; (801cdf8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801cdd0:	f007 fafe 	bl	80243d0 <__aeabi_atexit>
 801cdd4:	4b05      	ldr	r3, [pc, #20]	; (801cdec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801cdd6:	652b      	str	r3, [r5, #80]	; 0x50
 801cdd8:	4b07      	ldr	r3, [pc, #28]	; (801cdf8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801cdda:	656b      	str	r3, [r5, #84]	; 0x54
 801cddc:	bd38      	pop	{r3, r4, r5, pc}
 801cdde:	bf00      	nop
 801cde0:	20020b7c 	.word	0x20020b7c
 801cde4:	20000000 	.word	0x20000000
 801cde8:	0801ac65 	.word	0x0801ac65
 801cdec:	200000c8 	.word	0x200000c8
 801cdf0:	20020b80 	.word	0x20020b80
 801cdf4:	0801ac63 	.word	0x0801ac63
 801cdf8:	200000cc 	.word	0x200000cc

0801cdfc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801cdfc:	b538      	push	{r3, r4, r5, lr}
 801cdfe:	4c15      	ldr	r4, [pc, #84]	; (801ce54 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801ce00:	7823      	ldrb	r3, [r4, #0]
 801ce02:	f3bf 8f5b 	dmb	ish
 801ce06:	07da      	lsls	r2, r3, #31
 801ce08:	4605      	mov	r5, r0
 801ce0a:	d40b      	bmi.n	801ce24 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801ce0c:	4620      	mov	r0, r4
 801ce0e:	f007 fae6 	bl	80243de <__cxa_guard_acquire>
 801ce12:	b138      	cbz	r0, 801ce24 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801ce14:	4620      	mov	r0, r4
 801ce16:	f007 faee 	bl	80243f6 <__cxa_guard_release>
 801ce1a:	4a0f      	ldr	r2, [pc, #60]	; (801ce58 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801ce1c:	490f      	ldr	r1, [pc, #60]	; (801ce5c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801ce1e:	4810      	ldr	r0, [pc, #64]	; (801ce60 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801ce20:	f007 fad6 	bl	80243d0 <__aeabi_atexit>
 801ce24:	4c0f      	ldr	r4, [pc, #60]	; (801ce64 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801ce26:	7823      	ldrb	r3, [r4, #0]
 801ce28:	f3bf 8f5b 	dmb	ish
 801ce2c:	07db      	lsls	r3, r3, #31
 801ce2e:	d40b      	bmi.n	801ce48 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801ce30:	4620      	mov	r0, r4
 801ce32:	f007 fad4 	bl	80243de <__cxa_guard_acquire>
 801ce36:	b138      	cbz	r0, 801ce48 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801ce38:	4620      	mov	r0, r4
 801ce3a:	f007 fadc 	bl	80243f6 <__cxa_guard_release>
 801ce3e:	4a06      	ldr	r2, [pc, #24]	; (801ce58 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801ce40:	4909      	ldr	r1, [pc, #36]	; (801ce68 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801ce42:	480a      	ldr	r0, [pc, #40]	; (801ce6c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801ce44:	f007 fac4 	bl	80243d0 <__aeabi_atexit>
 801ce48:	4b05      	ldr	r3, [pc, #20]	; (801ce60 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801ce4a:	64ab      	str	r3, [r5, #72]	; 0x48
 801ce4c:	4b07      	ldr	r3, [pc, #28]	; (801ce6c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801ce4e:	64eb      	str	r3, [r5, #76]	; 0x4c
 801ce50:	bd38      	pop	{r3, r4, r5, pc}
 801ce52:	bf00      	nop
 801ce54:	20020b84 	.word	0x20020b84
 801ce58:	20000000 	.word	0x20000000
 801ce5c:	0801ac69 	.word	0x0801ac69
 801ce60:	200000d0 	.word	0x200000d0
 801ce64:	20020b88 	.word	0x20020b88
 801ce68:	0801ac67 	.word	0x0801ac67
 801ce6c:	200000d4 	.word	0x200000d4

0801ce70 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801ce70:	b538      	push	{r3, r4, r5, lr}
 801ce72:	4c15      	ldr	r4, [pc, #84]	; (801cec8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801ce74:	7823      	ldrb	r3, [r4, #0]
 801ce76:	f3bf 8f5b 	dmb	ish
 801ce7a:	07da      	lsls	r2, r3, #31
 801ce7c:	4605      	mov	r5, r0
 801ce7e:	d40b      	bmi.n	801ce98 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801ce80:	4620      	mov	r0, r4
 801ce82:	f007 faac 	bl	80243de <__cxa_guard_acquire>
 801ce86:	b138      	cbz	r0, 801ce98 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801ce88:	4620      	mov	r0, r4
 801ce8a:	f007 fab4 	bl	80243f6 <__cxa_guard_release>
 801ce8e:	4a0f      	ldr	r2, [pc, #60]	; (801cecc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801ce90:	490f      	ldr	r1, [pc, #60]	; (801ced0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801ce92:	4810      	ldr	r0, [pc, #64]	; (801ced4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801ce94:	f007 fa9c 	bl	80243d0 <__aeabi_atexit>
 801ce98:	4c0f      	ldr	r4, [pc, #60]	; (801ced8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801ce9a:	7823      	ldrb	r3, [r4, #0]
 801ce9c:	f3bf 8f5b 	dmb	ish
 801cea0:	07db      	lsls	r3, r3, #31
 801cea2:	d40b      	bmi.n	801cebc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801cea4:	4620      	mov	r0, r4
 801cea6:	f007 fa9a 	bl	80243de <__cxa_guard_acquire>
 801ceaa:	b138      	cbz	r0, 801cebc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801ceac:	4620      	mov	r0, r4
 801ceae:	f007 faa2 	bl	80243f6 <__cxa_guard_release>
 801ceb2:	4a06      	ldr	r2, [pc, #24]	; (801cecc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801ceb4:	4909      	ldr	r1, [pc, #36]	; (801cedc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801ceb6:	480a      	ldr	r0, [pc, #40]	; (801cee0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801ceb8:	f007 fa8a 	bl	80243d0 <__aeabi_atexit>
 801cebc:	4b05      	ldr	r3, [pc, #20]	; (801ced4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801cebe:	642b      	str	r3, [r5, #64]	; 0x40
 801cec0:	4b07      	ldr	r3, [pc, #28]	; (801cee0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801cec2:	646b      	str	r3, [r5, #68]	; 0x44
 801cec4:	bd38      	pop	{r3, r4, r5, pc}
 801cec6:	bf00      	nop
 801cec8:	20020b4c 	.word	0x20020b4c
 801cecc:	20000000 	.word	0x20000000
 801ced0:	0801ac6d 	.word	0x0801ac6d
 801ced4:	20000098 	.word	0x20000098
 801ced8:	20020b50 	.word	0x20020b50
 801cedc:	0801ac6b 	.word	0x0801ac6b
 801cee0:	2000009c 	.word	0x2000009c

0801cee4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801cee4:	b538      	push	{r3, r4, r5, lr}
 801cee6:	4c15      	ldr	r4, [pc, #84]	; (801cf3c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801cee8:	7823      	ldrb	r3, [r4, #0]
 801ceea:	f3bf 8f5b 	dmb	ish
 801ceee:	07da      	lsls	r2, r3, #31
 801cef0:	4605      	mov	r5, r0
 801cef2:	d40b      	bmi.n	801cf0c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801cef4:	4620      	mov	r0, r4
 801cef6:	f007 fa72 	bl	80243de <__cxa_guard_acquire>
 801cefa:	b138      	cbz	r0, 801cf0c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801cefc:	4620      	mov	r0, r4
 801cefe:	f007 fa7a 	bl	80243f6 <__cxa_guard_release>
 801cf02:	4a0f      	ldr	r2, [pc, #60]	; (801cf40 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801cf04:	490f      	ldr	r1, [pc, #60]	; (801cf44 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801cf06:	4810      	ldr	r0, [pc, #64]	; (801cf48 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801cf08:	f007 fa62 	bl	80243d0 <__aeabi_atexit>
 801cf0c:	4c0f      	ldr	r4, [pc, #60]	; (801cf4c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801cf0e:	7823      	ldrb	r3, [r4, #0]
 801cf10:	f3bf 8f5b 	dmb	ish
 801cf14:	07db      	lsls	r3, r3, #31
 801cf16:	d40b      	bmi.n	801cf30 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801cf18:	4620      	mov	r0, r4
 801cf1a:	f007 fa60 	bl	80243de <__cxa_guard_acquire>
 801cf1e:	b138      	cbz	r0, 801cf30 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801cf20:	4620      	mov	r0, r4
 801cf22:	f007 fa68 	bl	80243f6 <__cxa_guard_release>
 801cf26:	4a06      	ldr	r2, [pc, #24]	; (801cf40 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801cf28:	4909      	ldr	r1, [pc, #36]	; (801cf50 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801cf2a:	480a      	ldr	r0, [pc, #40]	; (801cf54 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801cf2c:	f007 fa50 	bl	80243d0 <__aeabi_atexit>
 801cf30:	4b05      	ldr	r3, [pc, #20]	; (801cf48 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801cf32:	63ab      	str	r3, [r5, #56]	; 0x38
 801cf34:	4b07      	ldr	r3, [pc, #28]	; (801cf54 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801cf36:	63eb      	str	r3, [r5, #60]	; 0x3c
 801cf38:	bd38      	pop	{r3, r4, r5, pc}
 801cf3a:	bf00      	nop
 801cf3c:	20020b6c 	.word	0x20020b6c
 801cf40:	20000000 	.word	0x20000000
 801cf44:	0801ac71 	.word	0x0801ac71
 801cf48:	200000b8 	.word	0x200000b8
 801cf4c:	20020b70 	.word	0x20020b70
 801cf50:	0801ac6f 	.word	0x0801ac6f
 801cf54:	200000bc 	.word	0x200000bc

0801cf58 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801cf58:	b510      	push	{r4, lr}
 801cf5a:	4604      	mov	r4, r0
 801cf5c:	f7ff ff14 	bl	801cd88 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801cf60:	4620      	mov	r0, r4
 801cf62:	f7ff ff85 	bl	801ce70 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801cf66:	4620      	mov	r0, r4
 801cf68:	f7ff ff48 	bl	801cdfc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801cf6c:	4620      	mov	r0, r4
 801cf6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801cf72:	f7ff bfb7 	b.w	801cee4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801cf78 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801cf78:	b538      	push	{r3, r4, r5, lr}
 801cf7a:	4c15      	ldr	r4, [pc, #84]	; (801cfd0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801cf7c:	7823      	ldrb	r3, [r4, #0]
 801cf7e:	f3bf 8f5b 	dmb	ish
 801cf82:	07da      	lsls	r2, r3, #31
 801cf84:	4605      	mov	r5, r0
 801cf86:	d40b      	bmi.n	801cfa0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801cf88:	4620      	mov	r0, r4
 801cf8a:	f007 fa28 	bl	80243de <__cxa_guard_acquire>
 801cf8e:	b138      	cbz	r0, 801cfa0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801cf90:	4620      	mov	r0, r4
 801cf92:	f007 fa30 	bl	80243f6 <__cxa_guard_release>
 801cf96:	4a0f      	ldr	r2, [pc, #60]	; (801cfd4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801cf98:	490f      	ldr	r1, [pc, #60]	; (801cfd8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801cf9a:	4810      	ldr	r0, [pc, #64]	; (801cfdc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801cf9c:	f007 fa18 	bl	80243d0 <__aeabi_atexit>
 801cfa0:	4c0f      	ldr	r4, [pc, #60]	; (801cfe0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801cfa2:	7823      	ldrb	r3, [r4, #0]
 801cfa4:	f3bf 8f5b 	dmb	ish
 801cfa8:	07db      	lsls	r3, r3, #31
 801cfaa:	d40b      	bmi.n	801cfc4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801cfac:	4620      	mov	r0, r4
 801cfae:	f007 fa16 	bl	80243de <__cxa_guard_acquire>
 801cfb2:	b138      	cbz	r0, 801cfc4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801cfb4:	4620      	mov	r0, r4
 801cfb6:	f007 fa1e 	bl	80243f6 <__cxa_guard_release>
 801cfba:	4a06      	ldr	r2, [pc, #24]	; (801cfd4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801cfbc:	4909      	ldr	r1, [pc, #36]	; (801cfe4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801cfbe:	480a      	ldr	r0, [pc, #40]	; (801cfe8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801cfc0:	f007 fa06 	bl	80243d0 <__aeabi_atexit>
 801cfc4:	4b05      	ldr	r3, [pc, #20]	; (801cfdc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801cfc6:	662b      	str	r3, [r5, #96]	; 0x60
 801cfc8:	4b07      	ldr	r3, [pc, #28]	; (801cfe8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801cfca:	666b      	str	r3, [r5, #100]	; 0x64
 801cfcc:	bd38      	pop	{r3, r4, r5, pc}
 801cfce:	bf00      	nop
 801cfd0:	20020b54 	.word	0x20020b54
 801cfd4:	20000000 	.word	0x20000000
 801cfd8:	0801ac5d 	.word	0x0801ac5d
 801cfdc:	200000a0 	.word	0x200000a0
 801cfe0:	20020b58 	.word	0x20020b58
 801cfe4:	0801ac5b 	.word	0x0801ac5b
 801cfe8:	200000a4 	.word	0x200000a4

0801cfec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801cfec:	b538      	push	{r3, r4, r5, lr}
 801cfee:	4c15      	ldr	r4, [pc, #84]	; (801d044 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801cff0:	7823      	ldrb	r3, [r4, #0]
 801cff2:	f3bf 8f5b 	dmb	ish
 801cff6:	07da      	lsls	r2, r3, #31
 801cff8:	4605      	mov	r5, r0
 801cffa:	d40b      	bmi.n	801d014 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801cffc:	4620      	mov	r0, r4
 801cffe:	f007 f9ee 	bl	80243de <__cxa_guard_acquire>
 801d002:	b138      	cbz	r0, 801d014 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801d004:	4620      	mov	r0, r4
 801d006:	f007 f9f6 	bl	80243f6 <__cxa_guard_release>
 801d00a:	4a0f      	ldr	r2, [pc, #60]	; (801d048 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801d00c:	490f      	ldr	r1, [pc, #60]	; (801d04c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801d00e:	4810      	ldr	r0, [pc, #64]	; (801d050 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801d010:	f007 f9de 	bl	80243d0 <__aeabi_atexit>
 801d014:	4c0f      	ldr	r4, [pc, #60]	; (801d054 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801d016:	7823      	ldrb	r3, [r4, #0]
 801d018:	f3bf 8f5b 	dmb	ish
 801d01c:	07db      	lsls	r3, r3, #31
 801d01e:	d40b      	bmi.n	801d038 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801d020:	4620      	mov	r0, r4
 801d022:	f007 f9dc 	bl	80243de <__cxa_guard_acquire>
 801d026:	b138      	cbz	r0, 801d038 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801d028:	4620      	mov	r0, r4
 801d02a:	f007 f9e4 	bl	80243f6 <__cxa_guard_release>
 801d02e:	4a06      	ldr	r2, [pc, #24]	; (801d048 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801d030:	4909      	ldr	r1, [pc, #36]	; (801d058 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801d032:	480a      	ldr	r0, [pc, #40]	; (801d05c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801d034:	f007 f9cc 	bl	80243d0 <__aeabi_atexit>
 801d038:	4b05      	ldr	r3, [pc, #20]	; (801d050 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801d03a:	65ab      	str	r3, [r5, #88]	; 0x58
 801d03c:	4b07      	ldr	r3, [pc, #28]	; (801d05c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801d03e:	65eb      	str	r3, [r5, #92]	; 0x5c
 801d040:	bd38      	pop	{r3, r4, r5, pc}
 801d042:	bf00      	nop
 801d044:	20020b2c 	.word	0x20020b2c
 801d048:	20000000 	.word	0x20000000
 801d04c:	0801ac61 	.word	0x0801ac61
 801d050:	20000078 	.word	0x20000078
 801d054:	20020b30 	.word	0x20020b30
 801d058:	0801ac5f 	.word	0x0801ac5f
 801d05c:	2000007c 	.word	0x2000007c

0801d060 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801d060:	b510      	push	{r4, lr}
 801d062:	4604      	mov	r4, r0
 801d064:	f7ff ff88 	bl	801cf78 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801d068:	4620      	mov	r0, r4
 801d06a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d06e:	f7ff bfbd 	b.w	801cfec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801d074 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801d074:	b538      	push	{r3, r4, r5, lr}
 801d076:	4c15      	ldr	r4, [pc, #84]	; (801d0cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801d078:	7823      	ldrb	r3, [r4, #0]
 801d07a:	f3bf 8f5b 	dmb	ish
 801d07e:	07da      	lsls	r2, r3, #31
 801d080:	4605      	mov	r5, r0
 801d082:	d40b      	bmi.n	801d09c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801d084:	4620      	mov	r0, r4
 801d086:	f007 f9aa 	bl	80243de <__cxa_guard_acquire>
 801d08a:	b138      	cbz	r0, 801d09c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801d08c:	4620      	mov	r0, r4
 801d08e:	f007 f9b2 	bl	80243f6 <__cxa_guard_release>
 801d092:	4a0f      	ldr	r2, [pc, #60]	; (801d0d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801d094:	490f      	ldr	r1, [pc, #60]	; (801d0d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801d096:	4810      	ldr	r0, [pc, #64]	; (801d0d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801d098:	f007 f99a 	bl	80243d0 <__aeabi_atexit>
 801d09c:	4c0f      	ldr	r4, [pc, #60]	; (801d0dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801d09e:	7823      	ldrb	r3, [r4, #0]
 801d0a0:	f3bf 8f5b 	dmb	ish
 801d0a4:	07db      	lsls	r3, r3, #31
 801d0a6:	d40b      	bmi.n	801d0c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801d0a8:	4620      	mov	r0, r4
 801d0aa:	f007 f998 	bl	80243de <__cxa_guard_acquire>
 801d0ae:	b138      	cbz	r0, 801d0c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801d0b0:	4620      	mov	r0, r4
 801d0b2:	f007 f9a0 	bl	80243f6 <__cxa_guard_release>
 801d0b6:	4a06      	ldr	r2, [pc, #24]	; (801d0d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801d0b8:	4909      	ldr	r1, [pc, #36]	; (801d0e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801d0ba:	480a      	ldr	r0, [pc, #40]	; (801d0e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801d0bc:	f007 f988 	bl	80243d0 <__aeabi_atexit>
 801d0c0:	4b05      	ldr	r3, [pc, #20]	; (801d0d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801d0c2:	672b      	str	r3, [r5, #112]	; 0x70
 801d0c4:	4b07      	ldr	r3, [pc, #28]	; (801d0e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801d0c6:	676b      	str	r3, [r5, #116]	; 0x74
 801d0c8:	bd38      	pop	{r3, r4, r5, pc}
 801d0ca:	bf00      	nop
 801d0cc:	20020b24 	.word	0x20020b24
 801d0d0:	20000000 	.word	0x20000000
 801d0d4:	0801ac55 	.word	0x0801ac55
 801d0d8:	20000070 	.word	0x20000070
 801d0dc:	20020b28 	.word	0x20020b28
 801d0e0:	0801ac53 	.word	0x0801ac53
 801d0e4:	20000074 	.word	0x20000074

0801d0e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801d0e8:	b538      	push	{r3, r4, r5, lr}
 801d0ea:	4c15      	ldr	r4, [pc, #84]	; (801d140 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801d0ec:	7823      	ldrb	r3, [r4, #0]
 801d0ee:	f3bf 8f5b 	dmb	ish
 801d0f2:	07da      	lsls	r2, r3, #31
 801d0f4:	4605      	mov	r5, r0
 801d0f6:	d40b      	bmi.n	801d110 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801d0f8:	4620      	mov	r0, r4
 801d0fa:	f007 f970 	bl	80243de <__cxa_guard_acquire>
 801d0fe:	b138      	cbz	r0, 801d110 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801d100:	4620      	mov	r0, r4
 801d102:	f007 f978 	bl	80243f6 <__cxa_guard_release>
 801d106:	4a0f      	ldr	r2, [pc, #60]	; (801d144 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801d108:	490f      	ldr	r1, [pc, #60]	; (801d148 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801d10a:	4810      	ldr	r0, [pc, #64]	; (801d14c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801d10c:	f007 f960 	bl	80243d0 <__aeabi_atexit>
 801d110:	4c0f      	ldr	r4, [pc, #60]	; (801d150 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801d112:	7823      	ldrb	r3, [r4, #0]
 801d114:	f3bf 8f5b 	dmb	ish
 801d118:	07db      	lsls	r3, r3, #31
 801d11a:	d40b      	bmi.n	801d134 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801d11c:	4620      	mov	r0, r4
 801d11e:	f007 f95e 	bl	80243de <__cxa_guard_acquire>
 801d122:	b138      	cbz	r0, 801d134 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801d124:	4620      	mov	r0, r4
 801d126:	f007 f966 	bl	80243f6 <__cxa_guard_release>
 801d12a:	4a06      	ldr	r2, [pc, #24]	; (801d144 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801d12c:	4909      	ldr	r1, [pc, #36]	; (801d154 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801d12e:	480a      	ldr	r0, [pc, #40]	; (801d158 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801d130:	f007 f94e 	bl	80243d0 <__aeabi_atexit>
 801d134:	4b05      	ldr	r3, [pc, #20]	; (801d14c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801d136:	66ab      	str	r3, [r5, #104]	; 0x68
 801d138:	4b07      	ldr	r3, [pc, #28]	; (801d158 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801d13a:	66eb      	str	r3, [r5, #108]	; 0x6c
 801d13c:	bd38      	pop	{r3, r4, r5, pc}
 801d13e:	bf00      	nop
 801d140:	20020b1c 	.word	0x20020b1c
 801d144:	20000000 	.word	0x20000000
 801d148:	0801ac59 	.word	0x0801ac59
 801d14c:	20000068 	.word	0x20000068
 801d150:	20020b20 	.word	0x20020b20
 801d154:	0801ac57 	.word	0x0801ac57
 801d158:	2000006c 	.word	0x2000006c

0801d15c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801d15c:	b510      	push	{r4, lr}
 801d15e:	4604      	mov	r4, r0
 801d160:	f7ff ff88 	bl	801d074 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801d164:	4620      	mov	r0, r4
 801d166:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d16a:	f7ff bfbd 	b.w	801d0e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801d16e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801d16e:	b510      	push	{r4, lr}
 801d170:	4604      	mov	r4, r0
 801d172:	f7ff fff3 	bl	801d15c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801d176:	4620      	mov	r0, r4
 801d178:	f7ff ff72 	bl	801d060 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801d17c:	4620      	mov	r0, r4
 801d17e:	f7ff fdf9 	bl	801cd74 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801d182:	4620      	mov	r0, r4
 801d184:	f7ff fcfa 	bl	801cb7c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801d188:	4620      	mov	r0, r4
 801d18a:	f7ff fd75 	bl	801cc78 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801d18e:	4620      	mov	r0, r4
 801d190:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d194:	f7ff bee0 	b.w	801cf58 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801d198 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801d198:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d19c:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 801d1a0:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 801d1a4:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 801d1a8:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801d1ac:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 801d1b0:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 801d1b4:	8808      	ldrh	r0, [r1, #0]
 801d1b6:	fb0e 4708 	mla	r7, lr, r8, r4
 801d1ba:	f1be 0f00 	cmp.w	lr, #0
 801d1be:	eb02 0a07 	add.w	sl, r2, r7
 801d1c2:	db37      	blt.n	801d234 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 801d1c4:	45f3      	cmp	fp, lr
 801d1c6:	dd35      	ble.n	801d234 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 801d1c8:	2c00      	cmp	r4, #0
 801d1ca:	db31      	blt.n	801d230 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 801d1cc:	45a0      	cmp	r8, r4
 801d1ce:	dd2f      	ble.n	801d230 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 801d1d0:	5dd2      	ldrb	r2, [r2, r7]
 801d1d2:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 801d1d6:	1c62      	adds	r2, r4, #1
 801d1d8:	d42f      	bmi.n	801d23a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801d1da:	4590      	cmp	r8, r2
 801d1dc:	dd2d      	ble.n	801d23a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801d1de:	b366      	cbz	r6, 801d23a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801d1e0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801d1e4:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801d1e8:	f11e 0e01 	adds.w	lr, lr, #1
 801d1ec:	d429      	bmi.n	801d242 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 801d1ee:	45f3      	cmp	fp, lr
 801d1f0:	dd27      	ble.n	801d242 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 801d1f2:	f1bc 0f00 	cmp.w	ip, #0
 801d1f6:	f000 80a1 	beq.w	801d33c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a4>
 801d1fa:	2c00      	cmp	r4, #0
 801d1fc:	db1f      	blt.n	801d23e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801d1fe:	45a0      	cmp	r8, r4
 801d200:	dd1d      	ble.n	801d23e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801d202:	f81a 2008 	ldrb.w	r2, [sl, r8]
 801d206:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 801d20a:	3401      	adds	r4, #1
 801d20c:	d41c      	bmi.n	801d248 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 801d20e:	45a0      	cmp	r8, r4
 801d210:	dd1a      	ble.n	801d248 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 801d212:	b1de      	cbz	r6, 801d24c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 801d214:	44d0      	add	r8, sl
 801d216:	f898 2001 	ldrb.w	r2, [r8, #1]
 801d21a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801d21e:	2e0f      	cmp	r6, #15
 801d220:	d915      	bls.n	801d24e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 801d222:	4b49      	ldr	r3, [pc, #292]	; (801d348 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 801d224:	4a49      	ldr	r2, [pc, #292]	; (801d34c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 801d226:	484a      	ldr	r0, [pc, #296]	; (801d350 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 801d228:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 801d22c:	f007 f904 	bl	8024438 <__assert_func>
 801d230:	4681      	mov	r9, r0
 801d232:	e7d0      	b.n	801d1d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 801d234:	4607      	mov	r7, r0
 801d236:	4681      	mov	r9, r0
 801d238:	e7d6      	b.n	801d1e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 801d23a:	4607      	mov	r7, r0
 801d23c:	e7d4      	b.n	801d1e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 801d23e:	4686      	mov	lr, r0
 801d240:	e7e3      	b.n	801d20a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 801d242:	4603      	mov	r3, r0
 801d244:	4686      	mov	lr, r0
 801d246:	e7ea      	b.n	801d21e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 801d248:	4603      	mov	r3, r0
 801d24a:	e7e8      	b.n	801d21e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 801d24c:	4603      	mov	r3, r0
 801d24e:	f1bc 0f0f 	cmp.w	ip, #15
 801d252:	d8e6      	bhi.n	801d222 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 801d254:	ea4f 4409 	mov.w	r4, r9, lsl #16
 801d258:	fb16 f80c 	smulbb	r8, r6, ip
 801d25c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d260:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801d264:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d268:	ea4f 08e8 	mov.w	r8, r8, asr #3
 801d26c:	ea44 0909 	orr.w	r9, r4, r9
 801d270:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d274:	f1cc 0410 	rsb	r4, ip, #16
 801d278:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d27c:	1ba4      	subs	r4, r4, r6
 801d27e:	041a      	lsls	r2, r3, #16
 801d280:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 801d284:	ea4a 0707 	orr.w	r7, sl, r7
 801d288:	4377      	muls	r7, r6
 801d28a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d28e:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801d292:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d296:	fb04 7409 	mla	r4, r4, r9, r7
 801d29a:	4313      	orrs	r3, r2
 801d29c:	ea4f 420e 	mov.w	r2, lr, lsl #16
 801d2a0:	fb08 4303 	mla	r3, r8, r3, r4
 801d2a4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d2a8:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 801d2ac:	4322      	orrs	r2, r4
 801d2ae:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 801d2b2:	fb0c 3202 	mla	r2, ip, r2, r3
 801d2b6:	0d53      	lsrs	r3, r2, #21
 801d2b8:	0952      	lsrs	r2, r2, #5
 801d2ba:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d2be:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d2c2:	431a      	orrs	r2, r3
 801d2c4:	b293      	uxth	r3, r2
 801d2c6:	b2af      	uxth	r7, r5
 801d2c8:	1202      	asrs	r2, r0, #8
 801d2ca:	43ed      	mvns	r5, r5
 801d2cc:	b2ed      	uxtb	r5, r5
 801d2ce:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d2d2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d2d6:	fb12 f205 	smulbb	r2, r2, r5
 801d2da:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d2de:	fb0c 2c07 	mla	ip, ip, r7, r2
 801d2e2:	00dc      	lsls	r4, r3, #3
 801d2e4:	10da      	asrs	r2, r3, #3
 801d2e6:	10c6      	asrs	r6, r0, #3
 801d2e8:	00c3      	lsls	r3, r0, #3
 801d2ea:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d2ee:	b2db      	uxtb	r3, r3
 801d2f0:	fb16 f605 	smulbb	r6, r6, r5
 801d2f4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d2f8:	b2e4      	uxtb	r4, r4
 801d2fa:	fb13 f305 	smulbb	r3, r3, r5
 801d2fe:	fa1f fc8c 	uxth.w	ip, ip
 801d302:	fb02 6207 	mla	r2, r2, r7, r6
 801d306:	fb04 3307 	mla	r3, r4, r7, r3
 801d30a:	b296      	uxth	r6, r2
 801d30c:	b29a      	uxth	r2, r3
 801d30e:	f10c 0301 	add.w	r3, ip, #1
 801d312:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801d316:	1c53      	adds	r3, r2, #1
 801d318:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d31c:	1c72      	adds	r2, r6, #1
 801d31e:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 801d322:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d326:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d32a:	0952      	lsrs	r2, r2, #5
 801d32c:	ea43 030c 	orr.w	r3, r3, ip
 801d330:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d334:	4313      	orrs	r3, r2
 801d336:	800b      	strh	r3, [r1, #0]
 801d338:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d33c:	2e0f      	cmp	r6, #15
 801d33e:	f63f af70 	bhi.w	801d222 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 801d342:	4603      	mov	r3, r0
 801d344:	4686      	mov	lr, r0
 801d346:	e785      	b.n	801d254 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 801d348:	0802aeb2 	.word	0x0802aeb2
 801d34c:	0802b52b 	.word	0x0802b52b
 801d350:	0802af36 	.word	0x0802af36

0801d354 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d354:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d358:	ed2d 8b08 	vpush	{d8-d11}
 801d35c:	b099      	sub	sp, #100	; 0x64
 801d35e:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 801d362:	9215      	str	r2, [sp, #84]	; 0x54
 801d364:	9309      	str	r3, [sp, #36]	; 0x24
 801d366:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801d368:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 801d36c:	930d      	str	r3, [sp, #52]	; 0x34
 801d36e:	910c      	str	r1, [sp, #48]	; 0x30
 801d370:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 801d374:	9016      	str	r0, [sp, #88]	; 0x58
 801d376:	6850      	ldr	r0, [r2, #4]
 801d378:	6812      	ldr	r2, [r2, #0]
 801d37a:	fb00 1303 	mla	r3, r0, r3, r1
 801d37e:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801d382:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801d384:	681b      	ldr	r3, [r3, #0]
 801d386:	930b      	str	r3, [sp, #44]	; 0x2c
 801d388:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801d38a:	685e      	ldr	r6, [r3, #4]
 801d38c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d38e:	43db      	mvns	r3, r3
 801d390:	b2db      	uxtb	r3, r3
 801d392:	eeb0 aa40 	vmov.f32	s20, s0
 801d396:	eef0 9a60 	vmov.f32	s19, s1
 801d39a:	eeb0 9a41 	vmov.f32	s18, s2
 801d39e:	eeb0 8a62 	vmov.f32	s16, s5
 801d3a2:	eef0 8a43 	vmov.f32	s17, s6
 801d3a6:	eef0 ba44 	vmov.f32	s23, s8
 801d3aa:	eeb0 ba64 	vmov.f32	s22, s9
 801d3ae:	eef0 aa45 	vmov.f32	s21, s10
 801d3b2:	3604      	adds	r6, #4
 801d3b4:	930a      	str	r3, [sp, #40]	; 0x28
 801d3b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d3b8:	2b00      	cmp	r3, #0
 801d3ba:	dc03      	bgt.n	801d3c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801d3bc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801d3be:	2b00      	cmp	r3, #0
 801d3c0:	f340 8225 	ble.w	801d80e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 801d3c4:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801d3c6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d3ca:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d3ce:	1e48      	subs	r0, r1, #1
 801d3d0:	1e57      	subs	r7, r2, #1
 801d3d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d3d4:	2b00      	cmp	r3, #0
 801d3d6:	f340 80e3 	ble.w	801d5a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24c>
 801d3da:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801d3de:	ea4f 4325 	mov.w	r3, r5, asr #16
 801d3e2:	d406      	bmi.n	801d3f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d3e4:	4584      	cmp	ip, r0
 801d3e6:	da04      	bge.n	801d3f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d3e8:	2b00      	cmp	r3, #0
 801d3ea:	db02      	blt.n	801d3f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d3ec:	42bb      	cmp	r3, r7
 801d3ee:	f2c0 80d8 	blt.w	801d5a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801d3f2:	f11c 0c01 	adds.w	ip, ip, #1
 801d3f6:	f100 80c9 	bmi.w	801d58c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801d3fa:	4561      	cmp	r1, ip
 801d3fc:	f2c0 80c6 	blt.w	801d58c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801d400:	3301      	adds	r3, #1
 801d402:	f100 80c3 	bmi.w	801d58c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801d406:	429a      	cmp	r2, r3
 801d408:	f2c0 80c0 	blt.w	801d58c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801d40c:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801d410:	4647      	mov	r7, r8
 801d412:	f1bb 0f00 	cmp.w	fp, #0
 801d416:	f340 80e3 	ble.w	801d5e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801d41a:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 801d41c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801d41e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801d422:	689b      	ldr	r3, [r3, #8]
 801d424:	ea5f 422a 	movs.w	r2, sl, asr #16
 801d428:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801d42c:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801d430:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801d434:	f100 8121 	bmi.w	801d67a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 801d438:	f103 39ff 	add.w	r9, r3, #4294967295
 801d43c:	454a      	cmp	r2, r9
 801d43e:	f280 811c 	bge.w	801d67a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 801d442:	f1bc 0f00 	cmp.w	ip, #0
 801d446:	f2c0 8118 	blt.w	801d67a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 801d44a:	f10e 39ff 	add.w	r9, lr, #4294967295
 801d44e:	45cc      	cmp	ip, r9
 801d450:	f280 8113 	bge.w	801d67a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 801d454:	b21b      	sxth	r3, r3
 801d456:	fb0c 2203 	mla	r2, ip, r3, r2
 801d45a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d45c:	eb04 0902 	add.w	r9, r4, r2
 801d460:	5ca2      	ldrb	r2, [r4, r2]
 801d462:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801d466:	2800      	cmp	r0, #0
 801d468:	f000 80fe 	beq.w	801d668 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801d46c:	f899 2001 	ldrb.w	r2, [r9, #1]
 801d470:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801d474:	9211      	str	r2, [sp, #68]	; 0x44
 801d476:	b151      	cbz	r1, 801d48e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801d478:	eb09 0203 	add.w	r2, r9, r3
 801d47c:	f819 3003 	ldrb.w	r3, [r9, r3]
 801d480:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d484:	930f      	str	r3, [sp, #60]	; 0x3c
 801d486:	7853      	ldrb	r3, [r2, #1]
 801d488:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d48c:	9312      	str	r3, [sp, #72]	; 0x48
 801d48e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801d490:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d492:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801d496:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d49a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d49e:	ea4c 0c03 	orr.w	ip, ip, r3
 801d4a2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801d4a4:	041b      	lsls	r3, r3, #16
 801d4a6:	fb10 f201 	smulbb	r2, r0, r1
 801d4aa:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801d4ae:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d4b2:	10d2      	asrs	r2, r2, #3
 801d4b4:	4323      	orrs	r3, r4
 801d4b6:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801d4ba:	4353      	muls	r3, r2
 801d4bc:	fb09 330c 	mla	r3, r9, ip, r3
 801d4c0:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801d4c4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d4c8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d4cc:	ea4c 0e0e 	orr.w	lr, ip, lr
 801d4d0:	f1c1 0c10 	rsb	ip, r1, #16
 801d4d4:	ebac 0c00 	sub.w	ip, ip, r0
 801d4d8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801d4dc:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801d4e0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d4e2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d4e4:	0418      	lsls	r0, r3, #16
 801d4e6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d4ea:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d4ee:	4318      	orrs	r0, r3
 801d4f0:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801d4f4:	fb02 c200 	mla	r2, r2, r0, ip
 801d4f8:	0d53      	lsrs	r3, r2, #21
 801d4fa:	0952      	lsrs	r2, r2, #5
 801d4fc:	8838      	ldrh	r0, [r7, #0]
 801d4fe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d502:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d506:	431a      	orrs	r2, r3
 801d508:	b292      	uxth	r2, r2
 801d50a:	1201      	asrs	r1, r0, #8
 801d50c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801d510:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801d514:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d518:	fb11 f104 	smulbb	r1, r1, r4
 801d51c:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801d520:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d524:	00c0      	lsls	r0, r0, #3
 801d526:	fb0c 1c03 	mla	ip, ip, r3, r1
 801d52a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d52e:	10d1      	asrs	r1, r2, #3
 801d530:	b2c0      	uxtb	r0, r0
 801d532:	00d2      	lsls	r2, r2, #3
 801d534:	b2d2      	uxtb	r2, r2
 801d536:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d53a:	fb1e fe04 	smulbb	lr, lr, r4
 801d53e:	fb10 f004 	smulbb	r0, r0, r4
 801d542:	fa1f fc8c 	uxth.w	ip, ip
 801d546:	fb01 e103 	mla	r1, r1, r3, lr
 801d54a:	fb02 0303 	mla	r3, r2, r3, r0
 801d54e:	b29a      	uxth	r2, r3
 801d550:	f10c 0301 	add.w	r3, ip, #1
 801d554:	b289      	uxth	r1, r1
 801d556:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801d55a:	1c53      	adds	r3, r2, #1
 801d55c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d560:	1c4a      	adds	r2, r1, #1
 801d562:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d566:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d56a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d56e:	0949      	lsrs	r1, r1, #5
 801d570:	ea43 030c 	orr.w	r3, r3, ip
 801d574:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d578:	430b      	orrs	r3, r1
 801d57a:	803b      	strh	r3, [r7, #0]
 801d57c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801d57e:	449a      	add	sl, r3
 801d580:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801d582:	3702      	adds	r7, #2
 801d584:	441d      	add	r5, r3
 801d586:	f10b 3bff 	add.w	fp, fp, #4294967295
 801d58a:	e742      	b.n	801d412 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 801d58c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801d58e:	449a      	add	sl, r3
 801d590:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801d592:	441d      	add	r5, r3
 801d594:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d596:	3b01      	subs	r3, #1
 801d598:	9309      	str	r3, [sp, #36]	; 0x24
 801d59a:	f108 0802 	add.w	r8, r8, #2
 801d59e:	e718      	b.n	801d3d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d5a0:	d023      	beq.n	801d5ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801d5a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d5a4:	982d      	ldr	r0, [sp, #180]	; 0xb4
 801d5a6:	3b01      	subs	r3, #1
 801d5a8:	fb00 a003 	mla	r0, r0, r3, sl
 801d5ac:	1400      	asrs	r0, r0, #16
 801d5ae:	f53f af2d 	bmi.w	801d40c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801d5b2:	3901      	subs	r1, #1
 801d5b4:	4288      	cmp	r0, r1
 801d5b6:	f6bf af29 	bge.w	801d40c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801d5ba:	992e      	ldr	r1, [sp, #184]	; 0xb8
 801d5bc:	fb01 5303 	mla	r3, r1, r3, r5
 801d5c0:	141b      	asrs	r3, r3, #16
 801d5c2:	f53f af23 	bmi.w	801d40c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801d5c6:	3a01      	subs	r2, #1
 801d5c8:	4293      	cmp	r3, r2
 801d5ca:	f6bf af1f 	bge.w	801d40c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801d5ce:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801d5d2:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801d5d6:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801d5da:	f1be 0f00 	cmp.w	lr, #0
 801d5de:	dc6c      	bgt.n	801d6ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x366>
 801d5e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d5e2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d5e6:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801d5ea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d5ec:	2b00      	cmp	r3, #0
 801d5ee:	f340 810e 	ble.w	801d80e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 801d5f2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801d5f6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d5fa:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801d5fe:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d600:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801d604:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801d608:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801d60c:	eef0 6a48 	vmov.f32	s13, s16
 801d610:	ee69 7a27 	vmul.f32	s15, s18, s15
 801d614:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d618:	ee37 8a48 	vsub.f32	s16, s14, s16
 801d61c:	ee16 aa90 	vmov	sl, s13
 801d620:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801d624:	eef0 6a68 	vmov.f32	s13, s17
 801d628:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801d62c:	ee18 2a10 	vmov	r2, s16
 801d630:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801d634:	fb92 f3f3 	sdiv	r3, r2, r3
 801d638:	ee18 2a90 	vmov	r2, s17
 801d63c:	932d      	str	r3, [sp, #180]	; 0xb4
 801d63e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d640:	fb92 f3f3 	sdiv	r3, r2, r3
 801d644:	932e      	str	r3, [sp, #184]	; 0xb8
 801d646:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d648:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801d64a:	3b01      	subs	r3, #1
 801d64c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d650:	930c      	str	r3, [sp, #48]	; 0x30
 801d652:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801d654:	bf08      	it	eq
 801d656:	4613      	moveq	r3, r2
 801d658:	ee16 5a90 	vmov	r5, s13
 801d65c:	9309      	str	r3, [sp, #36]	; 0x24
 801d65e:	eef0 8a67 	vmov.f32	s17, s15
 801d662:	eeb0 8a47 	vmov.f32	s16, s14
 801d666:	e6a6      	b.n	801d3b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 801d668:	2900      	cmp	r1, #0
 801d66a:	f43f af10 	beq.w	801d48e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801d66e:	f819 3003 	ldrb.w	r3, [r9, r3]
 801d672:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d676:	930f      	str	r3, [sp, #60]	; 0x3c
 801d678:	e709      	b.n	801d48e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801d67a:	f112 0901 	adds.w	r9, r2, #1
 801d67e:	f53f af7d 	bmi.w	801d57c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801d682:	454b      	cmp	r3, r9
 801d684:	f6ff af7a 	blt.w	801d57c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801d688:	f11c 0901 	adds.w	r9, ip, #1
 801d68c:	f53f af76 	bmi.w	801d57c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801d690:	45ce      	cmp	lr, r9
 801d692:	f6ff af73 	blt.w	801d57c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801d696:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d698:	9202      	str	r2, [sp, #8]
 801d69a:	b21b      	sxth	r3, r3
 801d69c:	fa0f f28e 	sxth.w	r2, lr
 801d6a0:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801d6a4:	e9cd c003 	strd	ip, r0, [sp, #12]
 801d6a8:	9201      	str	r2, [sp, #4]
 801d6aa:	9300      	str	r3, [sp, #0]
 801d6ac:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d6ae:	9816      	ldr	r0, [sp, #88]	; 0x58
 801d6b0:	4633      	mov	r3, r6
 801d6b2:	4639      	mov	r1, r7
 801d6b4:	f7ff fd70 	bl	801d198 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801d6b8:	e760      	b.n	801d57c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801d6ba:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801d6bc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d6be:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801d6c2:	ea4f 422a 	mov.w	r2, sl, asr #16
 801d6c6:	1429      	asrs	r1, r5, #16
 801d6c8:	fb03 2101 	mla	r1, r3, r1, r2
 801d6cc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d6ce:	440a      	add	r2, r1
 801d6d0:	5c61      	ldrb	r1, [r4, r1]
 801d6d2:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801d6d6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801d6da:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801d6de:	f1bc 0f00 	cmp.w	ip, #0
 801d6e2:	f000 808c 	beq.w	801d7fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801d6e6:	7857      	ldrb	r7, [r2, #1]
 801d6e8:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801d6ec:	9413      	str	r4, [sp, #76]	; 0x4c
 801d6ee:	b140      	cbz	r0, 801d702 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801d6f0:	18d7      	adds	r7, r2, r3
 801d6f2:	5cd3      	ldrb	r3, [r2, r3]
 801d6f4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d6f8:	9310      	str	r3, [sp, #64]	; 0x40
 801d6fa:	787b      	ldrb	r3, [r7, #1]
 801d6fc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d700:	9314      	str	r3, [sp, #80]	; 0x50
 801d702:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801d704:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d706:	fb1c f200 	smulbb	r2, ip, r0
 801d70a:	041f      	lsls	r7, r3, #16
 801d70c:	10d2      	asrs	r2, r2, #3
 801d70e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d712:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801d716:	431f      	orrs	r7, r3
 801d718:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801d71c:	9317      	str	r3, [sp, #92]	; 0x5c
 801d71e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801d720:	041b      	lsls	r3, r3, #16
 801d722:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801d726:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d72a:	ea43 030b 	orr.w	r3, r3, fp
 801d72e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801d730:	4353      	muls	r3, r2
 801d732:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801d736:	fb04 3707 	mla	r7, r4, r7, r3
 801d73a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d73e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801d742:	ea43 0b01 	orr.w	fp, r3, r1
 801d746:	f1c0 0110 	rsb	r1, r0, #16
 801d74a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d74c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d74e:	eba1 0c0c 	sub.w	ip, r1, ip
 801d752:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801d756:	fb0c 770b 	mla	r7, ip, fp, r7
 801d75a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801d75e:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801d762:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d766:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801d76a:	ea4c 0c0b 	orr.w	ip, ip, fp
 801d76e:	fb02 770c 	mla	r7, r2, ip, r7
 801d772:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d774:	0d79      	lsrs	r1, r7, #21
 801d776:	097f      	lsrs	r7, r7, #5
 801d778:	8812      	ldrh	r2, [r2, #0]
 801d77a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d77e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d782:	430f      	orrs	r7, r1
 801d784:	b2bb      	uxth	r3, r7
 801d786:	1211      	asrs	r1, r2, #8
 801d788:	1218      	asrs	r0, r3, #8
 801d78a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d78e:	fb11 f104 	smulbb	r1, r1, r4
 801d792:	10d7      	asrs	r7, r2, #3
 801d794:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d798:	00d2      	lsls	r2, r2, #3
 801d79a:	fb00 1009 	mla	r0, r0, r9, r1
 801d79e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d7a2:	10d9      	asrs	r1, r3, #3
 801d7a4:	b2d2      	uxtb	r2, r2
 801d7a6:	00db      	lsls	r3, r3, #3
 801d7a8:	fb17 f704 	smulbb	r7, r7, r4
 801d7ac:	fb12 f204 	smulbb	r2, r2, r4
 801d7b0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d7b4:	b2db      	uxtb	r3, r3
 801d7b6:	b280      	uxth	r0, r0
 801d7b8:	fb01 7109 	mla	r1, r1, r9, r7
 801d7bc:	fb03 2309 	mla	r3, r3, r9, r2
 801d7c0:	b29b      	uxth	r3, r3
 801d7c2:	b289      	uxth	r1, r1
 801d7c4:	1c42      	adds	r2, r0, #1
 801d7c6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d7ca:	1c4f      	adds	r7, r1, #1
 801d7cc:	1c5a      	adds	r2, r3, #1
 801d7ce:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d7d2:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801d7d6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801d7da:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d7de:	0949      	lsrs	r1, r1, #5
 801d7e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d7e2:	4310      	orrs	r0, r2
 801d7e4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d7e8:	4308      	orrs	r0, r1
 801d7ea:	f823 0b02 	strh.w	r0, [r3], #2
 801d7ee:	930e      	str	r3, [sp, #56]	; 0x38
 801d7f0:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801d7f2:	449a      	add	sl, r3
 801d7f4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801d7f6:	f10e 3eff 	add.w	lr, lr, #4294967295
 801d7fa:	441d      	add	r5, r3
 801d7fc:	e6ed      	b.n	801d5da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 801d7fe:	2800      	cmp	r0, #0
 801d800:	f43f af7f 	beq.w	801d702 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801d804:	5cd3      	ldrb	r3, [r2, r3]
 801d806:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801d80a:	9310      	str	r3, [sp, #64]	; 0x40
 801d80c:	e779      	b.n	801d702 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801d80e:	b019      	add	sp, #100	; 0x64
 801d810:	ecbd 8b08 	vpop	{d8-d11}
 801d814:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d818 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801d818:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801d81c:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 801d820:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801d824:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801d828:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 801d82c:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801d830:	8808      	ldrh	r0, [r1, #0]
 801d832:	fb06 570e 	mla	r7, r6, lr, r5
 801d836:	2e00      	cmp	r6, #0
 801d838:	eb02 0807 	add.w	r8, r2, r7
 801d83c:	db38      	blt.n	801d8b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 801d83e:	45b1      	cmp	r9, r6
 801d840:	dd36      	ble.n	801d8b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 801d842:	2d00      	cmp	r5, #0
 801d844:	db32      	blt.n	801d8ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 801d846:	45ae      	cmp	lr, r5
 801d848:	dd30      	ble.n	801d8ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 801d84a:	5dd2      	ldrb	r2, [r2, r7]
 801d84c:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801d850:	1c6a      	adds	r2, r5, #1
 801d852:	d430      	bmi.n	801d8b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 801d854:	4596      	cmp	lr, r2
 801d856:	dd2e      	ble.n	801d8b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 801d858:	b36c      	cbz	r4, 801d8b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 801d85a:	f898 2001 	ldrb.w	r2, [r8, #1]
 801d85e:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801d862:	3601      	adds	r6, #1
 801d864:	d42b      	bmi.n	801d8be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 801d866:	45b1      	cmp	r9, r6
 801d868:	dd29      	ble.n	801d8be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 801d86a:	f1bc 0f00 	cmp.w	ip, #0
 801d86e:	d028      	beq.n	801d8c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 801d870:	2d00      	cmp	r5, #0
 801d872:	db22      	blt.n	801d8ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 801d874:	45ae      	cmp	lr, r5
 801d876:	dd20      	ble.n	801d8ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 801d878:	f818 600e 	ldrb.w	r6, [r8, lr]
 801d87c:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 801d880:	3501      	adds	r5, #1
 801d882:	d407      	bmi.n	801d894 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801d884:	45ae      	cmp	lr, r5
 801d886:	dd05      	ble.n	801d894 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801d888:	b134      	cbz	r4, 801d898 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801d88a:	44c6      	add	lr, r8
 801d88c:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801d890:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801d894:	2c0f      	cmp	r4, #15
 801d896:	d802      	bhi.n	801d89e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 801d898:	f1bc 0f0f 	cmp.w	ip, #15
 801d89c:	d914      	bls.n	801d8c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 801d89e:	4b26      	ldr	r3, [pc, #152]	; (801d938 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 801d8a0:	4a26      	ldr	r2, [pc, #152]	; (801d93c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 801d8a2:	4827      	ldr	r0, [pc, #156]	; (801d940 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 801d8a4:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 801d8a8:	f006 fdc6 	bl	8024438 <__assert_func>
 801d8ac:	4607      	mov	r7, r0
 801d8ae:	e7cf      	b.n	801d850 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 801d8b0:	4602      	mov	r2, r0
 801d8b2:	4607      	mov	r7, r0
 801d8b4:	e7d5      	b.n	801d862 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 801d8b6:	4602      	mov	r2, r0
 801d8b8:	e7d3      	b.n	801d862 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 801d8ba:	4606      	mov	r6, r0
 801d8bc:	e7e0      	b.n	801d880 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 801d8be:	4606      	mov	r6, r0
 801d8c0:	e7e8      	b.n	801d894 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801d8c2:	2c0f      	cmp	r4, #15
 801d8c4:	d8eb      	bhi.n	801d89e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 801d8c6:	4606      	mov	r6, r0
 801d8c8:	043d      	lsls	r5, r7, #16
 801d8ca:	fb14 f30c 	smulbb	r3, r4, ip
 801d8ce:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 801d8d2:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 801d8d6:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d8da:	10db      	asrs	r3, r3, #3
 801d8dc:	432f      	orrs	r7, r5
 801d8de:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801d8e2:	f1cc 0510 	rsb	r5, ip, #16
 801d8e6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d8ea:	1b2d      	subs	r5, r5, r4
 801d8ec:	ea4e 0202 	orr.w	r2, lr, r2
 801d8f0:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 801d8f4:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801d8f8:	4354      	muls	r4, r2
 801d8fa:	fb05 4507 	mla	r5, r5, r7, r4
 801d8fe:	0404      	lsls	r4, r0, #16
 801d900:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d904:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d908:	4320      	orrs	r0, r4
 801d90a:	fb03 5400 	mla	r4, r3, r0, r5
 801d90e:	0430      	lsls	r0, r6, #16
 801d910:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d914:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 801d918:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801d91c:	4330      	orrs	r0, r6
 801d91e:	fb03 4000 	mla	r0, r3, r0, r4
 801d922:	0d43      	lsrs	r3, r0, #21
 801d924:	0940      	lsrs	r0, r0, #5
 801d926:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d92a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d92e:	4318      	orrs	r0, r3
 801d930:	8008      	strh	r0, [r1, #0]
 801d932:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801d936:	bf00      	nop
 801d938:	0802aeb2 	.word	0x0802aeb2
 801d93c:	0802b52b 	.word	0x0802b52b
 801d940:	0802af36 	.word	0x0802af36

0801d944 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d944:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d948:	ed2d 8b0a 	vpush	{d8-d12}
 801d94c:	b093      	sub	sp, #76	; 0x4c
 801d94e:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801d952:	920f      	str	r2, [sp, #60]	; 0x3c
 801d954:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801d956:	9108      	str	r1, [sp, #32]
 801d958:	9306      	str	r3, [sp, #24]
 801d95a:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801d95e:	9010      	str	r0, [sp, #64]	; 0x40
 801d960:	6850      	ldr	r0, [r2, #4]
 801d962:	6812      	ldr	r2, [r2, #0]
 801d964:	fb00 1303 	mla	r3, r0, r3, r1
 801d968:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801d96c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801d96e:	681b      	ldr	r3, [r3, #0]
 801d970:	9307      	str	r3, [sp, #28]
 801d972:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801d974:	685f      	ldr	r7, [r3, #4]
 801d976:	eeb0 aa40 	vmov.f32	s20, s0
 801d97a:	eef0 9a60 	vmov.f32	s19, s1
 801d97e:	eeb0 9a41 	vmov.f32	s18, s2
 801d982:	eeb0 8a62 	vmov.f32	s16, s5
 801d986:	eef0 8a43 	vmov.f32	s17, s6
 801d98a:	eeb0 ca44 	vmov.f32	s24, s8
 801d98e:	eef0 ba64 	vmov.f32	s23, s9
 801d992:	eeb0 ba45 	vmov.f32	s22, s10
 801d996:	3704      	adds	r7, #4
 801d998:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 801d99c:	9b08      	ldr	r3, [sp, #32]
 801d99e:	2b00      	cmp	r3, #0
 801d9a0:	dc03      	bgt.n	801d9aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d9a2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d9a4:	2b00      	cmp	r3, #0
 801d9a6:	f340 81b2 	ble.w	801dd0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 801d9aa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801d9ac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d9b0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d9b4:	1e48      	subs	r0, r1, #1
 801d9b6:	f102 3cff 	add.w	ip, r2, #4294967295
 801d9ba:	9b06      	ldr	r3, [sp, #24]
 801d9bc:	2b00      	cmp	r3, #0
 801d9be:	f340 80a9 	ble.w	801db14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 801d9c2:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d9c6:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d9ca:	d406      	bmi.n	801d9da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d9cc:	4586      	cmp	lr, r0
 801d9ce:	da04      	bge.n	801d9da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d9d0:	2b00      	cmp	r3, #0
 801d9d2:	db02      	blt.n	801d9da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d9d4:	4563      	cmp	r3, ip
 801d9d6:	f2c0 809e 	blt.w	801db16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801d9da:	f11e 0e01 	adds.w	lr, lr, #1
 801d9de:	f100 808f 	bmi.w	801db00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801d9e2:	4571      	cmp	r1, lr
 801d9e4:	f2c0 808c 	blt.w	801db00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801d9e8:	3301      	adds	r3, #1
 801d9ea:	f100 8089 	bmi.w	801db00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801d9ee:	429a      	cmp	r2, r3
 801d9f0:	f2c0 8086 	blt.w	801db00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801d9f4:	f8dd b018 	ldr.w	fp, [sp, #24]
 801d9f8:	46c8      	mov	r8, r9
 801d9fa:	f1bb 0f00 	cmp.w	fp, #0
 801d9fe:	f340 80a6 	ble.w	801db4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 801da02:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801da04:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801da06:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801da0a:	689b      	ldr	r3, [r3, #8]
 801da0c:	1422      	asrs	r2, r4, #16
 801da0e:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801da12:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801da16:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801da1a:	f100 80e3 	bmi.w	801dbe4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801da1e:	f103 3aff 	add.w	sl, r3, #4294967295
 801da22:	4552      	cmp	r2, sl
 801da24:	f280 80de 	bge.w	801dbe4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801da28:	f1bc 0f00 	cmp.w	ip, #0
 801da2c:	f2c0 80da 	blt.w	801dbe4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801da30:	f10e 3aff 	add.w	sl, lr, #4294967295
 801da34:	45d4      	cmp	ip, sl
 801da36:	f280 80d5 	bge.w	801dbe4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801da3a:	b21b      	sxth	r3, r3
 801da3c:	fb0c 2203 	mla	r2, ip, r3, r2
 801da40:	9d07      	ldr	r5, [sp, #28]
 801da42:	eb05 0a02 	add.w	sl, r5, r2
 801da46:	5caa      	ldrb	r2, [r5, r2]
 801da48:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801da4c:	2800      	cmp	r0, #0
 801da4e:	f000 80c0 	beq.w	801dbd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 801da52:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801da56:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801da5a:	920b      	str	r2, [sp, #44]	; 0x2c
 801da5c:	b151      	cbz	r1, 801da74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 801da5e:	eb0a 0203 	add.w	r2, sl, r3
 801da62:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801da66:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801da6a:	9309      	str	r3, [sp, #36]	; 0x24
 801da6c:	7853      	ldrb	r3, [r2, #1]
 801da6e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801da72:	930c      	str	r3, [sp, #48]	; 0x30
 801da74:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801da76:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801da78:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801da7c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801da80:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801da84:	ea4c 0c03 	orr.w	ip, ip, r3
 801da88:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801da8a:	041b      	lsls	r3, r3, #16
 801da8c:	fb10 f201 	smulbb	r2, r0, r1
 801da90:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801da94:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801da98:	10d2      	asrs	r2, r2, #3
 801da9a:	432b      	orrs	r3, r5
 801da9c:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801daa0:	4353      	muls	r3, r2
 801daa2:	fb0a 330c 	mla	r3, sl, ip, r3
 801daa6:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801daaa:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801daae:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801dab2:	ea4c 0e0e 	orr.w	lr, ip, lr
 801dab6:	f1c1 0c10 	rsb	ip, r1, #16
 801daba:	ebac 0c00 	sub.w	ip, ip, r0
 801dabe:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801dac2:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801dac6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dac8:	0418      	lsls	r0, r3, #16
 801daca:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801dace:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801dad2:	4318      	orrs	r0, r3
 801dad4:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801dad8:	fb02 c200 	mla	r2, r2, r0, ip
 801dadc:	0d53      	lsrs	r3, r2, #21
 801dade:	0952      	lsrs	r2, r2, #5
 801dae0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dae4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801dae8:	431a      	orrs	r2, r3
 801daea:	f8a8 2000 	strh.w	r2, [r8]
 801daee:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801daf0:	441c      	add	r4, r3
 801daf2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801daf4:	f108 0802 	add.w	r8, r8, #2
 801daf8:	441e      	add	r6, r3
 801dafa:	f10b 3bff 	add.w	fp, fp, #4294967295
 801dafe:	e77c      	b.n	801d9fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801db00:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801db02:	441c      	add	r4, r3
 801db04:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801db06:	441e      	add	r6, r3
 801db08:	9b06      	ldr	r3, [sp, #24]
 801db0a:	3b01      	subs	r3, #1
 801db0c:	9306      	str	r3, [sp, #24]
 801db0e:	f109 0902 	add.w	r9, r9, #2
 801db12:	e752      	b.n	801d9ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801db14:	d020      	beq.n	801db58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801db16:	9b06      	ldr	r3, [sp, #24]
 801db18:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801db1a:	3b01      	subs	r3, #1
 801db1c:	fb00 4003 	mla	r0, r0, r3, r4
 801db20:	1400      	asrs	r0, r0, #16
 801db22:	f53f af67 	bmi.w	801d9f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801db26:	3901      	subs	r1, #1
 801db28:	4288      	cmp	r0, r1
 801db2a:	f6bf af63 	bge.w	801d9f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801db2e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801db30:	fb01 6303 	mla	r3, r1, r3, r6
 801db34:	141b      	asrs	r3, r3, #16
 801db36:	f53f af5d 	bmi.w	801d9f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801db3a:	3a01      	subs	r2, #1
 801db3c:	4293      	cmp	r3, r2
 801db3e:	f6bf af59 	bge.w	801d9f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801db42:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801db46:	46ca      	mov	sl, r9
 801db48:	f1b8 0f00 	cmp.w	r8, #0
 801db4c:	dc67      	bgt.n	801dc1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801db4e:	9b06      	ldr	r3, [sp, #24]
 801db50:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801db54:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801db58:	9b08      	ldr	r3, [sp, #32]
 801db5a:	2b00      	cmp	r3, #0
 801db5c:	f340 80d7 	ble.w	801dd0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 801db60:	ee3a aa0c 	vadd.f32	s20, s20, s24
 801db64:	ee79 9aab 	vadd.f32	s19, s19, s23
 801db68:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 801db6c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801db6e:	ee39 9a0b 	vadd.f32	s18, s18, s22
 801db72:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801db76:	eef0 6a48 	vmov.f32	s13, s16
 801db7a:	ee69 7a27 	vmul.f32	s15, s18, s15
 801db7e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801db82:	ee37 8a48 	vsub.f32	s16, s14, s16
 801db86:	ee16 4a90 	vmov	r4, s13
 801db8a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801db8e:	eef0 6a68 	vmov.f32	s13, s17
 801db92:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801db96:	ee18 2a10 	vmov	r2, s16
 801db9a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801db9e:	fb92 f3f3 	sdiv	r3, r2, r3
 801dba2:	ee18 2a90 	vmov	r2, s17
 801dba6:	9329      	str	r3, [sp, #164]	; 0xa4
 801dba8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801dbaa:	fb92 f3f3 	sdiv	r3, r2, r3
 801dbae:	932a      	str	r3, [sp, #168]	; 0xa8
 801dbb0:	9b08      	ldr	r3, [sp, #32]
 801dbb2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801dbb4:	3b01      	subs	r3, #1
 801dbb6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dbba:	9308      	str	r3, [sp, #32]
 801dbbc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801dbbe:	bf08      	it	eq
 801dbc0:	4613      	moveq	r3, r2
 801dbc2:	ee16 6a90 	vmov	r6, s13
 801dbc6:	9306      	str	r3, [sp, #24]
 801dbc8:	eef0 8a67 	vmov.f32	s17, s15
 801dbcc:	eeb0 8a47 	vmov.f32	s16, s14
 801dbd0:	e6e4      	b.n	801d99c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801dbd2:	2900      	cmp	r1, #0
 801dbd4:	f43f af4e 	beq.w	801da74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 801dbd8:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801dbdc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801dbe0:	9309      	str	r3, [sp, #36]	; 0x24
 801dbe2:	e747      	b.n	801da74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 801dbe4:	f112 0a01 	adds.w	sl, r2, #1
 801dbe8:	d481      	bmi.n	801daee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801dbea:	4553      	cmp	r3, sl
 801dbec:	f6ff af7f 	blt.w	801daee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801dbf0:	f11c 0a01 	adds.w	sl, ip, #1
 801dbf4:	f53f af7b 	bmi.w	801daee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801dbf8:	45d6      	cmp	lr, sl
 801dbfa:	f6ff af78 	blt.w	801daee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801dbfe:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801dc02:	b21b      	sxth	r3, r3
 801dc04:	fa0f f28e 	sxth.w	r2, lr
 801dc08:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801dc0c:	9201      	str	r2, [sp, #4]
 801dc0e:	9300      	str	r3, [sp, #0]
 801dc10:	9a07      	ldr	r2, [sp, #28]
 801dc12:	9810      	ldr	r0, [sp, #64]	; 0x40
 801dc14:	463b      	mov	r3, r7
 801dc16:	4641      	mov	r1, r8
 801dc18:	f7ff fdfe 	bl	801d818 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801dc1c:	e767      	b.n	801daee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801dc1e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801dc20:	9d07      	ldr	r5, [sp, #28]
 801dc22:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801dc26:	1422      	asrs	r2, r4, #16
 801dc28:	1431      	asrs	r1, r6, #16
 801dc2a:	fb03 2101 	mla	r1, r3, r1, r2
 801dc2e:	9a07      	ldr	r2, [sp, #28]
 801dc30:	440a      	add	r2, r1
 801dc32:	5c69      	ldrb	r1, [r5, r1]
 801dc34:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801dc38:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801dc3c:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801dc40:	f1be 0f00 	cmp.w	lr, #0
 801dc44:	d05c      	beq.n	801dd00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 801dc46:	f892 c001 	ldrb.w	ip, [r2, #1]
 801dc4a:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801dc4e:	950d      	str	r5, [sp, #52]	; 0x34
 801dc50:	b150      	cbz	r0, 801dc68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801dc52:	eb02 0c03 	add.w	ip, r2, r3
 801dc56:	5cd3      	ldrb	r3, [r2, r3]
 801dc58:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801dc5c:	930a      	str	r3, [sp, #40]	; 0x28
 801dc5e:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801dc62:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801dc66:	930e      	str	r3, [sp, #56]	; 0x38
 801dc68:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801dc6a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801dc6c:	fb1e f200 	smulbb	r2, lr, r0
 801dc70:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801dc74:	10d2      	asrs	r2, r2, #3
 801dc76:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801dc7a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801dc7e:	ea4c 0c03 	orr.w	ip, ip, r3
 801dc82:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801dc86:	9311      	str	r3, [sp, #68]	; 0x44
 801dc88:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dc8a:	041b      	lsls	r3, r3, #16
 801dc8c:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801dc90:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801dc94:	ea43 030b 	orr.w	r3, r3, fp
 801dc98:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801dc9a:	4353      	muls	r3, r2
 801dc9c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801dca0:	fb05 3c0c 	mla	ip, r5, ip, r3
 801dca4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801dca8:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801dcac:	ea43 0b01 	orr.w	fp, r3, r1
 801dcb0:	f1c0 0110 	rsb	r1, r0, #16
 801dcb4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801dcb6:	eba1 0e0e 	sub.w	lr, r1, lr
 801dcba:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801dcbe:	fb0e cc0b 	mla	ip, lr, fp, ip
 801dcc2:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801dcc6:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801dcca:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801dcce:	ea4b 0e0e 	orr.w	lr, fp, lr
 801dcd2:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801dcd6:	fb02 cc0e 	mla	ip, r2, lr, ip
 801dcda:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801dcde:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801dce2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dce6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801dcea:	ea43 0c0c 	orr.w	ip, r3, ip
 801dcee:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801dcf0:	f82a cb02 	strh.w	ip, [sl], #2
 801dcf4:	441c      	add	r4, r3
 801dcf6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801dcf8:	f108 38ff 	add.w	r8, r8, #4294967295
 801dcfc:	441e      	add	r6, r3
 801dcfe:	e723      	b.n	801db48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801dd00:	2800      	cmp	r0, #0
 801dd02:	d0b1      	beq.n	801dc68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801dd04:	5cd3      	ldrb	r3, [r2, r3]
 801dd06:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801dd0a:	930a      	str	r3, [sp, #40]	; 0x28
 801dd0c:	e7ac      	b.n	801dc68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801dd0e:	b013      	add	sp, #76	; 0x4c
 801dd10:	ecbd 8b0a 	vpop	{d8-d12}
 801dd14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dd18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801dd18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd1c:	468b      	mov	fp, r1
 801dd1e:	8809      	ldrh	r1, [r1, #0]
 801dd20:	b089      	sub	sp, #36	; 0x24
 801dd22:	10cd      	asrs	r5, r1, #3
 801dd24:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 801dd28:	ea4f 2921 	mov.w	r9, r1, asr #8
 801dd2c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801dd30:	00c9      	lsls	r1, r1, #3
 801dd32:	9500      	str	r5, [sp, #0]
 801dd34:	b2c9      	uxtb	r1, r1
 801dd36:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 801dd3a:	9101      	str	r1, [sp, #4]
 801dd3c:	9900      	ldr	r1, [sp, #0]
 801dd3e:	9202      	str	r2, [sp, #8]
 801dd40:	fb04 650e 	mla	r5, r4, lr, r6
 801dd44:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 801dd48:	eb02 0805 	add.w	r8, r2, r5
 801dd4c:	0209      	lsls	r1, r1, #8
 801dd4e:	9a01      	ldr	r2, [sp, #4]
 801dd50:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 801dd54:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 801dd58:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 801dd5c:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 801dd60:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 801dd64:	4311      	orrs	r1, r2
 801dd66:	2c00      	cmp	r4, #0
 801dd68:	9107      	str	r1, [sp, #28]
 801dd6a:	db43      	blt.n	801ddf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 801dd6c:	45a2      	cmp	sl, r4
 801dd6e:	dd41      	ble.n	801ddf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 801dd70:	2e00      	cmp	r6, #0
 801dd72:	db3d      	blt.n	801ddf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 801dd74:	45b6      	cmp	lr, r6
 801dd76:	dd3b      	ble.n	801ddf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 801dd78:	9a02      	ldr	r2, [sp, #8]
 801dd7a:	5d55      	ldrb	r5, [r2, r5]
 801dd7c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801dd80:	441d      	add	r5, r3
 801dd82:	1c72      	adds	r2, r6, #1
 801dd84:	d439      	bmi.n	801ddfa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801dd86:	4596      	cmp	lr, r2
 801dd88:	dd37      	ble.n	801ddfa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801dd8a:	2f00      	cmp	r7, #0
 801dd8c:	d035      	beq.n	801ddfa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801dd8e:	f898 1001 	ldrb.w	r1, [r8, #1]
 801dd92:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801dd96:	4419      	add	r1, r3
 801dd98:	3401      	adds	r4, #1
 801dd9a:	d432      	bmi.n	801de02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 801dd9c:	45a2      	cmp	sl, r4
 801dd9e:	dd30      	ble.n	801de02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 801dda0:	b378      	cbz	r0, 801de02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 801dda2:	2e00      	cmp	r6, #0
 801dda4:	db2b      	blt.n	801ddfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 801dda6:	45b6      	cmp	lr, r6
 801dda8:	dd29      	ble.n	801ddfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 801ddaa:	f818 400e 	ldrb.w	r4, [r8, lr]
 801ddae:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801ddb2:	441c      	add	r4, r3
 801ddb4:	3601      	adds	r6, #1
 801ddb6:	d427      	bmi.n	801de08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801ddb8:	45b6      	cmp	lr, r6
 801ddba:	dd25      	ble.n	801de08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801ddbc:	b327      	cbz	r7, 801de08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801ddbe:	44c6      	add	lr, r8
 801ddc0:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801ddc4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ddc8:	4413      	add	r3, r2
 801ddca:	782a      	ldrb	r2, [r5, #0]
 801ddcc:	9202      	str	r2, [sp, #8]
 801ddce:	780a      	ldrb	r2, [r1, #0]
 801ddd0:	9203      	str	r2, [sp, #12]
 801ddd2:	7822      	ldrb	r2, [r4, #0]
 801ddd4:	9204      	str	r2, [sp, #16]
 801ddd6:	2f0f      	cmp	r7, #15
 801ddd8:	781a      	ldrb	r2, [r3, #0]
 801ddda:	9205      	str	r2, [sp, #20]
 801dddc:	d801      	bhi.n	801dde2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 801ddde:	280f      	cmp	r0, #15
 801dde0:	d914      	bls.n	801de0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 801dde2:	4b3f      	ldr	r3, [pc, #252]	; (801dee0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 801dde4:	4a3f      	ldr	r2, [pc, #252]	; (801dee4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 801dde6:	4840      	ldr	r0, [pc, #256]	; (801dee8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 801dde8:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 801ddec:	f006 fb24 	bl	8024438 <__assert_func>
 801ddf0:	ad07      	add	r5, sp, #28
 801ddf2:	e7c6      	b.n	801dd82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 801ddf4:	a907      	add	r1, sp, #28
 801ddf6:	460d      	mov	r5, r1
 801ddf8:	e7ce      	b.n	801dd98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 801ddfa:	a907      	add	r1, sp, #28
 801ddfc:	e7cc      	b.n	801dd98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 801ddfe:	ac07      	add	r4, sp, #28
 801de00:	e7d8      	b.n	801ddb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 801de02:	ab07      	add	r3, sp, #28
 801de04:	461c      	mov	r4, r3
 801de06:	e7e0      	b.n	801ddca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 801de08:	ab07      	add	r3, sp, #28
 801de0a:	e7de      	b.n	801ddca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 801de0c:	b2ba      	uxth	r2, r7
 801de0e:	b280      	uxth	r0, r0
 801de10:	fb02 fa00 	mul.w	sl, r2, r0
 801de14:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 801de18:	0112      	lsls	r2, r2, #4
 801de1a:	b280      	uxth	r0, r0
 801de1c:	f891 8002 	ldrb.w	r8, [r1, #2]
 801de20:	7849      	ldrb	r1, [r1, #1]
 801de22:	78ae      	ldrb	r6, [r5, #2]
 801de24:	786d      	ldrb	r5, [r5, #1]
 801de26:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 801de2a:	eba2 020a 	sub.w	r2, r2, sl
 801de2e:	b292      	uxth	r2, r2
 801de30:	ebae 0e00 	sub.w	lr, lr, r0
 801de34:	fa1f fe8e 	uxth.w	lr, lr
 801de38:	4351      	muls	r1, r2
 801de3a:	fb02 f808 	mul.w	r8, r2, r8
 801de3e:	fb0e 8806 	mla	r8, lr, r6, r8
 801de42:	fb0e 1505 	mla	r5, lr, r5, r1
 801de46:	78a6      	ldrb	r6, [r4, #2]
 801de48:	7861      	ldrb	r1, [r4, #1]
 801de4a:	fa1f f78c 	uxth.w	r7, ip
 801de4e:	fb00 8806 	mla	r8, r0, r6, r8
 801de52:	fb00 5501 	mla	r5, r0, r1, r5
 801de56:	789e      	ldrb	r6, [r3, #2]
 801de58:	7859      	ldrb	r1, [r3, #1]
 801de5a:	9b00      	ldr	r3, [sp, #0]
 801de5c:	ea6f 0c0c 	mvn.w	ip, ip
 801de60:	fa5f fc8c 	uxtb.w	ip, ip
 801de64:	fb0a 5101 	mla	r1, sl, r1, r5
 801de68:	fb13 f50c 	smulbb	r5, r3, ip
 801de6c:	9b03      	ldr	r3, [sp, #12]
 801de6e:	435a      	muls	r2, r3
 801de70:	9b02      	ldr	r3, [sp, #8]
 801de72:	fb0e 2203 	mla	r2, lr, r3, r2
 801de76:	9b04      	ldr	r3, [sp, #16]
 801de78:	fb00 2003 	mla	r0, r0, r3, r2
 801de7c:	9b05      	ldr	r3, [sp, #20]
 801de7e:	fb0a 8606 	mla	r6, sl, r6, r8
 801de82:	fb19 f90c 	smulbb	r9, r9, ip
 801de86:	fb0a 0a03 	mla	sl, sl, r3, r0
 801de8a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801de8e:	9b01      	ldr	r3, [sp, #4]
 801de90:	fb06 9607 	mla	r6, r6, r7, r9
 801de94:	b2b6      	uxth	r6, r6
 801de96:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 801de9a:	fb13 fc0c 	smulbb	ip, r3, ip
 801de9e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801dea2:	fb01 5107 	mla	r1, r1, r7, r5
 801dea6:	f106 0901 	add.w	r9, r6, #1
 801deaa:	fb0a c707 	mla	r7, sl, r7, ip
 801deae:	b2bf      	uxth	r7, r7
 801deb0:	b289      	uxth	r1, r1
 801deb2:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 801deb6:	f406 4978 	and.w	r9, r6, #63488	; 0xf800
 801deba:	1c4d      	adds	r5, r1, #1
 801debc:	1c7e      	adds	r6, r7, #1
 801debe:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801dec2:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 801dec6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801deca:	0949      	lsrs	r1, r1, #5
 801decc:	ea46 0609 	orr.w	r6, r6, r9
 801ded0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ded4:	430e      	orrs	r6, r1
 801ded6:	f8ab 6000 	strh.w	r6, [fp]
 801deda:	b009      	add	sp, #36	; 0x24
 801dedc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dee0:	0802aeb2 	.word	0x0802aeb2
 801dee4:	0802b482 	.word	0x0802b482
 801dee8:	0802af36 	.word	0x0802af36

0801deec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801deec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801def0:	ed2d 8b08 	vpush	{d8-d11}
 801def4:	b095      	sub	sp, #84	; 0x54
 801def6:	eeb0 aa40 	vmov.f32	s20, s0
 801defa:	9212      	str	r2, [sp, #72]	; 0x48
 801defc:	9309      	str	r3, [sp, #36]	; 0x24
 801defe:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801df00:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801df04:	930f      	str	r3, [sp, #60]	; 0x3c
 801df06:	910e      	str	r1, [sp, #56]	; 0x38
 801df08:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801df0c:	9013      	str	r0, [sp, #76]	; 0x4c
 801df0e:	6850      	ldr	r0, [r2, #4]
 801df10:	6812      	ldr	r2, [r2, #0]
 801df12:	fb00 1303 	mla	r3, r0, r3, r1
 801df16:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801df1a:	930a      	str	r3, [sp, #40]	; 0x28
 801df1c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801df1e:	681b      	ldr	r3, [r3, #0]
 801df20:	930d      	str	r3, [sp, #52]	; 0x34
 801df22:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801df24:	685c      	ldr	r4, [r3, #4]
 801df26:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801df28:	43db      	mvns	r3, r3
 801df2a:	b2db      	uxtb	r3, r3
 801df2c:	eef0 9a60 	vmov.f32	s19, s1
 801df30:	eeb0 9a41 	vmov.f32	s18, s2
 801df34:	eeb0 8a62 	vmov.f32	s16, s5
 801df38:	eef0 8a43 	vmov.f32	s17, s6
 801df3c:	eef0 ba44 	vmov.f32	s23, s8
 801df40:	eeb0 ba64 	vmov.f32	s22, s9
 801df44:	eef0 aa45 	vmov.f32	s21, s10
 801df48:	3404      	adds	r4, #4
 801df4a:	930b      	str	r3, [sp, #44]	; 0x2c
 801df4c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801df4e:	2b00      	cmp	r3, #0
 801df50:	dc03      	bgt.n	801df5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801df52:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801df54:	2b00      	cmp	r3, #0
 801df56:	f340 8255 	ble.w	801e404 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 801df5a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801df5c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801df60:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801df64:	1e48      	subs	r0, r1, #1
 801df66:	1e55      	subs	r5, r2, #1
 801df68:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801df6a:	2b00      	cmp	r3, #0
 801df6c:	f340 80f9 	ble.w	801e162 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801df70:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 801df72:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801df74:	1436      	asrs	r6, r6, #16
 801df76:	ea4f 4323 	mov.w	r3, r3, asr #16
 801df7a:	d406      	bmi.n	801df8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801df7c:	4286      	cmp	r6, r0
 801df7e:	da04      	bge.n	801df8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801df80:	2b00      	cmp	r3, #0
 801df82:	db02      	blt.n	801df8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801df84:	42ab      	cmp	r3, r5
 801df86:	f2c0 80ed 	blt.w	801e164 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801df8a:	3601      	adds	r6, #1
 801df8c:	f100 80da 	bmi.w	801e144 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801df90:	42b1      	cmp	r1, r6
 801df92:	f2c0 80d7 	blt.w	801e144 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801df96:	3301      	adds	r3, #1
 801df98:	f100 80d4 	bmi.w	801e144 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801df9c:	429a      	cmp	r2, r3
 801df9e:	f2c0 80d1 	blt.w	801e144 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801dfa2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dfa4:	9311      	str	r3, [sp, #68]	; 0x44
 801dfa6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801dfa8:	930c      	str	r3, [sp, #48]	; 0x30
 801dfaa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801dfac:	2b00      	cmp	r3, #0
 801dfae:	f340 80fa 	ble.w	801e1a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801dfb2:	982e      	ldr	r0, [sp, #184]	; 0xb8
 801dfb4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801dfb6:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801dfb8:	68c6      	ldr	r6, [r0, #12]
 801dfba:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801dfbc:	141d      	asrs	r5, r3, #16
 801dfbe:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801dfc2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801dfc4:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801dfc6:	1400      	asrs	r0, r0, #16
 801dfc8:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801dfcc:	6892      	ldr	r2, [r2, #8]
 801dfce:	f100 813e 	bmi.w	801e24e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801dfd2:	1e57      	subs	r7, r2, #1
 801dfd4:	42b8      	cmp	r0, r7
 801dfd6:	f280 813a 	bge.w	801e24e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801dfda:	2d00      	cmp	r5, #0
 801dfdc:	f2c0 8137 	blt.w	801e24e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801dfe0:	1e77      	subs	r7, r6, #1
 801dfe2:	42bd      	cmp	r5, r7
 801dfe4:	f280 8133 	bge.w	801e24e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801dfe8:	b212      	sxth	r2, r2
 801dfea:	fb05 0002 	mla	r0, r5, r2, r0
 801dfee:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801dff0:	f815 a000 	ldrb.w	sl, [r5, r0]
 801dff4:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801dff8:	182e      	adds	r6, r5, r0
 801dffa:	eb04 050a 	add.w	r5, r4, sl
 801dffe:	2b00      	cmp	r3, #0
 801e000:	f000 8117 	beq.w	801e232 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801e004:	f896 c001 	ldrb.w	ip, [r6, #1]
 801e008:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801e00c:	44a4      	add	ip, r4
 801e00e:	2900      	cmp	r1, #0
 801e010:	f000 8117 	beq.w	801e242 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801e014:	18b0      	adds	r0, r6, r2
 801e016:	5cb2      	ldrb	r2, [r6, r2]
 801e018:	7840      	ldrb	r0, [r0, #1]
 801e01a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e01e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801e022:	4422      	add	r2, r4
 801e024:	4420      	add	r0, r4
 801e026:	b29b      	uxth	r3, r3
 801e028:	b289      	uxth	r1, r1
 801e02a:	fb03 f901 	mul.w	r9, r3, r1
 801e02e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e032:	011b      	lsls	r3, r3, #4
 801e034:	b289      	uxth	r1, r1
 801e036:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801e03a:	f895 b002 	ldrb.w	fp, [r5, #2]
 801e03e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801e040:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801e044:	f8b6 e000 	ldrh.w	lr, [r6]
 801e048:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801e04c:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801e050:	eba3 0309 	sub.w	r3, r3, r9
 801e054:	b29b      	uxth	r3, r3
 801e056:	eba8 0801 	sub.w	r8, r8, r1
 801e05a:	fa1f f888 	uxth.w	r8, r8
 801e05e:	435f      	muls	r7, r3
 801e060:	fb08 770b 	mla	r7, r8, fp, r7
 801e064:	f892 b002 	ldrb.w	fp, [r2, #2]
 801e068:	9310      	str	r3, [sp, #64]	; 0x40
 801e06a:	fb01 770b 	mla	r7, r1, fp, r7
 801e06e:	f890 b002 	ldrb.w	fp, [r0, #2]
 801e072:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e074:	fb09 770b 	mla	r7, r9, fp, r7
 801e078:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801e07c:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801e080:	fb1b fb03 	smulbb	fp, fp, r3
 801e084:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801e088:	fb07 b706 	mla	r7, r7, r6, fp
 801e08c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e08e:	f895 b001 	ldrb.w	fp, [r5, #1]
 801e092:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801e096:	f89c c000 	ldrb.w	ip, [ip]
 801e09a:	435d      	muls	r5, r3
 801e09c:	fb08 550b 	mla	r5, r8, fp, r5
 801e0a0:	f892 b001 	ldrb.w	fp, [r2, #1]
 801e0a4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e0a6:	fb01 550b 	mla	r5, r1, fp, r5
 801e0aa:	f890 b001 	ldrb.w	fp, [r0, #1]
 801e0ae:	fb09 550b 	mla	r5, r9, fp, r5
 801e0b2:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801e0b6:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801e0ba:	fb1b fb03 	smulbb	fp, fp, r3
 801e0be:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e0c0:	fb03 f30c 	mul.w	r3, r3, ip
 801e0c4:	f892 c000 	ldrb.w	ip, [r2]
 801e0c8:	fb08 330a 	mla	r3, r8, sl, r3
 801e0cc:	fb01 330c 	mla	r3, r1, ip, r3
 801e0d0:	f890 c000 	ldrb.w	ip, [r0]
 801e0d4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e0d8:	fb09 3c0c 	mla	ip, r9, ip, r3
 801e0dc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e0de:	fa5f fe8e 	uxtb.w	lr, lr
 801e0e2:	b2bf      	uxth	r7, r7
 801e0e4:	fb1e fe03 	smulbb	lr, lr, r3
 801e0e8:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801e0ec:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801e0f0:	fb05 b506 	mla	r5, r5, r6, fp
 801e0f4:	1c7b      	adds	r3, r7, #1
 801e0f6:	fb0c e606 	mla	r6, ip, r6, lr
 801e0fa:	b2ad      	uxth	r5, r5
 801e0fc:	b2b6      	uxth	r6, r6
 801e0fe:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801e102:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801e106:	f105 0b01 	add.w	fp, r5, #1
 801e10a:	1c77      	adds	r7, r6, #1
 801e10c:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801e110:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801e114:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e118:	096d      	lsrs	r5, r5, #5
 801e11a:	431f      	orrs	r7, r3
 801e11c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e120:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e122:	433d      	orrs	r5, r7
 801e124:	801d      	strh	r5, [r3, #0]
 801e126:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e128:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801e12a:	3302      	adds	r3, #2
 801e12c:	930c      	str	r3, [sp, #48]	; 0x30
 801e12e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801e130:	4413      	add	r3, r2
 801e132:	9327      	str	r3, [sp, #156]	; 0x9c
 801e134:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801e136:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e138:	4413      	add	r3, r2
 801e13a:	9328      	str	r3, [sp, #160]	; 0xa0
 801e13c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e13e:	3b01      	subs	r3, #1
 801e140:	9311      	str	r3, [sp, #68]	; 0x44
 801e142:	e732      	b.n	801dfaa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 801e144:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801e146:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 801e148:	4433      	add	r3, r6
 801e14a:	9327      	str	r3, [sp, #156]	; 0x9c
 801e14c:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 801e14e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e150:	4433      	add	r3, r6
 801e152:	9328      	str	r3, [sp, #160]	; 0xa0
 801e154:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e156:	3b01      	subs	r3, #1
 801e158:	9309      	str	r3, [sp, #36]	; 0x24
 801e15a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e15c:	3302      	adds	r3, #2
 801e15e:	930a      	str	r3, [sp, #40]	; 0x28
 801e160:	e702      	b.n	801df68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e162:	d027      	beq.n	801e1b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801e164:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e166:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801e168:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 801e16a:	3b01      	subs	r3, #1
 801e16c:	fb00 5003 	mla	r0, r0, r3, r5
 801e170:	1400      	asrs	r0, r0, #16
 801e172:	f53f af16 	bmi.w	801dfa2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801e176:	3901      	subs	r1, #1
 801e178:	4288      	cmp	r0, r1
 801e17a:	f6bf af12 	bge.w	801dfa2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801e17e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801e180:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801e182:	fb01 0303 	mla	r3, r1, r3, r0
 801e186:	141b      	asrs	r3, r3, #16
 801e188:	f53f af0b 	bmi.w	801dfa2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801e18c:	3a01      	subs	r2, #1
 801e18e:	4293      	cmp	r3, r2
 801e190:	f6bf af07 	bge.w	801dfa2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801e194:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e196:	9311      	str	r3, [sp, #68]	; 0x44
 801e198:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801e19c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e19e:	930c      	str	r3, [sp, #48]	; 0x30
 801e1a0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e1a2:	2b00      	cmp	r3, #0
 801e1a4:	dc70      	bgt.n	801e288 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 801e1a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e1a8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801e1aa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e1ae:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e1b2:	930a      	str	r3, [sp, #40]	; 0x28
 801e1b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e1b6:	2b00      	cmp	r3, #0
 801e1b8:	f340 8124 	ble.w	801e404 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 801e1bc:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801e1c0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e1c4:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801e1c8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e1ca:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801e1ce:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801e1d2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801e1d6:	eef0 6a48 	vmov.f32	s13, s16
 801e1da:	ee69 7a27 	vmul.f32	s15, s18, s15
 801e1de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e1e2:	ee37 8a48 	vsub.f32	s16, s14, s16
 801e1e6:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 801e1ea:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801e1ee:	eef0 6a68 	vmov.f32	s13, s17
 801e1f2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801e1f6:	ee18 2a10 	vmov	r2, s16
 801e1fa:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801e1fe:	fb92 f3f3 	sdiv	r3, r2, r3
 801e202:	ee18 2a90 	vmov	r2, s17
 801e206:	9329      	str	r3, [sp, #164]	; 0xa4
 801e208:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e20a:	fb92 f3f3 	sdiv	r3, r2, r3
 801e20e:	932a      	str	r3, [sp, #168]	; 0xa8
 801e210:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e212:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e214:	3b01      	subs	r3, #1
 801e216:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e21a:	930e      	str	r3, [sp, #56]	; 0x38
 801e21c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e21e:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 801e222:	bf08      	it	eq
 801e224:	4613      	moveq	r3, r2
 801e226:	9309      	str	r3, [sp, #36]	; 0x24
 801e228:	eef0 8a67 	vmov.f32	s17, s15
 801e22c:	eeb0 8a47 	vmov.f32	s16, s14
 801e230:	e68c      	b.n	801df4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e232:	b149      	cbz	r1, 801e248 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 801e234:	5cb2      	ldrb	r2, [r6, r2]
 801e236:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e23a:	4422      	add	r2, r4
 801e23c:	4628      	mov	r0, r5
 801e23e:	46ac      	mov	ip, r5
 801e240:	e6f1      	b.n	801e026 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801e242:	4628      	mov	r0, r5
 801e244:	462a      	mov	r2, r5
 801e246:	e6ee      	b.n	801e026 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801e248:	4628      	mov	r0, r5
 801e24a:	462a      	mov	r2, r5
 801e24c:	e7f7      	b.n	801e23e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801e24e:	1c47      	adds	r7, r0, #1
 801e250:	f53f af69 	bmi.w	801e126 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801e254:	42ba      	cmp	r2, r7
 801e256:	f6ff af66 	blt.w	801e126 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801e25a:	1c6f      	adds	r7, r5, #1
 801e25c:	f53f af63 	bmi.w	801e126 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801e260:	42be      	cmp	r6, r7
 801e262:	f6ff af60 	blt.w	801e126 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801e266:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801e268:	9002      	str	r0, [sp, #8]
 801e26a:	b236      	sxth	r6, r6
 801e26c:	b212      	sxth	r2, r2
 801e26e:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801e272:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801e276:	9200      	str	r2, [sp, #0]
 801e278:	9601      	str	r6, [sp, #4]
 801e27a:	4623      	mov	r3, r4
 801e27c:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801e280:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e282:	f7ff fd49 	bl	801dd18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801e286:	e74e      	b.n	801e126 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801e288:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801e28a:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801e28c:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 801e28e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801e290:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801e294:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801e296:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801e29a:	142d      	asrs	r5, r5, #16
 801e29c:	1400      	asrs	r0, r0, #16
 801e29e:	fb02 5000 	mla	r0, r2, r0, r5
 801e2a2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e2a4:	f815 9000 	ldrb.w	r9, [r5, r0]
 801e2a8:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801e2ac:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801e2b0:	182e      	adds	r6, r5, r0
 801e2b2:	eb04 0509 	add.w	r5, r4, r9
 801e2b6:	2b00      	cmp	r3, #0
 801e2b8:	f000 8096 	beq.w	801e3e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 801e2bc:	7877      	ldrb	r7, [r6, #1]
 801e2be:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801e2c2:	4427      	add	r7, r4
 801e2c4:	2900      	cmp	r1, #0
 801e2c6:	f000 8097 	beq.w	801e3f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50c>
 801e2ca:	18b0      	adds	r0, r6, r2
 801e2cc:	5cb2      	ldrb	r2, [r6, r2]
 801e2ce:	7840      	ldrb	r0, [r0, #1]
 801e2d0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e2d4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801e2d8:	4422      	add	r2, r4
 801e2da:	4420      	add	r0, r4
 801e2dc:	b29b      	uxth	r3, r3
 801e2de:	b289      	uxth	r1, r1
 801e2e0:	fb03 f801 	mul.w	r8, r3, r1
 801e2e4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801e2e6:	f895 b002 	ldrb.w	fp, [r5, #2]
 801e2ea:	f8b6 c000 	ldrh.w	ip, [r6]
 801e2ee:	78be      	ldrb	r6, [r7, #2]
 801e2f0:	f814 9009 	ldrb.w	r9, [r4, r9]
 801e2f4:	011b      	lsls	r3, r3, #4
 801e2f6:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801e2fa:	b289      	uxth	r1, r1
 801e2fc:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801e300:	eba3 0308 	sub.w	r3, r3, r8
 801e304:	b29b      	uxth	r3, r3
 801e306:	ebae 0e01 	sub.w	lr, lr, r1
 801e30a:	fa1f fe8e 	uxth.w	lr, lr
 801e30e:	435e      	muls	r6, r3
 801e310:	fb0e 660b 	mla	r6, lr, fp, r6
 801e314:	f892 b002 	ldrb.w	fp, [r2, #2]
 801e318:	9310      	str	r3, [sp, #64]	; 0x40
 801e31a:	fb01 660b 	mla	r6, r1, fp, r6
 801e31e:	f890 b002 	ldrb.w	fp, [r0, #2]
 801e322:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e324:	fb08 660b 	mla	r6, r8, fp, r6
 801e328:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801e32c:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801e330:	fb1b fb03 	smulbb	fp, fp, r3
 801e334:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e338:	fb06 b60a 	mla	r6, r6, sl, fp
 801e33c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e33e:	f895 b001 	ldrb.w	fp, [r5, #1]
 801e342:	787d      	ldrb	r5, [r7, #1]
 801e344:	783f      	ldrb	r7, [r7, #0]
 801e346:	435d      	muls	r5, r3
 801e348:	fb0e 550b 	mla	r5, lr, fp, r5
 801e34c:	f892 b001 	ldrb.w	fp, [r2, #1]
 801e350:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e352:	fb01 550b 	mla	r5, r1, fp, r5
 801e356:	f890 b001 	ldrb.w	fp, [r0, #1]
 801e35a:	fb08 550b 	mla	r5, r8, fp, r5
 801e35e:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801e362:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801e366:	fb1b fb03 	smulbb	fp, fp, r3
 801e36a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e36c:	437b      	muls	r3, r7
 801e36e:	7817      	ldrb	r7, [r2, #0]
 801e370:	fb0e 3309 	mla	r3, lr, r9, r3
 801e374:	fb01 3307 	mla	r3, r1, r7, r3
 801e378:	7807      	ldrb	r7, [r0, #0]
 801e37a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e37e:	fb08 3707 	mla	r7, r8, r7, r3
 801e382:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e384:	fa5f fc8c 	uxtb.w	ip, ip
 801e388:	fb1c fc03 	smulbb	ip, ip, r3
 801e38c:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801e390:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801e394:	fb05 b50a 	mla	r5, r5, sl, fp
 801e398:	fb07 c70a 	mla	r7, r7, sl, ip
 801e39c:	b2b6      	uxth	r6, r6
 801e39e:	b2ad      	uxth	r5, r5
 801e3a0:	b2bf      	uxth	r7, r7
 801e3a2:	1c73      	adds	r3, r6, #1
 801e3a4:	1c7a      	adds	r2, r7, #1
 801e3a6:	f105 0b01 	add.w	fp, r5, #1
 801e3aa:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801e3ae:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801e3b2:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801e3b6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e3ba:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801e3be:	096d      	lsrs	r5, r5, #5
 801e3c0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e3c2:	4316      	orrs	r6, r2
 801e3c4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e3c8:	432e      	orrs	r6, r5
 801e3ca:	f823 6b02 	strh.w	r6, [r3], #2
 801e3ce:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801e3d0:	930c      	str	r3, [sp, #48]	; 0x30
 801e3d2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801e3d4:	4413      	add	r3, r2
 801e3d6:	9327      	str	r3, [sp, #156]	; 0x9c
 801e3d8:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801e3da:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e3dc:	4413      	add	r3, r2
 801e3de:	9328      	str	r3, [sp, #160]	; 0xa0
 801e3e0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e3e2:	3b01      	subs	r3, #1
 801e3e4:	9311      	str	r3, [sp, #68]	; 0x44
 801e3e6:	e6db      	b.n	801e1a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 801e3e8:	b149      	cbz	r1, 801e3fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801e3ea:	5cb2      	ldrb	r2, [r6, r2]
 801e3ec:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e3f0:	4422      	add	r2, r4
 801e3f2:	4628      	mov	r0, r5
 801e3f4:	462f      	mov	r7, r5
 801e3f6:	e771      	b.n	801e2dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 801e3f8:	4628      	mov	r0, r5
 801e3fa:	462a      	mov	r2, r5
 801e3fc:	e76e      	b.n	801e2dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 801e3fe:	4628      	mov	r0, r5
 801e400:	462a      	mov	r2, r5
 801e402:	e7f7      	b.n	801e3f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801e404:	b015      	add	sp, #84	; 0x54
 801e406:	ecbd 8b08 	vpop	{d8-d11}
 801e40a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801e410 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801e410:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e414:	880e      	ldrh	r6, [r1, #0]
 801e416:	b085      	sub	sp, #20
 801e418:	0230      	lsls	r0, r6, #8
 801e41a:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 801e41e:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 801e422:	0170      	lsls	r0, r6, #5
 801e424:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801e428:	9101      	str	r1, [sp, #4]
 801e42a:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 801e42e:	00f6      	lsls	r6, r6, #3
 801e430:	ea4b 0000 	orr.w	r0, fp, r0
 801e434:	b2f6      	uxtb	r6, r6
 801e436:	4691      	mov	r9, r2
 801e438:	fb05 7a0c 	mla	sl, r5, ip, r7
 801e43c:	4306      	orrs	r6, r0
 801e43e:	2d00      	cmp	r5, #0
 801e440:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801e444:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 801e448:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 801e44c:	9603      	str	r6, [sp, #12]
 801e44e:	eb09 0e0a 	add.w	lr, r9, sl
 801e452:	db42      	blt.n	801e4da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 801e454:	45a8      	cmp	r8, r5
 801e456:	dd40      	ble.n	801e4da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 801e458:	2f00      	cmp	r7, #0
 801e45a:	db3c      	blt.n	801e4d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 801e45c:	45bc      	cmp	ip, r7
 801e45e:	dd3a      	ble.n	801e4d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 801e460:	f819 600a 	ldrb.w	r6, [r9, sl]
 801e464:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801e468:	441e      	add	r6, r3
 801e46a:	1c78      	adds	r0, r7, #1
 801e46c:	d438      	bmi.n	801e4e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 801e46e:	4584      	cmp	ip, r0
 801e470:	dd36      	ble.n	801e4e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 801e472:	b3aa      	cbz	r2, 801e4e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 801e474:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801e478:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801e47c:	4418      	add	r0, r3
 801e47e:	3501      	adds	r5, #1
 801e480:	d432      	bmi.n	801e4e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 801e482:	45a8      	cmp	r8, r5
 801e484:	dd30      	ble.n	801e4e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 801e486:	b37c      	cbz	r4, 801e4e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 801e488:	2f00      	cmp	r7, #0
 801e48a:	db2b      	blt.n	801e4e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 801e48c:	45bc      	cmp	ip, r7
 801e48e:	dd29      	ble.n	801e4e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 801e490:	f81e 500c 	ldrb.w	r5, [lr, ip]
 801e494:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801e498:	441d      	add	r5, r3
 801e49a:	3701      	adds	r7, #1
 801e49c:	d427      	bmi.n	801e4ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 801e49e:	45bc      	cmp	ip, r7
 801e4a0:	dd25      	ble.n	801e4ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 801e4a2:	b322      	cbz	r2, 801e4ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 801e4a4:	44f4      	add	ip, lr
 801e4a6:	f89c 7001 	ldrb.w	r7, [ip, #1]
 801e4aa:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801e4ae:	443b      	add	r3, r7
 801e4b0:	781f      	ldrb	r7, [r3, #0]
 801e4b2:	f896 9000 	ldrb.w	r9, [r6]
 801e4b6:	f890 a000 	ldrb.w	sl, [r0]
 801e4ba:	f895 8000 	ldrb.w	r8, [r5]
 801e4be:	2a0f      	cmp	r2, #15
 801e4c0:	4639      	mov	r1, r7
 801e4c2:	d801      	bhi.n	801e4c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb8>
 801e4c4:	2c0f      	cmp	r4, #15
 801e4c6:	d914      	bls.n	801e4f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe2>
 801e4c8:	4b2c      	ldr	r3, [pc, #176]	; (801e57c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 801e4ca:	4a2d      	ldr	r2, [pc, #180]	; (801e580 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 801e4cc:	482d      	ldr	r0, [pc, #180]	; (801e584 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x174>)
 801e4ce:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 801e4d2:	f005 ffb1 	bl	8024438 <__assert_func>
 801e4d6:	ae03      	add	r6, sp, #12
 801e4d8:	e7c7      	b.n	801e46a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5a>
 801e4da:	a803      	add	r0, sp, #12
 801e4dc:	4606      	mov	r6, r0
 801e4de:	e7ce      	b.n	801e47e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801e4e0:	a803      	add	r0, sp, #12
 801e4e2:	e7cc      	b.n	801e47e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801e4e4:	ad03      	add	r5, sp, #12
 801e4e6:	e7d8      	b.n	801e49a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8a>
 801e4e8:	ab03      	add	r3, sp, #12
 801e4ea:	461d      	mov	r5, r3
 801e4ec:	e7e0      	b.n	801e4b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 801e4ee:	ab03      	add	r3, sp, #12
 801e4f0:	e7de      	b.n	801e4b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 801e4f2:	b292      	uxth	r2, r2
 801e4f4:	b2a4      	uxth	r4, r4
 801e4f6:	fb02 fe04 	mul.w	lr, r2, r4
 801e4fa:	ebce 1404 	rsb	r4, lr, r4, lsl #4
 801e4fe:	0112      	lsls	r2, r2, #4
 801e500:	b2a4      	uxth	r4, r4
 801e502:	f890 c002 	ldrb.w	ip, [r0, #2]
 801e506:	f896 b002 	ldrb.w	fp, [r6, #2]
 801e50a:	7840      	ldrb	r0, [r0, #1]
 801e50c:	7876      	ldrb	r6, [r6, #1]
 801e50e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801e512:	eba2 020e 	sub.w	r2, r2, lr
 801e516:	b292      	uxth	r2, r2
 801e518:	1b3f      	subs	r7, r7, r4
 801e51a:	b2bf      	uxth	r7, r7
 801e51c:	fb02 fc0c 	mul.w	ip, r2, ip
 801e520:	fb07 cc0b 	mla	ip, r7, fp, ip
 801e524:	f895 b002 	ldrb.w	fp, [r5, #2]
 801e528:	fb04 cc0b 	mla	ip, r4, fp, ip
 801e52c:	f893 b002 	ldrb.w	fp, [r3, #2]
 801e530:	785b      	ldrb	r3, [r3, #1]
 801e532:	fb0e cc0b 	mla	ip, lr, fp, ip
 801e536:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801e53a:	fb02 fc0a 	mul.w	ip, r2, sl
 801e53e:	4342      	muls	r2, r0
 801e540:	7868      	ldrb	r0, [r5, #1]
 801e542:	fb07 cc09 	mla	ip, r7, r9, ip
 801e546:	fb07 2206 	mla	r2, r7, r6, r2
 801e54a:	fb04 cc08 	mla	ip, r4, r8, ip
 801e54e:	fb04 2400 	mla	r4, r4, r0, r2
 801e552:	fb0e cc01 	mla	ip, lr, r1, ip
 801e556:	fb0e 4e03 	mla	lr, lr, r3, r4
 801e55a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e55e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801e562:	ea4c 0c0b 	orr.w	ip, ip, fp
 801e566:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801e56a:	9b01      	ldr	r3, [sp, #4]
 801e56c:	ea4c 0c0e 	orr.w	ip, ip, lr
 801e570:	f8a3 c000 	strh.w	ip, [r3]
 801e574:	b005      	add	sp, #20
 801e576:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e57a:	bf00      	nop
 801e57c:	0802aeb2 	.word	0x0802aeb2
 801e580:	0802b482 	.word	0x0802b482
 801e584:	0802af36 	.word	0x0802af36

0801e588 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e588:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e58c:	ed2d 8b08 	vpush	{d8-d11}
 801e590:	b08f      	sub	sp, #60	; 0x3c
 801e592:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 801e596:	920c      	str	r2, [sp, #48]	; 0x30
 801e598:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801e59a:	910a      	str	r1, [sp, #40]	; 0x28
 801e59c:	9306      	str	r3, [sp, #24]
 801e59e:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801e5a2:	900d      	str	r0, [sp, #52]	; 0x34
 801e5a4:	6850      	ldr	r0, [r2, #4]
 801e5a6:	6812      	ldr	r2, [r2, #0]
 801e5a8:	fb00 1303 	mla	r3, r0, r3, r1
 801e5ac:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e5b0:	9307      	str	r3, [sp, #28]
 801e5b2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e5b4:	681b      	ldr	r3, [r3, #0]
 801e5b6:	9308      	str	r3, [sp, #32]
 801e5b8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e5ba:	685c      	ldr	r4, [r3, #4]
 801e5bc:	eeb0 aa40 	vmov.f32	s20, s0
 801e5c0:	eef0 9a60 	vmov.f32	s19, s1
 801e5c4:	eeb0 9a41 	vmov.f32	s18, s2
 801e5c8:	eeb0 8a62 	vmov.f32	s16, s5
 801e5cc:	eef0 8a43 	vmov.f32	s17, s6
 801e5d0:	eef0 ba44 	vmov.f32	s23, s8
 801e5d4:	eeb0 ba64 	vmov.f32	s22, s9
 801e5d8:	eef0 aa45 	vmov.f32	s21, s10
 801e5dc:	3404      	adds	r4, #4
 801e5de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e5e0:	2b00      	cmp	r3, #0
 801e5e2:	dc03      	bgt.n	801e5ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801e5e4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e5e6:	2b00      	cmp	r3, #0
 801e5e8:	f340 81d6 	ble.w	801e998 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 801e5ec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e5ee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e5f2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e5f6:	1e48      	subs	r0, r1, #1
 801e5f8:	1e56      	subs	r6, r2, #1
 801e5fa:	9b06      	ldr	r3, [sp, #24]
 801e5fc:	2b00      	cmp	r3, #0
 801e5fe:	f340 80b7 	ble.w	801e770 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801e602:	ea5f 472b 	movs.w	r7, fp, asr #16
 801e606:	ea4f 4325 	mov.w	r3, r5, asr #16
 801e60a:	d406      	bmi.n	801e61a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e60c:	4287      	cmp	r7, r0
 801e60e:	da04      	bge.n	801e61a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e610:	2b00      	cmp	r3, #0
 801e612:	db02      	blt.n	801e61a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e614:	42b3      	cmp	r3, r6
 801e616:	f2c0 80ac 	blt.w	801e772 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801e61a:	3701      	adds	r7, #1
 801e61c:	f100 809d 	bmi.w	801e75a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801e620:	42b9      	cmp	r1, r7
 801e622:	f2c0 809a 	blt.w	801e75a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801e626:	3301      	adds	r3, #1
 801e628:	f100 8097 	bmi.w	801e75a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801e62c:	429a      	cmp	r2, r3
 801e62e:	f2c0 8094 	blt.w	801e75a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801e632:	9b06      	ldr	r3, [sp, #24]
 801e634:	930b      	str	r3, [sp, #44]	; 0x2c
 801e636:	9b07      	ldr	r3, [sp, #28]
 801e638:	9309      	str	r3, [sp, #36]	; 0x24
 801e63a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e63c:	2b00      	cmp	r3, #0
 801e63e:	f340 80b5 	ble.w	801e7ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801e642:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801e644:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801e646:	68c7      	ldr	r7, [r0, #12]
 801e648:	6892      	ldr	r2, [r2, #8]
 801e64a:	ea5f 402b 	movs.w	r0, fp, asr #16
 801e64e:	ea4f 4625 	mov.w	r6, r5, asr #16
 801e652:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801e656:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801e65a:	f100 80fb 	bmi.w	801e854 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801e65e:	f102 3cff 	add.w	ip, r2, #4294967295
 801e662:	4560      	cmp	r0, ip
 801e664:	f280 80f6 	bge.w	801e854 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801e668:	2e00      	cmp	r6, #0
 801e66a:	f2c0 80f3 	blt.w	801e854 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801e66e:	f107 3cff 	add.w	ip, r7, #4294967295
 801e672:	4566      	cmp	r6, ip
 801e674:	f280 80ee 	bge.w	801e854 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801e678:	b212      	sxth	r2, r2
 801e67a:	fb06 0002 	mla	r0, r6, r2, r0
 801e67e:	9e08      	ldr	r6, [sp, #32]
 801e680:	1837      	adds	r7, r6, r0
 801e682:	5c30      	ldrb	r0, [r6, r0]
 801e684:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801e688:	eb04 0c08 	add.w	ip, r4, r8
 801e68c:	2b00      	cmp	r3, #0
 801e68e:	f000 80d3 	beq.w	801e838 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801e692:	787e      	ldrb	r6, [r7, #1]
 801e694:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801e698:	4426      	add	r6, r4
 801e69a:	2900      	cmp	r1, #0
 801e69c:	f000 80d4 	beq.w	801e848 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 801e6a0:	18b8      	adds	r0, r7, r2
 801e6a2:	5cba      	ldrb	r2, [r7, r2]
 801e6a4:	7840      	ldrb	r0, [r0, #1]
 801e6a6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e6aa:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801e6ae:	4422      	add	r2, r4
 801e6b0:	4420      	add	r0, r4
 801e6b2:	b29b      	uxth	r3, r3
 801e6b4:	b289      	uxth	r1, r1
 801e6b6:	fb03 f901 	mul.w	r9, r3, r1
 801e6ba:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e6be:	011b      	lsls	r3, r3, #4
 801e6c0:	b289      	uxth	r1, r1
 801e6c2:	78b7      	ldrb	r7, [r6, #2]
 801e6c4:	f89c a002 	ldrb.w	sl, [ip, #2]
 801e6c8:	f89c c001 	ldrb.w	ip, [ip, #1]
 801e6cc:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801e6d0:	eba3 0309 	sub.w	r3, r3, r9
 801e6d4:	b29b      	uxth	r3, r3
 801e6d6:	ebae 0e01 	sub.w	lr, lr, r1
 801e6da:	fa1f fe8e 	uxth.w	lr, lr
 801e6de:	435f      	muls	r7, r3
 801e6e0:	fb0e 770a 	mla	r7, lr, sl, r7
 801e6e4:	f892 a002 	ldrb.w	sl, [r2, #2]
 801e6e8:	fb01 770a 	mla	r7, r1, sl, r7
 801e6ec:	f890 a002 	ldrb.w	sl, [r0, #2]
 801e6f0:	fb09 7a0a 	mla	sl, r9, sl, r7
 801e6f4:	f814 7008 	ldrb.w	r7, [r4, r8]
 801e6f8:	f896 8000 	ldrb.w	r8, [r6]
 801e6fc:	7876      	ldrb	r6, [r6, #1]
 801e6fe:	fb03 f808 	mul.w	r8, r3, r8
 801e702:	fb0e 8807 	mla	r8, lr, r7, r8
 801e706:	7817      	ldrb	r7, [r2, #0]
 801e708:	fb01 8807 	mla	r8, r1, r7, r8
 801e70c:	7807      	ldrb	r7, [r0, #0]
 801e70e:	fb09 8707 	mla	r7, r9, r7, r8
 801e712:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801e716:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e71a:	ea47 070a 	orr.w	r7, r7, sl
 801e71e:	4373      	muls	r3, r6
 801e720:	f892 a001 	ldrb.w	sl, [r2, #1]
 801e724:	fb0e 330c 	mla	r3, lr, ip, r3
 801e728:	fb01 310a 	mla	r1, r1, sl, r3
 801e72c:	f890 a001 	ldrb.w	sl, [r0, #1]
 801e730:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e732:	fb09 1a0a 	mla	sl, r9, sl, r1
 801e736:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e73a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e73e:	ea47 070a 	orr.w	r7, r7, sl
 801e742:	801f      	strh	r7, [r3, #0]
 801e744:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e746:	3302      	adds	r3, #2
 801e748:	9309      	str	r3, [sp, #36]	; 0x24
 801e74a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801e74c:	449b      	add	fp, r3
 801e74e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e750:	441d      	add	r5, r3
 801e752:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e754:	3b01      	subs	r3, #1
 801e756:	930b      	str	r3, [sp, #44]	; 0x2c
 801e758:	e76f      	b.n	801e63a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801e75a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801e75c:	449b      	add	fp, r3
 801e75e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e760:	441d      	add	r5, r3
 801e762:	9b06      	ldr	r3, [sp, #24]
 801e764:	3b01      	subs	r3, #1
 801e766:	9306      	str	r3, [sp, #24]
 801e768:	9b07      	ldr	r3, [sp, #28]
 801e76a:	3302      	adds	r3, #2
 801e76c:	9307      	str	r3, [sp, #28]
 801e76e:	e744      	b.n	801e5fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e770:	d023      	beq.n	801e7ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 801e772:	9b06      	ldr	r3, [sp, #24]
 801e774:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801e776:	3b01      	subs	r3, #1
 801e778:	fb00 b003 	mla	r0, r0, r3, fp
 801e77c:	1400      	asrs	r0, r0, #16
 801e77e:	f53f af58 	bmi.w	801e632 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801e782:	3901      	subs	r1, #1
 801e784:	4288      	cmp	r0, r1
 801e786:	f6bf af54 	bge.w	801e632 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801e78a:	9924      	ldr	r1, [sp, #144]	; 0x90
 801e78c:	fb01 5303 	mla	r3, r1, r3, r5
 801e790:	141b      	asrs	r3, r3, #16
 801e792:	f53f af4e 	bmi.w	801e632 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801e796:	3a01      	subs	r2, #1
 801e798:	4293      	cmp	r3, r2
 801e79a:	f6bf af4a 	bge.w	801e632 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801e79e:	9b06      	ldr	r3, [sp, #24]
 801e7a0:	9309      	str	r3, [sp, #36]	; 0x24
 801e7a2:	9b07      	ldr	r3, [sp, #28]
 801e7a4:	930b      	str	r3, [sp, #44]	; 0x2c
 801e7a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e7a8:	2b00      	cmp	r3, #0
 801e7aa:	dc70      	bgt.n	801e88e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e7ac:	9b06      	ldr	r3, [sp, #24]
 801e7ae:	9a07      	ldr	r2, [sp, #28]
 801e7b0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e7b4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e7b8:	9307      	str	r3, [sp, #28]
 801e7ba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e7bc:	2b00      	cmp	r3, #0
 801e7be:	f340 80eb 	ble.w	801e998 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 801e7c2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801e7c6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e7ca:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801e7ce:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e7d0:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801e7d4:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801e7d8:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801e7dc:	eef0 6a48 	vmov.f32	s13, s16
 801e7e0:	ee69 7a27 	vmul.f32	s15, s18, s15
 801e7e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e7e8:	ee37 8a48 	vsub.f32	s16, s14, s16
 801e7ec:	ee16 ba90 	vmov	fp, s13
 801e7f0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801e7f4:	eef0 6a68 	vmov.f32	s13, s17
 801e7f8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801e7fc:	ee18 2a10 	vmov	r2, s16
 801e800:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801e804:	fb92 f3f3 	sdiv	r3, r2, r3
 801e808:	ee18 2a90 	vmov	r2, s17
 801e80c:	9323      	str	r3, [sp, #140]	; 0x8c
 801e80e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e810:	fb92 f3f3 	sdiv	r3, r2, r3
 801e814:	9324      	str	r3, [sp, #144]	; 0x90
 801e816:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e818:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801e81a:	3b01      	subs	r3, #1
 801e81c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e820:	930a      	str	r3, [sp, #40]	; 0x28
 801e822:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e824:	bf08      	it	eq
 801e826:	4613      	moveq	r3, r2
 801e828:	ee16 5a90 	vmov	r5, s13
 801e82c:	9306      	str	r3, [sp, #24]
 801e82e:	eef0 8a67 	vmov.f32	s17, s15
 801e832:	eeb0 8a47 	vmov.f32	s16, s14
 801e836:	e6d2      	b.n	801e5de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801e838:	b149      	cbz	r1, 801e84e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 801e83a:	5cba      	ldrb	r2, [r7, r2]
 801e83c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e840:	4422      	add	r2, r4
 801e842:	4660      	mov	r0, ip
 801e844:	4666      	mov	r6, ip
 801e846:	e734      	b.n	801e6b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 801e848:	4660      	mov	r0, ip
 801e84a:	4662      	mov	r2, ip
 801e84c:	e731      	b.n	801e6b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 801e84e:	4660      	mov	r0, ip
 801e850:	4662      	mov	r2, ip
 801e852:	e7f7      	b.n	801e844 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 801e854:	f110 0c01 	adds.w	ip, r0, #1
 801e858:	f53f af74 	bmi.w	801e744 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801e85c:	4562      	cmp	r2, ip
 801e85e:	f6ff af71 	blt.w	801e744 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801e862:	f116 0c01 	adds.w	ip, r6, #1
 801e866:	f53f af6d 	bmi.w	801e744 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801e86a:	4567      	cmp	r7, ip
 801e86c:	f6ff af6a 	blt.w	801e744 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801e870:	b23f      	sxth	r7, r7
 801e872:	b212      	sxth	r2, r2
 801e874:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801e878:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801e87c:	9200      	str	r2, [sp, #0]
 801e87e:	9701      	str	r7, [sp, #4]
 801e880:	4623      	mov	r3, r4
 801e882:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801e886:	980d      	ldr	r0, [sp, #52]	; 0x34
 801e888:	f7ff fdc2 	bl	801e410 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801e88c:	e75a      	b.n	801e744 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801e88e:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801e890:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801e894:	ea4f 462b 	mov.w	r6, fp, asr #16
 801e898:	1428      	asrs	r0, r5, #16
 801e89a:	fb02 6000 	mla	r0, r2, r0, r6
 801e89e:	9e08      	ldr	r6, [sp, #32]
 801e8a0:	f816 8000 	ldrb.w	r8, [r6, r0]
 801e8a4:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801e8a8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801e8ac:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801e8b0:	1837      	adds	r7, r6, r0
 801e8b2:	eb04 0c08 	add.w	ip, r4, r8
 801e8b6:	2b00      	cmp	r3, #0
 801e8b8:	d060      	beq.n	801e97c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801e8ba:	787e      	ldrb	r6, [r7, #1]
 801e8bc:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801e8c0:	4426      	add	r6, r4
 801e8c2:	2900      	cmp	r1, #0
 801e8c4:	d062      	beq.n	801e98c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 801e8c6:	18b8      	adds	r0, r7, r2
 801e8c8:	5cba      	ldrb	r2, [r7, r2]
 801e8ca:	7840      	ldrb	r0, [r0, #1]
 801e8cc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e8d0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801e8d4:	4422      	add	r2, r4
 801e8d6:	4420      	add	r0, r4
 801e8d8:	b29b      	uxth	r3, r3
 801e8da:	b289      	uxth	r1, r1
 801e8dc:	fb03 f901 	mul.w	r9, r3, r1
 801e8e0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e8e4:	011b      	lsls	r3, r3, #4
 801e8e6:	b289      	uxth	r1, r1
 801e8e8:	78b7      	ldrb	r7, [r6, #2]
 801e8ea:	f89c a002 	ldrb.w	sl, [ip, #2]
 801e8ee:	f89c c001 	ldrb.w	ip, [ip, #1]
 801e8f2:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801e8f6:	eba3 0309 	sub.w	r3, r3, r9
 801e8fa:	b29b      	uxth	r3, r3
 801e8fc:	ebae 0e01 	sub.w	lr, lr, r1
 801e900:	fa1f fe8e 	uxth.w	lr, lr
 801e904:	435f      	muls	r7, r3
 801e906:	fb0e 770a 	mla	r7, lr, sl, r7
 801e90a:	f892 a002 	ldrb.w	sl, [r2, #2]
 801e90e:	fb01 770a 	mla	r7, r1, sl, r7
 801e912:	f890 a002 	ldrb.w	sl, [r0, #2]
 801e916:	fb09 7a0a 	mla	sl, r9, sl, r7
 801e91a:	f814 7008 	ldrb.w	r7, [r4, r8]
 801e91e:	f896 8000 	ldrb.w	r8, [r6]
 801e922:	7876      	ldrb	r6, [r6, #1]
 801e924:	fb03 f808 	mul.w	r8, r3, r8
 801e928:	fb0e 8807 	mla	r8, lr, r7, r8
 801e92c:	7817      	ldrb	r7, [r2, #0]
 801e92e:	fb01 8807 	mla	r8, r1, r7, r8
 801e932:	7807      	ldrb	r7, [r0, #0]
 801e934:	fb09 8707 	mla	r7, r9, r7, r8
 801e938:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801e93c:	4373      	muls	r3, r6
 801e93e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e942:	7856      	ldrb	r6, [r2, #1]
 801e944:	ea47 070a 	orr.w	r7, r7, sl
 801e948:	fb0e 330c 	mla	r3, lr, ip, r3
 801e94c:	f890 a001 	ldrb.w	sl, [r0, #1]
 801e950:	fb01 3306 	mla	r3, r1, r6, r3
 801e954:	fb09 3a0a 	mla	sl, r9, sl, r3
 801e958:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e95c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e95e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e962:	ea47 070a 	orr.w	r7, r7, sl
 801e966:	f823 7b02 	strh.w	r7, [r3], #2
 801e96a:	930b      	str	r3, [sp, #44]	; 0x2c
 801e96c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801e96e:	449b      	add	fp, r3
 801e970:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e972:	441d      	add	r5, r3
 801e974:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e976:	3b01      	subs	r3, #1
 801e978:	9309      	str	r3, [sp, #36]	; 0x24
 801e97a:	e714      	b.n	801e7a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 801e97c:	b149      	cbz	r1, 801e992 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 801e97e:	5cba      	ldrb	r2, [r7, r2]
 801e980:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801e984:	4422      	add	r2, r4
 801e986:	4660      	mov	r0, ip
 801e988:	4666      	mov	r6, ip
 801e98a:	e7a5      	b.n	801e8d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e98c:	4660      	mov	r0, ip
 801e98e:	4662      	mov	r2, ip
 801e990:	e7a2      	b.n	801e8d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e992:	4660      	mov	r0, ip
 801e994:	4662      	mov	r2, ip
 801e996:	e7f7      	b.n	801e988 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 801e998:	b00f      	add	sp, #60	; 0x3c
 801e99a:	ecbd 8b08 	vpop	{d8-d11}
 801e99e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801e9a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801e9a4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e9a8:	e9dd 540e 	ldrd	r5, r4, [sp, #56]	; 0x38
 801e9ac:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801e9b0:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801e9b4:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801e9b8:	f89d 7044 	ldrb.w	r7, [sp, #68]	; 0x44
 801e9bc:	fb04 560c 	mla	r6, r4, ip, r5
 801e9c0:	2c00      	cmp	r4, #0
 801e9c2:	eb02 0e06 	add.w	lr, r2, r6
 801e9c6:	db3d      	blt.n	801ea44 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 801e9c8:	45a0      	cmp	r8, r4
 801e9ca:	dd3b      	ble.n	801ea44 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 801e9cc:	2d00      	cmp	r5, #0
 801e9ce:	db37      	blt.n	801ea40 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 801e9d0:	45ac      	cmp	ip, r5
 801e9d2:	dd35      	ble.n	801ea40 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 801e9d4:	5d92      	ldrb	r2, [r2, r6]
 801e9d6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801e9da:	1c6e      	adds	r6, r5, #1
 801e9dc:	d435      	bmi.n	801ea4a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 801e9de:	45b4      	cmp	ip, r6
 801e9e0:	dd33      	ble.n	801ea4a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 801e9e2:	b3a0      	cbz	r0, 801ea4e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xaa>
 801e9e4:	f89e 6001 	ldrb.w	r6, [lr, #1]
 801e9e8:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 801e9ec:	3401      	adds	r4, #1
 801e9ee:	d432      	bmi.n	801ea56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 801e9f0:	45a0      	cmp	r8, r4
 801e9f2:	dd30      	ble.n	801ea56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 801e9f4:	b397      	cbz	r7, 801ea5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb8>
 801e9f6:	2d00      	cmp	r5, #0
 801e9f8:	db2b      	blt.n	801ea52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 801e9fa:	45ac      	cmp	ip, r5
 801e9fc:	dd29      	ble.n	801ea52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 801e9fe:	f81e 400c 	ldrb.w	r4, [lr, ip]
 801ea02:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 801ea06:	3501      	adds	r5, #1
 801ea08:	d42b      	bmi.n	801ea62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 801ea0a:	45ac      	cmp	ip, r5
 801ea0c:	dd29      	ble.n	801ea62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 801ea0e:	b350      	cbz	r0, 801ea66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 801ea10:	44f4      	add	ip, lr
 801ea12:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801ea16:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 801ea1a:	280f      	cmp	r0, #15
 801ea1c:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801ea20:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801ea24:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801ea28:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801ea2c:	d801      	bhi.n	801ea32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x8e>
 801ea2e:	2f0f      	cmp	r7, #15
 801ea30:	d91b      	bls.n	801ea6a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc6>
 801ea32:	4b8d      	ldr	r3, [pc, #564]	; (801ec68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 801ea34:	4a8d      	ldr	r2, [pc, #564]	; (801ec6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 801ea36:	488e      	ldr	r0, [pc, #568]	; (801ec70 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 801ea38:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 801ea3c:	f005 fcfc 	bl	8024438 <__assert_func>
 801ea40:	2200      	movs	r2, #0
 801ea42:	e7ca      	b.n	801e9da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x36>
 801ea44:	2600      	movs	r6, #0
 801ea46:	4632      	mov	r2, r6
 801ea48:	e7d0      	b.n	801e9ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 801ea4a:	2600      	movs	r6, #0
 801ea4c:	e7ce      	b.n	801e9ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 801ea4e:	4606      	mov	r6, r0
 801ea50:	e7cc      	b.n	801e9ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 801ea52:	2400      	movs	r4, #0
 801ea54:	e7d7      	b.n	801ea06 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x62>
 801ea56:	2300      	movs	r3, #0
 801ea58:	461c      	mov	r4, r3
 801ea5a:	e7de      	b.n	801ea1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 801ea5c:	463b      	mov	r3, r7
 801ea5e:	463c      	mov	r4, r7
 801ea60:	e7db      	b.n	801ea1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 801ea62:	2300      	movs	r3, #0
 801ea64:	e7d9      	b.n	801ea1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 801ea66:	4603      	mov	r3, r0
 801ea68:	e7d7      	b.n	801ea1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 801ea6a:	b280      	uxth	r0, r0
 801ea6c:	b2bf      	uxth	r7, r7
 801ea6e:	fb07 fe00 	mul.w	lr, r7, r0
 801ea72:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801ea76:	0100      	lsls	r0, r0, #4
 801ea78:	eba0 0c0e 	sub.w	ip, r0, lr
 801ea7c:	b2bf      	uxth	r7, r7
 801ea7e:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801ea82:	fa1f fc8c 	uxth.w	ip, ip
 801ea86:	1bed      	subs	r5, r5, r7
 801ea88:	b2ad      	uxth	r5, r5
 801ea8a:	fb0a f00c 	mul.w	r0, sl, ip
 801ea8e:	fb0b 0005 	mla	r0, fp, r5, r0
 801ea92:	fb07 0009 	mla	r0, r7, r9, r0
 801ea96:	fb0e 0008 	mla	r0, lr, r8, r0
 801ea9a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801ea9e:	9001      	str	r0, [sp, #4]
 801eaa0:	2800      	cmp	r0, #0
 801eaa2:	f000 80de 	beq.w	801ec62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2be>
 801eaa6:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801eaaa:	d018      	beq.n	801eade <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x13a>
 801eaac:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801eab0:	fb0b f000 	mul.w	r0, fp, r0
 801eab4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801eab8:	fb0b fb02 	mul.w	fp, fp, r2
 801eabc:	0a02      	lsrs	r2, r0, #8
 801eabe:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801eac2:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801eac6:	4402      	add	r2, r0
 801eac8:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801eacc:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801ead0:	0a12      	lsrs	r2, r2, #8
 801ead2:	0a00      	lsrs	r0, r0, #8
 801ead4:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ead8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801eadc:	4302      	orrs	r2, r0
 801eade:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801eae2:	d01a      	beq.n	801eb1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x176>
 801eae4:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 801eae8:	fb0a f000 	mul.w	r0, sl, r0
 801eaec:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801eaf0:	fb0a fa06 	mul.w	sl, sl, r6
 801eaf4:	0a06      	lsrs	r6, r0, #8
 801eaf6:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801eafa:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801eafe:	4406      	add	r6, r0
 801eb00:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801eb04:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 801eb08:	0a36      	lsrs	r6, r6, #8
 801eb0a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eb0e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801eb12:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801eb16:	ea46 060a 	orr.w	r6, r6, sl
 801eb1a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801eb1e:	d01b      	beq.n	801eb58 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1b4>
 801eb20:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801eb24:	fb09 fa0a 	mul.w	sl, r9, sl
 801eb28:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801eb2c:	fb09 f004 	mul.w	r0, r9, r4
 801eb30:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801eb34:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801eb38:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801eb3c:	f500 7980 	add.w	r9, r0, #256	; 0x100
 801eb40:	4454      	add	r4, sl
 801eb42:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 801eb46:	0a24      	lsrs	r4, r4, #8
 801eb48:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801eb4c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801eb50:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801eb54:	ea44 0409 	orr.w	r4, r4, r9
 801eb58:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801eb5c:	d01b      	beq.n	801eb96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1f2>
 801eb5e:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801eb62:	fb08 f909 	mul.w	r9, r8, r9
 801eb66:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801eb6a:	fb08 f003 	mul.w	r0, r8, r3
 801eb6e:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801eb72:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801eb76:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801eb7a:	f500 7880 	add.w	r8, r0, #256	; 0x100
 801eb7e:	444b      	add	r3, r9
 801eb80:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 801eb84:	0a1b      	lsrs	r3, r3, #8
 801eb86:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801eb8a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801eb8e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801eb92:	ea43 0308 	orr.w	r3, r3, r8
 801eb96:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801eb9a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801eb9e:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 801eba2:	fb0c f808 	mul.w	r8, ip, r8
 801eba6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ebaa:	fb0c f606 	mul.w	r6, ip, r6
 801ebae:	fb05 8909 	mla	r9, r5, r9, r8
 801ebb2:	fb05 6502 	mla	r5, r5, r2, r6
 801ebb6:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801ebba:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801ebbe:	9a01      	ldr	r2, [sp, #4]
 801ebc0:	8808      	ldrh	r0, [r1, #0]
 801ebc2:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801ebc6:	fb07 9908 	mla	r9, r7, r8, r9
 801ebca:	fb07 5704 	mla	r7, r7, r4, r5
 801ebce:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 801ebd2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ebd6:	b2b6      	uxth	r6, r6
 801ebd8:	fb0e 9808 	mla	r8, lr, r8, r9
 801ebdc:	fb0e 7e03 	mla	lr, lr, r3, r7
 801ebe0:	4372      	muls	r2, r6
 801ebe2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801ebe6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ebea:	1c53      	adds	r3, r2, #1
 801ebec:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 801ebf0:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801ebf4:	ea48 0e0e 	orr.w	lr, r8, lr
 801ebf8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ebfc:	1205      	asrs	r5, r0, #8
 801ebfe:	ea4f 421e 	mov.w	r2, lr, lsr #16
 801ec02:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801ec06:	b2db      	uxtb	r3, r3
 801ec08:	fb12 f206 	smulbb	r2, r2, r6
 801ec0c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ec10:	fb05 2503 	mla	r5, r5, r3, r2
 801ec14:	f3ce 2407 	ubfx	r4, lr, #8, #8
 801ec18:	10c2      	asrs	r2, r0, #3
 801ec1a:	fa5f fe8e 	uxtb.w	lr, lr
 801ec1e:	00c0      	lsls	r0, r0, #3
 801ec20:	fb14 f406 	smulbb	r4, r4, r6
 801ec24:	b2c0      	uxtb	r0, r0
 801ec26:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ec2a:	fb1e fe06 	smulbb	lr, lr, r6
 801ec2e:	fb02 4203 	mla	r2, r2, r3, r4
 801ec32:	b2ad      	uxth	r5, r5
 801ec34:	fb00 e303 	mla	r3, r0, r3, lr
 801ec38:	b298      	uxth	r0, r3
 801ec3a:	b294      	uxth	r4, r2
 801ec3c:	1c6b      	adds	r3, r5, #1
 801ec3e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ec42:	1c62      	adds	r2, r4, #1
 801ec44:	1c43      	adds	r3, r0, #1
 801ec46:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801ec4a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801ec4e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ec52:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ec56:	0952      	lsrs	r2, r2, #5
 801ec58:	432b      	orrs	r3, r5
 801ec5a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ec5e:	4313      	orrs	r3, r2
 801ec60:	800b      	strh	r3, [r1, #0]
 801ec62:	b003      	add	sp, #12
 801ec64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ec68:	0802aeb2 	.word	0x0802aeb2
 801ec6c:	0802b482 	.word	0x0802b482
 801ec70:	0802af36 	.word	0x0802af36

0801ec74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ec74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ec78:	ed2d 8b08 	vpush	{d8-d11}
 801ec7c:	b09f      	sub	sp, #124	; 0x7c
 801ec7e:	eeb0 aa40 	vmov.f32	s20, s0
 801ec82:	921b      	str	r2, [sp, #108]	; 0x6c
 801ec84:	9309      	str	r3, [sp, #36]	; 0x24
 801ec86:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 801ec88:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 801ec8c:	931c      	str	r3, [sp, #112]	; 0x70
 801ec8e:	9119      	str	r1, [sp, #100]	; 0x64
 801ec90:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 801ec94:	901d      	str	r0, [sp, #116]	; 0x74
 801ec96:	6850      	ldr	r0, [r2, #4]
 801ec98:	6812      	ldr	r2, [r2, #0]
 801ec9a:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 801ec9c:	fb00 1303 	mla	r3, r0, r3, r1
 801eca0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801eca4:	930c      	str	r3, [sp, #48]	; 0x30
 801eca6:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801eca8:	681b      	ldr	r3, [r3, #0]
 801ecaa:	9312      	str	r3, [sp, #72]	; 0x48
 801ecac:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801ecae:	685e      	ldr	r6, [r3, #4]
 801ecb0:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801ecb4:	930d      	str	r3, [sp, #52]	; 0x34
 801ecb6:	eef0 9a60 	vmov.f32	s19, s1
 801ecba:	eeb0 9a41 	vmov.f32	s18, s2
 801ecbe:	eeb0 8a62 	vmov.f32	s16, s5
 801ecc2:	eef0 8a43 	vmov.f32	s17, s6
 801ecc6:	eef0 ba44 	vmov.f32	s23, s8
 801ecca:	eeb0 ba64 	vmov.f32	s22, s9
 801ecce:	eef0 aa45 	vmov.f32	s21, s10
 801ecd2:	3604      	adds	r6, #4
 801ecd4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801ecd6:	2b00      	cmp	r3, #0
 801ecd8:	dc03      	bgt.n	801ece2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ecda:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801ecdc:	2b00      	cmp	r3, #0
 801ecde:	f340 8388 	ble.w	801f3f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 801ece2:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801ece4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ece8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ecec:	1e48      	subs	r0, r1, #1
 801ecee:	1e57      	subs	r7, r2, #1
 801ecf0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ecf2:	2b00      	cmp	r3, #0
 801ecf4:	f340 8195 	ble.w	801f022 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801ecf8:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801ecfa:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ecfe:	ea4f 4325 	mov.w	r3, r5, asr #16
 801ed02:	d406      	bmi.n	801ed12 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ed04:	4584      	cmp	ip, r0
 801ed06:	da04      	bge.n	801ed12 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ed08:	2b00      	cmp	r3, #0
 801ed0a:	db02      	blt.n	801ed12 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ed0c:	42bb      	cmp	r3, r7
 801ed0e:	f2c0 8189 	blt.w	801f024 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 801ed12:	f11c 0c01 	adds.w	ip, ip, #1
 801ed16:	f100 8177 	bmi.w	801f008 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801ed1a:	4561      	cmp	r1, ip
 801ed1c:	f2c0 8174 	blt.w	801f008 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801ed20:	3301      	adds	r3, #1
 801ed22:	f100 8171 	bmi.w	801f008 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801ed26:	429a      	cmp	r2, r3
 801ed28:	f2c0 816e 	blt.w	801f008 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801ed2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ed2e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801ed30:	931a      	str	r3, [sp, #104]	; 0x68
 801ed32:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801ed34:	2b00      	cmp	r3, #0
 801ed36:	f340 8193 	ble.w	801f060 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801ed3a:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801ed3c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ed40:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801ed42:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801ed46:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801ed48:	141b      	asrs	r3, r3, #16
 801ed4a:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801ed4e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ed52:	f100 81d6 	bmi.w	801f102 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801ed56:	f100 38ff 	add.w	r8, r0, #4294967295
 801ed5a:	4543      	cmp	r3, r8
 801ed5c:	f280 81d1 	bge.w	801f102 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801ed60:	f1bc 0f00 	cmp.w	ip, #0
 801ed64:	f2c0 81cd 	blt.w	801f102 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801ed68:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ed6c:	45c4      	cmp	ip, r8
 801ed6e:	f280 81c8 	bge.w	801f102 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801ed72:	b200      	sxth	r0, r0
 801ed74:	fb0c 3300 	mla	r3, ip, r0, r3
 801ed78:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ed7a:	eb04 0803 	add.w	r8, r4, r3
 801ed7e:	5ce3      	ldrb	r3, [r4, r3]
 801ed80:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801ed84:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801ed88:	2a00      	cmp	r2, #0
 801ed8a:	f000 81af 	beq.w	801f0ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801ed8e:	f898 c001 	ldrb.w	ip, [r8, #1]
 801ed92:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801ed96:	940e      	str	r4, [sp, #56]	; 0x38
 801ed98:	0e24      	lsrs	r4, r4, #24
 801ed9a:	9415      	str	r4, [sp, #84]	; 0x54
 801ed9c:	b179      	cbz	r1, 801edbe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801ed9e:	eb08 0c00 	add.w	ip, r8, r0
 801eda2:	f818 0000 	ldrb.w	r0, [r8, r0]
 801eda6:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801edaa:	900a      	str	r0, [sp, #40]	; 0x28
 801edac:	0e00      	lsrs	r0, r0, #24
 801edae:	9013      	str	r0, [sp, #76]	; 0x4c
 801edb0:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801edb4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801edb8:	900f      	str	r0, [sp, #60]	; 0x3c
 801edba:	0e00      	lsrs	r0, r0, #24
 801edbc:	9016      	str	r0, [sp, #88]	; 0x58
 801edbe:	b292      	uxth	r2, r2
 801edc0:	b289      	uxth	r1, r1
 801edc2:	fb02 f901 	mul.w	r9, r2, r1
 801edc6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801edca:	0112      	lsls	r2, r2, #4
 801edcc:	eba2 0809 	sub.w	r8, r2, r9
 801edd0:	b289      	uxth	r1, r1
 801edd2:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801edd6:	9815      	ldr	r0, [sp, #84]	; 0x54
 801edd8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801edda:	fa1f f888 	uxth.w	r8, r8
 801edde:	1a52      	subs	r2, r2, r1
 801ede0:	b292      	uxth	r2, r2
 801ede2:	fb08 f000 	mul.w	r0, r8, r0
 801ede6:	fb02 000e 	mla	r0, r2, lr, r0
 801edea:	fb01 0004 	mla	r0, r1, r4, r0
 801edee:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801edf0:	fb09 0004 	mla	r0, r9, r4, r0
 801edf4:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801edf8:	2800      	cmp	r0, #0
 801edfa:	f000 80fa 	beq.w	801eff2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801edfe:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801ee02:	d01b      	beq.n	801ee3c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801ee04:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801ee08:	fb0e fa0a 	mul.w	sl, lr, sl
 801ee0c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ee10:	fb0e fe03 	mul.w	lr, lr, r3
 801ee14:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ee18:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ee1c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ee20:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801ee24:	4453      	add	r3, sl
 801ee26:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ee2a:	0a1b      	lsrs	r3, r3, #8
 801ee2c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ee30:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ee34:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ee38:	ea43 030c 	orr.w	r3, r3, ip
 801ee3c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ee3e:	2cff      	cmp	r4, #255	; 0xff
 801ee40:	d021      	beq.n	801ee86 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801ee42:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ee44:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ee48:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ee4a:	fb04 fb0b 	mul.w	fp, r4, fp
 801ee4e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ee50:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ee54:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ee56:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ee5a:	fb04 fa0a 	mul.w	sl, r4, sl
 801ee5e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ee62:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ee66:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ee6a:	44de      	add	lr, fp
 801ee6c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ee70:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ee74:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ee78:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ee7c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ee80:	ea4e 040a 	orr.w	r4, lr, sl
 801ee84:	940e      	str	r4, [sp, #56]	; 0x38
 801ee86:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ee88:	2cff      	cmp	r4, #255	; 0xff
 801ee8a:	d021      	beq.n	801eed0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 801ee8c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ee8e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ee92:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ee94:	fb04 fb0b 	mul.w	fp, r4, fp
 801ee98:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ee9a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ee9e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801eea0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801eea4:	fb04 fa0a 	mul.w	sl, r4, sl
 801eea8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801eeac:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801eeb0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801eeb4:	44de      	add	lr, fp
 801eeb6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801eeba:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801eebe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eec2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801eec6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801eeca:	ea4e 040a 	orr.w	r4, lr, sl
 801eece:	940a      	str	r4, [sp, #40]	; 0x28
 801eed0:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801eed2:	2cff      	cmp	r4, #255	; 0xff
 801eed4:	d021      	beq.n	801ef1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801eed6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801eed8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801eedc:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801eede:	fb04 fb0b 	mul.w	fp, r4, fp
 801eee2:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801eee4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801eee8:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801eeea:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801eeee:	fb04 fa0a 	mul.w	sl, r4, sl
 801eef2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801eef6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801eefa:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801eefe:	44de      	add	lr, fp
 801ef00:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ef04:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ef08:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ef0c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ef10:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ef14:	ea4e 040a 	orr.w	r4, lr, sl
 801ef18:	940f      	str	r4, [sp, #60]	; 0x3c
 801ef1a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ef1c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ef20:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ef22:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801ef26:	fb08 fc0c 	mul.w	ip, r8, ip
 801ef2a:	fb02 cc0e 	mla	ip, r2, lr, ip
 801ef2e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801ef32:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801ef34:	fb01 cc0e 	mla	ip, r1, lr, ip
 801ef38:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801ef3c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ef3e:	fb09 cc0e 	mla	ip, r9, lr, ip
 801ef42:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801ef46:	fb08 f80e 	mul.w	r8, r8, lr
 801ef4a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ef4e:	fb02 8303 	mla	r3, r2, r3, r8
 801ef52:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ef54:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ef56:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801ef5a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ef5c:	fb01 330a 	mla	r3, r1, sl, r3
 801ef60:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801ef64:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801ef66:	fb09 3901 	mla	r9, r9, r1, r3
 801ef6a:	4342      	muls	r2, r0
 801ef6c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ef70:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ef74:	883b      	ldrh	r3, [r7, #0]
 801ef76:	1c50      	adds	r0, r2, #1
 801ef78:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ef7c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801ef80:	ea4c 0c09 	orr.w	ip, ip, r9
 801ef84:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801ef88:	1219      	asrs	r1, r3, #8
 801ef8a:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801ef8e:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801ef92:	b2c0      	uxtb	r0, r0
 801ef94:	fb12 f204 	smulbb	r2, r2, r4
 801ef98:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ef9c:	fb01 2100 	mla	r1, r1, r0, r2
 801efa0:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801efa4:	10da      	asrs	r2, r3, #3
 801efa6:	fa5f fc8c 	uxtb.w	ip, ip
 801efaa:	00db      	lsls	r3, r3, #3
 801efac:	fb1c fc04 	smulbb	ip, ip, r4
 801efb0:	b2db      	uxtb	r3, r3
 801efb2:	b289      	uxth	r1, r1
 801efb4:	fb03 c300 	mla	r3, r3, r0, ip
 801efb8:	fa1f fc83 	uxth.w	ip, r3
 801efbc:	1c4b      	adds	r3, r1, #1
 801efbe:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801efc2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801efc6:	fb1e fe04 	smulbb	lr, lr, r4
 801efca:	f10c 0301 	add.w	r3, ip, #1
 801efce:	fb02 e200 	mla	r2, r2, r0, lr
 801efd2:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801efd6:	b292      	uxth	r2, r2
 801efd8:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801efdc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801efe0:	430b      	orrs	r3, r1
 801efe2:	1c51      	adds	r1, r2, #1
 801efe4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801efe8:	0952      	lsrs	r2, r2, #5
 801efea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801efee:	4313      	orrs	r3, r2
 801eff0:	803b      	strh	r3, [r7, #0]
 801eff2:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801eff4:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801eff6:	441a      	add	r2, r3
 801eff8:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801effa:	9231      	str	r2, [sp, #196]	; 0xc4
 801effc:	441d      	add	r5, r3
 801effe:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801f000:	3b01      	subs	r3, #1
 801f002:	3702      	adds	r7, #2
 801f004:	931a      	str	r3, [sp, #104]	; 0x68
 801f006:	e694      	b.n	801ed32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 801f008:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801f00a:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801f00c:	441c      	add	r4, r3
 801f00e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801f010:	9431      	str	r4, [sp, #196]	; 0xc4
 801f012:	441d      	add	r5, r3
 801f014:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f016:	3b01      	subs	r3, #1
 801f018:	9309      	str	r3, [sp, #36]	; 0x24
 801f01a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f01c:	3302      	adds	r3, #2
 801f01e:	930c      	str	r3, [sp, #48]	; 0x30
 801f020:	e666      	b.n	801ecf0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801f022:	d024      	beq.n	801f06e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fa>
 801f024:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f026:	9833      	ldr	r0, [sp, #204]	; 0xcc
 801f028:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801f02a:	3b01      	subs	r3, #1
 801f02c:	fb00 4003 	mla	r0, r0, r3, r4
 801f030:	1400      	asrs	r0, r0, #16
 801f032:	f53f ae7b 	bmi.w	801ed2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801f036:	3901      	subs	r1, #1
 801f038:	4288      	cmp	r0, r1
 801f03a:	f6bf ae77 	bge.w	801ed2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801f03e:	9934      	ldr	r1, [sp, #208]	; 0xd0
 801f040:	fb01 5303 	mla	r3, r1, r3, r5
 801f044:	141b      	asrs	r3, r3, #16
 801f046:	f53f ae71 	bmi.w	801ed2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801f04a:	3a01      	subs	r2, #1
 801f04c:	4293      	cmp	r3, r2
 801f04e:	f6bf ae6d 	bge.w	801ed2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801f052:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801f056:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801f05a:	f1bb 0f00 	cmp.w	fp, #0
 801f05e:	dc70      	bgt.n	801f142 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 801f060:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f062:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801f066:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f068:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801f06c:	930c      	str	r3, [sp, #48]	; 0x30
 801f06e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801f070:	2b00      	cmp	r3, #0
 801f072:	f340 81be 	ble.w	801f3f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 801f076:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801f07a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f07e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801f082:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801f084:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801f088:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801f08c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801f090:	eef0 6a48 	vmov.f32	s13, s16
 801f094:	ee69 7a27 	vmul.f32	s15, s18, s15
 801f098:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f09c:	ee37 8a48 	vsub.f32	s16, s14, s16
 801f0a0:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 801f0a4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801f0a8:	eef0 6a68 	vmov.f32	s13, s17
 801f0ac:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801f0b0:	ee18 2a10 	vmov	r2, s16
 801f0b4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801f0b8:	fb92 f3f3 	sdiv	r3, r2, r3
 801f0bc:	ee18 2a90 	vmov	r2, s17
 801f0c0:	9333      	str	r3, [sp, #204]	; 0xcc
 801f0c2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801f0c4:	fb92 f3f3 	sdiv	r3, r2, r3
 801f0c8:	9334      	str	r3, [sp, #208]	; 0xd0
 801f0ca:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801f0cc:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801f0ce:	3b01      	subs	r3, #1
 801f0d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f0d4:	9319      	str	r3, [sp, #100]	; 0x64
 801f0d6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801f0d8:	bf08      	it	eq
 801f0da:	4613      	moveq	r3, r2
 801f0dc:	ee16 5a90 	vmov	r5, s13
 801f0e0:	9309      	str	r3, [sp, #36]	; 0x24
 801f0e2:	eef0 8a67 	vmov.f32	s17, s15
 801f0e6:	eeb0 8a47 	vmov.f32	s16, s14
 801f0ea:	e5f3      	b.n	801ecd4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801f0ec:	2900      	cmp	r1, #0
 801f0ee:	f43f ae66 	beq.w	801edbe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801f0f2:	f818 0000 	ldrb.w	r0, [r8, r0]
 801f0f6:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801f0fa:	900a      	str	r0, [sp, #40]	; 0x28
 801f0fc:	0e00      	lsrs	r0, r0, #24
 801f0fe:	9013      	str	r0, [sp, #76]	; 0x4c
 801f100:	e65d      	b.n	801edbe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801f102:	f113 0801 	adds.w	r8, r3, #1
 801f106:	f53f af74 	bmi.w	801eff2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801f10a:	4540      	cmp	r0, r8
 801f10c:	f6ff af71 	blt.w	801eff2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801f110:	f11c 0801 	adds.w	r8, ip, #1
 801f114:	f53f af6d 	bmi.w	801eff2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801f118:	45c6      	cmp	lr, r8
 801f11a:	f6ff af6a 	blt.w	801eff2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801f11e:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801f120:	9302      	str	r3, [sp, #8]
 801f122:	b200      	sxth	r0, r0
 801f124:	fa0f f38e 	sxth.w	r3, lr
 801f128:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801f12c:	e9cd c203 	strd	ip, r2, [sp, #12]
 801f130:	9301      	str	r3, [sp, #4]
 801f132:	9000      	str	r0, [sp, #0]
 801f134:	4633      	mov	r3, r6
 801f136:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801f138:	981d      	ldr	r0, [sp, #116]	; 0x74
 801f13a:	4639      	mov	r1, r7
 801f13c:	f7ff fc32 	bl	801e9a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801f140:	e757      	b.n	801eff2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801f142:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801f144:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801f146:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801f14a:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801f14c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f150:	1427      	asrs	r7, r4, #16
 801f152:	142b      	asrs	r3, r5, #16
 801f154:	fb01 7303 	mla	r3, r1, r3, r7
 801f158:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f15a:	18e7      	adds	r7, r4, r3
 801f15c:	5ce3      	ldrb	r3, [r4, r3]
 801f15e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801f162:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801f166:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801f16a:	2a00      	cmp	r2, #0
 801f16c:	f000 8137 	beq.w	801f3de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 801f170:	f897 e001 	ldrb.w	lr, [r7, #1]
 801f174:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801f178:	9410      	str	r4, [sp, #64]	; 0x40
 801f17a:	0e24      	lsrs	r4, r4, #24
 801f17c:	9417      	str	r4, [sp, #92]	; 0x5c
 801f17e:	b170      	cbz	r0, 801f19e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 801f180:	eb07 0e01 	add.w	lr, r7, r1
 801f184:	5c79      	ldrb	r1, [r7, r1]
 801f186:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f18a:	910b      	str	r1, [sp, #44]	; 0x2c
 801f18c:	0e09      	lsrs	r1, r1, #24
 801f18e:	9114      	str	r1, [sp, #80]	; 0x50
 801f190:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801f194:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f198:	9111      	str	r1, [sp, #68]	; 0x44
 801f19a:	0e09      	lsrs	r1, r1, #24
 801f19c:	9118      	str	r1, [sp, #96]	; 0x60
 801f19e:	b292      	uxth	r2, r2
 801f1a0:	b280      	uxth	r0, r0
 801f1a2:	fb02 f800 	mul.w	r8, r2, r0
 801f1a6:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801f1aa:	0112      	lsls	r2, r2, #4
 801f1ac:	eba2 0e08 	sub.w	lr, r2, r8
 801f1b0:	b280      	uxth	r0, r0
 801f1b2:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801f1b6:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801f1b8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801f1ba:	fa1f fe8e 	uxth.w	lr, lr
 801f1be:	1a12      	subs	r2, r2, r0
 801f1c0:	b292      	uxth	r2, r2
 801f1c2:	fb0e f101 	mul.w	r1, lr, r1
 801f1c6:	fb02 110c 	mla	r1, r2, ip, r1
 801f1ca:	fb00 1104 	mla	r1, r0, r4, r1
 801f1ce:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801f1d0:	fb08 1104 	mla	r1, r8, r4, r1
 801f1d4:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801f1d8:	2900      	cmp	r1, #0
 801f1da:	f000 80f5 	beq.w	801f3c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 801f1de:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801f1e2:	d019      	beq.n	801f218 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801f1e4:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801f1e8:	fb0c fa0a 	mul.w	sl, ip, sl
 801f1ec:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f1f0:	fb0c fc03 	mul.w	ip, ip, r3
 801f1f4:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f1f8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f1fc:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801f200:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801f204:	4453      	add	r3, sl
 801f206:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f20a:	0a1b      	lsrs	r3, r3, #8
 801f20c:	0a3f      	lsrs	r7, r7, #8
 801f20e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f212:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801f216:	433b      	orrs	r3, r7
 801f218:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801f21a:	2cff      	cmp	r4, #255	; 0xff
 801f21c:	d020      	beq.n	801f260 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801f21e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f220:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801f224:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801f226:	4367      	muls	r7, r4
 801f228:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f22a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f22e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801f230:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f234:	fb04 fa0a 	mul.w	sl, r4, sl
 801f238:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f23c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f240:	44bc      	add	ip, r7
 801f242:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f246:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f24a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f24e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f252:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f256:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f25a:	ea4c 040a 	orr.w	r4, ip, sl
 801f25e:	9410      	str	r4, [sp, #64]	; 0x40
 801f260:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801f262:	2cff      	cmp	r4, #255	; 0xff
 801f264:	d020      	beq.n	801f2a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801f266:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f268:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801f26c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801f26e:	4367      	muls	r7, r4
 801f270:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f272:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f276:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801f278:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f27c:	fb04 fa0a 	mul.w	sl, r4, sl
 801f280:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f284:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f288:	44bc      	add	ip, r7
 801f28a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f28e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f292:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f296:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f29a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f29e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f2a2:	ea4c 040a 	orr.w	r4, ip, sl
 801f2a6:	940b      	str	r4, [sp, #44]	; 0x2c
 801f2a8:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801f2aa:	2cff      	cmp	r4, #255	; 0xff
 801f2ac:	d020      	beq.n	801f2f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x67c>
 801f2ae:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801f2b0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801f2b4:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801f2b6:	4367      	muls	r7, r4
 801f2b8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801f2ba:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f2be:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801f2c0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f2c4:	fb04 fa0a 	mul.w	sl, r4, sl
 801f2c8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f2cc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f2d0:	44bc      	add	ip, r7
 801f2d2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f2d6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f2da:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f2de:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f2e2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f2e6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f2ea:	ea4c 040a 	orr.w	r4, ip, sl
 801f2ee:	9411      	str	r4, [sp, #68]	; 0x44
 801f2f0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f2f2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801f2f6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f2f8:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801f2fc:	fb0e f707 	mul.w	r7, lr, r7
 801f300:	fb02 770c 	mla	r7, r2, ip, r7
 801f304:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801f308:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801f30a:	fb00 770c 	mla	r7, r0, ip, r7
 801f30e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801f312:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f314:	fb08 770c 	mla	r7, r8, ip, r7
 801f318:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801f31c:	fb0e fe0c 	mul.w	lr, lr, ip
 801f320:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f324:	fb02 e303 	mla	r3, r2, r3, lr
 801f328:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f32a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801f32c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801f330:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801f332:	fb00 330a 	mla	r3, r0, sl, r3
 801f336:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801f33a:	fb08 3c0c 	mla	ip, r8, ip, r3
 801f33e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f340:	f8b9 0000 	ldrh.w	r0, [r9]
 801f344:	434b      	muls	r3, r1
 801f346:	0a3f      	lsrs	r7, r7, #8
 801f348:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f34c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801f350:	1c59      	adds	r1, r3, #1
 801f352:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801f356:	ea47 070c 	orr.w	r7, r7, ip
 801f35a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801f35e:	1202      	asrs	r2, r0, #8
 801f360:	0c3b      	lsrs	r3, r7, #16
 801f362:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801f366:	b2c9      	uxtb	r1, r1
 801f368:	fb13 f304 	smulbb	r3, r3, r4
 801f36c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f370:	fb02 3201 	mla	r2, r2, r1, r3
 801f374:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801f378:	10c3      	asrs	r3, r0, #3
 801f37a:	b2ff      	uxtb	r7, r7
 801f37c:	00c0      	lsls	r0, r0, #3
 801f37e:	b292      	uxth	r2, r2
 801f380:	fb1c fc04 	smulbb	ip, ip, r4
 801f384:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801f388:	b2c0      	uxtb	r0, r0
 801f38a:	fb17 f704 	smulbb	r7, r7, r4
 801f38e:	fb03 c301 	mla	r3, r3, r1, ip
 801f392:	fb00 7001 	mla	r0, r0, r1, r7
 801f396:	f102 0c01 	add.w	ip, r2, #1
 801f39a:	b280      	uxth	r0, r0
 801f39c:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801f3a0:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801f3a4:	1c42      	adds	r2, r0, #1
 801f3a6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801f3aa:	b29b      	uxth	r3, r3
 801f3ac:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f3b0:	ea42 020c 	orr.w	r2, r2, ip
 801f3b4:	f103 0c01 	add.w	ip, r3, #1
 801f3b8:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801f3bc:	095b      	lsrs	r3, r3, #5
 801f3be:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f3c2:	431a      	orrs	r2, r3
 801f3c4:	f8a9 2000 	strh.w	r2, [r9]
 801f3c8:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801f3ca:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801f3cc:	441a      	add	r2, r3
 801f3ce:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801f3d0:	9231      	str	r2, [sp, #196]	; 0xc4
 801f3d2:	f109 0902 	add.w	r9, r9, #2
 801f3d6:	441d      	add	r5, r3
 801f3d8:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f3dc:	e63d      	b.n	801f05a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801f3de:	2800      	cmp	r0, #0
 801f3e0:	f43f aedd 	beq.w	801f19e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 801f3e4:	5c79      	ldrb	r1, [r7, r1]
 801f3e6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f3ea:	910b      	str	r1, [sp, #44]	; 0x2c
 801f3ec:	0e09      	lsrs	r1, r1, #24
 801f3ee:	9114      	str	r1, [sp, #80]	; 0x50
 801f3f0:	e6d5      	b.n	801f19e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 801f3f2:	b01f      	add	sp, #124	; 0x7c
 801f3f4:	ecbd 8b08 	vpop	{d8-d11}
 801f3f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f3fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801f3fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f400:	880e      	ldrh	r6, [r1, #0]
 801f402:	b085      	sub	sp, #20
 801f404:	ea4f 2826 	mov.w	r8, r6, asr #8
 801f408:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 801f40c:	4691      	mov	r9, r2
 801f40e:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801f412:	f9bd e03c 	ldrsh.w	lr, [sp, #60]	; 0x3c
 801f416:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801f41a:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 801f41e:	f008 02f8 	and.w	r2, r8, #248	; 0xf8
 801f422:	ea4f 08e6 	mov.w	r8, r6, asr #3
 801f426:	9200      	str	r2, [sp, #0]
 801f428:	00f6      	lsls	r6, r6, #3
 801f42a:	f008 02fc 	and.w	r2, r8, #252	; 0xfc
 801f42e:	9201      	str	r2, [sp, #4]
 801f430:	2c00      	cmp	r4, #0
 801f432:	b2f2      	uxtb	r2, r6
 801f434:	fb04 560c 	mla	r6, r4, ip, r5
 801f438:	9202      	str	r2, [sp, #8]
 801f43a:	eb09 0806 	add.w	r8, r9, r6
 801f43e:	db3f      	blt.n	801f4c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 801f440:	45a6      	cmp	lr, r4
 801f442:	dd3d      	ble.n	801f4c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 801f444:	2d00      	cmp	r5, #0
 801f446:	db39      	blt.n	801f4bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 801f448:	45ac      	cmp	ip, r5
 801f44a:	dd37      	ble.n	801f4bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 801f44c:	f819 2006 	ldrb.w	r2, [r9, r6]
 801f450:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801f454:	1c6e      	adds	r6, r5, #1
 801f456:	d436      	bmi.n	801f4c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 801f458:	45b4      	cmp	ip, r6
 801f45a:	dd34      	ble.n	801f4c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 801f45c:	b3a8      	cbz	r0, 801f4ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xce>
 801f45e:	f898 6001 	ldrb.w	r6, [r8, #1]
 801f462:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 801f466:	3401      	adds	r4, #1
 801f468:	d433      	bmi.n	801f4d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 801f46a:	45a6      	cmp	lr, r4
 801f46c:	dd31      	ble.n	801f4d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 801f46e:	b39f      	cbz	r7, 801f4d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xdc>
 801f470:	2d00      	cmp	r5, #0
 801f472:	eb08 0e0c 	add.w	lr, r8, ip
 801f476:	db2a      	blt.n	801f4ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 801f478:	45ac      	cmp	ip, r5
 801f47a:	dd28      	ble.n	801f4ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 801f47c:	f818 400c 	ldrb.w	r4, [r8, ip]
 801f480:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 801f484:	3501      	adds	r5, #1
 801f486:	d42a      	bmi.n	801f4de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 801f488:	45ac      	cmp	ip, r5
 801f48a:	dd28      	ble.n	801f4de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 801f48c:	b348      	cbz	r0, 801f4e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe6>
 801f48e:	f89e 5001 	ldrb.w	r5, [lr, #1]
 801f492:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 801f496:	280f      	cmp	r0, #15
 801f498:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801f49c:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801f4a0:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801f4a4:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801f4a8:	d801      	bhi.n	801f4ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb2>
 801f4aa:	2f0f      	cmp	r7, #15
 801f4ac:	d91b      	bls.n	801f4e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xea>
 801f4ae:	4b7d      	ldr	r3, [pc, #500]	; (801f6a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 801f4b0:	4a7d      	ldr	r2, [pc, #500]	; (801f6a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 801f4b2:	487e      	ldr	r0, [pc, #504]	; (801f6ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 801f4b4:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 801f4b8:	f004 ffbe 	bl	8024438 <__assert_func>
 801f4bc:	2200      	movs	r2, #0
 801f4be:	e7c9      	b.n	801f454 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 801f4c0:	2600      	movs	r6, #0
 801f4c2:	4632      	mov	r2, r6
 801f4c4:	e7cf      	b.n	801f466 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 801f4c6:	2600      	movs	r6, #0
 801f4c8:	e7cd      	b.n	801f466 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 801f4ca:	4606      	mov	r6, r0
 801f4cc:	e7cb      	b.n	801f466 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 801f4ce:	2400      	movs	r4, #0
 801f4d0:	e7d8      	b.n	801f484 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x88>
 801f4d2:	2300      	movs	r3, #0
 801f4d4:	461c      	mov	r4, r3
 801f4d6:	e7de      	b.n	801f496 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 801f4d8:	463b      	mov	r3, r7
 801f4da:	463c      	mov	r4, r7
 801f4dc:	e7db      	b.n	801f496 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 801f4de:	2300      	movs	r3, #0
 801f4e0:	e7d9      	b.n	801f496 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 801f4e2:	4603      	mov	r3, r0
 801f4e4:	e7d7      	b.n	801f496 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 801f4e6:	b280      	uxth	r0, r0
 801f4e8:	b2bf      	uxth	r7, r7
 801f4ea:	fb00 fe07 	mul.w	lr, r0, r7
 801f4ee:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801f4f2:	0100      	lsls	r0, r0, #4
 801f4f4:	eba0 0c0e 	sub.w	ip, r0, lr
 801f4f8:	b2bf      	uxth	r7, r7
 801f4fa:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801f4fe:	fa1f fc8c 	uxth.w	ip, ip
 801f502:	1bed      	subs	r5, r5, r7
 801f504:	b2ad      	uxth	r5, r5
 801f506:	fb0c f00a 	mul.w	r0, ip, sl
 801f50a:	fb05 000b 	mla	r0, r5, fp, r0
 801f50e:	fb07 0009 	mla	r0, r7, r9, r0
 801f512:	fb0e 0008 	mla	r0, lr, r8, r0
 801f516:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801f51a:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801f51e:	9003      	str	r0, [sp, #12]
 801f520:	d018      	beq.n	801f554 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x158>
 801f522:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801f526:	fb0b f000 	mul.w	r0, fp, r0
 801f52a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801f52e:	fb0b fb02 	mul.w	fp, fp, r2
 801f532:	0a02      	lsrs	r2, r0, #8
 801f534:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801f538:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801f53c:	4402      	add	r2, r0
 801f53e:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801f542:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801f546:	0a12      	lsrs	r2, r2, #8
 801f548:	0a00      	lsrs	r0, r0, #8
 801f54a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801f54e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801f552:	4302      	orrs	r2, r0
 801f554:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801f558:	d019      	beq.n	801f58e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x192>
 801f55a:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801f55e:	fb0a fb0b 	mul.w	fp, sl, fp
 801f562:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801f566:	fb0a fa06 	mul.w	sl, sl, r6
 801f56a:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801f56e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801f572:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f576:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801f57a:	445e      	add	r6, fp
 801f57c:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801f580:	0a36      	lsrs	r6, r6, #8
 801f582:	0a00      	lsrs	r0, r0, #8
 801f584:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801f588:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801f58c:	4306      	orrs	r6, r0
 801f58e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801f592:	d019      	beq.n	801f5c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1cc>
 801f594:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801f598:	fb09 fa0a 	mul.w	sl, r9, sl
 801f59c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801f5a0:	fb09 f904 	mul.w	r9, r9, r4
 801f5a4:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801f5a8:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801f5ac:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801f5b0:	f509 7080 	add.w	r0, r9, #256	; 0x100
 801f5b4:	4454      	add	r4, sl
 801f5b6:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 801f5ba:	0a24      	lsrs	r4, r4, #8
 801f5bc:	0a00      	lsrs	r0, r0, #8
 801f5be:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801f5c2:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801f5c6:	4304      	orrs	r4, r0
 801f5c8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801f5cc:	d019      	beq.n	801f602 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x206>
 801f5ce:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801f5d2:	fb08 f909 	mul.w	r9, r8, r9
 801f5d6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f5da:	fb08 f803 	mul.w	r8, r8, r3
 801f5de:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801f5e2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f5e6:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801f5ea:	f508 7080 	add.w	r0, r8, #256	; 0x100
 801f5ee:	444b      	add	r3, r9
 801f5f0:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801f5f4:	0a1b      	lsrs	r3, r3, #8
 801f5f6:	0a00      	lsrs	r0, r0, #8
 801f5f8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f5fc:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801f600:	4303      	orrs	r3, r0
 801f602:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801f606:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801f60a:	fb0c f808 	mul.w	r8, ip, r8
 801f60e:	fb05 8800 	mla	r8, r5, r0, r8
 801f612:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 801f616:	fb07 8800 	mla	r8, r7, r0, r8
 801f61a:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 801f61e:	fb0e 8000 	mla	r0, lr, r0, r8
 801f622:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801f626:	fb0c f606 	mul.w	r6, ip, r6
 801f62a:	0a00      	lsrs	r0, r0, #8
 801f62c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801f630:	fb05 6202 	mla	r2, r5, r2, r6
 801f634:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 801f638:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 801f63c:	fb07 2700 	mla	r7, r7, r0, r2
 801f640:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801f644:	9b03      	ldr	r3, [sp, #12]
 801f646:	9d00      	ldr	r5, [sp, #0]
 801f648:	9a02      	ldr	r2, [sp, #8]
 801f64a:	fb0e 7000 	mla	r0, lr, r0, r7
 801f64e:	43dc      	mvns	r4, r3
 801f650:	9b01      	ldr	r3, [sp, #4]
 801f652:	b2e4      	uxtb	r4, r4
 801f654:	0a00      	lsrs	r0, r0, #8
 801f656:	4363      	muls	r3, r4
 801f658:	4365      	muls	r5, r4
 801f65a:	4362      	muls	r2, r4
 801f65c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801f660:	ea48 0000 	orr.w	r0, r8, r0
 801f664:	4614      	mov	r4, r2
 801f666:	1c5e      	adds	r6, r3, #1
 801f668:	1c6a      	adds	r2, r5, #1
 801f66a:	eb06 2613 	add.w	r6, r6, r3, lsr #8
 801f66e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801f672:	0a03      	lsrs	r3, r0, #8
 801f674:	0c02      	lsrs	r2, r0, #16
 801f676:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 801f67a:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801f67e:	00db      	lsls	r3, r3, #3
 801f680:	0212      	lsls	r2, r2, #8
 801f682:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801f686:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f68a:	4313      	orrs	r3, r2
 801f68c:	1c62      	adds	r2, r4, #1
 801f68e:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801f692:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 801f696:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801f69a:	4318      	orrs	r0, r3
 801f69c:	8008      	strh	r0, [r1, #0]
 801f69e:	b005      	add	sp, #20
 801f6a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f6a4:	0802aeb2 	.word	0x0802aeb2
 801f6a8:	0802b482 	.word	0x0802b482
 801f6ac:	0802af36 	.word	0x0802af36

0801f6b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f6b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f6b4:	ed2d 8b08 	vpush	{d8-d11}
 801f6b8:	b09b      	sub	sp, #108	; 0x6c
 801f6ba:	eeb0 aa40 	vmov.f32	s20, s0
 801f6be:	9218      	str	r2, [sp, #96]	; 0x60
 801f6c0:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801f6c2:	9116      	str	r1, [sp, #88]	; 0x58
 801f6c4:	9307      	str	r3, [sp, #28]
 801f6c6:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 801f6ca:	9019      	str	r0, [sp, #100]	; 0x64
 801f6cc:	6850      	ldr	r0, [r2, #4]
 801f6ce:	6812      	ldr	r2, [r2, #0]
 801f6d0:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 801f6d2:	fb00 1303 	mla	r3, r0, r3, r1
 801f6d6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f6da:	930a      	str	r3, [sp, #40]	; 0x28
 801f6dc:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801f6de:	681b      	ldr	r3, [r3, #0]
 801f6e0:	930f      	str	r3, [sp, #60]	; 0x3c
 801f6e2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801f6e4:	685e      	ldr	r6, [r3, #4]
 801f6e6:	eef0 9a60 	vmov.f32	s19, s1
 801f6ea:	eeb0 9a41 	vmov.f32	s18, s2
 801f6ee:	eeb0 8a62 	vmov.f32	s16, s5
 801f6f2:	eef0 8a43 	vmov.f32	s17, s6
 801f6f6:	eef0 ba44 	vmov.f32	s23, s8
 801f6fa:	eeb0 ba64 	vmov.f32	s22, s9
 801f6fe:	eef0 aa45 	vmov.f32	s21, s10
 801f702:	3604      	adds	r6, #4
 801f704:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801f706:	2b00      	cmp	r3, #0
 801f708:	dc03      	bgt.n	801f712 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 801f70a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f70c:	2b00      	cmp	r3, #0
 801f70e:	f340 8373 	ble.w	801fdf8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801f712:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801f714:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f718:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f71c:	1e48      	subs	r0, r1, #1
 801f71e:	1e57      	subs	r7, r2, #1
 801f720:	9b07      	ldr	r3, [sp, #28]
 801f722:	2b00      	cmp	r3, #0
 801f724:	f340 8190 	ble.w	801fa48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f728:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801f72a:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801f72e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801f732:	d406      	bmi.n	801f742 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f734:	4584      	cmp	ip, r0
 801f736:	da04      	bge.n	801f742 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f738:	2b00      	cmp	r3, #0
 801f73a:	db02      	blt.n	801f742 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f73c:	42bb      	cmp	r3, r7
 801f73e:	f2c0 8184 	blt.w	801fa4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 801f742:	f11c 0c01 	adds.w	ip, ip, #1
 801f746:	f100 8172 	bmi.w	801fa2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801f74a:	4561      	cmp	r1, ip
 801f74c:	f2c0 816f 	blt.w	801fa2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801f750:	3301      	adds	r3, #1
 801f752:	f100 816c 	bmi.w	801fa2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801f756:	429a      	cmp	r2, r3
 801f758:	f2c0 8169 	blt.w	801fa2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801f75c:	9b07      	ldr	r3, [sp, #28]
 801f75e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801f760:	9317      	str	r3, [sp, #92]	; 0x5c
 801f762:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801f764:	2b00      	cmp	r3, #0
 801f766:	f340 818e 	ble.w	801fa86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801f76a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801f76c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801f770:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801f772:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801f776:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801f778:	141b      	asrs	r3, r3, #16
 801f77a:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801f77e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801f782:	f100 81d1 	bmi.w	801fb28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801f786:	f101 38ff 	add.w	r8, r1, #4294967295
 801f78a:	4543      	cmp	r3, r8
 801f78c:	f280 81cc 	bge.w	801fb28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801f790:	f1bc 0f00 	cmp.w	ip, #0
 801f794:	f2c0 81c8 	blt.w	801fb28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801f798:	f10e 38ff 	add.w	r8, lr, #4294967295
 801f79c:	45c4      	cmp	ip, r8
 801f79e:	f280 81c3 	bge.w	801fb28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801f7a2:	b209      	sxth	r1, r1
 801f7a4:	fb0c 3301 	mla	r3, ip, r1, r3
 801f7a8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801f7aa:	eb04 0803 	add.w	r8, r4, r3
 801f7ae:	5ce3      	ldrb	r3, [r4, r3]
 801f7b0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801f7b4:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801f7b8:	2a00      	cmp	r2, #0
 801f7ba:	f000 81aa 	beq.w	801fb12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 801f7be:	f898 c001 	ldrb.w	ip, [r8, #1]
 801f7c2:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801f7c6:	940b      	str	r4, [sp, #44]	; 0x2c
 801f7c8:	0e24      	lsrs	r4, r4, #24
 801f7ca:	9412      	str	r4, [sp, #72]	; 0x48
 801f7cc:	b178      	cbz	r0, 801f7ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801f7ce:	eb08 0c01 	add.w	ip, r8, r1
 801f7d2:	f818 1001 	ldrb.w	r1, [r8, r1]
 801f7d6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f7da:	9108      	str	r1, [sp, #32]
 801f7dc:	0e09      	lsrs	r1, r1, #24
 801f7de:	9110      	str	r1, [sp, #64]	; 0x40
 801f7e0:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801f7e4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f7e8:	910c      	str	r1, [sp, #48]	; 0x30
 801f7ea:	0e09      	lsrs	r1, r1, #24
 801f7ec:	9113      	str	r1, [sp, #76]	; 0x4c
 801f7ee:	b292      	uxth	r2, r2
 801f7f0:	b280      	uxth	r0, r0
 801f7f2:	fb02 f900 	mul.w	r9, r2, r0
 801f7f6:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801f7fa:	0112      	lsls	r2, r2, #4
 801f7fc:	eba2 0809 	sub.w	r8, r2, r9
 801f800:	b280      	uxth	r0, r0
 801f802:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801f806:	9912      	ldr	r1, [sp, #72]	; 0x48
 801f808:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f80a:	fa1f f888 	uxth.w	r8, r8
 801f80e:	1a12      	subs	r2, r2, r0
 801f810:	b292      	uxth	r2, r2
 801f812:	fb08 f101 	mul.w	r1, r8, r1
 801f816:	fb02 110e 	mla	r1, r2, lr, r1
 801f81a:	fb00 1104 	mla	r1, r0, r4, r1
 801f81e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801f820:	fb09 1104 	mla	r1, r9, r4, r1
 801f824:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801f828:	2900      	cmp	r1, #0
 801f82a:	f000 80f5 	beq.w	801fa18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801f82e:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801f832:	d01b      	beq.n	801f86c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801f834:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801f838:	fb0e fa0a 	mul.w	sl, lr, sl
 801f83c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f840:	fb0e fe03 	mul.w	lr, lr, r3
 801f844:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f848:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f84c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801f850:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801f854:	4453      	add	r3, sl
 801f856:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f85a:	0a1b      	lsrs	r3, r3, #8
 801f85c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f860:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f864:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801f868:	ea43 030c 	orr.w	r3, r3, ip
 801f86c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f86e:	2cff      	cmp	r4, #255	; 0xff
 801f870:	d021      	beq.n	801f8b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801f872:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f874:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801f878:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f87a:	fb04 fb0b 	mul.w	fp, r4, fp
 801f87e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f880:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f884:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f886:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f88a:	fb04 fa0a 	mul.w	sl, r4, sl
 801f88e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f892:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f896:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f89a:	44de      	add	lr, fp
 801f89c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f8a0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f8a4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f8a8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f8ac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f8b0:	ea4e 040a 	orr.w	r4, lr, sl
 801f8b4:	940b      	str	r4, [sp, #44]	; 0x2c
 801f8b6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f8b8:	2cff      	cmp	r4, #255	; 0xff
 801f8ba:	d021      	beq.n	801f900 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801f8bc:	9c08      	ldr	r4, [sp, #32]
 801f8be:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801f8c2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f8c4:	fb04 fb0b 	mul.w	fp, r4, fp
 801f8c8:	9c08      	ldr	r4, [sp, #32]
 801f8ca:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f8ce:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801f8d0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f8d4:	fb04 fa0a 	mul.w	sl, r4, sl
 801f8d8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f8dc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f8e0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f8e4:	44de      	add	lr, fp
 801f8e6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f8ea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f8ee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f8f2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f8f6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f8fa:	ea4e 040a 	orr.w	r4, lr, sl
 801f8fe:	9408      	str	r4, [sp, #32]
 801f900:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801f902:	2cff      	cmp	r4, #255	; 0xff
 801f904:	d021      	beq.n	801f94a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801f906:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801f908:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801f90c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801f90e:	fb04 fb0b 	mul.w	fp, r4, fp
 801f912:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801f914:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801f918:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801f91a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f91e:	fb04 fa0a 	mul.w	sl, r4, sl
 801f922:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f926:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f92a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f92e:	44de      	add	lr, fp
 801f930:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f934:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f938:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f93c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f940:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f944:	ea4e 040a 	orr.w	r4, lr, sl
 801f948:	940c      	str	r4, [sp, #48]	; 0x30
 801f94a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f94c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801f950:	9c08      	ldr	r4, [sp, #32]
 801f952:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801f956:	fb08 fc0c 	mul.w	ip, r8, ip
 801f95a:	fb02 cc0e 	mla	ip, r2, lr, ip
 801f95e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801f962:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801f964:	fb00 cc0e 	mla	ip, r0, lr, ip
 801f968:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801f96c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f96e:	fb09 cc0e 	mla	ip, r9, lr, ip
 801f972:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801f976:	fb08 f80e 	mul.w	r8, r8, lr
 801f97a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f97e:	fb02 8303 	mla	r3, r2, r3, r8
 801f982:	9a08      	ldr	r2, [sp, #32]
 801f984:	f8b7 8000 	ldrh.w	r8, [r7]
 801f988:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801f98c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801f98e:	fb00 330a 	mla	r3, r0, sl, r3
 801f992:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801f996:	fb09 3900 	mla	r9, r9, r0, r3
 801f99a:	43c9      	mvns	r1, r1
 801f99c:	ea4f 2228 	mov.w	r2, r8, asr #8
 801f9a0:	fa5f fe81 	uxtb.w	lr, r1
 801f9a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f9a8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f9ac:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f9b0:	fb02 f20e 	mul.w	r2, r2, lr
 801f9b4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f9b8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801f9bc:	ea4c 0c09 	orr.w	ip, ip, r9
 801f9c0:	1c53      	adds	r3, r2, #1
 801f9c2:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801f9c6:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801f9ca:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801f9ce:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f9d2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f9d6:	4a63      	ldr	r2, [pc, #396]	; (801fb64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>)
 801f9d8:	fb00 f00e 	mul.w	r0, r0, lr
 801f9dc:	b2db      	uxtb	r3, r3
 801f9de:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801f9e2:	1c43      	adds	r3, r0, #1
 801f9e4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f9e8:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801f9ec:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801f9f0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801f9f4:	b2c9      	uxtb	r1, r1
 801f9f6:	00db      	lsls	r3, r3, #3
 801f9f8:	fb01 f10e 	mul.w	r1, r1, lr
 801f9fc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fa00:	4313      	orrs	r3, r2
 801fa02:	1c4a      	adds	r2, r1, #1
 801fa04:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fa08:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801fa0c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801fa10:	ea4c 0c03 	orr.w	ip, ip, r3
 801fa14:	f8a7 c000 	strh.w	ip, [r7]
 801fa18:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801fa1a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801fa1c:	441a      	add	r2, r3
 801fa1e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801fa20:	922d      	str	r2, [sp, #180]	; 0xb4
 801fa22:	441d      	add	r5, r3
 801fa24:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801fa26:	3b01      	subs	r3, #1
 801fa28:	3702      	adds	r7, #2
 801fa2a:	9317      	str	r3, [sp, #92]	; 0x5c
 801fa2c:	e699      	b.n	801f762 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801fa2e:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801fa30:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801fa32:	441c      	add	r4, r3
 801fa34:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801fa36:	942d      	str	r4, [sp, #180]	; 0xb4
 801fa38:	441d      	add	r5, r3
 801fa3a:	9b07      	ldr	r3, [sp, #28]
 801fa3c:	3b01      	subs	r3, #1
 801fa3e:	9307      	str	r3, [sp, #28]
 801fa40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fa42:	3302      	adds	r3, #2
 801fa44:	930a      	str	r3, [sp, #40]	; 0x28
 801fa46:	e66b      	b.n	801f720 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801fa48:	d024      	beq.n	801fa94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801fa4a:	9b07      	ldr	r3, [sp, #28]
 801fa4c:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801fa4e:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801fa50:	3b01      	subs	r3, #1
 801fa52:	fb00 4003 	mla	r0, r0, r3, r4
 801fa56:	1400      	asrs	r0, r0, #16
 801fa58:	f53f ae80 	bmi.w	801f75c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801fa5c:	3901      	subs	r1, #1
 801fa5e:	4288      	cmp	r0, r1
 801fa60:	f6bf ae7c 	bge.w	801f75c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801fa64:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801fa66:	fb01 5303 	mla	r3, r1, r3, r5
 801fa6a:	141b      	asrs	r3, r3, #16
 801fa6c:	f53f ae76 	bmi.w	801f75c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801fa70:	3a01      	subs	r2, #1
 801fa72:	4293      	cmp	r3, r2
 801fa74:	f6bf ae72 	bge.w	801f75c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801fa78:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801fa7c:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801fa80:	f1bb 0f00 	cmp.w	fp, #0
 801fa84:	dc70      	bgt.n	801fb68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 801fa86:	9b07      	ldr	r3, [sp, #28]
 801fa88:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801fa8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fa8e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801fa92:	930a      	str	r3, [sp, #40]	; 0x28
 801fa94:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801fa96:	2b00      	cmp	r3, #0
 801fa98:	f340 81ae 	ble.w	801fdf8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801fa9c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801faa0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801faa4:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801faa8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801faaa:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801faae:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801fab2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801fab6:	eef0 6a48 	vmov.f32	s13, s16
 801faba:	ee69 7a27 	vmul.f32	s15, s18, s15
 801fabe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fac2:	ee37 8a48 	vsub.f32	s16, s14, s16
 801fac6:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 801faca:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801face:	eef0 6a68 	vmov.f32	s13, s17
 801fad2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801fad6:	ee18 2a10 	vmov	r2, s16
 801fada:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801fade:	fb92 f3f3 	sdiv	r3, r2, r3
 801fae2:	ee18 2a90 	vmov	r2, s17
 801fae6:	932f      	str	r3, [sp, #188]	; 0xbc
 801fae8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801faea:	fb92 f3f3 	sdiv	r3, r2, r3
 801faee:	9330      	str	r3, [sp, #192]	; 0xc0
 801faf0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801faf2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801faf4:	3b01      	subs	r3, #1
 801faf6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fafa:	9316      	str	r3, [sp, #88]	; 0x58
 801fafc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801fafe:	bf08      	it	eq
 801fb00:	4613      	moveq	r3, r2
 801fb02:	ee16 5a90 	vmov	r5, s13
 801fb06:	9307      	str	r3, [sp, #28]
 801fb08:	eef0 8a67 	vmov.f32	s17, s15
 801fb0c:	eeb0 8a47 	vmov.f32	s16, s14
 801fb10:	e5f8      	b.n	801f704 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801fb12:	2800      	cmp	r0, #0
 801fb14:	f43f ae6b 	beq.w	801f7ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801fb18:	f818 1001 	ldrb.w	r1, [r8, r1]
 801fb1c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801fb20:	9108      	str	r1, [sp, #32]
 801fb22:	0e09      	lsrs	r1, r1, #24
 801fb24:	9110      	str	r1, [sp, #64]	; 0x40
 801fb26:	e662      	b.n	801f7ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801fb28:	f113 0801 	adds.w	r8, r3, #1
 801fb2c:	f53f af74 	bmi.w	801fa18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801fb30:	4541      	cmp	r1, r8
 801fb32:	f6ff af71 	blt.w	801fa18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801fb36:	f11c 0801 	adds.w	r8, ip, #1
 801fb3a:	f53f af6d 	bmi.w	801fa18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801fb3e:	45c6      	cmp	lr, r8
 801fb40:	f6ff af6a 	blt.w	801fa18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801fb44:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801fb48:	b209      	sxth	r1, r1
 801fb4a:	fa0f f38e 	sxth.w	r3, lr
 801fb4e:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801fb52:	9301      	str	r3, [sp, #4]
 801fb54:	9100      	str	r1, [sp, #0]
 801fb56:	4633      	mov	r3, r6
 801fb58:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801fb5a:	9819      	ldr	r0, [sp, #100]	; 0x64
 801fb5c:	4639      	mov	r1, r7
 801fb5e:	f7ff fc4d 	bl	801f3fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801fb62:	e759      	b.n	801fa18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801fb64:	fffff800 	.word	0xfffff800
 801fb68:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801fb6a:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801fb6c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801fb70:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801fb72:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fb76:	1427      	asrs	r7, r4, #16
 801fb78:	142b      	asrs	r3, r5, #16
 801fb7a:	fb01 7303 	mla	r3, r1, r3, r7
 801fb7e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801fb80:	18e7      	adds	r7, r4, r3
 801fb82:	5ce3      	ldrb	r3, [r4, r3]
 801fb84:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801fb88:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801fb8c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801fb90:	2a00      	cmp	r2, #0
 801fb92:	f000 8127 	beq.w	801fde4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 801fb96:	f897 e001 	ldrb.w	lr, [r7, #1]
 801fb9a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801fb9e:	940d      	str	r4, [sp, #52]	; 0x34
 801fba0:	0e24      	lsrs	r4, r4, #24
 801fba2:	9414      	str	r4, [sp, #80]	; 0x50
 801fba4:	b170      	cbz	r0, 801fbc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 801fba6:	eb07 0e01 	add.w	lr, r7, r1
 801fbaa:	5c79      	ldrb	r1, [r7, r1]
 801fbac:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801fbb0:	9109      	str	r1, [sp, #36]	; 0x24
 801fbb2:	0e09      	lsrs	r1, r1, #24
 801fbb4:	9111      	str	r1, [sp, #68]	; 0x44
 801fbb6:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801fbba:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801fbbe:	910e      	str	r1, [sp, #56]	; 0x38
 801fbc0:	0e09      	lsrs	r1, r1, #24
 801fbc2:	9115      	str	r1, [sp, #84]	; 0x54
 801fbc4:	b292      	uxth	r2, r2
 801fbc6:	b280      	uxth	r0, r0
 801fbc8:	fb02 f800 	mul.w	r8, r2, r0
 801fbcc:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801fbd0:	0112      	lsls	r2, r2, #4
 801fbd2:	eba2 0e08 	sub.w	lr, r2, r8
 801fbd6:	b280      	uxth	r0, r0
 801fbd8:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801fbdc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801fbde:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801fbe0:	fa1f fe8e 	uxth.w	lr, lr
 801fbe4:	1a09      	subs	r1, r1, r0
 801fbe6:	b289      	uxth	r1, r1
 801fbe8:	fb0e f202 	mul.w	r2, lr, r2
 801fbec:	fb01 220c 	mla	r2, r1, ip, r2
 801fbf0:	fb00 2204 	mla	r2, r0, r4, r2
 801fbf4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801fbf6:	fb08 2204 	mla	r2, r8, r4, r2
 801fbfa:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801fbfe:	2a00      	cmp	r2, #0
 801fc00:	f000 80e5 	beq.w	801fdce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801fc04:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801fc08:	d019      	beq.n	801fc3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58e>
 801fc0a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801fc0e:	fb0c fa0a 	mul.w	sl, ip, sl
 801fc12:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801fc16:	fb0c fc03 	mul.w	ip, ip, r3
 801fc1a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801fc1e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801fc22:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801fc26:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801fc2a:	4453      	add	r3, sl
 801fc2c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801fc30:	0a1b      	lsrs	r3, r3, #8
 801fc32:	0a3f      	lsrs	r7, r7, #8
 801fc34:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801fc38:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801fc3c:	433b      	orrs	r3, r7
 801fc3e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801fc40:	2cff      	cmp	r4, #255	; 0xff
 801fc42:	d020      	beq.n	801fc86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d6>
 801fc44:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fc46:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801fc4a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801fc4c:	4367      	muls	r7, r4
 801fc4e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fc50:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fc54:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801fc56:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801fc5a:	fb04 fa0a 	mul.w	sl, r4, sl
 801fc5e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801fc62:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fc66:	44bc      	add	ip, r7
 801fc68:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801fc6c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801fc70:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fc74:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fc78:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fc7c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fc80:	ea4c 040a 	orr.w	r4, ip, sl
 801fc84:	940d      	str	r4, [sp, #52]	; 0x34
 801fc86:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801fc88:	2cff      	cmp	r4, #255	; 0xff
 801fc8a:	d020      	beq.n	801fcce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61e>
 801fc8c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801fc8e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801fc92:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801fc94:	4367      	muls	r7, r4
 801fc96:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801fc98:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fc9c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801fc9e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801fca2:	fb04 fa0a 	mul.w	sl, r4, sl
 801fca6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801fcaa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fcae:	44bc      	add	ip, r7
 801fcb0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801fcb4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801fcb8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fcbc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fcc0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fcc4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fcc8:	ea4c 040a 	orr.w	r4, ip, sl
 801fccc:	9409      	str	r4, [sp, #36]	; 0x24
 801fcce:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801fcd0:	2cff      	cmp	r4, #255	; 0xff
 801fcd2:	d020      	beq.n	801fd16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x666>
 801fcd4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801fcd6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801fcda:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801fcdc:	4367      	muls	r7, r4
 801fcde:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801fce0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801fce4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801fce6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801fcea:	fb04 fa0a 	mul.w	sl, r4, sl
 801fcee:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801fcf2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fcf6:	44bc      	add	ip, r7
 801fcf8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801fcfc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801fd00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fd04:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fd08:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fd0c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fd10:	ea4c 040a 	orr.w	r4, ip, sl
 801fd14:	940e      	str	r4, [sp, #56]	; 0x38
 801fd16:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fd18:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801fd1c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801fd1e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801fd22:	fb0e f707 	mul.w	r7, lr, r7
 801fd26:	fb01 770c 	mla	r7, r1, ip, r7
 801fd2a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801fd2e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801fd30:	fb00 770c 	mla	r7, r0, ip, r7
 801fd34:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801fd38:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fd3a:	fb08 770c 	mla	r7, r8, ip, r7
 801fd3e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801fd42:	fb0e fe0c 	mul.w	lr, lr, ip
 801fd46:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801fd4a:	fb01 e303 	mla	r3, r1, r3, lr
 801fd4e:	9909      	ldr	r1, [sp, #36]	; 0x24
 801fd50:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801fd54:	990e      	ldr	r1, [sp, #56]	; 0x38
 801fd56:	fb00 330a 	mla	r3, r0, sl, r3
 801fd5a:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801fd5e:	fb08 3c0c 	mla	ip, r8, ip, r3
 801fd62:	f8b9 3000 	ldrh.w	r3, [r9]
 801fd66:	43d2      	mvns	r2, r2
 801fd68:	1218      	asrs	r0, r3, #8
 801fd6a:	b2d2      	uxtb	r2, r2
 801fd6c:	10d9      	asrs	r1, r3, #3
 801fd6e:	0a3f      	lsrs	r7, r7, #8
 801fd70:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fd74:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801fd78:	00db      	lsls	r3, r3, #3
 801fd7a:	4350      	muls	r0, r2
 801fd7c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801fd80:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801fd84:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fd88:	b2db      	uxtb	r3, r3
 801fd8a:	ea47 070c 	orr.w	r7, r7, ip
 801fd8e:	4351      	muls	r1, r2
 801fd90:	4353      	muls	r3, r2
 801fd92:	1c42      	adds	r2, r0, #1
 801fd94:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fd98:	0c3a      	lsrs	r2, r7, #16
 801fd9a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fd9e:	4a19      	ldr	r2, [pc, #100]	; (801fe04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>)
 801fda0:	b2c0      	uxtb	r0, r0
 801fda2:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801fda6:	1c4a      	adds	r2, r1, #1
 801fda8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fdac:	0a3a      	lsrs	r2, r7, #8
 801fdae:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fdb2:	00c9      	lsls	r1, r1, #3
 801fdb4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fdb8:	4301      	orrs	r1, r0
 801fdba:	1c58      	adds	r0, r3, #1
 801fdbc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801fdc0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801fdc4:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801fdc8:	4308      	orrs	r0, r1
 801fdca:	f8a9 0000 	strh.w	r0, [r9]
 801fdce:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801fdd0:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801fdd2:	441a      	add	r2, r3
 801fdd4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801fdd6:	922d      	str	r2, [sp, #180]	; 0xb4
 801fdd8:	f109 0902 	add.w	r9, r9, #2
 801fddc:	441d      	add	r5, r3
 801fdde:	f10b 3bff 	add.w	fp, fp, #4294967295
 801fde2:	e64d      	b.n	801fa80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801fde4:	2800      	cmp	r0, #0
 801fde6:	f43f aeed 	beq.w	801fbc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 801fdea:	5c79      	ldrb	r1, [r7, r1]
 801fdec:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801fdf0:	9109      	str	r1, [sp, #36]	; 0x24
 801fdf2:	0e09      	lsrs	r1, r1, #24
 801fdf4:	9111      	str	r1, [sp, #68]	; 0x44
 801fdf6:	e6e5      	b.n	801fbc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 801fdf8:	b01b      	add	sp, #108	; 0x6c
 801fdfa:	ecbd 8b08 	vpop	{d8-d11}
 801fdfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fe02:	bf00      	nop
 801fe04:	fffff800 	.word	0xfffff800

0801fe08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801fe08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fe0c:	b085      	sub	sp, #20
 801fe0e:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 801fe12:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801fe16:	9103      	str	r1, [sp, #12]
 801fe18:	fb05 7106 	mla	r1, r5, r6, r7
 801fe1c:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 801fe20:	2d00      	cmp	r5, #0
 801fe22:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801fe26:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801fe2a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801fe2e:	9401      	str	r4, [sp, #4]
 801fe30:	eb03 0901 	add.w	r9, r3, r1
 801fe34:	f2c0 80c0 	blt.w	801ffb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 801fe38:	45a8      	cmp	r8, r5
 801fe3a:	f340 80bd 	ble.w	801ffb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 801fe3e:	2f00      	cmp	r7, #0
 801fe40:	f2c0 80b6 	blt.w	801ffb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 801fe44:	42be      	cmp	r6, r7
 801fe46:	f340 80b3 	ble.w	801ffb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 801fe4a:	f813 c001 	ldrb.w	ip, [r3, r1]
 801fe4e:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 801fe52:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801fe56:	d019      	beq.n	801fe8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 801fe58:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 801fe5c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801fe60:	435a      	muls	r2, r3
 801fe62:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 801fe66:	f64f 011f 	movw	r1, #63519	; 0xf81f
 801fe6a:	fb0c f403 	mul.w	r4, ip, r3
 801fe6e:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 801fe72:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801fe76:	441a      	add	r2, r3
 801fe78:	f104 0320 	add.w	r3, r4, #32
 801fe7c:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 801fe80:	0a1b      	lsrs	r3, r3, #8
 801fe82:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 801fe86:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fe8a:	4319      	orrs	r1, r3
 801fe8c:	b289      	uxth	r1, r1
 801fe8e:	1c7b      	adds	r3, r7, #1
 801fe90:	f100 8097 	bmi.w	801ffc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 801fe94:	429e      	cmp	r6, r3
 801fe96:	f340 8094 	ble.w	801ffc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 801fe9a:	2800      	cmp	r0, #0
 801fe9c:	f000 8094 	beq.w	801ffc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 801fea0:	f899 4001 	ldrb.w	r4, [r9, #1]
 801fea4:	9b01      	ldr	r3, [sp, #4]
 801fea6:	2cff      	cmp	r4, #255	; 0xff
 801fea8:	885b      	ldrh	r3, [r3, #2]
 801feaa:	d01b      	beq.n	801fee4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 801feac:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 801feb0:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 801feb4:	fb0a f202 	mul.w	r2, sl, r2
 801feb8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801febc:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801fec0:	fb04 fa03 	mul.w	sl, r4, r3
 801fec4:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 801fec8:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801fecc:	441a      	add	r2, r3
 801fece:	f10a 0320 	add.w	r3, sl, #32
 801fed2:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801fed6:	0a1b      	lsrs	r3, r3, #8
 801fed8:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 801fedc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fee0:	ea4b 0303 	orr.w	r3, fp, r3
 801fee4:	b29b      	uxth	r3, r3
 801fee6:	3501      	adds	r5, #1
 801fee8:	d474      	bmi.n	801ffd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 801feea:	45a8      	cmp	r8, r5
 801feec:	dd72      	ble.n	801ffd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 801feee:	f1be 0f00 	cmp.w	lr, #0
 801fef2:	f000 8120 	beq.w	8020136 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 801fef6:	2f00      	cmp	r7, #0
 801fef8:	db69      	blt.n	801ffce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 801fefa:	42be      	cmp	r6, r7
 801fefc:	dd67      	ble.n	801ffce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 801fefe:	f819 5006 	ldrb.w	r5, [r9, r6]
 801ff02:	9a01      	ldr	r2, [sp, #4]
 801ff04:	2dff      	cmp	r5, #255	; 0xff
 801ff06:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 801ff0a:	d01c      	beq.n	801ff46 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 801ff0c:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 801ff10:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801ff14:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801ff18:	fb05 fa0b 	mul.w	sl, r5, fp
 801ff1c:	fb08 f802 	mul.w	r8, r8, r2
 801ff20:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801ff24:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 801ff28:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801ff2c:	4490      	add	r8, r2
 801ff2e:	f10a 0220 	add.w	r2, sl, #32
 801ff32:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 801ff36:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ff3a:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 801ff3e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ff42:	ea4b 0b0a 	orr.w	fp, fp, sl
 801ff46:	fa1f fb8b 	uxth.w	fp, fp
 801ff4a:	3701      	adds	r7, #1
 801ff4c:	d447      	bmi.n	801ffde <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 801ff4e:	42be      	cmp	r6, r7
 801ff50:	dd45      	ble.n	801ffde <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 801ff52:	2800      	cmp	r0, #0
 801ff54:	d046      	beq.n	801ffe4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 801ff56:	3601      	adds	r6, #1
 801ff58:	9a01      	ldr	r2, [sp, #4]
 801ff5a:	f819 7006 	ldrb.w	r7, [r9, r6]
 801ff5e:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 801ff62:	2fff      	cmp	r7, #255	; 0xff
 801ff64:	d01a      	beq.n	801ff9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 801ff66:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 801ff6a:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801ff6e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ff72:	fb07 f902 	mul.w	r9, r7, r2
 801ff76:	fb08 f806 	mul.w	r8, r8, r6
 801ff7a:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801ff7e:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 801ff82:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801ff86:	44b0      	add	r8, r6
 801ff88:	f109 0620 	add.w	r6, r9, #32
 801ff8c:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 801ff90:	0a36      	lsrs	r6, r6, #8
 801ff92:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801ff96:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ff9a:	4332      	orrs	r2, r6
 801ff9c:	b292      	uxth	r2, r2
 801ff9e:	280f      	cmp	r0, #15
 801ffa0:	d922      	bls.n	801ffe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 801ffa2:	4b69      	ldr	r3, [pc, #420]	; (8020148 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 801ffa4:	4a69      	ldr	r2, [pc, #420]	; (802014c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 801ffa6:	486a      	ldr	r0, [pc, #424]	; (8020150 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 801ffa8:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 801ffac:	f004 fa44 	bl	8024438 <__assert_func>
 801ffb0:	f04f 0c00 	mov.w	ip, #0
 801ffb4:	4661      	mov	r1, ip
 801ffb6:	e76a      	b.n	801fe8e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 801ffb8:	2400      	movs	r4, #0
 801ffba:	46a4      	mov	ip, r4
 801ffbc:	4623      	mov	r3, r4
 801ffbe:	4621      	mov	r1, r4
 801ffc0:	e791      	b.n	801fee6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 801ffc2:	2400      	movs	r4, #0
 801ffc4:	4623      	mov	r3, r4
 801ffc6:	e78e      	b.n	801fee6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 801ffc8:	4604      	mov	r4, r0
 801ffca:	4603      	mov	r3, r0
 801ffcc:	e78b      	b.n	801fee6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 801ffce:	2500      	movs	r5, #0
 801ffd0:	46ab      	mov	fp, r5
 801ffd2:	e7ba      	b.n	801ff4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 801ffd4:	2700      	movs	r7, #0
 801ffd6:	463d      	mov	r5, r7
 801ffd8:	463a      	mov	r2, r7
 801ffda:	46bb      	mov	fp, r7
 801ffdc:	e7df      	b.n	801ff9e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 801ffde:	2700      	movs	r7, #0
 801ffe0:	463a      	mov	r2, r7
 801ffe2:	e7dc      	b.n	801ff9e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 801ffe4:	4607      	mov	r7, r0
 801ffe6:	4602      	mov	r2, r0
 801ffe8:	f1be 0f0f 	cmp.w	lr, #15
 801ffec:	d8d9      	bhi.n	801ffa2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 801ffee:	b286      	uxth	r6, r0
 801fff0:	fa1f f98e 	uxth.w	r9, lr
 801fff4:	fb06 f809 	mul.w	r8, r6, r9
 801fff8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801fffc:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8020000:	0136      	lsls	r6, r6, #4
 8020002:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020006:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802000a:	9601      	str	r6, [sp, #4]
 802000c:	ea4a 0101 	orr.w	r1, sl, r1
 8020010:	fa1f f689 	uxth.w	r6, r9
 8020014:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8020018:	fb10 f90e 	smulbb	r9, r0, lr
 802001c:	ea4f 09e9 	mov.w	r9, r9, asr #3
 8020020:	9602      	str	r6, [sp, #8]
 8020022:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020026:	460e      	mov	r6, r1
 8020028:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802002c:	f1ce 0110 	rsb	r1, lr, #16
 8020030:	1a09      	subs	r1, r1, r0
 8020032:	ea4a 0303 	orr.w	r3, sl, r3
 8020036:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 802003a:	4343      	muls	r3, r0
 802003c:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8020040:	9801      	ldr	r0, [sp, #4]
 8020042:	fb01 3106 	mla	r1, r1, r6, r3
 8020046:	9e02      	ldr	r6, [sp, #8]
 8020048:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802004c:	1b80      	subs	r0, r0, r6
 802004e:	9e01      	ldr	r6, [sp, #4]
 8020050:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8020054:	eba6 0608 	sub.w	r6, r6, r8
 8020058:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802005c:	b2b6      	uxth	r6, r6
 802005e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020062:	ea4a 0202 	orr.w	r2, sl, r2
 8020066:	b280      	uxth	r0, r0
 8020068:	4374      	muls	r4, r6
 802006a:	fb09 1302 	mla	r3, r9, r2, r1
 802006e:	fb0c 4400 	mla	r4, ip, r0, r4
 8020072:	9a03      	ldr	r2, [sp, #12]
 8020074:	9802      	ldr	r0, [sp, #8]
 8020076:	8811      	ldrh	r1, [r2, #0]
 8020078:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 802007c:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 8020080:	fb00 4505 	mla	r5, r0, r5, r4
 8020084:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020088:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 802008c:	fb08 5707 	mla	r7, r8, r7, r5
 8020090:	ea4a 0b0b 	orr.w	fp, sl, fp
 8020094:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8020098:	b292      	uxth	r2, r2
 802009a:	fb0e 3e0b 	mla	lr, lr, fp, r3
 802009e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80200a2:	4357      	muls	r7, r2
 80200a4:	ea4f 535e 	mov.w	r3, lr, lsr #21
 80200a8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80200ac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80200b0:	f107 0801 	add.w	r8, r7, #1
 80200b4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80200b8:	ea43 0e0e 	orr.w	lr, r3, lr
 80200bc:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 80200c0:	fa1f f38e 	uxth.w	r3, lr
 80200c4:	1208      	asrs	r0, r1, #8
 80200c6:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 80200ca:	b2ff      	uxtb	r7, r7
 80200cc:	121c      	asrs	r4, r3, #8
 80200ce:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80200d2:	fb10 f007 	smulbb	r0, r0, r7
 80200d6:	10cd      	asrs	r5, r1, #3
 80200d8:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80200dc:	fb04 0402 	mla	r4, r4, r2, r0
 80200e0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80200e4:	10d8      	asrs	r0, r3, #3
 80200e6:	fb15 f507 	smulbb	r5, r5, r7
 80200ea:	00db      	lsls	r3, r3, #3
 80200ec:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80200f0:	fb00 5002 	mla	r0, r0, r2, r5
 80200f4:	b2dd      	uxtb	r5, r3
 80200f6:	00cb      	lsls	r3, r1, #3
 80200f8:	b2db      	uxtb	r3, r3
 80200fa:	fb13 f307 	smulbb	r3, r3, r7
 80200fe:	fb05 3202 	mla	r2, r5, r2, r3
 8020102:	b2a4      	uxth	r4, r4
 8020104:	b292      	uxth	r2, r2
 8020106:	1c63      	adds	r3, r4, #1
 8020108:	b280      	uxth	r0, r0
 802010a:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802010e:	1c53      	adds	r3, r2, #1
 8020110:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020114:	1c42      	adds	r2, r0, #1
 8020116:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802011a:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 802011e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020122:	0940      	lsrs	r0, r0, #5
 8020124:	4323      	orrs	r3, r4
 8020126:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802012a:	9a03      	ldr	r2, [sp, #12]
 802012c:	4303      	orrs	r3, r0
 802012e:	8013      	strh	r3, [r2, #0]
 8020130:	b005      	add	sp, #20
 8020132:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020136:	280f      	cmp	r0, #15
 8020138:	f63f af33 	bhi.w	801ffa2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 802013c:	4677      	mov	r7, lr
 802013e:	4675      	mov	r5, lr
 8020140:	4672      	mov	r2, lr
 8020142:	46f3      	mov	fp, lr
 8020144:	e753      	b.n	801ffee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 8020146:	bf00      	nop
 8020148:	0802aeb2 	.word	0x0802aeb2
 802014c:	0802b482 	.word	0x0802b482
 8020150:	0802af36 	.word	0x0802af36

08020154 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020154:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020158:	ed2d 8b08 	vpush	{d8-d11}
 802015c:	b097      	sub	sp, #92	; 0x5c
 802015e:	eeb0 aa40 	vmov.f32	s20, s0
 8020162:	9214      	str	r2, [sp, #80]	; 0x50
 8020164:	9308      	str	r3, [sp, #32]
 8020166:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8020168:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 802016c:	9312      	str	r3, [sp, #72]	; 0x48
 802016e:	9111      	str	r1, [sp, #68]	; 0x44
 8020170:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8020174:	9015      	str	r0, [sp, #84]	; 0x54
 8020176:	6850      	ldr	r0, [r2, #4]
 8020178:	6812      	ldr	r2, [r2, #0]
 802017a:	fb00 1303 	mla	r3, r0, r3, r1
 802017e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020182:	9309      	str	r3, [sp, #36]	; 0x24
 8020184:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020186:	681b      	ldr	r3, [r3, #0]
 8020188:	930b      	str	r3, [sp, #44]	; 0x2c
 802018a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802018c:	685b      	ldr	r3, [r3, #4]
 802018e:	930c      	str	r3, [sp, #48]	; 0x30
 8020190:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8020194:	930a      	str	r3, [sp, #40]	; 0x28
 8020196:	eef0 9a60 	vmov.f32	s19, s1
 802019a:	eeb0 9a41 	vmov.f32	s18, s2
 802019e:	eeb0 8a62 	vmov.f32	s16, s5
 80201a2:	eef0 8a43 	vmov.f32	s17, s6
 80201a6:	eef0 ba44 	vmov.f32	s23, s8
 80201aa:	eeb0 ba64 	vmov.f32	s22, s9
 80201ae:	eef0 aa45 	vmov.f32	s21, s10
 80201b2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80201b4:	2b00      	cmp	r3, #0
 80201b6:	dc03      	bgt.n	80201c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80201b8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80201ba:	2b00      	cmp	r3, #0
 80201bc:	f340 83cb 	ble.w	8020956 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 80201c0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80201c2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80201c6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80201ca:	1e48      	subs	r0, r1, #1
 80201cc:	1e55      	subs	r5, r2, #1
 80201ce:	9b08      	ldr	r3, [sp, #32]
 80201d0:	2b00      	cmp	r3, #0
 80201d2:	f340 81a3 	ble.w	802051c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80201d6:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 80201d8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80201da:	1436      	asrs	r6, r6, #16
 80201dc:	ea4f 4323 	mov.w	r3, r3, asr #16
 80201e0:	d406      	bmi.n	80201f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80201e2:	4286      	cmp	r6, r0
 80201e4:	da04      	bge.n	80201f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80201e6:	2b00      	cmp	r3, #0
 80201e8:	db02      	blt.n	80201f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80201ea:	42ab      	cmp	r3, r5
 80201ec:	f2c0 8197 	blt.w	802051e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 80201f0:	3601      	adds	r6, #1
 80201f2:	f100 8184 	bmi.w	80204fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80201f6:	42b1      	cmp	r1, r6
 80201f8:	f2c0 8181 	blt.w	80204fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80201fc:	3301      	adds	r3, #1
 80201fe:	f100 817e 	bmi.w	80204fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8020202:	429a      	cmp	r2, r3
 8020204:	f2c0 817b 	blt.w	80204fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8020208:	9b08      	ldr	r3, [sp, #32]
 802020a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802020c:	9313      	str	r3, [sp, #76]	; 0x4c
 802020e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8020212:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8020214:	2b00      	cmp	r3, #0
 8020216:	f340 81a4 	ble.w	8020562 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 802021a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802021c:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 802021e:	1418      	asrs	r0, r3, #16
 8020220:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8020222:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8020226:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020228:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 802022c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802022e:	142d      	asrs	r5, r5, #16
 8020230:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8020234:	f100 81f8 	bmi.w	8020628 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8020238:	f102 3eff 	add.w	lr, r2, #4294967295
 802023c:	4575      	cmp	r5, lr
 802023e:	f280 81f3 	bge.w	8020628 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8020242:	2800      	cmp	r0, #0
 8020244:	f2c0 81f0 	blt.w	8020628 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8020248:	f103 3eff 	add.w	lr, r3, #4294967295
 802024c:	4570      	cmp	r0, lr
 802024e:	f280 81eb 	bge.w	8020628 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8020252:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020254:	b212      	sxth	r2, r2
 8020256:	fb00 5002 	mla	r0, r0, r2, r5
 802025a:	fa1f fe81 	uxth.w	lr, r1
 802025e:	eb03 0a00 	add.w	sl, r3, r0
 8020262:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8020266:	f813 9000 	ldrb.w	r9, [r3, r0]
 802026a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802026e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8020272:	b29b      	uxth	r3, r3
 8020274:	f1bc 0f00 	cmp.w	ip, #0
 8020278:	f000 81b9 	beq.w	80205ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802027c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8020280:	940d      	str	r4, [sp, #52]	; 0x34
 8020282:	eb0a 0b02 	add.w	fp, sl, r2
 8020286:	fa1f fa8c 	uxth.w	sl, ip
 802028a:	fb0a fe0e 	mul.w	lr, sl, lr
 802028e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8020292:	fa1f fa8a 	uxth.w	sl, sl
 8020296:	eba5 050e 	sub.w	r5, r5, lr
 802029a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802029e:	940e      	str	r4, [sp, #56]	; 0x38
 80202a0:	eba3 030a 	sub.w	r3, r3, sl
 80202a4:	b2ad      	uxth	r5, r5
 80202a6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80202a8:	b29b      	uxth	r3, r3
 80202aa:	fb08 f505 	mul.w	r5, r8, r5
 80202ae:	fb09 5303 	mla	r3, r9, r3, r5
 80202b2:	fb0a 3304 	mla	r3, sl, r4, r3
 80202b6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80202b8:	fb0e 3304 	mla	r3, lr, r4, r3
 80202bc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80202c0:	2b00      	cmp	r3, #0
 80202c2:	f000 810f 	beq.w	80204e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80202c6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80202c8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80202cc:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80202d0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80202d4:	f000 8190 	beq.w	80205f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 80202d8:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80202dc:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80202e0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80202e4:	fb09 f000 	mul.w	r0, r9, r0
 80202e8:	fb0a fe0e 	mul.w	lr, sl, lr
 80202ec:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80202f0:	f100 0b20 	add.w	fp, r0, #32
 80202f4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80202f8:	44ce      	add	lr, r9
 80202fa:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80202fe:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020302:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8020306:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802030a:	ea4e 0909 	orr.w	r9, lr, r9
 802030e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8020312:	8868      	ldrh	r0, [r5, #2]
 8020314:	d019      	beq.n	802034a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8020316:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802031a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802031e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020322:	fb08 f800 	mul.w	r8, r8, r0
 8020326:	fb0a fe0e 	mul.w	lr, sl, lr
 802032a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802032e:	f108 0b20 	add.w	fp, r8, #32
 8020332:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8020336:	4486      	add	lr, r0
 8020338:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 802033c:	0a00      	lsrs	r0, r0, #8
 802033e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8020342:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020346:	ea4e 0000 	orr.w	r0, lr, r0
 802034a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802034e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8020352:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8020356:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802035a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802035e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020362:	ea4e 0909 	orr.w	r9, lr, r9
 8020366:	ea4a 0000 	orr.w	r0, sl, r0
 802036a:	f1bc 0f00 	cmp.w	ip, #0
 802036e:	f000 8145 	beq.w	80205fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 8020372:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8020376:	3a01      	subs	r2, #1
 8020378:	0052      	lsls	r2, r2, #1
 802037a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802037c:	3202      	adds	r2, #2
 802037e:	2cff      	cmp	r4, #255	; 0xff
 8020380:	eb05 0e02 	add.w	lr, r5, r2
 8020384:	5aaa      	ldrh	r2, [r5, r2]
 8020386:	d018      	beq.n	80203ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8020388:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 802038c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020390:	fb04 fa02 	mul.w	sl, r4, r2
 8020394:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8020398:	fb08 f805 	mul.w	r8, r8, r5
 802039c:	f10a 0520 	add.w	r5, sl, #32
 80203a0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80203a4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80203a8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80203ac:	4442      	add	r2, r8
 80203ae:	0a2d      	lsrs	r5, r5, #8
 80203b0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80203b4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80203b8:	432a      	orrs	r2, r5
 80203ba:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80203bc:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80203c0:	2cff      	cmp	r4, #255	; 0xff
 80203c2:	d01a      	beq.n	80203fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80203c4:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80203c8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80203cc:	fb04 fa05 	mul.w	sl, r4, r5
 80203d0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80203d4:	fb08 f80e 	mul.w	r8, r8, lr
 80203d8:	f10a 0e20 	add.w	lr, sl, #32
 80203dc:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80203e0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80203e4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80203e8:	4445      	add	r5, r8
 80203ea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80203ee:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80203f2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80203f6:	ea45 050e 	orr.w	r5, r5, lr
 80203fa:	fb1c fe01 	smulbb	lr, ip, r1
 80203fe:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8020402:	f1cc 0810 	rsb	r8, ip, #16
 8020406:	eba8 0801 	sub.w	r8, r8, r1
 802040a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802040e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8020412:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8020416:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802041a:	4341      	muls	r1, r0
 802041c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020420:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020424:	ea4a 0202 	orr.w	r2, sl, r2
 8020428:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 802042c:	fb09 1108 	mla	r1, r9, r8, r1
 8020430:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020434:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8020438:	fb0c 1102 	mla	r1, ip, r2, r1
 802043c:	ea4b 0505 	orr.w	r5, fp, r5
 8020440:	fb0e 1e05 	mla	lr, lr, r5, r1
 8020444:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8020448:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802044c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020450:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020454:	ea42 0e0e 	orr.w	lr, r2, lr
 8020458:	fa1f f28e 	uxth.w	r2, lr
 802045c:	2bff      	cmp	r3, #255	; 0xff
 802045e:	d103      	bne.n	8020468 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8020460:	9912      	ldr	r1, [sp, #72]	; 0x48
 8020462:	29ff      	cmp	r1, #255	; 0xff
 8020464:	f000 80de 	beq.w	8020624 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>
 8020468:	990a      	ldr	r1, [sp, #40]	; 0x28
 802046a:	8838      	ldrh	r0, [r7, #0]
 802046c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802046e:	434b      	muls	r3, r1
 8020470:	f103 0c01 	add.w	ip, r3, #1
 8020474:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8020478:	ea6f 2323 	mvn.w	r3, r3, asr #8
 802047c:	fa5f fc83 	uxtb.w	ip, r3
 8020480:	1203      	asrs	r3, r0, #8
 8020482:	1215      	asrs	r5, r2, #8
 8020484:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8020488:	fb13 f30c 	smulbb	r3, r3, ip
 802048c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020490:	fb05 3501 	mla	r5, r5, r1, r3
 8020494:	10c3      	asrs	r3, r0, #3
 8020496:	10d1      	asrs	r1, r2, #3
 8020498:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802049c:	fb13 f30c 	smulbb	r3, r3, ip
 80204a0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80204a4:	fb01 3104 	mla	r1, r1, r4, r3
 80204a8:	00c3      	lsls	r3, r0, #3
 80204aa:	00d2      	lsls	r2, r2, #3
 80204ac:	b2db      	uxtb	r3, r3
 80204ae:	b2d2      	uxtb	r2, r2
 80204b0:	fb13 f30c 	smulbb	r3, r3, ip
 80204b4:	b2ad      	uxth	r5, r5
 80204b6:	fb02 3304 	mla	r3, r2, r4, r3
 80204ba:	b29a      	uxth	r2, r3
 80204bc:	1c6b      	adds	r3, r5, #1
 80204be:	b289      	uxth	r1, r1
 80204c0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80204c4:	1c53      	adds	r3, r2, #1
 80204c6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80204ca:	1c4a      	adds	r2, r1, #1
 80204cc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80204d0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80204d4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80204d8:	0949      	lsrs	r1, r1, #5
 80204da:	432b      	orrs	r3, r5
 80204dc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80204e0:	430b      	orrs	r3, r1
 80204e2:	803b      	strh	r3, [r7, #0]
 80204e4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80204e6:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80204e8:	4413      	add	r3, r2
 80204ea:	9329      	str	r3, [sp, #164]	; 0xa4
 80204ec:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80204ee:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80204f0:	441a      	add	r2, r3
 80204f2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80204f4:	922a      	str	r2, [sp, #168]	; 0xa8
 80204f6:	3b01      	subs	r3, #1
 80204f8:	3702      	adds	r7, #2
 80204fa:	9313      	str	r3, [sp, #76]	; 0x4c
 80204fc:	e689      	b.n	8020212 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 80204fe:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8020500:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 8020502:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 8020504:	4433      	add	r3, r6
 8020506:	9329      	str	r3, [sp, #164]	; 0xa4
 8020508:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802050a:	441c      	add	r4, r3
 802050c:	9b08      	ldr	r3, [sp, #32]
 802050e:	942a      	str	r4, [sp, #168]	; 0xa8
 8020510:	3b01      	subs	r3, #1
 8020512:	9308      	str	r3, [sp, #32]
 8020514:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020516:	3302      	adds	r3, #2
 8020518:	9309      	str	r3, [sp, #36]	; 0x24
 802051a:	e658      	b.n	80201ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802051c:	d028      	beq.n	8020570 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 802051e:	9b08      	ldr	r3, [sp, #32]
 8020520:	982b      	ldr	r0, [sp, #172]	; 0xac
 8020522:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8020524:	3b01      	subs	r3, #1
 8020526:	fb00 5003 	mla	r0, r0, r3, r5
 802052a:	1400      	asrs	r0, r0, #16
 802052c:	f53f ae6c 	bmi.w	8020208 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8020530:	3901      	subs	r1, #1
 8020532:	4288      	cmp	r0, r1
 8020534:	f6bf ae68 	bge.w	8020208 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8020538:	992c      	ldr	r1, [sp, #176]	; 0xb0
 802053a:	982a      	ldr	r0, [sp, #168]	; 0xa8
 802053c:	fb01 0303 	mla	r3, r1, r3, r0
 8020540:	141b      	asrs	r3, r3, #16
 8020542:	f53f ae61 	bmi.w	8020208 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8020546:	3a01      	subs	r2, #1
 8020548:	4293      	cmp	r3, r2
 802054a:	f6bf ae5d 	bge.w	8020208 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 802054e:	9b08      	ldr	r3, [sp, #32]
 8020550:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8020554:	9313      	str	r3, [sp, #76]	; 0x4c
 8020556:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802055a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 802055c:	2b00      	cmp	r3, #0
 802055e:	f300 8082 	bgt.w	8020666 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8020562:	9b08      	ldr	r3, [sp, #32]
 8020564:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020568:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802056a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802056e:	9309      	str	r3, [sp, #36]	; 0x24
 8020570:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020572:	2b00      	cmp	r3, #0
 8020574:	f340 81ef 	ble.w	8020956 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 8020578:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802057c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020580:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8020584:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020586:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802058a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802058e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8020592:	eef0 6a48 	vmov.f32	s13, s16
 8020596:	ee69 7a27 	vmul.f32	s15, s18, s15
 802059a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802059e:	ee37 8a48 	vsub.f32	s16, s14, s16
 80205a2:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80205a6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80205aa:	eef0 6a68 	vmov.f32	s13, s17
 80205ae:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80205b2:	ee18 2a10 	vmov	r2, s16
 80205b6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80205ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80205be:	ee18 2a90 	vmov	r2, s17
 80205c2:	932b      	str	r3, [sp, #172]	; 0xac
 80205c4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80205c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80205ca:	932c      	str	r3, [sp, #176]	; 0xb0
 80205cc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80205ce:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80205d0:	3b01      	subs	r3, #1
 80205d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80205d6:	9311      	str	r3, [sp, #68]	; 0x44
 80205d8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80205da:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 80205de:	bf08      	it	eq
 80205e0:	4613      	moveq	r3, r2
 80205e2:	9308      	str	r3, [sp, #32]
 80205e4:	eef0 8a67 	vmov.f32	s17, s15
 80205e8:	eeb0 8a47 	vmov.f32	s16, s14
 80205ec:	e5e1      	b.n	80201b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80205ee:	fb08 f505 	mul.w	r5, r8, r5
 80205f2:	fb09 5303 	mla	r3, r9, r3, r5
 80205f6:	e661      	b.n	80202bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 80205f8:	4681      	mov	r9, r0
 80205fa:	e688      	b.n	802030e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 80205fc:	f1c1 0210 	rsb	r2, r1, #16
 8020600:	4341      	muls	r1, r0
 8020602:	fb09 1902 	mla	r9, r9, r2, r1
 8020606:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802060a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802060e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8020612:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020616:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802061a:	ea42 0909 	orr.w	r9, r2, r9
 802061e:	fa1f f289 	uxth.w	r2, r9
 8020622:	e71b      	b.n	802045c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 8020624:	803a      	strh	r2, [r7, #0]
 8020626:	e75d      	b.n	80204e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8020628:	f115 0e01 	adds.w	lr, r5, #1
 802062c:	f53f af5a 	bmi.w	80204e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8020630:	4572      	cmp	r2, lr
 8020632:	f6ff af57 	blt.w	80204e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8020636:	f110 0e01 	adds.w	lr, r0, #1
 802063a:	f53f af53 	bmi.w	80204e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 802063e:	4573      	cmp	r3, lr
 8020640:	f6ff af50 	blt.w	80204e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8020644:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020646:	9502      	str	r5, [sp, #8]
 8020648:	b21b      	sxth	r3, r3
 802064a:	b212      	sxth	r2, r2
 802064c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8020650:	9301      	str	r3, [sp, #4]
 8020652:	9200      	str	r2, [sp, #0]
 8020654:	e9cd c405 	strd	ip, r4, [sp, #20]
 8020658:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 802065c:	4639      	mov	r1, r7
 802065e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8020660:	f7ff fbd2 	bl	801fe08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8020664:	e73e      	b.n	80204e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8020666:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8020668:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802066c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802066e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8020672:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020674:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020678:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802067a:	141f      	asrs	r7, r3, #16
 802067c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802067e:	141b      	asrs	r3, r3, #16
 8020680:	fb01 3707 	mla	r7, r1, r7, r3
 8020684:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020686:	fa1f fc82 	uxth.w	ip, r2
 802068a:	eb03 0a07 	add.w	sl, r3, r7
 802068e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8020692:	f813 9007 	ldrb.w	r9, [r3, r7]
 8020696:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802069a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802069e:	b29b      	uxth	r3, r3
 80206a0:	2d00      	cmp	r5, #0
 80206a2:	f000 813d 	beq.w	8020920 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 80206a6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80206aa:	940f      	str	r4, [sp, #60]	; 0x3c
 80206ac:	eb0a 0b01 	add.w	fp, sl, r1
 80206b0:	fa1f fa85 	uxth.w	sl, r5
 80206b4:	fb0a fc0c 	mul.w	ip, sl, ip
 80206b8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80206bc:	fa1f fa8a 	uxth.w	sl, sl
 80206c0:	eba0 000c 	sub.w	r0, r0, ip
 80206c4:	eba3 030a 	sub.w	r3, r3, sl
 80206c8:	b280      	uxth	r0, r0
 80206ca:	fb08 f000 	mul.w	r0, r8, r0
 80206ce:	b29b      	uxth	r3, r3
 80206d0:	fb09 0303 	mla	r3, r9, r3, r0
 80206d4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80206d6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80206da:	9410      	str	r4, [sp, #64]	; 0x40
 80206dc:	fb0a 3300 	mla	r3, sl, r0, r3
 80206e0:	fb0c 3304 	mla	r3, ip, r4, r3
 80206e4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80206e8:	2b00      	cmp	r3, #0
 80206ea:	f000 810b 	beq.w	8020904 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 80206ee:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80206f0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80206f2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80206f6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80206fa:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80206fe:	f000 8114 	beq.w	802092a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d6>
 8020702:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8020706:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802070a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802070e:	fb09 f707 	mul.w	r7, r9, r7
 8020712:	fb0a fc0c 	mul.w	ip, sl, ip
 8020716:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802071a:	f107 0b20 	add.w	fp, r7, #32
 802071e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8020722:	44cc      	add	ip, r9
 8020724:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8020728:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802072c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8020730:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8020734:	ea4c 0909 	orr.w	r9, ip, r9
 8020738:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802073c:	8847      	ldrh	r7, [r0, #2]
 802073e:	d019      	beq.n	8020774 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x620>
 8020740:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8020744:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8020748:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802074c:	fb08 f807 	mul.w	r8, r8, r7
 8020750:	fb0a fc0c 	mul.w	ip, sl, ip
 8020754:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8020758:	f108 0b20 	add.w	fp, r8, #32
 802075c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8020760:	44bc      	add	ip, r7
 8020762:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8020766:	0a3f      	lsrs	r7, r7, #8
 8020768:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802076c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8020770:	ea4c 0707 	orr.w	r7, ip, r7
 8020774:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8020778:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 802077c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020780:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8020784:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020788:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 802078c:	ea4c 0909 	orr.w	r9, ip, r9
 8020790:	ea4a 0707 	orr.w	r7, sl, r7
 8020794:	2d00      	cmp	r5, #0
 8020796:	f000 80ca 	beq.w	802092e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 802079a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802079e:	3901      	subs	r1, #1
 80207a0:	0049      	lsls	r1, r1, #1
 80207a2:	3102      	adds	r1, #2
 80207a4:	eb00 0c01 	add.w	ip, r0, r1
 80207a8:	5a41      	ldrh	r1, [r0, r1]
 80207aa:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80207ac:	28ff      	cmp	r0, #255	; 0xff
 80207ae:	d019      	beq.n	80207e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x690>
 80207b0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80207b2:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80207b6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80207ba:	fb04 fa01 	mul.w	sl, r4, r1
 80207be:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80207c2:	fb08 f800 	mul.w	r8, r8, r0
 80207c6:	f10a 0020 	add.w	r0, sl, #32
 80207ca:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80207ce:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80207d2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80207d6:	4441      	add	r1, r8
 80207d8:	0a00      	lsrs	r0, r0, #8
 80207da:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80207de:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80207e2:	4301      	orrs	r1, r0
 80207e4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80207e6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80207ea:	2cff      	cmp	r4, #255	; 0xff
 80207ec:	d01a      	beq.n	8020824 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 80207ee:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80207f2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80207f6:	fb04 fa00 	mul.w	sl, r4, r0
 80207fa:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80207fe:	fb08 f80c 	mul.w	r8, r8, ip
 8020802:	f10a 0c20 	add.w	ip, sl, #32
 8020806:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802080a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802080e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020812:	4440      	add	r0, r8
 8020814:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020818:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802081c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8020820:	ea40 000c 	orr.w	r0, r0, ip
 8020824:	fb15 fc02 	smulbb	ip, r5, r2
 8020828:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802082c:	f1c5 0810 	rsb	r8, r5, #16
 8020830:	eba8 0802 	sub.w	r8, r8, r2
 8020834:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8020838:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 802083c:	437a      	muls	r2, r7
 802083e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8020842:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8020846:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802084a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802084e:	fb09 2208 	mla	r2, r9, r8, r2
 8020852:	ea4a 0101 	orr.w	r1, sl, r1
 8020856:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802085a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802085e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020862:	fb05 2201 	mla	r2, r5, r1, r2
 8020866:	ea4b 0000 	orr.w	r0, fp, r0
 802086a:	fb0c 2200 	mla	r2, ip, r0, r2
 802086e:	0d57      	lsrs	r7, r2, #21
 8020870:	0952      	lsrs	r2, r2, #5
 8020872:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8020876:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802087a:	433a      	orrs	r2, r7
 802087c:	2bff      	cmp	r3, #255	; 0xff
 802087e:	b292      	uxth	r2, r2
 8020880:	d102      	bne.n	8020888 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8020882:	9912      	ldr	r1, [sp, #72]	; 0x48
 8020884:	29ff      	cmp	r1, #255	; 0xff
 8020886:	d063      	beq.n	8020950 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7fc>
 8020888:	980a      	ldr	r0, [sp, #40]	; 0x28
 802088a:	f8be 1000 	ldrh.w	r1, [lr]
 802088e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020890:	4343      	muls	r3, r0
 8020892:	1c58      	adds	r0, r3, #1
 8020894:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8020898:	ea6f 2323 	mvn.w	r3, r3, asr #8
 802089c:	1208      	asrs	r0, r1, #8
 802089e:	b2db      	uxtb	r3, r3
 80208a0:	1215      	asrs	r5, r2, #8
 80208a2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80208a6:	fb10 f003 	smulbb	r0, r0, r3
 80208aa:	10cf      	asrs	r7, r1, #3
 80208ac:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80208b0:	00c9      	lsls	r1, r1, #3
 80208b2:	fb05 0504 	mla	r5, r5, r4, r0
 80208b6:	b2c9      	uxtb	r1, r1
 80208b8:	10d0      	asrs	r0, r2, #3
 80208ba:	00d2      	lsls	r2, r2, #3
 80208bc:	fb11 f103 	smulbb	r1, r1, r3
 80208c0:	b2d2      	uxtb	r2, r2
 80208c2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80208c6:	fb02 1204 	mla	r2, r2, r4, r1
 80208ca:	fb17 f703 	smulbb	r7, r7, r3
 80208ce:	b2ad      	uxth	r5, r5
 80208d0:	b292      	uxth	r2, r2
 80208d2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80208d6:	fb00 7004 	mla	r0, r0, r4, r7
 80208da:	1c6b      	adds	r3, r5, #1
 80208dc:	1c57      	adds	r7, r2, #1
 80208de:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80208e2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80208e6:	b280      	uxth	r0, r0
 80208e8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80208ec:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80208f0:	433d      	orrs	r5, r7
 80208f2:	1c47      	adds	r7, r0, #1
 80208f4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80208f8:	097f      	lsrs	r7, r7, #5
 80208fa:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80208fe:	433d      	orrs	r5, r7
 8020900:	f8ae 5000 	strh.w	r5, [lr]
 8020904:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8020906:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8020908:	4413      	add	r3, r2
 802090a:	9329      	str	r3, [sp, #164]	; 0xa4
 802090c:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 802090e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020910:	441a      	add	r2, r3
 8020912:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8020914:	922a      	str	r2, [sp, #168]	; 0xa8
 8020916:	3b01      	subs	r3, #1
 8020918:	f10e 0e02 	add.w	lr, lr, #2
 802091c:	9313      	str	r3, [sp, #76]	; 0x4c
 802091e:	e61c      	b.n	802055a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 8020920:	fb08 f000 	mul.w	r0, r8, r0
 8020924:	fb09 0303 	mla	r3, r9, r3, r0
 8020928:	e6dc      	b.n	80206e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x590>
 802092a:	46b9      	mov	r9, r7
 802092c:	e704      	b.n	8020738 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e4>
 802092e:	f1c2 0110 	rsb	r1, r2, #16
 8020932:	437a      	muls	r2, r7
 8020934:	fb09 2901 	mla	r9, r9, r1, r2
 8020938:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802093c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8020940:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8020944:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020948:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802094c:	4302      	orrs	r2, r0
 802094e:	e795      	b.n	802087c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 8020950:	f8ae 2000 	strh.w	r2, [lr]
 8020954:	e7d6      	b.n	8020904 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8020956:	b017      	add	sp, #92	; 0x5c
 8020958:	ecbd 8b08 	vpop	{d8-d11}
 802095c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020960 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8020960:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020964:	b085      	sub	sp, #20
 8020966:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 802096a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 802096e:	9103      	str	r1, [sp, #12]
 8020970:	fb05 7106 	mla	r1, r5, r6, r7
 8020974:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 8020978:	2d00      	cmp	r5, #0
 802097a:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 802097e:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8020982:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8020986:	9401      	str	r4, [sp, #4]
 8020988:	eb02 0901 	add.w	r9, r2, r1
 802098c:	f2c0 80c0 	blt.w	8020b10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8020990:	45a8      	cmp	r8, r5
 8020992:	f340 80bd 	ble.w	8020b10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8020996:	2f00      	cmp	r7, #0
 8020998:	f2c0 80b6 	blt.w	8020b08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 802099c:	42be      	cmp	r6, r7
 802099e:	f340 80b3 	ble.w	8020b08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 80209a2:	f812 c001 	ldrb.w	ip, [r2, r1]
 80209a6:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 80209aa:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80209ae:	d019      	beq.n	80209e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 80209b0:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 80209b4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80209b8:	435a      	muls	r2, r3
 80209ba:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 80209be:	f64f 011f 	movw	r1, #63519	; 0xf81f
 80209c2:	fb0c f403 	mul.w	r4, ip, r3
 80209c6:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 80209ca:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80209ce:	441a      	add	r2, r3
 80209d0:	f104 0320 	add.w	r3, r4, #32
 80209d4:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 80209d8:	0a1b      	lsrs	r3, r3, #8
 80209da:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 80209de:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80209e2:	4319      	orrs	r1, r3
 80209e4:	b289      	uxth	r1, r1
 80209e6:	1c7b      	adds	r3, r7, #1
 80209e8:	f100 8097 	bmi.w	8020b1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 80209ec:	429e      	cmp	r6, r3
 80209ee:	f340 8094 	ble.w	8020b1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 80209f2:	2800      	cmp	r0, #0
 80209f4:	f000 8094 	beq.w	8020b20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 80209f8:	f899 4001 	ldrb.w	r4, [r9, #1]
 80209fc:	9b01      	ldr	r3, [sp, #4]
 80209fe:	2cff      	cmp	r4, #255	; 0xff
 8020a00:	885b      	ldrh	r3, [r3, #2]
 8020a02:	d01b      	beq.n	8020a3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 8020a04:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8020a08:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8020a0c:	fb0a f202 	mul.w	r2, sl, r2
 8020a10:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020a14:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8020a18:	fb04 fa03 	mul.w	sl, r4, r3
 8020a1c:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8020a20:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8020a24:	441a      	add	r2, r3
 8020a26:	f10a 0320 	add.w	r3, sl, #32
 8020a2a:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8020a2e:	0a1b      	lsrs	r3, r3, #8
 8020a30:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8020a34:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020a38:	ea4b 0303 	orr.w	r3, fp, r3
 8020a3c:	b29b      	uxth	r3, r3
 8020a3e:	3501      	adds	r5, #1
 8020a40:	d474      	bmi.n	8020b2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8020a42:	45a8      	cmp	r8, r5
 8020a44:	dd72      	ble.n	8020b2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8020a46:	f1be 0f00 	cmp.w	lr, #0
 8020a4a:	f000 8110 	beq.w	8020c6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x30e>
 8020a4e:	2f00      	cmp	r7, #0
 8020a50:	db69      	blt.n	8020b26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 8020a52:	42be      	cmp	r6, r7
 8020a54:	dd67      	ble.n	8020b26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 8020a56:	f819 5006 	ldrb.w	r5, [r9, r6]
 8020a5a:	9a01      	ldr	r2, [sp, #4]
 8020a5c:	2dff      	cmp	r5, #255	; 0xff
 8020a5e:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 8020a62:	d01c      	beq.n	8020a9e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 8020a64:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 8020a68:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8020a6c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8020a70:	fb05 fa0b 	mul.w	sl, r5, fp
 8020a74:	fb08 f802 	mul.w	r8, r8, r2
 8020a78:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8020a7c:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8020a80:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020a84:	4490      	add	r8, r2
 8020a86:	f10a 0220 	add.w	r2, sl, #32
 8020a8a:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 8020a8e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020a92:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 8020a96:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020a9a:	ea4b 0b0a 	orr.w	fp, fp, sl
 8020a9e:	fa1f fb8b 	uxth.w	fp, fp
 8020aa2:	3701      	adds	r7, #1
 8020aa4:	d447      	bmi.n	8020b36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 8020aa6:	42be      	cmp	r6, r7
 8020aa8:	dd45      	ble.n	8020b36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 8020aaa:	2800      	cmp	r0, #0
 8020aac:	d046      	beq.n	8020b3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 8020aae:	3601      	adds	r6, #1
 8020ab0:	9a01      	ldr	r2, [sp, #4]
 8020ab2:	f819 7006 	ldrb.w	r7, [r9, r6]
 8020ab6:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 8020aba:	2fff      	cmp	r7, #255	; 0xff
 8020abc:	d01a      	beq.n	8020af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 8020abe:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 8020ac2:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8020ac6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020aca:	fb07 f902 	mul.w	r9, r7, r2
 8020ace:	fb08 f806 	mul.w	r8, r8, r6
 8020ad2:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8020ad6:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 8020ada:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020ade:	44b0      	add	r8, r6
 8020ae0:	f109 0620 	add.w	r6, r9, #32
 8020ae4:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8020ae8:	0a36      	lsrs	r6, r6, #8
 8020aea:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8020aee:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8020af2:	4332      	orrs	r2, r6
 8020af4:	b292      	uxth	r2, r2
 8020af6:	280f      	cmp	r0, #15
 8020af8:	d922      	bls.n	8020b40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8020afa:	4b61      	ldr	r3, [pc, #388]	; (8020c80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 8020afc:	4a61      	ldr	r2, [pc, #388]	; (8020c84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 8020afe:	4862      	ldr	r0, [pc, #392]	; (8020c88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 8020b00:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8020b04:	f003 fc98 	bl	8024438 <__assert_func>
 8020b08:	f04f 0c00 	mov.w	ip, #0
 8020b0c:	4661      	mov	r1, ip
 8020b0e:	e76a      	b.n	80209e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8020b10:	2400      	movs	r4, #0
 8020b12:	46a4      	mov	ip, r4
 8020b14:	4623      	mov	r3, r4
 8020b16:	4621      	mov	r1, r4
 8020b18:	e791      	b.n	8020a3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8020b1a:	2400      	movs	r4, #0
 8020b1c:	4623      	mov	r3, r4
 8020b1e:	e78e      	b.n	8020a3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8020b20:	4604      	mov	r4, r0
 8020b22:	4603      	mov	r3, r0
 8020b24:	e78b      	b.n	8020a3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8020b26:	2500      	movs	r5, #0
 8020b28:	46ab      	mov	fp, r5
 8020b2a:	e7ba      	b.n	8020aa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 8020b2c:	2700      	movs	r7, #0
 8020b2e:	463d      	mov	r5, r7
 8020b30:	463a      	mov	r2, r7
 8020b32:	46bb      	mov	fp, r7
 8020b34:	e7df      	b.n	8020af6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8020b36:	2700      	movs	r7, #0
 8020b38:	463a      	mov	r2, r7
 8020b3a:	e7dc      	b.n	8020af6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8020b3c:	4607      	mov	r7, r0
 8020b3e:	4602      	mov	r2, r0
 8020b40:	f1be 0f0f 	cmp.w	lr, #15
 8020b44:	d8d9      	bhi.n	8020afa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8020b46:	b286      	uxth	r6, r0
 8020b48:	fa1f f98e 	uxth.w	r9, lr
 8020b4c:	fb06 f809 	mul.w	r8, r6, r9
 8020b50:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8020b54:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8020b58:	0136      	lsls	r6, r6, #4
 8020b5a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020b5e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8020b62:	9601      	str	r6, [sp, #4]
 8020b64:	ea4a 0101 	orr.w	r1, sl, r1
 8020b68:	fa1f f689 	uxth.w	r6, r9
 8020b6c:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8020b70:	fb10 f90e 	smulbb	r9, r0, lr
 8020b74:	ea4f 09e9 	mov.w	r9, r9, asr #3
 8020b78:	9602      	str	r6, [sp, #8]
 8020b7a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020b7e:	460e      	mov	r6, r1
 8020b80:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020b84:	f1ce 0110 	rsb	r1, lr, #16
 8020b88:	1a09      	subs	r1, r1, r0
 8020b8a:	ea4a 0303 	orr.w	r3, sl, r3
 8020b8e:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 8020b92:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8020b96:	4343      	muls	r3, r0
 8020b98:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8020b9c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020ba0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020ba4:	fb01 3106 	mla	r1, r1, r6, r3
 8020ba8:	ea4a 0202 	orr.w	r2, sl, r2
 8020bac:	fb09 1302 	mla	r3, r9, r2, r1
 8020bb0:	9a03      	ldr	r2, [sp, #12]
 8020bb2:	9802      	ldr	r0, [sp, #8]
 8020bb4:	8811      	ldrh	r1, [r2, #0]
 8020bb6:	9a01      	ldr	r2, [sp, #4]
 8020bb8:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020bbc:	1a12      	subs	r2, r2, r0
 8020bbe:	9801      	ldr	r0, [sp, #4]
 8020bc0:	eba0 0608 	sub.w	r6, r0, r8
 8020bc4:	b2b6      	uxth	r6, r6
 8020bc6:	b292      	uxth	r2, r2
 8020bc8:	4374      	muls	r4, r6
 8020bca:	fb0c 4402 	mla	r4, ip, r2, r4
 8020bce:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 8020bd2:	9a02      	ldr	r2, [sp, #8]
 8020bd4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020bd8:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8020bdc:	fb02 4505 	mla	r5, r2, r5, r4
 8020be0:	ea4a 0b0b 	orr.w	fp, sl, fp
 8020be4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8020be8:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8020bec:	fb08 5707 	mla	r7, r8, r7, r5
 8020bf0:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8020bf4:	120a      	asrs	r2, r1, #8
 8020bf6:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8020bfa:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8020bfe:	b2ff      	uxtb	r7, r7
 8020c00:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020c04:	10c8      	asrs	r0, r1, #3
 8020c06:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020c0a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020c0e:	00c9      	lsls	r1, r1, #3
 8020c10:	437a      	muls	r2, r7
 8020c12:	ea43 0e0e 	orr.w	lr, r3, lr
 8020c16:	b2c9      	uxtb	r1, r1
 8020c18:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8020c1c:	fa1f f38e 	uxth.w	r3, lr
 8020c20:	4378      	muls	r0, r7
 8020c22:	434f      	muls	r7, r1
 8020c24:	1c51      	adds	r1, r2, #1
 8020c26:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8020c2a:	121a      	asrs	r2, r3, #8
 8020c2c:	f022 0207 	bic.w	r2, r2, #7
 8020c30:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8020c34:	1c41      	adds	r1, r0, #1
 8020c36:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8020c3a:	10d9      	asrs	r1, r3, #3
 8020c3c:	f021 0103 	bic.w	r1, r1, #3
 8020c40:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8020c44:	0212      	lsls	r2, r2, #8
 8020c46:	00c9      	lsls	r1, r1, #3
 8020c48:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020c4c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8020c50:	430a      	orrs	r2, r1
 8020c52:	1c79      	adds	r1, r7, #1
 8020c54:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8020c58:	00db      	lsls	r3, r3, #3
 8020c5a:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8020c5e:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8020c62:	4313      	orrs	r3, r2
 8020c64:	9a03      	ldr	r2, [sp, #12]
 8020c66:	8013      	strh	r3, [r2, #0]
 8020c68:	b005      	add	sp, #20
 8020c6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020c6e:	280f      	cmp	r0, #15
 8020c70:	f63f af43 	bhi.w	8020afa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8020c74:	4677      	mov	r7, lr
 8020c76:	4675      	mov	r5, lr
 8020c78:	4672      	mov	r2, lr
 8020c7a:	46f3      	mov	fp, lr
 8020c7c:	e763      	b.n	8020b46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 8020c7e:	bf00      	nop
 8020c80:	0802aeb2 	.word	0x0802aeb2
 8020c84:	0802b482 	.word	0x0802b482
 8020c88:	0802af36 	.word	0x0802af36

08020c8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020c8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020c90:	ed2d 8b08 	vpush	{d8-d11}
 8020c94:	b093      	sub	sp, #76	; 0x4c
 8020c96:	eeb0 aa40 	vmov.f32	s20, s0
 8020c9a:	9210      	str	r2, [sp, #64]	; 0x40
 8020c9c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020c9e:	910e      	str	r1, [sp, #56]	; 0x38
 8020ca0:	9306      	str	r3, [sp, #24]
 8020ca2:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8020ca6:	9011      	str	r0, [sp, #68]	; 0x44
 8020ca8:	6850      	ldr	r0, [r2, #4]
 8020caa:	6812      	ldr	r2, [r2, #0]
 8020cac:	fb00 1303 	mla	r3, r0, r3, r1
 8020cb0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020cb4:	9307      	str	r3, [sp, #28]
 8020cb6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020cb8:	681b      	ldr	r3, [r3, #0]
 8020cba:	9308      	str	r3, [sp, #32]
 8020cbc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020cbe:	685b      	ldr	r3, [r3, #4]
 8020cc0:	9309      	str	r3, [sp, #36]	; 0x24
 8020cc2:	eef0 9a60 	vmov.f32	s19, s1
 8020cc6:	eeb0 9a41 	vmov.f32	s18, s2
 8020cca:	eeb0 8a62 	vmov.f32	s16, s5
 8020cce:	eef0 8a43 	vmov.f32	s17, s6
 8020cd2:	eef0 ba44 	vmov.f32	s23, s8
 8020cd6:	eeb0 ba64 	vmov.f32	s22, s9
 8020cda:	eef0 aa45 	vmov.f32	s21, s10
 8020cde:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020ce0:	2b00      	cmp	r3, #0
 8020ce2:	dc03      	bgt.n	8020cec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8020ce4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020ce6:	2b00      	cmp	r3, #0
 8020ce8:	f340 83b4 	ble.w	8021454 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 8020cec:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020cee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020cf2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020cf6:	1e48      	subs	r0, r1, #1
 8020cf8:	1e55      	subs	r5, r2, #1
 8020cfa:	9b06      	ldr	r3, [sp, #24]
 8020cfc:	2b00      	cmp	r3, #0
 8020cfe:	f340 8163 	ble.w	8020fc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 8020d02:	9e25      	ldr	r6, [sp, #148]	; 0x94
 8020d04:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020d06:	1436      	asrs	r6, r6, #16
 8020d08:	ea4f 4323 	mov.w	r3, r3, asr #16
 8020d0c:	d406      	bmi.n	8020d1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020d0e:	4286      	cmp	r6, r0
 8020d10:	da04      	bge.n	8020d1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020d12:	2b00      	cmp	r3, #0
 8020d14:	db02      	blt.n	8020d1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020d16:	42ab      	cmp	r3, r5
 8020d18:	f2c0 8157 	blt.w	8020fca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020d1c:	3601      	adds	r6, #1
 8020d1e:	f100 8144 	bmi.w	8020faa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8020d22:	42b1      	cmp	r1, r6
 8020d24:	f2c0 8141 	blt.w	8020faa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8020d28:	3301      	adds	r3, #1
 8020d2a:	f100 813e 	bmi.w	8020faa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8020d2e:	429a      	cmp	r2, r3
 8020d30:	f2c0 813b 	blt.w	8020faa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8020d34:	9b06      	ldr	r3, [sp, #24]
 8020d36:	9f07      	ldr	r7, [sp, #28]
 8020d38:	930f      	str	r3, [sp, #60]	; 0x3c
 8020d3a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8020d3e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020d40:	2b00      	cmp	r3, #0
 8020d42:	f340 8164 	ble.w	802100e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 8020d46:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020d48:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8020d4a:	1418      	asrs	r0, r3, #16
 8020d4c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020d4e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8020d52:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020d54:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8020d58:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020d5a:	142d      	asrs	r5, r5, #16
 8020d5c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8020d60:	f100 81ee 	bmi.w	8021140 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8020d64:	f102 3eff 	add.w	lr, r2, #4294967295
 8020d68:	4575      	cmp	r5, lr
 8020d6a:	f280 81e9 	bge.w	8021140 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8020d6e:	2800      	cmp	r0, #0
 8020d70:	f2c0 81e6 	blt.w	8021140 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8020d74:	f103 3eff 	add.w	lr, r3, #4294967295
 8020d78:	4570      	cmp	r0, lr
 8020d7a:	f280 81e1 	bge.w	8021140 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8020d7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020d80:	b212      	sxth	r2, r2
 8020d82:	fb00 5002 	mla	r0, r0, r2, r5
 8020d86:	fa1f fe81 	uxth.w	lr, r1
 8020d8a:	eb03 0a00 	add.w	sl, r3, r0
 8020d8e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8020d92:	f813 9000 	ldrb.w	r9, [r3, r0]
 8020d96:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8020d9a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8020d9e:	b29b      	uxth	r3, r3
 8020da0:	f1bc 0f00 	cmp.w	ip, #0
 8020da4:	f000 8179 	beq.w	802109a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 8020da8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8020dac:	940a      	str	r4, [sp, #40]	; 0x28
 8020dae:	eb0a 0b02 	add.w	fp, sl, r2
 8020db2:	fa1f fa8c 	uxth.w	sl, ip
 8020db6:	fb0a fe0e 	mul.w	lr, sl, lr
 8020dba:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8020dbe:	fa1f fa8a 	uxth.w	sl, sl
 8020dc2:	eba5 050e 	sub.w	r5, r5, lr
 8020dc6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8020dca:	940b      	str	r4, [sp, #44]	; 0x2c
 8020dcc:	eba3 030a 	sub.w	r3, r3, sl
 8020dd0:	b2ad      	uxth	r5, r5
 8020dd2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020dd4:	b29b      	uxth	r3, r3
 8020dd6:	fb08 f505 	mul.w	r5, r8, r5
 8020dda:	fb09 5303 	mla	r3, r9, r3, r5
 8020dde:	fb0a 3304 	mla	r3, sl, r4, r3
 8020de2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020de4:	fb0e 3304 	mla	r3, lr, r4, r3
 8020de8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020dec:	2b00      	cmp	r3, #0
 8020dee:	f000 80cf 	beq.w	8020f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8020df2:	9c08      	ldr	r4, [sp, #32]
 8020df4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020df8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8020dfc:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8020e00:	f000 8150 	beq.w	80210a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 8020e04:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8020e08:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8020e0c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020e10:	fb09 f000 	mul.w	r0, r9, r0
 8020e14:	fb0a fe0e 	mul.w	lr, sl, lr
 8020e18:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8020e1c:	f100 0b20 	add.w	fp, r0, #32
 8020e20:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8020e24:	44ce      	add	lr, r9
 8020e26:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8020e2a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020e2e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8020e32:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8020e36:	ea4e 0909 	orr.w	r9, lr, r9
 8020e3a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8020e3e:	8868      	ldrh	r0, [r5, #2]
 8020e40:	d019      	beq.n	8020e76 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8020e42:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8020e46:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8020e4a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020e4e:	fb08 f800 	mul.w	r8, r8, r0
 8020e52:	fb0a fe0e 	mul.w	lr, sl, lr
 8020e56:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8020e5a:	f108 0b20 	add.w	fp, r8, #32
 8020e5e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8020e62:	4486      	add	lr, r0
 8020e64:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8020e68:	0a00      	lsrs	r0, r0, #8
 8020e6a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8020e6e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020e72:	ea4e 0000 	orr.w	r0, lr, r0
 8020e76:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8020e7a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8020e7e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8020e82:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8020e86:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020e8a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020e8e:	ea4e 0909 	orr.w	r9, lr, r9
 8020e92:	ea4a 0000 	orr.w	r0, sl, r0
 8020e96:	f1bc 0f00 	cmp.w	ip, #0
 8020e9a:	f000 8105 	beq.w	80210a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 8020e9e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8020ea2:	3a01      	subs	r2, #1
 8020ea4:	0052      	lsls	r2, r2, #1
 8020ea6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020ea8:	3202      	adds	r2, #2
 8020eaa:	2cff      	cmp	r4, #255	; 0xff
 8020eac:	eb05 0e02 	add.w	lr, r5, r2
 8020eb0:	5aaa      	ldrh	r2, [r5, r2]
 8020eb2:	d018      	beq.n	8020ee6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8020eb4:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8020eb8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020ebc:	fb04 fa02 	mul.w	sl, r4, r2
 8020ec0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8020ec4:	fb08 f805 	mul.w	r8, r8, r5
 8020ec8:	f10a 0520 	add.w	r5, sl, #32
 8020ecc:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8020ed0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8020ed4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020ed8:	4442      	add	r2, r8
 8020eda:	0a2d      	lsrs	r5, r5, #8
 8020edc:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8020ee0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020ee4:	432a      	orrs	r2, r5
 8020ee6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020ee8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8020eec:	2cff      	cmp	r4, #255	; 0xff
 8020eee:	d01a      	beq.n	8020f26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8020ef0:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8020ef4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020ef8:	fb04 fa05 	mul.w	sl, r4, r5
 8020efc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8020f00:	fb08 f80e 	mul.w	r8, r8, lr
 8020f04:	f10a 0e20 	add.w	lr, sl, #32
 8020f08:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8020f0c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8020f10:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8020f14:	4445      	add	r5, r8
 8020f16:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020f1a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8020f1e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8020f22:	ea45 050e 	orr.w	r5, r5, lr
 8020f26:	fb1c fe01 	smulbb	lr, ip, r1
 8020f2a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8020f2e:	f1cc 0810 	rsb	r8, ip, #16
 8020f32:	eba8 0801 	sub.w	r8, r8, r1
 8020f36:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8020f3a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8020f3e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8020f42:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8020f46:	4341      	muls	r1, r0
 8020f48:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8020f4c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020f50:	ea4a 0202 	orr.w	r2, sl, r2
 8020f54:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8020f58:	fb09 1108 	mla	r1, r9, r8, r1
 8020f5c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020f60:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8020f64:	fb0c 1102 	mla	r1, ip, r2, r1
 8020f68:	ea4b 0505 	orr.w	r5, fp, r5
 8020f6c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8020f70:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8020f74:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8020f78:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020f7c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020f80:	ea42 0e0e 	orr.w	lr, r2, lr
 8020f84:	fa1f f28e 	uxth.w	r2, lr
 8020f88:	2bff      	cmp	r3, #255	; 0xff
 8020f8a:	f040 80a1 	bne.w	80210d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x444>
 8020f8e:	803a      	strh	r2, [r7, #0]
 8020f90:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020f92:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8020f94:	4413      	add	r3, r2
 8020f96:	9325      	str	r3, [sp, #148]	; 0x94
 8020f98:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8020f9a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020f9c:	441a      	add	r2, r3
 8020f9e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020fa0:	9226      	str	r2, [sp, #152]	; 0x98
 8020fa2:	3b01      	subs	r3, #1
 8020fa4:	3702      	adds	r7, #2
 8020fa6:	930f      	str	r3, [sp, #60]	; 0x3c
 8020fa8:	e6c9      	b.n	8020d3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8020faa:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020fac:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 8020fae:	9c26      	ldr	r4, [sp, #152]	; 0x98
 8020fb0:	4433      	add	r3, r6
 8020fb2:	9325      	str	r3, [sp, #148]	; 0x94
 8020fb4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020fb6:	441c      	add	r4, r3
 8020fb8:	9b06      	ldr	r3, [sp, #24]
 8020fba:	9426      	str	r4, [sp, #152]	; 0x98
 8020fbc:	3b01      	subs	r3, #1
 8020fbe:	9306      	str	r3, [sp, #24]
 8020fc0:	9b07      	ldr	r3, [sp, #28]
 8020fc2:	3302      	adds	r3, #2
 8020fc4:	9307      	str	r3, [sp, #28]
 8020fc6:	e698      	b.n	8020cfa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020fc8:	d028      	beq.n	802101c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8020fca:	9b06      	ldr	r3, [sp, #24]
 8020fcc:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8020fce:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8020fd0:	3b01      	subs	r3, #1
 8020fd2:	fb00 5003 	mla	r0, r0, r3, r5
 8020fd6:	1400      	asrs	r0, r0, #16
 8020fd8:	f53f aeac 	bmi.w	8020d34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8020fdc:	3901      	subs	r1, #1
 8020fde:	4288      	cmp	r0, r1
 8020fe0:	f6bf aea8 	bge.w	8020d34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8020fe4:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8020fe6:	9826      	ldr	r0, [sp, #152]	; 0x98
 8020fe8:	fb01 0303 	mla	r3, r1, r3, r0
 8020fec:	141b      	asrs	r3, r3, #16
 8020fee:	f53f aea1 	bmi.w	8020d34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8020ff2:	3a01      	subs	r2, #1
 8020ff4:	4293      	cmp	r3, r2
 8020ff6:	f6bf ae9d 	bge.w	8020d34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8020ffa:	9b06      	ldr	r3, [sp, #24]
 8020ffc:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8021000:	930f      	str	r3, [sp, #60]	; 0x3c
 8021002:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021006:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021008:	2b00      	cmp	r3, #0
 802100a:	f300 80b6 	bgt.w	802117a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 802100e:	9b06      	ldr	r3, [sp, #24]
 8021010:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021014:	9b07      	ldr	r3, [sp, #28]
 8021016:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802101a:	9307      	str	r3, [sp, #28]
 802101c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802101e:	2b00      	cmp	r3, #0
 8021020:	f340 8218 	ble.w	8021454 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 8021024:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8021028:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802102c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8021030:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021032:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8021036:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802103a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 802103e:	eef0 6a48 	vmov.f32	s13, s16
 8021042:	ee69 7a27 	vmul.f32	s15, s18, s15
 8021046:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802104a:	ee37 8a48 	vsub.f32	s16, s14, s16
 802104e:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8021052:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8021056:	eef0 6a68 	vmov.f32	s13, s17
 802105a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 802105e:	ee18 2a10 	vmov	r2, s16
 8021062:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8021066:	fb92 f3f3 	sdiv	r3, r2, r3
 802106a:	ee18 2a90 	vmov	r2, s17
 802106e:	9327      	str	r3, [sp, #156]	; 0x9c
 8021070:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021072:	fb92 f3f3 	sdiv	r3, r2, r3
 8021076:	9328      	str	r3, [sp, #160]	; 0xa0
 8021078:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802107a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802107c:	3b01      	subs	r3, #1
 802107e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021082:	930e      	str	r3, [sp, #56]	; 0x38
 8021084:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021086:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 802108a:	bf08      	it	eq
 802108c:	4613      	moveq	r3, r2
 802108e:	9306      	str	r3, [sp, #24]
 8021090:	eef0 8a67 	vmov.f32	s17, s15
 8021094:	eeb0 8a47 	vmov.f32	s16, s14
 8021098:	e621      	b.n	8020cde <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 802109a:	fb08 f505 	mul.w	r5, r8, r5
 802109e:	fb09 5303 	mla	r3, r9, r3, r5
 80210a2:	e6a1      	b.n	8020de8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80210a4:	4681      	mov	r9, r0
 80210a6:	e6c8      	b.n	8020e3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80210a8:	f1c1 0210 	rsb	r2, r1, #16
 80210ac:	4341      	muls	r1, r0
 80210ae:	fb09 1902 	mla	r9, r9, r2, r1
 80210b2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80210b6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80210ba:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80210be:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80210c2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80210c6:	ea42 0909 	orr.w	r9, r2, r9
 80210ca:	fa1f f289 	uxth.w	r2, r9
 80210ce:	e75b      	b.n	8020f88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80210d0:	f8b7 c000 	ldrh.w	ip, [r7]
 80210d4:	43db      	mvns	r3, r3
 80210d6:	ea4f 202c 	mov.w	r0, ip, asr #8
 80210da:	fa5f fe83 	uxtb.w	lr, r3
 80210de:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80210e2:	fb00 f00e 	mul.w	r0, r0, lr
 80210e6:	1c41      	adds	r1, r0, #1
 80210e8:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80210ec:	1211      	asrs	r1, r2, #8
 80210ee:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80210f2:	f021 0107 	bic.w	r1, r1, #7
 80210f6:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80210fa:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80210fe:	48d8      	ldr	r0, [pc, #864]	; (8021460 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 8021100:	fb05 f50e 	mul.w	r5, r5, lr
 8021104:	b2c9      	uxtb	r1, r1
 8021106:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 802110a:	1c69      	adds	r1, r5, #1
 802110c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8021110:	10d1      	asrs	r1, r2, #3
 8021112:	f021 0103 	bic.w	r1, r1, #3
 8021116:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 802111a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802111e:	b2db      	uxtb	r3, r3
 8021120:	00c9      	lsls	r1, r1, #3
 8021122:	fb03 f30e 	mul.w	r3, r3, lr
 8021126:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802112a:	4301      	orrs	r1, r0
 802112c:	1c58      	adds	r0, r3, #1
 802112e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8021132:	00d2      	lsls	r2, r2, #3
 8021134:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8021138:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802113c:	430a      	orrs	r2, r1
 802113e:	e726      	b.n	8020f8e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8021140:	f115 0e01 	adds.w	lr, r5, #1
 8021144:	f53f af24 	bmi.w	8020f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8021148:	4572      	cmp	r2, lr
 802114a:	f6ff af21 	blt.w	8020f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 802114e:	f110 0e01 	adds.w	lr, r0, #1
 8021152:	f53f af1d 	bmi.w	8020f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8021156:	4573      	cmp	r3, lr
 8021158:	f6ff af1a 	blt.w	8020f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 802115c:	b21b      	sxth	r3, r3
 802115e:	b212      	sxth	r2, r2
 8021160:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8021164:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8021168:	9301      	str	r3, [sp, #4]
 802116a:	9200      	str	r2, [sp, #0]
 802116c:	4639      	mov	r1, r7
 802116e:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8021172:	9811      	ldr	r0, [sp, #68]	; 0x44
 8021174:	f7ff fbf4 	bl	8020960 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8021178:	e70a      	b.n	8020f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 802117a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 802117c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021180:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8021182:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8021186:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021188:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802118c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802118e:	141f      	asrs	r7, r3, #16
 8021190:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021192:	141b      	asrs	r3, r3, #16
 8021194:	fb01 3707 	mla	r7, r1, r7, r3
 8021198:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802119a:	fa1f fc82 	uxth.w	ip, r2
 802119e:	eb03 0a07 	add.w	sl, r3, r7
 80211a2:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80211a6:	f813 9007 	ldrb.w	r9, [r3, r7]
 80211aa:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80211ae:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80211b2:	b29b      	uxth	r3, r3
 80211b4:	2d00      	cmp	r5, #0
 80211b6:	f000 80fe 	beq.w	80213b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72a>
 80211ba:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80211be:	940c      	str	r4, [sp, #48]	; 0x30
 80211c0:	eb0a 0b01 	add.w	fp, sl, r1
 80211c4:	fa1f fa85 	uxth.w	sl, r5
 80211c8:	fb0a fc0c 	mul.w	ip, sl, ip
 80211cc:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80211d0:	fa1f fa8a 	uxth.w	sl, sl
 80211d4:	eba0 000c 	sub.w	r0, r0, ip
 80211d8:	eba3 030a 	sub.w	r3, r3, sl
 80211dc:	b280      	uxth	r0, r0
 80211de:	fb08 f000 	mul.w	r0, r8, r0
 80211e2:	b29b      	uxth	r3, r3
 80211e4:	fb09 0303 	mla	r3, r9, r3, r0
 80211e8:	980c      	ldr	r0, [sp, #48]	; 0x30
 80211ea:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80211ee:	940d      	str	r4, [sp, #52]	; 0x34
 80211f0:	fb0a 3300 	mla	r3, sl, r0, r3
 80211f4:	fb0c 3304 	mla	r3, ip, r4, r3
 80211f8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80211fc:	2b00      	cmp	r3, #0
 80211fe:	f000 80cc 	beq.w	802139a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 8021202:	9808      	ldr	r0, [sp, #32]
 8021204:	9c08      	ldr	r4, [sp, #32]
 8021206:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802120a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802120e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8021212:	f000 80d5 	beq.w	80213c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8021216:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802121a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802121e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021222:	fb09 f707 	mul.w	r7, r9, r7
 8021226:	fb0a fc0c 	mul.w	ip, sl, ip
 802122a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802122e:	f107 0b20 	add.w	fp, r7, #32
 8021232:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021236:	44cc      	add	ip, r9
 8021238:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 802123c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021240:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021244:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021248:	ea4c 0909 	orr.w	r9, ip, r9
 802124c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021250:	8847      	ldrh	r7, [r0, #2]
 8021252:	d019      	beq.n	8021288 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8021254:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021258:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802125c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021260:	fb08 f807 	mul.w	r8, r8, r7
 8021264:	fb0a fc0c 	mul.w	ip, sl, ip
 8021268:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 802126c:	f108 0b20 	add.w	fp, r8, #32
 8021270:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021274:	44bc      	add	ip, r7
 8021276:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 802127a:	0a3f      	lsrs	r7, r7, #8
 802127c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021280:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021284:	ea4c 0707 	orr.w	r7, ip, r7
 8021288:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 802128c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8021290:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8021294:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021298:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802129c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80212a0:	ea4c 0909 	orr.w	r9, ip, r9
 80212a4:	ea4a 0707 	orr.w	r7, sl, r7
 80212a8:	2d00      	cmp	r5, #0
 80212aa:	f000 808b 	beq.w	80213c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x738>
 80212ae:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80212b2:	3901      	subs	r1, #1
 80212b4:	0049      	lsls	r1, r1, #1
 80212b6:	3102      	adds	r1, #2
 80212b8:	eb00 0c01 	add.w	ip, r0, r1
 80212bc:	5a41      	ldrh	r1, [r0, r1]
 80212be:	980c      	ldr	r0, [sp, #48]	; 0x30
 80212c0:	28ff      	cmp	r0, #255	; 0xff
 80212c2:	d019      	beq.n	80212f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 80212c4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80212c6:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80212ca:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80212ce:	fb04 fa01 	mul.w	sl, r4, r1
 80212d2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80212d6:	fb08 f800 	mul.w	r8, r8, r0
 80212da:	f10a 0020 	add.w	r0, sl, #32
 80212de:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80212e2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80212e6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80212ea:	4441      	add	r1, r8
 80212ec:	0a00      	lsrs	r0, r0, #8
 80212ee:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80212f2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80212f6:	4301      	orrs	r1, r0
 80212f8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80212fa:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80212fe:	2cff      	cmp	r4, #255	; 0xff
 8021300:	d01a      	beq.n	8021338 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8021302:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8021306:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802130a:	fb04 fa00 	mul.w	sl, r4, r0
 802130e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021312:	fb08 f80c 	mul.w	r8, r8, ip
 8021316:	f10a 0c20 	add.w	ip, sl, #32
 802131a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802131e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8021322:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021326:	4440      	add	r0, r8
 8021328:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802132c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8021330:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8021334:	ea40 000c 	orr.w	r0, r0, ip
 8021338:	fb15 fc02 	smulbb	ip, r5, r2
 802133c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8021340:	f1c5 0810 	rsb	r8, r5, #16
 8021344:	eba8 0802 	sub.w	r8, r8, r2
 8021348:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 802134c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8021350:	437a      	muls	r2, r7
 8021352:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8021356:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 802135a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802135e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021362:	fb09 2208 	mla	r2, r9, r8, r2
 8021366:	ea4a 0101 	orr.w	r1, sl, r1
 802136a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802136e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021372:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021376:	fb05 2201 	mla	r2, r5, r1, r2
 802137a:	ea4b 0000 	orr.w	r0, fp, r0
 802137e:	fb0c 2200 	mla	r2, ip, r0, r2
 8021382:	0d57      	lsrs	r7, r2, #21
 8021384:	0952      	lsrs	r2, r2, #5
 8021386:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802138a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802138e:	433a      	orrs	r2, r7
 8021390:	2bff      	cmp	r3, #255	; 0xff
 8021392:	b292      	uxth	r2, r2
 8021394:	d127      	bne.n	80213e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8021396:	f8ae 2000 	strh.w	r2, [lr]
 802139a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 802139c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 802139e:	4413      	add	r3, r2
 80213a0:	9325      	str	r3, [sp, #148]	; 0x94
 80213a2:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80213a4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80213a6:	441a      	add	r2, r3
 80213a8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80213aa:	9226      	str	r2, [sp, #152]	; 0x98
 80213ac:	3b01      	subs	r3, #1
 80213ae:	f10e 0e02 	add.w	lr, lr, #2
 80213b2:	930f      	str	r3, [sp, #60]	; 0x3c
 80213b4:	e627      	b.n	8021006 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80213b6:	fb08 f000 	mul.w	r0, r8, r0
 80213ba:	fb09 0303 	mla	r3, r9, r3, r0
 80213be:	e71b      	b.n	80211f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 80213c0:	46b9      	mov	r9, r7
 80213c2:	e743      	b.n	802124c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 80213c4:	f1c2 0110 	rsb	r1, r2, #16
 80213c8:	437a      	muls	r2, r7
 80213ca:	fb09 2901 	mla	r9, r9, r1, r2
 80213ce:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80213d2:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80213d6:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80213da:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80213de:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80213e2:	4302      	orrs	r2, r0
 80213e4:	e7d4      	b.n	8021390 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 80213e6:	f8be 7000 	ldrh.w	r7, [lr]
 80213ea:	4c1d      	ldr	r4, [pc, #116]	; (8021460 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 80213ec:	43db      	mvns	r3, r3
 80213ee:	1238      	asrs	r0, r7, #8
 80213f0:	fa5f fc83 	uxtb.w	ip, r3
 80213f4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80213f8:	10fd      	asrs	r5, r7, #3
 80213fa:	fb00 f00c 	mul.w	r0, r0, ip
 80213fe:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8021402:	fb05 f10c 	mul.w	r1, r5, ip
 8021406:	1c45      	adds	r5, r0, #1
 8021408:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802140c:	1215      	asrs	r5, r2, #8
 802140e:	f025 0507 	bic.w	r5, r5, #7
 8021412:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8021416:	1c4d      	adds	r5, r1, #1
 8021418:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802141c:	10d1      	asrs	r1, r2, #3
 802141e:	f021 0103 	bic.w	r1, r1, #3
 8021422:	00fb      	lsls	r3, r7, #3
 8021424:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8021428:	b2db      	uxtb	r3, r3
 802142a:	b2c0      	uxtb	r0, r0
 802142c:	00c9      	lsls	r1, r1, #3
 802142e:	fb03 f30c 	mul.w	r3, r3, ip
 8021432:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021436:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 802143a:	4308      	orrs	r0, r1
 802143c:	1c59      	adds	r1, r3, #1
 802143e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8021442:	00d2      	lsls	r2, r2, #3
 8021444:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8021448:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 802144c:	4318      	orrs	r0, r3
 802144e:	f8ae 0000 	strh.w	r0, [lr]
 8021452:	e7a2      	b.n	802139a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 8021454:	b013      	add	sp, #76	; 0x4c
 8021456:	ecbd 8b08 	vpop	{d8-d11}
 802145a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802145e:	bf00      	nop
 8021460:	fffff800 	.word	0xfffff800

08021464 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8021464:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8021468:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 802146c:	fb0c 4e03 	mla	lr, ip, r3, r4
 8021470:	f1bc 0f00 	cmp.w	ip, #0
 8021474:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8021478:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 802147c:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8021480:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8021484:	8808      	ldrh	r0, [r1, #0]
 8021486:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 802148a:	db2f      	blt.n	80214ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 802148c:	45e2      	cmp	sl, ip
 802148e:	dd2d      	ble.n	80214ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8021490:	2c00      	cmp	r4, #0
 8021492:	db29      	blt.n	80214e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8021494:	42a3      	cmp	r3, r4
 8021496:	dd27      	ble.n	80214e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8021498:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 802149c:	1c62      	adds	r2, r4, #1
 802149e:	d428      	bmi.n	80214f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 80214a0:	4293      	cmp	r3, r2
 80214a2:	dd26      	ble.n	80214f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 80214a4:	b32f      	cbz	r7, 80214f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 80214a6:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 80214aa:	f11c 0c01 	adds.w	ip, ip, #1
 80214ae:	d424      	bmi.n	80214fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 80214b0:	45e2      	cmp	sl, ip
 80214b2:	dd22      	ble.n	80214fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 80214b4:	2e00      	cmp	r6, #0
 80214b6:	f000 809d 	beq.w	80215f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x190>
 80214ba:	2c00      	cmp	r4, #0
 80214bc:	db1b      	blt.n	80214f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 80214be:	42a3      	cmp	r3, r4
 80214c0:	dd19      	ble.n	80214f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 80214c2:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 80214c6:	3401      	adds	r4, #1
 80214c8:	d41a      	bmi.n	8021500 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 80214ca:	42a3      	cmp	r3, r4
 80214cc:	dd18      	ble.n	8021500 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 80214ce:	b1cf      	cbz	r7, 8021504 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 80214d0:	3301      	adds	r3, #1
 80214d2:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 80214d6:	2f0f      	cmp	r7, #15
 80214d8:	d915      	bls.n	8021506 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 80214da:	4b49      	ldr	r3, [pc, #292]	; (8021600 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 80214dc:	4a49      	ldr	r2, [pc, #292]	; (8021604 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 80214de:	484a      	ldr	r0, [pc, #296]	; (8021608 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 80214e0:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 80214e4:	f002 ffa8 	bl	8024438 <__assert_func>
 80214e8:	4681      	mov	r9, r0
 80214ea:	e7d7      	b.n	802149c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 80214ec:	4686      	mov	lr, r0
 80214ee:	4681      	mov	r9, r0
 80214f0:	e7db      	b.n	80214aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 80214f2:	4686      	mov	lr, r0
 80214f4:	e7d9      	b.n	80214aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 80214f6:	4684      	mov	ip, r0
 80214f8:	e7e5      	b.n	80214c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 80214fa:	4603      	mov	r3, r0
 80214fc:	4684      	mov	ip, r0
 80214fe:	e7ea      	b.n	80214d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8021500:	4603      	mov	r3, r0
 8021502:	e7e8      	b.n	80214d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8021504:	4603      	mov	r3, r0
 8021506:	2e0f      	cmp	r6, #15
 8021508:	d8e7      	bhi.n	80214da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 802150a:	ea4f 4409 	mov.w	r4, r9, lsl #16
 802150e:	fb17 f806 	smulbb	r8, r7, r6
 8021512:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8021516:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 802151a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802151e:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8021522:	ea44 0909 	orr.w	r9, r4, r9
 8021526:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802152a:	f1c6 0410 	rsb	r4, r6, #16
 802152e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021532:	1be4      	subs	r4, r4, r7
 8021534:	041a      	lsls	r2, r3, #16
 8021536:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 802153a:	ea4a 0e0e 	orr.w	lr, sl, lr
 802153e:	fb07 fe0e 	mul.w	lr, r7, lr
 8021542:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8021546:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 802154a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802154e:	fb04 e409 	mla	r4, r4, r9, lr
 8021552:	4313      	orrs	r3, r2
 8021554:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8021558:	fb08 4303 	mla	r3, r8, r3, r4
 802155c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8021560:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 8021564:	4322      	orrs	r2, r4
 8021566:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 802156a:	fb06 3202 	mla	r2, r6, r2, r3
 802156e:	0d53      	lsrs	r3, r2, #21
 8021570:	0952      	lsrs	r2, r2, #5
 8021572:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021576:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802157a:	431a      	orrs	r2, r3
 802157c:	b293      	uxth	r3, r2
 802157e:	b2af      	uxth	r7, r5
 8021580:	1202      	asrs	r2, r0, #8
 8021582:	43ed      	mvns	r5, r5
 8021584:	b2ed      	uxtb	r5, r5
 8021586:	ea4f 2c23 	mov.w	ip, r3, asr #8
 802158a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802158e:	fb12 f205 	smulbb	r2, r2, r5
 8021592:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8021596:	fb0c 2c07 	mla	ip, ip, r7, r2
 802159a:	00dc      	lsls	r4, r3, #3
 802159c:	10da      	asrs	r2, r3, #3
 802159e:	10c6      	asrs	r6, r0, #3
 80215a0:	00c3      	lsls	r3, r0, #3
 80215a2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80215a6:	b2db      	uxtb	r3, r3
 80215a8:	fb16 f605 	smulbb	r6, r6, r5
 80215ac:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80215b0:	b2e4      	uxtb	r4, r4
 80215b2:	fb13 f305 	smulbb	r3, r3, r5
 80215b6:	fa1f fc8c 	uxth.w	ip, ip
 80215ba:	fb02 6207 	mla	r2, r2, r7, r6
 80215be:	fb04 3307 	mla	r3, r4, r7, r3
 80215c2:	b296      	uxth	r6, r2
 80215c4:	b29a      	uxth	r2, r3
 80215c6:	f10c 0301 	add.w	r3, ip, #1
 80215ca:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80215ce:	1c53      	adds	r3, r2, #1
 80215d0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80215d4:	1c72      	adds	r2, r6, #1
 80215d6:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 80215da:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80215de:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80215e2:	0952      	lsrs	r2, r2, #5
 80215e4:	ea43 030c 	orr.w	r3, r3, ip
 80215e8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80215ec:	4313      	orrs	r3, r2
 80215ee:	800b      	strh	r3, [r1, #0]
 80215f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80215f4:	2f0f      	cmp	r7, #15
 80215f6:	f63f af70 	bhi.w	80214da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 80215fa:	4603      	mov	r3, r0
 80215fc:	4684      	mov	ip, r0
 80215fe:	e784      	b.n	802150a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 8021600:	0802aeb2 	.word	0x0802aeb2
 8021604:	0802b52b 	.word	0x0802b52b
 8021608:	0802af36 	.word	0x0802af36

0802160c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802160c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021610:	ed2d 8b08 	vpush	{d8-d11}
 8021614:	b093      	sub	sp, #76	; 0x4c
 8021616:	461d      	mov	r5, r3
 8021618:	9210      	str	r2, [sp, #64]	; 0x40
 802161a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802161c:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 8021620:	920b      	str	r2, [sp, #44]	; 0x2c
 8021622:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 8021626:	910a      	str	r1, [sp, #40]	; 0x28
 8021628:	6859      	ldr	r1, [r3, #4]
 802162a:	681b      	ldr	r3, [r3, #0]
 802162c:	9011      	str	r0, [sp, #68]	; 0x44
 802162e:	fb01 2707 	mla	r7, r1, r7, r2
 8021632:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8021636:	9307      	str	r3, [sp, #28]
 8021638:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802163a:	681b      	ldr	r3, [r3, #0]
 802163c:	9309      	str	r3, [sp, #36]	; 0x24
 802163e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021640:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8021644:	43db      	mvns	r3, r3
 8021646:	b2db      	uxtb	r3, r3
 8021648:	eeb0 aa40 	vmov.f32	s20, s0
 802164c:	eef0 9a60 	vmov.f32	s19, s1
 8021650:	eeb0 9a41 	vmov.f32	s18, s2
 8021654:	eeb0 8a62 	vmov.f32	s16, s5
 8021658:	eef0 8a43 	vmov.f32	s17, s6
 802165c:	eef0 ba44 	vmov.f32	s23, s8
 8021660:	eeb0 ba64 	vmov.f32	s22, s9
 8021664:	eef0 aa45 	vmov.f32	s21, s10
 8021668:	9308      	str	r3, [sp, #32]
 802166a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802166c:	2b00      	cmp	r3, #0
 802166e:	dc03      	bgt.n	8021678 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021670:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021672:	2b00      	cmp	r3, #0
 8021674:	f340 8203 	ble.w	8021a7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8021678:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802167a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802167e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021682:	1e48      	subs	r0, r1, #1
 8021684:	f102 3cff 	add.w	ip, r2, #4294967295
 8021688:	2d00      	cmp	r5, #0
 802168a:	f340 80da 	ble.w	8021842 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 802168e:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8021692:	ea4f 4326 	mov.w	r3, r6, asr #16
 8021696:	d406      	bmi.n	80216a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8021698:	4586      	cmp	lr, r0
 802169a:	da04      	bge.n	80216a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802169c:	2b00      	cmp	r3, #0
 802169e:	db02      	blt.n	80216a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80216a0:	4563      	cmp	r3, ip
 80216a2:	f2c0 80cf 	blt.w	8021844 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80216a6:	f11e 0e01 	adds.w	lr, lr, #1
 80216aa:	f100 80c1 	bmi.w	8021830 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80216ae:	4571      	cmp	r1, lr
 80216b0:	f2c0 80be 	blt.w	8021830 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80216b4:	3301      	adds	r3, #1
 80216b6:	f100 80bb 	bmi.w	8021830 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80216ba:	429a      	cmp	r2, r3
 80216bc:	f2c0 80b8 	blt.w	8021830 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80216c0:	f8dd 801c 	ldr.w	r8, [sp, #28]
 80216c4:	46a9      	mov	r9, r5
 80216c6:	f1b9 0f00 	cmp.w	r9, #0
 80216ca:	f340 80d8 	ble.w	802187e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 80216ce:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80216d0:	1421      	asrs	r1, r4, #16
 80216d2:	ea4f 4026 	mov.w	r0, r6, asr #16
 80216d6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80216da:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80216de:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80216e2:	f100 8111 	bmi.w	8021908 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80216e6:	f10e 3aff 	add.w	sl, lr, #4294967295
 80216ea:	4551      	cmp	r1, sl
 80216ec:	f280 810c 	bge.w	8021908 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80216f0:	2800      	cmp	r0, #0
 80216f2:	f2c0 8109 	blt.w	8021908 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80216f6:	f103 3aff 	add.w	sl, r3, #4294967295
 80216fa:	4550      	cmp	r0, sl
 80216fc:	f280 8104 	bge.w	8021908 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8021700:	fa0f f38e 	sxth.w	r3, lr
 8021704:	fb00 1103 	mla	r1, r0, r3, r1
 8021708:	9809      	ldr	r0, [sp, #36]	; 0x24
 802170a:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 802170e:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8021712:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8021716:	f1bc 0f00 	cmp.w	ip, #0
 802171a:	d007      	beq.n	802172c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 802171c:	005b      	lsls	r3, r3, #1
 802171e:	eb0a 0003 	add.w	r0, sl, r3
 8021722:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8021726:	930c      	str	r3, [sp, #48]	; 0x30
 8021728:	8843      	ldrh	r3, [r0, #2]
 802172a:	930d      	str	r3, [sp, #52]	; 0x34
 802172c:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8021730:	fb12 f30c 	smulbb	r3, r2, ip
 8021734:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021738:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 802173c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8021740:	10db      	asrs	r3, r3, #3
 8021742:	ea40 000e 	orr.w	r0, r0, lr
 8021746:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802174a:	f1cc 0e10 	rsb	lr, ip, #16
 802174e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021752:	ebae 0e02 	sub.w	lr, lr, r2
 8021756:	ea4a 0101 	orr.w	r1, sl, r1
 802175a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802175e:	4351      	muls	r1, r2
 8021760:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8021762:	9f08      	ldr	r7, [sp, #32]
 8021764:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8021768:	fb0e 1e00 	mla	lr, lr, r0, r1
 802176c:	0410      	lsls	r0, r2, #16
 802176e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8021772:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021776:	4310      	orrs	r0, r2
 8021778:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802177a:	990c      	ldr	r1, [sp, #48]	; 0x30
 802177c:	0412      	lsls	r2, r2, #16
 802177e:	fb03 e000 	mla	r0, r3, r0, lr
 8021782:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8021786:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 802178a:	ea42 020e 	orr.w	r2, r2, lr
 802178e:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8021792:	fb03 0302 	mla	r3, r3, r2, r0
 8021796:	0d5a      	lsrs	r2, r3, #21
 8021798:	095b      	lsrs	r3, r3, #5
 802179a:	f8b8 0000 	ldrh.w	r0, [r8]
 802179e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80217a2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80217a6:	4313      	orrs	r3, r2
 80217a8:	b29b      	uxth	r3, r3
 80217aa:	1201      	asrs	r1, r0, #8
 80217ac:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80217b0:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80217b4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80217b8:	fb11 f107 	smulbb	r1, r1, r7
 80217bc:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80217c0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80217c4:	00c0      	lsls	r0, r0, #3
 80217c6:	fb0c 1c02 	mla	ip, ip, r2, r1
 80217ca:	b2c0      	uxtb	r0, r0
 80217cc:	10d9      	asrs	r1, r3, #3
 80217ce:	00db      	lsls	r3, r3, #3
 80217d0:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80217d4:	b2db      	uxtb	r3, r3
 80217d6:	fb10 f007 	smulbb	r0, r0, r7
 80217da:	fa1f fc8c 	uxth.w	ip, ip
 80217de:	fb03 0302 	mla	r3, r3, r2, r0
 80217e2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80217e6:	fb1e fe07 	smulbb	lr, lr, r7
 80217ea:	fb01 e102 	mla	r1, r1, r2, lr
 80217ee:	b29a      	uxth	r2, r3
 80217f0:	f10c 0301 	add.w	r3, ip, #1
 80217f4:	b289      	uxth	r1, r1
 80217f6:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80217fa:	1c53      	adds	r3, r2, #1
 80217fc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021800:	1c4a      	adds	r2, r1, #1
 8021802:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021806:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 802180a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802180e:	0949      	lsrs	r1, r1, #5
 8021810:	ea43 030c 	orr.w	r3, r3, ip
 8021814:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021818:	430b      	orrs	r3, r1
 802181a:	f8a8 3000 	strh.w	r3, [r8]
 802181e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021820:	441c      	add	r4, r3
 8021822:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021824:	f108 0802 	add.w	r8, r8, #2
 8021828:	441e      	add	r6, r3
 802182a:	f109 39ff 	add.w	r9, r9, #4294967295
 802182e:	e74a      	b.n	80216c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 8021830:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021832:	441c      	add	r4, r3
 8021834:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021836:	441e      	add	r6, r3
 8021838:	9b07      	ldr	r3, [sp, #28]
 802183a:	3302      	adds	r3, #2
 802183c:	3d01      	subs	r5, #1
 802183e:	9307      	str	r3, [sp, #28]
 8021840:	e722      	b.n	8021688 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8021842:	d022      	beq.n	802188a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8021844:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8021846:	1e6b      	subs	r3, r5, #1
 8021848:	fb00 4003 	mla	r0, r0, r3, r4
 802184c:	1400      	asrs	r0, r0, #16
 802184e:	f53f af37 	bmi.w	80216c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8021852:	3901      	subs	r1, #1
 8021854:	4288      	cmp	r0, r1
 8021856:	f6bf af33 	bge.w	80216c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 802185a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 802185c:	fb01 6303 	mla	r3, r1, r3, r6
 8021860:	141b      	asrs	r3, r3, #16
 8021862:	f53f af2d 	bmi.w	80216c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8021866:	3a01      	subs	r2, #1
 8021868:	4293      	cmp	r3, r2
 802186a:	f6bf af29 	bge.w	80216c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 802186e:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8021872:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8021876:	46a8      	mov	r8, r5
 8021878:	f1b8 0f00 	cmp.w	r8, #0
 802187c:	dc5e      	bgt.n	802193c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802187e:	9b07      	ldr	r3, [sp, #28]
 8021880:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8021884:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8021888:	9307      	str	r3, [sp, #28]
 802188a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802188c:	2b00      	cmp	r3, #0
 802188e:	f340 80f6 	ble.w	8021a7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8021892:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8021896:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802189a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802189e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80218a0:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80218a4:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80218a8:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80218ac:	eef0 6a48 	vmov.f32	s13, s16
 80218b0:	ee69 7a27 	vmul.f32	s15, s18, s15
 80218b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80218b8:	ee37 8a48 	vsub.f32	s16, s14, s16
 80218bc:	ee16 4a90 	vmov	r4, s13
 80218c0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80218c4:	eef0 6a68 	vmov.f32	s13, s17
 80218c8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80218cc:	ee18 2a10 	vmov	r2, s16
 80218d0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80218d4:	fb92 f3f3 	sdiv	r3, r2, r3
 80218d8:	ee18 2a90 	vmov	r2, s17
 80218dc:	9327      	str	r3, [sp, #156]	; 0x9c
 80218de:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80218e0:	fb92 f3f3 	sdiv	r3, r2, r3
 80218e4:	9328      	str	r3, [sp, #160]	; 0xa0
 80218e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80218e8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80218ea:	3b01      	subs	r3, #1
 80218ec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80218f0:	930a      	str	r3, [sp, #40]	; 0x28
 80218f2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80218f4:	ee16 6a90 	vmov	r6, s13
 80218f8:	bf14      	ite	ne
 80218fa:	461d      	movne	r5, r3
 80218fc:	4615      	moveq	r5, r2
 80218fe:	eef0 8a67 	vmov.f32	s17, s15
 8021902:	eeb0 8a47 	vmov.f32	s16, s14
 8021906:	e6b0      	b.n	802166a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8021908:	f111 0a01 	adds.w	sl, r1, #1
 802190c:	d487      	bmi.n	802181e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 802190e:	45d6      	cmp	lr, sl
 8021910:	db85      	blt.n	802181e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8021912:	f110 0a01 	adds.w	sl, r0, #1
 8021916:	d482      	bmi.n	802181e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8021918:	4553      	cmp	r3, sl
 802191a:	db80      	blt.n	802181e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 802191c:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 802191e:	9101      	str	r1, [sp, #4]
 8021920:	b21b      	sxth	r3, r3
 8021922:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8021926:	9300      	str	r3, [sp, #0]
 8021928:	e9cd c704 	strd	ip, r7, [sp, #16]
 802192c:	fa0f f38e 	sxth.w	r3, lr
 8021930:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021932:	9811      	ldr	r0, [sp, #68]	; 0x44
 8021934:	4641      	mov	r1, r8
 8021936:	f7ff fd95 	bl	8021464 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 802193a:	e770      	b.n	802181e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 802193c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802193e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8021940:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021944:	1430      	asrs	r0, r6, #16
 8021946:	1423      	asrs	r3, r4, #16
 8021948:	fb01 3000 	mla	r0, r1, r0, r3
 802194c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802194e:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8021952:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8021956:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 802195a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802195e:	8858      	ldrh	r0, [r3, #2]
 8021960:	f1be 0f00 	cmp.w	lr, #0
 8021964:	d00b      	beq.n	802197e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8021966:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802196a:	3901      	subs	r1, #1
 802196c:	0049      	lsls	r1, r1, #1
 802196e:	3102      	adds	r1, #2
 8021970:	eb03 0b01 	add.w	fp, r3, r1
 8021974:	5a5b      	ldrh	r3, [r3, r1]
 8021976:	930e      	str	r3, [sp, #56]	; 0x38
 8021978:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 802197c:	930f      	str	r3, [sp, #60]	; 0x3c
 802197e:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8021982:	fb12 f30e 	smulbb	r3, r2, lr
 8021986:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802198a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 802198e:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8021992:	10db      	asrs	r3, r3, #3
 8021994:	ea41 010c 	orr.w	r1, r1, ip
 8021998:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802199c:	f1ce 0c10 	rsb	ip, lr, #16
 80219a0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80219a4:	ebac 0c02 	sub.w	ip, ip, r2
 80219a8:	ea4b 0000 	orr.w	r0, fp, r0
 80219ac:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80219b0:	4350      	muls	r0, r2
 80219b2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80219b4:	9f08      	ldr	r7, [sp, #32]
 80219b6:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80219ba:	fb0c 0c01 	mla	ip, ip, r1, r0
 80219be:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80219c2:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 80219c6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80219c8:	980e      	ldr	r0, [sp, #56]	; 0x38
 80219ca:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80219ce:	0412      	lsls	r2, r2, #16
 80219d0:	ea4b 0101 	orr.w	r1, fp, r1
 80219d4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80219d8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80219dc:	fb03 c101 	mla	r1, r3, r1, ip
 80219e0:	4302      	orrs	r2, r0
 80219e2:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80219e6:	fb03 1202 	mla	r2, r3, r2, r1
 80219ea:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 80219ee:	0952      	lsrs	r2, r2, #5
 80219f0:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 80219f4:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80219f8:	f8b9 2000 	ldrh.w	r2, [r9]
 80219fc:	ea4b 0303 	orr.w	r3, fp, r3
 8021a00:	b29b      	uxth	r3, r3
 8021a02:	1211      	asrs	r1, r2, #8
 8021a04:	1218      	asrs	r0, r3, #8
 8021a06:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021a0a:	fb11 f107 	smulbb	r1, r1, r7
 8021a0e:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8021a12:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021a16:	00d2      	lsls	r2, r2, #3
 8021a18:	fb00 100a 	mla	r0, r0, sl, r1
 8021a1c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8021a20:	10d9      	asrs	r1, r3, #3
 8021a22:	b2d2      	uxtb	r2, r2
 8021a24:	00db      	lsls	r3, r3, #3
 8021a26:	fb1c fc07 	smulbb	ip, ip, r7
 8021a2a:	fb12 f207 	smulbb	r2, r2, r7
 8021a2e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021a32:	b2db      	uxtb	r3, r3
 8021a34:	b280      	uxth	r0, r0
 8021a36:	fb01 c10a 	mla	r1, r1, sl, ip
 8021a3a:	fb03 230a 	mla	r3, r3, sl, r2
 8021a3e:	b29b      	uxth	r3, r3
 8021a40:	b289      	uxth	r1, r1
 8021a42:	1c42      	adds	r2, r0, #1
 8021a44:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021a48:	f101 0c01 	add.w	ip, r1, #1
 8021a4c:	1c5a      	adds	r2, r3, #1
 8021a4e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8021a52:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8021a56:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021a58:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8021a5c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8021a60:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8021a64:	4310      	orrs	r0, r2
 8021a66:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8021a6a:	441c      	add	r4, r3
 8021a6c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021a6e:	ea40 000c 	orr.w	r0, r0, ip
 8021a72:	f829 0b02 	strh.w	r0, [r9], #2
 8021a76:	441e      	add	r6, r3
 8021a78:	f108 38ff 	add.w	r8, r8, #4294967295
 8021a7c:	e6fc      	b.n	8021878 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8021a7e:	b013      	add	sp, #76	; 0x4c
 8021a80:	ecbd 8b08 	vpop	{d8-d11}
 8021a84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021a88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8021a88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021a8c:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8021a90:	fb06 5c03 	mla	ip, r6, r3, r5
 8021a94:	2e00      	cmp	r6, #0
 8021a96:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 8021a9a:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 8021a9e:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 8021aa2:	8808      	ldrh	r0, [r1, #0]
 8021aa4:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8021aa8:	db2e      	blt.n	8021b08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8021aaa:	45b0      	cmp	r8, r6
 8021aac:	dd2c      	ble.n	8021b08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8021aae:	2d00      	cmp	r5, #0
 8021ab0:	db28      	blt.n	8021b04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8021ab2:	42ab      	cmp	r3, r5
 8021ab4:	dd26      	ble.n	8021b04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8021ab6:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 8021aba:	1c6a      	adds	r2, r5, #1
 8021abc:	d427      	bmi.n	8021b0e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8021abe:	4293      	cmp	r3, r2
 8021ac0:	dd25      	ble.n	8021b0e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8021ac2:	b324      	cbz	r4, 8021b0e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8021ac4:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8021ac8:	3601      	adds	r6, #1
 8021aca:	d424      	bmi.n	8021b16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8021acc:	45b0      	cmp	r8, r6
 8021ace:	dd22      	ble.n	8021b16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8021ad0:	b31f      	cbz	r7, 8021b1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 8021ad2:	2d00      	cmp	r5, #0
 8021ad4:	db1d      	blt.n	8021b12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8021ad6:	42ab      	cmp	r3, r5
 8021ad8:	dd1b      	ble.n	8021b12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8021ada:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 8021ade:	3501      	adds	r5, #1
 8021ae0:	d405      	bmi.n	8021aee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8021ae2:	42ab      	cmp	r3, r5
 8021ae4:	dd03      	ble.n	8021aee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8021ae6:	b124      	cbz	r4, 8021af2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 8021ae8:	3301      	adds	r3, #1
 8021aea:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 8021aee:	2c0f      	cmp	r4, #15
 8021af0:	d801      	bhi.n	8021af6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8021af2:	2f0f      	cmp	r7, #15
 8021af4:	d914      	bls.n	8021b20 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 8021af6:	4b27      	ldr	r3, [pc, #156]	; (8021b94 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 8021af8:	4a27      	ldr	r2, [pc, #156]	; (8021b98 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 8021afa:	4828      	ldr	r0, [pc, #160]	; (8021b9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 8021afc:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
 8021b00:	f002 fc9a 	bl	8024438 <__assert_func>
 8021b04:	4684      	mov	ip, r0
 8021b06:	e7d8      	b.n	8021aba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 8021b08:	4602      	mov	r2, r0
 8021b0a:	4684      	mov	ip, r0
 8021b0c:	e7dc      	b.n	8021ac8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8021b0e:	4602      	mov	r2, r0
 8021b10:	e7da      	b.n	8021ac8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8021b12:	4606      	mov	r6, r0
 8021b14:	e7e3      	b.n	8021ade <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 8021b16:	4606      	mov	r6, r0
 8021b18:	e7e9      	b.n	8021aee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8021b1a:	2c0f      	cmp	r4, #15
 8021b1c:	d8eb      	bhi.n	8021af6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8021b1e:	4606      	mov	r6, r0
 8021b20:	ea4f 450c 	mov.w	r5, ip, lsl #16
 8021b24:	fb14 f307 	smulbb	r3, r4, r7
 8021b28:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8021b2c:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8021b30:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8021b34:	10db      	asrs	r3, r3, #3
 8021b36:	ea45 0c0c 	orr.w	ip, r5, ip
 8021b3a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8021b3e:	f1c7 0510 	rsb	r5, r7, #16
 8021b42:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021b46:	1b2d      	subs	r5, r5, r4
 8021b48:	ea4e 0202 	orr.w	r2, lr, r2
 8021b4c:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8021b50:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8021b54:	4354      	muls	r4, r2
 8021b56:	fb05 450c 	mla	r5, r5, ip, r4
 8021b5a:	0404      	lsls	r4, r0, #16
 8021b5c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8021b60:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021b64:	4320      	orrs	r0, r4
 8021b66:	fb03 5400 	mla	r4, r3, r0, r5
 8021b6a:	0430      	lsls	r0, r6, #16
 8021b6c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8021b70:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8021b74:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 8021b78:	4330      	orrs	r0, r6
 8021b7a:	fb07 4000 	mla	r0, r7, r0, r4
 8021b7e:	0d43      	lsrs	r3, r0, #21
 8021b80:	0940      	lsrs	r0, r0, #5
 8021b82:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021b86:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021b8a:	4318      	orrs	r0, r3
 8021b8c:	8008      	strh	r0, [r1, #0]
 8021b8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021b92:	bf00      	nop
 8021b94:	0802aeb2 	.word	0x0802aeb2
 8021b98:	0802b52b 	.word	0x0802b52b
 8021b9c:	0802af36 	.word	0x0802af36

08021ba0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021ba0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021ba4:	ed2d 8b08 	vpush	{d8-d11}
 8021ba8:	b08f      	sub	sp, #60	; 0x3c
 8021baa:	461d      	mov	r5, r3
 8021bac:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021bae:	920c      	str	r2, [sp, #48]	; 0x30
 8021bb0:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 8021bb4:	9107      	str	r1, [sp, #28]
 8021bb6:	6859      	ldr	r1, [r3, #4]
 8021bb8:	681b      	ldr	r3, [r3, #0]
 8021bba:	900d      	str	r0, [sp, #52]	; 0x34
 8021bbc:	fb01 2707 	mla	r7, r1, r7, r2
 8021bc0:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8021bc4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021bc6:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8021bca:	f8d3 8000 	ldr.w	r8, [r3]
 8021bce:	eeb0 aa40 	vmov.f32	s20, s0
 8021bd2:	eef0 9a60 	vmov.f32	s19, s1
 8021bd6:	eeb0 9a41 	vmov.f32	s18, s2
 8021bda:	eeb0 8a62 	vmov.f32	s16, s5
 8021bde:	eef0 8a43 	vmov.f32	s17, s6
 8021be2:	eef0 ba44 	vmov.f32	s23, s8
 8021be6:	eeb0 ba64 	vmov.f32	s22, s9
 8021bea:	eef0 aa45 	vmov.f32	s21, s10
 8021bee:	9b07      	ldr	r3, [sp, #28]
 8021bf0:	2b00      	cmp	r3, #0
 8021bf2:	dc03      	bgt.n	8021bfc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8021bf4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021bf6:	2b00      	cmp	r3, #0
 8021bf8:	f340 8181 	ble.w	8021efe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8021bfc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021bfe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021c02:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021c06:	1e48      	subs	r0, r1, #1
 8021c08:	f102 3cff 	add.w	ip, r2, #4294967295
 8021c0c:	2d00      	cmp	r5, #0
 8021c0e:	f340 809b 	ble.w	8021d48 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 8021c12:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8021c16:	ea4f 4326 	mov.w	r3, r6, asr #16
 8021c1a:	d406      	bmi.n	8021c2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8021c1c:	4586      	cmp	lr, r0
 8021c1e:	da04      	bge.n	8021c2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8021c20:	2b00      	cmp	r3, #0
 8021c22:	db02      	blt.n	8021c2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8021c24:	4563      	cmp	r3, ip
 8021c26:	f2c0 8090 	blt.w	8021d4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8021c2a:	f11e 0e01 	adds.w	lr, lr, #1
 8021c2e:	f100 8084 	bmi.w	8021d3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8021c32:	4571      	cmp	r1, lr
 8021c34:	f2c0 8081 	blt.w	8021d3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8021c38:	3301      	adds	r3, #1
 8021c3a:	d47e      	bmi.n	8021d3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8021c3c:	429a      	cmp	r2, r3
 8021c3e:	db7c      	blt.n	8021d3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8021c40:	46aa      	mov	sl, r5
 8021c42:	46b9      	mov	r9, r7
 8021c44:	f1ba 0f00 	cmp.w	sl, #0
 8021c48:	f340 8099 	ble.w	8021d7e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8021c4c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021c4e:	1421      	asrs	r1, r4, #16
 8021c50:	ea4f 4026 	mov.w	r0, r6, asr #16
 8021c54:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8021c58:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8021c5c:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8021c60:	f100 80d0 	bmi.w	8021e04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8021c64:	f10e 3bff 	add.w	fp, lr, #4294967295
 8021c68:	4559      	cmp	r1, fp
 8021c6a:	f280 80cb 	bge.w	8021e04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8021c6e:	2800      	cmp	r0, #0
 8021c70:	f2c0 80c8 	blt.w	8021e04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8021c74:	f103 3bff 	add.w	fp, r3, #4294967295
 8021c78:	4558      	cmp	r0, fp
 8021c7a:	f280 80c3 	bge.w	8021e04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8021c7e:	fa0f fe8e 	sxth.w	lr, lr
 8021c82:	fb00 110e 	mla	r1, r0, lr, r1
 8021c86:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8021c8a:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8021c8e:	8841      	ldrh	r1, [r0, #2]
 8021c90:	f1bc 0f00 	cmp.w	ip, #0
 8021c94:	d00b      	beq.n	8021cae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8021c96:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8021c9a:	3b01      	subs	r3, #1
 8021c9c:	005b      	lsls	r3, r3, #1
 8021c9e:	3302      	adds	r3, #2
 8021ca0:	eb00 0e03 	add.w	lr, r0, r3
 8021ca4:	5ac3      	ldrh	r3, [r0, r3]
 8021ca6:	9308      	str	r3, [sp, #32]
 8021ca8:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8021cac:	9309      	str	r3, [sp, #36]	; 0x24
 8021cae:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8021cb2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8021cb6:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8021cba:	ea40 000b 	orr.w	r0, r0, fp
 8021cbe:	fb12 f30c 	smulbb	r3, r2, ip
 8021cc2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8021cc6:	10db      	asrs	r3, r3, #3
 8021cc8:	f1cc 0e10 	rsb	lr, ip, #16
 8021ccc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021cd0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021cd4:	ebae 0e02 	sub.w	lr, lr, r2
 8021cd8:	ea4b 0101 	orr.w	r1, fp, r1
 8021cdc:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8021ce0:	4351      	muls	r1, r2
 8021ce2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021ce4:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8021ce8:	fb0e 1e00 	mla	lr, lr, r0, r1
 8021cec:	0410      	lsls	r0, r2, #16
 8021cee:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8021cf2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021cf6:	4310      	orrs	r0, r2
 8021cf8:	9a08      	ldr	r2, [sp, #32]
 8021cfa:	9908      	ldr	r1, [sp, #32]
 8021cfc:	0412      	lsls	r2, r2, #16
 8021cfe:	fb03 e000 	mla	r0, r3, r0, lr
 8021d02:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8021d06:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8021d0a:	ea42 020e 	orr.w	r2, r2, lr
 8021d0e:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8021d12:	fb03 0302 	mla	r3, r3, r2, r0
 8021d16:	0d5a      	lsrs	r2, r3, #21
 8021d18:	095b      	lsrs	r3, r3, #5
 8021d1a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021d1e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021d22:	4313      	orrs	r3, r2
 8021d24:	f8a9 3000 	strh.w	r3, [r9]
 8021d28:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8021d2a:	441c      	add	r4, r3
 8021d2c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021d2e:	f109 0902 	add.w	r9, r9, #2
 8021d32:	441e      	add	r6, r3
 8021d34:	f10a 3aff 	add.w	sl, sl, #4294967295
 8021d38:	e784      	b.n	8021c44 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8021d3a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8021d3c:	441c      	add	r4, r3
 8021d3e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021d40:	3d01      	subs	r5, #1
 8021d42:	441e      	add	r6, r3
 8021d44:	3702      	adds	r7, #2
 8021d46:	e761      	b.n	8021c0c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021d48:	d01d      	beq.n	8021d86 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8021d4a:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8021d4c:	1e6b      	subs	r3, r5, #1
 8021d4e:	fb00 4003 	mla	r0, r0, r3, r4
 8021d52:	1400      	asrs	r0, r0, #16
 8021d54:	f53f af74 	bmi.w	8021c40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8021d58:	3901      	subs	r1, #1
 8021d5a:	4288      	cmp	r0, r1
 8021d5c:	f6bf af70 	bge.w	8021c40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8021d60:	9924      	ldr	r1, [sp, #144]	; 0x90
 8021d62:	fb01 6303 	mla	r3, r1, r3, r6
 8021d66:	141b      	asrs	r3, r3, #16
 8021d68:	f53f af6a 	bmi.w	8021c40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8021d6c:	3a01      	subs	r2, #1
 8021d6e:	4293      	cmp	r3, r2
 8021d70:	f6bf af66 	bge.w	8021c40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8021d74:	46a9      	mov	r9, r5
 8021d76:	46ba      	mov	sl, r7
 8021d78:	f1b9 0f00 	cmp.w	r9, #0
 8021d7c:	dc5a      	bgt.n	8021e34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8021d7e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8021d82:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8021d86:	9b07      	ldr	r3, [sp, #28]
 8021d88:	2b00      	cmp	r3, #0
 8021d8a:	f340 80b8 	ble.w	8021efe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8021d8e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8021d92:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021d96:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8021d9a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021d9c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8021da0:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8021da4:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8021da8:	eef0 6a48 	vmov.f32	s13, s16
 8021dac:	ee69 7a27 	vmul.f32	s15, s18, s15
 8021db0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021db4:	ee37 8a48 	vsub.f32	s16, s14, s16
 8021db8:	ee16 4a90 	vmov	r4, s13
 8021dbc:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8021dc0:	eef0 6a68 	vmov.f32	s13, s17
 8021dc4:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8021dc8:	ee18 2a10 	vmov	r2, s16
 8021dcc:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8021dd0:	fb92 f3f3 	sdiv	r3, r2, r3
 8021dd4:	ee18 2a90 	vmov	r2, s17
 8021dd8:	9323      	str	r3, [sp, #140]	; 0x8c
 8021dda:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021ddc:	fb92 f3f3 	sdiv	r3, r2, r3
 8021de0:	9324      	str	r3, [sp, #144]	; 0x90
 8021de2:	9b07      	ldr	r3, [sp, #28]
 8021de4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021de6:	3b01      	subs	r3, #1
 8021de8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021dec:	9307      	str	r3, [sp, #28]
 8021dee:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021df0:	ee16 6a90 	vmov	r6, s13
 8021df4:	bf14      	ite	ne
 8021df6:	461d      	movne	r5, r3
 8021df8:	4615      	moveq	r5, r2
 8021dfa:	eef0 8a67 	vmov.f32	s17, s15
 8021dfe:	eeb0 8a47 	vmov.f32	s16, s14
 8021e02:	e6f4      	b.n	8021bee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8021e04:	f111 0b01 	adds.w	fp, r1, #1
 8021e08:	d48e      	bmi.n	8021d28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8021e0a:	45de      	cmp	lr, fp
 8021e0c:	db8c      	blt.n	8021d28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8021e0e:	f110 0b01 	adds.w	fp, r0, #1
 8021e12:	d489      	bmi.n	8021d28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8021e14:	455b      	cmp	r3, fp
 8021e16:	db87      	blt.n	8021d28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8021e18:	b21b      	sxth	r3, r3
 8021e1a:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8021e1e:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8021e22:	9300      	str	r3, [sp, #0]
 8021e24:	4642      	mov	r2, r8
 8021e26:	fa0f f38e 	sxth.w	r3, lr
 8021e2a:	4649      	mov	r1, r9
 8021e2c:	980d      	ldr	r0, [sp, #52]	; 0x34
 8021e2e:	f7ff fe2b 	bl	8021a88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8021e32:	e779      	b.n	8021d28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8021e34:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021e36:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8021e3a:	1420      	asrs	r0, r4, #16
 8021e3c:	1431      	asrs	r1, r6, #16
 8021e3e:	fb03 0101 	mla	r1, r3, r1, r0
 8021e42:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8021e46:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8021e4a:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8021e4e:	8841      	ldrh	r1, [r0, #2]
 8021e50:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8021e54:	f1be 0f00 	cmp.w	lr, #0
 8021e58:	d00b      	beq.n	8021e72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 8021e5a:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8021e5e:	3b01      	subs	r3, #1
 8021e60:	005b      	lsls	r3, r3, #1
 8021e62:	3302      	adds	r3, #2
 8021e64:	eb00 0b03 	add.w	fp, r0, r3
 8021e68:	5ac3      	ldrh	r3, [r0, r3]
 8021e6a:	930a      	str	r3, [sp, #40]	; 0x28
 8021e6c:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8021e70:	930b      	str	r3, [sp, #44]	; 0x2c
 8021e72:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8021e76:	fb12 f30e 	smulbb	r3, r2, lr
 8021e7a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8021e7e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8021e82:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8021e86:	10db      	asrs	r3, r3, #3
 8021e88:	ea40 000c 	orr.w	r0, r0, ip
 8021e8c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021e90:	f1ce 0c10 	rsb	ip, lr, #16
 8021e94:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021e98:	ebac 0c02 	sub.w	ip, ip, r2
 8021e9c:	ea4b 0101 	orr.w	r1, fp, r1
 8021ea0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8021ea4:	4351      	muls	r1, r2
 8021ea6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8021ea8:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8021eac:	fb0c 1c00 	mla	ip, ip, r0, r1
 8021eb0:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8021eb4:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8021eb8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8021eba:	990a      	ldr	r1, [sp, #40]	; 0x28
 8021ebc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021ec0:	0412      	lsls	r2, r2, #16
 8021ec2:	ea4b 0000 	orr.w	r0, fp, r0
 8021ec6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8021eca:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8021ece:	fb03 c000 	mla	r0, r3, r0, ip
 8021ed2:	ea42 0b0b 	orr.w	fp, r2, fp
 8021ed6:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8021eda:	fb03 000b 	mla	r0, r3, fp, r0
 8021ede:	0d43      	lsrs	r3, r0, #21
 8021ee0:	0940      	lsrs	r0, r0, #5
 8021ee2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021ee6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021eea:	4318      	orrs	r0, r3
 8021eec:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8021eee:	f82a 0b02 	strh.w	r0, [sl], #2
 8021ef2:	441c      	add	r4, r3
 8021ef4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021ef6:	f109 39ff 	add.w	r9, r9, #4294967295
 8021efa:	441e      	add	r6, r3
 8021efc:	e73c      	b.n	8021d78 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8021efe:	b00f      	add	sp, #60	; 0x3c
 8021f00:	ecbd 8b08 	vpop	{d8-d11}
 8021f04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021f08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8021f08:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021f0c:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 8021f10:	fb04 5603 	mla	r6, r4, r3, r5
 8021f14:	2c00      	cmp	r4, #0
 8021f16:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8021f1a:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 8021f1e:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 8021f22:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 8021f26:	db36      	blt.n	8021f96 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 8021f28:	45a6      	cmp	lr, r4
 8021f2a:	dd34      	ble.n	8021f96 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 8021f2c:	2d00      	cmp	r5, #0
 8021f2e:	db30      	blt.n	8021f92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 8021f30:	42ab      	cmp	r3, r5
 8021f32:	dd2e      	ble.n	8021f92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 8021f34:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8021f38:	1c6e      	adds	r6, r5, #1
 8021f3a:	d42f      	bmi.n	8021f9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 8021f3c:	42b3      	cmp	r3, r6
 8021f3e:	dd2d      	ble.n	8021f9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 8021f40:	b370      	cbz	r0, 8021fa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8021f42:	f8dc 6004 	ldr.w	r6, [ip, #4]
 8021f46:	3401      	adds	r4, #1
 8021f48:	d42e      	bmi.n	8021fa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 8021f4a:	45a6      	cmp	lr, r4
 8021f4c:	dd2c      	ble.n	8021fa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 8021f4e:	b377      	cbz	r7, 8021fae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa6>
 8021f50:	2d00      	cmp	r5, #0
 8021f52:	db27      	blt.n	8021fa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 8021f54:	42ab      	cmp	r3, r5
 8021f56:	dd25      	ble.n	8021fa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 8021f58:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8021f5c:	3501      	adds	r5, #1
 8021f5e:	d429      	bmi.n	8021fb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 8021f60:	42ab      	cmp	r3, r5
 8021f62:	dd27      	ble.n	8021fb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 8021f64:	b340      	cbz	r0, 8021fb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 8021f66:	3301      	adds	r3, #1
 8021f68:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 8021f6c:	280f      	cmp	r0, #15
 8021f6e:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8021f72:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8021f76:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8021f7a:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8021f7e:	d801      	bhi.n	8021f84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x7c>
 8021f80:	2f0f      	cmp	r7, #15
 8021f82:	d91b      	bls.n	8021fbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 8021f84:	4b8d      	ldr	r3, [pc, #564]	; (80221bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 8021f86:	4a8e      	ldr	r2, [pc, #568]	; (80221c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 8021f88:	488e      	ldr	r0, [pc, #568]	; (80221c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 8021f8a:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8021f8e:	f002 fa53 	bl	8024438 <__assert_func>
 8021f92:	2200      	movs	r2, #0
 8021f94:	e7d0      	b.n	8021f38 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x30>
 8021f96:	2600      	movs	r6, #0
 8021f98:	4632      	mov	r2, r6
 8021f9a:	e7d4      	b.n	8021f46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 8021f9c:	2600      	movs	r6, #0
 8021f9e:	e7d2      	b.n	8021f46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 8021fa0:	4606      	mov	r6, r0
 8021fa2:	e7d0      	b.n	8021f46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 8021fa4:	2400      	movs	r4, #0
 8021fa6:	e7d9      	b.n	8021f5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x54>
 8021fa8:	2300      	movs	r3, #0
 8021faa:	461c      	mov	r4, r3
 8021fac:	e7de      	b.n	8021f6c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 8021fae:	463b      	mov	r3, r7
 8021fb0:	463c      	mov	r4, r7
 8021fb2:	e7db      	b.n	8021f6c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 8021fb4:	2300      	movs	r3, #0
 8021fb6:	e7d9      	b.n	8021f6c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 8021fb8:	4603      	mov	r3, r0
 8021fba:	e7d7      	b.n	8021f6c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 8021fbc:	b280      	uxth	r0, r0
 8021fbe:	b2bf      	uxth	r7, r7
 8021fc0:	fb07 fe00 	mul.w	lr, r7, r0
 8021fc4:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8021fc8:	0100      	lsls	r0, r0, #4
 8021fca:	eba0 0c0e 	sub.w	ip, r0, lr
 8021fce:	b2bf      	uxth	r7, r7
 8021fd0:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8021fd4:	fa1f fc8c 	uxth.w	ip, ip
 8021fd8:	1bed      	subs	r5, r5, r7
 8021fda:	b2ad      	uxth	r5, r5
 8021fdc:	fb0a f00c 	mul.w	r0, sl, ip
 8021fe0:	fb0b 0005 	mla	r0, fp, r5, r0
 8021fe4:	fb07 0009 	mla	r0, r7, r9, r0
 8021fe8:	fb0e 0008 	mla	r0, lr, r8, r0
 8021fec:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8021ff0:	9001      	str	r0, [sp, #4]
 8021ff2:	2800      	cmp	r0, #0
 8021ff4:	f000 80de 	beq.w	80221b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2ac>
 8021ff8:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8021ffc:	d018      	beq.n	8022030 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x128>
 8021ffe:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8022002:	fb0b f000 	mul.w	r0, fp, r0
 8022006:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802200a:	fb0b fb02 	mul.w	fp, fp, r2
 802200e:	0a02      	lsrs	r2, r0, #8
 8022010:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8022014:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8022018:	4402      	add	r2, r0
 802201a:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 802201e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8022022:	0a12      	lsrs	r2, r2, #8
 8022024:	0a00      	lsrs	r0, r0, #8
 8022026:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802202a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 802202e:	4302      	orrs	r2, r0
 8022030:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8022034:	d01a      	beq.n	802206c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x164>
 8022036:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 802203a:	fb0a f000 	mul.w	r0, sl, r0
 802203e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8022042:	fb0a fa06 	mul.w	sl, sl, r6
 8022046:	0a06      	lsrs	r6, r0, #8
 8022048:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 802204c:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8022050:	4406      	add	r6, r0
 8022052:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8022056:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 802205a:	0a36      	lsrs	r6, r6, #8
 802205c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022060:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8022064:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022068:	ea46 060a 	orr.w	r6, r6, sl
 802206c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022070:	d01b      	beq.n	80220aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1a2>
 8022072:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8022076:	fb09 fa0a 	mul.w	sl, r9, sl
 802207a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 802207e:	fb09 f004 	mul.w	r0, r9, r4
 8022082:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8022086:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802208a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802208e:	f500 7980 	add.w	r9, r0, #256	; 0x100
 8022092:	4454      	add	r4, sl
 8022094:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 8022098:	0a24      	lsrs	r4, r4, #8
 802209a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802209e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80220a2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80220a6:	ea44 0409 	orr.w	r4, r4, r9
 80220aa:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80220ae:	d01b      	beq.n	80220e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1e0>
 80220b0:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 80220b4:	fb08 f909 	mul.w	r9, r8, r9
 80220b8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80220bc:	fb08 f003 	mul.w	r0, r8, r3
 80220c0:	ea4f 2319 	mov.w	r3, r9, lsr #8
 80220c4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80220c8:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80220cc:	f500 7880 	add.w	r8, r0, #256	; 0x100
 80220d0:	444b      	add	r3, r9
 80220d2:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 80220d6:	0a1b      	lsrs	r3, r3, #8
 80220d8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80220dc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80220e0:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80220e4:	ea43 0308 	orr.w	r3, r3, r8
 80220e8:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80220ec:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80220f0:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 80220f4:	fb0c f808 	mul.w	r8, ip, r8
 80220f8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80220fc:	fb0c f606 	mul.w	r6, ip, r6
 8022100:	fb05 8909 	mla	r9, r5, r9, r8
 8022104:	fb05 6502 	mla	r5, r5, r2, r6
 8022108:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 802210c:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8022110:	9a01      	ldr	r2, [sp, #4]
 8022112:	8808      	ldrh	r0, [r1, #0]
 8022114:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8022118:	fb07 9908 	mla	r9, r7, r8, r9
 802211c:	fb07 5704 	mla	r7, r7, r4, r5
 8022120:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8022124:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022128:	b2b6      	uxth	r6, r6
 802212a:	fb0e 9808 	mla	r8, lr, r8, r9
 802212e:	fb0e 7e03 	mla	lr, lr, r3, r7
 8022132:	4372      	muls	r2, r6
 8022134:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8022138:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802213c:	1c53      	adds	r3, r2, #1
 802213e:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 8022142:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8022146:	ea48 0e0e 	orr.w	lr, r8, lr
 802214a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802214e:	1205      	asrs	r5, r0, #8
 8022150:	ea4f 421e 	mov.w	r2, lr, lsr #16
 8022154:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8022158:	b2db      	uxtb	r3, r3
 802215a:	fb12 f206 	smulbb	r2, r2, r6
 802215e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022162:	fb05 2503 	mla	r5, r5, r3, r2
 8022166:	f3ce 2407 	ubfx	r4, lr, #8, #8
 802216a:	10c2      	asrs	r2, r0, #3
 802216c:	fa5f fe8e 	uxtb.w	lr, lr
 8022170:	00c0      	lsls	r0, r0, #3
 8022172:	fb14 f406 	smulbb	r4, r4, r6
 8022176:	b2c0      	uxtb	r0, r0
 8022178:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802217c:	fb1e fe06 	smulbb	lr, lr, r6
 8022180:	fb02 4203 	mla	r2, r2, r3, r4
 8022184:	b2ad      	uxth	r5, r5
 8022186:	fb00 e303 	mla	r3, r0, r3, lr
 802218a:	b298      	uxth	r0, r3
 802218c:	b294      	uxth	r4, r2
 802218e:	1c6b      	adds	r3, r5, #1
 8022190:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022194:	1c62      	adds	r2, r4, #1
 8022196:	1c43      	adds	r3, r0, #1
 8022198:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802219c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80221a0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80221a4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80221a8:	0952      	lsrs	r2, r2, #5
 80221aa:	432b      	orrs	r3, r5
 80221ac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80221b0:	4313      	orrs	r3, r2
 80221b2:	800b      	strh	r3, [r1, #0]
 80221b4:	b003      	add	sp, #12
 80221b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80221ba:	bf00      	nop
 80221bc:	0802aeb2 	.word	0x0802aeb2
 80221c0:	0802b482 	.word	0x0802b482
 80221c4:	0802af36 	.word	0x0802af36

080221c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80221c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80221cc:	ed2d 8b08 	vpush	{d8-d11}
 80221d0:	b09d      	sub	sp, #116	; 0x74
 80221d2:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 80221d6:	9219      	str	r2, [sp, #100]	; 0x64
 80221d8:	9307      	str	r3, [sp, #28]
 80221da:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 80221dc:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 80221e0:	931a      	str	r3, [sp, #104]	; 0x68
 80221e2:	9117      	str	r1, [sp, #92]	; 0x5c
 80221e4:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 80221e8:	901b      	str	r0, [sp, #108]	; 0x6c
 80221ea:	6850      	ldr	r0, [r2, #4]
 80221ec:	6812      	ldr	r2, [r2, #0]
 80221ee:	fb00 1303 	mla	r3, r0, r3, r1
 80221f2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80221f6:	930a      	str	r3, [sp, #40]	; 0x28
 80221f8:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 80221fa:	681b      	ldr	r3, [r3, #0]
 80221fc:	9310      	str	r3, [sp, #64]	; 0x40
 80221fe:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8022202:	930b      	str	r3, [sp, #44]	; 0x2c
 8022204:	eeb0 aa40 	vmov.f32	s20, s0
 8022208:	eef0 9a60 	vmov.f32	s19, s1
 802220c:	eeb0 9a41 	vmov.f32	s18, s2
 8022210:	eeb0 8a62 	vmov.f32	s16, s5
 8022214:	eef0 8a43 	vmov.f32	s17, s6
 8022218:	eef0 ba44 	vmov.f32	s23, s8
 802221c:	eeb0 ba64 	vmov.f32	s22, s9
 8022220:	eef0 aa45 	vmov.f32	s21, s10
 8022224:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022226:	2b00      	cmp	r3, #0
 8022228:	dc03      	bgt.n	8022232 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 802222a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802222c:	2b00      	cmp	r3, #0
 802222e:	f340 8375 	ble.w	802291c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8022232:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8022234:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022238:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802223c:	1e48      	subs	r0, r1, #1
 802223e:	1e57      	subs	r7, r2, #1
 8022240:	9b07      	ldr	r3, [sp, #28]
 8022242:	2b00      	cmp	r3, #0
 8022244:	f340 818e 	ble.w	8022564 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 8022248:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802224c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022250:	d406      	bmi.n	8022260 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8022252:	4584      	cmp	ip, r0
 8022254:	da04      	bge.n	8022260 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8022256:	2b00      	cmp	r3, #0
 8022258:	db02      	blt.n	8022260 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 802225a:	42bb      	cmp	r3, r7
 802225c:	f2c0 8183 	blt.w	8022566 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 8022260:	f11c 0c01 	adds.w	ip, ip, #1
 8022264:	f100 8173 	bmi.w	802254e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8022268:	4561      	cmp	r1, ip
 802226a:	f2c0 8170 	blt.w	802254e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802226e:	3301      	adds	r3, #1
 8022270:	f100 816d 	bmi.w	802254e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8022274:	429a      	cmp	r2, r3
 8022276:	f2c0 816a 	blt.w	802254e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802227a:	9b07      	ldr	r3, [sp, #28]
 802227c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802227e:	9318      	str	r3, [sp, #96]	; 0x60
 8022280:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022282:	2b00      	cmp	r3, #0
 8022284:	f340 818c 	ble.w	80225a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d8>
 8022288:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 802228a:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 802228c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8022290:	689b      	ldr	r3, [r3, #8]
 8022292:	1422      	asrs	r2, r4, #16
 8022294:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8022298:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802229c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80222a0:	f100 81cd 	bmi.w	802263e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80222a4:	f103 38ff 	add.w	r8, r3, #4294967295
 80222a8:	4542      	cmp	r2, r8
 80222aa:	f280 81c8 	bge.w	802263e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80222ae:	f1bc 0f00 	cmp.w	ip, #0
 80222b2:	f2c0 81c4 	blt.w	802263e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80222b6:	f10e 38ff 	add.w	r8, lr, #4294967295
 80222ba:	45c4      	cmp	ip, r8
 80222bc:	f280 81bf 	bge.w	802263e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80222c0:	b21b      	sxth	r3, r3
 80222c2:	fb0c 2203 	mla	r2, ip, r3, r2
 80222c6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80222c8:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80222cc:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80222d0:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80222d4:	2800      	cmp	r0, #0
 80222d6:	f000 81a9 	beq.w	802262c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 80222da:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80222de:	950c      	str	r5, [sp, #48]	; 0x30
 80222e0:	0e2d      	lsrs	r5, r5, #24
 80222e2:	9513      	str	r5, [sp, #76]	; 0x4c
 80222e4:	b181      	cbz	r1, 8022308 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 80222e6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80222ea:	3b01      	subs	r3, #1
 80222ec:	009b      	lsls	r3, r3, #2
 80222ee:	3304      	adds	r3, #4
 80222f0:	eb08 0c03 	add.w	ip, r8, r3
 80222f4:	f858 3003 	ldr.w	r3, [r8, r3]
 80222f8:	9308      	str	r3, [sp, #32]
 80222fa:	0e1b      	lsrs	r3, r3, #24
 80222fc:	9311      	str	r3, [sp, #68]	; 0x44
 80222fe:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8022302:	930d      	str	r3, [sp, #52]	; 0x34
 8022304:	0e1b      	lsrs	r3, r3, #24
 8022306:	9314      	str	r3, [sp, #80]	; 0x50
 8022308:	b280      	uxth	r0, r0
 802230a:	b289      	uxth	r1, r1
 802230c:	fb00 f901 	mul.w	r9, r0, r1
 8022310:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8022314:	0100      	lsls	r0, r0, #4
 8022316:	eba0 0809 	sub.w	r8, r0, r9
 802231a:	b289      	uxth	r1, r1
 802231c:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8022320:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8022322:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8022324:	fa1f f888 	uxth.w	r8, r8
 8022328:	1a5b      	subs	r3, r3, r1
 802232a:	b29b      	uxth	r3, r3
 802232c:	fb08 f000 	mul.w	r0, r8, r0
 8022330:	fb03 000e 	mla	r0, r3, lr, r0
 8022334:	fb01 0005 	mla	r0, r1, r5, r0
 8022338:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802233a:	fb09 0005 	mla	r0, r9, r5, r0
 802233e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8022342:	2800      	cmp	r0, #0
 8022344:	f000 80fa 	beq.w	802253c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8022348:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802234c:	d01b      	beq.n	8022386 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 802234e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8022352:	fb0e fa0a 	mul.w	sl, lr, sl
 8022356:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802235a:	fb0e fe02 	mul.w	lr, lr, r2
 802235e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8022362:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8022366:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802236a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802236e:	4452      	add	r2, sl
 8022370:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8022374:	0a12      	lsrs	r2, r2, #8
 8022376:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802237a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802237e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022382:	ea42 020c 	orr.w	r2, r2, ip
 8022386:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8022388:	2dff      	cmp	r5, #255	; 0xff
 802238a:	d021      	beq.n	80223d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 802238c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802238e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8022392:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8022394:	fb05 fb0b 	mul.w	fp, r5, fp
 8022398:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802239a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802239e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80223a0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80223a4:	fb05 fa0a 	mul.w	sl, r5, sl
 80223a8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80223ac:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80223b0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80223b4:	44de      	add	lr, fp
 80223b6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80223ba:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80223be:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80223c2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80223c6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80223ca:	ea4e 050a 	orr.w	r5, lr, sl
 80223ce:	950c      	str	r5, [sp, #48]	; 0x30
 80223d0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80223d2:	2dff      	cmp	r5, #255	; 0xff
 80223d4:	d021      	beq.n	802241a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80223d6:	9d08      	ldr	r5, [sp, #32]
 80223d8:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80223dc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80223de:	fb05 fb0b 	mul.w	fp, r5, fp
 80223e2:	9d08      	ldr	r5, [sp, #32]
 80223e4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80223e8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80223ea:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80223ee:	fb05 fa0a 	mul.w	sl, r5, sl
 80223f2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80223f6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80223fa:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80223fe:	44de      	add	lr, fp
 8022400:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022404:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022408:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802240c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022410:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022414:	ea4e 050a 	orr.w	r5, lr, sl
 8022418:	9508      	str	r5, [sp, #32]
 802241a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802241c:	2dff      	cmp	r5, #255	; 0xff
 802241e:	d021      	beq.n	8022464 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8022420:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8022422:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8022426:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8022428:	fb05 fb0b 	mul.w	fp, r5, fp
 802242c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802242e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8022432:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8022434:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022438:	fb05 fa0a 	mul.w	sl, r5, sl
 802243c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022440:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022444:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022448:	44de      	add	lr, fp
 802244a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802244e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022452:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022456:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802245a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802245e:	ea4e 050a 	orr.w	r5, lr, sl
 8022462:	950d      	str	r5, [sp, #52]	; 0x34
 8022464:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022466:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802246a:	9d08      	ldr	r5, [sp, #32]
 802246c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8022470:	fb08 fc0c 	mul.w	ip, r8, ip
 8022474:	fb03 cc0e 	mla	ip, r3, lr, ip
 8022478:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802247c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802247e:	fb01 cc0e 	mla	ip, r1, lr, ip
 8022482:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8022486:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022488:	fb09 cc0e 	mla	ip, r9, lr, ip
 802248c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8022490:	fb08 f80e 	mul.w	r8, r8, lr
 8022494:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8022498:	fb03 8202 	mla	r2, r3, r2, r8
 802249c:	9b08      	ldr	r3, [sp, #32]
 802249e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80224a0:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 80224a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80224a6:	fb01 220a 	mla	r2, r1, sl, r2
 80224aa:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 80224ae:	fb09 2901 	mla	r9, r9, r1, r2
 80224b2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80224b4:	883b      	ldrh	r3, [r7, #0]
 80224b6:	4342      	muls	r2, r0
 80224b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80224bc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80224c0:	1c50      	adds	r0, r2, #1
 80224c2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80224c6:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80224ca:	ea4c 0c09 	orr.w	ip, ip, r9
 80224ce:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80224d2:	1219      	asrs	r1, r3, #8
 80224d4:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80224d8:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80224dc:	b2c0      	uxtb	r0, r0
 80224de:	fb12 f205 	smulbb	r2, r2, r5
 80224e2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80224e6:	fb01 2100 	mla	r1, r1, r0, r2
 80224ea:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80224ee:	10da      	asrs	r2, r3, #3
 80224f0:	fa5f fc8c 	uxtb.w	ip, ip
 80224f4:	00db      	lsls	r3, r3, #3
 80224f6:	fb1c fc05 	smulbb	ip, ip, r5
 80224fa:	b2db      	uxtb	r3, r3
 80224fc:	b289      	uxth	r1, r1
 80224fe:	fb03 c300 	mla	r3, r3, r0, ip
 8022502:	fa1f fc83 	uxth.w	ip, r3
 8022506:	1c4b      	adds	r3, r1, #1
 8022508:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802250c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022510:	fb1e fe05 	smulbb	lr, lr, r5
 8022514:	f10c 0301 	add.w	r3, ip, #1
 8022518:	fb02 e200 	mla	r2, r2, r0, lr
 802251c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8022520:	b292      	uxth	r2, r2
 8022522:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8022526:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802252a:	430b      	orrs	r3, r1
 802252c:	1c51      	adds	r1, r2, #1
 802252e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8022532:	0952      	lsrs	r2, r2, #5
 8022534:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022538:	4313      	orrs	r3, r2
 802253a:	803b      	strh	r3, [r7, #0]
 802253c:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 802253e:	441c      	add	r4, r3
 8022540:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8022542:	441e      	add	r6, r3
 8022544:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022546:	3b01      	subs	r3, #1
 8022548:	3702      	adds	r7, #2
 802254a:	9318      	str	r3, [sp, #96]	; 0x60
 802254c:	e698      	b.n	8022280 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802254e:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8022550:	441c      	add	r4, r3
 8022552:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8022554:	441e      	add	r6, r3
 8022556:	9b07      	ldr	r3, [sp, #28]
 8022558:	3b01      	subs	r3, #1
 802255a:	9307      	str	r3, [sp, #28]
 802255c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802255e:	3302      	adds	r3, #2
 8022560:	930a      	str	r3, [sp, #40]	; 0x28
 8022562:	e66d      	b.n	8022240 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8022564:	d023      	beq.n	80225ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8022566:	9b07      	ldr	r3, [sp, #28]
 8022568:	9831      	ldr	r0, [sp, #196]	; 0xc4
 802256a:	3b01      	subs	r3, #1
 802256c:	fb00 4003 	mla	r0, r0, r3, r4
 8022570:	1400      	asrs	r0, r0, #16
 8022572:	f53f ae82 	bmi.w	802227a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8022576:	3901      	subs	r1, #1
 8022578:	4288      	cmp	r0, r1
 802257a:	f6bf ae7e 	bge.w	802227a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 802257e:	9932      	ldr	r1, [sp, #200]	; 0xc8
 8022580:	fb01 6303 	mla	r3, r1, r3, r6
 8022584:	141b      	asrs	r3, r3, #16
 8022586:	f53f ae78 	bmi.w	802227a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 802258a:	3a01      	subs	r2, #1
 802258c:	4293      	cmp	r3, r2
 802258e:	f6bf ae74 	bge.w	802227a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8022592:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8022596:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 802259a:	f1bb 0f00 	cmp.w	fp, #0
 802259e:	dc6c      	bgt.n	802267a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 80225a0:	9b07      	ldr	r3, [sp, #28]
 80225a2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80225a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80225a8:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80225ac:	930a      	str	r3, [sp, #40]	; 0x28
 80225ae:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80225b0:	2b00      	cmp	r3, #0
 80225b2:	f340 81b3 	ble.w	802291c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 80225b6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80225ba:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80225be:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80225c2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80225c4:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80225c8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80225cc:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80225d0:	eef0 6a48 	vmov.f32	s13, s16
 80225d4:	ee69 7a27 	vmul.f32	s15, s18, s15
 80225d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80225dc:	ee37 8a48 	vsub.f32	s16, s14, s16
 80225e0:	ee16 4a90 	vmov	r4, s13
 80225e4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80225e8:	eef0 6a68 	vmov.f32	s13, s17
 80225ec:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80225f0:	ee18 2a10 	vmov	r2, s16
 80225f4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80225f8:	fb92 f3f3 	sdiv	r3, r2, r3
 80225fc:	ee18 2a90 	vmov	r2, s17
 8022600:	9331      	str	r3, [sp, #196]	; 0xc4
 8022602:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8022604:	fb92 f3f3 	sdiv	r3, r2, r3
 8022608:	9332      	str	r3, [sp, #200]	; 0xc8
 802260a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802260c:	9a19      	ldr	r2, [sp, #100]	; 0x64
 802260e:	3b01      	subs	r3, #1
 8022610:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022614:	9317      	str	r3, [sp, #92]	; 0x5c
 8022616:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8022618:	bf08      	it	eq
 802261a:	4613      	moveq	r3, r2
 802261c:	ee16 6a90 	vmov	r6, s13
 8022620:	9307      	str	r3, [sp, #28]
 8022622:	eef0 8a67 	vmov.f32	s17, s15
 8022626:	eeb0 8a47 	vmov.f32	s16, s14
 802262a:	e5fb      	b.n	8022224 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 802262c:	2900      	cmp	r1, #0
 802262e:	f43f ae6b 	beq.w	8022308 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8022632:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8022636:	9308      	str	r3, [sp, #32]
 8022638:	0e1b      	lsrs	r3, r3, #24
 802263a:	9311      	str	r3, [sp, #68]	; 0x44
 802263c:	e664      	b.n	8022308 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802263e:	f112 0801 	adds.w	r8, r2, #1
 8022642:	f53f af7b 	bmi.w	802253c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8022646:	4543      	cmp	r3, r8
 8022648:	f6ff af78 	blt.w	802253c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 802264c:	f11c 0801 	adds.w	r8, ip, #1
 8022650:	f53f af74 	bmi.w	802253c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8022654:	45c6      	cmp	lr, r8
 8022656:	f6ff af71 	blt.w	802253c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 802265a:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802265c:	9201      	str	r2, [sp, #4]
 802265e:	fa0f f28e 	sxth.w	r2, lr
 8022662:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8022666:	e9cd c002 	strd	ip, r0, [sp, #8]
 802266a:	9200      	str	r2, [sp, #0]
 802266c:	b21b      	sxth	r3, r3
 802266e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022670:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8022672:	4639      	mov	r1, r7
 8022674:	f7ff fc48 	bl	8021f08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8022678:	e760      	b.n	802253c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 802267a:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 802267c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802267e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022682:	1427      	asrs	r7, r4, #16
 8022684:	1433      	asrs	r3, r6, #16
 8022686:	fb01 7303 	mla	r3, r1, r3, r7
 802268a:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 802268e:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8022692:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022696:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802269a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802269e:	2a00      	cmp	r2, #0
 80226a0:	f000 8133 	beq.w	802290a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x742>
 80226a4:	687d      	ldr	r5, [r7, #4]
 80226a6:	950e      	str	r5, [sp, #56]	; 0x38
 80226a8:	0e2d      	lsrs	r5, r5, #24
 80226aa:	9515      	str	r5, [sp, #84]	; 0x54
 80226ac:	b178      	cbz	r0, 80226ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80226ae:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80226b2:	3901      	subs	r1, #1
 80226b4:	0089      	lsls	r1, r1, #2
 80226b6:	3104      	adds	r1, #4
 80226b8:	eb07 0e01 	add.w	lr, r7, r1
 80226bc:	5879      	ldr	r1, [r7, r1]
 80226be:	9109      	str	r1, [sp, #36]	; 0x24
 80226c0:	0e09      	lsrs	r1, r1, #24
 80226c2:	9112      	str	r1, [sp, #72]	; 0x48
 80226c4:	f8de 1004 	ldr.w	r1, [lr, #4]
 80226c8:	910f      	str	r1, [sp, #60]	; 0x3c
 80226ca:	0e09      	lsrs	r1, r1, #24
 80226cc:	9116      	str	r1, [sp, #88]	; 0x58
 80226ce:	b292      	uxth	r2, r2
 80226d0:	b280      	uxth	r0, r0
 80226d2:	fb02 f800 	mul.w	r8, r2, r0
 80226d6:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80226da:	0112      	lsls	r2, r2, #4
 80226dc:	eba2 0e08 	sub.w	lr, r2, r8
 80226e0:	b280      	uxth	r0, r0
 80226e2:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80226e6:	9915      	ldr	r1, [sp, #84]	; 0x54
 80226e8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80226ea:	fa1f fe8e 	uxth.w	lr, lr
 80226ee:	1a12      	subs	r2, r2, r0
 80226f0:	b292      	uxth	r2, r2
 80226f2:	fb0e f101 	mul.w	r1, lr, r1
 80226f6:	fb02 110c 	mla	r1, r2, ip, r1
 80226fa:	fb00 1105 	mla	r1, r0, r5, r1
 80226fe:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8022700:	fb08 1105 	mla	r1, r8, r5, r1
 8022704:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8022708:	2900      	cmp	r1, #0
 802270a:	f000 80f5 	beq.w	80228f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802270e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8022712:	d019      	beq.n	8022748 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8022714:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8022718:	fb0c fa0a 	mul.w	sl, ip, sl
 802271c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022720:	fb0c fc03 	mul.w	ip, ip, r3
 8022724:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022728:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802272c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022730:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8022734:	4453      	add	r3, sl
 8022736:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802273a:	0a1b      	lsrs	r3, r3, #8
 802273c:	0a3f      	lsrs	r7, r7, #8
 802273e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022742:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8022746:	433b      	orrs	r3, r7
 8022748:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802274a:	2dff      	cmp	r5, #255	; 0xff
 802274c:	d020      	beq.n	8022790 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 802274e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8022750:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8022754:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8022756:	436f      	muls	r7, r5
 8022758:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802275a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802275e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8022760:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022764:	fb05 fa0a 	mul.w	sl, r5, sl
 8022768:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802276c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022770:	44bc      	add	ip, r7
 8022772:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022776:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802277a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802277e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022782:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022786:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802278a:	ea4c 050a 	orr.w	r5, ip, sl
 802278e:	950e      	str	r5, [sp, #56]	; 0x38
 8022790:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8022792:	2dff      	cmp	r5, #255	; 0xff
 8022794:	d020      	beq.n	80227d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8022796:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8022798:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802279c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802279e:	436f      	muls	r7, r5
 80227a0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80227a2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80227a6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80227a8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80227ac:	fb05 fa0a 	mul.w	sl, r5, sl
 80227b0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80227b4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80227b8:	44bc      	add	ip, r7
 80227ba:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80227be:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80227c2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80227c6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80227ca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80227ce:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80227d2:	ea4c 050a 	orr.w	r5, ip, sl
 80227d6:	9509      	str	r5, [sp, #36]	; 0x24
 80227d8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80227da:	2dff      	cmp	r5, #255	; 0xff
 80227dc:	d020      	beq.n	8022820 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 80227de:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80227e0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80227e4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80227e6:	436f      	muls	r7, r5
 80227e8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80227ea:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80227ee:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80227f0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80227f4:	fb05 fa0a 	mul.w	sl, r5, sl
 80227f8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80227fc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022800:	44bc      	add	ip, r7
 8022802:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022806:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802280a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802280e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022812:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022816:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802281a:	ea4c 050a 	orr.w	r5, ip, sl
 802281e:	950f      	str	r5, [sp, #60]	; 0x3c
 8022820:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8022822:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8022826:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8022828:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802282c:	fb0e f707 	mul.w	r7, lr, r7
 8022830:	fb02 770c 	mla	r7, r2, ip, r7
 8022834:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8022838:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802283a:	fb00 770c 	mla	r7, r0, ip, r7
 802283e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8022842:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8022844:	fb08 770c 	mla	r7, r8, ip, r7
 8022848:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 802284c:	fb0e fe0c 	mul.w	lr, lr, ip
 8022850:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022854:	fb02 e303 	mla	r3, r2, r3, lr
 8022858:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802285a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802285c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8022860:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022862:	fb00 330a 	mla	r3, r0, sl, r3
 8022866:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 802286a:	fb08 3c0c 	mla	ip, r8, ip, r3
 802286e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022870:	f8b9 0000 	ldrh.w	r0, [r9]
 8022874:	4359      	muls	r1, r3
 8022876:	0a3f      	lsrs	r7, r7, #8
 8022878:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802287c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022880:	1c4b      	adds	r3, r1, #1
 8022882:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8022886:	ea47 070c 	orr.w	r7, r7, ip
 802288a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802288e:	1202      	asrs	r2, r0, #8
 8022890:	0c3b      	lsrs	r3, r7, #16
 8022892:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8022896:	b2c9      	uxtb	r1, r1
 8022898:	fb13 f305 	smulbb	r3, r3, r5
 802289c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80228a0:	fb02 3201 	mla	r2, r2, r1, r3
 80228a4:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80228a8:	10c3      	asrs	r3, r0, #3
 80228aa:	b2ff      	uxtb	r7, r7
 80228ac:	00c0      	lsls	r0, r0, #3
 80228ae:	b2c0      	uxtb	r0, r0
 80228b0:	fb17 f705 	smulbb	r7, r7, r5
 80228b4:	fb00 7001 	mla	r0, r0, r1, r7
 80228b8:	b292      	uxth	r2, r2
 80228ba:	fb1c fc05 	smulbb	ip, ip, r5
 80228be:	b280      	uxth	r0, r0
 80228c0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80228c4:	fb03 c301 	mla	r3, r3, r1, ip
 80228c8:	1c51      	adds	r1, r2, #1
 80228ca:	f100 0c01 	add.w	ip, r0, #1
 80228ce:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80228d2:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 80228d6:	b29b      	uxth	r3, r3
 80228d8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80228dc:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80228e0:	ea4c 0202 	orr.w	r2, ip, r2
 80228e4:	f103 0c01 	add.w	ip, r3, #1
 80228e8:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80228ec:	095b      	lsrs	r3, r3, #5
 80228ee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80228f2:	431a      	orrs	r2, r3
 80228f4:	f8a9 2000 	strh.w	r2, [r9]
 80228f8:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80228fa:	441c      	add	r4, r3
 80228fc:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80228fe:	f109 0902 	add.w	r9, r9, #2
 8022902:	441e      	add	r6, r3
 8022904:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022908:	e647      	b.n	802259a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d2>
 802290a:	2800      	cmp	r0, #0
 802290c:	f43f aedf 	beq.w	80226ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8022910:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8022914:	9109      	str	r1, [sp, #36]	; 0x24
 8022916:	0e09      	lsrs	r1, r1, #24
 8022918:	9112      	str	r1, [sp, #72]	; 0x48
 802291a:	e6d8      	b.n	80226ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802291c:	b01d      	add	sp, #116	; 0x74
 802291e:	ecbd 8b08 	vpop	{d8-d11}
 8022922:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08022928 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8022928:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802292c:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 8022930:	fb04 5603 	mla	r6, r4, r3, r5
 8022934:	2c00      	cmp	r4, #0
 8022936:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 802293a:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 802293e:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 8022942:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 8022946:	db37      	blt.n	80229b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 8022948:	45a6      	cmp	lr, r4
 802294a:	dd35      	ble.n	80229b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 802294c:	2d00      	cmp	r5, #0
 802294e:	db31      	blt.n	80229b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8022950:	42ab      	cmp	r3, r5
 8022952:	dd2f      	ble.n	80229b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8022954:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8022958:	1c6e      	adds	r6, r5, #1
 802295a:	d430      	bmi.n	80229be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 802295c:	42b3      	cmp	r3, r6
 802295e:	dd2e      	ble.n	80229be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 8022960:	b378      	cbz	r0, 80229c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9a>
 8022962:	f8dc 6004 	ldr.w	r6, [ip, #4]
 8022966:	3401      	adds	r4, #1
 8022968:	d42f      	bmi.n	80229ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 802296a:	45a6      	cmp	lr, r4
 802296c:	dd2d      	ble.n	80229ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 802296e:	b37f      	cbz	r7, 80229d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa8>
 8022970:	2d00      	cmp	r5, #0
 8022972:	eb0c 0e83 	add.w	lr, ip, r3, lsl #2
 8022976:	db26      	blt.n	80229c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 8022978:	42ab      	cmp	r3, r5
 802297a:	dd24      	ble.n	80229c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 802297c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8022980:	3501      	adds	r5, #1
 8022982:	d428      	bmi.n	80229d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 8022984:	42ab      	cmp	r3, r5
 8022986:	dd26      	ble.n	80229d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 8022988:	b338      	cbz	r0, 80229da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb2>
 802298a:	f8de 3004 	ldr.w	r3, [lr, #4]
 802298e:	280f      	cmp	r0, #15
 8022990:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8022994:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8022998:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802299c:	ea4f 6813 	mov.w	r8, r3, lsr #24
 80229a0:	d801      	bhi.n	80229a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x7e>
 80229a2:	2f0f      	cmp	r7, #15
 80229a4:	d91b      	bls.n	80229de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb6>
 80229a6:	4b87      	ldr	r3, [pc, #540]	; (8022bc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 80229a8:	4a87      	ldr	r2, [pc, #540]	; (8022bc8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 80229aa:	4888      	ldr	r0, [pc, #544]	; (8022bcc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 80229ac:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 80229b0:	f001 fd42 	bl	8024438 <__assert_func>
 80229b4:	2200      	movs	r2, #0
 80229b6:	e7cf      	b.n	8022958 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x30>
 80229b8:	2600      	movs	r6, #0
 80229ba:	4632      	mov	r2, r6
 80229bc:	e7d3      	b.n	8022966 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 80229be:	2600      	movs	r6, #0
 80229c0:	e7d1      	b.n	8022966 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 80229c2:	4606      	mov	r6, r0
 80229c4:	e7cf      	b.n	8022966 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 80229c6:	2400      	movs	r4, #0
 80229c8:	e7da      	b.n	8022980 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x58>
 80229ca:	2300      	movs	r3, #0
 80229cc:	461c      	mov	r4, r3
 80229ce:	e7de      	b.n	802298e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 80229d0:	463b      	mov	r3, r7
 80229d2:	463c      	mov	r4, r7
 80229d4:	e7db      	b.n	802298e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 80229d6:	2300      	movs	r3, #0
 80229d8:	e7d9      	b.n	802298e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 80229da:	4603      	mov	r3, r0
 80229dc:	e7d7      	b.n	802298e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 80229de:	b280      	uxth	r0, r0
 80229e0:	b2bf      	uxth	r7, r7
 80229e2:	fb07 fe00 	mul.w	lr, r7, r0
 80229e6:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80229ea:	0100      	lsls	r0, r0, #4
 80229ec:	eba0 0c0e 	sub.w	ip, r0, lr
 80229f0:	b2bf      	uxth	r7, r7
 80229f2:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 80229f6:	fa1f fc8c 	uxth.w	ip, ip
 80229fa:	1bed      	subs	r5, r5, r7
 80229fc:	b2ad      	uxth	r5, r5
 80229fe:	fb0c f00a 	mul.w	r0, ip, sl
 8022a02:	fb0b 0005 	mla	r0, fp, r5, r0
 8022a06:	fb07 0009 	mla	r0, r7, r9, r0
 8022a0a:	fb0e 0008 	mla	r0, lr, r8, r0
 8022a0e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8022a12:	9001      	str	r0, [sp, #4]
 8022a14:	2800      	cmp	r0, #0
 8022a16:	f000 80d1 	beq.w	8022bbc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x294>
 8022a1a:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8022a1e:	d018      	beq.n	8022a52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x12a>
 8022a20:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8022a24:	fb0b f000 	mul.w	r0, fp, r0
 8022a28:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8022a2c:	fb0b fb02 	mul.w	fp, fp, r2
 8022a30:	0a02      	lsrs	r2, r0, #8
 8022a32:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8022a36:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8022a3a:	4402      	add	r2, r0
 8022a3c:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8022a40:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8022a44:	0a12      	lsrs	r2, r2, #8
 8022a46:	0a00      	lsrs	r0, r0, #8
 8022a48:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8022a4c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8022a50:	4302      	orrs	r2, r0
 8022a52:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8022a56:	d01a      	beq.n	8022a8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x166>
 8022a58:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 8022a5c:	fb0a f000 	mul.w	r0, sl, r0
 8022a60:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8022a64:	fb0a fa06 	mul.w	sl, sl, r6
 8022a68:	0a06      	lsrs	r6, r0, #8
 8022a6a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8022a6e:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8022a72:	4406      	add	r6, r0
 8022a74:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8022a78:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8022a7c:	0a36      	lsrs	r6, r6, #8
 8022a7e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022a82:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8022a86:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022a8a:	ea46 060a 	orr.w	r6, r6, sl
 8022a8e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022a92:	d01b      	beq.n	8022acc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1a4>
 8022a94:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8022a98:	fb09 fa0a 	mul.w	sl, r9, sl
 8022a9c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8022aa0:	fb09 f004 	mul.w	r0, r9, r4
 8022aa4:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8022aa8:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8022aac:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022ab0:	f500 7980 	add.w	r9, r0, #256	; 0x100
 8022ab4:	4454      	add	r4, sl
 8022ab6:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 8022aba:	0a24      	lsrs	r4, r4, #8
 8022abc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022ac0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8022ac4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8022ac8:	ea44 0409 	orr.w	r4, r4, r9
 8022acc:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022ad0:	d01b      	beq.n	8022b0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1e2>
 8022ad2:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8022ad6:	fb08 f909 	mul.w	r9, r8, r9
 8022ada:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022ade:	fb08 f003 	mul.w	r0, r8, r3
 8022ae2:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8022ae6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022aea:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8022aee:	f500 7880 	add.w	r8, r0, #256	; 0x100
 8022af2:	444b      	add	r3, r9
 8022af4:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 8022af8:	0a1b      	lsrs	r3, r3, #8
 8022afa:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8022afe:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022b02:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8022b06:	ea43 0308 	orr.w	r3, r3, r8
 8022b0a:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8022b0e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8022b12:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 8022b16:	fb0c f808 	mul.w	r8, ip, r8
 8022b1a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8022b1e:	fb0c f606 	mul.w	r6, ip, r6
 8022b22:	fb05 8909 	mla	r9, r5, r9, r8
 8022b26:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8022b2a:	fb05 6502 	mla	r5, r5, r2, r6
 8022b2e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8022b32:	fb07 9908 	mla	r9, r7, r8, r9
 8022b36:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8022b3a:	fb07 5704 	mla	r7, r7, r4, r5
 8022b3e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022b42:	8808      	ldrh	r0, [r1, #0]
 8022b44:	fb0e 9808 	mla	r8, lr, r8, r9
 8022b48:	fb0e 7e03 	mla	lr, lr, r3, r7
 8022b4c:	9b01      	ldr	r3, [sp, #4]
 8022b4e:	43da      	mvns	r2, r3
 8022b50:	1203      	asrs	r3, r0, #8
 8022b52:	b2d2      	uxtb	r2, r2
 8022b54:	10c4      	asrs	r4, r0, #3
 8022b56:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8022b5a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022b5e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022b62:	00c0      	lsls	r0, r0, #3
 8022b64:	4353      	muls	r3, r2
 8022b66:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 8022b6a:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8022b6e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8022b72:	b2c0      	uxtb	r0, r0
 8022b74:	ea48 0e0e 	orr.w	lr, r8, lr
 8022b78:	4354      	muls	r4, r2
 8022b7a:	4350      	muls	r0, r2
 8022b7c:	1c5a      	adds	r2, r3, #1
 8022b7e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022b82:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8022b86:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022b8a:	1c62      	adds	r2, r4, #1
 8022b8c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8022b90:	ea4f 221e 	mov.w	r2, lr, lsr #8
 8022b94:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8022b98:	021b      	lsls	r3, r3, #8
 8022b9a:	00d2      	lsls	r2, r2, #3
 8022b9c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022ba0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8022ba4:	4313      	orrs	r3, r2
 8022ba6:	1c42      	adds	r2, r0, #1
 8022ba8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022bac:	eb0e 2e10 	add.w	lr, lr, r0, lsr #8
 8022bb0:	f3ce 0ec4 	ubfx	lr, lr, #3, #5
 8022bb4:	ea4e 0e03 	orr.w	lr, lr, r3
 8022bb8:	f8a1 e000 	strh.w	lr, [r1]
 8022bbc:	b003      	add	sp, #12
 8022bbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022bc2:	bf00      	nop
 8022bc4:	0802aeb2 	.word	0x0802aeb2
 8022bc8:	0802b482 	.word	0x0802b482
 8022bcc:	0802af36 	.word	0x0802af36

08022bd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022bd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022bd4:	ed2d 8b08 	vpush	{d8-d11}
 8022bd8:	b09b      	sub	sp, #108	; 0x6c
 8022bda:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 8022bde:	9218      	str	r2, [sp, #96]	; 0x60
 8022be0:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8022be2:	9116      	str	r1, [sp, #88]	; 0x58
 8022be4:	9307      	str	r3, [sp, #28]
 8022be6:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8022bea:	9019      	str	r0, [sp, #100]	; 0x64
 8022bec:	6850      	ldr	r0, [r2, #4]
 8022bee:	6812      	ldr	r2, [r2, #0]
 8022bf0:	fb00 1303 	mla	r3, r0, r3, r1
 8022bf4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022bf8:	930a      	str	r3, [sp, #40]	; 0x28
 8022bfa:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8022bfc:	681b      	ldr	r3, [r3, #0]
 8022bfe:	930f      	str	r3, [sp, #60]	; 0x3c
 8022c00:	eeb0 aa40 	vmov.f32	s20, s0
 8022c04:	eef0 9a60 	vmov.f32	s19, s1
 8022c08:	eeb0 9a41 	vmov.f32	s18, s2
 8022c0c:	eeb0 8a62 	vmov.f32	s16, s5
 8022c10:	eef0 8a43 	vmov.f32	s17, s6
 8022c14:	eef0 ba44 	vmov.f32	s23, s8
 8022c18:	eeb0 ba64 	vmov.f32	s22, s9
 8022c1c:	eef0 aa45 	vmov.f32	s21, s10
 8022c20:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022c22:	2b00      	cmp	r3, #0
 8022c24:	dc03      	bgt.n	8022c2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8022c26:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022c28:	2b00      	cmp	r3, #0
 8022c2a:	f340 8386 	ble.w	802333a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 8022c2e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8022c30:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022c34:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022c38:	1e48      	subs	r0, r1, #1
 8022c3a:	1e57      	subs	r7, r2, #1
 8022c3c:	9b07      	ldr	r3, [sp, #28]
 8022c3e:	2b00      	cmp	r3, #0
 8022c40:	f340 8166 	ble.w	8022f10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x340>
 8022c44:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8022c48:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022c4c:	d406      	bmi.n	8022c5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022c4e:	4584      	cmp	ip, r0
 8022c50:	da04      	bge.n	8022c5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022c52:	2b00      	cmp	r3, #0
 8022c54:	db02      	blt.n	8022c5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022c56:	42bb      	cmp	r3, r7
 8022c58:	f2c0 815b 	blt.w	8022f12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8022c5c:	f11c 0c01 	adds.w	ip, ip, #1
 8022c60:	f100 814b 	bmi.w	8022efa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 8022c64:	4561      	cmp	r1, ip
 8022c66:	f2c0 8148 	blt.w	8022efa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 8022c6a:	3301      	adds	r3, #1
 8022c6c:	f100 8145 	bmi.w	8022efa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 8022c70:	429a      	cmp	r2, r3
 8022c72:	f2c0 8142 	blt.w	8022efa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 8022c76:	9b07      	ldr	r3, [sp, #28]
 8022c78:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8022c7a:	9317      	str	r3, [sp, #92]	; 0x5c
 8022c7c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022c7e:	2b00      	cmp	r3, #0
 8022c80:	f340 8165 	ble.w	8022f4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8022c84:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 8022c86:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8022c88:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8022c8c:	689b      	ldr	r3, [r3, #8]
 8022c8e:	1422      	asrs	r2, r4, #16
 8022c90:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8022c94:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8022c98:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8022c9c:	f100 81d5 	bmi.w	802304a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 8022ca0:	f103 38ff 	add.w	r8, r3, #4294967295
 8022ca4:	4542      	cmp	r2, r8
 8022ca6:	f280 81d0 	bge.w	802304a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 8022caa:	f1bc 0f00 	cmp.w	ip, #0
 8022cae:	f2c0 81cc 	blt.w	802304a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 8022cb2:	f10e 38ff 	add.w	r8, lr, #4294967295
 8022cb6:	45c4      	cmp	ip, r8
 8022cb8:	f280 81c7 	bge.w	802304a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 8022cbc:	b21b      	sxth	r3, r3
 8022cbe:	fb0c 2203 	mla	r2, ip, r3, r2
 8022cc2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8022cc4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8022cc8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8022ccc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8022cd0:	2900      	cmp	r1, #0
 8022cd2:	f000 8182 	beq.w	8022fda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 8022cd6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8022cda:	950b      	str	r5, [sp, #44]	; 0x2c
 8022cdc:	0e2d      	lsrs	r5, r5, #24
 8022cde:	9512      	str	r5, [sp, #72]	; 0x48
 8022ce0:	b180      	cbz	r0, 8022d04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8022ce2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8022ce6:	3b01      	subs	r3, #1
 8022ce8:	009b      	lsls	r3, r3, #2
 8022cea:	3304      	adds	r3, #4
 8022cec:	eb08 0c03 	add.w	ip, r8, r3
 8022cf0:	f858 3003 	ldr.w	r3, [r8, r3]
 8022cf4:	9308      	str	r3, [sp, #32]
 8022cf6:	0e1b      	lsrs	r3, r3, #24
 8022cf8:	9310      	str	r3, [sp, #64]	; 0x40
 8022cfa:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8022cfe:	930c      	str	r3, [sp, #48]	; 0x30
 8022d00:	0e1b      	lsrs	r3, r3, #24
 8022d02:	9313      	str	r3, [sp, #76]	; 0x4c
 8022d04:	b289      	uxth	r1, r1
 8022d06:	b280      	uxth	r0, r0
 8022d08:	fb01 f900 	mul.w	r9, r1, r0
 8022d0c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8022d10:	0109      	lsls	r1, r1, #4
 8022d12:	eba1 0809 	sub.w	r8, r1, r9
 8022d16:	b280      	uxth	r0, r0
 8022d18:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8022d1c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8022d1e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8022d20:	fa1f f888 	uxth.w	r8, r8
 8022d24:	1a09      	subs	r1, r1, r0
 8022d26:	b289      	uxth	r1, r1
 8022d28:	fb08 f303 	mul.w	r3, r8, r3
 8022d2c:	fb01 330e 	mla	r3, r1, lr, r3
 8022d30:	fb00 3305 	mla	r3, r0, r5, r3
 8022d34:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8022d36:	fb09 3305 	mla	r3, r9, r5, r3
 8022d3a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022d3e:	2b00      	cmp	r3, #0
 8022d40:	f000 80d2 	beq.w	8022ee8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8022d44:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8022d48:	d01b      	beq.n	8022d82 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 8022d4a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8022d4e:	fb0e fa0a 	mul.w	sl, lr, sl
 8022d52:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8022d56:	fb0e fe02 	mul.w	lr, lr, r2
 8022d5a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8022d5e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8022d62:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022d66:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8022d6a:	4452      	add	r2, sl
 8022d6c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8022d70:	0a12      	lsrs	r2, r2, #8
 8022d72:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022d76:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8022d7a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022d7e:	ea42 020c 	orr.w	r2, r2, ip
 8022d82:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8022d84:	2dff      	cmp	r5, #255	; 0xff
 8022d86:	d021      	beq.n	8022dcc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8022d88:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8022d8a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8022d8e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8022d90:	fb05 fb0b 	mul.w	fp, r5, fp
 8022d94:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8022d96:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8022d9a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8022d9c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022da0:	fb05 fa0a 	mul.w	sl, r5, sl
 8022da4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022da8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022dac:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022db0:	44de      	add	lr, fp
 8022db2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022db6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022dba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022dbe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022dc2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022dc6:	ea4e 050a 	orr.w	r5, lr, sl
 8022dca:	950b      	str	r5, [sp, #44]	; 0x2c
 8022dcc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8022dce:	2dff      	cmp	r5, #255	; 0xff
 8022dd0:	d021      	beq.n	8022e16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 8022dd2:	9d08      	ldr	r5, [sp, #32]
 8022dd4:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8022dd8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8022dda:	fb05 fb0b 	mul.w	fp, r5, fp
 8022dde:	9d08      	ldr	r5, [sp, #32]
 8022de0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8022de4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8022de6:	fb05 fa0e 	mul.w	sl, r5, lr
 8022dea:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022dee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022df2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022df6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022dfa:	44de      	add	lr, fp
 8022dfc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022e00:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022e04:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022e08:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022e0c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022e10:	ea4e 050a 	orr.w	r5, lr, sl
 8022e14:	9508      	str	r5, [sp, #32]
 8022e16:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8022e18:	2dff      	cmp	r5, #255	; 0xff
 8022e1a:	d021      	beq.n	8022e60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8022e1c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022e1e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8022e22:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8022e24:	fb05 fb0b 	mul.w	fp, r5, fp
 8022e28:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022e2a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8022e2e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8022e30:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022e34:	fb05 fa0a 	mul.w	sl, r5, sl
 8022e38:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022e3c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022e40:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022e44:	44de      	add	lr, fp
 8022e46:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022e4a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022e4e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022e52:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022e56:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022e5a:	ea4e 050a 	orr.w	r5, lr, sl
 8022e5e:	950c      	str	r5, [sp, #48]	; 0x30
 8022e60:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8022e62:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8022e66:	9d08      	ldr	r5, [sp, #32]
 8022e68:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8022e6c:	fb08 fc0c 	mul.w	ip, r8, ip
 8022e70:	fb01 cc0e 	mla	ip, r1, lr, ip
 8022e74:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8022e78:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022e7a:	fb00 cc0e 	mla	ip, r0, lr, ip
 8022e7e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8022e82:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8022e84:	fb09 cc0e 	mla	ip, r9, lr, ip
 8022e88:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8022e8c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8022e90:	fb08 f80e 	mul.w	r8, r8, lr
 8022e94:	fb01 8202 	mla	r2, r1, r2, r8
 8022e98:	9908      	ldr	r1, [sp, #32]
 8022e9a:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8022e9e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8022ea0:	fb00 220a 	mla	r2, r0, sl, r2
 8022ea4:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8022ea8:	fb09 2900 	mla	r9, r9, r0, r2
 8022eac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022eb0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022eb4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022eb8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8022ebc:	ea4c 0c09 	orr.w	ip, ip, r9
 8022ec0:	2bff      	cmp	r3, #255	; 0xff
 8022ec2:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8022ec6:	f040 8091 	bne.w	8022fec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 8022eca:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8022ece:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8022ed2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022ed6:	f022 0207 	bic.w	r2, r2, #7
 8022eda:	431a      	orrs	r2, r3
 8022edc:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8022ee0:	ea4c 0c02 	orr.w	ip, ip, r2
 8022ee4:	f8a7 c000 	strh.w	ip, [r7]
 8022ee8:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8022eea:	441c      	add	r4, r3
 8022eec:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8022eee:	441e      	add	r6, r3
 8022ef0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022ef2:	3b01      	subs	r3, #1
 8022ef4:	3702      	adds	r7, #2
 8022ef6:	9317      	str	r3, [sp, #92]	; 0x5c
 8022ef8:	e6c0      	b.n	8022c7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8022efa:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8022efc:	441c      	add	r4, r3
 8022efe:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8022f00:	441e      	add	r6, r3
 8022f02:	9b07      	ldr	r3, [sp, #28]
 8022f04:	3b01      	subs	r3, #1
 8022f06:	9307      	str	r3, [sp, #28]
 8022f08:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022f0a:	3302      	adds	r3, #2
 8022f0c:	930a      	str	r3, [sp, #40]	; 0x28
 8022f0e:	e695      	b.n	8022c3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022f10:	d024      	beq.n	8022f5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8022f12:	9b07      	ldr	r3, [sp, #28]
 8022f14:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8022f16:	3b01      	subs	r3, #1
 8022f18:	fb00 4003 	mla	r0, r0, r3, r4
 8022f1c:	1400      	asrs	r0, r0, #16
 8022f1e:	f53f aeaa 	bmi.w	8022c76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8022f22:	3901      	subs	r1, #1
 8022f24:	4288      	cmp	r0, r1
 8022f26:	f6bf aea6 	bge.w	8022c76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8022f2a:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8022f2c:	fb01 6303 	mla	r3, r1, r3, r6
 8022f30:	141b      	asrs	r3, r3, #16
 8022f32:	f53f aea0 	bmi.w	8022c76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8022f36:	3a01      	subs	r2, #1
 8022f38:	4293      	cmp	r3, r2
 8022f3a:	f6bf ae9c 	bge.w	8022c76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8022f3e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8022f42:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8022f46:	f1bb 0f00 	cmp.w	fp, #0
 8022f4a:	f300 809a 	bgt.w	8023082 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 8022f4e:	9b07      	ldr	r3, [sp, #28]
 8022f50:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8022f54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022f56:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8022f5a:	930a      	str	r3, [sp, #40]	; 0x28
 8022f5c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022f5e:	2b00      	cmp	r3, #0
 8022f60:	f340 81eb 	ble.w	802333a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 8022f64:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8022f68:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022f6c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8022f70:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022f72:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8022f76:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8022f7a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8022f7e:	eef0 6a48 	vmov.f32	s13, s16
 8022f82:	ee69 7a27 	vmul.f32	s15, s18, s15
 8022f86:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022f8a:	ee37 8a48 	vsub.f32	s16, s14, s16
 8022f8e:	ee16 4a90 	vmov	r4, s13
 8022f92:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8022f96:	eef0 6a68 	vmov.f32	s13, s17
 8022f9a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8022f9e:	ee18 2a10 	vmov	r2, s16
 8022fa2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8022fa6:	fb92 f3f3 	sdiv	r3, r2, r3
 8022faa:	ee18 2a90 	vmov	r2, s17
 8022fae:	932f      	str	r3, [sp, #188]	; 0xbc
 8022fb0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022fb2:	fb92 f3f3 	sdiv	r3, r2, r3
 8022fb6:	9330      	str	r3, [sp, #192]	; 0xc0
 8022fb8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022fba:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8022fbc:	3b01      	subs	r3, #1
 8022fbe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022fc2:	9316      	str	r3, [sp, #88]	; 0x58
 8022fc4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022fc6:	bf08      	it	eq
 8022fc8:	4613      	moveq	r3, r2
 8022fca:	ee16 6a90 	vmov	r6, s13
 8022fce:	9307      	str	r3, [sp, #28]
 8022fd0:	eef0 8a67 	vmov.f32	s17, s15
 8022fd4:	eeb0 8a47 	vmov.f32	s16, s14
 8022fd8:	e622      	b.n	8022c20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8022fda:	2800      	cmp	r0, #0
 8022fdc:	f43f ae92 	beq.w	8022d04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8022fe0:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8022fe4:	9308      	str	r3, [sp, #32]
 8022fe6:	0e1b      	lsrs	r3, r3, #24
 8022fe8:	9310      	str	r3, [sp, #64]	; 0x40
 8022fea:	e68b      	b.n	8022d04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8022fec:	8839      	ldrh	r1, [r7, #0]
 8022fee:	4dd5      	ldr	r5, [pc, #852]	; (8023344 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 8022ff0:	43db      	mvns	r3, r3
 8022ff2:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8022ff6:	fa5f f883 	uxtb.w	r8, r3
 8022ffa:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8022ffe:	fb0e fe08 	mul.w	lr, lr, r8
 8023002:	10c8      	asrs	r0, r1, #3
 8023004:	00cb      	lsls	r3, r1, #3
 8023006:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802300a:	f10e 0101 	add.w	r1, lr, #1
 802300e:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8023012:	fb00 f008 	mul.w	r0, r0, r8
 8023016:	ea4f 411c 	mov.w	r1, ip, lsr #16
 802301a:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 802301e:	f100 0e01 	add.w	lr, r0, #1
 8023022:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8023026:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802302a:	b2db      	uxtb	r3, r3
 802302c:	b2c9      	uxtb	r1, r1
 802302e:	00d2      	lsls	r2, r2, #3
 8023030:	fb03 f308 	mul.w	r3, r3, r8
 8023034:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8023038:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802303c:	430a      	orrs	r2, r1
 802303e:	1c59      	adds	r1, r3, #1
 8023040:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8023044:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8023048:	e748      	b.n	8022edc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 802304a:	f112 0801 	adds.w	r8, r2, #1
 802304e:	f53f af4b 	bmi.w	8022ee8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8023052:	4543      	cmp	r3, r8
 8023054:	f6ff af48 	blt.w	8022ee8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8023058:	f11c 0801 	adds.w	r8, ip, #1
 802305c:	f53f af44 	bmi.w	8022ee8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8023060:	45c6      	cmp	lr, r8
 8023062:	f6ff af41 	blt.w	8022ee8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8023066:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802306a:	fa0f f28e 	sxth.w	r2, lr
 802306e:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8023072:	9200      	str	r2, [sp, #0]
 8023074:	b21b      	sxth	r3, r3
 8023076:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023078:	9819      	ldr	r0, [sp, #100]	; 0x64
 802307a:	4639      	mov	r1, r7
 802307c:	f7ff fc54 	bl	8022928 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8023080:	e732      	b.n	8022ee8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8023082:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8023084:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023086:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802308a:	1421      	asrs	r1, r4, #16
 802308c:	1433      	asrs	r3, r6, #16
 802308e:	fb07 1303 	mla	r3, r7, r3, r1
 8023092:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8023094:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8023098:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802309c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80230a0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80230a4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80230a8:	2a00      	cmp	r2, #0
 80230aa:	f000 8107 	beq.w	80232bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ec>
 80230ae:	684d      	ldr	r5, [r1, #4]
 80230b0:	950d      	str	r5, [sp, #52]	; 0x34
 80230b2:	0e2d      	lsrs	r5, r5, #24
 80230b4:	9514      	str	r5, [sp, #80]	; 0x50
 80230b6:	b178      	cbz	r0, 80230d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 80230b8:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80230bc:	3f01      	subs	r7, #1
 80230be:	00bf      	lsls	r7, r7, #2
 80230c0:	3704      	adds	r7, #4
 80230c2:	eb01 0e07 	add.w	lr, r1, r7
 80230c6:	59c9      	ldr	r1, [r1, r7]
 80230c8:	9109      	str	r1, [sp, #36]	; 0x24
 80230ca:	0e09      	lsrs	r1, r1, #24
 80230cc:	9111      	str	r1, [sp, #68]	; 0x44
 80230ce:	f8de 1004 	ldr.w	r1, [lr, #4]
 80230d2:	910e      	str	r1, [sp, #56]	; 0x38
 80230d4:	0e09      	lsrs	r1, r1, #24
 80230d6:	9115      	str	r1, [sp, #84]	; 0x54
 80230d8:	b292      	uxth	r2, r2
 80230da:	b280      	uxth	r0, r0
 80230dc:	fb02 f900 	mul.w	r9, r2, r0
 80230e0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80230e4:	0112      	lsls	r2, r2, #4
 80230e6:	eba2 0e09 	sub.w	lr, r2, r9
 80230ea:	b280      	uxth	r0, r0
 80230ec:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80230f0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80230f2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80230f4:	fa1f fe8e 	uxth.w	lr, lr
 80230f8:	1a09      	subs	r1, r1, r0
 80230fa:	b289      	uxth	r1, r1
 80230fc:	fb0e f202 	mul.w	r2, lr, r2
 8023100:	fb01 220c 	mla	r2, r1, ip, r2
 8023104:	fb00 2205 	mla	r2, r0, r5, r2
 8023108:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802310a:	fb09 2205 	mla	r2, r9, r5, r2
 802310e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8023112:	2a00      	cmp	r2, #0
 8023114:	f000 80c9 	beq.w	80232aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8023118:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802311c:	d019      	beq.n	8023152 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x582>
 802311e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8023122:	fb0c fa0a 	mul.w	sl, ip, sl
 8023126:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802312a:	fb0c fc03 	mul.w	ip, ip, r3
 802312e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023132:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023136:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802313a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802313e:	4453      	add	r3, sl
 8023140:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023144:	0a1b      	lsrs	r3, r3, #8
 8023146:	0a3f      	lsrs	r7, r7, #8
 8023148:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802314c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8023150:	433b      	orrs	r3, r7
 8023152:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023154:	2dff      	cmp	r5, #255	; 0xff
 8023156:	d020      	beq.n	802319a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ca>
 8023158:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802315a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802315e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023160:	436f      	muls	r7, r5
 8023162:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023164:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023168:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802316a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802316e:	fb05 fa0a 	mul.w	sl, r5, sl
 8023172:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023176:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802317a:	44bc      	add	ip, r7
 802317c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023180:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023184:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023188:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802318c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023190:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023194:	ea4c 050a 	orr.w	r5, ip, sl
 8023198:	950d      	str	r5, [sp, #52]	; 0x34
 802319a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802319c:	2dff      	cmp	r5, #255	; 0xff
 802319e:	d020      	beq.n	80231e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x612>
 80231a0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80231a2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80231a6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80231a8:	436f      	muls	r7, r5
 80231aa:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80231ac:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80231b0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80231b2:	fb05 fa0c 	mul.w	sl, r5, ip
 80231b6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80231ba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80231be:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80231c2:	44bc      	add	ip, r7
 80231c4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80231c8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80231cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80231d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80231d4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80231d8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80231dc:	ea4c 050a 	orr.w	r5, ip, sl
 80231e0:	9509      	str	r5, [sp, #36]	; 0x24
 80231e2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80231e4:	2dff      	cmp	r5, #255	; 0xff
 80231e6:	d020      	beq.n	802322a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65a>
 80231e8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80231ea:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80231ee:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80231f0:	436f      	muls	r7, r5
 80231f2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80231f4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80231f8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80231fa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80231fe:	fb05 fa0a 	mul.w	sl, r5, sl
 8023202:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023206:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802320a:	44bc      	add	ip, r7
 802320c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023210:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023214:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023218:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802321c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023220:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023224:	ea4c 050a 	orr.w	r5, ip, sl
 8023228:	950e      	str	r5, [sp, #56]	; 0x38
 802322a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802322c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023230:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023232:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8023236:	fb0e f707 	mul.w	r7, lr, r7
 802323a:	fb01 770c 	mla	r7, r1, ip, r7
 802323e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023242:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023244:	fb00 770c 	mla	r7, r0, ip, r7
 8023248:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802324c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802324e:	fb09 770c 	mla	r7, r9, ip, r7
 8023252:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8023256:	fb0e fe0c 	mul.w	lr, lr, ip
 802325a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802325e:	fb01 e303 	mla	r3, r1, r3, lr
 8023262:	9909      	ldr	r1, [sp, #36]	; 0x24
 8023264:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8023268:	990e      	ldr	r1, [sp, #56]	; 0x38
 802326a:	fb00 330a 	mla	r3, r0, sl, r3
 802326e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8023272:	fb09 3c0c 	mla	ip, r9, ip, r3
 8023276:	0a3f      	lsrs	r7, r7, #8
 8023278:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802327c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8023280:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023284:	ea47 070c 	orr.w	r7, r7, ip
 8023288:	2aff      	cmp	r2, #255	; 0xff
 802328a:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802328e:	d11e      	bne.n	80232ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 8023290:	097a      	lsrs	r2, r7, #5
 8023292:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8023296:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802329a:	f023 0307 	bic.w	r3, r3, #7
 802329e:	4313      	orrs	r3, r2
 80232a0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80232a4:	431f      	orrs	r7, r3
 80232a6:	f8a8 7000 	strh.w	r7, [r8]
 80232aa:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80232ac:	441c      	add	r4, r3
 80232ae:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80232b0:	f108 0802 	add.w	r8, r8, #2
 80232b4:	441e      	add	r6, r3
 80232b6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80232ba:	e644      	b.n	8022f46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 80232bc:	2800      	cmp	r0, #0
 80232be:	f43f af0b 	beq.w	80230d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 80232c2:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80232c6:	9109      	str	r1, [sp, #36]	; 0x24
 80232c8:	0e09      	lsrs	r1, r1, #24
 80232ca:	9111      	str	r1, [sp, #68]	; 0x44
 80232cc:	e704      	b.n	80230d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 80232ce:	f8b8 1000 	ldrh.w	r1, [r8]
 80232d2:	43d2      	mvns	r2, r2
 80232d4:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80232d8:	fa5f fe82 	uxtb.w	lr, r2
 80232dc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80232e0:	fb0c fc0e 	mul.w	ip, ip, lr
 80232e4:	10c8      	asrs	r0, r1, #3
 80232e6:	00ca      	lsls	r2, r1, #3
 80232e8:	f10c 0101 	add.w	r1, ip, #1
 80232ec:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80232f0:	0c39      	lsrs	r1, r7, #16
 80232f2:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80232f6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80232fa:	4912      	ldr	r1, [pc, #72]	; (8023344 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 80232fc:	fb00 f00e 	mul.w	r0, r0, lr
 8023300:	fa5f fc8c 	uxtb.w	ip, ip
 8023304:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8023308:	b2d2      	uxtb	r2, r2
 802330a:	1c41      	adds	r1, r0, #1
 802330c:	fb02 f20e 	mul.w	r2, r2, lr
 8023310:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8023314:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8023318:	1c51      	adds	r1, r2, #1
 802331a:	00c0      	lsls	r0, r0, #3
 802331c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8023320:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023324:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8023328:	ea4c 0c00 	orr.w	ip, ip, r0
 802332c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8023330:	ea47 0c0c 	orr.w	ip, r7, ip
 8023334:	f8a8 c000 	strh.w	ip, [r8]
 8023338:	e7b7      	b.n	80232aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 802333a:	b01b      	add	sp, #108	; 0x6c
 802333c:	ecbd 8b08 	vpop	{d8-d11}
 8023340:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023344:	fffff800 	.word	0xfffff800

08023348 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8023348:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802334c:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8023350:	2c00      	cmp	r4, #0
 8023352:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8023356:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 802335a:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 802335e:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 8023362:	fb04 ce03 	mla	lr, r4, r3, ip
 8023366:	db60      	blt.n	802342a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 8023368:	45a1      	cmp	r9, r4
 802336a:	dd5e      	ble.n	802342a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 802336c:	f1bc 0f00 	cmp.w	ip, #0
 8023370:	db59      	blt.n	8023426 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 8023372:	45e0      	cmp	r8, ip
 8023374:	dd57      	ble.n	8023426 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 8023376:	ea4f 005e 	mov.w	r0, lr, lsr #1
 802337a:	f01e 0f01 	tst.w	lr, #1
 802337e:	5c16      	ldrb	r6, [r2, r0]
 8023380:	bf0c      	ite	eq
 8023382:	f006 060f 	andeq.w	r6, r6, #15
 8023386:	1136      	asrne	r6, r6, #4
 8023388:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802338c:	b2f6      	uxtb	r6, r6
 802338e:	f11c 0001 	adds.w	r0, ip, #1
 8023392:	d44d      	bmi.n	8023430 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 8023394:	4580      	cmp	r8, r0
 8023396:	dd4b      	ble.n	8023430 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 8023398:	2d00      	cmp	r5, #0
 802339a:	d04b      	beq.n	8023434 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 802339c:	f10e 0a01 	add.w	sl, lr, #1
 80233a0:	ea4f 005a 	mov.w	r0, sl, lsr #1
 80233a4:	f01a 0f01 	tst.w	sl, #1
 80233a8:	5c10      	ldrb	r0, [r2, r0]
 80233aa:	bf0c      	ite	eq
 80233ac:	f000 000f 	andeq.w	r0, r0, #15
 80233b0:	1100      	asrne	r0, r0, #4
 80233b2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80233b6:	b2c0      	uxtb	r0, r0
 80233b8:	3401      	adds	r4, #1
 80233ba:	d43f      	bmi.n	802343c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 80233bc:	45a1      	cmp	r9, r4
 80233be:	dd3d      	ble.n	802343c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 80233c0:	2f00      	cmp	r7, #0
 80233c2:	f000 80a8 	beq.w	8023516 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ce>
 80233c6:	f1bc 0f00 	cmp.w	ip, #0
 80233ca:	db35      	blt.n	8023438 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 80233cc:	45e0      	cmp	r8, ip
 80233ce:	dd33      	ble.n	8023438 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 80233d0:	eb03 090e 	add.w	r9, r3, lr
 80233d4:	ea4f 0459 	mov.w	r4, r9, lsr #1
 80233d8:	f019 0f01 	tst.w	r9, #1
 80233dc:	5d14      	ldrb	r4, [r2, r4]
 80233de:	bf0c      	ite	eq
 80233e0:	f004 040f 	andeq.w	r4, r4, #15
 80233e4:	1124      	asrne	r4, r4, #4
 80233e6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80233ea:	b2e4      	uxtb	r4, r4
 80233ec:	f11c 0c01 	adds.w	ip, ip, #1
 80233f0:	d427      	bmi.n	8023442 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 80233f2:	45e0      	cmp	r8, ip
 80233f4:	dd25      	ble.n	8023442 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 80233f6:	b335      	cbz	r5, 8023446 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 80233f8:	3301      	adds	r3, #1
 80233fa:	449e      	add	lr, r3
 80233fc:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8023400:	f01e 0f01 	tst.w	lr, #1
 8023404:	5cd2      	ldrb	r2, [r2, r3]
 8023406:	bf0c      	ite	eq
 8023408:	f002 020f 	andeq.w	r2, r2, #15
 802340c:	1112      	asrne	r2, r2, #4
 802340e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8023412:	b2d3      	uxtb	r3, r2
 8023414:	2d0f      	cmp	r5, #15
 8023416:	d917      	bls.n	8023448 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 8023418:	4b42      	ldr	r3, [pc, #264]	; (8023524 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1dc>)
 802341a:	4a43      	ldr	r2, [pc, #268]	; (8023528 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e0>)
 802341c:	4843      	ldr	r0, [pc, #268]	; (802352c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e4>)
 802341e:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8023422:	f001 f809 	bl	8024438 <__assert_func>
 8023426:	2600      	movs	r6, #0
 8023428:	e7b1      	b.n	802338e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 802342a:	2000      	movs	r0, #0
 802342c:	4606      	mov	r6, r0
 802342e:	e7c3      	b.n	80233b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8023430:	2000      	movs	r0, #0
 8023432:	e7c1      	b.n	80233b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8023434:	4628      	mov	r0, r5
 8023436:	e7bf      	b.n	80233b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8023438:	2400      	movs	r4, #0
 802343a:	e7d7      	b.n	80233ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 802343c:	2300      	movs	r3, #0
 802343e:	461c      	mov	r4, r3
 8023440:	e7e8      	b.n	8023414 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8023442:	2300      	movs	r3, #0
 8023444:	e7e6      	b.n	8023414 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8023446:	462b      	mov	r3, r5
 8023448:	2f0f      	cmp	r7, #15
 802344a:	d8e5      	bhi.n	8023418 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 802344c:	b2ad      	uxth	r5, r5
 802344e:	b2bf      	uxth	r7, r7
 8023450:	fb05 fc07 	mul.w	ip, r5, r7
 8023454:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 8023458:	012d      	lsls	r5, r5, #4
 802345a:	b2bf      	uxth	r7, r7
 802345c:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8023460:	eba5 050c 	sub.w	r5, r5, ip
 8023464:	1bd2      	subs	r2, r2, r7
 8023466:	b2ad      	uxth	r5, r5
 8023468:	b292      	uxth	r2, r2
 802346a:	4368      	muls	r0, r5
 802346c:	fb06 0002 	mla	r0, r6, r2, r0
 8023470:	fb07 0404 	mla	r4, r7, r4, r0
 8023474:	fb0c 4303 	mla	r3, ip, r3, r4
 8023478:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802347c:	b1b3      	cbz	r3, 80234ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 802347e:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8023482:	435a      	muls	r2, r3
 8023484:	1c53      	adds	r3, r2, #1
 8023486:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802348a:	4a29      	ldr	r2, [pc, #164]	; (8023530 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e8>)
 802348c:	121b      	asrs	r3, r3, #8
 802348e:	6812      	ldr	r2, [r2, #0]
 8023490:	2bff      	cmp	r3, #255	; 0xff
 8023492:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8023496:	d10b      	bne.n	80234b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x168>
 8023498:	4b26      	ldr	r3, [pc, #152]	; (8023534 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ec>)
 802349a:	0950      	lsrs	r0, r2, #5
 802349c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80234a0:	4033      	ands	r3, r6
 80234a2:	4318      	orrs	r0, r3
 80234a4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80234a8:	4302      	orrs	r2, r0
 80234aa:	800a      	strh	r2, [r1, #0]
 80234ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80234b0:	880d      	ldrh	r5, [r1, #0]
 80234b2:	b29f      	uxth	r7, r3
 80234b4:	122c      	asrs	r4, r5, #8
 80234b6:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80234ba:	43db      	mvns	r3, r3
 80234bc:	b2db      	uxtb	r3, r3
 80234be:	fb10 f007 	smulbb	r0, r0, r7
 80234c2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80234c6:	fb04 0403 	mla	r4, r4, r3, r0
 80234ca:	b2f6      	uxtb	r6, r6
 80234cc:	10e8      	asrs	r0, r5, #3
 80234ce:	b2d2      	uxtb	r2, r2
 80234d0:	00ed      	lsls	r5, r5, #3
 80234d2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80234d6:	fb12 f207 	smulbb	r2, r2, r7
 80234da:	fb16 f607 	smulbb	r6, r6, r7
 80234de:	b2ed      	uxtb	r5, r5
 80234e0:	b2a4      	uxth	r4, r4
 80234e2:	fb00 6603 	mla	r6, r0, r3, r6
 80234e6:	fb05 2303 	mla	r3, r5, r3, r2
 80234ea:	b29a      	uxth	r2, r3
 80234ec:	1c63      	adds	r3, r4, #1
 80234ee:	b2b0      	uxth	r0, r6
 80234f0:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80234f4:	1c53      	adds	r3, r2, #1
 80234f6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80234fa:	1c42      	adds	r2, r0, #1
 80234fc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023500:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8023504:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023508:	0940      	lsrs	r0, r0, #5
 802350a:	4323      	orrs	r3, r4
 802350c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023510:	4303      	orrs	r3, r0
 8023512:	800b      	strh	r3, [r1, #0]
 8023514:	e7ca      	b.n	80234ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 8023516:	2d0f      	cmp	r5, #15
 8023518:	f63f af7e 	bhi.w	8023418 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 802351c:	463b      	mov	r3, r7
 802351e:	463c      	mov	r4, r7
 8023520:	e794      	b.n	802344c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 8023522:	bf00      	nop
 8023524:	0802aeb2 	.word	0x0802aeb2
 8023528:	0802b482 	.word	0x0802b482
 802352c:	0802af36 	.word	0x0802af36
 8023530:	20020a98 	.word	0x20020a98
 8023534:	00fff800 	.word	0x00fff800

08023538 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023538:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802353c:	ed2d 8b08 	vpush	{d8-d11}
 8023540:	b097      	sub	sp, #92	; 0x5c
 8023542:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 8023546:	9214      	str	r2, [sp, #80]	; 0x50
 8023548:	9309      	str	r3, [sp, #36]	; 0x24
 802354a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 802354c:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8023550:	910d      	str	r1, [sp, #52]	; 0x34
 8023552:	930f      	str	r3, [sp, #60]	; 0x3c
 8023554:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8023558:	9015      	str	r0, [sp, #84]	; 0x54
 802355a:	6850      	ldr	r0, [r2, #4]
 802355c:	6812      	ldr	r2, [r2, #0]
 802355e:	fb00 1303 	mla	r3, r0, r3, r1
 8023562:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8023566:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023568:	689b      	ldr	r3, [r3, #8]
 802356a:	3301      	adds	r3, #1
 802356c:	f023 0301 	bic.w	r3, r3, #1
 8023570:	930a      	str	r3, [sp, #40]	; 0x28
 8023572:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023574:	681f      	ldr	r7, [r3, #0]
 8023576:	eeb0 aa40 	vmov.f32	s20, s0
 802357a:	eef0 9a60 	vmov.f32	s19, s1
 802357e:	eeb0 9a41 	vmov.f32	s18, s2
 8023582:	eeb0 8a62 	vmov.f32	s16, s5
 8023586:	eef0 8a43 	vmov.f32	s17, s6
 802358a:	eef0 ba44 	vmov.f32	s23, s8
 802358e:	eeb0 ba64 	vmov.f32	s22, s9
 8023592:	eef0 aa45 	vmov.f32	s21, s10
 8023596:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8023598:	2b00      	cmp	r3, #0
 802359a:	dc03      	bgt.n	80235a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802359c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802359e:	2b00      	cmp	r3, #0
 80235a0:	f340 8287 	ble.w	8023ab2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 80235a4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80235a6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80235aa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80235ae:	1e48      	subs	r0, r1, #1
 80235b0:	f102 3cff 	add.w	ip, r2, #4294967295
 80235b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80235b6:	2b00      	cmp	r3, #0
 80235b8:	f340 80c4 	ble.w	8023744 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 80235bc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80235c0:	ea4f 4326 	mov.w	r3, r6, asr #16
 80235c4:	d406      	bmi.n	80235d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80235c6:	4586      	cmp	lr, r0
 80235c8:	da04      	bge.n	80235d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80235ca:	2b00      	cmp	r3, #0
 80235cc:	db02      	blt.n	80235d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80235ce:	4563      	cmp	r3, ip
 80235d0:	f2c0 80b9 	blt.w	8023746 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 80235d4:	f11e 0e01 	adds.w	lr, lr, #1
 80235d8:	f100 80aa 	bmi.w	8023730 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 80235dc:	4571      	cmp	r1, lr
 80235de:	f2c0 80a7 	blt.w	8023730 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 80235e2:	3301      	adds	r3, #1
 80235e4:	f100 80a4 	bmi.w	8023730 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 80235e8:	429a      	cmp	r2, r3
 80235ea:	f2c0 80a1 	blt.w	8023730 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 80235ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80235f0:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 80235f4:	930e      	str	r3, [sp, #56]	; 0x38
 80235f6:	46c8      	mov	r8, r9
 80235f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80235fa:	2b00      	cmp	r3, #0
 80235fc:	f340 80c3 	ble.w	8023786 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8023600:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023602:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8023606:	1423      	asrs	r3, r4, #16
 8023608:	ea4f 4026 	mov.w	r0, r6, asr #16
 802360c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023610:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8023614:	f100 814d 	bmi.w	80238b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8023618:	f10c 3bff 	add.w	fp, ip, #4294967295
 802361c:	455b      	cmp	r3, fp
 802361e:	f280 8148 	bge.w	80238b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8023622:	2800      	cmp	r0, #0
 8023624:	f2c0 8145 	blt.w	80238b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8023628:	f10e 3bff 	add.w	fp, lr, #4294967295
 802362c:	4558      	cmp	r0, fp
 802362e:	f280 8140 	bge.w	80238b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8023632:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8023634:	fb00 3305 	mla	r3, r0, r5, r3
 8023638:	0858      	lsrs	r0, r3, #1
 802363a:	07dd      	lsls	r5, r3, #31
 802363c:	f817 c000 	ldrb.w	ip, [r7, r0]
 8023640:	bf54      	ite	pl
 8023642:	f00c 0c0f 	andpl.w	ip, ip, #15
 8023646:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802364a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802364e:	fa5f fc8c 	uxtb.w	ip, ip
 8023652:	2a00      	cmp	r2, #0
 8023654:	f000 80db 	beq.w	802380e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8023658:	1c58      	adds	r0, r3, #1
 802365a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 802365e:	07c0      	lsls	r0, r0, #31
 8023660:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8023664:	bf54      	ite	pl
 8023666:	f00e 0e0f 	andpl.w	lr, lr, #15
 802366a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 802366e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8023672:	fa5f f08e 	uxtb.w	r0, lr
 8023676:	9010      	str	r0, [sp, #64]	; 0x40
 8023678:	b1c9      	cbz	r1, 80236ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802367a:	4453      	add	r3, sl
 802367c:	0858      	lsrs	r0, r3, #1
 802367e:	07dd      	lsls	r5, r3, #31
 8023680:	5c38      	ldrb	r0, [r7, r0]
 8023682:	bf54      	ite	pl
 8023684:	f000 000f 	andpl.w	r0, r0, #15
 8023688:	1100      	asrmi	r0, r0, #4
 802368a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802368e:	3301      	adds	r3, #1
 8023690:	b2c0      	uxtb	r0, r0
 8023692:	900b      	str	r0, [sp, #44]	; 0x2c
 8023694:	0858      	lsrs	r0, r3, #1
 8023696:	07dd      	lsls	r5, r3, #31
 8023698:	f817 e000 	ldrb.w	lr, [r7, r0]
 802369c:	bf54      	ite	pl
 802369e:	f00e 030f 	andpl.w	r3, lr, #15
 80236a2:	ea4f 132e 	movmi.w	r3, lr, asr #4
 80236a6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80236aa:	b2db      	uxtb	r3, r3
 80236ac:	9311      	str	r3, [sp, #68]	; 0x44
 80236ae:	b292      	uxth	r2, r2
 80236b0:	b289      	uxth	r1, r1
 80236b2:	fb02 f301 	mul.w	r3, r2, r1
 80236b6:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80236ba:	0112      	lsls	r2, r2, #4
 80236bc:	b289      	uxth	r1, r1
 80236be:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80236c2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80236c4:	1ad2      	subs	r2, r2, r3
 80236c6:	1a40      	subs	r0, r0, r1
 80236c8:	b292      	uxth	r2, r2
 80236ca:	436a      	muls	r2, r5
 80236cc:	b280      	uxth	r0, r0
 80236ce:	fb0c 2c00 	mla	ip, ip, r0, r2
 80236d2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80236d4:	fb01 c102 	mla	r1, r1, r2, ip
 80236d8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80236da:	fb03 1302 	mla	r3, r3, r2, r1
 80236de:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80236e2:	b1db      	cbz	r3, 802371c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80236e4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80236e6:	4353      	muls	r3, r2
 80236e8:	1c5a      	adds	r2, r3, #1
 80236ea:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80236ee:	4ac6      	ldr	r2, [pc, #792]	; (8023a08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 80236f0:	121b      	asrs	r3, r3, #8
 80236f2:	6812      	ldr	r2, [r2, #0]
 80236f4:	2bff      	cmp	r3, #255	; 0xff
 80236f6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80236fa:	f040 8099 	bne.w	8023830 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 80236fe:	0953      	lsrs	r3, r2, #5
 8023700:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8023704:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023708:	f02c 0c07 	bic.w	ip, ip, #7
 802370c:	ea43 0c0c 	orr.w	ip, r3, ip
 8023710:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023714:	ea4c 0202 	orr.w	r2, ip, r2
 8023718:	f8a8 2000 	strh.w	r2, [r8]
 802371c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802371e:	441c      	add	r4, r3
 8023720:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023722:	441e      	add	r6, r3
 8023724:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023726:	3b01      	subs	r3, #1
 8023728:	f108 0802 	add.w	r8, r8, #2
 802372c:	930e      	str	r3, [sp, #56]	; 0x38
 802372e:	e763      	b.n	80235f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 8023730:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8023732:	441c      	add	r4, r3
 8023734:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023736:	441e      	add	r6, r3
 8023738:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802373a:	3b01      	subs	r3, #1
 802373c:	9309      	str	r3, [sp, #36]	; 0x24
 802373e:	f109 0902 	add.w	r9, r9, #2
 8023742:	e737      	b.n	80235b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023744:	d024      	beq.n	8023790 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8023746:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023748:	982b      	ldr	r0, [sp, #172]	; 0xac
 802374a:	3b01      	subs	r3, #1
 802374c:	fb00 4003 	mla	r0, r0, r3, r4
 8023750:	1400      	asrs	r0, r0, #16
 8023752:	f53f af4c 	bmi.w	80235ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8023756:	3901      	subs	r1, #1
 8023758:	4288      	cmp	r0, r1
 802375a:	f6bf af48 	bge.w	80235ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802375e:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8023760:	fb01 6303 	mla	r3, r1, r3, r6
 8023764:	141b      	asrs	r3, r3, #16
 8023766:	f53f af42 	bmi.w	80235ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802376a:	3a01      	subs	r2, #1
 802376c:	4293      	cmp	r3, r2
 802376e:	f6bf af3e 	bge.w	80235ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8023772:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8023776:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 802377a:	930e      	str	r3, [sp, #56]	; 0x38
 802377c:	46c8      	mov	r8, r9
 802377e:	f1bb 0f00 	cmp.w	fp, #0
 8023782:	f300 80b7 	bgt.w	80238f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 8023786:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023788:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802378c:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8023790:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8023792:	2b00      	cmp	r3, #0
 8023794:	f340 818d 	ble.w	8023ab2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 8023798:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802379c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80237a0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80237a4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80237a6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80237aa:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80237ae:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80237b2:	eef0 6a48 	vmov.f32	s13, s16
 80237b6:	ee69 7a27 	vmul.f32	s15, s18, s15
 80237ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80237be:	ee37 8a48 	vsub.f32	s16, s14, s16
 80237c2:	ee16 4a90 	vmov	r4, s13
 80237c6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80237ca:	eef0 6a68 	vmov.f32	s13, s17
 80237ce:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80237d2:	ee18 2a10 	vmov	r2, s16
 80237d6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80237da:	fb92 f3f3 	sdiv	r3, r2, r3
 80237de:	ee18 2a90 	vmov	r2, s17
 80237e2:	932b      	str	r3, [sp, #172]	; 0xac
 80237e4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80237e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80237ea:	932c      	str	r3, [sp, #176]	; 0xb0
 80237ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80237ee:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80237f0:	3b01      	subs	r3, #1
 80237f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80237f6:	930d      	str	r3, [sp, #52]	; 0x34
 80237f8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80237fa:	bf08      	it	eq
 80237fc:	4613      	moveq	r3, r2
 80237fe:	ee16 6a90 	vmov	r6, s13
 8023802:	9309      	str	r3, [sp, #36]	; 0x24
 8023804:	eef0 8a67 	vmov.f32	s17, s15
 8023808:	eeb0 8a47 	vmov.f32	s16, s14
 802380c:	e6c3      	b.n	8023596 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 802380e:	2900      	cmp	r1, #0
 8023810:	f43f af4d 	beq.w	80236ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023814:	eb0a 0003 	add.w	r0, sl, r3
 8023818:	0843      	lsrs	r3, r0, #1
 802381a:	07c0      	lsls	r0, r0, #31
 802381c:	5cfb      	ldrb	r3, [r7, r3]
 802381e:	bf54      	ite	pl
 8023820:	f003 030f 	andpl.w	r3, r3, #15
 8023824:	111b      	asrmi	r3, r3, #4
 8023826:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802382a:	b2db      	uxtb	r3, r3
 802382c:	930b      	str	r3, [sp, #44]	; 0x2c
 802382e:	e73e      	b.n	80236ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023830:	f8b8 e000 	ldrh.w	lr, [r8]
 8023834:	fa1f fb83 	uxth.w	fp, r3
 8023838:	ea4f 202e 	mov.w	r0, lr, asr #8
 802383c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8023840:	43db      	mvns	r3, r3
 8023842:	b2db      	uxtb	r3, r3
 8023844:	fb11 f10b 	smulbb	r1, r1, fp
 8023848:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802384c:	fb00 1003 	mla	r0, r0, r3, r1
 8023850:	fa5f fc8c 	uxtb.w	ip, ip
 8023854:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8023858:	b2d2      	uxtb	r2, r2
 802385a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802385e:	b280      	uxth	r0, r0
 8023860:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023864:	fb1c fc0b 	smulbb	ip, ip, fp
 8023868:	fa5f fe8e 	uxtb.w	lr, lr
 802386c:	fb12 fb0b 	smulbb	fp, r2, fp
 8023870:	fb01 cc03 	mla	ip, r1, r3, ip
 8023874:	fb0e bb03 	mla	fp, lr, r3, fp
 8023878:	1c43      	adds	r3, r0, #1
 802387a:	fa1f fc8c 	uxth.w	ip, ip
 802387e:	fa1f fb8b 	uxth.w	fp, fp
 8023882:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8023886:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 802388a:	f10c 0101 	add.w	r1, ip, #1
 802388e:	f10b 0001 	add.w	r0, fp, #1
 8023892:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8023896:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802389a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802389e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80238a2:	4318      	orrs	r0, r3
 80238a4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80238a8:	ea40 000c 	orr.w	r0, r0, ip
 80238ac:	f8a8 0000 	strh.w	r0, [r8]
 80238b0:	e734      	b.n	802371c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80238b2:	f113 0b01 	adds.w	fp, r3, #1
 80238b6:	f53f af31 	bmi.w	802371c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80238ba:	45dc      	cmp	ip, fp
 80238bc:	f6ff af2e 	blt.w	802371c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80238c0:	f110 0b01 	adds.w	fp, r0, #1
 80238c4:	f53f af2a 	bmi.w	802371c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80238c8:	45de      	cmp	lr, fp
 80238ca:	f6ff af27 	blt.w	802371c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80238ce:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80238d0:	9302      	str	r3, [sp, #8]
 80238d2:	fa0f f38e 	sxth.w	r3, lr
 80238d6:	9301      	str	r3, [sp, #4]
 80238d8:	fa0f f38c 	sxth.w	r3, ip
 80238dc:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80238e0:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80238e4:	9300      	str	r3, [sp, #0]
 80238e6:	463a      	mov	r2, r7
 80238e8:	4653      	mov	r3, sl
 80238ea:	4641      	mov	r1, r8
 80238ec:	9815      	ldr	r0, [sp, #84]	; 0x54
 80238ee:	f7ff fd2b 	bl	8023348 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 80238f2:	e713      	b.n	802371c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80238f4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80238f6:	1422      	asrs	r2, r4, #16
 80238f8:	1433      	asrs	r3, r6, #16
 80238fa:	fb05 2303 	mla	r3, r5, r3, r2
 80238fe:	085a      	lsrs	r2, r3, #1
 8023900:	07dd      	lsls	r5, r3, #31
 8023902:	5cba      	ldrb	r2, [r7, r2]
 8023904:	bf54      	ite	pl
 8023906:	f002 020f 	andpl.w	r2, r2, #15
 802390a:	1112      	asrmi	r2, r2, #4
 802390c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8023910:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8023914:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023918:	b2d2      	uxtb	r2, r2
 802391a:	2900      	cmp	r1, #0
 802391c:	d076      	beq.n	8023a0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 802391e:	f103 0e01 	add.w	lr, r3, #1
 8023922:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8023926:	f01e 0f01 	tst.w	lr, #1
 802392a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802392e:	bf0c      	ite	eq
 8023930:	f00c 0c0f 	andeq.w	ip, ip, #15
 8023934:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8023938:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802393c:	fa5f f58c 	uxtb.w	r5, ip
 8023940:	9512      	str	r5, [sp, #72]	; 0x48
 8023942:	b300      	cbz	r0, 8023986 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023944:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023946:	442b      	add	r3, r5
 8023948:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802394c:	07dd      	lsls	r5, r3, #31
 802394e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8023952:	bf54      	ite	pl
 8023954:	f00c 0c0f 	andpl.w	ip, ip, #15
 8023958:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802395c:	3301      	adds	r3, #1
 802395e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8023962:	fa5f f58c 	uxtb.w	r5, ip
 8023966:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802396a:	950c      	str	r5, [sp, #48]	; 0x30
 802396c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8023970:	07dd      	lsls	r5, r3, #31
 8023972:	bf54      	ite	pl
 8023974:	f00c 0c0f 	andpl.w	ip, ip, #15
 8023978:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802397c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8023980:	fa5f f38c 	uxtb.w	r3, ip
 8023984:	9313      	str	r3, [sp, #76]	; 0x4c
 8023986:	b289      	uxth	r1, r1
 8023988:	b280      	uxth	r0, r0
 802398a:	fb01 f300 	mul.w	r3, r1, r0
 802398e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8023992:	0109      	lsls	r1, r1, #4
 8023994:	b280      	uxth	r0, r0
 8023996:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 802399a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802399c:	1ac9      	subs	r1, r1, r3
 802399e:	ebac 0c00 	sub.w	ip, ip, r0
 80239a2:	b289      	uxth	r1, r1
 80239a4:	4369      	muls	r1, r5
 80239a6:	fa1f fc8c 	uxth.w	ip, ip
 80239aa:	fb02 120c 	mla	r2, r2, ip, r1
 80239ae:	990c      	ldr	r1, [sp, #48]	; 0x30
 80239b0:	fb00 2001 	mla	r0, r0, r1, r2
 80239b4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80239b6:	fb03 0302 	mla	r3, r3, r2, r0
 80239ba:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80239be:	b1d3      	cbz	r3, 80239f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 80239c0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80239c2:	4353      	muls	r3, r2
 80239c4:	1c5a      	adds	r2, r3, #1
 80239c6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80239ca:	4a0f      	ldr	r2, [pc, #60]	; (8023a08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 80239cc:	121b      	asrs	r3, r3, #8
 80239ce:	6812      	ldr	r2, [r2, #0]
 80239d0:	2bff      	cmp	r3, #255	; 0xff
 80239d2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80239d6:	d12d      	bne.n	8023a34 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 80239d8:	0953      	lsrs	r3, r2, #5
 80239da:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80239de:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80239e2:	f02c 0c07 	bic.w	ip, ip, #7
 80239e6:	ea43 0c0c 	orr.w	ip, r3, ip
 80239ea:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80239ee:	ea4c 0202 	orr.w	r2, ip, r2
 80239f2:	f8a8 2000 	strh.w	r2, [r8]
 80239f6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80239f8:	441c      	add	r4, r3
 80239fa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80239fc:	f108 0802 	add.w	r8, r8, #2
 8023a00:	441e      	add	r6, r3
 8023a02:	f10b 3bff 	add.w	fp, fp, #4294967295
 8023a06:	e6ba      	b.n	802377e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 8023a08:	20020a98 	.word	0x20020a98
 8023a0c:	2800      	cmp	r0, #0
 8023a0e:	d0ba      	beq.n	8023986 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023a10:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023a12:	442b      	add	r3, r5
 8023a14:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8023a18:	07db      	lsls	r3, r3, #31
 8023a1a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8023a1e:	bf54      	ite	pl
 8023a20:	f00c 0c0f 	andpl.w	ip, ip, #15
 8023a24:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8023a28:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8023a2c:	fa5f f38c 	uxtb.w	r3, ip
 8023a30:	930c      	str	r3, [sp, #48]	; 0x30
 8023a32:	e7a8      	b.n	8023986 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023a34:	f8b8 e000 	ldrh.w	lr, [r8]
 8023a38:	fa1f fa83 	uxth.w	sl, r3
 8023a3c:	ea4f 202e 	mov.w	r0, lr, asr #8
 8023a40:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8023a44:	43db      	mvns	r3, r3
 8023a46:	b2db      	uxtb	r3, r3
 8023a48:	fb11 f10a 	smulbb	r1, r1, sl
 8023a4c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023a50:	fb00 1003 	mla	r0, r0, r3, r1
 8023a54:	b2d2      	uxtb	r2, r2
 8023a56:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8023a5a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8023a5e:	fa5f fe8e 	uxtb.w	lr, lr
 8023a62:	fb12 f20a 	smulbb	r2, r2, sl
 8023a66:	fb0e 2203 	mla	r2, lr, r3, r2
 8023a6a:	fa5f fc8c 	uxtb.w	ip, ip
 8023a6e:	b280      	uxth	r0, r0
 8023a70:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023a74:	b292      	uxth	r2, r2
 8023a76:	fb1c fc0a 	smulbb	ip, ip, sl
 8023a7a:	fb01 cc03 	mla	ip, r1, r3, ip
 8023a7e:	1c43      	adds	r3, r0, #1
 8023a80:	1c51      	adds	r1, r2, #1
 8023a82:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8023a86:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8023a8a:	fa1f fc8c 	uxth.w	ip, ip
 8023a8e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8023a92:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8023a96:	4308      	orrs	r0, r1
 8023a98:	f10c 0101 	add.w	r1, ip, #1
 8023a9c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8023aa0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8023aa4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023aa8:	ea40 000c 	orr.w	r0, r0, ip
 8023aac:	f8a8 0000 	strh.w	r0, [r8]
 8023ab0:	e7a1      	b.n	80239f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 8023ab2:	b017      	add	sp, #92	; 0x5c
 8023ab4:	ecbd 8b08 	vpop	{d8-d11}
 8023ab8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023abc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8023abc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023ac0:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8023ac4:	2c00      	cmp	r4, #0
 8023ac6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8023aca:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8023ace:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8023ad2:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 8023ad6:	fb04 ce03 	mla	lr, r4, r3, ip
 8023ada:	db60      	blt.n	8023b9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 8023adc:	45a1      	cmp	r9, r4
 8023ade:	dd5e      	ble.n	8023b9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 8023ae0:	f1bc 0f00 	cmp.w	ip, #0
 8023ae4:	db59      	blt.n	8023b9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 8023ae6:	45e0      	cmp	r8, ip
 8023ae8:	dd57      	ble.n	8023b9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 8023aea:	ea4f 005e 	mov.w	r0, lr, lsr #1
 8023aee:	f01e 0f01 	tst.w	lr, #1
 8023af2:	5c16      	ldrb	r6, [r2, r0]
 8023af4:	bf0c      	ite	eq
 8023af6:	f006 060f 	andeq.w	r6, r6, #15
 8023afa:	1136      	asrne	r6, r6, #4
 8023afc:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8023b00:	b2f6      	uxtb	r6, r6
 8023b02:	f11c 0001 	adds.w	r0, ip, #1
 8023b06:	d44d      	bmi.n	8023ba4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 8023b08:	4580      	cmp	r8, r0
 8023b0a:	dd4b      	ble.n	8023ba4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 8023b0c:	2d00      	cmp	r5, #0
 8023b0e:	d04b      	beq.n	8023ba8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 8023b10:	f10e 0a01 	add.w	sl, lr, #1
 8023b14:	ea4f 005a 	mov.w	r0, sl, lsr #1
 8023b18:	f01a 0f01 	tst.w	sl, #1
 8023b1c:	5c10      	ldrb	r0, [r2, r0]
 8023b1e:	bf0c      	ite	eq
 8023b20:	f000 000f 	andeq.w	r0, r0, #15
 8023b24:	1100      	asrne	r0, r0, #4
 8023b26:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8023b2a:	b2c0      	uxtb	r0, r0
 8023b2c:	3401      	adds	r4, #1
 8023b2e:	d43f      	bmi.n	8023bb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 8023b30:	45a1      	cmp	r9, r4
 8023b32:	dd3d      	ble.n	8023bb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 8023b34:	2f00      	cmp	r7, #0
 8023b36:	f000 8093 	beq.w	8023c60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8023b3a:	f1bc 0f00 	cmp.w	ip, #0
 8023b3e:	db35      	blt.n	8023bac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 8023b40:	45e0      	cmp	r8, ip
 8023b42:	dd33      	ble.n	8023bac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 8023b44:	eb03 090e 	add.w	r9, r3, lr
 8023b48:	ea4f 0459 	mov.w	r4, r9, lsr #1
 8023b4c:	f019 0f01 	tst.w	r9, #1
 8023b50:	5d14      	ldrb	r4, [r2, r4]
 8023b52:	bf0c      	ite	eq
 8023b54:	f004 040f 	andeq.w	r4, r4, #15
 8023b58:	1124      	asrne	r4, r4, #4
 8023b5a:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8023b5e:	b2e4      	uxtb	r4, r4
 8023b60:	f11c 0c01 	adds.w	ip, ip, #1
 8023b64:	d427      	bmi.n	8023bb6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 8023b66:	45e0      	cmp	r8, ip
 8023b68:	dd25      	ble.n	8023bb6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 8023b6a:	b335      	cbz	r5, 8023bba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 8023b6c:	3301      	adds	r3, #1
 8023b6e:	449e      	add	lr, r3
 8023b70:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8023b74:	f01e 0f01 	tst.w	lr, #1
 8023b78:	5cd2      	ldrb	r2, [r2, r3]
 8023b7a:	bf0c      	ite	eq
 8023b7c:	f002 020f 	andeq.w	r2, r2, #15
 8023b80:	1112      	asrne	r2, r2, #4
 8023b82:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8023b86:	b2d3      	uxtb	r3, r2
 8023b88:	2d0f      	cmp	r5, #15
 8023b8a:	d917      	bls.n	8023bbc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 8023b8c:	4b37      	ldr	r3, [pc, #220]	; (8023c6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>)
 8023b8e:	4a38      	ldr	r2, [pc, #224]	; (8023c70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b4>)
 8023b90:	4838      	ldr	r0, [pc, #224]	; (8023c74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 8023b92:	f44f 71fb 	mov.w	r1, #502	; 0x1f6
 8023b96:	f000 fc4f 	bl	8024438 <__assert_func>
 8023b9a:	2600      	movs	r6, #0
 8023b9c:	e7b1      	b.n	8023b02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 8023b9e:	2000      	movs	r0, #0
 8023ba0:	4606      	mov	r6, r0
 8023ba2:	e7c3      	b.n	8023b2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8023ba4:	2000      	movs	r0, #0
 8023ba6:	e7c1      	b.n	8023b2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8023ba8:	4628      	mov	r0, r5
 8023baa:	e7bf      	b.n	8023b2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8023bac:	2400      	movs	r4, #0
 8023bae:	e7d7      	b.n	8023b60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 8023bb0:	2300      	movs	r3, #0
 8023bb2:	461c      	mov	r4, r3
 8023bb4:	e7e8      	b.n	8023b88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 8023bb6:	2300      	movs	r3, #0
 8023bb8:	e7e6      	b.n	8023b88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 8023bba:	462b      	mov	r3, r5
 8023bbc:	2f0f      	cmp	r7, #15
 8023bbe:	d8e5      	bhi.n	8023b8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 8023bc0:	b2ad      	uxth	r5, r5
 8023bc2:	b2bf      	uxth	r7, r7
 8023bc4:	fb05 fc07 	mul.w	ip, r5, r7
 8023bc8:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 8023bcc:	012d      	lsls	r5, r5, #4
 8023bce:	b2bf      	uxth	r7, r7
 8023bd0:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8023bd4:	eba5 050c 	sub.w	r5, r5, ip
 8023bd8:	1bd2      	subs	r2, r2, r7
 8023bda:	b2ad      	uxth	r5, r5
 8023bdc:	b292      	uxth	r2, r2
 8023bde:	4368      	muls	r0, r5
 8023be0:	fb06 0002 	mla	r0, r6, r2, r0
 8023be4:	fb07 0404 	mla	r4, r7, r4, r0
 8023be8:	fb0c 4303 	mla	r3, ip, r3, r4
 8023bec:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023bf0:	b3a3      	cbz	r3, 8023c5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8023bf2:	4a21      	ldr	r2, [pc, #132]	; (8023c78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 8023bf4:	880e      	ldrh	r6, [r1, #0]
 8023bf6:	6815      	ldr	r5, [r2, #0]
 8023bf8:	1234      	asrs	r4, r6, #8
 8023bfa:	b29a      	uxth	r2, r3
 8023bfc:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8023c00:	43db      	mvns	r3, r3
 8023c02:	b2db      	uxtb	r3, r3
 8023c04:	fb10 f002 	smulbb	r0, r0, r2
 8023c08:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8023c0c:	fb04 0403 	mla	r4, r4, r3, r0
 8023c10:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8023c14:	10f0      	asrs	r0, r6, #3
 8023c16:	b2ed      	uxtb	r5, r5
 8023c18:	00f6      	lsls	r6, r6, #3
 8023c1a:	fb17 f702 	smulbb	r7, r7, r2
 8023c1e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023c22:	fb15 f202 	smulbb	r2, r5, r2
 8023c26:	b2f6      	uxtb	r6, r6
 8023c28:	b2a4      	uxth	r4, r4
 8023c2a:	fb00 7003 	mla	r0, r0, r3, r7
 8023c2e:	fb06 2303 	mla	r3, r6, r3, r2
 8023c32:	b29a      	uxth	r2, r3
 8023c34:	1c63      	adds	r3, r4, #1
 8023c36:	b280      	uxth	r0, r0
 8023c38:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8023c3c:	1c53      	adds	r3, r2, #1
 8023c3e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023c42:	1c42      	adds	r2, r0, #1
 8023c44:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023c48:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8023c4c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023c50:	0940      	lsrs	r0, r0, #5
 8023c52:	4323      	orrs	r3, r4
 8023c54:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023c58:	4303      	orrs	r3, r0
 8023c5a:	800b      	strh	r3, [r1, #0]
 8023c5c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023c60:	2d0f      	cmp	r5, #15
 8023c62:	d893      	bhi.n	8023b8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 8023c64:	463b      	mov	r3, r7
 8023c66:	463c      	mov	r4, r7
 8023c68:	e7aa      	b.n	8023bc0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 8023c6a:	bf00      	nop
 8023c6c:	0802aeb2 	.word	0x0802aeb2
 8023c70:	0802b482 	.word	0x0802b482
 8023c74:	0802af36 	.word	0x0802af36
 8023c78:	20020a98 	.word	0x20020a98

08023c7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023c7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023c80:	ed2d 8b08 	vpush	{d8-d11}
 8023c84:	b093      	sub	sp, #76	; 0x4c
 8023c86:	461d      	mov	r5, r3
 8023c88:	920c      	str	r2, [sp, #48]	; 0x30
 8023c8a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8023c8c:	9107      	str	r1, [sp, #28]
 8023c8e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8023c92:	9011      	str	r0, [sp, #68]	; 0x44
 8023c94:	6850      	ldr	r0, [r2, #4]
 8023c96:	6812      	ldr	r2, [r2, #0]
 8023c98:	fb00 1303 	mla	r3, r0, r3, r1
 8023c9c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8023ca0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023ca2:	689b      	ldr	r3, [r3, #8]
 8023ca4:	3301      	adds	r3, #1
 8023ca6:	f023 0301 	bic.w	r3, r3, #1
 8023caa:	9306      	str	r3, [sp, #24]
 8023cac:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023cae:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8023cb2:	681f      	ldr	r7, [r3, #0]
 8023cb4:	eeb0 aa40 	vmov.f32	s20, s0
 8023cb8:	eef0 9a60 	vmov.f32	s19, s1
 8023cbc:	eeb0 9a41 	vmov.f32	s18, s2
 8023cc0:	eeb0 8a62 	vmov.f32	s16, s5
 8023cc4:	eef0 8a43 	vmov.f32	s17, s6
 8023cc8:	eef0 ba44 	vmov.f32	s23, s8
 8023ccc:	eeb0 ba64 	vmov.f32	s22, s9
 8023cd0:	eef0 aa45 	vmov.f32	s21, s10
 8023cd4:	9b07      	ldr	r3, [sp, #28]
 8023cd6:	2b00      	cmp	r3, #0
 8023cd8:	dc03      	bgt.n	8023ce2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023cda:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023cdc:	2b00      	cmp	r3, #0
 8023cde:	f340 8267 	ble.w	80241b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 8023ce2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023ce4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023ce8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023cec:	1e48      	subs	r0, r1, #1
 8023cee:	f102 3cff 	add.w	ip, r2, #4294967295
 8023cf2:	2d00      	cmp	r5, #0
 8023cf4:	f340 80b8 	ble.w	8023e68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 8023cf8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023cfc:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023d00:	d406      	bmi.n	8023d10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8023d02:	4586      	cmp	lr, r0
 8023d04:	da04      	bge.n	8023d10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8023d06:	2b00      	cmp	r3, #0
 8023d08:	db02      	blt.n	8023d10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8023d0a:	4563      	cmp	r3, ip
 8023d0c:	f2c0 80ad 	blt.w	8023e6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023d10:	f11e 0e01 	adds.w	lr, lr, #1
 8023d14:	f100 80a0 	bmi.w	8023e58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8023d18:	4571      	cmp	r1, lr
 8023d1a:	f2c0 809d 	blt.w	8023e58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8023d1e:	3301      	adds	r3, #1
 8023d20:	f100 809a 	bmi.w	8023e58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8023d24:	429a      	cmp	r2, r3
 8023d26:	f2c0 8097 	blt.w	8023e58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8023d2a:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8023d2e:	9509      	str	r5, [sp, #36]	; 0x24
 8023d30:	46c8      	mov	r8, r9
 8023d32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023d34:	2b00      	cmp	r3, #0
 8023d36:	f340 80b6 	ble.w	8023ea6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8023d3a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8023d3e:	9308      	str	r3, [sp, #32]
 8023d40:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023d42:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8023d46:	1423      	asrs	r3, r4, #16
 8023d48:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023d4c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8023d50:	f100 813e 	bmi.w	8023fd0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 8023d54:	f10c 3bff 	add.w	fp, ip, #4294967295
 8023d58:	455b      	cmp	r3, fp
 8023d5a:	f280 8139 	bge.w	8023fd0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 8023d5e:	2800      	cmp	r0, #0
 8023d60:	f2c0 8136 	blt.w	8023fd0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 8023d64:	f10e 3bff 	add.w	fp, lr, #4294967295
 8023d68:	4558      	cmp	r0, fp
 8023d6a:	f280 8131 	bge.w	8023fd0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 8023d6e:	9a06      	ldr	r2, [sp, #24]
 8023d70:	fb00 3302 	mla	r3, r0, r2, r3
 8023d74:	0858      	lsrs	r0, r3, #1
 8023d76:	07da      	lsls	r2, r3, #31
 8023d78:	f817 c000 	ldrb.w	ip, [r7, r0]
 8023d7c:	9a08      	ldr	r2, [sp, #32]
 8023d7e:	bf54      	ite	pl
 8023d80:	f00c 0c0f 	andpl.w	ip, ip, #15
 8023d84:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8023d88:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8023d8c:	fa5f fc8c 	uxtb.w	ip, ip
 8023d90:	2a00      	cmp	r2, #0
 8023d92:	f000 80cb 	beq.w	8023f2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8023d96:	1c58      	adds	r0, r3, #1
 8023d98:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8023d9c:	07c0      	lsls	r0, r0, #31
 8023d9e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8023da2:	bf54      	ite	pl
 8023da4:	f00e 0e0f 	andpl.w	lr, lr, #15
 8023da8:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8023dac:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8023db0:	fa5f fe8e 	uxtb.w	lr, lr
 8023db4:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8023db8:	b1b9      	cbz	r1, 8023dea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8023dba:	4453      	add	r3, sl
 8023dbc:	0858      	lsrs	r0, r3, #1
 8023dbe:	07da      	lsls	r2, r3, #31
 8023dc0:	5c38      	ldrb	r0, [r7, r0]
 8023dc2:	bf54      	ite	pl
 8023dc4:	f000 000f 	andpl.w	r0, r0, #15
 8023dc8:	1100      	asrmi	r0, r0, #4
 8023dca:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8023dce:	b2c0      	uxtb	r0, r0
 8023dd0:	900a      	str	r0, [sp, #40]	; 0x28
 8023dd2:	1c58      	adds	r0, r3, #1
 8023dd4:	0843      	lsrs	r3, r0, #1
 8023dd6:	07c2      	lsls	r2, r0, #31
 8023dd8:	5cfb      	ldrb	r3, [r7, r3]
 8023dda:	bf54      	ite	pl
 8023ddc:	f003 030f 	andpl.w	r3, r3, #15
 8023de0:	111b      	asrmi	r3, r3, #4
 8023de2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8023de6:	b2db      	uxtb	r3, r3
 8023de8:	930e      	str	r3, [sp, #56]	; 0x38
 8023dea:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8023dee:	b289      	uxth	r1, r1
 8023df0:	fb02 f301 	mul.w	r3, r2, r1
 8023df4:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8023df8:	0112      	lsls	r2, r2, #4
 8023dfa:	b289      	uxth	r1, r1
 8023dfc:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8023e00:	1a40      	subs	r0, r0, r1
 8023e02:	fa1f fe80 	uxth.w	lr, r0
 8023e06:	1ad2      	subs	r2, r2, r3
 8023e08:	980d      	ldr	r0, [sp, #52]	; 0x34
 8023e0a:	b292      	uxth	r2, r2
 8023e0c:	4342      	muls	r2, r0
 8023e0e:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8023e12:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8023e14:	fb01 c102 	mla	r1, r1, r2, ip
 8023e18:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8023e1a:	fb03 1302 	mla	r3, r3, r2, r1
 8023e1e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023e22:	2bff      	cmp	r3, #255	; 0xff
 8023e24:	f040 8093 	bne.w	8023f4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 8023e28:	4bbe      	ldr	r3, [pc, #760]	; (8024124 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 8023e2a:	681a      	ldr	r2, [r3, #0]
 8023e2c:	4bbe      	ldr	r3, [pc, #760]	; (8024128 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8023e2e:	0951      	lsrs	r1, r2, #5
 8023e30:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8023e34:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023e38:	430b      	orrs	r3, r1
 8023e3a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023e3e:	4313      	orrs	r3, r2
 8023e40:	f8a8 3000 	strh.w	r3, [r8]
 8023e44:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8023e46:	441c      	add	r4, r3
 8023e48:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023e4a:	441e      	add	r6, r3
 8023e4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023e4e:	3b01      	subs	r3, #1
 8023e50:	f108 0802 	add.w	r8, r8, #2
 8023e54:	9309      	str	r3, [sp, #36]	; 0x24
 8023e56:	e76c      	b.n	8023d32 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8023e58:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8023e5a:	441c      	add	r4, r3
 8023e5c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023e5e:	3d01      	subs	r5, #1
 8023e60:	441e      	add	r6, r3
 8023e62:	f109 0902 	add.w	r9, r9, #2
 8023e66:	e744      	b.n	8023cf2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023e68:	d021      	beq.n	8023eae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 8023e6a:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8023e6c:	1e6b      	subs	r3, r5, #1
 8023e6e:	fb00 4003 	mla	r0, r0, r3, r4
 8023e72:	1400      	asrs	r0, r0, #16
 8023e74:	f53f af59 	bmi.w	8023d2a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8023e78:	3901      	subs	r1, #1
 8023e7a:	4288      	cmp	r0, r1
 8023e7c:	f6bf af55 	bge.w	8023d2a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8023e80:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8023e82:	fb01 6303 	mla	r3, r1, r3, r6
 8023e86:	141b      	asrs	r3, r3, #16
 8023e88:	f53f af4f 	bmi.w	8023d2a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8023e8c:	3a01      	subs	r2, #1
 8023e8e:	4293      	cmp	r3, r2
 8023e90:	f6bf af4b 	bge.w	8023d2a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8023e94:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8023e98:	9308      	str	r3, [sp, #32]
 8023e9a:	46a8      	mov	r8, r5
 8023e9c:	46ce      	mov	lr, r9
 8023e9e:	f1b8 0f00 	cmp.w	r8, #0
 8023ea2:	f300 80b5 	bgt.w	8024010 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8023ea6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023eaa:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8023eae:	9b07      	ldr	r3, [sp, #28]
 8023eb0:	2b00      	cmp	r3, #0
 8023eb2:	f340 817d 	ble.w	80241b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 8023eb6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8023eba:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023ebe:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8023ec2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023ec4:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8023ec8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8023ecc:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8023ed0:	eef0 6a48 	vmov.f32	s13, s16
 8023ed4:	ee69 7a27 	vmul.f32	s15, s18, s15
 8023ed8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023edc:	ee37 8a48 	vsub.f32	s16, s14, s16
 8023ee0:	ee16 4a90 	vmov	r4, s13
 8023ee4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8023ee8:	eef0 6a68 	vmov.f32	s13, s17
 8023eec:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8023ef0:	ee18 2a10 	vmov	r2, s16
 8023ef4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8023ef8:	fb92 f3f3 	sdiv	r3, r2, r3
 8023efc:	ee18 2a90 	vmov	r2, s17
 8023f00:	9327      	str	r3, [sp, #156]	; 0x9c
 8023f02:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023f04:	fb92 f3f3 	sdiv	r3, r2, r3
 8023f08:	9328      	str	r3, [sp, #160]	; 0xa0
 8023f0a:	9b07      	ldr	r3, [sp, #28]
 8023f0c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023f0e:	3b01      	subs	r3, #1
 8023f10:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023f14:	9307      	str	r3, [sp, #28]
 8023f16:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023f18:	ee16 6a90 	vmov	r6, s13
 8023f1c:	bf14      	ite	ne
 8023f1e:	461d      	movne	r5, r3
 8023f20:	4615      	moveq	r5, r2
 8023f22:	eef0 8a67 	vmov.f32	s17, s15
 8023f26:	eeb0 8a47 	vmov.f32	s16, s14
 8023f2a:	e6d3      	b.n	8023cd4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8023f2c:	2900      	cmp	r1, #0
 8023f2e:	f43f af5c 	beq.w	8023dea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8023f32:	eb0a 0003 	add.w	r0, sl, r3
 8023f36:	0843      	lsrs	r3, r0, #1
 8023f38:	07c0      	lsls	r0, r0, #31
 8023f3a:	5cfb      	ldrb	r3, [r7, r3]
 8023f3c:	bf54      	ite	pl
 8023f3e:	f003 030f 	andpl.w	r3, r3, #15
 8023f42:	111b      	asrmi	r3, r3, #4
 8023f44:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8023f48:	b2db      	uxtb	r3, r3
 8023f4a:	930a      	str	r3, [sp, #40]	; 0x28
 8023f4c:	e74d      	b.n	8023dea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8023f4e:	2b00      	cmp	r3, #0
 8023f50:	f43f af78 	beq.w	8023e44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8023f54:	4a73      	ldr	r2, [pc, #460]	; (8024124 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 8023f56:	f8b8 c000 	ldrh.w	ip, [r8]
 8023f5a:	6810      	ldr	r0, [r2, #0]
 8023f5c:	fa1f fe83 	uxth.w	lr, r3
 8023f60:	ea4f 212c 	mov.w	r1, ip, asr #8
 8023f64:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8023f68:	43db      	mvns	r3, r3
 8023f6a:	b2db      	uxtb	r3, r3
 8023f6c:	fb12 f20e 	smulbb	r2, r2, lr
 8023f70:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023f74:	fb01 2103 	mla	r1, r1, r3, r2
 8023f78:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8023f7c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8023f80:	b2c0      	uxtb	r0, r0
 8023f82:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8023f86:	fb1b fb0e 	smulbb	fp, fp, lr
 8023f8a:	b289      	uxth	r1, r1
 8023f8c:	fb10 fe0e 	smulbb	lr, r0, lr
 8023f90:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023f94:	fa5f fc8c 	uxtb.w	ip, ip
 8023f98:	fb02 b203 	mla	r2, r2, r3, fp
 8023f9c:	1c48      	adds	r0, r1, #1
 8023f9e:	fb0c e303 	mla	r3, ip, r3, lr
 8023fa2:	b292      	uxth	r2, r2
 8023fa4:	b29b      	uxth	r3, r3
 8023fa6:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8023faa:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8023fae:	f102 0b01 	add.w	fp, r2, #1
 8023fb2:	1c59      	adds	r1, r3, #1
 8023fb4:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8023fb8:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8023fbc:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8023fc0:	0952      	lsrs	r2, r2, #5
 8023fc2:	4301      	orrs	r1, r0
 8023fc4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023fc8:	4311      	orrs	r1, r2
 8023fca:	f8a8 1000 	strh.w	r1, [r8]
 8023fce:	e739      	b.n	8023e44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8023fd0:	f113 0b01 	adds.w	fp, r3, #1
 8023fd4:	f53f af36 	bmi.w	8023e44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8023fd8:	45dc      	cmp	ip, fp
 8023fda:	f6ff af33 	blt.w	8023e44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8023fde:	f110 0b01 	adds.w	fp, r0, #1
 8023fe2:	f53f af2f 	bmi.w	8023e44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8023fe6:	45de      	cmp	lr, fp
 8023fe8:	f6ff af2c 	blt.w	8023e44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8023fec:	9a08      	ldr	r2, [sp, #32]
 8023fee:	9302      	str	r3, [sp, #8]
 8023ff0:	fa0f f38e 	sxth.w	r3, lr
 8023ff4:	9301      	str	r3, [sp, #4]
 8023ff6:	fa0f f38c 	sxth.w	r3, ip
 8023ffa:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8023ffe:	9105      	str	r1, [sp, #20]
 8024000:	9300      	str	r3, [sp, #0]
 8024002:	463a      	mov	r2, r7
 8024004:	4653      	mov	r3, sl
 8024006:	4641      	mov	r1, r8
 8024008:	9811      	ldr	r0, [sp, #68]	; 0x44
 802400a:	f7ff fd57 	bl	8023abc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802400e:	e719      	b.n	8023e44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8024010:	9906      	ldr	r1, [sp, #24]
 8024012:	1422      	asrs	r2, r4, #16
 8024014:	1433      	asrs	r3, r6, #16
 8024016:	fb01 2303 	mla	r3, r1, r3, r2
 802401a:	085a      	lsrs	r2, r3, #1
 802401c:	07d9      	lsls	r1, r3, #31
 802401e:	5cba      	ldrb	r2, [r7, r2]
 8024020:	bf54      	ite	pl
 8024022:	f002 020f 	andpl.w	r2, r2, #15
 8024026:	1112      	asrmi	r2, r2, #4
 8024028:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802402c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8024030:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8024034:	b2d2      	uxtb	r2, r2
 8024036:	2800      	cmp	r0, #0
 8024038:	d062      	beq.n	8024100 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 802403a:	f103 0a01 	add.w	sl, r3, #1
 802403e:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8024042:	f01a 0f01 	tst.w	sl, #1
 8024046:	5c79      	ldrb	r1, [r7, r1]
 8024048:	bf0c      	ite	eq
 802404a:	f001 010f 	andeq.w	r1, r1, #15
 802404e:	1109      	asrne	r1, r1, #4
 8024050:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024054:	b2c9      	uxtb	r1, r1
 8024056:	910f      	str	r1, [sp, #60]	; 0x3c
 8024058:	f1bc 0f00 	cmp.w	ip, #0
 802405c:	d019      	beq.n	8024092 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 802405e:	9908      	ldr	r1, [sp, #32]
 8024060:	440b      	add	r3, r1
 8024062:	0859      	lsrs	r1, r3, #1
 8024064:	f013 0f01 	tst.w	r3, #1
 8024068:	5c79      	ldrb	r1, [r7, r1]
 802406a:	bf0c      	ite	eq
 802406c:	f001 010f 	andeq.w	r1, r1, #15
 8024070:	1109      	asrne	r1, r1, #4
 8024072:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024076:	b2c9      	uxtb	r1, r1
 8024078:	3301      	adds	r3, #1
 802407a:	910b      	str	r1, [sp, #44]	; 0x2c
 802407c:	0859      	lsrs	r1, r3, #1
 802407e:	07db      	lsls	r3, r3, #31
 8024080:	5c79      	ldrb	r1, [r7, r1]
 8024082:	bf54      	ite	pl
 8024084:	f001 010f 	andpl.w	r1, r1, #15
 8024088:	1109      	asrmi	r1, r1, #4
 802408a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802408e:	b2c9      	uxtb	r1, r1
 8024090:	9110      	str	r1, [sp, #64]	; 0x40
 8024092:	b280      	uxth	r0, r0
 8024094:	fa1f fc8c 	uxth.w	ip, ip
 8024098:	fb00 f30c 	mul.w	r3, r0, ip
 802409c:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 80240a0:	0100      	lsls	r0, r0, #4
 80240a2:	fa1f fc8c 	uxth.w	ip, ip
 80240a6:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 80240aa:	eba1 010c 	sub.w	r1, r1, ip
 80240ae:	fa1f fa81 	uxth.w	sl, r1
 80240b2:	1ac0      	subs	r0, r0, r3
 80240b4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80240b6:	b280      	uxth	r0, r0
 80240b8:	4348      	muls	r0, r1
 80240ba:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80240bc:	fb02 020a 	mla	r2, r2, sl, r0
 80240c0:	fb0c 2c01 	mla	ip, ip, r1, r2
 80240c4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80240c6:	fb03 c302 	mla	r3, r3, r2, ip
 80240ca:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80240ce:	2bff      	cmp	r3, #255	; 0xff
 80240d0:	d12c      	bne.n	802412c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80240d2:	4b14      	ldr	r3, [pc, #80]	; (8024124 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 80240d4:	681a      	ldr	r2, [r3, #0]
 80240d6:	4b14      	ldr	r3, [pc, #80]	; (8024128 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80240d8:	0951      	lsrs	r1, r2, #5
 80240da:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80240de:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80240e2:	430b      	orrs	r3, r1
 80240e4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80240e8:	4313      	orrs	r3, r2
 80240ea:	f8ae 3000 	strh.w	r3, [lr]
 80240ee:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80240f0:	441c      	add	r4, r3
 80240f2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80240f4:	f10e 0e02 	add.w	lr, lr, #2
 80240f8:	441e      	add	r6, r3
 80240fa:	f108 38ff 	add.w	r8, r8, #4294967295
 80240fe:	e6ce      	b.n	8023e9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8024100:	f1bc 0f00 	cmp.w	ip, #0
 8024104:	d0c5      	beq.n	8024092 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 8024106:	9908      	ldr	r1, [sp, #32]
 8024108:	440b      	add	r3, r1
 802410a:	0859      	lsrs	r1, r3, #1
 802410c:	07db      	lsls	r3, r3, #31
 802410e:	5c79      	ldrb	r1, [r7, r1]
 8024110:	bf54      	ite	pl
 8024112:	f001 010f 	andpl.w	r1, r1, #15
 8024116:	1109      	asrmi	r1, r1, #4
 8024118:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802411c:	b2c9      	uxtb	r1, r1
 802411e:	910b      	str	r1, [sp, #44]	; 0x2c
 8024120:	e7b7      	b.n	8024092 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 8024122:	bf00      	nop
 8024124:	20020a98 	.word	0x20020a98
 8024128:	fffff800 	.word	0xfffff800
 802412c:	2b00      	cmp	r3, #0
 802412e:	d0de      	beq.n	80240ee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8024130:	4a22      	ldr	r2, [pc, #136]	; (80241bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>)
 8024132:	f8be c000 	ldrh.w	ip, [lr]
 8024136:	6810      	ldr	r0, [r2, #0]
 8024138:	fa1f fa83 	uxth.w	sl, r3
 802413c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8024140:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8024144:	43db      	mvns	r3, r3
 8024146:	b2db      	uxtb	r3, r3
 8024148:	fb12 f20a 	smulbb	r2, r2, sl
 802414c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024150:	fb01 2103 	mla	r1, r1, r3, r2
 8024154:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8024158:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802415c:	b2c0      	uxtb	r0, r0
 802415e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8024162:	fa5f fc8c 	uxtb.w	ip, ip
 8024166:	fb10 f00a 	smulbb	r0, r0, sl
 802416a:	fb0c 0003 	mla	r0, ip, r3, r0
 802416e:	b289      	uxth	r1, r1
 8024170:	fb1b fb0a 	smulbb	fp, fp, sl
 8024174:	b280      	uxth	r0, r0
 8024176:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802417a:	fb02 b203 	mla	r2, r2, r3, fp
 802417e:	1c4b      	adds	r3, r1, #1
 8024180:	f100 0b01 	add.w	fp, r0, #1
 8024184:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8024188:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 802418c:	b292      	uxth	r2, r2
 802418e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8024192:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8024196:	ea4b 0101 	orr.w	r1, fp, r1
 802419a:	f102 0b01 	add.w	fp, r2, #1
 802419e:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80241a2:	0952      	lsrs	r2, r2, #5
 80241a4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80241a8:	4311      	orrs	r1, r2
 80241aa:	f8ae 1000 	strh.w	r1, [lr]
 80241ae:	e79e      	b.n	80240ee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 80241b0:	b013      	add	sp, #76	; 0x4c
 80241b2:	ecbd 8b08 	vpop	{d8-d11}
 80241b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80241ba:	bf00      	nop
 80241bc:	20020a98 	.word	0x20020a98

080241c0 <CRC_Lock>:
 80241c0:	b530      	push	{r4, r5, lr}
 80241c2:	4a20      	ldr	r2, [pc, #128]	; (8024244 <CRC_Lock+0x84>)
 80241c4:	6813      	ldr	r3, [r2, #0]
 80241c6:	f023 0301 	bic.w	r3, r3, #1
 80241ca:	6013      	str	r3, [r2, #0]
 80241cc:	4b1e      	ldr	r3, [pc, #120]	; (8024248 <CRC_Lock+0x88>)
 80241ce:	681a      	ldr	r2, [r3, #0]
 80241d0:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 80241d4:	4022      	ands	r2, r4
 80241d6:	f24c 2540 	movw	r5, #49728	; 0xc240
 80241da:	42aa      	cmp	r2, r5
 80241dc:	d005      	beq.n	80241ea <CRC_Lock+0x2a>
 80241de:	681b      	ldr	r3, [r3, #0]
 80241e0:	f24c 2270 	movw	r2, #49776	; 0xc270
 80241e4:	4023      	ands	r3, r4
 80241e6:	4293      	cmp	r3, r2
 80241e8:	d124      	bne.n	8024234 <CRC_Lock+0x74>
 80241ea:	4b18      	ldr	r3, [pc, #96]	; (802424c <CRC_Lock+0x8c>)
 80241ec:	681b      	ldr	r3, [r3, #0]
 80241ee:	bb0b      	cbnz	r3, 8024234 <CRC_Lock+0x74>
 80241f0:	4b17      	ldr	r3, [pc, #92]	; (8024250 <CRC_Lock+0x90>)
 80241f2:	681a      	ldr	r2, [r3, #0]
 80241f4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80241f8:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 80241fc:	d00d      	beq.n	802421a <CRC_Lock+0x5a>
 80241fe:	681a      	ldr	r2, [r3, #0]
 8024200:	f240 4483 	movw	r4, #1155	; 0x483
 8024204:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8024208:	42a2      	cmp	r2, r4
 802420a:	d006      	beq.n	802421a <CRC_Lock+0x5a>
 802420c:	681b      	ldr	r3, [r3, #0]
 802420e:	f240 4285 	movw	r2, #1157	; 0x485
 8024212:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8024216:	4293      	cmp	r3, r2
 8024218:	d10c      	bne.n	8024234 <CRC_Lock+0x74>
 802421a:	4b0e      	ldr	r3, [pc, #56]	; (8024254 <CRC_Lock+0x94>)
 802421c:	2201      	movs	r2, #1
 802421e:	601a      	str	r2, [r3, #0]
 8024220:	681a      	ldr	r2, [r3, #0]
 8024222:	2a00      	cmp	r2, #0
 8024224:	d1fc      	bne.n	8024220 <CRC_Lock+0x60>
 8024226:	4b0c      	ldr	r3, [pc, #48]	; (8024258 <CRC_Lock+0x98>)
 8024228:	6018      	str	r0, [r3, #0]
 802422a:	6818      	ldr	r0, [r3, #0]
 802422c:	1a43      	subs	r3, r0, r1
 802422e:	4258      	negs	r0, r3
 8024230:	4158      	adcs	r0, r3
 8024232:	bd30      	pop	{r4, r5, pc}
 8024234:	4b09      	ldr	r3, [pc, #36]	; (802425c <CRC_Lock+0x9c>)
 8024236:	2201      	movs	r2, #1
 8024238:	601a      	str	r2, [r3, #0]
 802423a:	681a      	ldr	r2, [r3, #0]
 802423c:	2a00      	cmp	r2, #0
 802423e:	d1fc      	bne.n	802423a <CRC_Lock+0x7a>
 8024240:	4b07      	ldr	r3, [pc, #28]	; (8024260 <CRC_Lock+0xa0>)
 8024242:	e7f1      	b.n	8024228 <CRC_Lock+0x68>
 8024244:	e0002000 	.word	0xe0002000
 8024248:	e000ed00 	.word	0xe000ed00
 802424c:	e0042000 	.word	0xe0042000
 8024250:	5c001000 	.word	0x5c001000
 8024254:	58024c08 	.word	0x58024c08
 8024258:	58024c00 	.word	0x58024c00
 802425c:	40023008 	.word	0x40023008
 8024260:	40023000 	.word	0x40023000

08024264 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8024264:	6101      	str	r1, [r0, #16]
 8024266:	4770      	bx	lr

08024268 <_ZN8touchgfx8Gestures4tickEv>:
 8024268:	7b83      	ldrb	r3, [r0, #14]
 802426a:	b14b      	cbz	r3, 8024280 <_ZN8touchgfx8Gestures4tickEv+0x18>
 802426c:	8903      	ldrh	r3, [r0, #8]
 802426e:	3301      	adds	r3, #1
 8024270:	b29b      	uxth	r3, r3
 8024272:	2b07      	cmp	r3, #7
 8024274:	8103      	strh	r3, [r0, #8]
 8024276:	bf81      	itttt	hi
 8024278:	2300      	movhi	r3, #0
 802427a:	8143      	strhhi	r3, [r0, #10]
 802427c:	8183      	strhhi	r3, [r0, #12]
 802427e:	7383      	strbhi	r3, [r0, #14]
 8024280:	4770      	bx	lr
	...

08024284 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8024284:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8024288:	4604      	mov	r4, r0
 802428a:	8880      	ldrh	r0, [r0, #4]
 802428c:	f8ad 0006 	strh.w	r0, [sp, #6]
 8024290:	4698      	mov	r8, r3
 8024292:	eba8 0000 	sub.w	r0, r8, r0
 8024296:	4b1c      	ldr	r3, [pc, #112]	; (8024308 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 8024298:	9300      	str	r3, [sp, #0]
 802429a:	b280      	uxth	r0, r0
 802429c:	2300      	movs	r3, #0
 802429e:	f88d 3004 	strb.w	r3, [sp, #4]
 80242a2:	b203      	sxth	r3, r0
 80242a4:	2b00      	cmp	r3, #0
 80242a6:	bfb8      	it	lt
 80242a8:	4240      	neglt	r0, r0
 80242aa:	4617      	mov	r7, r2
 80242ac:	8aa2      	ldrh	r2, [r4, #20]
 80242ae:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 80242b2:	f8ad 800a 	strh.w	r8, [sp, #10]
 80242b6:	bfb8      	it	lt
 80242b8:	b203      	sxthlt	r3, r0
 80242ba:	460e      	mov	r6, r1
 80242bc:	4293      	cmp	r3, r2
 80242be:	88e1      	ldrh	r1, [r4, #6]
 80242c0:	f8ad 1008 	strh.w	r1, [sp, #8]
 80242c4:	f8ad 500c 	strh.w	r5, [sp, #12]
 80242c8:	dc08      	bgt.n	80242dc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 80242ca:	1a69      	subs	r1, r5, r1
 80242cc:	b289      	uxth	r1, r1
 80242ce:	b20b      	sxth	r3, r1
 80242d0:	2b00      	cmp	r3, #0
 80242d2:	bfbc      	itt	lt
 80242d4:	4249      	neglt	r1, r1
 80242d6:	b20b      	sxthlt	r3, r1
 80242d8:	429a      	cmp	r2, r3
 80242da:	da13      	bge.n	8024304 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 80242dc:	6920      	ldr	r0, [r4, #16]
 80242de:	6803      	ldr	r3, [r0, #0]
 80242e0:	4669      	mov	r1, sp
 80242e2:	685b      	ldr	r3, [r3, #4]
 80242e4:	4798      	blx	r3
 80242e6:	eba8 0606 	sub.w	r6, r8, r6
 80242ea:	2300      	movs	r3, #0
 80242ec:	1bef      	subs	r7, r5, r7
 80242ee:	2001      	movs	r0, #1
 80242f0:	8123      	strh	r3, [r4, #8]
 80242f2:	8166      	strh	r6, [r4, #10]
 80242f4:	81a7      	strh	r7, [r4, #12]
 80242f6:	f8a4 8004 	strh.w	r8, [r4, #4]
 80242fa:	80e5      	strh	r5, [r4, #6]
 80242fc:	73a0      	strb	r0, [r4, #14]
 80242fe:	b004      	add	sp, #16
 8024300:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8024304:	2000      	movs	r0, #0
 8024306:	e7fa      	b.n	80242fe <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 8024308:	0802a384 	.word	0x0802a384

0802430c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 802430c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802430e:	461e      	mov	r6, r3
 8024310:	1e4b      	subs	r3, r1, #1
 8024312:	2b01      	cmp	r3, #1
 8024314:	b085      	sub	sp, #20
 8024316:	4604      	mov	r4, r0
 8024318:	460d      	mov	r5, r1
 802431a:	4617      	mov	r7, r2
 802431c:	d84b      	bhi.n	80243b6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 802431e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8024322:	1cd3      	adds	r3, r2, #3
 8024324:	b29b      	uxth	r3, r3
 8024326:	2b06      	cmp	r3, #6
 8024328:	d916      	bls.n	8024358 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 802432a:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 80243cc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802432e:	f8cd c004 	str.w	ip, [sp, #4]
 8024332:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8024336:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802433a:	6900      	ldr	r0, [r0, #16]
 802433c:	f8ad 100c 	strh.w	r1, [sp, #12]
 8024340:	f04f 0c00 	mov.w	ip, #0
 8024344:	f88d c008 	strb.w	ip, [sp, #8]
 8024348:	f8ad 200a 	strh.w	r2, [sp, #10]
 802434c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8024350:	6803      	ldr	r3, [r0, #0]
 8024352:	a901      	add	r1, sp, #4
 8024354:	689b      	ldr	r3, [r3, #8]
 8024356:	4798      	blx	r3
 8024358:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802435c:	1cd3      	adds	r3, r2, #3
 802435e:	b29b      	uxth	r3, r3
 8024360:	2b06      	cmp	r3, #6
 8024362:	d916      	bls.n	8024392 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8024364:	f8df c064 	ldr.w	ip, [pc, #100]	; 80243cc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8024368:	f8cd c004 	str.w	ip, [sp, #4]
 802436c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8024370:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8024374:	6920      	ldr	r0, [r4, #16]
 8024376:	f8ad 100c 	strh.w	r1, [sp, #12]
 802437a:	f04f 0c01 	mov.w	ip, #1
 802437e:	f88d c008 	strb.w	ip, [sp, #8]
 8024382:	f8ad 200a 	strh.w	r2, [sp, #10]
 8024386:	f8ad 300e 	strh.w	r3, [sp, #14]
 802438a:	6803      	ldr	r3, [r0, #0]
 802438c:	a901      	add	r1, sp, #4
 802438e:	689b      	ldr	r3, [r3, #8]
 8024390:	4798      	blx	r3
 8024392:	4b0d      	ldr	r3, [pc, #52]	; (80243c8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8024394:	9301      	str	r3, [sp, #4]
 8024396:	6920      	ldr	r0, [r4, #16]
 8024398:	f88d 5008 	strb.w	r5, [sp, #8]
 802439c:	2300      	movs	r3, #0
 802439e:	f8ad 700a 	strh.w	r7, [sp, #10]
 80243a2:	f8ad 600c 	strh.w	r6, [sp, #12]
 80243a6:	f8ad 300e 	strh.w	r3, [sp, #14]
 80243aa:	6803      	ldr	r3, [r0, #0]
 80243ac:	a901      	add	r1, sp, #4
 80243ae:	681b      	ldr	r3, [r3, #0]
 80243b0:	4798      	blx	r3
 80243b2:	b005      	add	sp, #20
 80243b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80243b6:	2900      	cmp	r1, #0
 80243b8:	d1eb      	bne.n	8024392 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80243ba:	80a2      	strh	r2, [r4, #4]
 80243bc:	80c6      	strh	r6, [r0, #6]
 80243be:	60a1      	str	r1, [r4, #8]
 80243c0:	81a1      	strh	r1, [r4, #12]
 80243c2:	73a1      	strb	r1, [r4, #14]
 80243c4:	e7e5      	b.n	8024392 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80243c6:	bf00      	nop
 80243c8:	0802a370 	.word	0x0802a370
 80243cc:	0802a398 	.word	0x0802a398

080243d0 <__aeabi_atexit>:
 80243d0:	460b      	mov	r3, r1
 80243d2:	4601      	mov	r1, r0
 80243d4:	4618      	mov	r0, r3
 80243d6:	f000 b853 	b.w	8024480 <__cxa_atexit>

080243da <_ZdlPvj>:
 80243da:	f000 b812 	b.w	8024402 <_ZdlPv>

080243de <__cxa_guard_acquire>:
 80243de:	6803      	ldr	r3, [r0, #0]
 80243e0:	07db      	lsls	r3, r3, #31
 80243e2:	d406      	bmi.n	80243f2 <__cxa_guard_acquire+0x14>
 80243e4:	7843      	ldrb	r3, [r0, #1]
 80243e6:	b103      	cbz	r3, 80243ea <__cxa_guard_acquire+0xc>
 80243e8:	deff      	udf	#255	; 0xff
 80243ea:	2301      	movs	r3, #1
 80243ec:	7043      	strb	r3, [r0, #1]
 80243ee:	4618      	mov	r0, r3
 80243f0:	4770      	bx	lr
 80243f2:	2000      	movs	r0, #0
 80243f4:	4770      	bx	lr

080243f6 <__cxa_guard_release>:
 80243f6:	2301      	movs	r3, #1
 80243f8:	6003      	str	r3, [r0, #0]
 80243fa:	4770      	bx	lr

080243fc <__cxa_pure_virtual>:
 80243fc:	b508      	push	{r3, lr}
 80243fe:	f000 f80f 	bl	8024420 <_ZSt9terminatev>

08024402 <_ZdlPv>:
 8024402:	f000 baa9 	b.w	8024958 <free>

08024406 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8024406:	b508      	push	{r3, lr}
 8024408:	4780      	blx	r0
 802440a:	f000 f80e 	bl	802442a <abort>
	...

08024410 <_ZSt13get_terminatev>:
 8024410:	4b02      	ldr	r3, [pc, #8]	; (802441c <_ZSt13get_terminatev+0xc>)
 8024412:	6818      	ldr	r0, [r3, #0]
 8024414:	f3bf 8f5b 	dmb	ish
 8024418:	4770      	bx	lr
 802441a:	bf00      	nop
 802441c:	200000d8 	.word	0x200000d8

08024420 <_ZSt9terminatev>:
 8024420:	b508      	push	{r3, lr}
 8024422:	f7ff fff5 	bl	8024410 <_ZSt13get_terminatev>
 8024426:	f7ff ffee 	bl	8024406 <_ZN10__cxxabiv111__terminateEPFvvE>

0802442a <abort>:
 802442a:	b508      	push	{r3, lr}
 802442c:	2006      	movs	r0, #6
 802442e:	f000 feeb 	bl	8025208 <raise>
 8024432:	2001      	movs	r0, #1
 8024434:	f7dd fd7a 	bl	8001f2c <_exit>

08024438 <__assert_func>:
 8024438:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802443a:	4614      	mov	r4, r2
 802443c:	461a      	mov	r2, r3
 802443e:	4b09      	ldr	r3, [pc, #36]	; (8024464 <__assert_func+0x2c>)
 8024440:	681b      	ldr	r3, [r3, #0]
 8024442:	4605      	mov	r5, r0
 8024444:	68d8      	ldr	r0, [r3, #12]
 8024446:	b14c      	cbz	r4, 802445c <__assert_func+0x24>
 8024448:	4b07      	ldr	r3, [pc, #28]	; (8024468 <__assert_func+0x30>)
 802444a:	9100      	str	r1, [sp, #0]
 802444c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8024450:	4906      	ldr	r1, [pc, #24]	; (802446c <__assert_func+0x34>)
 8024452:	462b      	mov	r3, r5
 8024454:	f000 f912 	bl	802467c <fiprintf>
 8024458:	f7ff ffe7 	bl	802442a <abort>
 802445c:	4b04      	ldr	r3, [pc, #16]	; (8024470 <__assert_func+0x38>)
 802445e:	461c      	mov	r4, r3
 8024460:	e7f3      	b.n	802444a <__assert_func+0x12>
 8024462:	bf00      	nop
 8024464:	200000dc 	.word	0x200000dc
 8024468:	0802b6bd 	.word	0x0802b6bd
 802446c:	0802b6ca 	.word	0x0802b6ca
 8024470:	0802b6f8 	.word	0x0802b6f8

08024474 <atexit>:
 8024474:	2300      	movs	r3, #0
 8024476:	4601      	mov	r1, r0
 8024478:	461a      	mov	r2, r3
 802447a:	4618      	mov	r0, r3
 802447c:	f001 ba2e 	b.w	80258dc <__register_exitproc>

08024480 <__cxa_atexit>:
 8024480:	b510      	push	{r4, lr}
 8024482:	4c05      	ldr	r4, [pc, #20]	; (8024498 <__cxa_atexit+0x18>)
 8024484:	4613      	mov	r3, r2
 8024486:	b12c      	cbz	r4, 8024494 <__cxa_atexit+0x14>
 8024488:	460a      	mov	r2, r1
 802448a:	4601      	mov	r1, r0
 802448c:	2002      	movs	r0, #2
 802448e:	f001 fa25 	bl	80258dc <__register_exitproc>
 8024492:	bd10      	pop	{r4, pc}
 8024494:	4620      	mov	r0, r4
 8024496:	e7fc      	b.n	8024492 <__cxa_atexit+0x12>
 8024498:	080258dd 	.word	0x080258dd

0802449c <div>:
 802449c:	2900      	cmp	r1, #0
 802449e:	b510      	push	{r4, lr}
 80244a0:	fb91 f4f2 	sdiv	r4, r1, r2
 80244a4:	fb02 1314 	mls	r3, r2, r4, r1
 80244a8:	db06      	blt.n	80244b8 <div+0x1c>
 80244aa:	2b00      	cmp	r3, #0
 80244ac:	da01      	bge.n	80244b2 <div+0x16>
 80244ae:	3401      	adds	r4, #1
 80244b0:	1a9b      	subs	r3, r3, r2
 80244b2:	e9c0 4300 	strd	r4, r3, [r0]
 80244b6:	bd10      	pop	{r4, pc}
 80244b8:	2b00      	cmp	r3, #0
 80244ba:	bfc4      	itt	gt
 80244bc:	f104 34ff 	addgt.w	r4, r4, #4294967295
 80244c0:	189b      	addgt	r3, r3, r2
 80244c2:	e7f6      	b.n	80244b2 <div+0x16>

080244c4 <__errno>:
 80244c4:	4b01      	ldr	r3, [pc, #4]	; (80244cc <__errno+0x8>)
 80244c6:	6818      	ldr	r0, [r3, #0]
 80244c8:	4770      	bx	lr
 80244ca:	bf00      	nop
 80244cc:	200000dc 	.word	0x200000dc

080244d0 <std>:
 80244d0:	2300      	movs	r3, #0
 80244d2:	b510      	push	{r4, lr}
 80244d4:	4604      	mov	r4, r0
 80244d6:	e9c0 3300 	strd	r3, r3, [r0]
 80244da:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80244de:	6083      	str	r3, [r0, #8]
 80244e0:	8181      	strh	r1, [r0, #12]
 80244e2:	6643      	str	r3, [r0, #100]	; 0x64
 80244e4:	81c2      	strh	r2, [r0, #14]
 80244e6:	6183      	str	r3, [r0, #24]
 80244e8:	4619      	mov	r1, r3
 80244ea:	2208      	movs	r2, #8
 80244ec:	305c      	adds	r0, #92	; 0x5c
 80244ee:	f000 fa49 	bl	8024984 <memset>
 80244f2:	4b05      	ldr	r3, [pc, #20]	; (8024508 <std+0x38>)
 80244f4:	6263      	str	r3, [r4, #36]	; 0x24
 80244f6:	4b05      	ldr	r3, [pc, #20]	; (802450c <std+0x3c>)
 80244f8:	62a3      	str	r3, [r4, #40]	; 0x28
 80244fa:	4b05      	ldr	r3, [pc, #20]	; (8024510 <std+0x40>)
 80244fc:	62e3      	str	r3, [r4, #44]	; 0x2c
 80244fe:	4b05      	ldr	r3, [pc, #20]	; (8024514 <std+0x44>)
 8024500:	6224      	str	r4, [r4, #32]
 8024502:	6323      	str	r3, [r4, #48]	; 0x30
 8024504:	bd10      	pop	{r4, pc}
 8024506:	bf00      	nop
 8024508:	08025241 	.word	0x08025241
 802450c:	08025267 	.word	0x08025267
 8024510:	0802529f 	.word	0x0802529f
 8024514:	080252c3 	.word	0x080252c3

08024518 <_cleanup_r>:
 8024518:	4901      	ldr	r1, [pc, #4]	; (8024520 <_cleanup_r+0x8>)
 802451a:	f000 b8c1 	b.w	80246a0 <_fwalk_reent>
 802451e:	bf00      	nop
 8024520:	08025acd 	.word	0x08025acd

08024524 <__sfmoreglue>:
 8024524:	b570      	push	{r4, r5, r6, lr}
 8024526:	1e4a      	subs	r2, r1, #1
 8024528:	2568      	movs	r5, #104	; 0x68
 802452a:	4355      	muls	r5, r2
 802452c:	460e      	mov	r6, r1
 802452e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8024532:	f000 fa7f 	bl	8024a34 <_malloc_r>
 8024536:	4604      	mov	r4, r0
 8024538:	b140      	cbz	r0, 802454c <__sfmoreglue+0x28>
 802453a:	2100      	movs	r1, #0
 802453c:	e9c0 1600 	strd	r1, r6, [r0]
 8024540:	300c      	adds	r0, #12
 8024542:	60a0      	str	r0, [r4, #8]
 8024544:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8024548:	f000 fa1c 	bl	8024984 <memset>
 802454c:	4620      	mov	r0, r4
 802454e:	bd70      	pop	{r4, r5, r6, pc}

08024550 <__sfp_lock_acquire>:
 8024550:	4801      	ldr	r0, [pc, #4]	; (8024558 <__sfp_lock_acquire+0x8>)
 8024552:	f000 b9f5 	b.w	8024940 <__retarget_lock_acquire_recursive>
 8024556:	bf00      	nop
 8024558:	2002102c 	.word	0x2002102c

0802455c <__sfp_lock_release>:
 802455c:	4801      	ldr	r0, [pc, #4]	; (8024564 <__sfp_lock_release+0x8>)
 802455e:	f000 b9f1 	b.w	8024944 <__retarget_lock_release_recursive>
 8024562:	bf00      	nop
 8024564:	2002102c 	.word	0x2002102c

08024568 <__sinit_lock_acquire>:
 8024568:	4801      	ldr	r0, [pc, #4]	; (8024570 <__sinit_lock_acquire+0x8>)
 802456a:	f000 b9e9 	b.w	8024940 <__retarget_lock_acquire_recursive>
 802456e:	bf00      	nop
 8024570:	20021027 	.word	0x20021027

08024574 <__sinit_lock_release>:
 8024574:	4801      	ldr	r0, [pc, #4]	; (802457c <__sinit_lock_release+0x8>)
 8024576:	f000 b9e5 	b.w	8024944 <__retarget_lock_release_recursive>
 802457a:	bf00      	nop
 802457c:	20021027 	.word	0x20021027

08024580 <__sinit>:
 8024580:	b510      	push	{r4, lr}
 8024582:	4604      	mov	r4, r0
 8024584:	f7ff fff0 	bl	8024568 <__sinit_lock_acquire>
 8024588:	69a3      	ldr	r3, [r4, #24]
 802458a:	b11b      	cbz	r3, 8024594 <__sinit+0x14>
 802458c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8024590:	f7ff bff0 	b.w	8024574 <__sinit_lock_release>
 8024594:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8024598:	6523      	str	r3, [r4, #80]	; 0x50
 802459a:	4b13      	ldr	r3, [pc, #76]	; (80245e8 <__sinit+0x68>)
 802459c:	4a13      	ldr	r2, [pc, #76]	; (80245ec <__sinit+0x6c>)
 802459e:	681b      	ldr	r3, [r3, #0]
 80245a0:	62a2      	str	r2, [r4, #40]	; 0x28
 80245a2:	42a3      	cmp	r3, r4
 80245a4:	bf04      	itt	eq
 80245a6:	2301      	moveq	r3, #1
 80245a8:	61a3      	streq	r3, [r4, #24]
 80245aa:	4620      	mov	r0, r4
 80245ac:	f000 f820 	bl	80245f0 <__sfp>
 80245b0:	6060      	str	r0, [r4, #4]
 80245b2:	4620      	mov	r0, r4
 80245b4:	f000 f81c 	bl	80245f0 <__sfp>
 80245b8:	60a0      	str	r0, [r4, #8]
 80245ba:	4620      	mov	r0, r4
 80245bc:	f000 f818 	bl	80245f0 <__sfp>
 80245c0:	2200      	movs	r2, #0
 80245c2:	60e0      	str	r0, [r4, #12]
 80245c4:	2104      	movs	r1, #4
 80245c6:	6860      	ldr	r0, [r4, #4]
 80245c8:	f7ff ff82 	bl	80244d0 <std>
 80245cc:	68a0      	ldr	r0, [r4, #8]
 80245ce:	2201      	movs	r2, #1
 80245d0:	2109      	movs	r1, #9
 80245d2:	f7ff ff7d 	bl	80244d0 <std>
 80245d6:	68e0      	ldr	r0, [r4, #12]
 80245d8:	2202      	movs	r2, #2
 80245da:	2112      	movs	r1, #18
 80245dc:	f7ff ff78 	bl	80244d0 <std>
 80245e0:	2301      	movs	r3, #1
 80245e2:	61a3      	str	r3, [r4, #24]
 80245e4:	e7d2      	b.n	802458c <__sinit+0xc>
 80245e6:	bf00      	nop
 80245e8:	0802b75c 	.word	0x0802b75c
 80245ec:	08024519 	.word	0x08024519

080245f0 <__sfp>:
 80245f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80245f2:	4607      	mov	r7, r0
 80245f4:	f7ff ffac 	bl	8024550 <__sfp_lock_acquire>
 80245f8:	4b1e      	ldr	r3, [pc, #120]	; (8024674 <__sfp+0x84>)
 80245fa:	681e      	ldr	r6, [r3, #0]
 80245fc:	69b3      	ldr	r3, [r6, #24]
 80245fe:	b913      	cbnz	r3, 8024606 <__sfp+0x16>
 8024600:	4630      	mov	r0, r6
 8024602:	f7ff ffbd 	bl	8024580 <__sinit>
 8024606:	3648      	adds	r6, #72	; 0x48
 8024608:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 802460c:	3b01      	subs	r3, #1
 802460e:	d503      	bpl.n	8024618 <__sfp+0x28>
 8024610:	6833      	ldr	r3, [r6, #0]
 8024612:	b30b      	cbz	r3, 8024658 <__sfp+0x68>
 8024614:	6836      	ldr	r6, [r6, #0]
 8024616:	e7f7      	b.n	8024608 <__sfp+0x18>
 8024618:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 802461c:	b9d5      	cbnz	r5, 8024654 <__sfp+0x64>
 802461e:	4b16      	ldr	r3, [pc, #88]	; (8024678 <__sfp+0x88>)
 8024620:	60e3      	str	r3, [r4, #12]
 8024622:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8024626:	6665      	str	r5, [r4, #100]	; 0x64
 8024628:	f000 f988 	bl	802493c <__retarget_lock_init_recursive>
 802462c:	f7ff ff96 	bl	802455c <__sfp_lock_release>
 8024630:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8024634:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8024638:	6025      	str	r5, [r4, #0]
 802463a:	61a5      	str	r5, [r4, #24]
 802463c:	2208      	movs	r2, #8
 802463e:	4629      	mov	r1, r5
 8024640:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8024644:	f000 f99e 	bl	8024984 <memset>
 8024648:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 802464c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8024650:	4620      	mov	r0, r4
 8024652:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8024654:	3468      	adds	r4, #104	; 0x68
 8024656:	e7d9      	b.n	802460c <__sfp+0x1c>
 8024658:	2104      	movs	r1, #4
 802465a:	4638      	mov	r0, r7
 802465c:	f7ff ff62 	bl	8024524 <__sfmoreglue>
 8024660:	4604      	mov	r4, r0
 8024662:	6030      	str	r0, [r6, #0]
 8024664:	2800      	cmp	r0, #0
 8024666:	d1d5      	bne.n	8024614 <__sfp+0x24>
 8024668:	f7ff ff78 	bl	802455c <__sfp_lock_release>
 802466c:	230c      	movs	r3, #12
 802466e:	603b      	str	r3, [r7, #0]
 8024670:	e7ee      	b.n	8024650 <__sfp+0x60>
 8024672:	bf00      	nop
 8024674:	0802b75c 	.word	0x0802b75c
 8024678:	ffff0001 	.word	0xffff0001

0802467c <fiprintf>:
 802467c:	b40e      	push	{r1, r2, r3}
 802467e:	b503      	push	{r0, r1, lr}
 8024680:	4601      	mov	r1, r0
 8024682:	ab03      	add	r3, sp, #12
 8024684:	4805      	ldr	r0, [pc, #20]	; (802469c <fiprintf+0x20>)
 8024686:	f853 2b04 	ldr.w	r2, [r3], #4
 802468a:	6800      	ldr	r0, [r0, #0]
 802468c:	9301      	str	r3, [sp, #4]
 802468e:	f000 fa55 	bl	8024b3c <_vfiprintf_r>
 8024692:	b002      	add	sp, #8
 8024694:	f85d eb04 	ldr.w	lr, [sp], #4
 8024698:	b003      	add	sp, #12
 802469a:	4770      	bx	lr
 802469c:	200000dc 	.word	0x200000dc

080246a0 <_fwalk_reent>:
 80246a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80246a4:	4606      	mov	r6, r0
 80246a6:	4688      	mov	r8, r1
 80246a8:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80246ac:	2700      	movs	r7, #0
 80246ae:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80246b2:	f1b9 0901 	subs.w	r9, r9, #1
 80246b6:	d505      	bpl.n	80246c4 <_fwalk_reent+0x24>
 80246b8:	6824      	ldr	r4, [r4, #0]
 80246ba:	2c00      	cmp	r4, #0
 80246bc:	d1f7      	bne.n	80246ae <_fwalk_reent+0xe>
 80246be:	4638      	mov	r0, r7
 80246c0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80246c4:	89ab      	ldrh	r3, [r5, #12]
 80246c6:	2b01      	cmp	r3, #1
 80246c8:	d907      	bls.n	80246da <_fwalk_reent+0x3a>
 80246ca:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80246ce:	3301      	adds	r3, #1
 80246d0:	d003      	beq.n	80246da <_fwalk_reent+0x3a>
 80246d2:	4629      	mov	r1, r5
 80246d4:	4630      	mov	r0, r6
 80246d6:	47c0      	blx	r8
 80246d8:	4307      	orrs	r7, r0
 80246da:	3568      	adds	r5, #104	; 0x68
 80246dc:	e7e9      	b.n	80246b2 <_fwalk_reent+0x12>
	...

080246e0 <__libc_init_array>:
 80246e0:	b570      	push	{r4, r5, r6, lr}
 80246e2:	4d0d      	ldr	r5, [pc, #52]	; (8024718 <__libc_init_array+0x38>)
 80246e4:	4c0d      	ldr	r4, [pc, #52]	; (802471c <__libc_init_array+0x3c>)
 80246e6:	1b64      	subs	r4, r4, r5
 80246e8:	10a4      	asrs	r4, r4, #2
 80246ea:	2600      	movs	r6, #0
 80246ec:	42a6      	cmp	r6, r4
 80246ee:	d109      	bne.n	8024704 <__libc_init_array+0x24>
 80246f0:	4d0b      	ldr	r5, [pc, #44]	; (8024720 <__libc_init_array+0x40>)
 80246f2:	4c0c      	ldr	r4, [pc, #48]	; (8024724 <__libc_init_array+0x44>)
 80246f4:	f002 f842 	bl	802677c <_init>
 80246f8:	1b64      	subs	r4, r4, r5
 80246fa:	10a4      	asrs	r4, r4, #2
 80246fc:	2600      	movs	r6, #0
 80246fe:	42a6      	cmp	r6, r4
 8024700:	d105      	bne.n	802470e <__libc_init_array+0x2e>
 8024702:	bd70      	pop	{r4, r5, r6, pc}
 8024704:	f855 3b04 	ldr.w	r3, [r5], #4
 8024708:	4798      	blx	r3
 802470a:	3601      	adds	r6, #1
 802470c:	e7ee      	b.n	80246ec <__libc_init_array+0xc>
 802470e:	f855 3b04 	ldr.w	r3, [r5], #4
 8024712:	4798      	blx	r3
 8024714:	3601      	adds	r6, #1
 8024716:	e7f2      	b.n	80246fe <__libc_init_array+0x1e>
 8024718:	0802bd54 	.word	0x0802bd54
 802471c:	0802bd54 	.word	0x0802bd54
 8024720:	0802bd54 	.word	0x0802bd54
 8024724:	0802bd6c 	.word	0x0802bd6c

08024728 <localtime_r>:
 8024728:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 802472c:	4607      	mov	r7, r0
 802472e:	9101      	str	r1, [sp, #4]
 8024730:	f001 fa4a 	bl	8025bc8 <__gettzinfo>
 8024734:	9901      	ldr	r1, [sp, #4]
 8024736:	4680      	mov	r8, r0
 8024738:	4638      	mov	r0, r7
 802473a:	f7e4 fc0b 	bl	8008f54 <gmtime_r>
 802473e:	6943      	ldr	r3, [r0, #20]
 8024740:	079a      	lsls	r2, r3, #30
 8024742:	4604      	mov	r4, r0
 8024744:	f203 766c 	addw	r6, r3, #1900	; 0x76c
 8024748:	d105      	bne.n	8024756 <localtime_r+0x2e>
 802474a:	2264      	movs	r2, #100	; 0x64
 802474c:	fb96 f3f2 	sdiv	r3, r6, r2
 8024750:	fb02 6313 	mls	r3, r2, r3, r6
 8024754:	bb7b      	cbnz	r3, 80247b6 <localtime_r+0x8e>
 8024756:	f44f 73c8 	mov.w	r3, #400	; 0x190
 802475a:	fb96 f5f3 	sdiv	r5, r6, r3
 802475e:	fb03 6515 	mls	r5, r3, r5, r6
 8024762:	fab5 f585 	clz	r5, r5
 8024766:	096d      	lsrs	r5, r5, #5
 8024768:	4b68      	ldr	r3, [pc, #416]	; (802490c <localtime_r+0x1e4>)
 802476a:	2230      	movs	r2, #48	; 0x30
 802476c:	fb02 3505 	mla	r5, r2, r5, r3
 8024770:	f000 fe54 	bl	802541c <__tz_lock>
 8024774:	f000 fe5e 	bl	8025434 <_tzset_unlocked>
 8024778:	4b65      	ldr	r3, [pc, #404]	; (8024910 <localtime_r+0x1e8>)
 802477a:	681b      	ldr	r3, [r3, #0]
 802477c:	b353      	cbz	r3, 80247d4 <localtime_r+0xac>
 802477e:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8024782:	42b3      	cmp	r3, r6
 8024784:	d119      	bne.n	80247ba <localtime_r+0x92>
 8024786:	f8d8 1000 	ldr.w	r1, [r8]
 802478a:	e9d7 6700 	ldrd	r6, r7, [r7]
 802478e:	e9d8 2308 	ldrd	r2, r3, [r8, #32]
 8024792:	b9d1      	cbnz	r1, 80247ca <localtime_r+0xa2>
 8024794:	4296      	cmp	r6, r2
 8024796:	eb77 0303 	sbcs.w	r3, r7, r3
 802479a:	da23      	bge.n	80247e4 <localtime_r+0xbc>
 802479c:	e9d8 2312 	ldrd	r2, r3, [r8, #72]	; 0x48
 80247a0:	4296      	cmp	r6, r2
 80247a2:	eb77 0303 	sbcs.w	r3, r7, r3
 80247a6:	bfb4      	ite	lt
 80247a8:	2301      	movlt	r3, #1
 80247aa:	2300      	movge	r3, #0
 80247ac:	6223      	str	r3, [r4, #32]
 80247ae:	db1b      	blt.n	80247e8 <localtime_r+0xc0>
 80247b0:	f8d8 1028 	ldr.w	r1, [r8, #40]	; 0x28
 80247b4:	e01a      	b.n	80247ec <localtime_r+0xc4>
 80247b6:	2501      	movs	r5, #1
 80247b8:	e7d6      	b.n	8024768 <localtime_r+0x40>
 80247ba:	4630      	mov	r0, r6
 80247bc:	f000 fd86 	bl	80252cc <__tzcalc_limits>
 80247c0:	2800      	cmp	r0, #0
 80247c2:	d1e0      	bne.n	8024786 <localtime_r+0x5e>
 80247c4:	f04f 33ff 	mov.w	r3, #4294967295
 80247c8:	e004      	b.n	80247d4 <localtime_r+0xac>
 80247ca:	4296      	cmp	r6, r2
 80247cc:	eb77 0303 	sbcs.w	r3, r7, r3
 80247d0:	da02      	bge.n	80247d8 <localtime_r+0xb0>
 80247d2:	2300      	movs	r3, #0
 80247d4:	6223      	str	r3, [r4, #32]
 80247d6:	e7eb      	b.n	80247b0 <localtime_r+0x88>
 80247d8:	e9d8 2312 	ldrd	r2, r3, [r8, #72]	; 0x48
 80247dc:	4296      	cmp	r6, r2
 80247de:	eb77 0303 	sbcs.w	r3, r7, r3
 80247e2:	daf6      	bge.n	80247d2 <localtime_r+0xaa>
 80247e4:	2301      	movs	r3, #1
 80247e6:	6223      	str	r3, [r4, #32]
 80247e8:	f8d8 1050 	ldr.w	r1, [r8, #80]	; 0x50
 80247ec:	f44f 6361 	mov.w	r3, #3600	; 0xe10
 80247f0:	203c      	movs	r0, #60	; 0x3c
 80247f2:	fb91 f6f3 	sdiv	r6, r1, r3
 80247f6:	fb03 1316 	mls	r3, r3, r6, r1
 80247fa:	6861      	ldr	r1, [r4, #4]
 80247fc:	fb93 f2f0 	sdiv	r2, r3, r0
 8024800:	fb00 3012 	mls	r0, r0, r2, r3
 8024804:	6823      	ldr	r3, [r4, #0]
 8024806:	1a89      	subs	r1, r1, r2
 8024808:	68a2      	ldr	r2, [r4, #8]
 802480a:	6061      	str	r1, [r4, #4]
 802480c:	1a1b      	subs	r3, r3, r0
 802480e:	1b92      	subs	r2, r2, r6
 8024810:	2b3b      	cmp	r3, #59	; 0x3b
 8024812:	6023      	str	r3, [r4, #0]
 8024814:	60a2      	str	r2, [r4, #8]
 8024816:	dd35      	ble.n	8024884 <localtime_r+0x15c>
 8024818:	3101      	adds	r1, #1
 802481a:	6061      	str	r1, [r4, #4]
 802481c:	3b3c      	subs	r3, #60	; 0x3c
 802481e:	6023      	str	r3, [r4, #0]
 8024820:	6863      	ldr	r3, [r4, #4]
 8024822:	2b3b      	cmp	r3, #59	; 0x3b
 8024824:	dd34      	ble.n	8024890 <localtime_r+0x168>
 8024826:	3201      	adds	r2, #1
 8024828:	60a2      	str	r2, [r4, #8]
 802482a:	3b3c      	subs	r3, #60	; 0x3c
 802482c:	6063      	str	r3, [r4, #4]
 802482e:	68a3      	ldr	r3, [r4, #8]
 8024830:	2b17      	cmp	r3, #23
 8024832:	dd33      	ble.n	802489c <localtime_r+0x174>
 8024834:	69e2      	ldr	r2, [r4, #28]
 8024836:	3201      	adds	r2, #1
 8024838:	61e2      	str	r2, [r4, #28]
 802483a:	69a2      	ldr	r2, [r4, #24]
 802483c:	3201      	adds	r2, #1
 802483e:	2a06      	cmp	r2, #6
 8024840:	bfc8      	it	gt
 8024842:	2200      	movgt	r2, #0
 8024844:	61a2      	str	r2, [r4, #24]
 8024846:	68e2      	ldr	r2, [r4, #12]
 8024848:	3b18      	subs	r3, #24
 802484a:	3201      	adds	r2, #1
 802484c:	60a3      	str	r3, [r4, #8]
 802484e:	6923      	ldr	r3, [r4, #16]
 8024850:	60e2      	str	r2, [r4, #12]
 8024852:	f855 1023 	ldr.w	r1, [r5, r3, lsl #2]
 8024856:	428a      	cmp	r2, r1
 8024858:	dd0e      	ble.n	8024878 <localtime_r+0x150>
 802485a:	2b0b      	cmp	r3, #11
 802485c:	eba2 0201 	sub.w	r2, r2, r1
 8024860:	60e2      	str	r2, [r4, #12]
 8024862:	f103 0201 	add.w	r2, r3, #1
 8024866:	bf09      	itett	eq
 8024868:	6963      	ldreq	r3, [r4, #20]
 802486a:	6122      	strne	r2, [r4, #16]
 802486c:	2200      	moveq	r2, #0
 802486e:	3301      	addeq	r3, #1
 8024870:	bf02      	ittt	eq
 8024872:	6122      	streq	r2, [r4, #16]
 8024874:	6163      	streq	r3, [r4, #20]
 8024876:	61e2      	streq	r2, [r4, #28]
 8024878:	f000 fdd6 	bl	8025428 <__tz_unlock>
 802487c:	4620      	mov	r0, r4
 802487e:	b002      	add	sp, #8
 8024880:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8024884:	2b00      	cmp	r3, #0
 8024886:	dacb      	bge.n	8024820 <localtime_r+0xf8>
 8024888:	3901      	subs	r1, #1
 802488a:	6061      	str	r1, [r4, #4]
 802488c:	333c      	adds	r3, #60	; 0x3c
 802488e:	e7c6      	b.n	802481e <localtime_r+0xf6>
 8024890:	2b00      	cmp	r3, #0
 8024892:	dacc      	bge.n	802482e <localtime_r+0x106>
 8024894:	3a01      	subs	r2, #1
 8024896:	60a2      	str	r2, [r4, #8]
 8024898:	333c      	adds	r3, #60	; 0x3c
 802489a:	e7c7      	b.n	802482c <localtime_r+0x104>
 802489c:	2b00      	cmp	r3, #0
 802489e:	daeb      	bge.n	8024878 <localtime_r+0x150>
 80248a0:	69e2      	ldr	r2, [r4, #28]
 80248a2:	3a01      	subs	r2, #1
 80248a4:	61e2      	str	r2, [r4, #28]
 80248a6:	69a2      	ldr	r2, [r4, #24]
 80248a8:	3a01      	subs	r2, #1
 80248aa:	bf48      	it	mi
 80248ac:	2206      	movmi	r2, #6
 80248ae:	61a2      	str	r2, [r4, #24]
 80248b0:	68e2      	ldr	r2, [r4, #12]
 80248b2:	3318      	adds	r3, #24
 80248b4:	3a01      	subs	r2, #1
 80248b6:	60e2      	str	r2, [r4, #12]
 80248b8:	60a3      	str	r3, [r4, #8]
 80248ba:	2a00      	cmp	r2, #0
 80248bc:	d1dc      	bne.n	8024878 <localtime_r+0x150>
 80248be:	6923      	ldr	r3, [r4, #16]
 80248c0:	3b01      	subs	r3, #1
 80248c2:	d405      	bmi.n	80248d0 <localtime_r+0x1a8>
 80248c4:	6123      	str	r3, [r4, #16]
 80248c6:	6923      	ldr	r3, [r4, #16]
 80248c8:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80248cc:	60e3      	str	r3, [r4, #12]
 80248ce:	e7d3      	b.n	8024878 <localtime_r+0x150>
 80248d0:	230b      	movs	r3, #11
 80248d2:	6123      	str	r3, [r4, #16]
 80248d4:	6963      	ldr	r3, [r4, #20]
 80248d6:	1e5a      	subs	r2, r3, #1
 80248d8:	6162      	str	r2, [r4, #20]
 80248da:	f203 726b 	addw	r2, r3, #1899	; 0x76b
 80248de:	0793      	lsls	r3, r2, #30
 80248e0:	d105      	bne.n	80248ee <localtime_r+0x1c6>
 80248e2:	2164      	movs	r1, #100	; 0x64
 80248e4:	fb92 f3f1 	sdiv	r3, r2, r1
 80248e8:	fb01 2313 	mls	r3, r1, r3, r2
 80248ec:	b963      	cbnz	r3, 8024908 <localtime_r+0x1e0>
 80248ee:	f44f 71c8 	mov.w	r1, #400	; 0x190
 80248f2:	fb92 f3f1 	sdiv	r3, r2, r1
 80248f6:	fb01 2313 	mls	r3, r1, r3, r2
 80248fa:	fab3 f383 	clz	r3, r3
 80248fe:	095b      	lsrs	r3, r3, #5
 8024900:	f503 73b6 	add.w	r3, r3, #364	; 0x16c
 8024904:	61e3      	str	r3, [r4, #28]
 8024906:	e7de      	b.n	80248c6 <localtime_r+0x19e>
 8024908:	2301      	movs	r3, #1
 802490a:	e7f9      	b.n	8024900 <localtime_r+0x1d8>
 802490c:	0802b760 	.word	0x0802b760
 8024910:	20020cb8 	.word	0x20020cb8

08024914 <ldiv>:
 8024914:	2900      	cmp	r1, #0
 8024916:	b510      	push	{r4, lr}
 8024918:	fb91 f4f2 	sdiv	r4, r1, r2
 802491c:	fb02 1314 	mls	r3, r2, r4, r1
 8024920:	db06      	blt.n	8024930 <ldiv+0x1c>
 8024922:	2b00      	cmp	r3, #0
 8024924:	da01      	bge.n	802492a <ldiv+0x16>
 8024926:	3401      	adds	r4, #1
 8024928:	1a9b      	subs	r3, r3, r2
 802492a:	e9c0 4300 	strd	r4, r3, [r0]
 802492e:	bd10      	pop	{r4, pc}
 8024930:	2b00      	cmp	r3, #0
 8024932:	bfc4      	itt	gt
 8024934:	f104 34ff 	addgt.w	r4, r4, #4294967295
 8024938:	189b      	addgt	r3, r3, r2
 802493a:	e7f6      	b.n	802492a <ldiv+0x16>

0802493c <__retarget_lock_init_recursive>:
 802493c:	4770      	bx	lr

0802493e <__retarget_lock_acquire>:
 802493e:	4770      	bx	lr

08024940 <__retarget_lock_acquire_recursive>:
 8024940:	4770      	bx	lr

08024942 <__retarget_lock_release>:
 8024942:	4770      	bx	lr

08024944 <__retarget_lock_release_recursive>:
 8024944:	4770      	bx	lr
	...

08024948 <malloc>:
 8024948:	4b02      	ldr	r3, [pc, #8]	; (8024954 <malloc+0xc>)
 802494a:	4601      	mov	r1, r0
 802494c:	6818      	ldr	r0, [r3, #0]
 802494e:	f000 b871 	b.w	8024a34 <_malloc_r>
 8024952:	bf00      	nop
 8024954:	200000dc 	.word	0x200000dc

08024958 <free>:
 8024958:	4b02      	ldr	r3, [pc, #8]	; (8024964 <free+0xc>)
 802495a:	4601      	mov	r1, r0
 802495c:	6818      	ldr	r0, [r3, #0]
 802495e:	f000 b819 	b.w	8024994 <_free_r>
 8024962:	bf00      	nop
 8024964:	200000dc 	.word	0x200000dc

08024968 <memcpy>:
 8024968:	440a      	add	r2, r1
 802496a:	4291      	cmp	r1, r2
 802496c:	f100 33ff 	add.w	r3, r0, #4294967295
 8024970:	d100      	bne.n	8024974 <memcpy+0xc>
 8024972:	4770      	bx	lr
 8024974:	b510      	push	{r4, lr}
 8024976:	f811 4b01 	ldrb.w	r4, [r1], #1
 802497a:	f803 4f01 	strb.w	r4, [r3, #1]!
 802497e:	4291      	cmp	r1, r2
 8024980:	d1f9      	bne.n	8024976 <memcpy+0xe>
 8024982:	bd10      	pop	{r4, pc}

08024984 <memset>:
 8024984:	4402      	add	r2, r0
 8024986:	4603      	mov	r3, r0
 8024988:	4293      	cmp	r3, r2
 802498a:	d100      	bne.n	802498e <memset+0xa>
 802498c:	4770      	bx	lr
 802498e:	f803 1b01 	strb.w	r1, [r3], #1
 8024992:	e7f9      	b.n	8024988 <memset+0x4>

08024994 <_free_r>:
 8024994:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8024996:	2900      	cmp	r1, #0
 8024998:	d048      	beq.n	8024a2c <_free_r+0x98>
 802499a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802499e:	9001      	str	r0, [sp, #4]
 80249a0:	2b00      	cmp	r3, #0
 80249a2:	f1a1 0404 	sub.w	r4, r1, #4
 80249a6:	bfb8      	it	lt
 80249a8:	18e4      	addlt	r4, r4, r3
 80249aa:	f001 f987 	bl	8025cbc <__malloc_lock>
 80249ae:	4a20      	ldr	r2, [pc, #128]	; (8024a30 <_free_r+0x9c>)
 80249b0:	9801      	ldr	r0, [sp, #4]
 80249b2:	6813      	ldr	r3, [r2, #0]
 80249b4:	4615      	mov	r5, r2
 80249b6:	b933      	cbnz	r3, 80249c6 <_free_r+0x32>
 80249b8:	6063      	str	r3, [r4, #4]
 80249ba:	6014      	str	r4, [r2, #0]
 80249bc:	b003      	add	sp, #12
 80249be:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80249c2:	f001 b981 	b.w	8025cc8 <__malloc_unlock>
 80249c6:	42a3      	cmp	r3, r4
 80249c8:	d90b      	bls.n	80249e2 <_free_r+0x4e>
 80249ca:	6821      	ldr	r1, [r4, #0]
 80249cc:	1862      	adds	r2, r4, r1
 80249ce:	4293      	cmp	r3, r2
 80249d0:	bf04      	itt	eq
 80249d2:	681a      	ldreq	r2, [r3, #0]
 80249d4:	685b      	ldreq	r3, [r3, #4]
 80249d6:	6063      	str	r3, [r4, #4]
 80249d8:	bf04      	itt	eq
 80249da:	1852      	addeq	r2, r2, r1
 80249dc:	6022      	streq	r2, [r4, #0]
 80249de:	602c      	str	r4, [r5, #0]
 80249e0:	e7ec      	b.n	80249bc <_free_r+0x28>
 80249e2:	461a      	mov	r2, r3
 80249e4:	685b      	ldr	r3, [r3, #4]
 80249e6:	b10b      	cbz	r3, 80249ec <_free_r+0x58>
 80249e8:	42a3      	cmp	r3, r4
 80249ea:	d9fa      	bls.n	80249e2 <_free_r+0x4e>
 80249ec:	6811      	ldr	r1, [r2, #0]
 80249ee:	1855      	adds	r5, r2, r1
 80249f0:	42a5      	cmp	r5, r4
 80249f2:	d10b      	bne.n	8024a0c <_free_r+0x78>
 80249f4:	6824      	ldr	r4, [r4, #0]
 80249f6:	4421      	add	r1, r4
 80249f8:	1854      	adds	r4, r2, r1
 80249fa:	42a3      	cmp	r3, r4
 80249fc:	6011      	str	r1, [r2, #0]
 80249fe:	d1dd      	bne.n	80249bc <_free_r+0x28>
 8024a00:	681c      	ldr	r4, [r3, #0]
 8024a02:	685b      	ldr	r3, [r3, #4]
 8024a04:	6053      	str	r3, [r2, #4]
 8024a06:	4421      	add	r1, r4
 8024a08:	6011      	str	r1, [r2, #0]
 8024a0a:	e7d7      	b.n	80249bc <_free_r+0x28>
 8024a0c:	d902      	bls.n	8024a14 <_free_r+0x80>
 8024a0e:	230c      	movs	r3, #12
 8024a10:	6003      	str	r3, [r0, #0]
 8024a12:	e7d3      	b.n	80249bc <_free_r+0x28>
 8024a14:	6825      	ldr	r5, [r4, #0]
 8024a16:	1961      	adds	r1, r4, r5
 8024a18:	428b      	cmp	r3, r1
 8024a1a:	bf04      	itt	eq
 8024a1c:	6819      	ldreq	r1, [r3, #0]
 8024a1e:	685b      	ldreq	r3, [r3, #4]
 8024a20:	6063      	str	r3, [r4, #4]
 8024a22:	bf04      	itt	eq
 8024a24:	1949      	addeq	r1, r1, r5
 8024a26:	6021      	streq	r1, [r4, #0]
 8024a28:	6054      	str	r4, [r2, #4]
 8024a2a:	e7c7      	b.n	80249bc <_free_r+0x28>
 8024a2c:	b003      	add	sp, #12
 8024a2e:	bd30      	pop	{r4, r5, pc}
 8024a30:	20020b8c 	.word	0x20020b8c

08024a34 <_malloc_r>:
 8024a34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8024a36:	1ccd      	adds	r5, r1, #3
 8024a38:	f025 0503 	bic.w	r5, r5, #3
 8024a3c:	3508      	adds	r5, #8
 8024a3e:	2d0c      	cmp	r5, #12
 8024a40:	bf38      	it	cc
 8024a42:	250c      	movcc	r5, #12
 8024a44:	2d00      	cmp	r5, #0
 8024a46:	4606      	mov	r6, r0
 8024a48:	db01      	blt.n	8024a4e <_malloc_r+0x1a>
 8024a4a:	42a9      	cmp	r1, r5
 8024a4c:	d903      	bls.n	8024a56 <_malloc_r+0x22>
 8024a4e:	230c      	movs	r3, #12
 8024a50:	6033      	str	r3, [r6, #0]
 8024a52:	2000      	movs	r0, #0
 8024a54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8024a56:	f001 f931 	bl	8025cbc <__malloc_lock>
 8024a5a:	4921      	ldr	r1, [pc, #132]	; (8024ae0 <_malloc_r+0xac>)
 8024a5c:	680a      	ldr	r2, [r1, #0]
 8024a5e:	4614      	mov	r4, r2
 8024a60:	b99c      	cbnz	r4, 8024a8a <_malloc_r+0x56>
 8024a62:	4f20      	ldr	r7, [pc, #128]	; (8024ae4 <_malloc_r+0xb0>)
 8024a64:	683b      	ldr	r3, [r7, #0]
 8024a66:	b923      	cbnz	r3, 8024a72 <_malloc_r+0x3e>
 8024a68:	4621      	mov	r1, r4
 8024a6a:	4630      	mov	r0, r6
 8024a6c:	f000 fb94 	bl	8025198 <_sbrk_r>
 8024a70:	6038      	str	r0, [r7, #0]
 8024a72:	4629      	mov	r1, r5
 8024a74:	4630      	mov	r0, r6
 8024a76:	f000 fb8f 	bl	8025198 <_sbrk_r>
 8024a7a:	1c43      	adds	r3, r0, #1
 8024a7c:	d123      	bne.n	8024ac6 <_malloc_r+0x92>
 8024a7e:	230c      	movs	r3, #12
 8024a80:	6033      	str	r3, [r6, #0]
 8024a82:	4630      	mov	r0, r6
 8024a84:	f001 f920 	bl	8025cc8 <__malloc_unlock>
 8024a88:	e7e3      	b.n	8024a52 <_malloc_r+0x1e>
 8024a8a:	6823      	ldr	r3, [r4, #0]
 8024a8c:	1b5b      	subs	r3, r3, r5
 8024a8e:	d417      	bmi.n	8024ac0 <_malloc_r+0x8c>
 8024a90:	2b0b      	cmp	r3, #11
 8024a92:	d903      	bls.n	8024a9c <_malloc_r+0x68>
 8024a94:	6023      	str	r3, [r4, #0]
 8024a96:	441c      	add	r4, r3
 8024a98:	6025      	str	r5, [r4, #0]
 8024a9a:	e004      	b.n	8024aa6 <_malloc_r+0x72>
 8024a9c:	6863      	ldr	r3, [r4, #4]
 8024a9e:	42a2      	cmp	r2, r4
 8024aa0:	bf0c      	ite	eq
 8024aa2:	600b      	streq	r3, [r1, #0]
 8024aa4:	6053      	strne	r3, [r2, #4]
 8024aa6:	4630      	mov	r0, r6
 8024aa8:	f001 f90e 	bl	8025cc8 <__malloc_unlock>
 8024aac:	f104 000b 	add.w	r0, r4, #11
 8024ab0:	1d23      	adds	r3, r4, #4
 8024ab2:	f020 0007 	bic.w	r0, r0, #7
 8024ab6:	1ac2      	subs	r2, r0, r3
 8024ab8:	d0cc      	beq.n	8024a54 <_malloc_r+0x20>
 8024aba:	1a1b      	subs	r3, r3, r0
 8024abc:	50a3      	str	r3, [r4, r2]
 8024abe:	e7c9      	b.n	8024a54 <_malloc_r+0x20>
 8024ac0:	4622      	mov	r2, r4
 8024ac2:	6864      	ldr	r4, [r4, #4]
 8024ac4:	e7cc      	b.n	8024a60 <_malloc_r+0x2c>
 8024ac6:	1cc4      	adds	r4, r0, #3
 8024ac8:	f024 0403 	bic.w	r4, r4, #3
 8024acc:	42a0      	cmp	r0, r4
 8024ace:	d0e3      	beq.n	8024a98 <_malloc_r+0x64>
 8024ad0:	1a21      	subs	r1, r4, r0
 8024ad2:	4630      	mov	r0, r6
 8024ad4:	f000 fb60 	bl	8025198 <_sbrk_r>
 8024ad8:	3001      	adds	r0, #1
 8024ada:	d1dd      	bne.n	8024a98 <_malloc_r+0x64>
 8024adc:	e7cf      	b.n	8024a7e <_malloc_r+0x4a>
 8024ade:	bf00      	nop
 8024ae0:	20020b8c 	.word	0x20020b8c
 8024ae4:	20020b90 	.word	0x20020b90

08024ae8 <__sfputc_r>:
 8024ae8:	6893      	ldr	r3, [r2, #8]
 8024aea:	3b01      	subs	r3, #1
 8024aec:	2b00      	cmp	r3, #0
 8024aee:	b410      	push	{r4}
 8024af0:	6093      	str	r3, [r2, #8]
 8024af2:	da08      	bge.n	8024b06 <__sfputc_r+0x1e>
 8024af4:	6994      	ldr	r4, [r2, #24]
 8024af6:	42a3      	cmp	r3, r4
 8024af8:	db01      	blt.n	8024afe <__sfputc_r+0x16>
 8024afa:	290a      	cmp	r1, #10
 8024afc:	d103      	bne.n	8024b06 <__sfputc_r+0x1e>
 8024afe:	f85d 4b04 	ldr.w	r4, [sp], #4
 8024b02:	f000 be19 	b.w	8025738 <__swbuf_r>
 8024b06:	6813      	ldr	r3, [r2, #0]
 8024b08:	1c58      	adds	r0, r3, #1
 8024b0a:	6010      	str	r0, [r2, #0]
 8024b0c:	7019      	strb	r1, [r3, #0]
 8024b0e:	4608      	mov	r0, r1
 8024b10:	f85d 4b04 	ldr.w	r4, [sp], #4
 8024b14:	4770      	bx	lr

08024b16 <__sfputs_r>:
 8024b16:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8024b18:	4606      	mov	r6, r0
 8024b1a:	460f      	mov	r7, r1
 8024b1c:	4614      	mov	r4, r2
 8024b1e:	18d5      	adds	r5, r2, r3
 8024b20:	42ac      	cmp	r4, r5
 8024b22:	d101      	bne.n	8024b28 <__sfputs_r+0x12>
 8024b24:	2000      	movs	r0, #0
 8024b26:	e007      	b.n	8024b38 <__sfputs_r+0x22>
 8024b28:	f814 1b01 	ldrb.w	r1, [r4], #1
 8024b2c:	463a      	mov	r2, r7
 8024b2e:	4630      	mov	r0, r6
 8024b30:	f7ff ffda 	bl	8024ae8 <__sfputc_r>
 8024b34:	1c43      	adds	r3, r0, #1
 8024b36:	d1f3      	bne.n	8024b20 <__sfputs_r+0xa>
 8024b38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08024b3c <_vfiprintf_r>:
 8024b3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024b40:	460d      	mov	r5, r1
 8024b42:	b09d      	sub	sp, #116	; 0x74
 8024b44:	4614      	mov	r4, r2
 8024b46:	4698      	mov	r8, r3
 8024b48:	4606      	mov	r6, r0
 8024b4a:	b118      	cbz	r0, 8024b54 <_vfiprintf_r+0x18>
 8024b4c:	6983      	ldr	r3, [r0, #24]
 8024b4e:	b90b      	cbnz	r3, 8024b54 <_vfiprintf_r+0x18>
 8024b50:	f7ff fd16 	bl	8024580 <__sinit>
 8024b54:	4b89      	ldr	r3, [pc, #548]	; (8024d7c <_vfiprintf_r+0x240>)
 8024b56:	429d      	cmp	r5, r3
 8024b58:	d11b      	bne.n	8024b92 <_vfiprintf_r+0x56>
 8024b5a:	6875      	ldr	r5, [r6, #4]
 8024b5c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8024b5e:	07d9      	lsls	r1, r3, #31
 8024b60:	d405      	bmi.n	8024b6e <_vfiprintf_r+0x32>
 8024b62:	89ab      	ldrh	r3, [r5, #12]
 8024b64:	059a      	lsls	r2, r3, #22
 8024b66:	d402      	bmi.n	8024b6e <_vfiprintf_r+0x32>
 8024b68:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8024b6a:	f7ff fee9 	bl	8024940 <__retarget_lock_acquire_recursive>
 8024b6e:	89ab      	ldrh	r3, [r5, #12]
 8024b70:	071b      	lsls	r3, r3, #28
 8024b72:	d501      	bpl.n	8024b78 <_vfiprintf_r+0x3c>
 8024b74:	692b      	ldr	r3, [r5, #16]
 8024b76:	b9eb      	cbnz	r3, 8024bb4 <_vfiprintf_r+0x78>
 8024b78:	4629      	mov	r1, r5
 8024b7a:	4630      	mov	r0, r6
 8024b7c:	f000 fe40 	bl	8025800 <__swsetup_r>
 8024b80:	b1c0      	cbz	r0, 8024bb4 <_vfiprintf_r+0x78>
 8024b82:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8024b84:	07dc      	lsls	r4, r3, #31
 8024b86:	d50e      	bpl.n	8024ba6 <_vfiprintf_r+0x6a>
 8024b88:	f04f 30ff 	mov.w	r0, #4294967295
 8024b8c:	b01d      	add	sp, #116	; 0x74
 8024b8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024b92:	4b7b      	ldr	r3, [pc, #492]	; (8024d80 <_vfiprintf_r+0x244>)
 8024b94:	429d      	cmp	r5, r3
 8024b96:	d101      	bne.n	8024b9c <_vfiprintf_r+0x60>
 8024b98:	68b5      	ldr	r5, [r6, #8]
 8024b9a:	e7df      	b.n	8024b5c <_vfiprintf_r+0x20>
 8024b9c:	4b79      	ldr	r3, [pc, #484]	; (8024d84 <_vfiprintf_r+0x248>)
 8024b9e:	429d      	cmp	r5, r3
 8024ba0:	bf08      	it	eq
 8024ba2:	68f5      	ldreq	r5, [r6, #12]
 8024ba4:	e7da      	b.n	8024b5c <_vfiprintf_r+0x20>
 8024ba6:	89ab      	ldrh	r3, [r5, #12]
 8024ba8:	0598      	lsls	r0, r3, #22
 8024baa:	d4ed      	bmi.n	8024b88 <_vfiprintf_r+0x4c>
 8024bac:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8024bae:	f7ff fec9 	bl	8024944 <__retarget_lock_release_recursive>
 8024bb2:	e7e9      	b.n	8024b88 <_vfiprintf_r+0x4c>
 8024bb4:	2300      	movs	r3, #0
 8024bb6:	9309      	str	r3, [sp, #36]	; 0x24
 8024bb8:	2320      	movs	r3, #32
 8024bba:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8024bbe:	f8cd 800c 	str.w	r8, [sp, #12]
 8024bc2:	2330      	movs	r3, #48	; 0x30
 8024bc4:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8024d88 <_vfiprintf_r+0x24c>
 8024bc8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8024bcc:	f04f 0901 	mov.w	r9, #1
 8024bd0:	4623      	mov	r3, r4
 8024bd2:	469a      	mov	sl, r3
 8024bd4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8024bd8:	b10a      	cbz	r2, 8024bde <_vfiprintf_r+0xa2>
 8024bda:	2a25      	cmp	r2, #37	; 0x25
 8024bdc:	d1f9      	bne.n	8024bd2 <_vfiprintf_r+0x96>
 8024bde:	ebba 0b04 	subs.w	fp, sl, r4
 8024be2:	d00b      	beq.n	8024bfc <_vfiprintf_r+0xc0>
 8024be4:	465b      	mov	r3, fp
 8024be6:	4622      	mov	r2, r4
 8024be8:	4629      	mov	r1, r5
 8024bea:	4630      	mov	r0, r6
 8024bec:	f7ff ff93 	bl	8024b16 <__sfputs_r>
 8024bf0:	3001      	adds	r0, #1
 8024bf2:	f000 80aa 	beq.w	8024d4a <_vfiprintf_r+0x20e>
 8024bf6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024bf8:	445a      	add	r2, fp
 8024bfa:	9209      	str	r2, [sp, #36]	; 0x24
 8024bfc:	f89a 3000 	ldrb.w	r3, [sl]
 8024c00:	2b00      	cmp	r3, #0
 8024c02:	f000 80a2 	beq.w	8024d4a <_vfiprintf_r+0x20e>
 8024c06:	2300      	movs	r3, #0
 8024c08:	f04f 32ff 	mov.w	r2, #4294967295
 8024c0c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8024c10:	f10a 0a01 	add.w	sl, sl, #1
 8024c14:	9304      	str	r3, [sp, #16]
 8024c16:	9307      	str	r3, [sp, #28]
 8024c18:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8024c1c:	931a      	str	r3, [sp, #104]	; 0x68
 8024c1e:	4654      	mov	r4, sl
 8024c20:	2205      	movs	r2, #5
 8024c22:	f814 1b01 	ldrb.w	r1, [r4], #1
 8024c26:	4858      	ldr	r0, [pc, #352]	; (8024d88 <_vfiprintf_r+0x24c>)
 8024c28:	f7db faea 	bl	8000200 <memchr>
 8024c2c:	9a04      	ldr	r2, [sp, #16]
 8024c2e:	b9d8      	cbnz	r0, 8024c68 <_vfiprintf_r+0x12c>
 8024c30:	06d1      	lsls	r1, r2, #27
 8024c32:	bf44      	itt	mi
 8024c34:	2320      	movmi	r3, #32
 8024c36:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8024c3a:	0713      	lsls	r3, r2, #28
 8024c3c:	bf44      	itt	mi
 8024c3e:	232b      	movmi	r3, #43	; 0x2b
 8024c40:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8024c44:	f89a 3000 	ldrb.w	r3, [sl]
 8024c48:	2b2a      	cmp	r3, #42	; 0x2a
 8024c4a:	d015      	beq.n	8024c78 <_vfiprintf_r+0x13c>
 8024c4c:	9a07      	ldr	r2, [sp, #28]
 8024c4e:	4654      	mov	r4, sl
 8024c50:	2000      	movs	r0, #0
 8024c52:	f04f 0c0a 	mov.w	ip, #10
 8024c56:	4621      	mov	r1, r4
 8024c58:	f811 3b01 	ldrb.w	r3, [r1], #1
 8024c5c:	3b30      	subs	r3, #48	; 0x30
 8024c5e:	2b09      	cmp	r3, #9
 8024c60:	d94e      	bls.n	8024d00 <_vfiprintf_r+0x1c4>
 8024c62:	b1b0      	cbz	r0, 8024c92 <_vfiprintf_r+0x156>
 8024c64:	9207      	str	r2, [sp, #28]
 8024c66:	e014      	b.n	8024c92 <_vfiprintf_r+0x156>
 8024c68:	eba0 0308 	sub.w	r3, r0, r8
 8024c6c:	fa09 f303 	lsl.w	r3, r9, r3
 8024c70:	4313      	orrs	r3, r2
 8024c72:	9304      	str	r3, [sp, #16]
 8024c74:	46a2      	mov	sl, r4
 8024c76:	e7d2      	b.n	8024c1e <_vfiprintf_r+0xe2>
 8024c78:	9b03      	ldr	r3, [sp, #12]
 8024c7a:	1d19      	adds	r1, r3, #4
 8024c7c:	681b      	ldr	r3, [r3, #0]
 8024c7e:	9103      	str	r1, [sp, #12]
 8024c80:	2b00      	cmp	r3, #0
 8024c82:	bfbb      	ittet	lt
 8024c84:	425b      	neglt	r3, r3
 8024c86:	f042 0202 	orrlt.w	r2, r2, #2
 8024c8a:	9307      	strge	r3, [sp, #28]
 8024c8c:	9307      	strlt	r3, [sp, #28]
 8024c8e:	bfb8      	it	lt
 8024c90:	9204      	strlt	r2, [sp, #16]
 8024c92:	7823      	ldrb	r3, [r4, #0]
 8024c94:	2b2e      	cmp	r3, #46	; 0x2e
 8024c96:	d10c      	bne.n	8024cb2 <_vfiprintf_r+0x176>
 8024c98:	7863      	ldrb	r3, [r4, #1]
 8024c9a:	2b2a      	cmp	r3, #42	; 0x2a
 8024c9c:	d135      	bne.n	8024d0a <_vfiprintf_r+0x1ce>
 8024c9e:	9b03      	ldr	r3, [sp, #12]
 8024ca0:	1d1a      	adds	r2, r3, #4
 8024ca2:	681b      	ldr	r3, [r3, #0]
 8024ca4:	9203      	str	r2, [sp, #12]
 8024ca6:	2b00      	cmp	r3, #0
 8024ca8:	bfb8      	it	lt
 8024caa:	f04f 33ff 	movlt.w	r3, #4294967295
 8024cae:	3402      	adds	r4, #2
 8024cb0:	9305      	str	r3, [sp, #20]
 8024cb2:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8024d98 <_vfiprintf_r+0x25c>
 8024cb6:	7821      	ldrb	r1, [r4, #0]
 8024cb8:	2203      	movs	r2, #3
 8024cba:	4650      	mov	r0, sl
 8024cbc:	f7db faa0 	bl	8000200 <memchr>
 8024cc0:	b140      	cbz	r0, 8024cd4 <_vfiprintf_r+0x198>
 8024cc2:	2340      	movs	r3, #64	; 0x40
 8024cc4:	eba0 000a 	sub.w	r0, r0, sl
 8024cc8:	fa03 f000 	lsl.w	r0, r3, r0
 8024ccc:	9b04      	ldr	r3, [sp, #16]
 8024cce:	4303      	orrs	r3, r0
 8024cd0:	3401      	adds	r4, #1
 8024cd2:	9304      	str	r3, [sp, #16]
 8024cd4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8024cd8:	482c      	ldr	r0, [pc, #176]	; (8024d8c <_vfiprintf_r+0x250>)
 8024cda:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8024cde:	2206      	movs	r2, #6
 8024ce0:	f7db fa8e 	bl	8000200 <memchr>
 8024ce4:	2800      	cmp	r0, #0
 8024ce6:	d03f      	beq.n	8024d68 <_vfiprintf_r+0x22c>
 8024ce8:	4b29      	ldr	r3, [pc, #164]	; (8024d90 <_vfiprintf_r+0x254>)
 8024cea:	bb1b      	cbnz	r3, 8024d34 <_vfiprintf_r+0x1f8>
 8024cec:	9b03      	ldr	r3, [sp, #12]
 8024cee:	3307      	adds	r3, #7
 8024cf0:	f023 0307 	bic.w	r3, r3, #7
 8024cf4:	3308      	adds	r3, #8
 8024cf6:	9303      	str	r3, [sp, #12]
 8024cf8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024cfa:	443b      	add	r3, r7
 8024cfc:	9309      	str	r3, [sp, #36]	; 0x24
 8024cfe:	e767      	b.n	8024bd0 <_vfiprintf_r+0x94>
 8024d00:	fb0c 3202 	mla	r2, ip, r2, r3
 8024d04:	460c      	mov	r4, r1
 8024d06:	2001      	movs	r0, #1
 8024d08:	e7a5      	b.n	8024c56 <_vfiprintf_r+0x11a>
 8024d0a:	2300      	movs	r3, #0
 8024d0c:	3401      	adds	r4, #1
 8024d0e:	9305      	str	r3, [sp, #20]
 8024d10:	4619      	mov	r1, r3
 8024d12:	f04f 0c0a 	mov.w	ip, #10
 8024d16:	4620      	mov	r0, r4
 8024d18:	f810 2b01 	ldrb.w	r2, [r0], #1
 8024d1c:	3a30      	subs	r2, #48	; 0x30
 8024d1e:	2a09      	cmp	r2, #9
 8024d20:	d903      	bls.n	8024d2a <_vfiprintf_r+0x1ee>
 8024d22:	2b00      	cmp	r3, #0
 8024d24:	d0c5      	beq.n	8024cb2 <_vfiprintf_r+0x176>
 8024d26:	9105      	str	r1, [sp, #20]
 8024d28:	e7c3      	b.n	8024cb2 <_vfiprintf_r+0x176>
 8024d2a:	fb0c 2101 	mla	r1, ip, r1, r2
 8024d2e:	4604      	mov	r4, r0
 8024d30:	2301      	movs	r3, #1
 8024d32:	e7f0      	b.n	8024d16 <_vfiprintf_r+0x1da>
 8024d34:	ab03      	add	r3, sp, #12
 8024d36:	9300      	str	r3, [sp, #0]
 8024d38:	462a      	mov	r2, r5
 8024d3a:	4b16      	ldr	r3, [pc, #88]	; (8024d94 <_vfiprintf_r+0x258>)
 8024d3c:	a904      	add	r1, sp, #16
 8024d3e:	4630      	mov	r0, r6
 8024d40:	f3af 8000 	nop.w
 8024d44:	4607      	mov	r7, r0
 8024d46:	1c78      	adds	r0, r7, #1
 8024d48:	d1d6      	bne.n	8024cf8 <_vfiprintf_r+0x1bc>
 8024d4a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8024d4c:	07d9      	lsls	r1, r3, #31
 8024d4e:	d405      	bmi.n	8024d5c <_vfiprintf_r+0x220>
 8024d50:	89ab      	ldrh	r3, [r5, #12]
 8024d52:	059a      	lsls	r2, r3, #22
 8024d54:	d402      	bmi.n	8024d5c <_vfiprintf_r+0x220>
 8024d56:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8024d58:	f7ff fdf4 	bl	8024944 <__retarget_lock_release_recursive>
 8024d5c:	89ab      	ldrh	r3, [r5, #12]
 8024d5e:	065b      	lsls	r3, r3, #25
 8024d60:	f53f af12 	bmi.w	8024b88 <_vfiprintf_r+0x4c>
 8024d64:	9809      	ldr	r0, [sp, #36]	; 0x24
 8024d66:	e711      	b.n	8024b8c <_vfiprintf_r+0x50>
 8024d68:	ab03      	add	r3, sp, #12
 8024d6a:	9300      	str	r3, [sp, #0]
 8024d6c:	462a      	mov	r2, r5
 8024d6e:	4b09      	ldr	r3, [pc, #36]	; (8024d94 <_vfiprintf_r+0x258>)
 8024d70:	a904      	add	r1, sp, #16
 8024d72:	4630      	mov	r0, r6
 8024d74:	f000 f880 	bl	8024e78 <_printf_i>
 8024d78:	e7e4      	b.n	8024d44 <_vfiprintf_r+0x208>
 8024d7a:	bf00      	nop
 8024d7c:	0802b71c 	.word	0x0802b71c
 8024d80:	0802b73c 	.word	0x0802b73c
 8024d84:	0802b6fc 	.word	0x0802b6fc
 8024d88:	0802b7c0 	.word	0x0802b7c0
 8024d8c:	0802b7ca 	.word	0x0802b7ca
 8024d90:	00000000 	.word	0x00000000
 8024d94:	08024b17 	.word	0x08024b17
 8024d98:	0802b7c6 	.word	0x0802b7c6

08024d9c <_printf_common>:
 8024d9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024da0:	4616      	mov	r6, r2
 8024da2:	4699      	mov	r9, r3
 8024da4:	688a      	ldr	r2, [r1, #8]
 8024da6:	690b      	ldr	r3, [r1, #16]
 8024da8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8024dac:	4293      	cmp	r3, r2
 8024dae:	bfb8      	it	lt
 8024db0:	4613      	movlt	r3, r2
 8024db2:	6033      	str	r3, [r6, #0]
 8024db4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8024db8:	4607      	mov	r7, r0
 8024dba:	460c      	mov	r4, r1
 8024dbc:	b10a      	cbz	r2, 8024dc2 <_printf_common+0x26>
 8024dbe:	3301      	adds	r3, #1
 8024dc0:	6033      	str	r3, [r6, #0]
 8024dc2:	6823      	ldr	r3, [r4, #0]
 8024dc4:	0699      	lsls	r1, r3, #26
 8024dc6:	bf42      	ittt	mi
 8024dc8:	6833      	ldrmi	r3, [r6, #0]
 8024dca:	3302      	addmi	r3, #2
 8024dcc:	6033      	strmi	r3, [r6, #0]
 8024dce:	6825      	ldr	r5, [r4, #0]
 8024dd0:	f015 0506 	ands.w	r5, r5, #6
 8024dd4:	d106      	bne.n	8024de4 <_printf_common+0x48>
 8024dd6:	f104 0a19 	add.w	sl, r4, #25
 8024dda:	68e3      	ldr	r3, [r4, #12]
 8024ddc:	6832      	ldr	r2, [r6, #0]
 8024dde:	1a9b      	subs	r3, r3, r2
 8024de0:	42ab      	cmp	r3, r5
 8024de2:	dc26      	bgt.n	8024e32 <_printf_common+0x96>
 8024de4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8024de8:	1e13      	subs	r3, r2, #0
 8024dea:	6822      	ldr	r2, [r4, #0]
 8024dec:	bf18      	it	ne
 8024dee:	2301      	movne	r3, #1
 8024df0:	0692      	lsls	r2, r2, #26
 8024df2:	d42b      	bmi.n	8024e4c <_printf_common+0xb0>
 8024df4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8024df8:	4649      	mov	r1, r9
 8024dfa:	4638      	mov	r0, r7
 8024dfc:	47c0      	blx	r8
 8024dfe:	3001      	adds	r0, #1
 8024e00:	d01e      	beq.n	8024e40 <_printf_common+0xa4>
 8024e02:	6823      	ldr	r3, [r4, #0]
 8024e04:	68e5      	ldr	r5, [r4, #12]
 8024e06:	6832      	ldr	r2, [r6, #0]
 8024e08:	f003 0306 	and.w	r3, r3, #6
 8024e0c:	2b04      	cmp	r3, #4
 8024e0e:	bf08      	it	eq
 8024e10:	1aad      	subeq	r5, r5, r2
 8024e12:	68a3      	ldr	r3, [r4, #8]
 8024e14:	6922      	ldr	r2, [r4, #16]
 8024e16:	bf0c      	ite	eq
 8024e18:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8024e1c:	2500      	movne	r5, #0
 8024e1e:	4293      	cmp	r3, r2
 8024e20:	bfc4      	itt	gt
 8024e22:	1a9b      	subgt	r3, r3, r2
 8024e24:	18ed      	addgt	r5, r5, r3
 8024e26:	2600      	movs	r6, #0
 8024e28:	341a      	adds	r4, #26
 8024e2a:	42b5      	cmp	r5, r6
 8024e2c:	d11a      	bne.n	8024e64 <_printf_common+0xc8>
 8024e2e:	2000      	movs	r0, #0
 8024e30:	e008      	b.n	8024e44 <_printf_common+0xa8>
 8024e32:	2301      	movs	r3, #1
 8024e34:	4652      	mov	r2, sl
 8024e36:	4649      	mov	r1, r9
 8024e38:	4638      	mov	r0, r7
 8024e3a:	47c0      	blx	r8
 8024e3c:	3001      	adds	r0, #1
 8024e3e:	d103      	bne.n	8024e48 <_printf_common+0xac>
 8024e40:	f04f 30ff 	mov.w	r0, #4294967295
 8024e44:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024e48:	3501      	adds	r5, #1
 8024e4a:	e7c6      	b.n	8024dda <_printf_common+0x3e>
 8024e4c:	18e1      	adds	r1, r4, r3
 8024e4e:	1c5a      	adds	r2, r3, #1
 8024e50:	2030      	movs	r0, #48	; 0x30
 8024e52:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8024e56:	4422      	add	r2, r4
 8024e58:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8024e5c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8024e60:	3302      	adds	r3, #2
 8024e62:	e7c7      	b.n	8024df4 <_printf_common+0x58>
 8024e64:	2301      	movs	r3, #1
 8024e66:	4622      	mov	r2, r4
 8024e68:	4649      	mov	r1, r9
 8024e6a:	4638      	mov	r0, r7
 8024e6c:	47c0      	blx	r8
 8024e6e:	3001      	adds	r0, #1
 8024e70:	d0e6      	beq.n	8024e40 <_printf_common+0xa4>
 8024e72:	3601      	adds	r6, #1
 8024e74:	e7d9      	b.n	8024e2a <_printf_common+0x8e>
	...

08024e78 <_printf_i>:
 8024e78:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8024e7c:	460c      	mov	r4, r1
 8024e7e:	4691      	mov	r9, r2
 8024e80:	7e27      	ldrb	r7, [r4, #24]
 8024e82:	990c      	ldr	r1, [sp, #48]	; 0x30
 8024e84:	2f78      	cmp	r7, #120	; 0x78
 8024e86:	4680      	mov	r8, r0
 8024e88:	469a      	mov	sl, r3
 8024e8a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8024e8e:	d807      	bhi.n	8024ea0 <_printf_i+0x28>
 8024e90:	2f62      	cmp	r7, #98	; 0x62
 8024e92:	d80a      	bhi.n	8024eaa <_printf_i+0x32>
 8024e94:	2f00      	cmp	r7, #0
 8024e96:	f000 80d8 	beq.w	802504a <_printf_i+0x1d2>
 8024e9a:	2f58      	cmp	r7, #88	; 0x58
 8024e9c:	f000 80a3 	beq.w	8024fe6 <_printf_i+0x16e>
 8024ea0:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8024ea4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8024ea8:	e03a      	b.n	8024f20 <_printf_i+0xa8>
 8024eaa:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8024eae:	2b15      	cmp	r3, #21
 8024eb0:	d8f6      	bhi.n	8024ea0 <_printf_i+0x28>
 8024eb2:	a001      	add	r0, pc, #4	; (adr r0, 8024eb8 <_printf_i+0x40>)
 8024eb4:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8024eb8:	08024f11 	.word	0x08024f11
 8024ebc:	08024f25 	.word	0x08024f25
 8024ec0:	08024ea1 	.word	0x08024ea1
 8024ec4:	08024ea1 	.word	0x08024ea1
 8024ec8:	08024ea1 	.word	0x08024ea1
 8024ecc:	08024ea1 	.word	0x08024ea1
 8024ed0:	08024f25 	.word	0x08024f25
 8024ed4:	08024ea1 	.word	0x08024ea1
 8024ed8:	08024ea1 	.word	0x08024ea1
 8024edc:	08024ea1 	.word	0x08024ea1
 8024ee0:	08024ea1 	.word	0x08024ea1
 8024ee4:	08025031 	.word	0x08025031
 8024ee8:	08024f55 	.word	0x08024f55
 8024eec:	08025013 	.word	0x08025013
 8024ef0:	08024ea1 	.word	0x08024ea1
 8024ef4:	08024ea1 	.word	0x08024ea1
 8024ef8:	08025053 	.word	0x08025053
 8024efc:	08024ea1 	.word	0x08024ea1
 8024f00:	08024f55 	.word	0x08024f55
 8024f04:	08024ea1 	.word	0x08024ea1
 8024f08:	08024ea1 	.word	0x08024ea1
 8024f0c:	0802501b 	.word	0x0802501b
 8024f10:	680b      	ldr	r3, [r1, #0]
 8024f12:	1d1a      	adds	r2, r3, #4
 8024f14:	681b      	ldr	r3, [r3, #0]
 8024f16:	600a      	str	r2, [r1, #0]
 8024f18:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8024f1c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8024f20:	2301      	movs	r3, #1
 8024f22:	e0a3      	b.n	802506c <_printf_i+0x1f4>
 8024f24:	6825      	ldr	r5, [r4, #0]
 8024f26:	6808      	ldr	r0, [r1, #0]
 8024f28:	062e      	lsls	r6, r5, #24
 8024f2a:	f100 0304 	add.w	r3, r0, #4
 8024f2e:	d50a      	bpl.n	8024f46 <_printf_i+0xce>
 8024f30:	6805      	ldr	r5, [r0, #0]
 8024f32:	600b      	str	r3, [r1, #0]
 8024f34:	2d00      	cmp	r5, #0
 8024f36:	da03      	bge.n	8024f40 <_printf_i+0xc8>
 8024f38:	232d      	movs	r3, #45	; 0x2d
 8024f3a:	426d      	negs	r5, r5
 8024f3c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8024f40:	485e      	ldr	r0, [pc, #376]	; (80250bc <_printf_i+0x244>)
 8024f42:	230a      	movs	r3, #10
 8024f44:	e019      	b.n	8024f7a <_printf_i+0x102>
 8024f46:	f015 0f40 	tst.w	r5, #64	; 0x40
 8024f4a:	6805      	ldr	r5, [r0, #0]
 8024f4c:	600b      	str	r3, [r1, #0]
 8024f4e:	bf18      	it	ne
 8024f50:	b22d      	sxthne	r5, r5
 8024f52:	e7ef      	b.n	8024f34 <_printf_i+0xbc>
 8024f54:	680b      	ldr	r3, [r1, #0]
 8024f56:	6825      	ldr	r5, [r4, #0]
 8024f58:	1d18      	adds	r0, r3, #4
 8024f5a:	6008      	str	r0, [r1, #0]
 8024f5c:	0628      	lsls	r0, r5, #24
 8024f5e:	d501      	bpl.n	8024f64 <_printf_i+0xec>
 8024f60:	681d      	ldr	r5, [r3, #0]
 8024f62:	e002      	b.n	8024f6a <_printf_i+0xf2>
 8024f64:	0669      	lsls	r1, r5, #25
 8024f66:	d5fb      	bpl.n	8024f60 <_printf_i+0xe8>
 8024f68:	881d      	ldrh	r5, [r3, #0]
 8024f6a:	4854      	ldr	r0, [pc, #336]	; (80250bc <_printf_i+0x244>)
 8024f6c:	2f6f      	cmp	r7, #111	; 0x6f
 8024f6e:	bf0c      	ite	eq
 8024f70:	2308      	moveq	r3, #8
 8024f72:	230a      	movne	r3, #10
 8024f74:	2100      	movs	r1, #0
 8024f76:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8024f7a:	6866      	ldr	r6, [r4, #4]
 8024f7c:	60a6      	str	r6, [r4, #8]
 8024f7e:	2e00      	cmp	r6, #0
 8024f80:	bfa2      	ittt	ge
 8024f82:	6821      	ldrge	r1, [r4, #0]
 8024f84:	f021 0104 	bicge.w	r1, r1, #4
 8024f88:	6021      	strge	r1, [r4, #0]
 8024f8a:	b90d      	cbnz	r5, 8024f90 <_printf_i+0x118>
 8024f8c:	2e00      	cmp	r6, #0
 8024f8e:	d04d      	beq.n	802502c <_printf_i+0x1b4>
 8024f90:	4616      	mov	r6, r2
 8024f92:	fbb5 f1f3 	udiv	r1, r5, r3
 8024f96:	fb03 5711 	mls	r7, r3, r1, r5
 8024f9a:	5dc7      	ldrb	r7, [r0, r7]
 8024f9c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8024fa0:	462f      	mov	r7, r5
 8024fa2:	42bb      	cmp	r3, r7
 8024fa4:	460d      	mov	r5, r1
 8024fa6:	d9f4      	bls.n	8024f92 <_printf_i+0x11a>
 8024fa8:	2b08      	cmp	r3, #8
 8024faa:	d10b      	bne.n	8024fc4 <_printf_i+0x14c>
 8024fac:	6823      	ldr	r3, [r4, #0]
 8024fae:	07df      	lsls	r7, r3, #31
 8024fb0:	d508      	bpl.n	8024fc4 <_printf_i+0x14c>
 8024fb2:	6923      	ldr	r3, [r4, #16]
 8024fb4:	6861      	ldr	r1, [r4, #4]
 8024fb6:	4299      	cmp	r1, r3
 8024fb8:	bfde      	ittt	le
 8024fba:	2330      	movle	r3, #48	; 0x30
 8024fbc:	f806 3c01 	strble.w	r3, [r6, #-1]
 8024fc0:	f106 36ff 	addle.w	r6, r6, #4294967295
 8024fc4:	1b92      	subs	r2, r2, r6
 8024fc6:	6122      	str	r2, [r4, #16]
 8024fc8:	f8cd a000 	str.w	sl, [sp]
 8024fcc:	464b      	mov	r3, r9
 8024fce:	aa03      	add	r2, sp, #12
 8024fd0:	4621      	mov	r1, r4
 8024fd2:	4640      	mov	r0, r8
 8024fd4:	f7ff fee2 	bl	8024d9c <_printf_common>
 8024fd8:	3001      	adds	r0, #1
 8024fda:	d14c      	bne.n	8025076 <_printf_i+0x1fe>
 8024fdc:	f04f 30ff 	mov.w	r0, #4294967295
 8024fe0:	b004      	add	sp, #16
 8024fe2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024fe6:	4835      	ldr	r0, [pc, #212]	; (80250bc <_printf_i+0x244>)
 8024fe8:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8024fec:	6823      	ldr	r3, [r4, #0]
 8024fee:	680e      	ldr	r6, [r1, #0]
 8024ff0:	061f      	lsls	r7, r3, #24
 8024ff2:	f856 5b04 	ldr.w	r5, [r6], #4
 8024ff6:	600e      	str	r6, [r1, #0]
 8024ff8:	d514      	bpl.n	8025024 <_printf_i+0x1ac>
 8024ffa:	07d9      	lsls	r1, r3, #31
 8024ffc:	bf44      	itt	mi
 8024ffe:	f043 0320 	orrmi.w	r3, r3, #32
 8025002:	6023      	strmi	r3, [r4, #0]
 8025004:	b91d      	cbnz	r5, 802500e <_printf_i+0x196>
 8025006:	6823      	ldr	r3, [r4, #0]
 8025008:	f023 0320 	bic.w	r3, r3, #32
 802500c:	6023      	str	r3, [r4, #0]
 802500e:	2310      	movs	r3, #16
 8025010:	e7b0      	b.n	8024f74 <_printf_i+0xfc>
 8025012:	6823      	ldr	r3, [r4, #0]
 8025014:	f043 0320 	orr.w	r3, r3, #32
 8025018:	6023      	str	r3, [r4, #0]
 802501a:	2378      	movs	r3, #120	; 0x78
 802501c:	4828      	ldr	r0, [pc, #160]	; (80250c0 <_printf_i+0x248>)
 802501e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8025022:	e7e3      	b.n	8024fec <_printf_i+0x174>
 8025024:	065e      	lsls	r6, r3, #25
 8025026:	bf48      	it	mi
 8025028:	b2ad      	uxthmi	r5, r5
 802502a:	e7e6      	b.n	8024ffa <_printf_i+0x182>
 802502c:	4616      	mov	r6, r2
 802502e:	e7bb      	b.n	8024fa8 <_printf_i+0x130>
 8025030:	680b      	ldr	r3, [r1, #0]
 8025032:	6826      	ldr	r6, [r4, #0]
 8025034:	6960      	ldr	r0, [r4, #20]
 8025036:	1d1d      	adds	r5, r3, #4
 8025038:	600d      	str	r5, [r1, #0]
 802503a:	0635      	lsls	r5, r6, #24
 802503c:	681b      	ldr	r3, [r3, #0]
 802503e:	d501      	bpl.n	8025044 <_printf_i+0x1cc>
 8025040:	6018      	str	r0, [r3, #0]
 8025042:	e002      	b.n	802504a <_printf_i+0x1d2>
 8025044:	0671      	lsls	r1, r6, #25
 8025046:	d5fb      	bpl.n	8025040 <_printf_i+0x1c8>
 8025048:	8018      	strh	r0, [r3, #0]
 802504a:	2300      	movs	r3, #0
 802504c:	6123      	str	r3, [r4, #16]
 802504e:	4616      	mov	r6, r2
 8025050:	e7ba      	b.n	8024fc8 <_printf_i+0x150>
 8025052:	680b      	ldr	r3, [r1, #0]
 8025054:	1d1a      	adds	r2, r3, #4
 8025056:	600a      	str	r2, [r1, #0]
 8025058:	681e      	ldr	r6, [r3, #0]
 802505a:	6862      	ldr	r2, [r4, #4]
 802505c:	2100      	movs	r1, #0
 802505e:	4630      	mov	r0, r6
 8025060:	f7db f8ce 	bl	8000200 <memchr>
 8025064:	b108      	cbz	r0, 802506a <_printf_i+0x1f2>
 8025066:	1b80      	subs	r0, r0, r6
 8025068:	6060      	str	r0, [r4, #4]
 802506a:	6863      	ldr	r3, [r4, #4]
 802506c:	6123      	str	r3, [r4, #16]
 802506e:	2300      	movs	r3, #0
 8025070:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8025074:	e7a8      	b.n	8024fc8 <_printf_i+0x150>
 8025076:	6923      	ldr	r3, [r4, #16]
 8025078:	4632      	mov	r2, r6
 802507a:	4649      	mov	r1, r9
 802507c:	4640      	mov	r0, r8
 802507e:	47d0      	blx	sl
 8025080:	3001      	adds	r0, #1
 8025082:	d0ab      	beq.n	8024fdc <_printf_i+0x164>
 8025084:	6823      	ldr	r3, [r4, #0]
 8025086:	079b      	lsls	r3, r3, #30
 8025088:	d413      	bmi.n	80250b2 <_printf_i+0x23a>
 802508a:	68e0      	ldr	r0, [r4, #12]
 802508c:	9b03      	ldr	r3, [sp, #12]
 802508e:	4298      	cmp	r0, r3
 8025090:	bfb8      	it	lt
 8025092:	4618      	movlt	r0, r3
 8025094:	e7a4      	b.n	8024fe0 <_printf_i+0x168>
 8025096:	2301      	movs	r3, #1
 8025098:	4632      	mov	r2, r6
 802509a:	4649      	mov	r1, r9
 802509c:	4640      	mov	r0, r8
 802509e:	47d0      	blx	sl
 80250a0:	3001      	adds	r0, #1
 80250a2:	d09b      	beq.n	8024fdc <_printf_i+0x164>
 80250a4:	3501      	adds	r5, #1
 80250a6:	68e3      	ldr	r3, [r4, #12]
 80250a8:	9903      	ldr	r1, [sp, #12]
 80250aa:	1a5b      	subs	r3, r3, r1
 80250ac:	42ab      	cmp	r3, r5
 80250ae:	dcf2      	bgt.n	8025096 <_printf_i+0x21e>
 80250b0:	e7eb      	b.n	802508a <_printf_i+0x212>
 80250b2:	2500      	movs	r5, #0
 80250b4:	f104 0619 	add.w	r6, r4, #25
 80250b8:	e7f5      	b.n	80250a6 <_printf_i+0x22e>
 80250ba:	bf00      	nop
 80250bc:	0802b7d1 	.word	0x0802b7d1
 80250c0:	0802b7e2 	.word	0x0802b7e2

080250c4 <cleanup_glue>:
 80250c4:	b538      	push	{r3, r4, r5, lr}
 80250c6:	460c      	mov	r4, r1
 80250c8:	6809      	ldr	r1, [r1, #0]
 80250ca:	4605      	mov	r5, r0
 80250cc:	b109      	cbz	r1, 80250d2 <cleanup_glue+0xe>
 80250ce:	f7ff fff9 	bl	80250c4 <cleanup_glue>
 80250d2:	4621      	mov	r1, r4
 80250d4:	4628      	mov	r0, r5
 80250d6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80250da:	f7ff bc5b 	b.w	8024994 <_free_r>
	...

080250e0 <_reclaim_reent>:
 80250e0:	4b2c      	ldr	r3, [pc, #176]	; (8025194 <_reclaim_reent+0xb4>)
 80250e2:	681b      	ldr	r3, [r3, #0]
 80250e4:	4283      	cmp	r3, r0
 80250e6:	b570      	push	{r4, r5, r6, lr}
 80250e8:	4604      	mov	r4, r0
 80250ea:	d051      	beq.n	8025190 <_reclaim_reent+0xb0>
 80250ec:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80250ee:	b143      	cbz	r3, 8025102 <_reclaim_reent+0x22>
 80250f0:	68db      	ldr	r3, [r3, #12]
 80250f2:	2b00      	cmp	r3, #0
 80250f4:	d14a      	bne.n	802518c <_reclaim_reent+0xac>
 80250f6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80250f8:	6819      	ldr	r1, [r3, #0]
 80250fa:	b111      	cbz	r1, 8025102 <_reclaim_reent+0x22>
 80250fc:	4620      	mov	r0, r4
 80250fe:	f7ff fc49 	bl	8024994 <_free_r>
 8025102:	6961      	ldr	r1, [r4, #20]
 8025104:	b111      	cbz	r1, 802510c <_reclaim_reent+0x2c>
 8025106:	4620      	mov	r0, r4
 8025108:	f7ff fc44 	bl	8024994 <_free_r>
 802510c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 802510e:	b111      	cbz	r1, 8025116 <_reclaim_reent+0x36>
 8025110:	4620      	mov	r0, r4
 8025112:	f7ff fc3f 	bl	8024994 <_free_r>
 8025116:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8025118:	b111      	cbz	r1, 8025120 <_reclaim_reent+0x40>
 802511a:	4620      	mov	r0, r4
 802511c:	f7ff fc3a 	bl	8024994 <_free_r>
 8025120:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8025122:	b111      	cbz	r1, 802512a <_reclaim_reent+0x4a>
 8025124:	4620      	mov	r0, r4
 8025126:	f7ff fc35 	bl	8024994 <_free_r>
 802512a:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802512c:	b111      	cbz	r1, 8025134 <_reclaim_reent+0x54>
 802512e:	4620      	mov	r0, r4
 8025130:	f7ff fc30 	bl	8024994 <_free_r>
 8025134:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8025136:	b111      	cbz	r1, 802513e <_reclaim_reent+0x5e>
 8025138:	4620      	mov	r0, r4
 802513a:	f7ff fc2b 	bl	8024994 <_free_r>
 802513e:	6da1      	ldr	r1, [r4, #88]	; 0x58
 8025140:	b111      	cbz	r1, 8025148 <_reclaim_reent+0x68>
 8025142:	4620      	mov	r0, r4
 8025144:	f7ff fc26 	bl	8024994 <_free_r>
 8025148:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802514a:	b111      	cbz	r1, 8025152 <_reclaim_reent+0x72>
 802514c:	4620      	mov	r0, r4
 802514e:	f7ff fc21 	bl	8024994 <_free_r>
 8025152:	69a3      	ldr	r3, [r4, #24]
 8025154:	b1e3      	cbz	r3, 8025190 <_reclaim_reent+0xb0>
 8025156:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8025158:	4620      	mov	r0, r4
 802515a:	4798      	blx	r3
 802515c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802515e:	b1b9      	cbz	r1, 8025190 <_reclaim_reent+0xb0>
 8025160:	4620      	mov	r0, r4
 8025162:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8025166:	f7ff bfad 	b.w	80250c4 <cleanup_glue>
 802516a:	5949      	ldr	r1, [r1, r5]
 802516c:	b941      	cbnz	r1, 8025180 <_reclaim_reent+0xa0>
 802516e:	3504      	adds	r5, #4
 8025170:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8025172:	2d80      	cmp	r5, #128	; 0x80
 8025174:	68d9      	ldr	r1, [r3, #12]
 8025176:	d1f8      	bne.n	802516a <_reclaim_reent+0x8a>
 8025178:	4620      	mov	r0, r4
 802517a:	f7ff fc0b 	bl	8024994 <_free_r>
 802517e:	e7ba      	b.n	80250f6 <_reclaim_reent+0x16>
 8025180:	680e      	ldr	r6, [r1, #0]
 8025182:	4620      	mov	r0, r4
 8025184:	f7ff fc06 	bl	8024994 <_free_r>
 8025188:	4631      	mov	r1, r6
 802518a:	e7ef      	b.n	802516c <_reclaim_reent+0x8c>
 802518c:	2500      	movs	r5, #0
 802518e:	e7ef      	b.n	8025170 <_reclaim_reent+0x90>
 8025190:	bd70      	pop	{r4, r5, r6, pc}
 8025192:	bf00      	nop
 8025194:	200000dc 	.word	0x200000dc

08025198 <_sbrk_r>:
 8025198:	b538      	push	{r3, r4, r5, lr}
 802519a:	4d06      	ldr	r5, [pc, #24]	; (80251b4 <_sbrk_r+0x1c>)
 802519c:	2300      	movs	r3, #0
 802519e:	4604      	mov	r4, r0
 80251a0:	4608      	mov	r0, r1
 80251a2:	602b      	str	r3, [r5, #0]
 80251a4:	f7dc feee 	bl	8001f84 <_sbrk>
 80251a8:	1c43      	adds	r3, r0, #1
 80251aa:	d102      	bne.n	80251b2 <_sbrk_r+0x1a>
 80251ac:	682b      	ldr	r3, [r5, #0]
 80251ae:	b103      	cbz	r3, 80251b2 <_sbrk_r+0x1a>
 80251b0:	6023      	str	r3, [r4, #0]
 80251b2:	bd38      	pop	{r3, r4, r5, pc}
 80251b4:	20021030 	.word	0x20021030

080251b8 <_raise_r>:
 80251b8:	291f      	cmp	r1, #31
 80251ba:	b538      	push	{r3, r4, r5, lr}
 80251bc:	4604      	mov	r4, r0
 80251be:	460d      	mov	r5, r1
 80251c0:	d904      	bls.n	80251cc <_raise_r+0x14>
 80251c2:	2316      	movs	r3, #22
 80251c4:	6003      	str	r3, [r0, #0]
 80251c6:	f04f 30ff 	mov.w	r0, #4294967295
 80251ca:	bd38      	pop	{r3, r4, r5, pc}
 80251cc:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80251ce:	b112      	cbz	r2, 80251d6 <_raise_r+0x1e>
 80251d0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80251d4:	b94b      	cbnz	r3, 80251ea <_raise_r+0x32>
 80251d6:	4620      	mov	r0, r4
 80251d8:	f000 f830 	bl	802523c <_getpid_r>
 80251dc:	462a      	mov	r2, r5
 80251de:	4601      	mov	r1, r0
 80251e0:	4620      	mov	r0, r4
 80251e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80251e6:	f000 b817 	b.w	8025218 <_kill_r>
 80251ea:	2b01      	cmp	r3, #1
 80251ec:	d00a      	beq.n	8025204 <_raise_r+0x4c>
 80251ee:	1c59      	adds	r1, r3, #1
 80251f0:	d103      	bne.n	80251fa <_raise_r+0x42>
 80251f2:	2316      	movs	r3, #22
 80251f4:	6003      	str	r3, [r0, #0]
 80251f6:	2001      	movs	r0, #1
 80251f8:	e7e7      	b.n	80251ca <_raise_r+0x12>
 80251fa:	2400      	movs	r4, #0
 80251fc:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8025200:	4628      	mov	r0, r5
 8025202:	4798      	blx	r3
 8025204:	2000      	movs	r0, #0
 8025206:	e7e0      	b.n	80251ca <_raise_r+0x12>

08025208 <raise>:
 8025208:	4b02      	ldr	r3, [pc, #8]	; (8025214 <raise+0xc>)
 802520a:	4601      	mov	r1, r0
 802520c:	6818      	ldr	r0, [r3, #0]
 802520e:	f7ff bfd3 	b.w	80251b8 <_raise_r>
 8025212:	bf00      	nop
 8025214:	200000dc 	.word	0x200000dc

08025218 <_kill_r>:
 8025218:	b538      	push	{r3, r4, r5, lr}
 802521a:	4d07      	ldr	r5, [pc, #28]	; (8025238 <_kill_r+0x20>)
 802521c:	2300      	movs	r3, #0
 802521e:	4604      	mov	r4, r0
 8025220:	4608      	mov	r0, r1
 8025222:	4611      	mov	r1, r2
 8025224:	602b      	str	r3, [r5, #0]
 8025226:	f7dc fe79 	bl	8001f1c <_kill>
 802522a:	1c43      	adds	r3, r0, #1
 802522c:	d102      	bne.n	8025234 <_kill_r+0x1c>
 802522e:	682b      	ldr	r3, [r5, #0]
 8025230:	b103      	cbz	r3, 8025234 <_kill_r+0x1c>
 8025232:	6023      	str	r3, [r4, #0]
 8025234:	bd38      	pop	{r3, r4, r5, pc}
 8025236:	bf00      	nop
 8025238:	20021030 	.word	0x20021030

0802523c <_getpid_r>:
 802523c:	f7dc be6c 	b.w	8001f18 <_getpid>

08025240 <__sread>:
 8025240:	b510      	push	{r4, lr}
 8025242:	460c      	mov	r4, r1
 8025244:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025248:	f000 fd6a 	bl	8025d20 <_read_r>
 802524c:	2800      	cmp	r0, #0
 802524e:	bfab      	itete	ge
 8025250:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8025252:	89a3      	ldrhlt	r3, [r4, #12]
 8025254:	181b      	addge	r3, r3, r0
 8025256:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802525a:	bfac      	ite	ge
 802525c:	6563      	strge	r3, [r4, #84]	; 0x54
 802525e:	81a3      	strhlt	r3, [r4, #12]
 8025260:	bd10      	pop	{r4, pc}

08025262 <__seofread>:
 8025262:	2000      	movs	r0, #0
 8025264:	4770      	bx	lr

08025266 <__swrite>:
 8025266:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802526a:	461f      	mov	r7, r3
 802526c:	898b      	ldrh	r3, [r1, #12]
 802526e:	05db      	lsls	r3, r3, #23
 8025270:	4605      	mov	r5, r0
 8025272:	460c      	mov	r4, r1
 8025274:	4616      	mov	r6, r2
 8025276:	d505      	bpl.n	8025284 <__swrite+0x1e>
 8025278:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802527c:	2302      	movs	r3, #2
 802527e:	2200      	movs	r2, #0
 8025280:	f000 fca6 	bl	8025bd0 <_lseek_r>
 8025284:	89a3      	ldrh	r3, [r4, #12]
 8025286:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802528a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802528e:	81a3      	strh	r3, [r4, #12]
 8025290:	4632      	mov	r2, r6
 8025292:	463b      	mov	r3, r7
 8025294:	4628      	mov	r0, r5
 8025296:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802529a:	f000 ba9f 	b.w	80257dc <_write_r>

0802529e <__sseek>:
 802529e:	b510      	push	{r4, lr}
 80252a0:	460c      	mov	r4, r1
 80252a2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80252a6:	f000 fc93 	bl	8025bd0 <_lseek_r>
 80252aa:	1c43      	adds	r3, r0, #1
 80252ac:	89a3      	ldrh	r3, [r4, #12]
 80252ae:	bf15      	itete	ne
 80252b0:	6560      	strne	r0, [r4, #84]	; 0x54
 80252b2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80252b6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80252ba:	81a3      	strheq	r3, [r4, #12]
 80252bc:	bf18      	it	ne
 80252be:	81a3      	strhne	r3, [r4, #12]
 80252c0:	bd10      	pop	{r4, pc}

080252c2 <__sclose>:
 80252c2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80252c6:	f000 bb6b 	b.w	80259a0 <_close_r>
	...

080252cc <__tzcalc_limits>:
 80252cc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80252d0:	4680      	mov	r8, r0
 80252d2:	f000 fc79 	bl	8025bc8 <__gettzinfo>
 80252d6:	f240 73b1 	movw	r3, #1969	; 0x7b1
 80252da:	4598      	cmp	r8, r3
 80252dc:	f340 8098 	ble.w	8025410 <__tzcalc_limits+0x144>
 80252e0:	f46f 63f6 	mvn.w	r3, #1968	; 0x7b0
 80252e4:	4443      	add	r3, r8
 80252e6:	109b      	asrs	r3, r3, #2
 80252e8:	f240 126d 	movw	r2, #365	; 0x16d
 80252ec:	f2a8 75b2 	subw	r5, r8, #1970	; 0x7b2
 80252f0:	fb02 3505 	mla	r5, r2, r5, r3
 80252f4:	f06f 0263 	mvn.w	r2, #99	; 0x63
 80252f8:	f2a8 736d 	subw	r3, r8, #1901	; 0x76d
 80252fc:	fb93 f3f2 	sdiv	r3, r3, r2
 8025300:	441d      	add	r5, r3
 8025302:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8025306:	f46f 62c8 	mvn.w	r2, #1600	; 0x640
 802530a:	fb98 f7f3 	sdiv	r7, r8, r3
 802530e:	fb03 8717 	mls	r7, r3, r7, r8
 8025312:	4442      	add	r2, r8
 8025314:	fab7 fc87 	clz	ip, r7
 8025318:	fbb2 f2f3 	udiv	r2, r2, r3
 802531c:	f008 0303 	and.w	r3, r8, #3
 8025320:	4415      	add	r5, r2
 8025322:	2264      	movs	r2, #100	; 0x64
 8025324:	f8c0 8004 	str.w	r8, [r0, #4]
 8025328:	fb98 f6f2 	sdiv	r6, r8, r2
 802532c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025330:	fb02 8616 	mls	r6, r2, r6, r8
 8025334:	4604      	mov	r4, r0
 8025336:	f100 0b50 	add.w	fp, r0, #80	; 0x50
 802533a:	9300      	str	r3, [sp, #0]
 802533c:	f04f 0e07 	mov.w	lr, #7
 8025340:	7a22      	ldrb	r2, [r4, #8]
 8025342:	6963      	ldr	r3, [r4, #20]
 8025344:	2a4a      	cmp	r2, #74	; 0x4a
 8025346:	d128      	bne.n	802539a <__tzcalc_limits+0xce>
 8025348:	9900      	ldr	r1, [sp, #0]
 802534a:	18ea      	adds	r2, r5, r3
 802534c:	b901      	cbnz	r1, 8025350 <__tzcalc_limits+0x84>
 802534e:	b906      	cbnz	r6, 8025352 <__tzcalc_limits+0x86>
 8025350:	bb0f      	cbnz	r7, 8025396 <__tzcalc_limits+0xca>
 8025352:	2b3b      	cmp	r3, #59	; 0x3b
 8025354:	bfd4      	ite	le
 8025356:	2300      	movle	r3, #0
 8025358:	2301      	movgt	r3, #1
 802535a:	4413      	add	r3, r2
 802535c:	1e5a      	subs	r2, r3, #1
 802535e:	69a3      	ldr	r3, [r4, #24]
 8025360:	492c      	ldr	r1, [pc, #176]	; (8025414 <__tzcalc_limits+0x148>)
 8025362:	fb01 3202 	mla	r2, r1, r2, r3
 8025366:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8025368:	4413      	add	r3, r2
 802536a:	461a      	mov	r2, r3
 802536c:	17db      	asrs	r3, r3, #31
 802536e:	e9c4 2308 	strd	r2, r3, [r4, #32]
 8025372:	3428      	adds	r4, #40	; 0x28
 8025374:	45a3      	cmp	fp, r4
 8025376:	d1e3      	bne.n	8025340 <__tzcalc_limits+0x74>
 8025378:	e9d0 4508 	ldrd	r4, r5, [r0, #32]
 802537c:	e9d0 2312 	ldrd	r2, r3, [r0, #72]	; 0x48
 8025380:	4294      	cmp	r4, r2
 8025382:	eb75 0303 	sbcs.w	r3, r5, r3
 8025386:	bfb4      	ite	lt
 8025388:	2301      	movlt	r3, #1
 802538a:	2300      	movge	r3, #0
 802538c:	6003      	str	r3, [r0, #0]
 802538e:	2001      	movs	r0, #1
 8025390:	b003      	add	sp, #12
 8025392:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025396:	2300      	movs	r3, #0
 8025398:	e7df      	b.n	802535a <__tzcalc_limits+0x8e>
 802539a:	2a44      	cmp	r2, #68	; 0x44
 802539c:	d101      	bne.n	80253a2 <__tzcalc_limits+0xd6>
 802539e:	18ea      	adds	r2, r5, r3
 80253a0:	e7dd      	b.n	802535e <__tzcalc_limits+0x92>
 80253a2:	9a00      	ldr	r2, [sp, #0]
 80253a4:	bb72      	cbnz	r2, 8025404 <__tzcalc_limits+0x138>
 80253a6:	2e00      	cmp	r6, #0
 80253a8:	bf0c      	ite	eq
 80253aa:	46e0      	moveq	r8, ip
 80253ac:	f04f 0801 	movne.w	r8, #1
 80253b0:	4919      	ldr	r1, [pc, #100]	; (8025418 <__tzcalc_limits+0x14c>)
 80253b2:	68e2      	ldr	r2, [r4, #12]
 80253b4:	9201      	str	r2, [sp, #4]
 80253b6:	f04f 0a30 	mov.w	sl, #48	; 0x30
 80253ba:	fb0a 1808 	mla	r8, sl, r8, r1
 80253be:	462a      	mov	r2, r5
 80253c0:	f04f 0900 	mov.w	r9, #0
 80253c4:	f1a8 0804 	sub.w	r8, r8, #4
 80253c8:	9901      	ldr	r1, [sp, #4]
 80253ca:	f109 0901 	add.w	r9, r9, #1
 80253ce:	4549      	cmp	r1, r9
 80253d0:	f858 a029 	ldr.w	sl, [r8, r9, lsl #2]
 80253d4:	dc18      	bgt.n	8025408 <__tzcalc_limits+0x13c>
 80253d6:	f102 0804 	add.w	r8, r2, #4
 80253da:	fb98 f9fe 	sdiv	r9, r8, lr
 80253de:	ebc9 09c9 	rsb	r9, r9, r9, lsl #3
 80253e2:	eba8 0909 	sub.w	r9, r8, r9
 80253e6:	ebb3 0909 	subs.w	r9, r3, r9
 80253ea:	6923      	ldr	r3, [r4, #16]
 80253ec:	f103 33ff 	add.w	r3, r3, #4294967295
 80253f0:	bf48      	it	mi
 80253f2:	f109 0907 	addmi.w	r9, r9, #7
 80253f6:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 80253fa:	444b      	add	r3, r9
 80253fc:	4553      	cmp	r3, sl
 80253fe:	da05      	bge.n	802540c <__tzcalc_limits+0x140>
 8025400:	441a      	add	r2, r3
 8025402:	e7ac      	b.n	802535e <__tzcalc_limits+0x92>
 8025404:	46e0      	mov	r8, ip
 8025406:	e7d3      	b.n	80253b0 <__tzcalc_limits+0xe4>
 8025408:	4452      	add	r2, sl
 802540a:	e7dd      	b.n	80253c8 <__tzcalc_limits+0xfc>
 802540c:	3b07      	subs	r3, #7
 802540e:	e7f5      	b.n	80253fc <__tzcalc_limits+0x130>
 8025410:	2000      	movs	r0, #0
 8025412:	e7bd      	b.n	8025390 <__tzcalc_limits+0xc4>
 8025414:	00015180 	.word	0x00015180
 8025418:	0802b760 	.word	0x0802b760

0802541c <__tz_lock>:
 802541c:	4801      	ldr	r0, [pc, #4]	; (8025424 <__tz_lock+0x8>)
 802541e:	f7ff ba8e 	b.w	802493e <__retarget_lock_acquire>
 8025422:	bf00      	nop
 8025424:	2002102b 	.word	0x2002102b

08025428 <__tz_unlock>:
 8025428:	4801      	ldr	r0, [pc, #4]	; (8025430 <__tz_unlock+0x8>)
 802542a:	f7ff ba8a 	b.w	8024942 <__retarget_lock_release>
 802542e:	bf00      	nop
 8025430:	2002102b 	.word	0x2002102b

08025434 <_tzset_unlocked>:
 8025434:	4b01      	ldr	r3, [pc, #4]	; (802543c <_tzset_unlocked+0x8>)
 8025436:	6818      	ldr	r0, [r3, #0]
 8025438:	f000 b802 	b.w	8025440 <_tzset_unlocked_r>
 802543c:	200000dc 	.word	0x200000dc

08025440 <_tzset_unlocked_r>:
 8025440:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025444:	b08d      	sub	sp, #52	; 0x34
 8025446:	4607      	mov	r7, r0
 8025448:	f000 fbbe 	bl	8025bc8 <__gettzinfo>
 802544c:	49ae      	ldr	r1, [pc, #696]	; (8025708 <_tzset_unlocked_r+0x2c8>)
 802544e:	4eaf      	ldr	r6, [pc, #700]	; (802570c <_tzset_unlocked_r+0x2cc>)
 8025450:	4605      	mov	r5, r0
 8025452:	4638      	mov	r0, r7
 8025454:	f000 fbb0 	bl	8025bb8 <_getenv_r>
 8025458:	4604      	mov	r4, r0
 802545a:	b970      	cbnz	r0, 802547a <_tzset_unlocked_r+0x3a>
 802545c:	4bac      	ldr	r3, [pc, #688]	; (8025710 <_tzset_unlocked_r+0x2d0>)
 802545e:	4aad      	ldr	r2, [pc, #692]	; (8025714 <_tzset_unlocked_r+0x2d4>)
 8025460:	6018      	str	r0, [r3, #0]
 8025462:	4bad      	ldr	r3, [pc, #692]	; (8025718 <_tzset_unlocked_r+0x2d8>)
 8025464:	6018      	str	r0, [r3, #0]
 8025466:	4bad      	ldr	r3, [pc, #692]	; (802571c <_tzset_unlocked_r+0x2dc>)
 8025468:	6830      	ldr	r0, [r6, #0]
 802546a:	e9c3 2200 	strd	r2, r2, [r3]
 802546e:	f7ff fa73 	bl	8024958 <free>
 8025472:	6034      	str	r4, [r6, #0]
 8025474:	b00d      	add	sp, #52	; 0x34
 8025476:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802547a:	6831      	ldr	r1, [r6, #0]
 802547c:	2900      	cmp	r1, #0
 802547e:	d15f      	bne.n	8025540 <_tzset_unlocked_r+0x100>
 8025480:	6830      	ldr	r0, [r6, #0]
 8025482:	f7ff fa69 	bl	8024958 <free>
 8025486:	4620      	mov	r0, r4
 8025488:	f7da ff14 	bl	80002b4 <strlen>
 802548c:	1c41      	adds	r1, r0, #1
 802548e:	4638      	mov	r0, r7
 8025490:	f7ff fad0 	bl	8024a34 <_malloc_r>
 8025494:	6030      	str	r0, [r6, #0]
 8025496:	2800      	cmp	r0, #0
 8025498:	d157      	bne.n	802554a <_tzset_unlocked_r+0x10a>
 802549a:	7823      	ldrb	r3, [r4, #0]
 802549c:	4aa0      	ldr	r2, [pc, #640]	; (8025720 <_tzset_unlocked_r+0x2e0>)
 802549e:	49a1      	ldr	r1, [pc, #644]	; (8025724 <_tzset_unlocked_r+0x2e4>)
 80254a0:	2b3a      	cmp	r3, #58	; 0x3a
 80254a2:	bf08      	it	eq
 80254a4:	3401      	addeq	r4, #1
 80254a6:	ae0a      	add	r6, sp, #40	; 0x28
 80254a8:	4633      	mov	r3, r6
 80254aa:	4620      	mov	r0, r4
 80254ac:	f000 fc4a 	bl	8025d44 <siscanf>
 80254b0:	2800      	cmp	r0, #0
 80254b2:	dddf      	ble.n	8025474 <_tzset_unlocked_r+0x34>
 80254b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80254b6:	18e7      	adds	r7, r4, r3
 80254b8:	5ce3      	ldrb	r3, [r4, r3]
 80254ba:	2b2d      	cmp	r3, #45	; 0x2d
 80254bc:	d149      	bne.n	8025552 <_tzset_unlocked_r+0x112>
 80254be:	3701      	adds	r7, #1
 80254c0:	f04f 34ff 	mov.w	r4, #4294967295
 80254c4:	f10d 0a20 	add.w	sl, sp, #32
 80254c8:	f10d 0b1e 	add.w	fp, sp, #30
 80254cc:	f04f 0800 	mov.w	r8, #0
 80254d0:	e9cd 6a01 	strd	r6, sl, [sp, #4]
 80254d4:	4994      	ldr	r1, [pc, #592]	; (8025728 <_tzset_unlocked_r+0x2e8>)
 80254d6:	9603      	str	r6, [sp, #12]
 80254d8:	f8cd b000 	str.w	fp, [sp]
 80254dc:	4633      	mov	r3, r6
 80254de:	aa07      	add	r2, sp, #28
 80254e0:	4638      	mov	r0, r7
 80254e2:	f8ad 801e 	strh.w	r8, [sp, #30]
 80254e6:	f8ad 8020 	strh.w	r8, [sp, #32]
 80254ea:	f000 fc2b 	bl	8025d44 <siscanf>
 80254ee:	4540      	cmp	r0, r8
 80254f0:	ddc0      	ble.n	8025474 <_tzset_unlocked_r+0x34>
 80254f2:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 80254f6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80254fa:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8025734 <_tzset_unlocked_r+0x2f4>
 80254fe:	213c      	movs	r1, #60	; 0x3c
 8025500:	fb01 2203 	mla	r2, r1, r3, r2
 8025504:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 8025508:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 802550c:	fb01 2303 	mla	r3, r1, r3, r2
 8025510:	435c      	muls	r4, r3
 8025512:	62ac      	str	r4, [r5, #40]	; 0x28
 8025514:	4c81      	ldr	r4, [pc, #516]	; (802571c <_tzset_unlocked_r+0x2dc>)
 8025516:	4b82      	ldr	r3, [pc, #520]	; (8025720 <_tzset_unlocked_r+0x2e0>)
 8025518:	6023      	str	r3, [r4, #0]
 802551a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802551c:	4981      	ldr	r1, [pc, #516]	; (8025724 <_tzset_unlocked_r+0x2e4>)
 802551e:	441f      	add	r7, r3
 8025520:	464a      	mov	r2, r9
 8025522:	4633      	mov	r3, r6
 8025524:	4638      	mov	r0, r7
 8025526:	f000 fc0d 	bl	8025d44 <siscanf>
 802552a:	4540      	cmp	r0, r8
 802552c:	dc16      	bgt.n	802555c <_tzset_unlocked_r+0x11c>
 802552e:	6823      	ldr	r3, [r4, #0]
 8025530:	6063      	str	r3, [r4, #4]
 8025532:	4b77      	ldr	r3, [pc, #476]	; (8025710 <_tzset_unlocked_r+0x2d0>)
 8025534:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 8025536:	601a      	str	r2, [r3, #0]
 8025538:	4b77      	ldr	r3, [pc, #476]	; (8025718 <_tzset_unlocked_r+0x2d8>)
 802553a:	f8c3 8000 	str.w	r8, [r3]
 802553e:	e799      	b.n	8025474 <_tzset_unlocked_r+0x34>
 8025540:	f7da feae 	bl	80002a0 <strcmp>
 8025544:	2800      	cmp	r0, #0
 8025546:	d19b      	bne.n	8025480 <_tzset_unlocked_r+0x40>
 8025548:	e794      	b.n	8025474 <_tzset_unlocked_r+0x34>
 802554a:	4621      	mov	r1, r4
 802554c:	f000 fc26 	bl	8025d9c <strcpy>
 8025550:	e7a3      	b.n	802549a <_tzset_unlocked_r+0x5a>
 8025552:	2b2b      	cmp	r3, #43	; 0x2b
 8025554:	bf08      	it	eq
 8025556:	3701      	addeq	r7, #1
 8025558:	2401      	movs	r4, #1
 802555a:	e7b3      	b.n	80254c4 <_tzset_unlocked_r+0x84>
 802555c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802555e:	f8c4 9004 	str.w	r9, [r4, #4]
 8025562:	18fc      	adds	r4, r7, r3
 8025564:	5cfb      	ldrb	r3, [r7, r3]
 8025566:	2b2d      	cmp	r3, #45	; 0x2d
 8025568:	f040 808b 	bne.w	8025682 <_tzset_unlocked_r+0x242>
 802556c:	3401      	adds	r4, #1
 802556e:	f04f 37ff 	mov.w	r7, #4294967295
 8025572:	2300      	movs	r3, #0
 8025574:	f8ad 301c 	strh.w	r3, [sp, #28]
 8025578:	f8ad 301e 	strh.w	r3, [sp, #30]
 802557c:	f8ad 3020 	strh.w	r3, [sp, #32]
 8025580:	930a      	str	r3, [sp, #40]	; 0x28
 8025582:	e9cd a602 	strd	sl, r6, [sp, #8]
 8025586:	e9cd b600 	strd	fp, r6, [sp]
 802558a:	4967      	ldr	r1, [pc, #412]	; (8025728 <_tzset_unlocked_r+0x2e8>)
 802558c:	4633      	mov	r3, r6
 802558e:	aa07      	add	r2, sp, #28
 8025590:	4620      	mov	r0, r4
 8025592:	f000 fbd7 	bl	8025d44 <siscanf>
 8025596:	2800      	cmp	r0, #0
 8025598:	dc78      	bgt.n	802568c <_tzset_unlocked_r+0x24c>
 802559a:	6aaf      	ldr	r7, [r5, #40]	; 0x28
 802559c:	f5a7 6761 	sub.w	r7, r7, #3600	; 0xe10
 80255a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80255a2:	652f      	str	r7, [r5, #80]	; 0x50
 80255a4:	441c      	add	r4, r3
 80255a6:	462f      	mov	r7, r5
 80255a8:	f04f 0900 	mov.w	r9, #0
 80255ac:	7823      	ldrb	r3, [r4, #0]
 80255ae:	2b2c      	cmp	r3, #44	; 0x2c
 80255b0:	bf08      	it	eq
 80255b2:	3401      	addeq	r4, #1
 80255b4:	f894 8000 	ldrb.w	r8, [r4]
 80255b8:	f1b8 0f4d 	cmp.w	r8, #77	; 0x4d
 80255bc:	d178      	bne.n	80256b0 <_tzset_unlocked_r+0x270>
 80255be:	f10d 0326 	add.w	r3, sp, #38	; 0x26
 80255c2:	e9cd 6301 	strd	r6, r3, [sp, #4]
 80255c6:	ab09      	add	r3, sp, #36	; 0x24
 80255c8:	9300      	str	r3, [sp, #0]
 80255ca:	4958      	ldr	r1, [pc, #352]	; (802572c <_tzset_unlocked_r+0x2ec>)
 80255cc:	9603      	str	r6, [sp, #12]
 80255ce:	4633      	mov	r3, r6
 80255d0:	f10d 0222 	add.w	r2, sp, #34	; 0x22
 80255d4:	4620      	mov	r0, r4
 80255d6:	f000 fbb5 	bl	8025d44 <siscanf>
 80255da:	2803      	cmp	r0, #3
 80255dc:	f47f af4a 	bne.w	8025474 <_tzset_unlocked_r+0x34>
 80255e0:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80255e4:	1e4b      	subs	r3, r1, #1
 80255e6:	2b0b      	cmp	r3, #11
 80255e8:	f63f af44 	bhi.w	8025474 <_tzset_unlocked_r+0x34>
 80255ec:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 80255f0:	1e53      	subs	r3, r2, #1
 80255f2:	2b04      	cmp	r3, #4
 80255f4:	f63f af3e 	bhi.w	8025474 <_tzset_unlocked_r+0x34>
 80255f8:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 80255fc:	2b06      	cmp	r3, #6
 80255fe:	f63f af39 	bhi.w	8025474 <_tzset_unlocked_r+0x34>
 8025602:	e9c7 1203 	strd	r1, r2, [r7, #12]
 8025606:	f887 8008 	strb.w	r8, [r7, #8]
 802560a:	617b      	str	r3, [r7, #20]
 802560c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802560e:	eb04 0803 	add.w	r8, r4, r3
 8025612:	2302      	movs	r3, #2
 8025614:	f8ad 301c 	strh.w	r3, [sp, #28]
 8025618:	2300      	movs	r3, #0
 802561a:	f8ad 301e 	strh.w	r3, [sp, #30]
 802561e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8025622:	930a      	str	r3, [sp, #40]	; 0x28
 8025624:	f898 3000 	ldrb.w	r3, [r8]
 8025628:	2b2f      	cmp	r3, #47	; 0x2f
 802562a:	d109      	bne.n	8025640 <_tzset_unlocked_r+0x200>
 802562c:	e9cd a602 	strd	sl, r6, [sp, #8]
 8025630:	e9cd b600 	strd	fp, r6, [sp]
 8025634:	493e      	ldr	r1, [pc, #248]	; (8025730 <_tzset_unlocked_r+0x2f0>)
 8025636:	4633      	mov	r3, r6
 8025638:	aa07      	add	r2, sp, #28
 802563a:	4640      	mov	r0, r8
 802563c:	f000 fb82 	bl	8025d44 <siscanf>
 8025640:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 8025644:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8025648:	213c      	movs	r1, #60	; 0x3c
 802564a:	fb01 2203 	mla	r2, r1, r3, r2
 802564e:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 8025652:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8025656:	fb01 2303 	mla	r3, r1, r3, r2
 802565a:	61bb      	str	r3, [r7, #24]
 802565c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802565e:	3728      	adds	r7, #40	; 0x28
 8025660:	4444      	add	r4, r8
 8025662:	f1b9 0f00 	cmp.w	r9, #0
 8025666:	d020      	beq.n	80256aa <_tzset_unlocked_r+0x26a>
 8025668:	6868      	ldr	r0, [r5, #4]
 802566a:	f7ff fe2f 	bl	80252cc <__tzcalc_limits>
 802566e:	4b28      	ldr	r3, [pc, #160]	; (8025710 <_tzset_unlocked_r+0x2d0>)
 8025670:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 8025672:	601a      	str	r2, [r3, #0]
 8025674:	6d2b      	ldr	r3, [r5, #80]	; 0x50
 8025676:	1a9b      	subs	r3, r3, r2
 8025678:	4a27      	ldr	r2, [pc, #156]	; (8025718 <_tzset_unlocked_r+0x2d8>)
 802567a:	bf18      	it	ne
 802567c:	2301      	movne	r3, #1
 802567e:	6013      	str	r3, [r2, #0]
 8025680:	e6f8      	b.n	8025474 <_tzset_unlocked_r+0x34>
 8025682:	2b2b      	cmp	r3, #43	; 0x2b
 8025684:	bf08      	it	eq
 8025686:	3401      	addeq	r4, #1
 8025688:	2701      	movs	r7, #1
 802568a:	e772      	b.n	8025572 <_tzset_unlocked_r+0x132>
 802568c:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 8025690:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8025694:	213c      	movs	r1, #60	; 0x3c
 8025696:	fb01 2203 	mla	r2, r1, r3, r2
 802569a:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 802569e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80256a2:	fb01 2303 	mla	r3, r1, r3, r2
 80256a6:	435f      	muls	r7, r3
 80256a8:	e77a      	b.n	80255a0 <_tzset_unlocked_r+0x160>
 80256aa:	f04f 0901 	mov.w	r9, #1
 80256ae:	e77d      	b.n	80255ac <_tzset_unlocked_r+0x16c>
 80256b0:	f1b8 0f4a 	cmp.w	r8, #74	; 0x4a
 80256b4:	bf06      	itte	eq
 80256b6:	3401      	addeq	r4, #1
 80256b8:	4643      	moveq	r3, r8
 80256ba:	2344      	movne	r3, #68	; 0x44
 80256bc:	220a      	movs	r2, #10
 80256be:	a90b      	add	r1, sp, #44	; 0x2c
 80256c0:	4620      	mov	r0, r4
 80256c2:	9305      	str	r3, [sp, #20]
 80256c4:	f000 fc02 	bl	8025ecc <strtoul>
 80256c8:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
 80256cc:	9b05      	ldr	r3, [sp, #20]
 80256ce:	f8ad 0026 	strh.w	r0, [sp, #38]	; 0x26
 80256d2:	45a0      	cmp	r8, r4
 80256d4:	d114      	bne.n	8025700 <_tzset_unlocked_r+0x2c0>
 80256d6:	234d      	movs	r3, #77	; 0x4d
 80256d8:	f1b9 0f00 	cmp.w	r9, #0
 80256dc:	d107      	bne.n	80256ee <_tzset_unlocked_r+0x2ae>
 80256de:	722b      	strb	r3, [r5, #8]
 80256e0:	2103      	movs	r1, #3
 80256e2:	2302      	movs	r3, #2
 80256e4:	e9c5 1303 	strd	r1, r3, [r5, #12]
 80256e8:	f8c5 9014 	str.w	r9, [r5, #20]
 80256ec:	e791      	b.n	8025612 <_tzset_unlocked_r+0x1d2>
 80256ee:	f885 3030 	strb.w	r3, [r5, #48]	; 0x30
 80256f2:	220b      	movs	r2, #11
 80256f4:	2301      	movs	r3, #1
 80256f6:	e9c5 230d 	strd	r2, r3, [r5, #52]	; 0x34
 80256fa:	2300      	movs	r3, #0
 80256fc:	63eb      	str	r3, [r5, #60]	; 0x3c
 80256fe:	e788      	b.n	8025612 <_tzset_unlocked_r+0x1d2>
 8025700:	b280      	uxth	r0, r0
 8025702:	723b      	strb	r3, [r7, #8]
 8025704:	6178      	str	r0, [r7, #20]
 8025706:	e784      	b.n	8025612 <_tzset_unlocked_r+0x1d2>
 8025708:	0802b7f8 	.word	0x0802b7f8
 802570c:	20020cb4 	.word	0x20020cb4
 8025710:	20020cbc 	.word	0x20020cbc
 8025714:	0802b7fb 	.word	0x0802b7fb
 8025718:	20020cb8 	.word	0x20020cb8
 802571c:	20000140 	.word	0x20000140
 8025720:	20020ca7 	.word	0x20020ca7
 8025724:	0802b7ff 	.word	0x0802b7ff
 8025728:	0802b822 	.word	0x0802b822
 802572c:	0802b80e 	.word	0x0802b80e
 8025730:	0802b821 	.word	0x0802b821
 8025734:	20020c9c 	.word	0x20020c9c

08025738 <__swbuf_r>:
 8025738:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802573a:	460e      	mov	r6, r1
 802573c:	4614      	mov	r4, r2
 802573e:	4605      	mov	r5, r0
 8025740:	b118      	cbz	r0, 802574a <__swbuf_r+0x12>
 8025742:	6983      	ldr	r3, [r0, #24]
 8025744:	b90b      	cbnz	r3, 802574a <__swbuf_r+0x12>
 8025746:	f7fe ff1b 	bl	8024580 <__sinit>
 802574a:	4b21      	ldr	r3, [pc, #132]	; (80257d0 <__swbuf_r+0x98>)
 802574c:	429c      	cmp	r4, r3
 802574e:	d12b      	bne.n	80257a8 <__swbuf_r+0x70>
 8025750:	686c      	ldr	r4, [r5, #4]
 8025752:	69a3      	ldr	r3, [r4, #24]
 8025754:	60a3      	str	r3, [r4, #8]
 8025756:	89a3      	ldrh	r3, [r4, #12]
 8025758:	071a      	lsls	r2, r3, #28
 802575a:	d52f      	bpl.n	80257bc <__swbuf_r+0x84>
 802575c:	6923      	ldr	r3, [r4, #16]
 802575e:	b36b      	cbz	r3, 80257bc <__swbuf_r+0x84>
 8025760:	6923      	ldr	r3, [r4, #16]
 8025762:	6820      	ldr	r0, [r4, #0]
 8025764:	1ac0      	subs	r0, r0, r3
 8025766:	6963      	ldr	r3, [r4, #20]
 8025768:	b2f6      	uxtb	r6, r6
 802576a:	4283      	cmp	r3, r0
 802576c:	4637      	mov	r7, r6
 802576e:	dc04      	bgt.n	802577a <__swbuf_r+0x42>
 8025770:	4621      	mov	r1, r4
 8025772:	4628      	mov	r0, r5
 8025774:	f000 f9aa 	bl	8025acc <_fflush_r>
 8025778:	bb30      	cbnz	r0, 80257c8 <__swbuf_r+0x90>
 802577a:	68a3      	ldr	r3, [r4, #8]
 802577c:	3b01      	subs	r3, #1
 802577e:	60a3      	str	r3, [r4, #8]
 8025780:	6823      	ldr	r3, [r4, #0]
 8025782:	1c5a      	adds	r2, r3, #1
 8025784:	6022      	str	r2, [r4, #0]
 8025786:	701e      	strb	r6, [r3, #0]
 8025788:	6963      	ldr	r3, [r4, #20]
 802578a:	3001      	adds	r0, #1
 802578c:	4283      	cmp	r3, r0
 802578e:	d004      	beq.n	802579a <__swbuf_r+0x62>
 8025790:	89a3      	ldrh	r3, [r4, #12]
 8025792:	07db      	lsls	r3, r3, #31
 8025794:	d506      	bpl.n	80257a4 <__swbuf_r+0x6c>
 8025796:	2e0a      	cmp	r6, #10
 8025798:	d104      	bne.n	80257a4 <__swbuf_r+0x6c>
 802579a:	4621      	mov	r1, r4
 802579c:	4628      	mov	r0, r5
 802579e:	f000 f995 	bl	8025acc <_fflush_r>
 80257a2:	b988      	cbnz	r0, 80257c8 <__swbuf_r+0x90>
 80257a4:	4638      	mov	r0, r7
 80257a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80257a8:	4b0a      	ldr	r3, [pc, #40]	; (80257d4 <__swbuf_r+0x9c>)
 80257aa:	429c      	cmp	r4, r3
 80257ac:	d101      	bne.n	80257b2 <__swbuf_r+0x7a>
 80257ae:	68ac      	ldr	r4, [r5, #8]
 80257b0:	e7cf      	b.n	8025752 <__swbuf_r+0x1a>
 80257b2:	4b09      	ldr	r3, [pc, #36]	; (80257d8 <__swbuf_r+0xa0>)
 80257b4:	429c      	cmp	r4, r3
 80257b6:	bf08      	it	eq
 80257b8:	68ec      	ldreq	r4, [r5, #12]
 80257ba:	e7ca      	b.n	8025752 <__swbuf_r+0x1a>
 80257bc:	4621      	mov	r1, r4
 80257be:	4628      	mov	r0, r5
 80257c0:	f000 f81e 	bl	8025800 <__swsetup_r>
 80257c4:	2800      	cmp	r0, #0
 80257c6:	d0cb      	beq.n	8025760 <__swbuf_r+0x28>
 80257c8:	f04f 37ff 	mov.w	r7, #4294967295
 80257cc:	e7ea      	b.n	80257a4 <__swbuf_r+0x6c>
 80257ce:	bf00      	nop
 80257d0:	0802b71c 	.word	0x0802b71c
 80257d4:	0802b73c 	.word	0x0802b73c
 80257d8:	0802b6fc 	.word	0x0802b6fc

080257dc <_write_r>:
 80257dc:	b538      	push	{r3, r4, r5, lr}
 80257de:	4d07      	ldr	r5, [pc, #28]	; (80257fc <_write_r+0x20>)
 80257e0:	4604      	mov	r4, r0
 80257e2:	4608      	mov	r0, r1
 80257e4:	4611      	mov	r1, r2
 80257e6:	2200      	movs	r2, #0
 80257e8:	602a      	str	r2, [r5, #0]
 80257ea:	461a      	mov	r2, r3
 80257ec:	f7dc fbb1 	bl	8001f52 <_write>
 80257f0:	1c43      	adds	r3, r0, #1
 80257f2:	d102      	bne.n	80257fa <_write_r+0x1e>
 80257f4:	682b      	ldr	r3, [r5, #0]
 80257f6:	b103      	cbz	r3, 80257fa <_write_r+0x1e>
 80257f8:	6023      	str	r3, [r4, #0]
 80257fa:	bd38      	pop	{r3, r4, r5, pc}
 80257fc:	20021030 	.word	0x20021030

08025800 <__swsetup_r>:
 8025800:	4b32      	ldr	r3, [pc, #200]	; (80258cc <__swsetup_r+0xcc>)
 8025802:	b570      	push	{r4, r5, r6, lr}
 8025804:	681d      	ldr	r5, [r3, #0]
 8025806:	4606      	mov	r6, r0
 8025808:	460c      	mov	r4, r1
 802580a:	b125      	cbz	r5, 8025816 <__swsetup_r+0x16>
 802580c:	69ab      	ldr	r3, [r5, #24]
 802580e:	b913      	cbnz	r3, 8025816 <__swsetup_r+0x16>
 8025810:	4628      	mov	r0, r5
 8025812:	f7fe feb5 	bl	8024580 <__sinit>
 8025816:	4b2e      	ldr	r3, [pc, #184]	; (80258d0 <__swsetup_r+0xd0>)
 8025818:	429c      	cmp	r4, r3
 802581a:	d10f      	bne.n	802583c <__swsetup_r+0x3c>
 802581c:	686c      	ldr	r4, [r5, #4]
 802581e:	89a3      	ldrh	r3, [r4, #12]
 8025820:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8025824:	0719      	lsls	r1, r3, #28
 8025826:	d42c      	bmi.n	8025882 <__swsetup_r+0x82>
 8025828:	06dd      	lsls	r5, r3, #27
 802582a:	d411      	bmi.n	8025850 <__swsetup_r+0x50>
 802582c:	2309      	movs	r3, #9
 802582e:	6033      	str	r3, [r6, #0]
 8025830:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8025834:	81a3      	strh	r3, [r4, #12]
 8025836:	f04f 30ff 	mov.w	r0, #4294967295
 802583a:	e03e      	b.n	80258ba <__swsetup_r+0xba>
 802583c:	4b25      	ldr	r3, [pc, #148]	; (80258d4 <__swsetup_r+0xd4>)
 802583e:	429c      	cmp	r4, r3
 8025840:	d101      	bne.n	8025846 <__swsetup_r+0x46>
 8025842:	68ac      	ldr	r4, [r5, #8]
 8025844:	e7eb      	b.n	802581e <__swsetup_r+0x1e>
 8025846:	4b24      	ldr	r3, [pc, #144]	; (80258d8 <__swsetup_r+0xd8>)
 8025848:	429c      	cmp	r4, r3
 802584a:	bf08      	it	eq
 802584c:	68ec      	ldreq	r4, [r5, #12]
 802584e:	e7e6      	b.n	802581e <__swsetup_r+0x1e>
 8025850:	0758      	lsls	r0, r3, #29
 8025852:	d512      	bpl.n	802587a <__swsetup_r+0x7a>
 8025854:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8025856:	b141      	cbz	r1, 802586a <__swsetup_r+0x6a>
 8025858:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802585c:	4299      	cmp	r1, r3
 802585e:	d002      	beq.n	8025866 <__swsetup_r+0x66>
 8025860:	4630      	mov	r0, r6
 8025862:	f7ff f897 	bl	8024994 <_free_r>
 8025866:	2300      	movs	r3, #0
 8025868:	6363      	str	r3, [r4, #52]	; 0x34
 802586a:	89a3      	ldrh	r3, [r4, #12]
 802586c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8025870:	81a3      	strh	r3, [r4, #12]
 8025872:	2300      	movs	r3, #0
 8025874:	6063      	str	r3, [r4, #4]
 8025876:	6923      	ldr	r3, [r4, #16]
 8025878:	6023      	str	r3, [r4, #0]
 802587a:	89a3      	ldrh	r3, [r4, #12]
 802587c:	f043 0308 	orr.w	r3, r3, #8
 8025880:	81a3      	strh	r3, [r4, #12]
 8025882:	6923      	ldr	r3, [r4, #16]
 8025884:	b94b      	cbnz	r3, 802589a <__swsetup_r+0x9a>
 8025886:	89a3      	ldrh	r3, [r4, #12]
 8025888:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802588c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8025890:	d003      	beq.n	802589a <__swsetup_r+0x9a>
 8025892:	4621      	mov	r1, r4
 8025894:	4630      	mov	r0, r6
 8025896:	f000 f9d1 	bl	8025c3c <__smakebuf_r>
 802589a:	89a0      	ldrh	r0, [r4, #12]
 802589c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80258a0:	f010 0301 	ands.w	r3, r0, #1
 80258a4:	d00a      	beq.n	80258bc <__swsetup_r+0xbc>
 80258a6:	2300      	movs	r3, #0
 80258a8:	60a3      	str	r3, [r4, #8]
 80258aa:	6963      	ldr	r3, [r4, #20]
 80258ac:	425b      	negs	r3, r3
 80258ae:	61a3      	str	r3, [r4, #24]
 80258b0:	6923      	ldr	r3, [r4, #16]
 80258b2:	b943      	cbnz	r3, 80258c6 <__swsetup_r+0xc6>
 80258b4:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80258b8:	d1ba      	bne.n	8025830 <__swsetup_r+0x30>
 80258ba:	bd70      	pop	{r4, r5, r6, pc}
 80258bc:	0781      	lsls	r1, r0, #30
 80258be:	bf58      	it	pl
 80258c0:	6963      	ldrpl	r3, [r4, #20]
 80258c2:	60a3      	str	r3, [r4, #8]
 80258c4:	e7f4      	b.n	80258b0 <__swsetup_r+0xb0>
 80258c6:	2000      	movs	r0, #0
 80258c8:	e7f7      	b.n	80258ba <__swsetup_r+0xba>
 80258ca:	bf00      	nop
 80258cc:	200000dc 	.word	0x200000dc
 80258d0:	0802b71c 	.word	0x0802b71c
 80258d4:	0802b73c 	.word	0x0802b73c
 80258d8:	0802b6fc 	.word	0x0802b6fc

080258dc <__register_exitproc>:
 80258dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80258e0:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 802599c <__register_exitproc+0xc0>
 80258e4:	4606      	mov	r6, r0
 80258e6:	f8d8 0000 	ldr.w	r0, [r8]
 80258ea:	461f      	mov	r7, r3
 80258ec:	460d      	mov	r5, r1
 80258ee:	4691      	mov	r9, r2
 80258f0:	f7ff f826 	bl	8024940 <__retarget_lock_acquire_recursive>
 80258f4:	4b25      	ldr	r3, [pc, #148]	; (802598c <__register_exitproc+0xb0>)
 80258f6:	681c      	ldr	r4, [r3, #0]
 80258f8:	b934      	cbnz	r4, 8025908 <__register_exitproc+0x2c>
 80258fa:	4c25      	ldr	r4, [pc, #148]	; (8025990 <__register_exitproc+0xb4>)
 80258fc:	601c      	str	r4, [r3, #0]
 80258fe:	4b25      	ldr	r3, [pc, #148]	; (8025994 <__register_exitproc+0xb8>)
 8025900:	b113      	cbz	r3, 8025908 <__register_exitproc+0x2c>
 8025902:	681b      	ldr	r3, [r3, #0]
 8025904:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8025908:	6863      	ldr	r3, [r4, #4]
 802590a:	2b1f      	cmp	r3, #31
 802590c:	dd07      	ble.n	802591e <__register_exitproc+0x42>
 802590e:	f8d8 0000 	ldr.w	r0, [r8]
 8025912:	f7ff f817 	bl	8024944 <__retarget_lock_release_recursive>
 8025916:	f04f 30ff 	mov.w	r0, #4294967295
 802591a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802591e:	b34e      	cbz	r6, 8025974 <__register_exitproc+0x98>
 8025920:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8025924:	b988      	cbnz	r0, 802594a <__register_exitproc+0x6e>
 8025926:	4b1c      	ldr	r3, [pc, #112]	; (8025998 <__register_exitproc+0xbc>)
 8025928:	b923      	cbnz	r3, 8025934 <__register_exitproc+0x58>
 802592a:	f8d8 0000 	ldr.w	r0, [r8]
 802592e:	f7ff f808 	bl	8024942 <__retarget_lock_release>
 8025932:	e7f0      	b.n	8025916 <__register_exitproc+0x3a>
 8025934:	f44f 7084 	mov.w	r0, #264	; 0x108
 8025938:	f7ff f806 	bl	8024948 <malloc>
 802593c:	2800      	cmp	r0, #0
 802593e:	d0f4      	beq.n	802592a <__register_exitproc+0x4e>
 8025940:	2300      	movs	r3, #0
 8025942:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8025946:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802594a:	6863      	ldr	r3, [r4, #4]
 802594c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8025950:	2201      	movs	r2, #1
 8025952:	409a      	lsls	r2, r3
 8025954:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8025958:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802595c:	4313      	orrs	r3, r2
 802595e:	2e02      	cmp	r6, #2
 8025960:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8025964:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8025968:	bf02      	ittt	eq
 802596a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802596e:	431a      	orreq	r2, r3
 8025970:	f8c0 2104 	streq.w	r2, [r0, #260]	; 0x104
 8025974:	6863      	ldr	r3, [r4, #4]
 8025976:	f8d8 0000 	ldr.w	r0, [r8]
 802597a:	1c5a      	adds	r2, r3, #1
 802597c:	3302      	adds	r3, #2
 802597e:	6062      	str	r2, [r4, #4]
 8025980:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8025984:	f7fe ffde 	bl	8024944 <__retarget_lock_release_recursive>
 8025988:	2000      	movs	r0, #0
 802598a:	e7c6      	b.n	802591a <__register_exitproc+0x3e>
 802598c:	20020d4c 	.word	0x20020d4c
 8025990:	20020cc0 	.word	0x20020cc0
 8025994:	0802b7f4 	.word	0x0802b7f4
 8025998:	08024949 	.word	0x08024949
 802599c:	20000148 	.word	0x20000148

080259a0 <_close_r>:
 80259a0:	b538      	push	{r3, r4, r5, lr}
 80259a2:	4d06      	ldr	r5, [pc, #24]	; (80259bc <_close_r+0x1c>)
 80259a4:	2300      	movs	r3, #0
 80259a6:	4604      	mov	r4, r0
 80259a8:	4608      	mov	r0, r1
 80259aa:	602b      	str	r3, [r5, #0]
 80259ac:	f7dc fade 	bl	8001f6c <_close>
 80259b0:	1c43      	adds	r3, r0, #1
 80259b2:	d102      	bne.n	80259ba <_close_r+0x1a>
 80259b4:	682b      	ldr	r3, [r5, #0]
 80259b6:	b103      	cbz	r3, 80259ba <_close_r+0x1a>
 80259b8:	6023      	str	r3, [r4, #0]
 80259ba:	bd38      	pop	{r3, r4, r5, pc}
 80259bc:	20021030 	.word	0x20021030

080259c0 <__sflush_r>:
 80259c0:	898a      	ldrh	r2, [r1, #12]
 80259c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80259c6:	4605      	mov	r5, r0
 80259c8:	0710      	lsls	r0, r2, #28
 80259ca:	460c      	mov	r4, r1
 80259cc:	d458      	bmi.n	8025a80 <__sflush_r+0xc0>
 80259ce:	684b      	ldr	r3, [r1, #4]
 80259d0:	2b00      	cmp	r3, #0
 80259d2:	dc05      	bgt.n	80259e0 <__sflush_r+0x20>
 80259d4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80259d6:	2b00      	cmp	r3, #0
 80259d8:	dc02      	bgt.n	80259e0 <__sflush_r+0x20>
 80259da:	2000      	movs	r0, #0
 80259dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80259e0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80259e2:	2e00      	cmp	r6, #0
 80259e4:	d0f9      	beq.n	80259da <__sflush_r+0x1a>
 80259e6:	2300      	movs	r3, #0
 80259e8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80259ec:	682f      	ldr	r7, [r5, #0]
 80259ee:	602b      	str	r3, [r5, #0]
 80259f0:	d032      	beq.n	8025a58 <__sflush_r+0x98>
 80259f2:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80259f4:	89a3      	ldrh	r3, [r4, #12]
 80259f6:	075a      	lsls	r2, r3, #29
 80259f8:	d505      	bpl.n	8025a06 <__sflush_r+0x46>
 80259fa:	6863      	ldr	r3, [r4, #4]
 80259fc:	1ac0      	subs	r0, r0, r3
 80259fe:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8025a00:	b10b      	cbz	r3, 8025a06 <__sflush_r+0x46>
 8025a02:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8025a04:	1ac0      	subs	r0, r0, r3
 8025a06:	2300      	movs	r3, #0
 8025a08:	4602      	mov	r2, r0
 8025a0a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8025a0c:	6a21      	ldr	r1, [r4, #32]
 8025a0e:	4628      	mov	r0, r5
 8025a10:	47b0      	blx	r6
 8025a12:	1c43      	adds	r3, r0, #1
 8025a14:	89a3      	ldrh	r3, [r4, #12]
 8025a16:	d106      	bne.n	8025a26 <__sflush_r+0x66>
 8025a18:	6829      	ldr	r1, [r5, #0]
 8025a1a:	291d      	cmp	r1, #29
 8025a1c:	d82c      	bhi.n	8025a78 <__sflush_r+0xb8>
 8025a1e:	4a2a      	ldr	r2, [pc, #168]	; (8025ac8 <__sflush_r+0x108>)
 8025a20:	40ca      	lsrs	r2, r1
 8025a22:	07d6      	lsls	r6, r2, #31
 8025a24:	d528      	bpl.n	8025a78 <__sflush_r+0xb8>
 8025a26:	2200      	movs	r2, #0
 8025a28:	6062      	str	r2, [r4, #4]
 8025a2a:	04d9      	lsls	r1, r3, #19
 8025a2c:	6922      	ldr	r2, [r4, #16]
 8025a2e:	6022      	str	r2, [r4, #0]
 8025a30:	d504      	bpl.n	8025a3c <__sflush_r+0x7c>
 8025a32:	1c42      	adds	r2, r0, #1
 8025a34:	d101      	bne.n	8025a3a <__sflush_r+0x7a>
 8025a36:	682b      	ldr	r3, [r5, #0]
 8025a38:	b903      	cbnz	r3, 8025a3c <__sflush_r+0x7c>
 8025a3a:	6560      	str	r0, [r4, #84]	; 0x54
 8025a3c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8025a3e:	602f      	str	r7, [r5, #0]
 8025a40:	2900      	cmp	r1, #0
 8025a42:	d0ca      	beq.n	80259da <__sflush_r+0x1a>
 8025a44:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8025a48:	4299      	cmp	r1, r3
 8025a4a:	d002      	beq.n	8025a52 <__sflush_r+0x92>
 8025a4c:	4628      	mov	r0, r5
 8025a4e:	f7fe ffa1 	bl	8024994 <_free_r>
 8025a52:	2000      	movs	r0, #0
 8025a54:	6360      	str	r0, [r4, #52]	; 0x34
 8025a56:	e7c1      	b.n	80259dc <__sflush_r+0x1c>
 8025a58:	6a21      	ldr	r1, [r4, #32]
 8025a5a:	2301      	movs	r3, #1
 8025a5c:	4628      	mov	r0, r5
 8025a5e:	47b0      	blx	r6
 8025a60:	1c41      	adds	r1, r0, #1
 8025a62:	d1c7      	bne.n	80259f4 <__sflush_r+0x34>
 8025a64:	682b      	ldr	r3, [r5, #0]
 8025a66:	2b00      	cmp	r3, #0
 8025a68:	d0c4      	beq.n	80259f4 <__sflush_r+0x34>
 8025a6a:	2b1d      	cmp	r3, #29
 8025a6c:	d001      	beq.n	8025a72 <__sflush_r+0xb2>
 8025a6e:	2b16      	cmp	r3, #22
 8025a70:	d101      	bne.n	8025a76 <__sflush_r+0xb6>
 8025a72:	602f      	str	r7, [r5, #0]
 8025a74:	e7b1      	b.n	80259da <__sflush_r+0x1a>
 8025a76:	89a3      	ldrh	r3, [r4, #12]
 8025a78:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8025a7c:	81a3      	strh	r3, [r4, #12]
 8025a7e:	e7ad      	b.n	80259dc <__sflush_r+0x1c>
 8025a80:	690f      	ldr	r7, [r1, #16]
 8025a82:	2f00      	cmp	r7, #0
 8025a84:	d0a9      	beq.n	80259da <__sflush_r+0x1a>
 8025a86:	0793      	lsls	r3, r2, #30
 8025a88:	680e      	ldr	r6, [r1, #0]
 8025a8a:	bf08      	it	eq
 8025a8c:	694b      	ldreq	r3, [r1, #20]
 8025a8e:	600f      	str	r7, [r1, #0]
 8025a90:	bf18      	it	ne
 8025a92:	2300      	movne	r3, #0
 8025a94:	eba6 0807 	sub.w	r8, r6, r7
 8025a98:	608b      	str	r3, [r1, #8]
 8025a9a:	f1b8 0f00 	cmp.w	r8, #0
 8025a9e:	dd9c      	ble.n	80259da <__sflush_r+0x1a>
 8025aa0:	6a21      	ldr	r1, [r4, #32]
 8025aa2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8025aa4:	4643      	mov	r3, r8
 8025aa6:	463a      	mov	r2, r7
 8025aa8:	4628      	mov	r0, r5
 8025aaa:	47b0      	blx	r6
 8025aac:	2800      	cmp	r0, #0
 8025aae:	dc06      	bgt.n	8025abe <__sflush_r+0xfe>
 8025ab0:	89a3      	ldrh	r3, [r4, #12]
 8025ab2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8025ab6:	81a3      	strh	r3, [r4, #12]
 8025ab8:	f04f 30ff 	mov.w	r0, #4294967295
 8025abc:	e78e      	b.n	80259dc <__sflush_r+0x1c>
 8025abe:	4407      	add	r7, r0
 8025ac0:	eba8 0800 	sub.w	r8, r8, r0
 8025ac4:	e7e9      	b.n	8025a9a <__sflush_r+0xda>
 8025ac6:	bf00      	nop
 8025ac8:	20400001 	.word	0x20400001

08025acc <_fflush_r>:
 8025acc:	b538      	push	{r3, r4, r5, lr}
 8025ace:	690b      	ldr	r3, [r1, #16]
 8025ad0:	4605      	mov	r5, r0
 8025ad2:	460c      	mov	r4, r1
 8025ad4:	b913      	cbnz	r3, 8025adc <_fflush_r+0x10>
 8025ad6:	2500      	movs	r5, #0
 8025ad8:	4628      	mov	r0, r5
 8025ada:	bd38      	pop	{r3, r4, r5, pc}
 8025adc:	b118      	cbz	r0, 8025ae6 <_fflush_r+0x1a>
 8025ade:	6983      	ldr	r3, [r0, #24]
 8025ae0:	b90b      	cbnz	r3, 8025ae6 <_fflush_r+0x1a>
 8025ae2:	f7fe fd4d 	bl	8024580 <__sinit>
 8025ae6:	4b14      	ldr	r3, [pc, #80]	; (8025b38 <_fflush_r+0x6c>)
 8025ae8:	429c      	cmp	r4, r3
 8025aea:	d11b      	bne.n	8025b24 <_fflush_r+0x58>
 8025aec:	686c      	ldr	r4, [r5, #4]
 8025aee:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8025af2:	2b00      	cmp	r3, #0
 8025af4:	d0ef      	beq.n	8025ad6 <_fflush_r+0xa>
 8025af6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8025af8:	07d0      	lsls	r0, r2, #31
 8025afa:	d404      	bmi.n	8025b06 <_fflush_r+0x3a>
 8025afc:	0599      	lsls	r1, r3, #22
 8025afe:	d402      	bmi.n	8025b06 <_fflush_r+0x3a>
 8025b00:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8025b02:	f7fe ff1d 	bl	8024940 <__retarget_lock_acquire_recursive>
 8025b06:	4628      	mov	r0, r5
 8025b08:	4621      	mov	r1, r4
 8025b0a:	f7ff ff59 	bl	80259c0 <__sflush_r>
 8025b0e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8025b10:	07da      	lsls	r2, r3, #31
 8025b12:	4605      	mov	r5, r0
 8025b14:	d4e0      	bmi.n	8025ad8 <_fflush_r+0xc>
 8025b16:	89a3      	ldrh	r3, [r4, #12]
 8025b18:	059b      	lsls	r3, r3, #22
 8025b1a:	d4dd      	bmi.n	8025ad8 <_fflush_r+0xc>
 8025b1c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8025b1e:	f7fe ff11 	bl	8024944 <__retarget_lock_release_recursive>
 8025b22:	e7d9      	b.n	8025ad8 <_fflush_r+0xc>
 8025b24:	4b05      	ldr	r3, [pc, #20]	; (8025b3c <_fflush_r+0x70>)
 8025b26:	429c      	cmp	r4, r3
 8025b28:	d101      	bne.n	8025b2e <_fflush_r+0x62>
 8025b2a:	68ac      	ldr	r4, [r5, #8]
 8025b2c:	e7df      	b.n	8025aee <_fflush_r+0x22>
 8025b2e:	4b04      	ldr	r3, [pc, #16]	; (8025b40 <_fflush_r+0x74>)
 8025b30:	429c      	cmp	r4, r3
 8025b32:	bf08      	it	eq
 8025b34:	68ec      	ldreq	r4, [r5, #12]
 8025b36:	e7da      	b.n	8025aee <_fflush_r+0x22>
 8025b38:	0802b71c 	.word	0x0802b71c
 8025b3c:	0802b73c 	.word	0x0802b73c
 8025b40:	0802b6fc 	.word	0x0802b6fc

08025b44 <_findenv_r>:
 8025b44:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025b48:	4607      	mov	r7, r0
 8025b4a:	4689      	mov	r9, r1
 8025b4c:	4616      	mov	r6, r2
 8025b4e:	f000 f9c7 	bl	8025ee0 <__env_lock>
 8025b52:	4b18      	ldr	r3, [pc, #96]	; (8025bb4 <_findenv_r+0x70>)
 8025b54:	681c      	ldr	r4, [r3, #0]
 8025b56:	469a      	mov	sl, r3
 8025b58:	b134      	cbz	r4, 8025b68 <_findenv_r+0x24>
 8025b5a:	464b      	mov	r3, r9
 8025b5c:	4698      	mov	r8, r3
 8025b5e:	f813 1b01 	ldrb.w	r1, [r3], #1
 8025b62:	b139      	cbz	r1, 8025b74 <_findenv_r+0x30>
 8025b64:	293d      	cmp	r1, #61	; 0x3d
 8025b66:	d1f9      	bne.n	8025b5c <_findenv_r+0x18>
 8025b68:	4638      	mov	r0, r7
 8025b6a:	f000 f9bf 	bl	8025eec <__env_unlock>
 8025b6e:	2000      	movs	r0, #0
 8025b70:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025b74:	eba8 0809 	sub.w	r8, r8, r9
 8025b78:	46a3      	mov	fp, r4
 8025b7a:	f854 0b04 	ldr.w	r0, [r4], #4
 8025b7e:	2800      	cmp	r0, #0
 8025b80:	d0f2      	beq.n	8025b68 <_findenv_r+0x24>
 8025b82:	4642      	mov	r2, r8
 8025b84:	4649      	mov	r1, r9
 8025b86:	f000 f911 	bl	8025dac <strncmp>
 8025b8a:	2800      	cmp	r0, #0
 8025b8c:	d1f4      	bne.n	8025b78 <_findenv_r+0x34>
 8025b8e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8025b92:	eb03 0508 	add.w	r5, r3, r8
 8025b96:	f813 3008 	ldrb.w	r3, [r3, r8]
 8025b9a:	2b3d      	cmp	r3, #61	; 0x3d
 8025b9c:	d1ec      	bne.n	8025b78 <_findenv_r+0x34>
 8025b9e:	f8da 3000 	ldr.w	r3, [sl]
 8025ba2:	ebab 0303 	sub.w	r3, fp, r3
 8025ba6:	109b      	asrs	r3, r3, #2
 8025ba8:	4638      	mov	r0, r7
 8025baa:	6033      	str	r3, [r6, #0]
 8025bac:	f000 f99e 	bl	8025eec <__env_unlock>
 8025bb0:	1c68      	adds	r0, r5, #1
 8025bb2:	e7dd      	b.n	8025b70 <_findenv_r+0x2c>
 8025bb4:	20000020 	.word	0x20000020

08025bb8 <_getenv_r>:
 8025bb8:	b507      	push	{r0, r1, r2, lr}
 8025bba:	aa01      	add	r2, sp, #4
 8025bbc:	f7ff ffc2 	bl	8025b44 <_findenv_r>
 8025bc0:	b003      	add	sp, #12
 8025bc2:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08025bc8 <__gettzinfo>:
 8025bc8:	4800      	ldr	r0, [pc, #0]	; (8025bcc <__gettzinfo+0x4>)
 8025bca:	4770      	bx	lr
 8025bcc:	20000150 	.word	0x20000150

08025bd0 <_lseek_r>:
 8025bd0:	b538      	push	{r3, r4, r5, lr}
 8025bd2:	4d07      	ldr	r5, [pc, #28]	; (8025bf0 <_lseek_r+0x20>)
 8025bd4:	4604      	mov	r4, r0
 8025bd6:	4608      	mov	r0, r1
 8025bd8:	4611      	mov	r1, r2
 8025bda:	2200      	movs	r2, #0
 8025bdc:	602a      	str	r2, [r5, #0]
 8025bde:	461a      	mov	r2, r3
 8025be0:	f7dc f9ce 	bl	8001f80 <_lseek>
 8025be4:	1c43      	adds	r3, r0, #1
 8025be6:	d102      	bne.n	8025bee <_lseek_r+0x1e>
 8025be8:	682b      	ldr	r3, [r5, #0]
 8025bea:	b103      	cbz	r3, 8025bee <_lseek_r+0x1e>
 8025bec:	6023      	str	r3, [r4, #0]
 8025bee:	bd38      	pop	{r3, r4, r5, pc}
 8025bf0:	20021030 	.word	0x20021030

08025bf4 <__swhatbuf_r>:
 8025bf4:	b570      	push	{r4, r5, r6, lr}
 8025bf6:	460e      	mov	r6, r1
 8025bf8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025bfc:	2900      	cmp	r1, #0
 8025bfe:	b096      	sub	sp, #88	; 0x58
 8025c00:	4614      	mov	r4, r2
 8025c02:	461d      	mov	r5, r3
 8025c04:	da07      	bge.n	8025c16 <__swhatbuf_r+0x22>
 8025c06:	2300      	movs	r3, #0
 8025c08:	602b      	str	r3, [r5, #0]
 8025c0a:	89b3      	ldrh	r3, [r6, #12]
 8025c0c:	061a      	lsls	r2, r3, #24
 8025c0e:	d410      	bmi.n	8025c32 <__swhatbuf_r+0x3e>
 8025c10:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8025c14:	e00e      	b.n	8025c34 <__swhatbuf_r+0x40>
 8025c16:	466a      	mov	r2, sp
 8025c18:	f000 f96e 	bl	8025ef8 <_fstat_r>
 8025c1c:	2800      	cmp	r0, #0
 8025c1e:	dbf2      	blt.n	8025c06 <__swhatbuf_r+0x12>
 8025c20:	9a01      	ldr	r2, [sp, #4]
 8025c22:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8025c26:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8025c2a:	425a      	negs	r2, r3
 8025c2c:	415a      	adcs	r2, r3
 8025c2e:	602a      	str	r2, [r5, #0]
 8025c30:	e7ee      	b.n	8025c10 <__swhatbuf_r+0x1c>
 8025c32:	2340      	movs	r3, #64	; 0x40
 8025c34:	2000      	movs	r0, #0
 8025c36:	6023      	str	r3, [r4, #0]
 8025c38:	b016      	add	sp, #88	; 0x58
 8025c3a:	bd70      	pop	{r4, r5, r6, pc}

08025c3c <__smakebuf_r>:
 8025c3c:	898b      	ldrh	r3, [r1, #12]
 8025c3e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8025c40:	079d      	lsls	r5, r3, #30
 8025c42:	4606      	mov	r6, r0
 8025c44:	460c      	mov	r4, r1
 8025c46:	d507      	bpl.n	8025c58 <__smakebuf_r+0x1c>
 8025c48:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8025c4c:	6023      	str	r3, [r4, #0]
 8025c4e:	6123      	str	r3, [r4, #16]
 8025c50:	2301      	movs	r3, #1
 8025c52:	6163      	str	r3, [r4, #20]
 8025c54:	b002      	add	sp, #8
 8025c56:	bd70      	pop	{r4, r5, r6, pc}
 8025c58:	ab01      	add	r3, sp, #4
 8025c5a:	466a      	mov	r2, sp
 8025c5c:	f7ff ffca 	bl	8025bf4 <__swhatbuf_r>
 8025c60:	9900      	ldr	r1, [sp, #0]
 8025c62:	4605      	mov	r5, r0
 8025c64:	4630      	mov	r0, r6
 8025c66:	f7fe fee5 	bl	8024a34 <_malloc_r>
 8025c6a:	b948      	cbnz	r0, 8025c80 <__smakebuf_r+0x44>
 8025c6c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8025c70:	059a      	lsls	r2, r3, #22
 8025c72:	d4ef      	bmi.n	8025c54 <__smakebuf_r+0x18>
 8025c74:	f023 0303 	bic.w	r3, r3, #3
 8025c78:	f043 0302 	orr.w	r3, r3, #2
 8025c7c:	81a3      	strh	r3, [r4, #12]
 8025c7e:	e7e3      	b.n	8025c48 <__smakebuf_r+0xc>
 8025c80:	4b0d      	ldr	r3, [pc, #52]	; (8025cb8 <__smakebuf_r+0x7c>)
 8025c82:	62b3      	str	r3, [r6, #40]	; 0x28
 8025c84:	89a3      	ldrh	r3, [r4, #12]
 8025c86:	6020      	str	r0, [r4, #0]
 8025c88:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8025c8c:	81a3      	strh	r3, [r4, #12]
 8025c8e:	9b00      	ldr	r3, [sp, #0]
 8025c90:	6163      	str	r3, [r4, #20]
 8025c92:	9b01      	ldr	r3, [sp, #4]
 8025c94:	6120      	str	r0, [r4, #16]
 8025c96:	b15b      	cbz	r3, 8025cb0 <__smakebuf_r+0x74>
 8025c98:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8025c9c:	4630      	mov	r0, r6
 8025c9e:	f000 f93d 	bl	8025f1c <_isatty_r>
 8025ca2:	b128      	cbz	r0, 8025cb0 <__smakebuf_r+0x74>
 8025ca4:	89a3      	ldrh	r3, [r4, #12]
 8025ca6:	f023 0303 	bic.w	r3, r3, #3
 8025caa:	f043 0301 	orr.w	r3, r3, #1
 8025cae:	81a3      	strh	r3, [r4, #12]
 8025cb0:	89a0      	ldrh	r0, [r4, #12]
 8025cb2:	4305      	orrs	r5, r0
 8025cb4:	81a5      	strh	r5, [r4, #12]
 8025cb6:	e7cd      	b.n	8025c54 <__smakebuf_r+0x18>
 8025cb8:	08024519 	.word	0x08024519

08025cbc <__malloc_lock>:
 8025cbc:	4801      	ldr	r0, [pc, #4]	; (8025cc4 <__malloc_lock+0x8>)
 8025cbe:	f7fe be3f 	b.w	8024940 <__retarget_lock_acquire_recursive>
 8025cc2:	bf00      	nop
 8025cc4:	20021028 	.word	0x20021028

08025cc8 <__malloc_unlock>:
 8025cc8:	4801      	ldr	r0, [pc, #4]	; (8025cd0 <__malloc_unlock+0x8>)
 8025cca:	f7fe be3b 	b.w	8024944 <__retarget_lock_release_recursive>
 8025cce:	bf00      	nop
 8025cd0:	20021028 	.word	0x20021028

08025cd4 <_realloc_r>:
 8025cd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8025cd6:	4607      	mov	r7, r0
 8025cd8:	4614      	mov	r4, r2
 8025cda:	460e      	mov	r6, r1
 8025cdc:	b921      	cbnz	r1, 8025ce8 <_realloc_r+0x14>
 8025cde:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8025ce2:	4611      	mov	r1, r2
 8025ce4:	f7fe bea6 	b.w	8024a34 <_malloc_r>
 8025ce8:	b922      	cbnz	r2, 8025cf4 <_realloc_r+0x20>
 8025cea:	f7fe fe53 	bl	8024994 <_free_r>
 8025cee:	4625      	mov	r5, r4
 8025cf0:	4628      	mov	r0, r5
 8025cf2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8025cf4:	f000 f922 	bl	8025f3c <_malloc_usable_size_r>
 8025cf8:	42a0      	cmp	r0, r4
 8025cfa:	d20f      	bcs.n	8025d1c <_realloc_r+0x48>
 8025cfc:	4621      	mov	r1, r4
 8025cfe:	4638      	mov	r0, r7
 8025d00:	f7fe fe98 	bl	8024a34 <_malloc_r>
 8025d04:	4605      	mov	r5, r0
 8025d06:	2800      	cmp	r0, #0
 8025d08:	d0f2      	beq.n	8025cf0 <_realloc_r+0x1c>
 8025d0a:	4631      	mov	r1, r6
 8025d0c:	4622      	mov	r2, r4
 8025d0e:	f7fe fe2b 	bl	8024968 <memcpy>
 8025d12:	4631      	mov	r1, r6
 8025d14:	4638      	mov	r0, r7
 8025d16:	f7fe fe3d 	bl	8024994 <_free_r>
 8025d1a:	e7e9      	b.n	8025cf0 <_realloc_r+0x1c>
 8025d1c:	4635      	mov	r5, r6
 8025d1e:	e7e7      	b.n	8025cf0 <_realloc_r+0x1c>

08025d20 <_read_r>:
 8025d20:	b538      	push	{r3, r4, r5, lr}
 8025d22:	4d07      	ldr	r5, [pc, #28]	; (8025d40 <_read_r+0x20>)
 8025d24:	4604      	mov	r4, r0
 8025d26:	4608      	mov	r0, r1
 8025d28:	4611      	mov	r1, r2
 8025d2a:	2200      	movs	r2, #0
 8025d2c:	602a      	str	r2, [r5, #0]
 8025d2e:	461a      	mov	r2, r3
 8025d30:	f7dc f902 	bl	8001f38 <_read>
 8025d34:	1c43      	adds	r3, r0, #1
 8025d36:	d102      	bne.n	8025d3e <_read_r+0x1e>
 8025d38:	682b      	ldr	r3, [r5, #0]
 8025d3a:	b103      	cbz	r3, 8025d3e <_read_r+0x1e>
 8025d3c:	6023      	str	r3, [r4, #0]
 8025d3e:	bd38      	pop	{r3, r4, r5, pc}
 8025d40:	20021030 	.word	0x20021030

08025d44 <siscanf>:
 8025d44:	b40e      	push	{r1, r2, r3}
 8025d46:	b510      	push	{r4, lr}
 8025d48:	b09f      	sub	sp, #124	; 0x7c
 8025d4a:	ac21      	add	r4, sp, #132	; 0x84
 8025d4c:	f44f 7101 	mov.w	r1, #516	; 0x204
 8025d50:	f854 2b04 	ldr.w	r2, [r4], #4
 8025d54:	9201      	str	r2, [sp, #4]
 8025d56:	f8ad 101c 	strh.w	r1, [sp, #28]
 8025d5a:	9004      	str	r0, [sp, #16]
 8025d5c:	9008      	str	r0, [sp, #32]
 8025d5e:	f7da faa9 	bl	80002b4 <strlen>
 8025d62:	4b0c      	ldr	r3, [pc, #48]	; (8025d94 <siscanf+0x50>)
 8025d64:	9005      	str	r0, [sp, #20]
 8025d66:	9009      	str	r0, [sp, #36]	; 0x24
 8025d68:	930d      	str	r3, [sp, #52]	; 0x34
 8025d6a:	480b      	ldr	r0, [pc, #44]	; (8025d98 <siscanf+0x54>)
 8025d6c:	9a01      	ldr	r2, [sp, #4]
 8025d6e:	6800      	ldr	r0, [r0, #0]
 8025d70:	9403      	str	r4, [sp, #12]
 8025d72:	2300      	movs	r3, #0
 8025d74:	9311      	str	r3, [sp, #68]	; 0x44
 8025d76:	9316      	str	r3, [sp, #88]	; 0x58
 8025d78:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8025d7c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8025d80:	a904      	add	r1, sp, #16
 8025d82:	4623      	mov	r3, r4
 8025d84:	f000 f93c 	bl	8026000 <__ssvfiscanf_r>
 8025d88:	b01f      	add	sp, #124	; 0x7c
 8025d8a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025d8e:	b003      	add	sp, #12
 8025d90:	4770      	bx	lr
 8025d92:	bf00      	nop
 8025d94:	08025263 	.word	0x08025263
 8025d98:	200000dc 	.word	0x200000dc

08025d9c <strcpy>:
 8025d9c:	4603      	mov	r3, r0
 8025d9e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8025da2:	f803 2b01 	strb.w	r2, [r3], #1
 8025da6:	2a00      	cmp	r2, #0
 8025da8:	d1f9      	bne.n	8025d9e <strcpy+0x2>
 8025daa:	4770      	bx	lr

08025dac <strncmp>:
 8025dac:	b510      	push	{r4, lr}
 8025dae:	b16a      	cbz	r2, 8025dcc <strncmp+0x20>
 8025db0:	3901      	subs	r1, #1
 8025db2:	1884      	adds	r4, r0, r2
 8025db4:	f810 3b01 	ldrb.w	r3, [r0], #1
 8025db8:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8025dbc:	4293      	cmp	r3, r2
 8025dbe:	d103      	bne.n	8025dc8 <strncmp+0x1c>
 8025dc0:	42a0      	cmp	r0, r4
 8025dc2:	d001      	beq.n	8025dc8 <strncmp+0x1c>
 8025dc4:	2b00      	cmp	r3, #0
 8025dc6:	d1f5      	bne.n	8025db4 <strncmp+0x8>
 8025dc8:	1a98      	subs	r0, r3, r2
 8025dca:	bd10      	pop	{r4, pc}
 8025dcc:	4610      	mov	r0, r2
 8025dce:	e7fc      	b.n	8025dca <strncmp+0x1e>

08025dd0 <_strtoul_l.isra.0>:
 8025dd0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8025dd4:	4e3b      	ldr	r6, [pc, #236]	; (8025ec4 <_strtoul_l.isra.0+0xf4>)
 8025dd6:	4686      	mov	lr, r0
 8025dd8:	468c      	mov	ip, r1
 8025dda:	4660      	mov	r0, ip
 8025ddc:	f81c 4b01 	ldrb.w	r4, [ip], #1
 8025de0:	5da5      	ldrb	r5, [r4, r6]
 8025de2:	f015 0508 	ands.w	r5, r5, #8
 8025de6:	d1f8      	bne.n	8025dda <_strtoul_l.isra.0+0xa>
 8025de8:	2c2d      	cmp	r4, #45	; 0x2d
 8025dea:	d134      	bne.n	8025e56 <_strtoul_l.isra.0+0x86>
 8025dec:	f89c 4000 	ldrb.w	r4, [ip]
 8025df0:	f04f 0801 	mov.w	r8, #1
 8025df4:	f100 0c02 	add.w	ip, r0, #2
 8025df8:	2b00      	cmp	r3, #0
 8025dfa:	d05e      	beq.n	8025eba <_strtoul_l.isra.0+0xea>
 8025dfc:	2b10      	cmp	r3, #16
 8025dfe:	d10c      	bne.n	8025e1a <_strtoul_l.isra.0+0x4a>
 8025e00:	2c30      	cmp	r4, #48	; 0x30
 8025e02:	d10a      	bne.n	8025e1a <_strtoul_l.isra.0+0x4a>
 8025e04:	f89c 0000 	ldrb.w	r0, [ip]
 8025e08:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 8025e0c:	2858      	cmp	r0, #88	; 0x58
 8025e0e:	d14f      	bne.n	8025eb0 <_strtoul_l.isra.0+0xe0>
 8025e10:	f89c 4001 	ldrb.w	r4, [ip, #1]
 8025e14:	2310      	movs	r3, #16
 8025e16:	f10c 0c02 	add.w	ip, ip, #2
 8025e1a:	f04f 37ff 	mov.w	r7, #4294967295
 8025e1e:	2500      	movs	r5, #0
 8025e20:	fbb7 f7f3 	udiv	r7, r7, r3
 8025e24:	fb03 f907 	mul.w	r9, r3, r7
 8025e28:	ea6f 0909 	mvn.w	r9, r9
 8025e2c:	4628      	mov	r0, r5
 8025e2e:	f1a4 0630 	sub.w	r6, r4, #48	; 0x30
 8025e32:	2e09      	cmp	r6, #9
 8025e34:	d818      	bhi.n	8025e68 <_strtoul_l.isra.0+0x98>
 8025e36:	4634      	mov	r4, r6
 8025e38:	42a3      	cmp	r3, r4
 8025e3a:	dd24      	ble.n	8025e86 <_strtoul_l.isra.0+0xb6>
 8025e3c:	2d00      	cmp	r5, #0
 8025e3e:	db1f      	blt.n	8025e80 <_strtoul_l.isra.0+0xb0>
 8025e40:	4287      	cmp	r7, r0
 8025e42:	d31d      	bcc.n	8025e80 <_strtoul_l.isra.0+0xb0>
 8025e44:	d101      	bne.n	8025e4a <_strtoul_l.isra.0+0x7a>
 8025e46:	45a1      	cmp	r9, r4
 8025e48:	db1a      	blt.n	8025e80 <_strtoul_l.isra.0+0xb0>
 8025e4a:	fb00 4003 	mla	r0, r0, r3, r4
 8025e4e:	2501      	movs	r5, #1
 8025e50:	f81c 4b01 	ldrb.w	r4, [ip], #1
 8025e54:	e7eb      	b.n	8025e2e <_strtoul_l.isra.0+0x5e>
 8025e56:	2c2b      	cmp	r4, #43	; 0x2b
 8025e58:	bf08      	it	eq
 8025e5a:	f89c 4000 	ldrbeq.w	r4, [ip]
 8025e5e:	46a8      	mov	r8, r5
 8025e60:	bf08      	it	eq
 8025e62:	f100 0c02 	addeq.w	ip, r0, #2
 8025e66:	e7c7      	b.n	8025df8 <_strtoul_l.isra.0+0x28>
 8025e68:	f1a4 0641 	sub.w	r6, r4, #65	; 0x41
 8025e6c:	2e19      	cmp	r6, #25
 8025e6e:	d801      	bhi.n	8025e74 <_strtoul_l.isra.0+0xa4>
 8025e70:	3c37      	subs	r4, #55	; 0x37
 8025e72:	e7e1      	b.n	8025e38 <_strtoul_l.isra.0+0x68>
 8025e74:	f1a4 0661 	sub.w	r6, r4, #97	; 0x61
 8025e78:	2e19      	cmp	r6, #25
 8025e7a:	d804      	bhi.n	8025e86 <_strtoul_l.isra.0+0xb6>
 8025e7c:	3c57      	subs	r4, #87	; 0x57
 8025e7e:	e7db      	b.n	8025e38 <_strtoul_l.isra.0+0x68>
 8025e80:	f04f 35ff 	mov.w	r5, #4294967295
 8025e84:	e7e4      	b.n	8025e50 <_strtoul_l.isra.0+0x80>
 8025e86:	2d00      	cmp	r5, #0
 8025e88:	da07      	bge.n	8025e9a <_strtoul_l.isra.0+0xca>
 8025e8a:	2322      	movs	r3, #34	; 0x22
 8025e8c:	f8ce 3000 	str.w	r3, [lr]
 8025e90:	f04f 30ff 	mov.w	r0, #4294967295
 8025e94:	b942      	cbnz	r2, 8025ea8 <_strtoul_l.isra.0+0xd8>
 8025e96:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8025e9a:	f1b8 0f00 	cmp.w	r8, #0
 8025e9e:	d000      	beq.n	8025ea2 <_strtoul_l.isra.0+0xd2>
 8025ea0:	4240      	negs	r0, r0
 8025ea2:	2a00      	cmp	r2, #0
 8025ea4:	d0f7      	beq.n	8025e96 <_strtoul_l.isra.0+0xc6>
 8025ea6:	b10d      	cbz	r5, 8025eac <_strtoul_l.isra.0+0xdc>
 8025ea8:	f10c 31ff 	add.w	r1, ip, #4294967295
 8025eac:	6011      	str	r1, [r2, #0]
 8025eae:	e7f2      	b.n	8025e96 <_strtoul_l.isra.0+0xc6>
 8025eb0:	2430      	movs	r4, #48	; 0x30
 8025eb2:	2b00      	cmp	r3, #0
 8025eb4:	d1b1      	bne.n	8025e1a <_strtoul_l.isra.0+0x4a>
 8025eb6:	2308      	movs	r3, #8
 8025eb8:	e7af      	b.n	8025e1a <_strtoul_l.isra.0+0x4a>
 8025eba:	2c30      	cmp	r4, #48	; 0x30
 8025ebc:	d0a2      	beq.n	8025e04 <_strtoul_l.isra.0+0x34>
 8025ebe:	230a      	movs	r3, #10
 8025ec0:	e7ab      	b.n	8025e1a <_strtoul_l.isra.0+0x4a>
 8025ec2:	bf00      	nop
 8025ec4:	0802b835 	.word	0x0802b835

08025ec8 <_strtoul_r>:
 8025ec8:	f7ff bf82 	b.w	8025dd0 <_strtoul_l.isra.0>

08025ecc <strtoul>:
 8025ecc:	4613      	mov	r3, r2
 8025ece:	460a      	mov	r2, r1
 8025ed0:	4601      	mov	r1, r0
 8025ed2:	4802      	ldr	r0, [pc, #8]	; (8025edc <strtoul+0x10>)
 8025ed4:	6800      	ldr	r0, [r0, #0]
 8025ed6:	f7ff bf7b 	b.w	8025dd0 <_strtoul_l.isra.0>
 8025eda:	bf00      	nop
 8025edc:	200000dc 	.word	0x200000dc

08025ee0 <__env_lock>:
 8025ee0:	4801      	ldr	r0, [pc, #4]	; (8025ee8 <__env_lock+0x8>)
 8025ee2:	f7fe bd2d 	b.w	8024940 <__retarget_lock_acquire_recursive>
 8025ee6:	bf00      	nop
 8025ee8:	20021026 	.word	0x20021026

08025eec <__env_unlock>:
 8025eec:	4801      	ldr	r0, [pc, #4]	; (8025ef4 <__env_unlock+0x8>)
 8025eee:	f7fe bd29 	b.w	8024944 <__retarget_lock_release_recursive>
 8025ef2:	bf00      	nop
 8025ef4:	20021026 	.word	0x20021026

08025ef8 <_fstat_r>:
 8025ef8:	b538      	push	{r3, r4, r5, lr}
 8025efa:	4d07      	ldr	r5, [pc, #28]	; (8025f18 <_fstat_r+0x20>)
 8025efc:	2300      	movs	r3, #0
 8025efe:	4604      	mov	r4, r0
 8025f00:	4608      	mov	r0, r1
 8025f02:	4611      	mov	r1, r2
 8025f04:	602b      	str	r3, [r5, #0]
 8025f06:	f7dc f834 	bl	8001f72 <_fstat>
 8025f0a:	1c43      	adds	r3, r0, #1
 8025f0c:	d102      	bne.n	8025f14 <_fstat_r+0x1c>
 8025f0e:	682b      	ldr	r3, [r5, #0]
 8025f10:	b103      	cbz	r3, 8025f14 <_fstat_r+0x1c>
 8025f12:	6023      	str	r3, [r4, #0]
 8025f14:	bd38      	pop	{r3, r4, r5, pc}
 8025f16:	bf00      	nop
 8025f18:	20021030 	.word	0x20021030

08025f1c <_isatty_r>:
 8025f1c:	b538      	push	{r3, r4, r5, lr}
 8025f1e:	4d06      	ldr	r5, [pc, #24]	; (8025f38 <_isatty_r+0x1c>)
 8025f20:	2300      	movs	r3, #0
 8025f22:	4604      	mov	r4, r0
 8025f24:	4608      	mov	r0, r1
 8025f26:	602b      	str	r3, [r5, #0]
 8025f28:	f7dc f828 	bl	8001f7c <_isatty>
 8025f2c:	1c43      	adds	r3, r0, #1
 8025f2e:	d102      	bne.n	8025f36 <_isatty_r+0x1a>
 8025f30:	682b      	ldr	r3, [r5, #0]
 8025f32:	b103      	cbz	r3, 8025f36 <_isatty_r+0x1a>
 8025f34:	6023      	str	r3, [r4, #0]
 8025f36:	bd38      	pop	{r3, r4, r5, pc}
 8025f38:	20021030 	.word	0x20021030

08025f3c <_malloc_usable_size_r>:
 8025f3c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8025f40:	1f18      	subs	r0, r3, #4
 8025f42:	2b00      	cmp	r3, #0
 8025f44:	bfbc      	itt	lt
 8025f46:	580b      	ldrlt	r3, [r1, r0]
 8025f48:	18c0      	addlt	r0, r0, r3
 8025f4a:	4770      	bx	lr

08025f4c <_sungetc_r>:
 8025f4c:	b538      	push	{r3, r4, r5, lr}
 8025f4e:	1c4b      	adds	r3, r1, #1
 8025f50:	4614      	mov	r4, r2
 8025f52:	d103      	bne.n	8025f5c <_sungetc_r+0x10>
 8025f54:	f04f 35ff 	mov.w	r5, #4294967295
 8025f58:	4628      	mov	r0, r5
 8025f5a:	bd38      	pop	{r3, r4, r5, pc}
 8025f5c:	8993      	ldrh	r3, [r2, #12]
 8025f5e:	f023 0320 	bic.w	r3, r3, #32
 8025f62:	8193      	strh	r3, [r2, #12]
 8025f64:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8025f66:	6852      	ldr	r2, [r2, #4]
 8025f68:	b2cd      	uxtb	r5, r1
 8025f6a:	b18b      	cbz	r3, 8025f90 <_sungetc_r+0x44>
 8025f6c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8025f6e:	4293      	cmp	r3, r2
 8025f70:	dd08      	ble.n	8025f84 <_sungetc_r+0x38>
 8025f72:	6823      	ldr	r3, [r4, #0]
 8025f74:	1e5a      	subs	r2, r3, #1
 8025f76:	6022      	str	r2, [r4, #0]
 8025f78:	f803 5c01 	strb.w	r5, [r3, #-1]
 8025f7c:	6863      	ldr	r3, [r4, #4]
 8025f7e:	3301      	adds	r3, #1
 8025f80:	6063      	str	r3, [r4, #4]
 8025f82:	e7e9      	b.n	8025f58 <_sungetc_r+0xc>
 8025f84:	4621      	mov	r1, r4
 8025f86:	f000 fbbf 	bl	8026708 <__submore>
 8025f8a:	2800      	cmp	r0, #0
 8025f8c:	d0f1      	beq.n	8025f72 <_sungetc_r+0x26>
 8025f8e:	e7e1      	b.n	8025f54 <_sungetc_r+0x8>
 8025f90:	6921      	ldr	r1, [r4, #16]
 8025f92:	6823      	ldr	r3, [r4, #0]
 8025f94:	b151      	cbz	r1, 8025fac <_sungetc_r+0x60>
 8025f96:	4299      	cmp	r1, r3
 8025f98:	d208      	bcs.n	8025fac <_sungetc_r+0x60>
 8025f9a:	f813 1c01 	ldrb.w	r1, [r3, #-1]
 8025f9e:	42a9      	cmp	r1, r5
 8025fa0:	d104      	bne.n	8025fac <_sungetc_r+0x60>
 8025fa2:	3b01      	subs	r3, #1
 8025fa4:	3201      	adds	r2, #1
 8025fa6:	6023      	str	r3, [r4, #0]
 8025fa8:	6062      	str	r2, [r4, #4]
 8025faa:	e7d5      	b.n	8025f58 <_sungetc_r+0xc>
 8025fac:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
 8025fb0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8025fb4:	6363      	str	r3, [r4, #52]	; 0x34
 8025fb6:	2303      	movs	r3, #3
 8025fb8:	63a3      	str	r3, [r4, #56]	; 0x38
 8025fba:	4623      	mov	r3, r4
 8025fbc:	f803 5f46 	strb.w	r5, [r3, #70]!
 8025fc0:	6023      	str	r3, [r4, #0]
 8025fc2:	2301      	movs	r3, #1
 8025fc4:	e7dc      	b.n	8025f80 <_sungetc_r+0x34>

08025fc6 <__ssrefill_r>:
 8025fc6:	b510      	push	{r4, lr}
 8025fc8:	460c      	mov	r4, r1
 8025fca:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8025fcc:	b169      	cbz	r1, 8025fea <__ssrefill_r+0x24>
 8025fce:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8025fd2:	4299      	cmp	r1, r3
 8025fd4:	d001      	beq.n	8025fda <__ssrefill_r+0x14>
 8025fd6:	f7fe fcdd 	bl	8024994 <_free_r>
 8025fda:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8025fdc:	6063      	str	r3, [r4, #4]
 8025fde:	2000      	movs	r0, #0
 8025fe0:	6360      	str	r0, [r4, #52]	; 0x34
 8025fe2:	b113      	cbz	r3, 8025fea <__ssrefill_r+0x24>
 8025fe4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8025fe6:	6023      	str	r3, [r4, #0]
 8025fe8:	bd10      	pop	{r4, pc}
 8025fea:	6923      	ldr	r3, [r4, #16]
 8025fec:	6023      	str	r3, [r4, #0]
 8025fee:	2300      	movs	r3, #0
 8025ff0:	6063      	str	r3, [r4, #4]
 8025ff2:	89a3      	ldrh	r3, [r4, #12]
 8025ff4:	f043 0320 	orr.w	r3, r3, #32
 8025ff8:	81a3      	strh	r3, [r4, #12]
 8025ffa:	f04f 30ff 	mov.w	r0, #4294967295
 8025ffe:	e7f3      	b.n	8025fe8 <__ssrefill_r+0x22>

08026000 <__ssvfiscanf_r>:
 8026000:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026004:	460c      	mov	r4, r1
 8026006:	f5ad 7d23 	sub.w	sp, sp, #652	; 0x28c
 802600a:	2100      	movs	r1, #0
 802600c:	e9cd 1144 	strd	r1, r1, [sp, #272]	; 0x110
 8026010:	49b2      	ldr	r1, [pc, #712]	; (80262dc <__ssvfiscanf_r+0x2dc>)
 8026012:	91a0      	str	r1, [sp, #640]	; 0x280
 8026014:	f10d 0804 	add.w	r8, sp, #4
 8026018:	49b1      	ldr	r1, [pc, #708]	; (80262e0 <__ssvfiscanf_r+0x2e0>)
 802601a:	4fb2      	ldr	r7, [pc, #712]	; (80262e4 <__ssvfiscanf_r+0x2e4>)
 802601c:	f8df 92c8 	ldr.w	r9, [pc, #712]	; 80262e8 <__ssvfiscanf_r+0x2e8>
 8026020:	f8cd 8118 	str.w	r8, [sp, #280]	; 0x118
 8026024:	4606      	mov	r6, r0
 8026026:	91a1      	str	r1, [sp, #644]	; 0x284
 8026028:	9300      	str	r3, [sp, #0]
 802602a:	f892 a000 	ldrb.w	sl, [r2]
 802602e:	f1ba 0f00 	cmp.w	sl, #0
 8026032:	f000 8151 	beq.w	80262d8 <__ssvfiscanf_r+0x2d8>
 8026036:	f81a 3007 	ldrb.w	r3, [sl, r7]
 802603a:	f013 0308 	ands.w	r3, r3, #8
 802603e:	f102 0501 	add.w	r5, r2, #1
 8026042:	d019      	beq.n	8026078 <__ssvfiscanf_r+0x78>
 8026044:	6863      	ldr	r3, [r4, #4]
 8026046:	2b00      	cmp	r3, #0
 8026048:	dd0f      	ble.n	802606a <__ssvfiscanf_r+0x6a>
 802604a:	6823      	ldr	r3, [r4, #0]
 802604c:	781a      	ldrb	r2, [r3, #0]
 802604e:	5cba      	ldrb	r2, [r7, r2]
 8026050:	0712      	lsls	r2, r2, #28
 8026052:	d401      	bmi.n	8026058 <__ssvfiscanf_r+0x58>
 8026054:	462a      	mov	r2, r5
 8026056:	e7e8      	b.n	802602a <__ssvfiscanf_r+0x2a>
 8026058:	9a45      	ldr	r2, [sp, #276]	; 0x114
 802605a:	3201      	adds	r2, #1
 802605c:	9245      	str	r2, [sp, #276]	; 0x114
 802605e:	6862      	ldr	r2, [r4, #4]
 8026060:	3301      	adds	r3, #1
 8026062:	3a01      	subs	r2, #1
 8026064:	6062      	str	r2, [r4, #4]
 8026066:	6023      	str	r3, [r4, #0]
 8026068:	e7ec      	b.n	8026044 <__ssvfiscanf_r+0x44>
 802606a:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 802606c:	4621      	mov	r1, r4
 802606e:	4630      	mov	r0, r6
 8026070:	4798      	blx	r3
 8026072:	2800      	cmp	r0, #0
 8026074:	d0e9      	beq.n	802604a <__ssvfiscanf_r+0x4a>
 8026076:	e7ed      	b.n	8026054 <__ssvfiscanf_r+0x54>
 8026078:	f1ba 0f25 	cmp.w	sl, #37	; 0x25
 802607c:	f040 8083 	bne.w	8026186 <__ssvfiscanf_r+0x186>
 8026080:	9341      	str	r3, [sp, #260]	; 0x104
 8026082:	9343      	str	r3, [sp, #268]	; 0x10c
 8026084:	7853      	ldrb	r3, [r2, #1]
 8026086:	2b2a      	cmp	r3, #42	; 0x2a
 8026088:	bf02      	ittt	eq
 802608a:	2310      	moveq	r3, #16
 802608c:	1c95      	addeq	r5, r2, #2
 802608e:	9341      	streq	r3, [sp, #260]	; 0x104
 8026090:	220a      	movs	r2, #10
 8026092:	46ab      	mov	fp, r5
 8026094:	f81b 1b01 	ldrb.w	r1, [fp], #1
 8026098:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 802609c:	2b09      	cmp	r3, #9
 802609e:	d91d      	bls.n	80260dc <__ssvfiscanf_r+0xdc>
 80260a0:	4891      	ldr	r0, [pc, #580]	; (80262e8 <__ssvfiscanf_r+0x2e8>)
 80260a2:	2203      	movs	r2, #3
 80260a4:	f7da f8ac 	bl	8000200 <memchr>
 80260a8:	b140      	cbz	r0, 80260bc <__ssvfiscanf_r+0xbc>
 80260aa:	2301      	movs	r3, #1
 80260ac:	eba0 0009 	sub.w	r0, r0, r9
 80260b0:	fa03 f000 	lsl.w	r0, r3, r0
 80260b4:	9b41      	ldr	r3, [sp, #260]	; 0x104
 80260b6:	4318      	orrs	r0, r3
 80260b8:	9041      	str	r0, [sp, #260]	; 0x104
 80260ba:	465d      	mov	r5, fp
 80260bc:	f815 3b01 	ldrb.w	r3, [r5], #1
 80260c0:	2b78      	cmp	r3, #120	; 0x78
 80260c2:	d806      	bhi.n	80260d2 <__ssvfiscanf_r+0xd2>
 80260c4:	2b57      	cmp	r3, #87	; 0x57
 80260c6:	d810      	bhi.n	80260ea <__ssvfiscanf_r+0xea>
 80260c8:	2b25      	cmp	r3, #37	; 0x25
 80260ca:	d05c      	beq.n	8026186 <__ssvfiscanf_r+0x186>
 80260cc:	d856      	bhi.n	802617c <__ssvfiscanf_r+0x17c>
 80260ce:	2b00      	cmp	r3, #0
 80260d0:	d074      	beq.n	80261bc <__ssvfiscanf_r+0x1bc>
 80260d2:	2303      	movs	r3, #3
 80260d4:	9347      	str	r3, [sp, #284]	; 0x11c
 80260d6:	230a      	movs	r3, #10
 80260d8:	9342      	str	r3, [sp, #264]	; 0x108
 80260da:	e081      	b.n	80261e0 <__ssvfiscanf_r+0x1e0>
 80260dc:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 80260de:	fb02 1303 	mla	r3, r2, r3, r1
 80260e2:	3b30      	subs	r3, #48	; 0x30
 80260e4:	9343      	str	r3, [sp, #268]	; 0x10c
 80260e6:	465d      	mov	r5, fp
 80260e8:	e7d3      	b.n	8026092 <__ssvfiscanf_r+0x92>
 80260ea:	f1a3 0258 	sub.w	r2, r3, #88	; 0x58
 80260ee:	2a20      	cmp	r2, #32
 80260f0:	d8ef      	bhi.n	80260d2 <__ssvfiscanf_r+0xd2>
 80260f2:	a101      	add	r1, pc, #4	; (adr r1, 80260f8 <__ssvfiscanf_r+0xf8>)
 80260f4:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 80260f8:	080261cb 	.word	0x080261cb
 80260fc:	080260d3 	.word	0x080260d3
 8026100:	080260d3 	.word	0x080260d3
 8026104:	08026229 	.word	0x08026229
 8026108:	080260d3 	.word	0x080260d3
 802610c:	080260d3 	.word	0x080260d3
 8026110:	080260d3 	.word	0x080260d3
 8026114:	080260d3 	.word	0x080260d3
 8026118:	080260d3 	.word	0x080260d3
 802611c:	080260d3 	.word	0x080260d3
 8026120:	080260d3 	.word	0x080260d3
 8026124:	0802623f 	.word	0x0802623f
 8026128:	08026215 	.word	0x08026215
 802612c:	08026183 	.word	0x08026183
 8026130:	08026183 	.word	0x08026183
 8026134:	08026183 	.word	0x08026183
 8026138:	080260d3 	.word	0x080260d3
 802613c:	08026219 	.word	0x08026219
 8026140:	080260d3 	.word	0x080260d3
 8026144:	080260d3 	.word	0x080260d3
 8026148:	080260d3 	.word	0x080260d3
 802614c:	080260d3 	.word	0x080260d3
 8026150:	0802624f 	.word	0x0802624f
 8026154:	08026221 	.word	0x08026221
 8026158:	080261c3 	.word	0x080261c3
 802615c:	080260d3 	.word	0x080260d3
 8026160:	080260d3 	.word	0x080260d3
 8026164:	0802624b 	.word	0x0802624b
 8026168:	080260d3 	.word	0x080260d3
 802616c:	08026215 	.word	0x08026215
 8026170:	080260d3 	.word	0x080260d3
 8026174:	080260d3 	.word	0x080260d3
 8026178:	080261cb 	.word	0x080261cb
 802617c:	3b45      	subs	r3, #69	; 0x45
 802617e:	2b02      	cmp	r3, #2
 8026180:	d8a7      	bhi.n	80260d2 <__ssvfiscanf_r+0xd2>
 8026182:	2305      	movs	r3, #5
 8026184:	e02b      	b.n	80261de <__ssvfiscanf_r+0x1de>
 8026186:	6863      	ldr	r3, [r4, #4]
 8026188:	2b00      	cmp	r3, #0
 802618a:	dd0d      	ble.n	80261a8 <__ssvfiscanf_r+0x1a8>
 802618c:	6823      	ldr	r3, [r4, #0]
 802618e:	781a      	ldrb	r2, [r3, #0]
 8026190:	4552      	cmp	r2, sl
 8026192:	f040 80a1 	bne.w	80262d8 <__ssvfiscanf_r+0x2d8>
 8026196:	3301      	adds	r3, #1
 8026198:	6862      	ldr	r2, [r4, #4]
 802619a:	6023      	str	r3, [r4, #0]
 802619c:	9b45      	ldr	r3, [sp, #276]	; 0x114
 802619e:	3a01      	subs	r2, #1
 80261a0:	3301      	adds	r3, #1
 80261a2:	6062      	str	r2, [r4, #4]
 80261a4:	9345      	str	r3, [sp, #276]	; 0x114
 80261a6:	e755      	b.n	8026054 <__ssvfiscanf_r+0x54>
 80261a8:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 80261aa:	4621      	mov	r1, r4
 80261ac:	4630      	mov	r0, r6
 80261ae:	4798      	blx	r3
 80261b0:	2800      	cmp	r0, #0
 80261b2:	d0eb      	beq.n	802618c <__ssvfiscanf_r+0x18c>
 80261b4:	9844      	ldr	r0, [sp, #272]	; 0x110
 80261b6:	2800      	cmp	r0, #0
 80261b8:	f040 8084 	bne.w	80262c4 <__ssvfiscanf_r+0x2c4>
 80261bc:	f04f 30ff 	mov.w	r0, #4294967295
 80261c0:	e086      	b.n	80262d0 <__ssvfiscanf_r+0x2d0>
 80261c2:	9a41      	ldr	r2, [sp, #260]	; 0x104
 80261c4:	f042 0220 	orr.w	r2, r2, #32
 80261c8:	9241      	str	r2, [sp, #260]	; 0x104
 80261ca:	9a41      	ldr	r2, [sp, #260]	; 0x104
 80261cc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80261d0:	9241      	str	r2, [sp, #260]	; 0x104
 80261d2:	2210      	movs	r2, #16
 80261d4:	2b6f      	cmp	r3, #111	; 0x6f
 80261d6:	9242      	str	r2, [sp, #264]	; 0x108
 80261d8:	bf34      	ite	cc
 80261da:	2303      	movcc	r3, #3
 80261dc:	2304      	movcs	r3, #4
 80261de:	9347      	str	r3, [sp, #284]	; 0x11c
 80261e0:	6863      	ldr	r3, [r4, #4]
 80261e2:	2b00      	cmp	r3, #0
 80261e4:	dd41      	ble.n	802626a <__ssvfiscanf_r+0x26a>
 80261e6:	9b41      	ldr	r3, [sp, #260]	; 0x104
 80261e8:	0659      	lsls	r1, r3, #25
 80261ea:	d404      	bmi.n	80261f6 <__ssvfiscanf_r+0x1f6>
 80261ec:	6823      	ldr	r3, [r4, #0]
 80261ee:	781a      	ldrb	r2, [r3, #0]
 80261f0:	5cba      	ldrb	r2, [r7, r2]
 80261f2:	0712      	lsls	r2, r2, #28
 80261f4:	d440      	bmi.n	8026278 <__ssvfiscanf_r+0x278>
 80261f6:	9b47      	ldr	r3, [sp, #284]	; 0x11c
 80261f8:	2b02      	cmp	r3, #2
 80261fa:	dc4f      	bgt.n	802629c <__ssvfiscanf_r+0x29c>
 80261fc:	466b      	mov	r3, sp
 80261fe:	4622      	mov	r2, r4
 8026200:	a941      	add	r1, sp, #260	; 0x104
 8026202:	4630      	mov	r0, r6
 8026204:	f000 f874 	bl	80262f0 <_scanf_chars>
 8026208:	2801      	cmp	r0, #1
 802620a:	d065      	beq.n	80262d8 <__ssvfiscanf_r+0x2d8>
 802620c:	2802      	cmp	r0, #2
 802620e:	f47f af21 	bne.w	8026054 <__ssvfiscanf_r+0x54>
 8026212:	e7cf      	b.n	80261b4 <__ssvfiscanf_r+0x1b4>
 8026214:	220a      	movs	r2, #10
 8026216:	e7dd      	b.n	80261d4 <__ssvfiscanf_r+0x1d4>
 8026218:	2300      	movs	r3, #0
 802621a:	9342      	str	r3, [sp, #264]	; 0x108
 802621c:	2303      	movs	r3, #3
 802621e:	e7de      	b.n	80261de <__ssvfiscanf_r+0x1de>
 8026220:	2308      	movs	r3, #8
 8026222:	9342      	str	r3, [sp, #264]	; 0x108
 8026224:	2304      	movs	r3, #4
 8026226:	e7da      	b.n	80261de <__ssvfiscanf_r+0x1de>
 8026228:	4629      	mov	r1, r5
 802622a:	4640      	mov	r0, r8
 802622c:	f000 f9ac 	bl	8026588 <__sccl>
 8026230:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8026232:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8026236:	9341      	str	r3, [sp, #260]	; 0x104
 8026238:	4605      	mov	r5, r0
 802623a:	2301      	movs	r3, #1
 802623c:	e7cf      	b.n	80261de <__ssvfiscanf_r+0x1de>
 802623e:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8026240:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8026244:	9341      	str	r3, [sp, #260]	; 0x104
 8026246:	2300      	movs	r3, #0
 8026248:	e7c9      	b.n	80261de <__ssvfiscanf_r+0x1de>
 802624a:	2302      	movs	r3, #2
 802624c:	e7c7      	b.n	80261de <__ssvfiscanf_r+0x1de>
 802624e:	9841      	ldr	r0, [sp, #260]	; 0x104
 8026250:	06c3      	lsls	r3, r0, #27
 8026252:	f53f aeff 	bmi.w	8026054 <__ssvfiscanf_r+0x54>
 8026256:	9b00      	ldr	r3, [sp, #0]
 8026258:	9a45      	ldr	r2, [sp, #276]	; 0x114
 802625a:	1d19      	adds	r1, r3, #4
 802625c:	9100      	str	r1, [sp, #0]
 802625e:	681b      	ldr	r3, [r3, #0]
 8026260:	07c0      	lsls	r0, r0, #31
 8026262:	bf4c      	ite	mi
 8026264:	801a      	strhmi	r2, [r3, #0]
 8026266:	601a      	strpl	r2, [r3, #0]
 8026268:	e6f4      	b.n	8026054 <__ssvfiscanf_r+0x54>
 802626a:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 802626c:	4621      	mov	r1, r4
 802626e:	4630      	mov	r0, r6
 8026270:	4798      	blx	r3
 8026272:	2800      	cmp	r0, #0
 8026274:	d0b7      	beq.n	80261e6 <__ssvfiscanf_r+0x1e6>
 8026276:	e79d      	b.n	80261b4 <__ssvfiscanf_r+0x1b4>
 8026278:	9a45      	ldr	r2, [sp, #276]	; 0x114
 802627a:	3201      	adds	r2, #1
 802627c:	9245      	str	r2, [sp, #276]	; 0x114
 802627e:	6862      	ldr	r2, [r4, #4]
 8026280:	3a01      	subs	r2, #1
 8026282:	2a00      	cmp	r2, #0
 8026284:	6062      	str	r2, [r4, #4]
 8026286:	dd02      	ble.n	802628e <__ssvfiscanf_r+0x28e>
 8026288:	3301      	adds	r3, #1
 802628a:	6023      	str	r3, [r4, #0]
 802628c:	e7ae      	b.n	80261ec <__ssvfiscanf_r+0x1ec>
 802628e:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8026290:	4621      	mov	r1, r4
 8026292:	4630      	mov	r0, r6
 8026294:	4798      	blx	r3
 8026296:	2800      	cmp	r0, #0
 8026298:	d0a8      	beq.n	80261ec <__ssvfiscanf_r+0x1ec>
 802629a:	e78b      	b.n	80261b4 <__ssvfiscanf_r+0x1b4>
 802629c:	2b04      	cmp	r3, #4
 802629e:	dc06      	bgt.n	80262ae <__ssvfiscanf_r+0x2ae>
 80262a0:	466b      	mov	r3, sp
 80262a2:	4622      	mov	r2, r4
 80262a4:	a941      	add	r1, sp, #260	; 0x104
 80262a6:	4630      	mov	r0, r6
 80262a8:	f000 f87a 	bl	80263a0 <_scanf_i>
 80262ac:	e7ac      	b.n	8026208 <__ssvfiscanf_r+0x208>
 80262ae:	4b0f      	ldr	r3, [pc, #60]	; (80262ec <__ssvfiscanf_r+0x2ec>)
 80262b0:	2b00      	cmp	r3, #0
 80262b2:	f43f aecf 	beq.w	8026054 <__ssvfiscanf_r+0x54>
 80262b6:	466b      	mov	r3, sp
 80262b8:	4622      	mov	r2, r4
 80262ba:	a941      	add	r1, sp, #260	; 0x104
 80262bc:	4630      	mov	r0, r6
 80262be:	f3af 8000 	nop.w
 80262c2:	e7a1      	b.n	8026208 <__ssvfiscanf_r+0x208>
 80262c4:	89a3      	ldrh	r3, [r4, #12]
 80262c6:	f013 0f40 	tst.w	r3, #64	; 0x40
 80262ca:	bf18      	it	ne
 80262cc:	f04f 30ff 	movne.w	r0, #4294967295
 80262d0:	f50d 7d23 	add.w	sp, sp, #652	; 0x28c
 80262d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80262d8:	9844      	ldr	r0, [sp, #272]	; 0x110
 80262da:	e7f9      	b.n	80262d0 <__ssvfiscanf_r+0x2d0>
 80262dc:	08025f4d 	.word	0x08025f4d
 80262e0:	08025fc7 	.word	0x08025fc7
 80262e4:	0802b835 	.word	0x0802b835
 80262e8:	0802b7c6 	.word	0x0802b7c6
 80262ec:	00000000 	.word	0x00000000

080262f0 <_scanf_chars>:
 80262f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80262f4:	4615      	mov	r5, r2
 80262f6:	688a      	ldr	r2, [r1, #8]
 80262f8:	4680      	mov	r8, r0
 80262fa:	460c      	mov	r4, r1
 80262fc:	b932      	cbnz	r2, 802630c <_scanf_chars+0x1c>
 80262fe:	698a      	ldr	r2, [r1, #24]
 8026300:	2a00      	cmp	r2, #0
 8026302:	bf0c      	ite	eq
 8026304:	2201      	moveq	r2, #1
 8026306:	f04f 32ff 	movne.w	r2, #4294967295
 802630a:	608a      	str	r2, [r1, #8]
 802630c:	6822      	ldr	r2, [r4, #0]
 802630e:	f8df 908c 	ldr.w	r9, [pc, #140]	; 802639c <_scanf_chars+0xac>
 8026312:	06d1      	lsls	r1, r2, #27
 8026314:	bf5f      	itttt	pl
 8026316:	681a      	ldrpl	r2, [r3, #0]
 8026318:	1d11      	addpl	r1, r2, #4
 802631a:	6019      	strpl	r1, [r3, #0]
 802631c:	6816      	ldrpl	r6, [r2, #0]
 802631e:	2700      	movs	r7, #0
 8026320:	69a0      	ldr	r0, [r4, #24]
 8026322:	b188      	cbz	r0, 8026348 <_scanf_chars+0x58>
 8026324:	2801      	cmp	r0, #1
 8026326:	d107      	bne.n	8026338 <_scanf_chars+0x48>
 8026328:	682b      	ldr	r3, [r5, #0]
 802632a:	781a      	ldrb	r2, [r3, #0]
 802632c:	6963      	ldr	r3, [r4, #20]
 802632e:	5c9b      	ldrb	r3, [r3, r2]
 8026330:	b953      	cbnz	r3, 8026348 <_scanf_chars+0x58>
 8026332:	bb27      	cbnz	r7, 802637e <_scanf_chars+0x8e>
 8026334:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8026338:	2802      	cmp	r0, #2
 802633a:	d120      	bne.n	802637e <_scanf_chars+0x8e>
 802633c:	682b      	ldr	r3, [r5, #0]
 802633e:	781b      	ldrb	r3, [r3, #0]
 8026340:	f813 3009 	ldrb.w	r3, [r3, r9]
 8026344:	071b      	lsls	r3, r3, #28
 8026346:	d41a      	bmi.n	802637e <_scanf_chars+0x8e>
 8026348:	6823      	ldr	r3, [r4, #0]
 802634a:	06da      	lsls	r2, r3, #27
 802634c:	bf5e      	ittt	pl
 802634e:	682b      	ldrpl	r3, [r5, #0]
 8026350:	781b      	ldrbpl	r3, [r3, #0]
 8026352:	f806 3b01 	strbpl.w	r3, [r6], #1
 8026356:	682a      	ldr	r2, [r5, #0]
 8026358:	686b      	ldr	r3, [r5, #4]
 802635a:	3201      	adds	r2, #1
 802635c:	602a      	str	r2, [r5, #0]
 802635e:	68a2      	ldr	r2, [r4, #8]
 8026360:	3b01      	subs	r3, #1
 8026362:	3a01      	subs	r2, #1
 8026364:	606b      	str	r3, [r5, #4]
 8026366:	3701      	adds	r7, #1
 8026368:	60a2      	str	r2, [r4, #8]
 802636a:	b142      	cbz	r2, 802637e <_scanf_chars+0x8e>
 802636c:	2b00      	cmp	r3, #0
 802636e:	dcd7      	bgt.n	8026320 <_scanf_chars+0x30>
 8026370:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8026374:	4629      	mov	r1, r5
 8026376:	4640      	mov	r0, r8
 8026378:	4798      	blx	r3
 802637a:	2800      	cmp	r0, #0
 802637c:	d0d0      	beq.n	8026320 <_scanf_chars+0x30>
 802637e:	6823      	ldr	r3, [r4, #0]
 8026380:	f013 0310 	ands.w	r3, r3, #16
 8026384:	d105      	bne.n	8026392 <_scanf_chars+0xa2>
 8026386:	68e2      	ldr	r2, [r4, #12]
 8026388:	3201      	adds	r2, #1
 802638a:	60e2      	str	r2, [r4, #12]
 802638c:	69a2      	ldr	r2, [r4, #24]
 802638e:	b102      	cbz	r2, 8026392 <_scanf_chars+0xa2>
 8026390:	7033      	strb	r3, [r6, #0]
 8026392:	6923      	ldr	r3, [r4, #16]
 8026394:	441f      	add	r7, r3
 8026396:	6127      	str	r7, [r4, #16]
 8026398:	2000      	movs	r0, #0
 802639a:	e7cb      	b.n	8026334 <_scanf_chars+0x44>
 802639c:	0802b835 	.word	0x0802b835

080263a0 <_scanf_i>:
 80263a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80263a4:	4698      	mov	r8, r3
 80263a6:	4b74      	ldr	r3, [pc, #464]	; (8026578 <_scanf_i+0x1d8>)
 80263a8:	460c      	mov	r4, r1
 80263aa:	4682      	mov	sl, r0
 80263ac:	4616      	mov	r6, r2
 80263ae:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 80263b2:	b087      	sub	sp, #28
 80263b4:	ab03      	add	r3, sp, #12
 80263b6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80263ba:	4b70      	ldr	r3, [pc, #448]	; (802657c <_scanf_i+0x1dc>)
 80263bc:	69a1      	ldr	r1, [r4, #24]
 80263be:	4a70      	ldr	r2, [pc, #448]	; (8026580 <_scanf_i+0x1e0>)
 80263c0:	2903      	cmp	r1, #3
 80263c2:	bf18      	it	ne
 80263c4:	461a      	movne	r2, r3
 80263c6:	68a3      	ldr	r3, [r4, #8]
 80263c8:	9201      	str	r2, [sp, #4]
 80263ca:	1e5a      	subs	r2, r3, #1
 80263cc:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 80263d0:	bf88      	it	hi
 80263d2:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 80263d6:	4627      	mov	r7, r4
 80263d8:	bf82      	ittt	hi
 80263da:	eb03 0905 	addhi.w	r9, r3, r5
 80263de:	f240 135d 	movwhi	r3, #349	; 0x15d
 80263e2:	60a3      	strhi	r3, [r4, #8]
 80263e4:	f857 3b1c 	ldr.w	r3, [r7], #28
 80263e8:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
 80263ec:	bf98      	it	ls
 80263ee:	f04f 0900 	movls.w	r9, #0
 80263f2:	6023      	str	r3, [r4, #0]
 80263f4:	463d      	mov	r5, r7
 80263f6:	f04f 0b00 	mov.w	fp, #0
 80263fa:	6831      	ldr	r1, [r6, #0]
 80263fc:	ab03      	add	r3, sp, #12
 80263fe:	7809      	ldrb	r1, [r1, #0]
 8026400:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
 8026404:	2202      	movs	r2, #2
 8026406:	f7d9 fefb 	bl	8000200 <memchr>
 802640a:	b328      	cbz	r0, 8026458 <_scanf_i+0xb8>
 802640c:	f1bb 0f01 	cmp.w	fp, #1
 8026410:	d159      	bne.n	80264c6 <_scanf_i+0x126>
 8026412:	6862      	ldr	r2, [r4, #4]
 8026414:	b92a      	cbnz	r2, 8026422 <_scanf_i+0x82>
 8026416:	6822      	ldr	r2, [r4, #0]
 8026418:	2308      	movs	r3, #8
 802641a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 802641e:	6063      	str	r3, [r4, #4]
 8026420:	6022      	str	r2, [r4, #0]
 8026422:	6822      	ldr	r2, [r4, #0]
 8026424:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
 8026428:	6022      	str	r2, [r4, #0]
 802642a:	68a2      	ldr	r2, [r4, #8]
 802642c:	1e51      	subs	r1, r2, #1
 802642e:	60a1      	str	r1, [r4, #8]
 8026430:	b192      	cbz	r2, 8026458 <_scanf_i+0xb8>
 8026432:	6832      	ldr	r2, [r6, #0]
 8026434:	1c51      	adds	r1, r2, #1
 8026436:	6031      	str	r1, [r6, #0]
 8026438:	7812      	ldrb	r2, [r2, #0]
 802643a:	f805 2b01 	strb.w	r2, [r5], #1
 802643e:	6872      	ldr	r2, [r6, #4]
 8026440:	3a01      	subs	r2, #1
 8026442:	2a00      	cmp	r2, #0
 8026444:	6072      	str	r2, [r6, #4]
 8026446:	dc07      	bgt.n	8026458 <_scanf_i+0xb8>
 8026448:	f8d4 2180 	ldr.w	r2, [r4, #384]	; 0x180
 802644c:	4631      	mov	r1, r6
 802644e:	4650      	mov	r0, sl
 8026450:	4790      	blx	r2
 8026452:	2800      	cmp	r0, #0
 8026454:	f040 8085 	bne.w	8026562 <_scanf_i+0x1c2>
 8026458:	f10b 0b01 	add.w	fp, fp, #1
 802645c:	f1bb 0f03 	cmp.w	fp, #3
 8026460:	d1cb      	bne.n	80263fa <_scanf_i+0x5a>
 8026462:	6863      	ldr	r3, [r4, #4]
 8026464:	b90b      	cbnz	r3, 802646a <_scanf_i+0xca>
 8026466:	230a      	movs	r3, #10
 8026468:	6063      	str	r3, [r4, #4]
 802646a:	6863      	ldr	r3, [r4, #4]
 802646c:	4945      	ldr	r1, [pc, #276]	; (8026584 <_scanf_i+0x1e4>)
 802646e:	6960      	ldr	r0, [r4, #20]
 8026470:	1ac9      	subs	r1, r1, r3
 8026472:	f000 f889 	bl	8026588 <__sccl>
 8026476:	f04f 0b00 	mov.w	fp, #0
 802647a:	68a3      	ldr	r3, [r4, #8]
 802647c:	6822      	ldr	r2, [r4, #0]
 802647e:	2b00      	cmp	r3, #0
 8026480:	d03d      	beq.n	80264fe <_scanf_i+0x15e>
 8026482:	6831      	ldr	r1, [r6, #0]
 8026484:	6960      	ldr	r0, [r4, #20]
 8026486:	f891 c000 	ldrb.w	ip, [r1]
 802648a:	f810 000c 	ldrb.w	r0, [r0, ip]
 802648e:	2800      	cmp	r0, #0
 8026490:	d035      	beq.n	80264fe <_scanf_i+0x15e>
 8026492:	f1bc 0f30 	cmp.w	ip, #48	; 0x30
 8026496:	d124      	bne.n	80264e2 <_scanf_i+0x142>
 8026498:	0510      	lsls	r0, r2, #20
 802649a:	d522      	bpl.n	80264e2 <_scanf_i+0x142>
 802649c:	f10b 0b01 	add.w	fp, fp, #1
 80264a0:	f1b9 0f00 	cmp.w	r9, #0
 80264a4:	d003      	beq.n	80264ae <_scanf_i+0x10e>
 80264a6:	3301      	adds	r3, #1
 80264a8:	f109 39ff 	add.w	r9, r9, #4294967295
 80264ac:	60a3      	str	r3, [r4, #8]
 80264ae:	6873      	ldr	r3, [r6, #4]
 80264b0:	3b01      	subs	r3, #1
 80264b2:	2b00      	cmp	r3, #0
 80264b4:	6073      	str	r3, [r6, #4]
 80264b6:	dd1b      	ble.n	80264f0 <_scanf_i+0x150>
 80264b8:	6833      	ldr	r3, [r6, #0]
 80264ba:	3301      	adds	r3, #1
 80264bc:	6033      	str	r3, [r6, #0]
 80264be:	68a3      	ldr	r3, [r4, #8]
 80264c0:	3b01      	subs	r3, #1
 80264c2:	60a3      	str	r3, [r4, #8]
 80264c4:	e7d9      	b.n	802647a <_scanf_i+0xda>
 80264c6:	f1bb 0f02 	cmp.w	fp, #2
 80264ca:	d1ae      	bne.n	802642a <_scanf_i+0x8a>
 80264cc:	6822      	ldr	r2, [r4, #0]
 80264ce:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
 80264d2:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 80264d6:	d1bf      	bne.n	8026458 <_scanf_i+0xb8>
 80264d8:	2310      	movs	r3, #16
 80264da:	6063      	str	r3, [r4, #4]
 80264dc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80264e0:	e7a2      	b.n	8026428 <_scanf_i+0x88>
 80264e2:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
 80264e6:	6022      	str	r2, [r4, #0]
 80264e8:	780b      	ldrb	r3, [r1, #0]
 80264ea:	f805 3b01 	strb.w	r3, [r5], #1
 80264ee:	e7de      	b.n	80264ae <_scanf_i+0x10e>
 80264f0:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 80264f4:	4631      	mov	r1, r6
 80264f6:	4650      	mov	r0, sl
 80264f8:	4798      	blx	r3
 80264fa:	2800      	cmp	r0, #0
 80264fc:	d0df      	beq.n	80264be <_scanf_i+0x11e>
 80264fe:	6823      	ldr	r3, [r4, #0]
 8026500:	05d9      	lsls	r1, r3, #23
 8026502:	d50d      	bpl.n	8026520 <_scanf_i+0x180>
 8026504:	42bd      	cmp	r5, r7
 8026506:	d909      	bls.n	802651c <_scanf_i+0x17c>
 8026508:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 802650c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8026510:	4632      	mov	r2, r6
 8026512:	4650      	mov	r0, sl
 8026514:	4798      	blx	r3
 8026516:	f105 39ff 	add.w	r9, r5, #4294967295
 802651a:	464d      	mov	r5, r9
 802651c:	42bd      	cmp	r5, r7
 802651e:	d028      	beq.n	8026572 <_scanf_i+0x1d2>
 8026520:	6822      	ldr	r2, [r4, #0]
 8026522:	f012 0210 	ands.w	r2, r2, #16
 8026526:	d113      	bne.n	8026550 <_scanf_i+0x1b0>
 8026528:	702a      	strb	r2, [r5, #0]
 802652a:	6863      	ldr	r3, [r4, #4]
 802652c:	9e01      	ldr	r6, [sp, #4]
 802652e:	4639      	mov	r1, r7
 8026530:	4650      	mov	r0, sl
 8026532:	47b0      	blx	r6
 8026534:	f8d8 3000 	ldr.w	r3, [r8]
 8026538:	6821      	ldr	r1, [r4, #0]
 802653a:	1d1a      	adds	r2, r3, #4
 802653c:	f8c8 2000 	str.w	r2, [r8]
 8026540:	f011 0f20 	tst.w	r1, #32
 8026544:	681b      	ldr	r3, [r3, #0]
 8026546:	d00f      	beq.n	8026568 <_scanf_i+0x1c8>
 8026548:	6018      	str	r0, [r3, #0]
 802654a:	68e3      	ldr	r3, [r4, #12]
 802654c:	3301      	adds	r3, #1
 802654e:	60e3      	str	r3, [r4, #12]
 8026550:	1bed      	subs	r5, r5, r7
 8026552:	44ab      	add	fp, r5
 8026554:	6925      	ldr	r5, [r4, #16]
 8026556:	445d      	add	r5, fp
 8026558:	6125      	str	r5, [r4, #16]
 802655a:	2000      	movs	r0, #0
 802655c:	b007      	add	sp, #28
 802655e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026562:	f04f 0b00 	mov.w	fp, #0
 8026566:	e7ca      	b.n	80264fe <_scanf_i+0x15e>
 8026568:	07ca      	lsls	r2, r1, #31
 802656a:	bf4c      	ite	mi
 802656c:	8018      	strhmi	r0, [r3, #0]
 802656e:	6018      	strpl	r0, [r3, #0]
 8026570:	e7eb      	b.n	802654a <_scanf_i+0x1aa>
 8026572:	2001      	movs	r0, #1
 8026574:	e7f2      	b.n	802655c <_scanf_i+0x1bc>
 8026576:	bf00      	nop
 8026578:	080267e0 	.word	0x080267e0
 802657c:	08025ec9 	.word	0x08025ec9
 8026580:	08026705 	.word	0x08026705
 8026584:	0802b94e 	.word	0x0802b94e

08026588 <__sccl>:
 8026588:	b570      	push	{r4, r5, r6, lr}
 802658a:	780b      	ldrb	r3, [r1, #0]
 802658c:	4604      	mov	r4, r0
 802658e:	2b5e      	cmp	r3, #94	; 0x5e
 8026590:	bf0b      	itete	eq
 8026592:	784b      	ldrbeq	r3, [r1, #1]
 8026594:	1c48      	addne	r0, r1, #1
 8026596:	1c88      	addeq	r0, r1, #2
 8026598:	2200      	movne	r2, #0
 802659a:	bf08      	it	eq
 802659c:	2201      	moveq	r2, #1
 802659e:	1e61      	subs	r1, r4, #1
 80265a0:	f104 05ff 	add.w	r5, r4, #255	; 0xff
 80265a4:	f801 2f01 	strb.w	r2, [r1, #1]!
 80265a8:	42a9      	cmp	r1, r5
 80265aa:	d1fb      	bne.n	80265a4 <__sccl+0x1c>
 80265ac:	b90b      	cbnz	r3, 80265b2 <__sccl+0x2a>
 80265ae:	3801      	subs	r0, #1
 80265b0:	bd70      	pop	{r4, r5, r6, pc}
 80265b2:	f082 0101 	eor.w	r1, r2, #1
 80265b6:	54e1      	strb	r1, [r4, r3]
 80265b8:	1c42      	adds	r2, r0, #1
 80265ba:	f812 5c01 	ldrb.w	r5, [r2, #-1]
 80265be:	2d2d      	cmp	r5, #45	; 0x2d
 80265c0:	f102 36ff 	add.w	r6, r2, #4294967295
 80265c4:	4610      	mov	r0, r2
 80265c6:	d006      	beq.n	80265d6 <__sccl+0x4e>
 80265c8:	2d5d      	cmp	r5, #93	; 0x5d
 80265ca:	d0f1      	beq.n	80265b0 <__sccl+0x28>
 80265cc:	b90d      	cbnz	r5, 80265d2 <__sccl+0x4a>
 80265ce:	4630      	mov	r0, r6
 80265d0:	e7ee      	b.n	80265b0 <__sccl+0x28>
 80265d2:	462b      	mov	r3, r5
 80265d4:	e7ef      	b.n	80265b6 <__sccl+0x2e>
 80265d6:	7816      	ldrb	r6, [r2, #0]
 80265d8:	2e5d      	cmp	r6, #93	; 0x5d
 80265da:	d0fa      	beq.n	80265d2 <__sccl+0x4a>
 80265dc:	42b3      	cmp	r3, r6
 80265de:	dcf8      	bgt.n	80265d2 <__sccl+0x4a>
 80265e0:	4618      	mov	r0, r3
 80265e2:	3001      	adds	r0, #1
 80265e4:	4286      	cmp	r6, r0
 80265e6:	5421      	strb	r1, [r4, r0]
 80265e8:	dcfb      	bgt.n	80265e2 <__sccl+0x5a>
 80265ea:	43d8      	mvns	r0, r3
 80265ec:	4430      	add	r0, r6
 80265ee:	1c5d      	adds	r5, r3, #1
 80265f0:	42b3      	cmp	r3, r6
 80265f2:	bfa8      	it	ge
 80265f4:	2000      	movge	r0, #0
 80265f6:	182b      	adds	r3, r5, r0
 80265f8:	3202      	adds	r2, #2
 80265fa:	e7de      	b.n	80265ba <__sccl+0x32>

080265fc <_strtol_l.isra.0>:
 80265fc:	2b01      	cmp	r3, #1
 80265fe:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026602:	d001      	beq.n	8026608 <_strtol_l.isra.0+0xc>
 8026604:	2b24      	cmp	r3, #36	; 0x24
 8026606:	d906      	bls.n	8026616 <_strtol_l.isra.0+0x1a>
 8026608:	f7fd ff5c 	bl	80244c4 <__errno>
 802660c:	2316      	movs	r3, #22
 802660e:	6003      	str	r3, [r0, #0]
 8026610:	2000      	movs	r0, #0
 8026612:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026616:	4f3a      	ldr	r7, [pc, #232]	; (8026700 <_strtol_l.isra.0+0x104>)
 8026618:	468e      	mov	lr, r1
 802661a:	4676      	mov	r6, lr
 802661c:	f81e 4b01 	ldrb.w	r4, [lr], #1
 8026620:	5de5      	ldrb	r5, [r4, r7]
 8026622:	f015 0508 	ands.w	r5, r5, #8
 8026626:	d1f8      	bne.n	802661a <_strtol_l.isra.0+0x1e>
 8026628:	2c2d      	cmp	r4, #45	; 0x2d
 802662a:	d134      	bne.n	8026696 <_strtol_l.isra.0+0x9a>
 802662c:	f89e 4000 	ldrb.w	r4, [lr]
 8026630:	f04f 0801 	mov.w	r8, #1
 8026634:	f106 0e02 	add.w	lr, r6, #2
 8026638:	2b00      	cmp	r3, #0
 802663a:	d05c      	beq.n	80266f6 <_strtol_l.isra.0+0xfa>
 802663c:	2b10      	cmp	r3, #16
 802663e:	d10c      	bne.n	802665a <_strtol_l.isra.0+0x5e>
 8026640:	2c30      	cmp	r4, #48	; 0x30
 8026642:	d10a      	bne.n	802665a <_strtol_l.isra.0+0x5e>
 8026644:	f89e 4000 	ldrb.w	r4, [lr]
 8026648:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 802664c:	2c58      	cmp	r4, #88	; 0x58
 802664e:	d14d      	bne.n	80266ec <_strtol_l.isra.0+0xf0>
 8026650:	f89e 4001 	ldrb.w	r4, [lr, #1]
 8026654:	2310      	movs	r3, #16
 8026656:	f10e 0e02 	add.w	lr, lr, #2
 802665a:	f108 4c00 	add.w	ip, r8, #2147483648	; 0x80000000
 802665e:	f10c 3cff 	add.w	ip, ip, #4294967295
 8026662:	2600      	movs	r6, #0
 8026664:	fbbc f9f3 	udiv	r9, ip, r3
 8026668:	4635      	mov	r5, r6
 802666a:	fb03 ca19 	mls	sl, r3, r9, ip
 802666e:	f1a4 0730 	sub.w	r7, r4, #48	; 0x30
 8026672:	2f09      	cmp	r7, #9
 8026674:	d818      	bhi.n	80266a8 <_strtol_l.isra.0+0xac>
 8026676:	463c      	mov	r4, r7
 8026678:	42a3      	cmp	r3, r4
 802667a:	dd24      	ble.n	80266c6 <_strtol_l.isra.0+0xca>
 802667c:	2e00      	cmp	r6, #0
 802667e:	db1f      	blt.n	80266c0 <_strtol_l.isra.0+0xc4>
 8026680:	45a9      	cmp	r9, r5
 8026682:	d31d      	bcc.n	80266c0 <_strtol_l.isra.0+0xc4>
 8026684:	d101      	bne.n	802668a <_strtol_l.isra.0+0x8e>
 8026686:	45a2      	cmp	sl, r4
 8026688:	db1a      	blt.n	80266c0 <_strtol_l.isra.0+0xc4>
 802668a:	fb05 4503 	mla	r5, r5, r3, r4
 802668e:	2601      	movs	r6, #1
 8026690:	f81e 4b01 	ldrb.w	r4, [lr], #1
 8026694:	e7eb      	b.n	802666e <_strtol_l.isra.0+0x72>
 8026696:	2c2b      	cmp	r4, #43	; 0x2b
 8026698:	bf08      	it	eq
 802669a:	f89e 4000 	ldrbeq.w	r4, [lr]
 802669e:	46a8      	mov	r8, r5
 80266a0:	bf08      	it	eq
 80266a2:	f106 0e02 	addeq.w	lr, r6, #2
 80266a6:	e7c7      	b.n	8026638 <_strtol_l.isra.0+0x3c>
 80266a8:	f1a4 0741 	sub.w	r7, r4, #65	; 0x41
 80266ac:	2f19      	cmp	r7, #25
 80266ae:	d801      	bhi.n	80266b4 <_strtol_l.isra.0+0xb8>
 80266b0:	3c37      	subs	r4, #55	; 0x37
 80266b2:	e7e1      	b.n	8026678 <_strtol_l.isra.0+0x7c>
 80266b4:	f1a4 0761 	sub.w	r7, r4, #97	; 0x61
 80266b8:	2f19      	cmp	r7, #25
 80266ba:	d804      	bhi.n	80266c6 <_strtol_l.isra.0+0xca>
 80266bc:	3c57      	subs	r4, #87	; 0x57
 80266be:	e7db      	b.n	8026678 <_strtol_l.isra.0+0x7c>
 80266c0:	f04f 36ff 	mov.w	r6, #4294967295
 80266c4:	e7e4      	b.n	8026690 <_strtol_l.isra.0+0x94>
 80266c6:	2e00      	cmp	r6, #0
 80266c8:	da05      	bge.n	80266d6 <_strtol_l.isra.0+0xda>
 80266ca:	2322      	movs	r3, #34	; 0x22
 80266cc:	6003      	str	r3, [r0, #0]
 80266ce:	4665      	mov	r5, ip
 80266d0:	b942      	cbnz	r2, 80266e4 <_strtol_l.isra.0+0xe8>
 80266d2:	4628      	mov	r0, r5
 80266d4:	e79d      	b.n	8026612 <_strtol_l.isra.0+0x16>
 80266d6:	f1b8 0f00 	cmp.w	r8, #0
 80266da:	d000      	beq.n	80266de <_strtol_l.isra.0+0xe2>
 80266dc:	426d      	negs	r5, r5
 80266de:	2a00      	cmp	r2, #0
 80266e0:	d0f7      	beq.n	80266d2 <_strtol_l.isra.0+0xd6>
 80266e2:	b10e      	cbz	r6, 80266e8 <_strtol_l.isra.0+0xec>
 80266e4:	f10e 31ff 	add.w	r1, lr, #4294967295
 80266e8:	6011      	str	r1, [r2, #0]
 80266ea:	e7f2      	b.n	80266d2 <_strtol_l.isra.0+0xd6>
 80266ec:	2430      	movs	r4, #48	; 0x30
 80266ee:	2b00      	cmp	r3, #0
 80266f0:	d1b3      	bne.n	802665a <_strtol_l.isra.0+0x5e>
 80266f2:	2308      	movs	r3, #8
 80266f4:	e7b1      	b.n	802665a <_strtol_l.isra.0+0x5e>
 80266f6:	2c30      	cmp	r4, #48	; 0x30
 80266f8:	d0a4      	beq.n	8026644 <_strtol_l.isra.0+0x48>
 80266fa:	230a      	movs	r3, #10
 80266fc:	e7ad      	b.n	802665a <_strtol_l.isra.0+0x5e>
 80266fe:	bf00      	nop
 8026700:	0802b835 	.word	0x0802b835

08026704 <_strtol_r>:
 8026704:	f7ff bf7a 	b.w	80265fc <_strtol_l.isra.0>

08026708 <__submore>:
 8026708:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802670c:	460c      	mov	r4, r1
 802670e:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8026710:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8026714:	4299      	cmp	r1, r3
 8026716:	d11d      	bne.n	8026754 <__submore+0x4c>
 8026718:	f44f 6180 	mov.w	r1, #1024	; 0x400
 802671c:	f7fe f98a 	bl	8024a34 <_malloc_r>
 8026720:	b918      	cbnz	r0, 802672a <__submore+0x22>
 8026722:	f04f 30ff 	mov.w	r0, #4294967295
 8026726:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802672a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802672e:	63a3      	str	r3, [r4, #56]	; 0x38
 8026730:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8026734:	6360      	str	r0, [r4, #52]	; 0x34
 8026736:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
 802673a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 802673e:	f880 33fe 	strb.w	r3, [r0, #1022]	; 0x3fe
 8026742:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8026746:	f880 33fd 	strb.w	r3, [r0, #1021]	; 0x3fd
 802674a:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
 802674e:	6020      	str	r0, [r4, #0]
 8026750:	2000      	movs	r0, #0
 8026752:	e7e8      	b.n	8026726 <__submore+0x1e>
 8026754:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 8026756:	0077      	lsls	r7, r6, #1
 8026758:	463a      	mov	r2, r7
 802675a:	f7ff fabb 	bl	8025cd4 <_realloc_r>
 802675e:	4605      	mov	r5, r0
 8026760:	2800      	cmp	r0, #0
 8026762:	d0de      	beq.n	8026722 <__submore+0x1a>
 8026764:	eb00 0806 	add.w	r8, r0, r6
 8026768:	4601      	mov	r1, r0
 802676a:	4632      	mov	r2, r6
 802676c:	4640      	mov	r0, r8
 802676e:	f7fe f8fb 	bl	8024968 <memcpy>
 8026772:	e9c4 570d 	strd	r5, r7, [r4, #52]	; 0x34
 8026776:	f8c4 8000 	str.w	r8, [r4]
 802677a:	e7e9      	b.n	8026750 <__submore+0x48>

0802677c <_init>:
 802677c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802677e:	bf00      	nop
 8026780:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8026782:	bc08      	pop	{r3}
 8026784:	469e      	mov	lr, r3
 8026786:	4770      	bx	lr

08026788 <_fini>:
 8026788:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802678a:	bf00      	nop
 802678c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802678e:	bc08      	pop	{r3}
 8026790:	469e      	mov	lr, r3
 8026792:	4770      	bx	lr
